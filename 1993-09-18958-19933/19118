Newsgroups: comp.arch,sci.crypt
Path: msuinfo!agate!headwall.Stanford.EDU!CSD-NewsHost.Stanford.EDU!SAIL.Stanford.EDU!andy
From: andy@SAIL.Stanford.EDU (Andy Freeman)
Subject: Re: Putting Copy Protection in the CPU
Message-ID: <1993Sep7.192738.20402@CSD-NewsHost.Stanford.EDU>
Sender: news@CSD-NewsHost.Stanford.EDU
Organization: Computer Science Department,  Stanford University.
References: <1993Aug31.114242.933@cs.su.oz.au>
Date: Tue, 7 Sep 1993 19:27:38 GMT
Lines: 29
Xref: msuinfo comp.arch:43644 sci.crypt:19118

In article <1993Aug31.114242.933@cs.su.oz.au> mrj@cs.su.oz.au (Mark James) writes:
>One way to robustly implement protection against illegal copying
>of software would be to put it into the CPU.
>
>Software would be purchased over the phone, or at a store,
>to run on a particular (individual) CPU chip (identified by an
>id number).

Note that one can get almost all of the benefits without globally
unique numbers.  In fact, I suspect that a number-space of only 1-100k
numbers would provide 99% of the benefits.  The HUGE advantage of a
finite number-space is that the fab folks already use duplicate masks,
so they could "cheaply" customize those masks to provide the required
"semi-unique" serial numbers.

However, there are two factors to consider.  CPU makers LIKE piracy
because it sells CPUs.  Moreover, piracy-protection benefits PIRATES
more than it benefits anyone else, and the benefit increases with the
protection level and the cost of the protected item.

>It would be possible to purchase a second copy for
>a notebook-type CPU for a small additional charge.

>but software prices should come down with a reduction in piracy.

Someone is confusing "would be nice" with reality.

-andy
--
