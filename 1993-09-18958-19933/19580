Newsgroups: sci.crypt,comp.org.eff.talkk
Path: msuinfo!agate!library.ucla.edu!news.mic.ucla.edu!unixg.ubc.ca!unixg.ubc.ca!acs.ucalgary.ca!cpsc.ucalgary.ca!debug!lfmcal!lloyd
From: lloyd@lfmcal.cuc.ab.ca (Lloyd Miller)
Subject: Re: help me fight NSA
Followup-To: sci.crypt,comp.org.eff.talkk
References: <gradyCDBH3I.BF4@netcom.com> <1993Sep14.190222.10385@bnr.ca>
Organization: Lloyd's Linux
Date: Wed, 22 Sep 1993 09:18:26 GMT
X-Newsreader: TIN [version 1.2 PL0]
Message-ID: <CDr0Ir.1Lq@lfmcal.cuc.ab.ca>
Lines: 24

Eric Rosenquist (rosenqui@bnr.ca) wrote:
> It doesn't actually contain source code, but Annex C (Annex D in the
> '93 draft) of CCITT X.509 / ISO9594-8 describes the methods of RSA
> with some algebraic notation describing the math involved.  If that
> weren't strong enough, they cite the RSA paper "Rivest, R.L., Shamir,
> A., and Adleman, L.  A Method for Obtaining Digital Signatures and
> Public-key Cryptosystems, Communications of the ACM, 21, 2 (February
> 1978), 120-126."

> I haven't read the RSA paper, but I would guess that it (and/or the
> RSA patent application itself) disclose the details sufficiently that
> any competent programmer could create an executable, which IMHO is a
> reasonable argument in your favour.  Having source merely saves a
> programmer some time vs. implementing the code from a description. 

I can confirm that. I have read the CACM paper and with a bit of help
from Knuth vol#2, I was able to implement a RSA system with key
generation, encryption and decryption modules.

The hard part was getting the long arithmetic to work right, not the
RSA algorithms. Nowadays you can use a standard multiprecision
arithmetic package and do the job MUCH more easily.
-- 
 Lloyd_Miller@f57.n17.z1.fidonet.org
