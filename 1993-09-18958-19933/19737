Path: msuinfo!agate!spool.mu.edu!darwin.sura.net!haven.umd.edu!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson)
Newsgroups: sci.crypt
Subject: Re: Will this scheme work ...
Date: 26 Sep 1993 16:46:41 -0400
Organization: University of Maryland, Baltimore County Campus
Lines: 43
Sender: olson@umbc.edu (Mr. Bryan G. Olson; CMSC (G))
Distribution: world
Message-ID: <284v3hINNkj@umbc7.umbc.edu>
References: <1993Sep25.055607.4810@cs.cornell.edu>
NNTP-Posting-Host: umbc7.umbc.edu


In article <1993Sep25.055607.4810@cs.cornell.edu>, moudgill@cs.cornell.edu ( Mayan Moudgill) writes:
|> The Problem:
|> A group of people are playing a game over e-mail. They need to throw dice
|> every turn. Unfortunately, they can't find somebody ``trustworthy'' to
|> do it for them. So, how can they throw dice
|> 
|> A Solution?:
|> Set up a mail server that accepts a message of the form ``throw N dice,
[...]
|> :)
|> Mayan

Solutions relying on trusted servers are considered inferior
to solutions which regard all parties as adversaries.

Here's an engineered solution:

To generate a number {1..n} every player chooses a random 
number in {1..n} and a random key to a conventional cipher.
Each player encrypts his number with his key, and sends the
result in a signed message to each of the other players.

After each player gets a signed message from each of the other
players, she sends her key to each of the other players.

Now each player can find all the chosen numbers, and the
"dice rolled" number is one plus the sum of all these mod n.

If we assume that given an encrypted number, a player can not
determine the number with probabillity greater than 1/n, then 
if any player chooses her number randomly, the total should
be uniformly distributed in {1..n}.

Early stopping is a problem, although at least it's detectable.

Theorists will not like this solution, since I can't prove that
the abillity to cheat implies the abillity to violate some
reasonable cryptographic assumption, but it should be good 
enough for most game players.

Bryan Olson
olson@umbc.edu
