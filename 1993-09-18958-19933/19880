Newsgroups: comp.security.misc,sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!pipex!warwick!news.dcs.warwick.ac.uk!rince
From: rince@dcs.warwick.ac.uk (James Bonfield)
Subject: Re: DES is dead...
Message-ID: <1993Sep29.154605.7293@dcs.warwick.ac.uk>
Sender: news@dcs.warwick.ac.uk (Network News)
Nntp-Posting-Host: stone
Organization: Department of Computer Science, Warwick University, England
References: <Sep.7.00.34.20.1993.15481@net.bio.net> <2878dh$jjo@bbs.pnl.gov> <287rk9$msv@rome.software.com> <CE2yv5.2J7@news.claremont.edu> <28aafu$3e7@iskut.ucs.ubc.ca>
Date: Wed, 29 Sep 1993 15:46:05 GMT
Lines: 26
Xref: msuinfo comp.security.misc:5387 sci.crypt:19880

In <28aafu$3e7@iskut.ucs.ubc.ca> unruh@physics.ubc.ca (William Unruh) writes:
> What is the behaviour of DES on a given 64 bit plaintext. If I know
> the mapping of a single 64bit plaintext to 64 bit encrypted, does that
> uniquly identify the key? Or are there multiple mappings for a given 
> 64 bits. ( I supose this is the same as asking whether or not the Unix
> crypt(3) is one to one)

I believe DES is a one to one mapping.

> Since for its encryption function one can easily defeat this approach
> by useing say triple DES, this does not seem that much of a danger-
> Howver it does say that any Unix password is now completely open to
> anyone with the $1M --Time for a new password algorithm ( as if we did
> not already know that).

I am unsure of whether the original claim was based on the standard DES
algorithm, or the UNIX variety. To be clear, the difference is that UNIX uses
a salt to modify the tables (4096 varities) and also encrypts something like
25 times. This bumps up the task considerably, but still only by a linear
amount.

I imagine the original attack mentioned was for standard DES. If not then the
arguments regarding needing the plaintext are void - the UNIX crypt function
uses a known (entirely null I think) plaintext.

	James
