Newsgroups: comp.arch,sci.crypt
Path: msuinfo!agate!doc.ic.ac.uk!uknet!festival!dcs.ed.ac.uk!kc
From: kc@dcs.ed.ac.uk (Kenneth Cameron)
Subject: Re: Putting Copy Protection in the CPU
Message-ID: <CCML6M.85u@dcs.ed.ac.uk>
Sender: cnews@dcs.ed.ac.uk (UseNet News Admin)
Organization: Department of Computer Science, University of Edinburgh
References: <1993Aug31.114242.933@cs.su.oz.au>
Date: Tue, 31 Aug 1993 13:23:09 GMT
Lines: 40
Xref: msuinfo comp.arch:43485 sci.crypt:18963

In article <1993Aug31.114242.933@cs.su.oz.au> mrj@cs.su.oz.au (Mark James) writes:
>One way to robustly implement protection against illegal copying
>of software would be to put it into the CPU.

>Software would be purchased over the phone, or at a store,
>to run on a particular (individual) CPU chip (identified by an
>id number).  It would be possible to purchase a second copy for

I don't usually read sci.crypt so if this had n't been cross posted to
comp.arch I would n't have seen it.

Oddly enough I was discussing a similar idea with some folks at lunchtime
today. The idea I came up with was aimed at games consoles but may extend
to others areas:

Imagine a company releases a new CD based games console. For cost reasons
the CD reader will be burried in a big custom chip along with lots of other
bits of the design. Now suppose the reader can be given a small bit string
which is used to "decrypt" the CD as each section is read into memory.
This does n't have to be too secure as it is going to be assumed that the
string becomes public knowledge. The security comes in two parts. The first
is that each chip has a unique private key and displays it's public key on
powerup. The CDs produced by the games company have the full game on them,
but without the code string only a demo is accessable. If you want to play
the full game you phone up the company, tell them your console id and
credit card number. You get the code encrypted with your public key. Thus it is
specific to the console.

The problem is that I could make up a key pair give the public code to
the company get an encrypted answer, decrypt it (I made up the key pair)
and then be able to pass the code onto others. However if every reader chip
knows the companies public key, and the code you get back from them has
had their private key applied then the console can confirm that the code
came from the company. A public key signature.

Now the only way to beat the system is to replace the reader chip. If this
is closely tied to the functioning of the console it's unlikely to catch on.
(If anyone from Segtendo is listening, please don't do this !)
-- 
Kenneth@Edinburgh.ac.uk                                         kc@dcs.ed.ac.uk
