Path: msuinfo!uwm.edu!cs.utexas.edu!swrinde!elroy.jpl.nasa.gov!isolar!isolar!not-for-mail
From: earle@isolar.Tujunga.CA.US (Greg Earle)
Newsgroups: comp.arch,sci.crypt
Subject: Re: Putting Copy Protection in the CPU
Followup-To: sci.crypt
Date: 6 Sep 1993 23:16:12 -0700
Organization: Personal Usenet site, Tujunga, CA USA
Lines: 22
Message-ID: <26h8vc$pid@isolar.Tujunga.CA.US>
References: <CCn3z6.4H7@ecf.toronto.edu>
NNTP-Posting-Host: isolar.tujunga.ca.us
Xref: msuinfo comp.arch:43636 sci.crypt:19108

In article <CCn3z6.4H7@ecf.toronto.edu>,
Marcus van Ierssel <grunt@ecf.toronto.edu> wrote:
>Really, how secure do you think this is?  On a single-user system such 
>as a PC, it would be easy to write a TSR-like beasty that intercepted
>system calls like gethostid() and responded with a valid id from the
>original system.  Host id's will only work on larger UNIX-like systems
>where ordinary users don't have root-like status.

I've got news for you.  It takes about 5 minutes to (a) write a gethostid()
replacement in assembler on a Sun; (b) compile/assemble it with -PIC to make
it a shareable module; and (c) ensure that it gets used instead of the libc
library version before running a program that uses gethostid() to query.  And
without any root priviledge whatsoever.

[This has nothing to do with CPUs or computer architecture, so I'm dropping
 comp.arch from the Followup-To: line.]

-- 
- Greg Earle
  Phone: (818) 353-8695			FAX: (818) 353-1877 [Call # again if
  Internet: earle@isolar.Tujunga.CA.US			     you get data tone]
  UUCP: isolar!earle@elroy.JPL.NASA.GOV a.k.a. ...!elroy!isolar!earle
