Newsgroups: sci.crypt,comp.security.misc,alt.security
Path: msuinfo!agate!howland.reston.ans.net!pipex!uknet!festival!dcs.ed.ac.uk!pdc
From: pdc@dcs.ed.ac.uk (Paul Crowley)
Subject: Re: Secure identification of software versions
Message-ID: <CE3wL8.13C@dcs.ed.ac.uk>
Followup-To: sci.crypt
Sender: cnews@dcs.ed.ac.uk (UseNet News Admin)
Organization: Edinburgh University
References: <1993Sep28.210824.15279@cs.ucla.edu>
Date: Wed, 29 Sep 1993 08:22:20 GMT
Lines: 22
Xref: msuinfo sci.crypt:19860 comp.security.misc:5367 alt.security:12297

Followups to sci.crypt.

Quoting geoff@ficus.cs.ucla.edu (Geoff Kuenning) in article <1993Sep28.210824.15279@cs.ucla.edu>:
[with deletions of bracketed parts]
>So, as an intellectual problem, is there any way to securely identify a
>remote client as having been compiled from a particular source?  Note
>that I am explicitly excluding binary distributions from the problem
>statement.

No, of course not.  Instead, what you need is a protocol that prevents
cheating even by specifically hacked programs.  Protocols using public
key crypto for guaranteed fair card dealing exist.  There is no reliable
way of checking if two players are really different people since if I
was really that determined I could get my key signed, change my name,
and get a key signed under a new name.  Perhaps a "these people are
different" signature is needed, which verifies that two public key
holders have been seen in the same room at the same time.  Even then,
it's hard to see how to make it secure.
  __                                  _____
\/ o\ Paul Crowley   pdc@dcs.ed.ac.uk \\ //
/\__/ Trust me. I know what I'm doing. \X/
PGPprint: 42A47697 54144EA4 BACFA9FD C9433347
