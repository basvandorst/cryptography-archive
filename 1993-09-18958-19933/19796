Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!uunet!olivea!pagesat!decwrl!csus.edu!netcom.com!hud
From: hud@netcom.com (Hud Nordin)
Subject: Re: NEW State Dept FLASH
Message-ID: <hudCE21G2.EyB@netcom.com>
Organization: Cybernetic Arts
References: <2492@indep1.UUCP> <hudCDz8ss.7pp@netcom.com> <2499@indep1.UUCP>
Date: Tue, 28 Sep 1993 08:12:01 GMT
Lines: 213


In article <2499@indep1.UUCP> clifto@indep1.UUCP (Cliff Sharp) writes:
>In article <hudCDz8ss.7pp@netcom.com> hud@netcom.com (Hud Nordin) writes:
>>In article <2492@indep1.UUCP> clifto@indep1.UUCP (Cliff Sharp) writes:
>>>In article <hudCDvI7I.3Fu@netcom.com> hud@netcom.com (Hud Nordin) writes:
[The observation that started it all:]
>>>>It's ironic that Art chooses to ask his question through the mechanism of
>>>>a series of ones and zeroes that were mere machine instructions to illuminate
>>>>a certain combination of phosphors on my computer screen.
>>>
>>>Sorry you've made that mistake.  The machine instructions which illuminate
>>>the phosphors on your screen reside in your own computer or terminal.  What  
>>>Art sent was ASCII code; your computer or terminal has machine instructions to
>>>take the code he (or anyone) sent, or for that matter any text file you can
>>>feed it (which is written in the same code), and make phosphors light on your
>>>screen. ... [Further condensation of the Time-Life
>>series on understanding computers, information which I managed to pick up
>>in my 25 years of systems programming, deleted. Thank you very much.]
>
>   I didn't intend to be condescending, I just wanted to make sure we
>covered every step of the procedure to avoid misunderstanding at any point.
>It also served to show a definite dichotomy between machine instructions
>and the ASCII code that Art originally sent at every step of the process,
>so no one else would jump in and argue that some unmentioned step actually
>DID send ASCII code to the CPU as instructions rather than data.
>
>>I didn't say his ones and zeroes were "machine language". I said they
>>were machine instructions. The machine of which I spoke consists of
>
>   Read my above unedited quote and see where I called his ones and zeroes
>"machine language".

I didn't say YOU said they were machine language.

You just pointed out that an ASCII portion of his message was not CPU
instructions, at least not ones that make any sense. Fine. I didn't call
his message machine language. And, you didn't call it machine language.

But, they are still machine instructions.

I.e., "I didn't say his ones and zeroes were 'machine language'. I said they
were machine instructions."

>   I believe this may be our point of contention.  I believe Art, in his
>original post, meant "machine instructions" to mean "machine language", and
>that indeed is what I took it as (and I am using the same convention).
>Without that distinction, it can be said that turning on the power to my
>computer is a "machine instruction", as can typing on the keyboard, using
>the brightness control on my monitor, etc. and the definition becomes
>overly broad.  If this is the source of our disagreement, please set me
>straight.

That which instructs the machine is a machine instruction.

>   Art's ASCII message was no more a set of machine instructions than would
>be my vocal instruction to my machine to make my undebugged program "work
>RIGHT this time!"  Neither his ASCII code nor my voice command is sent as
>an instruction to the CPU.  Some set of machine instructions causes Art's
>message to be read by the CPU as _data_ which is to be manipulated in some
>way by the machine instructions to cause phosphors to light a certain way.

Who cares whether a CPU executes the instructions, or a huge combination of
hardware and software?

>>a slew of networked computers (the Internet--perhaps you've heard of
>>it), which, with their hardware and software, conveyed his message to
>                  ^^^^^
>   THEIR hardware and software, not the execution of the ASCII-coded message.
>They executed sets of machine instructions which existed on their computer
>before, during, after, and independent of the arrival or content of Art's
>message, to achieve the result of having Art's message appear as an ASCII
>file on your file system and mine and others'.

Who cares whether a CPU executes the instructions, or a huge combination of    
hardware and software?

>   At various points, _protocol_ instructions were added to and subtracted
>from Art's message during the transit; but these _protocol_ instructions
>were still not machine instructions, they were instructions to a collection
>of machine instructions (the protocol handler) somewhere to tell the
>protocol handler "program" what was to be done with it, how to interpret
>the data stream, etc.  Note that Art's message didn't include checksums,
>TCP/IP/UDP/whatever headers, etc., when it showed on your screen; without
>those, and the ACK/NAK/etc. handshaking messages, it's unlikely you would
>have seen the same message Art typed into his computer originally.

The in-band and out-band signaling, routing information, was part of his
message. So, it could get to one final computer...

>
>>one final computer sitting in front of me, where further hardware and
>>software interpreted his ones and zeroes as illuminated phosphors for me
>>to read in the form of a natural language.
>
>   Your computer hardware and software did the job of lighting the phosphors
>based on what it read of his ones and zeroes (ASCII code).  Your computer
>never executed the ones and zeroes he sent, it interpreted them, as you
>specifically mention above.  (And it goes without saying that 'interpreted'
>in this context has a different meaning from, say, "My BASIC interpreter
>'interpreted' and executed my BASIC source code.")

The machine (NOT the CPU, although it was involved) interpreted the
instructions.

>
>>From the moment he sent his message on its way to the time I finally read
>>it, it was entirely machine instructions.
>
>   No, it was a code, and the only way you were able to read it was through
>the use of a machine that could "decode" that code and turn it into something
>readable by you.  ASCII is as much a code as the Masonic code, or the stick
>men in the Sherlock Holmes mystery; it's just the only code that many
>computers can do much of anything with.

And that code instructs the machine to do...?

>   His message was NEVER machine instructions, or they could be executed on
>some machine without compilation or interpreter-ation (?).  As you yourself
>just said, they're being interpreted by OTHER machine instructions, which
>implies they themselves are NOT machine instructions.

I didn't say his ones and zeroes were "machine language". I said they
were machine instructions. (Am I repeating myself?)

Right. The instructions are interpreted by a machine at a lower level using
other instructions. How does that imply the instructions in the message
are not machine instructions?

>   Try my previously-mentioned idea.  Find a DOS machine, transfer the
>message to the DOS machine, rename it to nerts.com, then type "nerts" at
>the DOS prompt.  I'm reasonably sure you won't see his message on the screen.
>If what he sent consisted of machine instructions, you would; if what he
>sent consisted of a code, the result will be little different in general
>results (e.g. locking up the machine, munging things, etc.) than the result
>of executing a file containing DES cryptext.
>   Or, on a unix system, just `ls -l /usr/spool/mail/sci/crypt` and see if
>any of the files there are marked executable.

You didn't mean to be condescending there, now did you?

>
>>Now, who made the mistake?
>
>   Until I see you execute the ASCII code he sent you on some machine
>_as_a_program_ and not through the use of any other machine instruction
>collection (program), I'll say you did.  (You may, of course, use the
>standard facilities of the operating system to load and execute it.)
>If you can demonstrate that his ones and zeroes, as sent, can be directly
>executed (NOT interpreted) by the CPU of some machine and cause phosphors
>to light on your machine's screen, I'll say I did.  (Note that sending it
>to a terminal doesn't count, because that isn't the same as sending it
>to the terminal's CPU for execution.)

How gracious. Why do YOU get to specify which machine I use?

I already told you what machine I was speaking of. Do you want me to
try it on that machine again? Be warned that I did once, and the
machine instructions in his message illuminated those phosphors just
fine. But, if you want to come over and see for yourself... Otherwise,
the prosecution rests.

>
>>Computer code is speech if someone is able to comprehend that code as the
>>expression of an idea. The computer doesn't comprehend the idea, but I
>>certainly can. 
>
>   I agree one hundred percent!

Yes! Now we're getting somewhere.

>   That's the distinction everyone's trying to make.  Whether or not the
>computer has facilities to compile or interpret that source code to perform
>a function is not relevant to a discussion of the source code _itself_;
>what _is_ relevant is whether or not the machine _itself_ can execute
>("understand") the source code.
>   IMHO, source code is no different from a textbook description of an
>algorithm, except that it's usually much easier for me to understand and
>to learn the algorithm from.

Well done.

>>"Machine instructions" is not necessarily a category separate from "speech."
>
>   Right.  That's a gray area in the laws as currently written; although
>the law on the books says you can't publish crypto source code, this _may_be_
>unconstitutional, and if so, it is a separate category; if not, it isn't.
>It's unfortunate that State picked on companies without deep pockets to
>try to essentially modify the First Amendment through case law (if indeed
>that's what's going on, and I suspect it is).

Bravo.

===

Thanks. It's been fun dueling. I guess we just disagree on what machine
instructions are. Maybe this will help.

If I may requote you:
>   I believe this may be our point of contention.  I believe Art, in his
>original post, meant "machine instructions" to mean "machine language", and
>that indeed is what I took it as (and I am using the same convention).

The original postings that started this thread clearly specified that
the code in question was source code. Art, whose comment engendered my
wry remark to which you took umbrage, has subsequently so clarified that
it was source code to which he referred.

Sorry for your confusion.
-- 
Hud Nordin
Cybernetic Arts                 hud@netcom.com
Post Office Box 2066            Telephone: 408.248.0377
Sunnyvale, California 94087     Facsimile: 408.248.0416
