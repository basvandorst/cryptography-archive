Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: Privacy-Enhanced Mail: Crypto Problems
Message-ID: <1993Sep27.071800.2489@cactus.org>
Summary: Stronger DES under PEM
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <1993Sep24.063530.21163@cactus.org> <CDxDCA.81J@acsu.buffalo.edu> <bryner.28.749084984@chemistry.utah.edu>
Date: Mon, 27 Sep 1993 07:18:00 GMT
Lines: 96


 In <bryner.28.749084984@chemistry.utah.edu> bryner@chemistry.utah.edu
 (Roger Bryner) writes:


>>Don't worry about trivialities like the encoding into ASCII; if
>>that was part of the cipher then you'd analyze it as such.
>>
>Yes, it would provide absolutily no security, just obscurity.

 So one might think.  But I disagree.

 Simple Substitution, *when used on random-like data*, can be a
 strong transformation.  But don't take *my* word for it:

    "An example [of a 'strongly ideal' system] is a simple
    substitution on an artificial language in which all
    letters are equiprobable and successive letters
    independently chosen."

    Shannon, C.  1949.  Communication Theory of Secrecy Systems.
    Bell System Technical Journal.  28: 656-715.
    (Section 17.  Ideal Secrecy Systems.  p. 699.)


 Moreover, sufficient obscurity *is* security.  Most ciphers are
 based on the "needle-in-a-haystack" paradigm:  The correct key
 must be there, somewhere, and is protected only because there are
 so many other keys which all look alike.  In a very real sense,
 DES itself provides only obscurity--hopefully, 56-bits of it.

 A paraphrase:  "Since DES uses substitution and substitution
 provides absolutely no security, DES provides absolutely no
 security."  Not.

 The output of DES is random-like; adding an unknown substitution
 at this point means that The Opponent must be prepared to try each
 possible transformation before even getting to DES.  This is not
 the same situation as a newspaper cipher, because DES has no (known)
 ciphertext statistics which would help disclose the transformation.

 Note that a Simple Substitution on N symbols has N! "keys."
 The DES 56-bit key (2^56 key values) selects only a tiny subset
 of the 64! possible 64-bit-to-64-bit substitutions.  This means
 that there is plenty of room for new overall substitutions which
 are different than those otherwise available through DES alone.


                     Stronger DES under PEM

 The network ASCII transformation normally used (and described under
 PEM RFC's) is a 6-bit (64-element) substitution.  That is, we chop
 a 64-bit binary DES ciphertext block into 6-bit chunks, and convert
 each to an ASCII character for transmission.  Naturally, it takes
 10+ of these chunks to send a single DES block.

 Now assume that we create 11 different 64-entry substitution tables
 and permute each under control of the User Key:  (Normally, we
 hash a key phrase into a substantial cryptographic RNG and use the
 sequence to drive a shuffle for each table; a different hash drives
 the DES key.)  Instead of using a single pre-defined table, we use
 a different unknown table for each chunk.

 Now consider a known-plaintext attack on the new design:  The
 Opponent has both the ciphertext (*after* the transformation to
 ASCII) and the plaintext for a particular block, and is working on
 finding the key.  One would imagine that this could be done by
 trying all possible keys, one after the other (and this is the
 usual basis for the theoretical design of key-search engines which
 form the usual impression of cipher strength).

 But trying each DES key, by itself, will not work on the design with
 the 11 unknown tables, because if even a single ciphertext bit from
 one table is wrong, DES will produce completely-different plaintext
 which will not match the known plaintext.  (It is important that
 DES does not produce almost-correct results given almost-correct
 input.)  Thus, it is now necessary for The Opponent to brute-force
 search the tables *as well* as DES, thus adding another 64 bits to
 a brute-force search.  Since the network translation is required
 anyway, this added strength costs almost *nothing* in terms of
 throughput (and just 11 shuffles of 64-element tables--something
 like 1,000 RNG steps--during init).

 I should point out that the small block size used in DES is
 vulnerable to other attacks based on the very limited uncertainty
 of language text when directly used as plaintext.  (Some forms of
 data-compression might thus provide additional security in DES
 systems.)  However, preventing normal brute-force attacks at
 virtually no cost seems like a worthwhile engineering tradeoff,
 one which certainly should not be prevented by the PEM
 specifications themselves.


 ---
 Terry Ritter   ritter@cactus.org

