Newsgroups: sci.crypt
From: aph@aph.demon.co.uk (Andrew Haley)
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!news!demon!aph.demon.co.uk!aph
Subject: Re: novice question 
Distribution: world
References: <1993Sep16.192246.9075@wuecl.wustl.edu>
Organization: APH Secure Data
Reply-To: aph@aph.demon.co.uk
X-Newsreader: Simple NEWS 1.90 (ka9q DIS 1.21)
Lines: 25
Date: Fri, 17 Sep 1993 22:43:14 +0000
Message-ID: <748305794snz@aph.demon.co.uk>
Sender: usenet@demon.co.uk

In article <1993Sep16.192246.9075@wuecl.wustl.edu> jln2@cec2.wustl.edu writes:

>O.K.  Lets say the homebrew secure phone guys want a simple way to
>encrypt their messages.  We can use several seconds of handshaking at
>the begining of the conversation to exchange public keys, IVs etc, but
>the telephony will need to be encrypted quickly on a slow CPU (assume
>existance of SoundBlaster or equiv to turn voice into raw data).  DES
>is very slow in software.

No it isn't.  DES runs at almost 50kbytes/sec on a 386sx/20.  Modems
run at about 1.5 kbytes per second.  Any reasonable CPU will not have
any difficulty keeping up with the modem.

>What should we use?  It seems to me that
>compressed voice may make it more difficult to get "probable
>plaintext".  Does this make pseudo-random XOR better in a practical
>sense?

Pseudo random XOR is quite nice because the noise stream can be
generated before the whole data block is known, which helps in such a
real time application.  It's no quicker, though, because you still
need a cryptographically strong RNG.

Andrew.

