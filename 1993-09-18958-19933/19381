Newsgroups: sci.crypt
Path: msuinfo!agate!spool.mu.edu!wupost!cs.utexas.edu!mercury.unt.edu!ponder.csci.unt.edu!srt
From: srt@ponder.csci.unt.edu (Stephen Tate)
Subject: Re: novice question
Message-ID: <1993Sep17.180735.10897@news.unt.edu>
Sender: usenet@news.unt.edu (UNT USENet Adminstrator)
Organization: University of North Texas, Denton
References: <747602250snz@aph.demon.co.uk> <AEsJPbiaJ5@phm.mepi.msk.su> <CDFwIo.6sE@eskimo.com>
Date: Fri, 17 Sep 1993 18:07:35 GMT
Lines: 48

In article <CDFwIo.6sE@eskimo.com>, Wayne Radinsky <wayner@eskimo.com> wrote:
>>> If the noise sequence is truly random, the encryption is unbreakable,
>>> as proved by Shannon.
>> 
>> Shannon's model shows XOR-based code is unbreakable IF and ONLY IF
>> cryptoanalysist uses "chiphertext only" attack (enemy knows encrypted
>> data, but not decrypted source).
>> 
>> If plaintext is known, it's too simple to obtain psevdo-random sequence,
>> which could be used to decrypt other your messages, encrypted with the
>> same key. If so, it doesn't matter which pseudo-random generator you use.

The original poster was talking about a "truly random" sequence, and
you are responding about a pseudo-random sequence.  You're definitely
talking about two different things here.   A truly random sequence used
as a one-time pad it unbreakable --- given any model of "breaking"
that you want to use (known plaintext, chosen plaintext, ciphertext only,
etc. doesn't make a difference).

>The advantage is the program is extremely small and simple, and the
>output is totally random (it can't be compressed), and greater security
>can be achieved by making the password longer (there is no limit).

Absolutely wrong about the output being uncompressable.  Let's say
your program generates a megabyte of pseudo-random output.  The
source code of your program, together with the seed of the pseudo-random
generator is clearly a compressed version of the megabyte output, and
only takes up probably about 1k.  In other words, it's very, very
compressible (1000:1)!  Being uncompressible, in the Kolmogorov
complexity sense, is certainly a reasonable definition of "truly
random", but *ANY* generated sequence will have low Kolmogorov
complexity, hence will be compressible, and is therefore not
"truly random".

>The disadvantage is, if the bad guy gets a copy of the plaintext and
>the ciphertext for the same message, the password is trivial to figure
>out -- no guesswork at all, no dependence on the password length.  And
>poof! everything encrypted with that password is compromised.

Part of the point of being a one-time-pad is that you don't re-use the
key.  In other words, if one message is compromised, it tells the
adversary absolutely nothing about any other messages.

-- 
Steve Tate  ---  srt@cs.unt.edu   |
Dept. of Computer Sciences        |  Danger:  .sig construction in progress.
University of North Texas         |           Expect delays.
Denton, TX  76201                 |
