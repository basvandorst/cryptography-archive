Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!ddsw1!indep1!clifto
From: clifto@indep1.UUCP (Cliff Sharp)
Newsgroups: sci.crypt
Subject: Re: novice question
Message-ID: <2473@indep1.UUCP>
Date: 18 Sep 93 13:59:08 GMT
References: <747602250snz@aph.demon.co.uk> <AEsJPbiaJ5@phm.mepi.msk.su> <CDFwIo.6sE@eskimo.com>
Organization: as little as possible
Lines: 22

In article <CDFwIo.6sE@eskimo.com> wayner@eskimo.com (Wayne Radinsky) writes:
>The disadvantage is, if the bad guy gets a copy of the plaintext and
>the ciphertext for the same message, the password is trivial to figure
>out -- no guesswork at all, no dependence on the password length.  And
>poof! everything encrypted with that password is compromised.

   I take the extra step to make sure that the cryptext overwrites the
plaintext at encryption time.  If the cryptext is the same length as the
plaintext, it can be done with an fseek() and fwrite(); if different, the
file can just be copied ("system("cat x y")") at the end of the program.
   Sure, someone expert with magnetics technology might be able to recover
enough bits and pieces of magnetized material to recover some plaintext
from the old area; but actually opening the plaintext file for write-only
and overwriting it does at least provide a modicum of security which only
the very expert with lots of bux can overcome.
   (My algorithm is different but still an XOR-type thing which is highly
key-dependent.)
-- 
+------------------------------------------------------------------------------+
|   Cliff Sharp  |      clifto@indep1.chi.il.us   OR  clifto@indep1.uucp       |
|     WA9PDM     |                 Use whichever one works                     |
+------------------------------------------------------------------------------+
