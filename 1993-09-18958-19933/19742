Path: msuinfo!agate!spool.mu.edu!wupost!cs.utexas.edu!rutgers!att-out!cbnewsh!cbnewsh.cb.att.com!wcs
From: wcs@anchor.ho.att.com (Bill Stewart +1-908-949-0705)
Newsgroups: sci.crypt
Subject: Re: Will this scheme work ...
Message-ID: <WCS.93Sep26204516@rainier.ATT.COM>
Date: 27 Sep 93 01:45:16 GMT
References: <1993Sep25.055607.4810@cs.cornell.edu> <284v3hINNkj@umbc7.umbc.edu>
Sender: news@cbnewsh.cb.att.com (NetNews Administrator)
Organization: Students for an Utterly Free Society
Lines: 35
In-Reply-To: olson@umbc.edu's message of 26 Sep 1993 16:46:41 -0400
Nntp-Posting-Host: rainier.ho.att.com

In article <284v3hINNkj@umbc7.umbc.edu> olson@umbc.edu (Bryan G. Olson) writes:
   |> A group of people are playing a game over e-mail. They need to throw dice
   |> every turn. Unfortunately, they can't find somebody ``trustworthy'' to
   |> do it for them. So, how can they throw dice
   |> A Solution?:
   |> Set up a mail server that accepts a message of the form ``throw N dice,

It's pretty difficult to set up a system where there's a trusted server,
unless you trust the server....  So you've got to do systems where you
don't need to trust the server.  Such things are in the literature,
but here's one approach:
1) Each player i generates a random number R(i,n)
2) Each player generates a message M(i,n) = "Player i Round n Random R(i,n)",
	and sends everybody H(i,n) = hash(M(i,n))  (hash is MD-5, SHS, etc.)
	probably signed with his digital signature for non-repudiation
	if you're concerned about that (avoids forgery / repudiation wars).
	They're probably not too critical, since it's easy to dispute
	if your communications are mostly reliable or broadcast.
3) Each player acks all the messages
4) Each player sends everybody M(i,n), and verifies everyone else's hash.
5) Everybody XORs R(i,n), i=1..I, and uses the appropriate number of bits
	as the dice for round n.

In step 2, you can probably use D( (M(i,n) ; Dk) private-key decryption
	as the hash, which gives you the digital signature as well
	(everybody can verify by encrypting with your public key.)

If you're going to play the game more than once, you need to either use
a timestamp or game-instance-identifier in M(i,n), so that you can't
recycle people's random numbers from previous games.
--
#				Pray for peace;      Bill
# Bill Stewart 1-908-949-0705 wcs@anchor.att.com AT&T Bell Labs 4M312 Holmdel NJ
#
#	goin' where the climate suits my clothes
