Newsgroups: comp.arch,sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!munnari.oz.au!metro!basser.cs.su.oz.au!mrj
From: mrj@cs.su.oz.au (Mark James)
Subject: Re: Putting Copy Protection in the CPU
Reply-To: mrj@cs.su.oz.au (Mark James)
Organization: Basser Dept of Computer Science, University of Sydney, Australia
Date: Fri, 3 Sep 1993 02:57:36 GMT
Message-ID: <1993Sep3.025736.1677@cs.su.oz.au>
References: <1993Aug31.114242.933@cs.su.oz.au> <peterd.746891095@pjd.dev.cdx.mot.com> <CCpx65.MDp@unix.portal.com>
Sender: root@cs.su.oz.au (Deus ex Machina)
Lines: 54
Xref: msuinfo comp.arch:43560 sci.crypt:19036

Thanks for your replies to my post.  Some of you have made me
out to be a villain trying to foist this on the computer world.
I have no interest in implementing this, my research is in a totally
different area.  I just wanted to resolve something that had been
bugging me for a while.  It will be some time before I stick my
head up again.  I apologise for being out of touch with the real world.

Although many of the potential problems that have been raised
have been spurious, the concept is probably not feasible or
desirable.

In my opinion the only valid problems are:
- The creation of a clone of the crypto-CPU that has an
  easily programmable serial number,
- Legitimate backup machines and multiprocessor machines, and
- Software distribution difficulties.

The solution to the first must depend on copyright enforcement
and techniques to prevent reverse-engineering.

To solve the second you need a system that combines a crypto-CPU
with a dongle-like software key that plugs into the computer's
case.  The key holds the unique code that decrypts the software,
and its external ID # is what you quote when ordering software.
The key interfaces to the CPU or CPUs in the machine and
must download the code to them via an encrypted channel
with a rolling-type key.  The CPU must check for the presence
of the key periodically.  When upgrading, or if a machine fails,
you just move the key to the other unit.  A backup key is
issued in case the key fails.
Too complicated?  Probably.

As for the speed of real-time decryption of the instruction stream,
one person suggested a scrambler in the address generation unit,
as used in one games machine.

The criticism that crypto-CPUs create a restraint of trade
and the potential for windfall profits is valid to some extent.
Although comptetition between programs should theoretically
prevent this, there is an awful lot of software loyalty.
Many will never change from Wordperfect, even if the price
tripled, because it is too hard to convert to and learn
another package.  Anyway, why should computer software be any
less protected than music or physical products?

The need for copy protection is most needed in low end
software rather than high end.  Most purchasers of high end
products would rather pay the money to get support and upgrades,
rather than making do with a cracked or pirated copy.
You don't seen dongles on games because they are expensive
and easily hacked around.
 
Vale,
Mark
