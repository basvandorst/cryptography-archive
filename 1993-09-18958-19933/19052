Newsgroups: alt.privacy.clipper,sci.crypt
Path: msuinfo!agate!spool.mu.edu!sgiblab!sgigate!sgi!wdl1!nebula!koontzd
From: koontzd@nebula.lrcs.loral.com (David Koontz )
Subject: Contrasting SKIPJACK and DES
Message-ID: <1993Sep3.200128.2919@wdl.loral.com>
Originator: koontzd@nebula
Sender: news@wdl.loral.com
Organization: Loral Rolm Computer Systems
Date: Fri, 3 Sep 1993 20:01:28 GMT
Lines: 139
Xref: msuinfo alt.privacy.clipper:1543 sci.crypt:19052


There is some suggestion that DES and skipjack are related:

>From: Peter Wayner <pcw@access.digex.net>
>Message-Id: <199308230106.AA11314@access.digex.net>
>To: karn@qualcomm.com
>Subject: Re:  Cracking & auditing crypto protocols
>Cc: cypherpunks@toad.com

>            ... it is said (by Coppersmith) that they
>developed many attacks like what we now know as
>Differential Cryptanalysis. These contributed to their
>design of DES and I think it would be fair to say that
>the same principles could be used to assess the strength
>of the Clipper chip. A Mykotronix employee told me that
	              ----------------------------------
>it "Contains s-boxes and all that stuff."
 ----------------------------------------

From clip.txt in csrc.ncsl.nist.gov:/pub/nistnews:

#                     CLIPPER CHIP TECHNOLOGY
#
#CLIPPER is an NSA developed, hardware oriented, cryptographic
#device that implements a symmetric encryption/decryption
#algorithm and a law enforcement satisfying key escrow system.
#While the escrow management system design is not completely
#designed, the cryptographic algorithm (SKIPJACK) is completely
#specified (and classified SECRET).
#
#The cryptographic algorithm (called CA in this paper) has the
#following characteristics:

#     1.   Symmetric, 80-bit key encryption/decryption algorithm;
           ----------

Although the word symmetric is missing from D. Dennings description:

+From: denning@guvax.acc.georgetown.edu
+Newsgroups: sci.crypt
+Subject: SKIPJACK Review, Interim Report
+Date: 1 Aug 93 22:09:27 -0400

+2.  Overview of the SKIPJACK Algorithm

+SKIPJACK is a 64-bit "electronic codebook" algorithm that transforms a
+64-bit input block into a 64-bit output block.  The transformation is
+parameterized by an 80-bit key, and involves performing 32 steps or
+iterations of a complex, nonlinear function.

Without regard to brute force attacks the other areas of vulnerability
that Skipjack was examined on are as follows.

1) Differential Cryptanalysis

                                            ...We concluded it was not
+   possible to perform an attack based on differential cryptanalysis in
+   less time than with exhaustive search.
    ---------

--
    Differential Cryptanalysis is a method of determining probalistic
    values for key bits based on statistical properties of the "complex,
    nonlinear function" used iteratively.  

    Increasing the number of rounds to 32 may be sufficient to push
    the effort for differential cryptanalysis to be larger than a
    brute force attack.  Similarly, changes to cover other weaknesses
    (weak keys,symmetry under complementation) may also decrease the
    the signal to noise ratio, and increase the effort required.
   

2) Weak Keys

+                            ...We saw no pattern of symmetry in the
+   SKIPJACK algorithm which could lead to weak keys.

+				        	    ...We also
+   experimentally tested the all "0" key (all 80 bits are "0") and the all
+   "1" key to see if they were weak and found they were not.

$From: WHMurray@DOCKMASTER.NCSC.MIL
$Subject: Denning on Skipjack
$Date: Fri, 3 Sep 1993 00:25:00 GMT
$
$In Government Computer News, p14, August 30, 1993, Kevin Power quotes
$Dorothy Denning as saying "I am 100 percent certain that there are no
$weak keys."

--
   A key is weak when the encryption function and decryption operation
   are identical.  DES includes the all 1's and all 0's keys as weak.
   There are also semi-weak keys where encryption in one key is equivalent
   to decryption in another key, or vice versa.  There is also a class
   of weaker keys, where the number of different subkeys used in the 16 rounds
   of DES is restricted.

   Defeating weak keys implies that encryption and decryption not be equivalent
   with any keys.

   That the all 1's and all 0's keys are not weak implies that key bits and 
   data bits are not mixed symmetrically with respect to encrypt and decrypt.
   (The "complex, nonlinear function" is not identical for encryption and 
   decryption, even if the subkey sets are identical but inverted.)

   As an alternative, you could transform the input key to something nonweak,
   e.g. the input key is transformed using s boxes doctered to prevent weak 
   or semiweak keys as a result of key schedule induced register shifts.  This 
   would result in duplicate keys in the 80 bit key space, as opposed to some
   keys you shouldn't use.

   It should be noted that the MYK-78 chip implementing the SKIPJACK 
   cryptographic algorithm is intended to be a type III COMSEC device after 
   NIST certification and does not require centralized key management/
   distribution.  Overcoming weak keys is reasonable as a design goal.  Type I
   and II devices don't strictly need it, NSA et. al. supplies keys for them.

3) Symmetry Under Complementation

+                    ...We tested SKIPJACK for this property and found that
+   it did not hold.

--
   Complementation in DES is predicated on K XOR E(R) = not K XOR E(not R)
   and can cut the key search space in half.  There are at least a few
   possibilities:

   1. non modulo2 arithmetic for key/data mixing prior to S boxes.
      This implies that key and data are mixed nonsymmetrically for encryption
      and decryption, e.g. modulo64 arithmetic with add for encrypt, subtract
      for decrypt.

   2. Not completely mixing (XOR) key and data prior to S boxes, e.g.the use of
      extra key bits to select additional S box rows, without XOR with data.

   3. Mixing multiple key bits with single data bits prior to S boxes.  The 
      repeated bits in an expansion permutation might be a good target to mix 
      in more key bits, XOR of two key bits and 1 data bit.

