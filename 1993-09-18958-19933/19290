Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!xlink.net!math.fu-berlin.de!jiri
From: jiri@kirk.chemie.fu-berlin.de (Jiri Pittner)
Subject: Re: WIPE in PGP
Message-ID: <4M0GBIIB@math.fu-berlin.de>
Keywords: wipe, PGP
Sender: news@math.fu-berlin.de (Math Department)
Nntp-Posting-Host: kirk.chemie.fu-berlin.de
Organization: Free University of Berlin, Germany
References: <LF5GBLES@math.fu-berlin.de> <1993Sep11.174613.22100@cs.aukuni.ac.nz> <272v6p$gb7@newserv.ksu.ksu.edu>
Date: Tue, 14 Sep 1993 08:26:44 GMT
Lines: 31

rjq@phys.ksu.edu (Rob Quinn) writes:

> Under some OS's (at least) an unlinked file isn't destroyed immediately. From
>my SunOS4.1.2 man pages:
>unlink(2)
>     unlink() removes the directory entry named by  the  pathname
>     pointed to by path and decrements the link count of the file
>     referred to by that entry.  If this entry was the last  link
>     to  the  file,  and  no  process has the file open, then all
>     resources associated with the file are reclaimed.  If,  how-
>     ever,  the file was open in any process, the actual resource
>     reclamation is delayed until it is closed, even  though  the
>     directory entry has disappeared.

Of course resources of an unlinked file which is still open by some
process cannot be immediatelly reclaimed - this must be so on any Unix.
But if the sequence write(); unlink(); close(); is executed immediatelly
after each other, or write(); close(); remove(); as well, the data
may reside only in a buffer and are no more necessary. The (f)close() call
does not do any syncing, I think!

fsync() is available on both machines which I daily use - Convex (BSD)
and HP ser. 700 (SYSV). If it is not available, sync() should be use to
sync everything.

Jiri Pittner
--
Jiri Pittner

jiri@hpsiepsi.chemie.fu-berlin.de
jiri@kirk.chemie.fu-berlin.de
