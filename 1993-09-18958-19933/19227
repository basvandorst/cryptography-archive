Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!waikato!aukuni.ac.nz!cs18.cs.aukuni.ac.nz!pgut1
From: pgut1@cs.aukuni.ac.nz (Peter Gutmann)
Subject: Re: WIPE in PGP
Keywords: wipe, PGP
References: <LF5GBLES@math.fu-berlin.de>
Organization: Computer Science Dept. University of Auckland
Date: Sat, 11 Sep 1993 17:46:13 GMT
Message-ID: <1993Sep11.174613.22100@cs.aukuni.ac.nz>
Lines: 52

In <LF5GBLES@math.fu-berlin.de> jiri@kirk.chemie.fu-berlin.de (Jiri Pittner) writes:

>I have posted some time ago in this group simple file wiping program for unix
>and I wanted to improve it a bit. Therefore I looked at the source of PGP
>and I was really surprized:
>[...]
>2) according to sombody's comment to my old posting, on a 'compressing file system'
>   it would not overwrite all the data (by the way, I did not ever hear about
>   such disc unit on the market, it could probably slow down the speed a lot)

That was probably me... these sorts of things are quite common, for example 
Stacker or OneandabitSpace (aka DoubleSpace) under DOS and some program 
whose name escapes me for the Mac.  Unless you write an uncompressible 
pattern, the filesystem will simply compress it to nothing, leaving the data 
intact.

>3) but what I am MAINLY missing here is fsync() call before the file is unlinked.
>   I am not a system programer, but I can imagine, that the data written on file,
>   which is immediatelly then unlinked, are NOT transferred from the system's
>   buffer to the RAW disc.

Yes they are.  The drive and low-level code don't know what's a block transfer
resulting from a data write and what's a block transfer resulting from an
unlink (ie rewriting the directory information).  They simply receive a series
of requests along the line of "Get this info to disk at some point", and
that's it.

>   There is another problem: We have HP stations 755 735 etc. and the
>   fast-wide SCSI discs have optionally internal buffering. If I would use
>   such device, I would not be sure at all what is happening, if there is not
>   at least 10s sleep delay between fsync and unlink.

See the previous paragraph - the device and low-level drivers don't know that
what's happening is an unlink, all they see is a series of requests to write
sectors to disk.

>4) All these 'user-level' wipes rely on the assumption, that if new content
>   is written into any file, its old data blocks are overwritten and not just
>   freed and new ones allocated. 

There are filesystems (persistent filestores?) which never overwrite old data,
but simply allocate space for newer data.  However these are quite rare and,
presumably, their users will understand the risks (in this case) involved.  
Presumably these filesystems actually provide some means of destroying data 
you don't want preserved...
 
Peter.
--
 pgut1@cs.aukuni.ac.nz||p_gutmann@cs.aukuni.ac.nz||gutmann_p@kosmos.wcc.govt.nz
peterg@kcbbs.gen.nz||peter@nacjack.gen.nz||peter@phlarnschlorpht.nacjack.gen.nz
             (In order of preference - one of 'em's bound to work)
            -- "We shouldn'a sold the flags" - Groucho Blondini --
