Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!math.ohio-state.edu!sol.ctr.columbia.edu!xlink.net!scsing.switch.ch!bernina!caronni
From: caronni@nessie.cs.id.ethz.ch (Germano Caronni)
Subject: Re: Zero Knowledge Keys
Message-ID: <CD8IMx.HA1@bernina.ethz.ch>
Sender: news@bernina.ethz.ch (USENET News System)
Nntp-Posting-Host: nessie
Organization: Swiss Federal Institute of Technology (ETH), Zurich, CH
References: <60.12411.4262.0N18376D@canrem.com>
Date: Sun, 12 Sep 1993 09:35:20 GMT
Lines: 21

In article <60.12411.4262.0N18376D@canrem.com> terry.smith@canrem.com (Terry Smith) writes:
>
>Create a *random* bit string the length of the key
>XOR it with the key
>Send THAT over the channel
>The other guy XORs it with the key (Which shoiuld be the same as YOUR
>key) and sends it back
>You check and if it's the RANDOM STRING - he's in!
>The eavesdropper is left with a random string...

Ooopsala. The eavesdropper is left with two different 'random' strings, not 
one. And if he XORs the two strings, guess what he gets ?
Yes, the secret key. So your method is actually not secure.
Have a look at Diffie-Hellman Key Exchange instead.
Friendly greetings,
	Germano Caronni
-- 
Instruments register only through things they're designed to register.
Space still contains infinite unknowns.
                                                              PGP-Key-ID:341027
Germano Caronni caronni@nessie.cs.id.ethz.ch   FD560CCF586F3DA747EA3C94DD01720F
