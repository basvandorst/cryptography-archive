Newsgroups: comp.arch,sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!pipex!uknet!comlab.ox.ac.uk!pcl
From: pcl@ox.ac.uk (Paul C Leyland)
Subject: Re: Putting Copy Protection in the CPU
Message-ID: <PCL.93Sep1092538@rhodium.ox.ac.uk>
In-reply-to: grunt@ecf.toronto.edu's message of Tue, 31 Aug 1993 20:09:06 GMT
Organization: Oxford University Computing Services, 13 Banbury Rd Oxford OX2
	6NN
References: <CCn3z6.4H7@ecf.toronto.edu>
Date: 1 Sep 93 09:25:38
Lines: 25
Xref: msuinfo comp.arch:43510 sci.crypt:18987

In article <CCn3z6.4H7@ecf.toronto.edu> grunt@ecf.toronto.edu (Marcus van Ierssel) writes:

   really, how secure do you think this is? on a single user system such 
   as a pc, it would be easy to write a tsr like beasty that intercepted
   system calls like gethostid() and responded with a valid id from the
   original system. host id's will only work on larger unix like systems
   where ordinary users don't have root like status.

Oh come on.  You don't normally need "root like status" to take a copy
of the software and attack it with a debugger.  One copy protected
program I examined a few years back needed a one-BIT change to defeat
it.  Toggling that one bit converted a tst.l into a clr.l on the 68000
if I remember correctly.  Not only did it return the "right" condition
code, the flag was thereafter in the "right" state for future tests.

Fudging the return value from gethostid() is trivial.

Paul

--
Paul Leyland <pcl@oxford.ac.uk>          | Hanging on in quiet desperation is
Oxford University Computing Service      |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is come, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
