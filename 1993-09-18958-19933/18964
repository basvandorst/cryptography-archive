Newsgroups: comp.arch,sci.crypt
Path: msuinfo!agate!spool.mu.edu!darwin.sura.net!newsserver.jvnc.net!princeton!moo!awolfe
From: awolfe@moo.Princeton.EDU (Andrew Wolfe)
Subject: Re: Putting Copy Protection in the CPU
Message-ID: <1993Aug31.142012.29865@Princeton.EDU>
Originator: news@nimaster
Sender: news@Princeton.EDU (USENET News System)
Nntp-Posting-Host: moo.princeton.edu
Fcc: outbox
Organization: Princeton University
References:  <1993Aug31.114242.933@cs.su.oz.au>
Date: Tue, 31 Aug 1993 14:20:12 GMT
Lines: 44
Xref: msuinfo comp.arch:43488 sci.crypt:18964

In article <1993Aug31.114242.933@cs.su.oz.au>, mrj@moria.cs.su.oz.au (Mark James) writes:
|> One way to robustly implement protection against illegal copying
|> of software would be to put it into the CPU.
|> 

...

|> The only feasible way to implement the copy protection would seem
|> to be encryption of the binary, either with:
|>   * a secret algorithm: Probably needed, but means extra security at
|>     premises of software delivery companies and CPU manufacturers.
|>   * a public algorithm with secret/secret-public keys
|>    (derived from public CPU id #)
|> 

...



One of my student simulated such a system as his undergradate independent
project this Spring.  It was a natural followup to our published work on
program compression + in-cache-decompression. 

He used the DES encryption algorithm with a few twists to increase security
in a practical implementation.  We targeted our research more towards secret
critical systems - like missiles - that need to have protected code.  A
RAM-based key would need to be downloaded to execute or read the program.
However, he also looked at copy-protection situations.

His analysis showed that we could build a decryption engine with about 30K
transistors that would run at about 30-40MHz in 1u CMOS.  It required 88
cycles to perform a 32-byte cache line refill.  This is likely to cause a
25-30% loss of performance on a typical program - maybe less on tight-loop
DSP type code.

Copies of a typical undergraduate report on request.  A real Computer
Engineering Technical Report on cache-based decompression is also available.

-- 
--------------------------------------
Andrew Wolfe
Assistant Professor
Department of Electrical Engineering
Princeton University
