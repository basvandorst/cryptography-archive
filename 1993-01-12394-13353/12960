Newsgroups: comp.theory,sci.crypt,sci.math,rec.puzzles
Path: msuinfo!caen!uunet!paladin.american.edu!darwin.sura.net!opusc!usceast!sumner
From: sumner@math.scarolina.edu (David Sumner)
Subject: Re: Looking for random permutation generation algorithms
Message-ID: <sumner.727036572@milo.math.scarolina.edu>
Sender: usenet@usceast.cs.scarolina.edu (USENET News System)
Organization: USC  Department of Computer Science
References: <1993Jan6.014749.15323@ee.ubc.ca> <1993Jan6.224804.6116@dsuvax.dsu.edu> <1993Jan09.220921.19430@rchland.ibm.com>
Date: 14 Jan 93 18:36:12 GMT
Lines: 21
Xref: msuinfo comp.theory:6237 sci.crypt:12960 sci.math:38358 rec.puzzles:20357


To quickly generate a 'random' permutation of  1, 2, ..., n:
 
      ++++++++++++++
  Initialize  A[n] as the array [1, 2, 3, 4,..., n]
 
        for i=1 to n
        z = random(n)  
        t = a[i]
        a[i] = a[z]
        a[z] = t
        next i
    ++++++++++++++
 
The loop exits with A holding a pseudo random permutation of 
1, 2, 3, ..., n.
 
Assuming that random is a function that returns a random 
integer between 1 and n.
 
David Sumner
