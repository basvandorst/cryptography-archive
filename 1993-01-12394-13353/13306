Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!uwm.edu!linac!att!mcdchg!chinet!schneier
From: schneier@chinet.chi.il.us (Bruce Schneier)
Subject: Coin Flipping by Telephone
Organization: Chinet - Public Access UNIX
Date: Fri, 29 Jan 1993 04:46:58 GMT
Message-ID: <C1LMMB.9pB@chinet.chi.il.us>
Lines: 35

I found this coin flip protocol in J.M. Reyneri & E.D. Karnin, "Coin
Flipping by Telephone," IEEE Trans. on Info. Theory, IT-30, 5, 1984.
I like it because it's easy to implement:

(1)  Alice and Bob mutually choose a prime p, in such a way that the
factorization of p-1 is known.  (In reality, Alice and Bob will each
generate a random prime, and then check if the product of the two primes
plus 1 is prime.)

(2)  Bob selects two primes, h and t, less than p.  He sends them to Alice.

(3)  Alice chooses an integer x, relatively prime to p-1.  He sends Bob
an integer y, which is either h^x (mod p) or t^x (mod p).

(4)  Bob guesses whether y is a function of h or t, and sends his guess to
Alice.  If Bob is correct, the result is heads.  If Bob is wrong, the result
is tails.

(5)  To verify the result, Alice reveals x to Bob.  Bob computes both possible
y values to confirm that Alice played fairly.

The mathematics of the protocol looks good.  For Alice to cheat, she has to
know two integers, x and x', such taht h^x = t^x' (mod p).  But since h and
t were chosen by Bob, Alice has to compute a discrete logarithm.  The
requirement that Alice choose x to be relatively prime to (p-1) also ensures
that.  Forcing h and t to be prime (actually, primitive elements of GF(p) )
ensures that Bob can't cheat.

I like this protocol because if Alice and Bob want to flip multiple coins,
they can use the same values for p, h, and t.  The second coin flip can start
from step (3).

Anyone see any problems that I missed?

Bruce
