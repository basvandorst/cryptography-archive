Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!magnus.acs.ohio-state.edu!bgsuvax!att!att!dptg!ulysses!ulysses!smb
From: smb@research.att.com (Steven Bellovin)
Subject: Re: DES in Cipher Block Chaining mode as Hash function
Message-ID: <1993Jan19.150432.26879@ulysses.att.com>
Date: Tue, 19 Jan 1993 15:04:32 GMT
References: <1993Jan17.063029.22765dave@tygra.Michigan.COM> <1498@eouk9.eoe.co.uk> <1jf86eINNpv4@iskut.ucs.ubc.ca>
Organization: AT&T Bell Laboratories
Lines: 54

In article <1jf86eINNpv4@iskut.ucs.ubc.ca>, unruh@physics.ubc.ca (William Unruh) writes:
> ahaley@eoe.co.uk (Andrew Haley) writes:
> 
> ]: I'm planning to use DES in CBC mode as a Hash function,
> 
> ]This is a very weak scheme.  This is because of the "birthday
> ]paradox", which means that to generate a pair of messages with the
> ]same hash only requires sqrt(n) operations.  In the case of the DES,
> ]this is 2^28 (less than 10^9.)
> 
> 
> But about 10^56 to generate another mesage with the same hash as the
> given one, which is what concerns the user. The above only applies if
> you don't care which two messages have the same hash.

[Note:  Unruh corrected 10^56 to 2^56 in a later posting.  That doesn't
matter -- either number is too large for a feasible attack.]

Nope.  There are attacks possible that let you pick a more or less
arbitrary message, with just the addition of a single garbage block,
or possibly just by calculating 2^32 rearrangements of both the first
and second halves of the message.  There are several papers describing
these attacks; see, for example,

@article{multiemail,
        author = {Chris Mitchell and Michael Walker},
        title = {Solutions to the Multidestination Secure Electronic Mail Proble
m},
        year = 1988,
        volume = 7,
        number = 5,
        pages = {483--488},
        journal = {Computers \& Security}
}

@inproceedings{des-hash,
        author = {Robert S. Winternitz},
        title = {Producing a One-Way Hash Function from {DES}},
        booktitle = {Advances in Cryptology: Proceedings of {CRYPTO} '83},
        year = 1984,
        pages = {203--207},
        publisher = {Plenum}
}

The attack described in the second paper, attributed to Merkle, is
fairly easy to understand.  Divide the new message in two halves.
Devise 2^32 variations of the message (say, by changing the Message-Id
or some such), and calculate the MAC of each using DES in CBC mode.
Now devise 2^32 variations of the second half.  *Decrypt* these going
backwards in CBC mode to see what input XOR value they're expecting.
Match those values against the first table of 2^32 elements.  A
match is likely because of the birthday paradox.  Concatenate the
two halves, and poof -- you have a forged message.
learn what input value they're expecting.
