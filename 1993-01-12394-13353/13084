Path: msuinfo!caen!uunet!mcsun!uknet!comlab.ox.ac.uk!pcl
From: pcl@ox.ac.uk (Paul C Leyland)
Newsgroups: sci.crypt,alt.security.pgp
Subject: Deaf and dumb PGP daemons.
Message-ID: <PCL.93Jan19181456@rhodium.ox.ac.uk>
Date: 19 Jan 93 18:14:56 GMT
Organization: Oxford University Computing Services, 13 Banbury Rd Oxford OX2
	6NN
Lines: 44
Xref: msuinfo sci.crypt:13084 alt.security.pgp:1234


The following request might sound sacrilegious to some, but please
bear with me.

I wish to use PGP as a filter on the input and/or output of daemons.
I assume that the daemons are running on physically secure machines
running trusted software and with only trusted users logged into them.
However, I *cannot* assume that the network joining the machines is in
any way secure.  What I can do is to include timestamps within the
plaintext (to hinder playback attacks); encrypt it (to foil snoopers);
checksum it (to prevent in-flight modification) and sign it (to stop
spoofers).  PGP allows me to do the hard bits of this without me
writing any fresh code.

I like PGP as an encryption service, but what I can't abide is its
incessant chattiness.  It gives copyright messages, asks for keys
and so on.  How can I get this damn thing to shut up?

I have source code, so I can easily hack out the bits I don't like,
put secret keys into argv, and so on.  What I would like to know is
whether anyone else is working on this or has already done so.  If so,
who and how do I get it?  If not, I'll do it but would anyone like to
comment on what should be done, and how it should be done so as to be
compatible with other developers' work?

Summary:

I want a quiet mode (-q) option to use PGP as a component of a daemon.
I also want a passphrase set on the command line (-qk phrase) for
daemonic use.


Finally, in an attempt to head off futile discussion: I am well aware
that the second requirement is dangerous on a multi-user system. The
systems I want to run this on are secure enough in my estimation and I
am prepared to take full responsibility if my opinion proves to be
wrong.


Paul
--
Paul Leyland <pcl@oxford.ac.uk>          | Hanging on in quiet desperation is
Oxford University Computing Service      |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is come, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
