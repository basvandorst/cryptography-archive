Newsgroups: sci.crypt,alt.security.pgp
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!howland.reston.ans.net!news.ans.net!newsgate.watson.ibm.com!yktnews!admin!influenza!lucien
From: lucien@watson.ibm.com (Lucien Van Elsen)
Subject: Re: Deaf and dumb PGP daemons.
Sender: news@watson.ibm.com (NNTP News Poster)
Message-ID: <LUCIEN.93Jan19144828@fionavar.watson.ibm.com>
In-Reply-To: pcl@ox.ac.uk's message of 19 Jan 93 18:14:56 GMT
Date: Tue, 19 Jan 1993 19:48:28 GMT
Disclaimer: This posting represents the poster's views, not necessarily those of IBM
References: <PCL.93Jan19181456@rhodium.ox.ac.uk>
Nntp-Posting-Host: fionavar.watson.ibm.com
Organization: IBM T.J. Watson Research Center
Lines: 22
Xref: msuinfo sci.crypt:13098 alt.security.pgp:1235

I think PGP (and perhaps a public key system) may be somewhat overkill for
your situation, if I understand it correctly.  Since you've got trusted
machines and software, all the work PGP does with keyrings and determining
key trust is irrelvant.  It's also not clear in this case why you need a
public key system at all; presumably if you've got control of the machines
and they are physically secure, you should be able to securely give them a
single shared "key" to use with a single-key method like IDEA or DES.

Additionally, PGP doesn't help you with the issue of preventing replay
attacks; that's really a function of the protocol and the messages you're
encoding, and not the encryption itself.

You may want to look into Kerberos- it directly addresses the sort of
situation you seem have.  Though the exportable `bones' version doesn't have
the DES routines, you shouldn't have to look too hard to find DES routines
somewhere.

		-Lucien
--
-----------------------------------------------------------------------
Lucien Van Elsen                                          IBM  Research
lucien@watson.ibm.com                                     Project Agora
