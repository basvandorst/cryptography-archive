Path: msuinfo!caen!uunet!noc.near.net!transfer.stratus.com!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: sci.crypt
Subject: Re: Encryption plus compression (Was: Another well-intentioned novice's quest)
Date: 7 Jan 1993 07:06:47 GMT
Organization: Stratus Computer, Software Engineering
Lines: 29
Message-ID: <1igkq7INN6o9@transfer.stratus.com>
References: <1993Jan05.160811.29681@rchland.ibm.com> <1993Jan5.195004.5453@den.mmc.com> <1993Jan6.215140.18753@ee.eng.ohio-state.edu>
NNTP-Posting-Host: ellisun.sw.stratus.com

In article <1993Jan6.215140.18753@ee.eng.ohio-state.edu> butzerd@blanc.eng.ohio-state.edu (Dane C. Butzer) writes:
>Sorry if this has been brought up, but don't many compression programs put
>some type of table at the start of the compressed file (defining what
>characters map to what uncompressed sequences, for example)?

>Seems
>like you'd have to be careful to avoid this (although I don't know how you
>would).

Most compression programs put some known header on the data.

One way to avoid it is to follow the compression with a substitution (eg.,
XOR) or transposition using as many bytes of key as there are bytes of
known header in the compressed file.

The transposition scatters the known header bytes to unknown locations.
The substitution encrypts the header with a 1-time pad (the key, which
should be different for each message).  Each adds as much key as the
compressor added trivial redundancy, bringing the unicity distance back to
what it would have been had there been no header.

The output of that encryption then gets fed to the normal encryption
algorithm, of course.

-- 
-- <<Disclaimer: All opinions expressed are my own, of course.>>
-- Carl Ellison						cme@sw.stratus.com
-- Stratus Computer Inc.	M3-2-BKW		TEL: (508)460-2783
-- 55 Fairbanks Boulevard ; Marlborough MA 01752-1298	FAX: (508)624-7488
