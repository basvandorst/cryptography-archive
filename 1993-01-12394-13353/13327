Newsgroups: sci.crypt,alt.security.pgp
Path: msuinfo!caen!uwm.edu!spool.mu.edu!yale.edu!ira.uka.de!math.fu-berlin.de!news.netmbx.de!Germany.EU.net!mcsun!fuug!anon
From: an8729@anon.penet.fi
Subject: Using RSA for message encryption
Message-ID: <1993Jan29.223411.6962@fuug.fi>
Sender: anon@fuug.fi (The Anon Administrator)
Organization: Anonymous contact service
X-Anonymously-To: sci.crypt,alt.security.pgp
Date: Fri, 29 Jan 1993 22:26:54 GMT
Lines: 66
Xref: msuinfo sci.crypt:13327 alt.security.pgp:1330

One of the Frequently Answered Questions on this list is this: why do
PGP, RIPEM, PEM, and other "public key" packages not use "pure" RSA?
Why do they just encrypt a conventional key using RSA and then use
that key to conventionally-encrypt the message?

The answer typically given is performance.  RSA is too slow to use for
general message encryption.  RSA, it is said, is really a key
management system, not a general encryption method.  It is appropriate
to use it just to safeguard the key and to then use an ordinary
cryptosystem for the message.  RSA is not inherently more secure than
conventional cryptosystems; you should be able to use a conventional
cryptosystem and trust it just as much as you would RSA.

I have to take issue with almost all of these points.  First, with the
new generation of workstations, I claim that RSA is _not_ too slow to
use for general encryption.  I find, using PGP, that on my
SparcStation ELC it takes 7 seconds to do an RSA decryption of 1024
bits.  Encryption is less than a second, due to the smaller exponent.
If a typical email message is, say, 5K bytes (to be generous), it will
probably compress down to about 2K.  A 1024-bit RSA encryption can
handle about 128 bytes in a packet.  There are 16 such packets in a 2K
message.  At 7 seconds per decryption we have 112 seconds, or a little
under two minutes.

That's not so inordinately long.  PGP 1.0 took close to 60 seconds to
decrypt on a 16 MHz 386.  And the SparcStation is far from the most
powerful workstation around.  In another couple of years, we may see
speedups of a factor of 2 or more.  Pure RSA should be able to encrypt
in 5 to 10 seconds and decrypt in under a minute.  This is a
perfectly tolerable speed.

Second, a chain is only as strong as its weakest link.  Using a hybrid
RSA/conventional system means that a successful attack on _either_ RSA
_or_ the conventional system will break your message.

Third, there really aren't any conventional systems which one can use
with the same confidence you can have with RSA.  DES has not been
broken, but the 56 bit key is just too small to provide confidence
against an exhaustive search by a special-purpose machine.  PGP uses
IDEA, which has a nice big key but is relatively new and untested.

With RSA, on the other hand, you have fifteen years of public analysis
and attack.  Again and again we find that when using the system
appropriately the only successful attack is to factor your modulus.
The state of the art of factoring is fairly easy to judge due to the
competition between academic researchers in this field.  Each new
improvement is given considerable publicity.  Granted, military
researchers may be ahead of the academics, but there are no
theoretical grounds to expect them to be greatly ahead.

With RSA you can have a much better picture of appropriate key sizes
and reasonable safety margins given projected future capabilities.  No
system is failsafe, and it is always possible that a trick will be
developed to break RSA or factor numbers very quickly.  But with RSA
the field seems cleaner and safer than with DES or IDEA.

To sum up, RSA is fast enough on today's high-performance workstations
for routine encryption and decryption.  Using a single cryptosystem
avoids some of the attacks possible on a hybrid system.  And there are
more reasons to feel safe using RSA than using DES or IDEA.

Comments?
-------------------------------------------------------------------------
To find out more about the anon service, send mail to help@anon.penet.fi.
Due to the double-blind system, any replies to this message will be anonymized,
and an anonymous id will be allocated automatically. You have been warned.
