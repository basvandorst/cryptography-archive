Path: msuinfo!caen!uunet!paladin.american.edu!news.univie.ac.at!hp4at!mcsun!uknet!edcastle!dcs.ed.ac.uk!pdc
From: pdc@dcs.ed.ac.uk (Paul Crowley)
Newsgroups: comp.theory,sci.crypt,sci.math,rec.puzzles
Subject: Re: Generating a Random Permutation
Message-ID: <C13Kn2.1BE@dcs.ed.ac.uk>
Date: 19 Jan 93 10:47:25 GMT
References: <sumner.727366153@milo.math.scarolina.edu> <4fKlI4200WB8Aps_9A@andrew.cmu.edu>
Sender: cnews@dcs.ed.ac.uk (UseNet News Admin)
Reply-To: pdc@dcs.ed.ac.uk (Paul Crowley)
Organization: Edinburgh University
Lines: 28
Xref: msuinfo comp.theory:6248 sci.crypt:13071 sci.math:38518 rec.puzzles:20422

Quoting strong+@CMU.EDU (Thomas W. Strong, Jr.) in article <4fKlI4200WB8Aps_9A@andrew.cmu.edu>:

(Old algorithm exchanges each element in turn with a random element)

(New algorithm exchanges each element in turn with a random element not
further along the array than itself)

>I have to agree with the algorithm as originally presented.  What it
>effectively does is it takes each item and puts it in a random position.
>(it may put it back where it started from (1 in n chance) or it may move
>some item twice, but every item has an equal chance to be in any
>position.  If you replace the random(n) with random(i), the lower
>numbered elements will tent to be near the beginning of the array, since
>the only way they can be moved forward is if one of the later swaps
>happens to exchange with them.  If you're not convinced, run your
>algorithm a few times (actually a few hundred or so) and take a look at
>the linear correlation between the array indices and the contents.

If you've actually done this, then there's an error in your testing
program or your pseudorandom number generator has gone kooky.  On an
array of three elements, the old algorithm can do nine different
things, yet there are only six permutations of three elements. Since
six does not divide nine, it must be favouring some of them.  The new
algorithm I have proven correct in an earlier post, after I posted the
old algorithm and someone corrected me.
  __                                  _____
\/ o\ Paul Crowley   pdc@dcs.ed.ac.uk \\ //
/\__/ Trust me. I know what I'm doing. \X/ 
