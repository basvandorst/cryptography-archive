Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!darwin.sura.net!newsserver.jvnc.net!yale.edu!ira.uka.de!rz.uni-karlsruhe.de!stepsun.uni-kl.de!uklirb!posthorn!vier!neuhaus
From: neuhaus@vier.informatik.uni-kl.de (Stephan Neuhaus (HiWi Mattern))
Subject: Re: Zimmermann's responses to Sidelnikov's PGP critique
Message-ID: <neuhaus.727098952@vier>
Sender: news@posthorn.informatik.uni-kl.de (News system account)
Nntp-Posting-Host: vier.informatik.uni-kl.de
Bcc: pgp-dev@oc.com
Cc: neuhaus@informatik.uni-kl.de
Organization: University of Kaiserslautern, Germany
References: <1993Jan13.165815.23475@netcom.com>
Date: Fri, 15 Jan 1993 11:55:52 GMT
Lines: 170


In article <1993Jan13.165815.23475@netcom.com>, David Sternlight writes:
 
> Stephan Neuhaus posts a message with content in "tex" mode. As one
> unused to tex I find it near-unreadable, thought I understand what
> he's trying to say. What makes him think the message will be any
> more readable to Sidelnikov than Sidelnikov's is to him?

Nothing.  I was just following an old habit there.  Some articles on
sci.math are written that way, and it's easy once you get accustomed
to it.  It's rather like a one-dimensional analog to traditional
mathematical notation, and I'm used to it.  When you print it out, it
looks quite neat, because TeX can typeset mathematics much better than
I can.

However, a repost gives me the opportunity to clear up a couple of
bugs that were present in the formulas.  So here is my article again,
in a form that should be readable to non-TeXnicians.

-------------------------------------------------------------------------
jgd@dixie.com (John De Armond) writes:

>What I have NOT read is anyone taking his analysis and trying to confirm
>or deny its validity.  The messenger has been attacked but not the
>message.

Begin ASCII mode.

First of all, this is very difficult to do.  For example, the original
posting mentioned that the linear correlation of PGP's random numbers
ranged from 0.001 to 0.1 (or something).  It is not clear *which*
source of random numbers he means.  Does he mean the random numbers
used for public key generation or the pseudo random numbers used for
session key generation.

Nevertheless, I have been conductiong a library search lately.
Unfortunately (or fortunately?) the only thing that ended up in my
hands was Knuth II.  He has (approximately) the following to say about
the serial correlation of uniformly distributed integers:

First, for those who don't know what it is, serial correlation
measures, roughly, how well adjacent values in a stream of uniformly
distributed random numbers lie on a straight line if plotted in 2d.
In other words, how well a best-fit line will approximate the set of
$(x,y)$ points that you get if you take  x  and  y  to be adjacent
values from the random number stream.

More precisely, let  {Y[k]}  be a sequence of uniformly distributed
random integers, and let  U[k] = Y[2k]  and  V[k] = Y[2k+1]  be
subsequences consisting of every second value, for  1 <= k <= n.
Compute the correlation coefficient  C  by:


                  n sum(U[k]V[k]) - (sum(U[k]) sum(V[k])
C = ----------------------------------------------------------------
        -----------------------------------------------------------
       /           2               2            2               2
      / (n sum(U[k] ) - (sum(U[k])) )(n sum(V[k] ) - (sum(V[k])) )
     v

where all summation indices range from 1 to n.  (This formula corrects
the bug in my original posting which had only  sum(U[k]V[k])  in the
numerator.  The factor of n was missing.  Additionally, Knuth has
U[i]V[j]  as the summand, which is at least misleading, since it
suggests that the first sim is really a double sum, for 1 <= i <= n
and 1 <= j <= n.  The whole numerator would simplify to  n - 1  in
this case.)

This coefficient will always lie between  -1  and  +1.  A value of  0
means that adjacent values of the sequence are not correlated at all
(i.e., cannot be described by a straight line very well most of the
time), and a value of  +-1  means that the values are so strongly
dependent on one another that there actually exist  a  and  b  with


	Y[2k+1] = aY[2k] + b.

I hope it is clear to anybody why one would want |C| to be small
compared to 1 in a cryptographic application.

Knuth then asserts that even with truly random numbers, we would not
have  C  exactly zero most of the time.  This is clear because the
numbers are, well, *random*, so even if they are not correlated in
general, for any finite  n  we will detect a correlation that in fact
isn't there.

Knuth then goes on to say that it is ``conjectured at this time'' that
C  has mean  mu(n)  and standard deviation  sigma(n)  of

                                           ----------
            1                      1      / n (n + 3)
mu(n) = - -----, and  sigma(n) = -----   /  ---------,   for n >= 2,
          n - 1                  n - 1  v     n + 1


and that C will lie between mu(n) - 2sigma(n) and mu(n) + 2sigma(n)
about 95% of the time.  (This corrects one other bug; the posting had
n > 2.)

Now what does this mean for Sidelnikov's claims?  This can mean a
number of things:

1. That he used too small an  n.  For example, if  n = 10**6, (that's
ten to the sixth power, or one million, David :-) then  mu(n) is
approximately  10**-6, and  sigma(n)  is approximately  0.001, fixing
the acceptable interval at approximately  [-0.002, 0.002]. If he
created  2**32 random numbers, the cruical value of  2sigma(n)  would 
be approximately  2**-15  or  3.05E-5.  This means that we shouldn't
set our hopes too high anyway.  (I agree that 0.1 would be way too
high, though.  This corrects the last known bug so far; the original
had sigma(n) in place of 2sigma(n).)

Please note that the standard deviation is a couple orders of
magnitude larger than the mean.  This means that even good random
number generators will cover a relatively wide range of values for C
with high probability.  Also note that a correlation of 0.1 would be
bad if it happened often, but will happen occasionally even with good
random number generators.  A generator that produced 0.1 often would
be tremendously bad, but is also tremendously hard to write after you
have read Knuth's 3rd chapter of The Art of Computer Programming, or
the article in the CACM(?) "Random Number Generators: Good Ones are
Hard to Find."

2. Maybe he meant that  10**-3 was too large a serial correlation
anyway.  We don't know that, because it's not in his text.

I have written a small test procedure to compute the serial
correlation coefficient and am currently testing PGP's random numbers.
(There remains the small matter of winning the Volleyball tournament
today, but aside from that...) It's just that it's very difficult to
answer Sidelnikov's claims because in the form that we received them,
they are very imprecise.  The posting just said that the serial
correlation of the random numbers was such and such.  What random
numbers?  Did he use the least 32 bits of a 128-bit random number or
did he concatenate individual bits?  What routines were called?  What
n  was used?  You get the picture.

I agree that science should not degrade to name-calling, but science
should also not consist of making too vague claims, English skills
aside.  It has always been SOP to support your claims with hard facts,
such as a description of the test procedure you carried out etc., and
for good reason: So that others could duplicate your results.

Mr Sidelnikov, if you read this, obviously you *have* conducted
extensive tests, so please give us a hint where to look.  (I'm *not*
flaming, please understand!)

I'll post my results as soon as they are available.

Have fun.

------------------------------------------------------------------------

If I caused any inconvenience with my article (for example because
readers could not get it printed properly, or could not read TeX), I
apologize.  The present article should remedy this situation.

Does anybody know of a free implementation of the spectral test
described in Knuth?  I'd like to subject PGP's random numbers to that
very powerful test but I shy away from the multiple-precision
arithmetic that must be done occasionally.

Oh, and we have lost the Volleyball tournament.

Have fun.

-- 
Stephan <neuhaus@informatik.uni-kl.de>
sig closed for inventory.  Please leave your pickaxe outside.
PGP 2.1 public key available on request.  Note the expiration date.
