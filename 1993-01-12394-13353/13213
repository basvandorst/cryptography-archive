Path: msuinfo!netnews.upenn.edu!dsinc!ub!zaphod.mps.ohio-state.edu!howland.reston.ans.net!bogus.sura.net!jhunix.hcf.jhu.edu!fmsrl7!lynx.unm.edu!nmsu.edu!opus!ted
From: ted@nmsu.edu (Ted Dunning)
Newsgroups: sci.crypt,alt.security.pgp
Subject: Re: PGP messages readable by more than one person
Message-ID: <TED.93Jan24183110@pylos.nmsu.edu>
Date: 25 Jan 93 01:31:10 GMT
References: <1993Jan23.192239.14870@infodev.cam.ac.uk>
Sender: usenet@nmsu.edu
Organization: Computing Research Lab
Lines: 30
In-Reply-To: gtf1000@cus.cam.ac.uk's message of Sat, 23 Jan 1993 19:22:39 GMT
Xref: msuinfo sci.crypt:13213 alt.security.pgp:1276


In article <1993Jan23.192239.14870@infodev.cam.ac.uk> gtf1000@cus.cam.ac.uk (G.T. Falk) writes:

   I was talking to mathew <mathew@mantis.co.uk> today and the following
   topic came up. How could you make a PGP message which could be read by,
   say, any of certain people, but nobody else?

	... the straightforward answer deleted ...



perhaps a more interesting (in the sense of puzzle solving) problem is
how to extend pgp so that you can send a message that ALL of a group
have to agree to read.  of course, it isn't that much harder than the
previous puzzle, but it is fun.

** answer below **


for N recipients to have to cooperate to read a message, you can make
up a session key, and then make up N-1 random numbers each the length
of the session key.  you then follow Falk and Mathew's suggestion and
encrypt each of these random numbers with the first N-1 users' public
keys.  then you use the last users' public key to encrypt the XOR of
the N-1 random numbers and the true session key.  using this method,
all N of the readers must decrypt their parts of the key so that all
parts can be combined using XOR before the message can be read.
signature methods can be used to verify that each reader is willing, but
a bit of a trick is needed to assure that all readers gets just as
much information as any other.
