Newsgroups: sci.crypt
Path: msuinfo!caen!uwm.edu!spool.mu.edu!sgiblab!munnari.oz.au!bunyip.cc.uq.oz.au!brolga!ggm
From: ggm@brolga.cc.uq.oz.au (George Michaelson)
Subject: using crypto to defeat banknote forgery
Message-ID: <C1LLpG.F4F@bunyip.cc.uq.oz.au>
Sender: news@bunyip.cc.uq.oz.au (USENET News System)
Organization: Prentice Centre, University of Queensland
Date: Fri, 29 Jan 1993 04:27:15 GMT
Lines: 37

Why does the scheme below fail?

(1)	Print a barcode/machine readable font random number on each note.

(2)	At print-time, simultaneously pick another random number, pair
	with the first one, and store on a secure machine. Each pair is
	unique per note.

(3)	During normal lifecycle, all notes are run through automatic
	checkers. The box does key->lookup on the hidden number via
	a network. If the secure server screams the note fails.

I can even see high denomination notes being tested by a black box in stores
with DTMF tones to pass the ID on the note, and a pass/fail response code being
sent back.

Problems:

(a)	Speed of key->lookup limits checktime for each note. I would have 
	thought a good hashing function puts this into a known (and thus
	costed in terms of parallelism/multiple servers/whatever) domain.

(b)	Can badguys use the tester to get valid pairs? I think not, if the
	phone-network lookup is speed limited to 1 response/5 sec or something
	then the time-cost to search a billion keys becomes too high

	-You have to trust the faster bank-based bulk checker machine/network
	but you have to trust ATM and cheque clearing networks anyway.

If its not been patented, I want first dibs. Now Knock the scheme to pieces!

	-George
--
                         George Michaelson
G.Michaelson@cc.uq.oz.au The Prentice Centre      | There's no  market for
                         University of Queensland | hippos in Philadelphia
Phone: +61 7 365 4079    QLD Australia 4072       |          -Bertold Brecht
