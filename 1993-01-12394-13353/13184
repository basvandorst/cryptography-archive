Path: msuinfo!srvr1.engin.umich.edu!uwm.edu!cs.utexas.edu!uunet!pipex!doc.ic.ac.uk!uknet!comlab.ox.ac.uk!pcl
From: pcl@ox.ac.uk (Paul C Leyland)
Newsgroups: sci.crypt
Subject: Re: Public Key Ciphers
Message-ID: <PCL.93Jan22150156@rhodium.ox.ac.uk>
Date: 22 Jan 93 15:01:56 GMT
References: <727539899.8167@minster.york.ac.uk> <WARLORD.93Jan20204310@m1-115-7.mit.edu>
Organization: Oxford University Computing Services, 13 Banbury Rd Oxford OX2
	6NN
Lines: 27
In-reply-to: warlord@MIT.EDU's message of 21 Jan 93 01:43:17 GMT

In article <WARLORD.93Jan20204310@m1-115-7.mit.edu> warlord@MIT.EDU (Derek Atkins) writes:

   If you are trying to secure the network, and if you can trust the
   machines that you are trying to secure, then I suggest you look into
   Kerberos (comp.protocols.kerberos, or kerberos@mit.edu).  It is based
   on DES, and uses shared secrets between entities to prove
   authenticity.

   It doesn't sound like you need real-time key distribution, which is
   something that Public Key algorithms have over secret-key algorithms,
   but if you have physical access to both machines, then you can place a
   shared secret on both machines and now that link is secure...

   I hope this helps.  If you have any more questions, feel free to ask.

My fiquestion is: how do I get kerberos source code, with all the DES
code and hooks in place?  Does your answer vary, depending on whether
I'm in the US or the UK?


Paul
--
Paul Leyland <pcl@oxford.ac.uk>          | Hanging on in quiet desperation is
Oxford University Computing Service      |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is come, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
