Path: msuinfo!netnews.upenn.edu!cs.widener.edu!eff!sol.ctr.columbia.edu!zaphod.mps.ohio-state.edu!uwm.edu!linac!att!att!ulysses!ulysses!smb
From: smb@research.att.com (Steven Bellovin)
Newsgroups: sci.crypt,alt.security.pgp
Subject: Re: PGP messages readable by more than one person
Message-ID: <1993Jan25.162351.4331@ulysses.att.com>
Date: 25 Jan 93 16:23:51 GMT
References: <1993Jan23.192239.14870@infodev.cam.ac.uk> <TED.93Jan24183110@pylos.nmsu.edu> <1993Jan24.213350.17257@news.cs.indiana.edu>
Organization: AT&T Bell Laboratories
Lines: 37
Xref: msuinfo sci.crypt:13227 alt.security.pgp:1283

In article <1993Jan24.213350.17257@news.cs.indiana.edu>, Marc VanHeyningen <mvanheyn@whale.cs.indiana.edu> writes:
> An interesting generalization of the above is how to cryptographically
> create a situation whereby any m people in a group of n (of course,
> the problem is only hard when n > m > 1) must cooperate to read a
> message.  I seem to recall having heard that it's possible, but I
> don't remember the details.

I suspect you're thinking of

@article{sharesecret,
   author = {Adi Shamir},
   journal = {Communications of the ACM},
   number = {11},
   pages = {612-613},
   title = {How to Share a Secret},
   volume = {22},
   year = {1979}
}

This relies on polynomial interpolation.  If you're missing even one
piece of the shared key, all possible values become equally likely.

A totally different way to solve the same problem is given in

@article{sealing,
   author = {David K. Gifford},
   journal = {Communications of the ACM},
   number = {4},
   pages = {274--286},
   title = {Cryptographic Sealing for Information Secrecy and Authentication},
   volume = {25},
   year = {1982}
}

Gifford shows how to use a combination of symmetric and asymmetric
cryptography to implement things like Key-And, Key-Or, the problem
described above, etc.
