
    * Change the internal representation of keyid into a struct which
      can also hold the localid and extend the localid to hold information
      of the subkey number because two subkeys may have the same keyid.

    * Add a way to override the current cipher/md implementations
      by others (using extensions)

    * Not GnuPG related:  What about option completion in bash?
      Can "--dump-options" be used for this or should we place the
      options in an ELF note section?

    * Split key support (n-out-of-m).  Use our own protocol or figure out
      how PGP does it.

    * add an option to re-create a public key from a secret key; we
      can do this in trustdb.c:verify_own_keys. (special tool?)

    * rewrite --list-packets or put it into another tool.

    * write a tool to extract selected keys from a file.

    * Change the buffering to a mbuf like scheme?  See Michael's proposal.

    * Keep a list of duplicate, faked or unwanted keyids.

    * The current code has knowledge about the structure of a keyblock.
      We should add an abstraction layer so that adding support for
      different certificate structures will become easier.

