frame	struc
abovob	dw	?	;original freespace ptr for resetting
abovoa	dw	?
abovod	dw	?	;original freespace size hi order
abovoc	dw	?
;free space dd pointer
freehb	dw	?	;next available freespace
freeha	dw	?
;free space bytes
sizeb	dw	?	;high order freespace bytes
sizea	dw	?	;low order freespace bytes
;editor segment
fspec	dw	?	;offset to cryptogram filespec
edseg	dw	?	;editor dseg
hdrptr	dw	?	;title pointer
gramname dw	?	;display form of cryptogram name
langspec dw	?	;DOS form of language data file, asciiz string
langid	dw	?	;display form of language data file
lnghandle dw	?	;language data file handle
grm_handle dw	?	;cryptogram file handle
;psp dd pointer
pspb	dw	?
pspa	dw	?
;cryptogram pointer
sbuffb	dw	0	;offset
sbuffa	dw	0	;paragraph
flaga	db	0	;01 = crypt file specified
			;02 = new cryptogram
			;04 = no index
			;08 = no dictionary
			;10 = word list index made
			;20 = 1st list chosen
			;40 = color monitor
			;80 = 2nd list chosen

flagb	db	0	;01 = blanks are literal characters
			;02 = cursor shut off
			;04 = character insert mode
			;08 = counts made
			;10 = psort, head of chain found
			;20 = use DOS for error msgs, no screen yet
			;40 = even/odd bifid toggle

modea	db	0	;01 = command mode, char input ok
			;02 = cryptogram mode, char input ok
			;04 = title mode, char input ok

modeb	db	0	;01 = ACA contrast rule off
			;02 = agreement rule off
			;04 = probability sorting off

videob	dw	0	;bios screen buffer address
videoa	dw	0B000h	;video buffer
cursz	dw	0B0Ch	;cursor start and end, 0B0C mono, 0607 color
vport	dw	3B8h	;video control port, 3B8 mono, 3D8 color
vstatus dw	0	;video control bits to enable, disable display
gramb	dw	0	;current cryptogram line ptr
grama	dw	0	;..paragraph
current dw	0	;current cryptogram line
lines	dw	0	;number of cryptogram lines
c81	dw	81	;length of a screen buffer line
;alphabets
alfb	dw	0	;offset to cryptogram alphabet characters
alfa	dw	0	;segment of cryptogram alphabetics
;probabilities
probb	dw	0	;offset to alphabet probabilities
proba	dw	0	;segment of probabilities
;count of letters
bilan	dw	0	;total count of letters
zahlb	dw	0	;offset to count of letters in alphabetic order
zahla	dw	0	;segment of count of letters

motb	dw	0	;offset to cipher words index
mota	dw	0	;segment of cipher words index
motzahl dw	0	;count of cipher words, number of index entries
motib	dw	0	;indexes of cipher words index, descending order
motia	dw	0	;.. segment
motcur	dw	0	;current cipher word for display

;sort parameters, preset by caller before calling sort
srtcmpb dw	0	;far comparison proc for sort;	 offset
srtcmpa dw	0	;				 segment
srtentb dw	0	;->1st element to be sorted	 offset
srtenta dw	0	;				 segment
srtlen	dw	0	;length of an entry
srtn	dw	0	;number of entries to sort <= 32767
srtdir	db	0	;direction flag, 0=up, 1=down
	db	0


hndx	dw	0	;file handle for index
hdct	dw	0	;file handle for dictionary
ndxcnt	dw	0	;count of patterns

;primary word list
primb	dw	0	;primary list ptr	offset
prima	dw	0	;			segment
word1b	dw	0	;word index ptr for 1st list	offset
word1a	dw	0	;				segment
prob1b	dw	0	;probability buffer, 1st list	offset
prob1a	dw	0	;				segment
primcur dw	0	;current top of screen primary word

;alternate word list
secb	dw	0	;alternate list ptr	offset
seca	dw	0	;			segment
word2b	dw	0	;word index ptr for 2nd list	offset
word2a	dw	0	;				segment
prob2b	dw	0	;probability buffer, 2nd list	offset
prob2a	dw	0	;				segment
secur	dw	0	;current top of screen alternate word

tempcnt dw	0	;temp word counter for list filtering
templen dw	0	;temp length for multiply
;pocket sort parameters
pocket	dw	0	;number of pockets (radix)
psortn	dw	0	;number of items to sort
prtcolb dw	0	;far ptr to column sort order vector
prtcola dw	0	;..on return, far ptr to chained indexes
prtlen	dw	0	;length of item to be sorted
psrtentb dw	0	;->items to be sorted,	offset
psrtenta dw	0	;			segment
psrtcol dw	0	;current column offset to sort on
chainb	dw	0	;pocket chain head,	offset
chaina	dw	0	;			segment
ndx1b	dw	0	;start of indexes into word list
ndx1a	dw	0
ndx2b	dw	0	;start of indexes into word list
ndx2a	dw	0
;used by accord
quodb	dw	0	;current list, primary or secondary offset
quoda	dw	0	;				    segment
;used by showprim
plains	dw	0	;-> plaintext list source ptrs
plaind	dw	0	;-> screen destination to display plaintext lists
;used by help
helplb	dw	0	;current help line,	offset
helpla	dw	0	;			segment
;used by rail fence
rlndxb	dw	0	;ptr to rail index table
rlndxa	dw	0	;
peakptr dw	0	;rlndxa:peakptr->maxpeaks work area
permptr dw	0	;rlndxa:permptr->permutation for current depth, phase
plainptr dw	0	;rlndxa:plainptr->plaintext for current depth, phase
;used by logging
lgptrb	dw	0	;ptr to logging parameters, if applicable
lgptra	dw	0	;
;used by complete columnar
rowcnt	dw	0	;row dimension
colcnt	dw	0	;col dimension
;used by bifid transaction logging
bifkeyb dw	0	;offset to bifid key
bifkeya dw	0	;segment
bifprm1b dw	0	;offset to 1st bifid parms
bifprm1a dw	0	;segment
bifprm2b dw	0	;offset to 2nd bifid parms
bifprm2a dw	0	;segment
biflogn dw	0	;index to transaction log indexes
bfkeyb	dw	0	;offset to key structure
bfkeya	dw	0	;segment
bifpale dw	0	;coordinate beyond the pale
bifragib dw	0	;current fragment offset
bifragia dw	0	;segment
bifk2b	dw	0	;offset key save area
bifk2a	dw	0	;segment
bifsqr	dw	0	;size of rows, cols, intersect matrixes
bside	dw	0	;length of bifid key row or col
browp	dw	0	;->start of keysquare rows
bcolp	dw	0	;->start of keysquare cols
bsectp	dw	0	;->start of intersect
fitj	dw	0	;fit[j][] save last fit coordinate
fitith	dw	0	;fit[i] save
bifalfb dw	0	;->current bifid alphabet
bifalfa dw	0	;segment
	dw	0	;more spares
	dw	0	;more spares
frame	ends
