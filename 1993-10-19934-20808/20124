Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!pipex!sunic!kth.se!hemul.nada.kth.se!md85-epi
From: md85-epi@hemul.nada.kth.se (Urban Koistinen)
Subject: Re: Crack my hash function, win $100
Message-ID: <1993Oct5.094421.9102@kth.se>
Summary: Gutman add bug to my program, then complain it does not work.
Keywords: hash, C, prize
Sender: usenet@kth.se
Nntp-Posting-Host: hemul.nada.kth.se
Organization: Royal Institute of Technology, Stockholm, Sweden
Date: Tue, 5 Oct 1993 09:44:21 GMT
Lines: 55

>>I have created a hash function that can be made harder to crack by increasing
>>the buffer size and the number of rounds. As a crack I accept two different
>>strings that produce the same hash code when run through this program.
> 
>Hmm, something to do during my lunch break... OK, here goes:
> 
>Unfortunately this is trivial to break (unless I made a slip-up somewhere when
>I reformatted the code).  First, observe that in the main loop
> 
>  rounds( 64 );
>  for( ;ldbuf(); ) 
>    rounds( 8 );
>  rounds( 64 ); 
>  
>the initial and final calls to rounds() have no effect (they add no information
>to the hash value).  In addition the call to rounds( 8 ) adds no new
>information, as all data are input via ldbuf().

rounds() only move the information, does not add or remove any.

[deletion]
>(Note that I've changed the code slightly to read data from a buffer rather
>than stdin). Therefore any single-byte input will have the same hash value.
>For example using 0x01 and 0x02 we have:
> 
>2aae22c8a9290be04a7168b2823e95d2eea77b667308f01767cfa90e5e49d151
>2aae22c8a9290be04a7168b2823e95d2eea77b667308f01767cfa90e5e49d151

It seem that your compiler does not use 32-bit ints for the
(c<<24) operation.

When I run your code (compiled with gcc) I get:

8b95aaa8c60afa5ddd69e1ed232178bb315af9442bd9d0d3cc9a1a924f63cfb0
ce40c56454269fa266771b107a7ecb54b4c7deb84b130ecbad4524dc12a35e9e

> 
>The code to produce this is:
[deleted]

>I would recommend using MD5 or SHS, which is both faster and (I'd say) a lot
>more secure...
> 
>Peter.

Your example is an example of how one program can produce different
results when run in different environments.
It is something I should have thought about, but I don't think it is
the same as cracking my hash function.
This will not buy you lunch unless you come to Stockholm and collect.
Please try again.
I will send anyone asking the code with test files and results.
-- 
Urban Koistinen - md85-epi@nada.kth.se
Stop software patents, interface copyrights:  contact lpf@uunet.uu.net
