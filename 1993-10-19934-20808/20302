Path: msuinfo!agate!howland.reston.ans.net!vixen.cso.uiuc.edu!mehlville.ncsa.uiuc.edu!mitchell
From: mitchell@mehlville.ncsa.uiuc.edu (myself)
Newsgroups: sci.crypt
Subject: Re: Low information conte
Date: 11 Oct 1993 20:23:11 GMT
Organization: NCSA - University of Illinois @ Urbana/Champaign
Lines: 39
Distribution: world
Message-ID: <29cfbf$gug@vixen.cso.uiuc.edu>
References: <CEpC6I.Ksr@acsu.buffalo.edu> <49.1821.212.0NEB202C@cdreams.com> <29bra1$g9a@vixen.cso.uiuc.edu> <CEqquG.JtB@acsu.buffalo.edu>
Reply-To: mitchell@mehlville.ncsa.uiuc.edu (myself)
NNTP-Posting-Host: mehlville.ncsa.uiuc.edu

In article <CEqquG.JtB@acsu.buffalo.edu>, boyd@acsu.buffalo.edu (Daniel
F Boyd) writes:
|> In article <29bra1$g9a@vixen.cso.uiuc.edu> 
|> mitchell@mehlville.ncsa.uiuc.edu (myself) writes:
|> > If we only put about one character per 8 bytes, alonge with seven bytes
|> > of garbage, I would contend that a brute-force DES machine would have 
|> > a difficult time determining the correct key.  
|> 
|> All the brute-force DES machines that have been discussed here (or
|> even contemplated seriously by people who could build one) assume a
|> known-plaintext attack.
|> 
The machine I assumed existed was one which could find the keys for ASCII
encoded messages.  The algorithm is rather trivial, and does not add
much complexity to the known-plaintext designs that have been published.
It would work as follows.

ASCII messages use a very small portion of the alphabet available in one
byte.  All ASCII characters are of the form 0xxxxxxx.  Any given block
decrypted with a random key will tend to have half of the high bits set.
Instead of comparing the decrypted block with the known-plaintext, we
do block AND $8080808080808080.  If this is non-zero, the key is wrong.
One time in 256 a wrong key will pass this test.  When this happens, we
decrypt the next block from the message with the key.  We continue this
with new blocks until we have reduced the probability of a wrong hit to
whatever level we deem suitable.  More sophisticated testing could be
done, but it will slow the machine down accordingly.

Just because something has not been published does not mean it can't be
done, or even that it is difficult to do.  It just means no one bothered.

 
|> And make your own life more confusing and error-prone.
|>
I would say that cryptography is inherently confusing and error-prone.
It's just something that you have to deal with.
 
-David Mitchell

