Path: msuinfo!uwm.edu!spool.mu.edu!sol.ctr.columbia.edu!news.kei.com!ub!rutgers!uwvax!dr-hibbert.cs.wisc.edu!payson
From: payson@dr-hibbert.cs.wisc.edu ( Payson)
Newsgroups: sci.crypt
Subject: Re: Random Bits from keyboard timings.
Message-ID: <1993Oct10.193628.11063@cs.wisc.edu>
Date: 10 Oct 93 19:36:28 GMT
References: <28tjag$8c6@news.delphi.com> <1993Oct7.114026.13077@ousrvr.oulu.fi>
Sender: news@cs.wisc.edu (The News)
Organization: University of Wisconsin, Madison -- Computer Sciences Dept.
Lines: 37

In article <1993Oct7.114026.13077@ousrvr.oulu.fi> ktikkane@phoenix.oulu.fi (Kari Tikkanen) writes:
>ANSPRING@DELPHI.COM (anspring@news.delphi.com) wrote:
>: In real life, of course, this won't be true.  The time 
>: measurement will be in discrete intervals dt.  In the scheme 
>: I'm working on now, dt will be "ticks", or 1/60 th seconds.  
>
>Why to play with PC clocks 1/60 th "ticks". 

Agreed.  Keyboard timings probably have a non-random noise component
of about 0.1%-1%, so any bits above this should ignored.  If a 1/60sec
clock is used, then even the lsb would only be random if the time
between keystrokes were at least [somewhere between 1.6sec and 16sec].
Not generally applicable.

>You could use a following kind of Pascal program:
>(From my memory !)

[program which counts interations in a While-not-keypressed loop deleted]

Unfortunately, this approach ignores the potential severe skewing effects
induced by the 18Hz timer-tick interrupt [esp. if there are many TSR's
loaded].  Better would be to, on each keypress [you'd probably want to
install an INT9 handler] sample the value in the 8253 timer chip.  If the
MSB is 80-FF [I think the chip counts down--the above query is whether the
timer is in the first half of its cycle] then throw out the keypress.
Otherwise use the LSB of the timer as a random byte.  The discarding of
samples where the timer is in the first half of its cycle is to eliminate
a potential strong bias introduced by the timer-tick handler.  If, for
example, the handler took precisely 0x1234 1.19Mhz "ticks" to execute, then
the 16-bit value 0xEDCC [0x10000 - 0x1234] would appear with undue
frequency.  Assuming the timer-tick handler takes less than 25ms to
execute, all of the bias would be thrown out in the rejected samples 
without introducing any new bias.
-- 
-------------------------------------------------------------------------------
 payson@cs.wisc.edu  |  "Je crois que je ne vais jamais voir...  |   J\_/L
 John Payson         |   Un animal si beau qu'un chat."          |  ( o o )
