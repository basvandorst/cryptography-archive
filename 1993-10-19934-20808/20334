Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!europa.eng.gtefsd.com!uunet!pipex!uknet!zaphod.axion.bt.co.uk!srd!dwp
From: dwp@fmg.bt.co.uk (David Parkinson)
Subject: Re: crypto drivers && defraggers
Message-ID: <1993Oct12.141901.29829@srd.bt.co.uk>
Sender: usenet@srd.bt.co.uk (Usenet ID)
Organization: BT
X-Newsreader: TIN [version 1.2 PL0]
References: <5793@wet.UUCP>
Distribution: usa
Date: Tue, 12 Oct 93 14:19:01 GMT
Lines: 84

Peter Davidson (naga@wet.COM) wrote:

:  
: Vesselin Vladimirov Bontchev writes:
:  
: ]
: ]Here is what happens:
: ]
: ]1) You boot your computer. The crypto driver gets loaded and
: ]optionally mounts the encrypted logical drive after asking you for a
: ]password and checking it.
: ]
: ]2) You run the defragger.
: ]
: ]3) The the defragger wants to read a sector. The crypto driver
: ]intercepts the request, decrypts the sector and passes the decrypted
: ]sector to the defragger.
:  
: How does the crypto driver know whether the sector is actually
: encrypted?  What if it decrypts a sector which has not been encrypted?
:  
: ]4) The defragger want to write the sector somewhere else on the disk.
: ]The crypto driver intercepts the request, encrypts the sector and
: ]writes it back to the disk.
: ]
: ]Where's the problem?
: ]
: ]Regards,
: ]Vesselin
:  
: Steve seems to be talking about a file encryption program, and
: indeed there's a problem, as he says.  Vesselin seems to be
: talking about a background encryption utility.  Again there's a
: problem, since in such a case you sometimes don't want the crypto
: driver active.  For example, if you're installing a large
: executable then there's no point to encrypting it during
: installation (it's just a waste of time to decrypt it when it's
: run).  So a crypto driver that anyone would actually pay money

I disagree with the above point from a practical point of view....

The important thing about any system that is attempting to provide a layer
of security is that it should be unobtrusive and ideally totally transparent.
If it is not most users will (after a while) ignore it/swear at it/turn it
off if at all possible.

I mentioned the BT PC Secure product earlier in a response at the beginning
of this thread.  This product works at the INT13 level and encrypts the
entire surface of the disk - it couldn't care what data is being read or
written - it just encrypts/decrypts the disk traffic as it passes by. The
user's view of his/her
PC is unchanged other than having to insert a user token before starting up
and the having to enter a password in response to an opening screen.  Once
these two steps have been carried out they use the system as before,
secure in the knowledge that once they pull their user token out and walk
away the confidentiality of the data on their disk is maintained.

There is obviously a (small?!) performance impact with the encryption/
decryption overhead, but the system is a joy to use (you don't know its
there - and if it was installed before you got the PC you're not aware
of any slow down of system performance) and there is no room for operator
error.

I have seen many overly complex systems (multiple password screens,
turning subsystems/features on/off) that have failed to be used because
they got in the way of the user.

Key management only becomes a complex problem if you attempt to try to use
the sector-level approach to provide separation between different users on
a PC, but these days PCs are almost always _personal_.

Version 1 allowed people to set up their systems on per logical partition basis
(on the theory that there may be different operating systems in different
partitions).  This meant that the drivers had to understand about partition
sectors/tables and the various (non-standard) ways some systems got round
the original DOS 32Mbyte partition size limit.

As the multiple O/S option didn't really arise, version 2 works on a
physical disk basis (i.e. all the disk or nothing).  This is the good old
KISS principle that helps in building confidence in the implementation.
On a closing note the product has been evaluated to UKL3 (under the scheme
that pre-dated the ITSEC 'E' levels).

David
