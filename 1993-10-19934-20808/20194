Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: PEM Crypto Discussion: Restart
Message-ID: <1993Oct7.055238.16945@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <1993Oct2.210838.761@cactus.org> <CEFx1u.2zv@calcite.rhyolite.com>
Date: Thu, 7 Oct 1993 05:52:38 GMT
Lines: 97


 In <CEFx1u.2zv@calcite.rhyolite.com>
 vjs@calcite.rhyolite.com (Vernon Schryver) writes:


>I'm serious about suggesting
>that you start with your favorite mail user agent code, add MIME and PEM
>support if not already present, and then add "context-database driven
>alternate algorithm and key" support.

 At first glance, I would be more interested in simply defining a
 binary transport facility which would support a negotiation
 channel, message data-type specification, and error checking.
 If it produces the PEM transport character set, the facility could
 reasonably be said to be compatible with all email, PEM or not.
 Once this facility becomes available, selecting cipher or changing
 the cipher becomes an issue of internal negotiation and context.
 This would be a relatively small construction and virtually
 independent of the wrapper which carries it.  It not need be
 designed in a mailing list.

 I am frankly unhappy with the certification needed to support
 quality Public Key capability, and feel that PK itself may be less
 important as a security issue than it seems.  Maybe some people
 do want to tell intimate secrets to new acquaintances, but in this
 case we probably don't need to worry about the security of the
 system at all (maybe we just XOR all the data with 0xa5 and be
 done with it).  On the other hand, businesses have people flying
 around all the time; these people could hand-carry keys.
 Individuals could use snail-mail or an overnight delivery service;
 a hassle, yes, but is it *more* of a hassle than PK certification?
 I guess that ultimately depends on how many people you wish to
 contact on an intimate basis.

 It seems to me that, without PK, there is little need for PEM.
 Sure, PEM supports symmetric crypto, but if we already have another
 system to do that, what else do we get?  Data origin authentication
 and non-repudiation?  Are these really issues in a secret-key
 system?  I see PEM as a PK standard.


>All else equal, or if you don't have to worry about getting "rough
>concensus" as in the IETF or a strict majority or even pro forma unanimity
>as in other standards organizations, you go for the best design possible.
>In a standards effort, you still go for the best design, but "best
>possible" is a political question largely independent of technical or even
>business considerations.

 I understand this very well.

 Which does not mean that I don't hold my nose when I see it
 pass by.


>If you really care about PEM,

 I *don't* care about PEM.

 I *do* care about the availability of serious, efficient, easy-to-
 use privacy in email.

 My introduction to PEM was a recommendation that I should fit one
 of my systems into it (because it is the coming thing).  I did just
 enough reading on PEM to be fairly sure that it could not meet my
 needs with respect to outright security.  My announcement of this
 is intended to inform others that at least one person has thought
 about it, and found PEM insufficient on at least one level.  If PEM
 has other problems at higher levels, I think people would like to
 hear about that, too.  It is neither my expectation nor hope that
 my comments will lead to changes in PEM.  They might, however, lay
 some groundwork for future constructions.


>why aren't you worried about the certificate
>issuers?  What about the dollar cost issues?   Those seem far more
>important that the presense of a header line or two.

 Well, I'm not sure those things *are* more important.  In a security
 system, "strength" is the least effort required over *all possible*
 attacks--that means *everything* is important.  And, certainly, the
 dollar cost is almost independent of design quality; should I not
 be disturbed when the same cost accompanies a design which is less
 than it could be?

 In any case, my area is the cipher itself, the design of the cipher
 engine, the efficient implementation, the security of the cipher and
 the requirements for its use.  There is more than enough to do at
 this level.

 My personal strengths are why I addressed PEM at this level, and
 my limitations are why I ask others to present their views on the
 rest of the design.

 ---
 Terry Ritter   ritter@cactus.org


