Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: PEM Crypto Discussion: Restart
Message-ID: <1993Oct5.061459.20993@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <1993Oct2.210838.761@cactus.org> <CECFLC.69G@acsu.buffalo.edu> <CEDz5q.84K@acsu.buffalo.edu>
Date: Tue, 5 Oct 1993 06:14:59 GMT
Lines: 63


 In <CEDz5q.84K@acsu.buffalo.edu> boyd@acsu.buffalo.edu (Daniel F Boyd)
 is responding to merriman@organic_sw.win.net (David K. Merriman):


>> So 'the opposition' knows you're using a cipher.  Big deal.  Why not take
>> advantage of every 'edge' you can and deny telling them which one? Or
>> lying about it?
>
>How can I prevent the enemy from getting a copy of the PEM RFC, which
>is what we're discussing?  The RFC has to be specific enough so that
>people who have it can communicate securely among each other; the only
>thing that you have to keep secret is your private key.

 This is specifically incorrect, and may be the source of much
 misunderstanding.

 The role of the PK facility is to transfer a secret key in a secure
 manner; it could also transfer cipher and mode id's.

 Given a secure channel, people who use PEM obviously can negotiate
 a new cipher under cover of the old cipher, and then use the new
 cipher.  At that point, they will indeed have to "keep secret"
 something more than their private key:  They will have a private
 *context*, which was established through prior communication.
 Keeping the secret context is hardly more bother than just keeping
 the secret key itself.  But it supports a situation where most
 communications need not occur in a particular known cipher.


>The opposition could sometimes be one of your other correspondents.
>For PEM, assuming you could keep the system secret is stupid, because
>everybody has to be able to use it.

 My proposal is based on very simple principles, mainly that we should
 never give away what we can make The Opponent work for.  It in no
 way assumes that we "keep the system secret."  It does assume that
 stations can negotiate and select a common cipher, and then "keep
 secret" the fact that they have selected that cipher.


>> How so?  If I send an encrypted message - _minus any 'clear' identifiers_ -
>> how can anyone tell what algorithm was used?
>
>Then you must have previously negotiated the algorithm with your
>correspondent, over a secure channel.

 Yes.


>The whole point of public-key
>cryptography is that you don't even need a secure channel to exchange
>keys with.

 The secure channel has been established in the very first message.
 Subsequent messages *can* be used to do the "secret negotiation,"
 thus improving privacy for the entire system.


 ---
 Terry Ritter   ritter@cactus.org


