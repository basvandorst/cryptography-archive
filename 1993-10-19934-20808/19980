Path: msuinfo!uwm.edu!cs.utexas.edu!geraldo.cc.utexas.edu!mccoy
From: mccoy@ccwf.cc.utexas.edu (Jim McCoy)
Newsgroups: sci.crypt,comp.security.misc,alt.security,rec.games.netrek
Subject: Re: Secure identification of software versions
Date: 30 Sep 1993 23:14:28 -0500
Organization: The University of Texas - Austin
Lines: 42
Sender: mccoy@tigger.cc.utexas.edu
Distribution: world
Message-ID: <28gar4$hi0@tigger.cc.utexas.edu>
References: <1993Sep28.210824.15279@cs.ucla.edu> <28fo7f$aa6@agate.berkeley.edu>
Reply-To: mccoy@ccwf.cc.utexas.edu
NNTP-Posting-Host: tigger.cc.utexas.edu
Xref: msuinfo sci.crypt:19980 comp.security.misc:5456 alt.security:12315 rec.games.netrek:22717


In article <28fo7f$aa6@agate.berkeley.edu>, joel@saffron.CS.Berkeley.EDU (Joel A. Fine) writes:
> In article <1993Sep28.210824.15279@cs.ucla.edu>, geoff@ficus.cs.ucla.edu (Geoff Kuenning) writes:
> |> I've been trying to come up with an algorithm that would reliably
> |> identify a particular program as having been compiled from a certain
> |> version of the source code. [...]
> 
> Take a look at netrek. Its authors have come up with a clean, public-key
> based solution to this problem.

Yes and no.  In netrek the player does not get to compile thier own source
code, they get a binary via ftp.  The binaries are compiled with a public
key and the various servers have the option of whether or not to accept the
program's key.  Theoretically it is difficult (but not even close to
impossible) to dig the key out, but even if someone does it only takes a
quick change on the server to invalidate all of the clients using the
discovered key (and a new client would be compiled with a new key).  I
doubt your players would really care much about digging out the key when
they can use other methods (like logging in from multiple machines or
accounts in a workstation cluster...)

To prevent the multiple-player syndrome you would need to give each player
thier own unique client, and even then identity is so difficult to
determine over the net that you face other problems.  One possiblity you
might consider is to give each registered player a public key to prove
thier own identity and then limit rank progression based upon who the
opponenets are and not entirely how the game went (e.g. if one high rank
has three low ranks run up a score for him he gets next to nothing because
they were low rank, but in a real game a high rank beating a high rank
causes one to gain points and another to lose them..)

jim

p.s. The netrek people got prior approval from PKP for using RSA in the
game and only do authentication with it to get around export controls, so
once you have a plan and if you plan on using pubkey for authentication ask
RSA and they will probably say yes...

-- 
Jim McCoy                	|  UT Unix Sysadmin Tiger Team
mccoy@ccwf.cc.utexas.edu 	|  #include <disclaimer.h>
pgp key available via "finger -l", on pubkey servers, or upon request
