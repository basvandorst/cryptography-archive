Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!pipex!sunic!kth.se!hemul.nada.kth.se!md85-epi
From: md85-epi@hemul.nada.kth.se (Urban Koistinen)
Subject: Crack my hash function, win $100
Message-ID: <1993Oct3.095437.13819@kth.se>
Summary: New hash function, comments welcome
Keywords: hash, C, prize
Sender: usenet@kth.se
Nntp-Posting-Host: hemul.nada.kth.se
Organization: Royal Institute of Technology, Stockholm, Sweden
Date: Sun, 3 Oct 1993 09:54:37 GMT
Lines: 95

I have created a hash function that can be made harder to crack
by increasing the buffer size and the number of rounds.
As a crack I accept two different strings that produce the same
hash code when run through this program.

Prize: $100
(maybe this will make someone tell me if I am very stupid)

Speed: about 170 kbyte/s on my 486SX25
       about 800 kbyte/s on a sparc

It is meant to be used in a program like PGP, for encryption also
using 64 rounds and xor to encrypt and decrypt.

--- cut here
#include "stdio.h"

/* uint32 must be 32 bits unsigned int */
typedef unsigned long uint32;

/* BUFSIZE should be a power of 2 */
#define BUFSIZE (0x400)

uint32 buf[BUFSIZE];

void
rounds(int n)
{
  int i;
  uint32 v, a, b;
  v = 0;
  b = buf[0]&(BUFSIZE-1);
  for (i=32;i--;) v ^= (buf[i]>>i);
  
  for (;n--;) /* number of rounds */
    for (i=BUFSIZE;i--;)
      {
	a = buf[i];
	a += v; /* Diffusion */
	if (i!=b) /* usually true */
	  a += buf[b]; /* Confusion */
	v = (v>>1);
	v ^= a;
	b = a&(BUFSIZE-1);
	buf[i] = a;
      }
}

int
ldbuf()
{
  int c, i, j;
  for (i=BUFSIZE;i--;i--)
    for (j=4;j--;)
      {
	c = getchar();
	if (c<0)
	  {
	    buf[0] ^= (i<<2) + (j+1);
	    return(0);
	  }
	buf[i] ^= c<<(j*8);
      }
  return(1);
}

sthash()
{
  int i;
  for (i=8;i--;)
    printf("%08x", buf[i]);
  printf("\n");
}

main ()
{
  int i;

  for (i=BUFSIZE;i--;)
    buf[i] = 0;
  buf[0] = 1l << 31;
  rounds(64);

  for(;ldbuf();) rounds(8);

  rounds(64);

  sthash();

  exit(0);
}
--- cut here
-- 
Urban Koistinen - md85-epi@nada.kth.se
Stop software patents, interface copyrights:  contact lpf@uunet.uu.net
