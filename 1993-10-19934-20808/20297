Newsgroups: sci.crypt
Path: msuinfo!agate!ames!pacbell.com!att-out!cbnewsh!cbnewsh.cb.att.com!wcs
From: wcs@anchor.ho.att.com (Bill Stewart +1-908-949-0705)
Subject: Re: IDEA key questions
Organization: Leaving Bell Labs for AT&T NCR in Pleasanton CA Oct 15
Date: Mon, 11 Oct 1993 18:32:35 GMT
Message-ID: <WCS.93Oct11133235@rainier.ATT.COM>
In-Reply-To: asb@cs.nott.ac.uk's message of Mon, 11 Oct 93 08:47:58 GMT
References: <1993Oct11.084758.14808@cs.nott.ac.uk>
Sender: news@cbnewsh.cb.att.com (NetNews Administrator)
Nntp-Posting-Host: rainier.ho.att.com
Lines: 45

In article <1993Oct11.084758.14808@cs.nott.ac.uk> asb@cs.nott.ac.uk (Andrew Brown) writes:
   Does anybody know if repeating patterns within the 128 bit IDEA key
   introduce any weakness into the system ? The reason I ask is that I
   am considering writing an implementation where the key is based on a
   user supplied password. I would not expect many users to enter a 128
   bit password so I was going to repeat the password bits throughout the
   width of the key. Anyone attacking my system is very unlikely to know
   the width of the password before they start.

Repeating the keys doesn't gain you anything - the Bad Guy doing
brute-force search knows your algorithm, so will know to take a guess
"ab" and transform that into "abababababababab".
128 bits is 16 characters, or 18 if you're dropping high-bits.
Some of your users may want keys that long.
Vesselin's suggestion of using MD5 on the keys to get 128 bits
doesn't make much difference for short keys, but it does let users
input arbitrarily long keys if you program can handle them,
and it does mean brute-force searchers are stuck with the slowness of
MD5 as well as anything IDEA-specific.

As a long key example, anonymous ftp typically wants your email address;
wcs@anchor.att.com is 18 characters ; asb@cs.nott.ac.uk is 17 ...

   While I'm on this subject, I was toying with the idea of running each
   file to be encrypted through an LZW compressor before encryption. But
   since the first code output by LZW is either the 9-bit clear code or
   258 (9 bits) I dropped the idea since it seems to introduce a known
   start to each file. Was I right to do this ?

As Vesselin says, 9 bits of known plaintext in a 64-bit block isn't much.
You can reduce the effect much more by using a block chaining mode,
and starting the transmission with a random initialization vector;
this has the added benefit that encrypting the same message two
different times produces two different outputs.
Alternatively, if the first 9 bits are always the same, just drop them,
and add them in when you decompress.

Compression also has the advantage that you have fewer bits to encrypt,
and encryption is generally a lot slower than compression/decompression.

--
#				Pray for peace;      Bill
# Bill Stewart 1-908-949-0705 wcs@anchor.att.com AT&T Bell Labs 4M312 Holmdel NJ
# I'm moving to NCR in Pleasanton CA around Oct 15, so my mail delivery
# will be pretty unreliable for a few weeks after that.
