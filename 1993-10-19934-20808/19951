Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!pipex!uunet!math.fu-berlin.de!news.dfn.de!news.dkrz.de!rzsun2.informatik.uni-hamburg.de!bontchev
From: bontchev@news.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Privacy-Enhanced Mail: Crypto Problems
Message-ID: <CE6DGA.5Kx@informatik.uni-hamburg.de>
Sender: news@informatik.uni-hamburg.de (Mr. News)
Organization: University of Hamburg, Germany
X-Newsreader: TIN [version 1.1 PL9]
References: <1993Sep28.184747.28814@cactus.org>
Date: Thu, 30 Sep 1993 16:21:45 GMT
Lines: 201

Terry Ritter (ritter@cactus.org) writes:

> >>  OK, but *why* is a product cipher strong?  I think the answer is
> >>  that the individual techniques have *different kinds* of strength.
> >
> >I don't know why - and haven't seen such kind of analysis in any of
> >the books/papers I have read on the subject. I guess, the guys who
> >have designed the S-boxes should have an idea of what makes the cypher
> >strong, but AFAIK, this knowledge is classified.

>  Classified or not, the general reason is what I said. 

How do you know? :-)

> Would you
>  prefer to believe in some hidden mystery? 

I am certainly more prepared to believe some scientific papers with
hard facts in them than the claims in some message posted in
sci.crypt...

> What is unknown is what
>  specific details the original designers had in mind.

That might be quite important, see below.

>  In the past
>  few years there have been some very good papers on how one would

BTW, a few references would be useful - and not only to me, I think.

>  build strong Feistel ciphers.  But, in my opinion, no such cipher
>  can be appropriate for new construction.

I disagree. As far as I understand, the SkipJack algorithm is member
of the same class of cyphers as DES, and is designed using the same
(classified) knowledge. I believe it to be more secure than DES (the
escrow nonsense apart) - and it is unlikely that the additional
security is achieved only by increasing the key length and the number
of rounds. There are again S-boxes and again something unknown to the
general public is used in their design.

>  Vesselin, I don't know if you are just playing with words here,
>  but, otherwise, I cannot believe that you have been reading my
>  messages.  Anyway, I'll just assume you are serious.

I am serious. There seems to be some communication problem - either
you are not clear enough, or I am misunderstanding something due to my
lack of suficient skills in English and/or cryptography. Probably the
latter.

>  Certainly a key must be transported.  Certainly this process is
>  "rather essential." 

Well, this is what I meant.

> But this is not the issue I was discussing.
>  I was discussing how a system could be built which supported a
>  multiplicity of ciphers, yet did not pass the cipher indication in
>  the plaintext Email header.  As far as I could (and can) tell, you
>  were arguing the opposite, for the reason that you could not see
>  how this could be possible.

No, no, there is obviously a communication problem between us. I am
not arguing the opposite. I do understand your arguments that a more
flexible and not so obvious system is better and agree with them. I
was only arguing against your proposed implementation - probably
because I have not understood something from your description.

>  The method I have suggested several times is that any first
>  communication use DES.  Then, if there are to be other
>  communications, the "negotiation" could be "piggybacked" on
>  normal messages, still using DES.  This negotiation would be
>  hidden inside the cipher envelope, automatic, and hidden from
>  the user.  When agreement is reached (if computers can be said
>  to "agree"), the cipher is changed.  The user need not notice.
>  The key could be just the same old key, assuming that a
>  substantial key (supporting the extra strength) had been
>  transferred originally.

Well, it seems that I am still not understanding you completely. You
keep talking about "only the first communication", "negotiation", etc.
I am insisting that it should be possible for the user to decrypt the
message s/he has received, even if there has been no prior negotiation
and this is the first and only message that s/he will receive.
Therefore, all information about how to decrypt the message should be
present in the message itself.

This said, I of course agree that it should be possible for this
message to say: "OK, that were some initial headers, encrypted with
DES-CBC. From now on we're going to use something else for the rest of
the message, let's say, mmm... IDEA-CBC". That is, the message couls
specify more than one cypher to decrypt the message.

It is my understanding that PGP already does something like that.
Currently it uses only IDEA to encrypt the messages, but there is a
header that say that the IDEA cypher is used. This headed can be used
to specify another cypher, AND THIS HEADER IS ENCRYPTED, using the
public key of the recepient. So, while currently PGP uses only IDEA,
there is no problem to make it able to use any other (set of)
cypher(s), and nobody but the recepient will be able to tell which one
exactly has been used.

Is this what you are proposing?

> >The only solution is to have it present -in- the message.

>  No, Vesselin, this is *not* the only solution.  Read it again:

> >> When the agreed-upon cipher is used, the definition of that cipher
> >> includes key processing which initializes a cryptographic RNG,
> >> which then shuffles the desired substitution tables.  This produces
> >> unique tables which are wholly dependent on the User Key; thus, the
> >> tables have effectively been "sent" in the key itself.

I read it several times, but fail to see how my comment is wrong. What
do you mean by "User Key"? The public key of the recepient, or the
session secret key used to encrypt the message? In the first case,
there's no point to transmit any random substitution tables, because
the public key is public info, and anybody could get the tables from
it. Therefore, I must assume that you mean that the substitution
tables are derived from the session key. Well, but the session key
-is- sent with the message (encrypted with the public key of the
recepient, of course), so I am right...

>  of that cipher, using the key.  Certainly it should not be the
>  business of the PEM specs to prohibit such ciphers.

Agreed. An Internet standard should provide flexibility for future
developments, not remove it.

> >The randomly selected b-to-a encoding table is encrypted with the
> >public key of the recepient. The encrypted result is encoded using
> >some standard b-to-a table. Even if somebody intercepts the message,
> >they have no way to find out what is the real encoding table used for
> >the rest of the message.

>  There is no need to be sending tables.

You probably mean - because they can be derived from the session key
in a straighforward way? Well, this means that they still have to be
sent with the message (after all, the session key -is- sent with the
message). But I agree that this solution would be more elegant that
using yet another packet to transmit the encrypted tables...

No, wait, if the whole message is encoded, using some random
substitution table (which can be obtained only by decrypting the
session key) - then how do you convert into binary form the encrypted
session key in order to RSA-decrypt it? At least -that- part must be
encoded in some standard way, which is still no better than what I
proposed - and its presence in the messages can be detected
automatically too - which I think you are trying to avoid...

Seems that I am still missing something of your idea.

> >>  Next, the two ends negotiate under the cover of a minimal standard
> >>  (such as DES-CBC), to agree upon a different and stronger cipher.
> >
> >This is exactly the inconvenience - they have to negotiate first.

>  Oh, yes.  Selecting from an essentially unbounded list of ciphers
>  *is* less convenient (to the program) than just having one.  There

No, the inconvenience I had in mind was the need for PRIOR
NEGOTIATION, in order to select that particular cypher. Maybe your
selection of the word "negotiate" is misguiding me, but it makes me
think that you are assuming some PRIOR and TWO-WAY communication
between the sender and the recepient BEFORE the recepient is able to
decrypt the message.

>  There would be some negotiation overhead, but then there need be
>  no description of the cipher--now mandated for each and every
>  message--in the header, giving us a possible win in overall
>  efficiency.

If you mean that which particular cypher is used should be encrypted,
using the public key of the recepient (just like it is done with the
session key for that message) - yes, I agree with that. However, it
will be still possible to detect that the message is (say) NewPEM
encrypted - with the RSA encryption hiding the particular cypher used
and the key for that cypher. If you mean something else, please
explain.

>  As far as I can tell,
>  you haven't been listening.

More correct (and more polite, BTW) is to assume that I have not
been UNDERSTANDING. I'm ready to believe that this is the case and
will NOT suggest that you are not able to express you thoughts in a
more clear way. So, please excuse my lack of enough command of the
English language and/or lack of enough skills in cryptography (which
is just a hobby; my real field of expertise is computer viruses), and
explain in more detaills, if I am still missing something.

Regards,
Vesselin
--
Vesselin Vladimirov Bontchev          Virus Test Center, University of Hamburg
Tel.:+49-40-54715-224, Fax: +49-40-54715-226      Fachbereich Informatik - AGN
< PGP 2.3 public key available on request. > Vogt-Koelln-Strasse 30, rm. 107 C
e-mail: bontchev@fbihh.informatik.uni-hamburg.de        22527 Hamburg, Germany
