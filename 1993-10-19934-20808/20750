Newsgroups: comp.security.unix,comp.sys.sun.admin,alt.security,comp.security.misc,sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!pipex!uunet!olivea!apple.com!amd!netcomsv!netcom.com!bbosen
From: bbosen@netcom.com (Bob Bosen)
Subject: Re: crypto calculators (Was: Re: Security Incident)
Message-ID: <bbosenCFM4Cu.2q9@netcom.com>
Organization: NETCOM On-line Communication Services (408 241-9760 guest)
References: <2a3s4b$mm2@garnet.msen.com> <1993Oct21.000734.4804@tigger.jvnc.net> <nagleCFB6pn.D5z@netcom.com> <bbosenCFKFEG.7u3@netcom.com> <2ammr2$49t@nym.ossi.com>
Date: Thu, 28 Oct 1993 15:00:29 GMT
Lines: 39
Xref: msuinfo comp.security.unix:577 comp.sys.sun.admin:23527 alt.security:12655 comp.security.misc:5903 sci.crypt:20750

aegl@ossi.com (Tony Luck) writes:

>bbosen@netcom.com (Bob Bosen) writes:
>>Actually, a time-dependency tends to DECREASE security unless it is
>>implemented very carefully. The problem comes when you try to 
>>distribute a time-dependent authentication system. As the number of
>>clocks grows, it becomes increasingly hard to keep them all synchronized.
>>A network with only a few dozen hosts and only a few hundred users
>>might well have a collective time disagreement on the order of 3 or 4
>>minutes. A time-dependent authentication device that displays dynamic
>>passwords every 30 seconds or so would then have to allow 6 or 8 valid
>>passcodes for every user.

>But there are plenty of ways to make sure that your hosts are fairly
>closely synchronized ... one of the better ways is to run NTP - Network
>Time Protocol (Unix version available via FTP from louie.udel.edu in
>/pub/ntp, there are implementations for lots of other OS's too).  On
>our network all our hosts are generally within 10 milli-seconds (larger
>deltas do occur because Sun's drop clock ticks when printing kernel
>error messages on the console).  And yes, NTP does provide an authentication
>mechanism to reduce the risk of forcing a host to have the wrong time by
>sending it bogus packets.

>Having closely synchronized clocks is handy in other security contexts too
>(e.g. it makes sense to compare audit logs from different systems) ... not
>to mention how useful it is to actually have a computer that knows what the
>right time is rather than some vague approximation.

Tony, that's a neat solution for half of the problem. The time-dependent
calculators still drift. And you're right that having accurately synchronized
clocks is a good idea for other reasons. Nevertheless, user accountability
is still lost because of replayability during the window of validity. The
SIZE of the window can be diminished, but not the vulnerability during
it or the resultant loss of accountability.

Regards,

Bob Bosen

