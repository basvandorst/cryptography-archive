Newsgroups: sci.crypt,rec.games.pbm
Path: msuinfo!agate!howland.reston.ans.net!pipex!harlqn.co.uk!harlequin.co.uk!markt
From: markt@harlqn.co.uk (Mark Tillotson)
Subject: Re: Will this scheme work ...
In-Reply-To: anspring@news.delphi.com's message of 7 Oct 1993 21:41:50 -0400
Message-ID: <MARKT.93Oct11221744@wundt.harlqn.co.uk>
Lines: 43
Sender: usenet@harlequin.co.uk (Usenet Maintainer)
Organization: Harlequin Limited, Cambridge, England
References: <1993Sep25.055607.4810@cs.cornell.edu> <TSOS.605.749988109@uni-duesseldorf.de>
	<1993Oct7.165159.28890@cs.wisc.edu> <292ggu$jic@news.delphi.com>
Date: Mon, 11 Oct 1993 22:17:43 GMT
Xref: msuinfo sci.crypt:20310 rec.games.pbm:10868


> >>>The Problem:
> >>>A group of people are playing a game over e-mail. They need to throw dice
> >>>every turn. Unfortunately, they can't find somebody ``trustworthy'' to
> >>>do it for them. So, how can they throw dice
> >>>
> >>
> 
> How about this:  Each player generates a large random number, computes
> the MD5 hash, and then discloses the hash to the other players.
> Each player is now committed to his number, since no ther number will
> produce the same hash.  Then each player reveals his number to the others,
> the result is summed (and optionally hashed again, if you like) and the 
> result mod 6 is the die roll.

But this is relying on no-one guessing the random number algorithms
used by the other players, and also requires that the random number
algorithms be such that their sum is truly random---how can each
player trust the other players' RNGs without knowing how they work,
and if they know how they work they can predict them, and thus break
the scheme...

I don't see how the above is any different from just disclosing the
random numbers themselves without bothering to go through the MD5 hash
stage? 

I would suggest taking all the numbers (preferrably verified by a
public key authenication step, and hashing them _all_ together (don't
sum them first!), and then deriving the die number from that.

You also need to beware of someone faking _all_ the die-roll messages,
so a public-key protocol where each message has a time stamp and
die-roll number encrypted in would be needed (however if the
participants cannot securely exchange authenicated public keys, that
doesn't really work!)


======================================================
|\  /|          | ,  M. Tillotson       Harlequin Ltd. \
| \/ |  /\| |/\ |<   markt@uk.co.harlqn  Barrington Hall,\
|    |  \_| |   | \  +44 223 872522       Barrington,      \
I came, I saw, I core-dumped...            Cambridge CB2 5RG \

