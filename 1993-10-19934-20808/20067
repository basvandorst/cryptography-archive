Newsgroups: sci.crypt
Path: msuinfo!agate!spool.mu.edu!news.cs.indiana.edu!mvanheyn@cs.indiana.edu
From: Marc VanHeyningen <mvanheyn@cs.indiana.edu>
Subject: Re: PEM Crypto Discussion: Restart
Message-ID: <21106.749708812@moose.cs.indiana.edu>
Sender: mvanheyn@cs.indiana.edu
Organization: Computer Science Dept, Indiana University
References: <1993Oct2.210838.761@cactus.org>
Date: Sun, 03 Oct 1993 23:26:52 -0500
Lines: 101

Thus said ritter@cactus.org (Terry Ritter):
>
> Now that we have gotten through the preliminary objections :-), it
> is time to re-present my thesis that--as presently defined--the
> Privacy Enhanced Mail RFC's have cryptographic problems:
>
>
> 1. PEM openly and unnecessarily displays the existence of a cipher
>    in the construct:   ----- BEGIN PRIVACY-ENHANCED MESSAGE -----.
>
>    This discloses information unnecessarily, and in some future
>    situation could cause embarrassment or legal problems for a user.
>    It unnecessarily flaunts a sensitive government issue.  Plus,
>    it virtually prevents a user from arguing that the decision to
>    use cipher is itself a personal, private decision (the letter
>    *inside* the envelope) which should not even be open to
>    inspection or discussion.

For the use of cryptographic mail to be widespread, it must be
convenient.  This means that user agents must be able to detect
encrypted messages so they may be processed automatically.  This also
means that Bad Guys will be able to detect encrypted messages.

> 2. PEM openly and unnecessarily discloses the cipher identification
>    and mode (for example, "DES-CBC").
>
>    Again, this discloses something which should be private.
>
>    (Current conversations would have to re-negotiate and eventually
>    change to a different cipher, of course.)  When a new cipher
>    design comes out, it would only be necessary to install the
>    software and place its identifier on the local list.  Thus, the
>    scheme converts a requirement for society-wide convulsive change
>    into a simple software upgrade.

This is an interesting specific aspect of a general problem of
determining what the recipient's mail user agent can handle before
sending data.  It might be nice to include information about accepted
ciphers in one's certificate, I suppose.  A negotiation algorithm for
message contents could be defined on top of existing PEM, maybe...

> 3. PEM seems to unnecessarily prohibit the direct use of ciphers
>    which are designed to produce radix-64 ciphertext, requiring
>    instead ciphers to produce "binary" (e.g., radix-256) data,
>    which is then coded into network-transportable ASCII.
>
>    This is wrong, because it prevents a cipher designer from
>    incorporating the radix-64 coding in the cipher itself, thus
>    simultaneously gaining efficiency and strength in a translation
>    which is otherwise cryptographically useless.

Such a design would be silly and inefficient in the long run.  The
necessity of encoding data into printable characters is a temporary
side effect of current mail transport systems; 8-bit clean mail is not
hard to do, and sending unnecessarily encoded data would be wasteful.
The MIME-PEM standard separates encoding into the more general MIME
encoding rules, which is where it belongs.

> 4. Vesselin Bontchev points out that "A public key encrypted
>    message should not reveal who has signed it or who is able to
>    decrypt it."

This would depend on the application, but I'm inclined to agree
(though it is not entirely clear to me how the latter information can
be protected securely, even if we ignore the fact that the MTA must
necessarily know it unless you use some kind of network of
limited-information remailers or something.)

> I have no idea whether there is anything to be done about these
> problems, but I do find it strange that the crypto design was not
> discussed here in sci.crypt before publishing RFC's.  I think an
> open newsgroup discussion must be preferable to the "smoke-filled
> back-room" of a mailing list.  Many of us are simply not interested
> in the politics of the standards process.  The current design is
> less than it could be, regardless of whatever compromises have been
> necessary to achieve some sort of agreement.

The fact that the standards making process was done in a mailing list
and at working group meetings is hardly unique to PEM.  Newsgroups
have much too low a signal-noise ratio to actually accomplish
anything.

> There is some advantage to considering the standardization of the
> internal message format to carry control in addition to data.  This
> might support an arbitrary further interpretation of message data
> for currently unknown purposes.  The control area could say (in
> essence) "the message is text,"  "the message is graphics," "the
> message is an 80x86 binary," etc.--all necessary distinctions and
> not, as far as I know, addressed in PEM.  Use of the control area
> to carry the message "start ciphering" could correspond to the
> "first occurrence," described above.

Sounds a lot like MIME-PEM.

I'll freely agree that there are some significant limitations to PEM,
some of which make sense and some of which don't.  It's not at all
clear to me that the existing system of distinguished names is a great
one, for instance.  But I don't find many of the objections you
mention above terribly compelling.
--
Marc VanHeyningen  mvanheyn@cs.indiana.edu  MIME, RIPEM & HTTP spoken here
