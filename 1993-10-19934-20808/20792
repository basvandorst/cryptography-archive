Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!cs.utexas.edu!devnull!integrity!edr
From: edr@mpd.tandem.com (Ed Rupp)
Newsgroups: sci.crypt
Subject: Re: Computer Shopper Challenge
Message-ID: <1993Oct30.033130.1576@integrity.uucp>
Date: 30 Oct 93 03:31:30 GMT
References: <CFJBDE.7Dt.3@cs.cmu.edu> <1993Oct27.083012.7668@kth.se> <PCL.93Oct27173931@rhodium.ox.ac.uk>
Sender: usenet@integrity.uucp (User for usenet)
Organization: Tandem Computers Inc.
Lines: 21

In article <PCL.93Oct27173931@rhodium.ox.ac.uk> pcl@ox.ac.uk (Paul C Leyland) writes:
>The search didn't show anything significant, BTW.  Either that, or I've
>overlooked something.  Ho hum.

Gee, the first thing I did with this was a frequency count.

For SECRT1 we have:
sp   e  t  i  n  o  h  a  r  2  $  w d0 cc \n  s  l e4 ae  u  * c
119 92 83 79 68 67 66 65 59 58 57 56 54 54 54 53 53 52 52 52 52 51 ...

And for SECRT2 we have:
sp   t  e  o  a  r  n  i  s \n  p cb  c \0 b4 96  h \r d0 ^T 87  u  l  g
154 91 86 79 77 71 70 70 67 62 62 60 60 59 58 58 57 56 55 55 55 55 55 55 ...

Sure looks like a normal ASCII text file character distribution to me.
So this implies an incredibly poor RNG, or possibly a broken
implementation that causes the RNG to produce way too many zeroes?

Maybe the high counts for 0xD0 and 0xCC are PC text-mode line drawing
characters?   That would account for the failure of the 'bit 7 off' 
searches.
