Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: PEM Crypto Discussion: Restart
Message-ID: <1993Oct6.074405.21503@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <1993Oct2.210838.761@cactus.org> <28720.749846032@prickly.cs.indiana.edu>
Date: Wed, 6 Oct 1993 07:44:05 GMT
Lines: 182


 In <28720.749846032@prickly.cs.indiana.edu>
 Marc VanHeyningen <mvanheyn@cs.indiana.edu> writes:


>What you're talking about is making each message part of an ongoing
>conversation in which there is "state" information from previous
>messages which is critical to decoding subsequent messages.  This
>could be a good idea for some applications, though it introduces tons
>of additional concerns both for the specification and the
>implementation.  How do you handle messages that arrive out of order?
>How about messages that are simply lost?  That cross in mid-stream?
>How much state information will there be?  How is it stored?  What if
>it's lost?  What if it's compromised?  What if I want to be able to
>read and send mail from multiple locations but I don't want to have to
>constantly be synchronizing state information about which keys I use
>with whom?  How much will the process of acceptance and implementation
>be slowed by adding all this complexity?  How much benefit will the
>average user who is not a cypherpunk get from all this?

 Oh, yes, there are *so* many questions.  I guess that must be it.
 I guess that must be why it is a better idea to disclose the
 existence of cipher, and name the cipher itself, in each and
 every message.  I see it now.  Silly me.

 Not.

 Questions like these are a normal part of design.  Finding the
 answers, and a design which has the right answers, is what design
 people do.  It may take more than a minute or so.


>> I believe the issues of cipher design, and cipher/coding efficiency
>> belong to the cipher designer, and not in the PEM specification.
>> PEM should specify the transportable character set, plus rules
>> establishing line delimiters and length limits, and leave it at
>> that.
>
>So how to you guarantee that implementations will be interoperable?

 Yes, ciphers must be described in a way which will allow different
 implementations to interoperate.


>Why should the cipher designer be worrying about mail encoding
>considerations?

 Because a designer who does so can reap the benefit of using the
 additional complexity into the encoding step, thus producing a
 stronger cipher for little additional processing cost.  The name
 of the game in software ciphers is strength for speed.


>Of existing "real" ciphers, which of them were
>designed with encoding considerations in mind?

 Presumably, none.  Silly them.  I guess they did not anticipate
 PEM and its particular coding.


>You were the one who started talking about encoding concerns and how
>neat it would be to label message contents as "binary" or "image".
>That is what MIME does, and why it would be dumb to re-invent the
>wheel.  I am telling you why encoding contents for transport through
>mail systems should not be in the same layer as the encryption.

 And I am telling you that a better cryptosystem should not easily
 reveal that the message is in cipher, nor what that cipher is.
 This means more than just not explicitly announcing these things
 to the world.  It means that the message itself must generally
 be coded binary, otherwise the indication of cipher is blatant.
 Moreover, either the ciphered message must contain a control
 channel, or there must be a separate enciphered control message
 (less desirable).  And the first case means that some sort of
 record-separation would be required in the binary message.  Since
 the hidden control-channel is *required* for cipher selection
 negotiations, the appropriate logical level for this channel is
 the ciphering level, not the message-content level.  However,
 once this facility is introduced, it is easily expanded to
 handle more general message-content capabilities.


>Considering PEM without considering MIME would be like considering it
>without considering RFC 821.

 The ACM article appears to describe MIME as multimedia email, which
 PEM is being extended to use.


>There are lots of tradeoffs.  Hiding the existence of a cipher would
>arguably enhance the security for the paranoid [...]

 Hiding the existence of cipher would arguably enhance the security
 for *anyone*, even those who are paranoid.

 On the other hand, I wonder if most people would not label as
 "paranoid" anyone who seriously considers the possibility that
 someday there may be a real "Opponent" who might try to read their
 confidential email.  Perhaps every crypto designer is--and must
 be--inherently paranoid.  Can an ordinary non-paranoid individual
 ever really understand security?


>The changes you propose would make the standard
>significantly more complex (god knows it's complex enough and has
>taken long enough to do already), make it harder to build compliant
>implementations, and hinder interoperability.

 Oh, yeah, like the rest of our systems are not complex.

 Things are generally complex because they need to be complex to
 do the job.  I like simple systems, but it does not make sense
 to have a simple system which makes life easier for the attackers.

 Interoperability would not be affected.


>A better PEM would be
>no good if nobody used it because it didn't exist, wasn't reliably
>interoperable, barfed on bad state information every time a message
>got bounced because a machine was down, or wouldn't let me read email
>from my laptop because I didn't remember to update the state
>information before I left home.

 I propose that we avoid designing something in a way that won't
 work.

 Even a strong system can be used in ways that make it weak.  If one
 of the strengths of a system is its hidden context, and you act
 to disable that context because it is too awkward for you, then
 you have a weaker system.

 One alternative is to have only the weaker system.  For everybody.
 All the time.


>> I find my objections very compelling, all the more because they
>> cost almost nothing beyond the vision of a better design.  Clearly,
>> the group "design vision" did not include a desire to hide either
>> the existence of cipher, or the particular cipher used.
>
>This is true.  Presumably they didn't think the costs were worth the
>benefits.  Why not ask them?

 I am not interested in *why* they did not do it; I am simply
 pointing out that better security requires things which are not
 supported in PEM.  The implication of this is that we cannot assume
 that "the privacy problem" has been solved for us by PEM.  This
 means that alternate--perhaps PEM incompatible--approaches and
 implementations may be required in some applications, and demanded
 by some serious users.

 I am pointing out that PEM is not an appropriate model for secure
 email in general, unless one has an interest in having less-than-
 the-best-security email.


>> But I wonder why, if you see other problems, you have not come
>> forth to discuss them in a forum which may be able to understand
>>[...]
>
>Whom are you addressing as "you"?  I have nothing to do with the PEM
>working group [...]

 Oh, 'scuse me.  I just naturally thought that when you said:

>>>I'll freely agree that there are some significant limitations to PEM,
>>>some of which make sense and some of which don't.

 that you would have something to say.  Guess I was wrong.



>I can't say as I blame them for having better things to do.

 I don't blame them at all.  I simply regard the result as
 cryptographically insufficient and a bad example.

 ---
 Terry Ritter   ritter@cactus.org


