Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: PEM Crypto Discussion: Restart
Message-ID: <1993Oct5.074229.24052@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <1993Oct2.210838.761@cactus.org> <21106.749708812@moose.cs.indiana.edu>
Date: Tue, 5 Oct 1993 07:42:29 GMT
Lines: 108


 In <21106.749708812@moose.cs.indiana.edu>
  Marc VanHeyningen <mvanheyn@cs.indiana.edu> writes:


>> 1. PEM openly and unnecessarily displays the existence of a cipher
>>    in the construct:   ----- BEGIN PRIVACY-ENHANCED MESSAGE -----.
>[...]
>
>For the use of cryptographic mail to be widespread, it must be
>convenient.  This means that user agents must be able to detect
>encrypted messages so they may be processed automatically.  This also
>means that Bad Guys will be able to detect encrypted messages.

 The way this response is constructed, I read it as supposedly being
 an argument that *if* we have cryptographic mail, *then* user agents
 must be able to identify an enciphered message *from the message
 itself*.  This argument is only partially correct.  While it *is*
 necessary to announce the *initial use* of cipher (which should be
 the default cipher); it is *not* necessary to announce this in
 all subsequent messages, as PEM does.

 Automatic processing has available to it the private key associated
 with a particular Email target; it could also maintain a short
 "context."  The context might include the current ciphering state,
 for example, the textual identifier of the current cipher (including
 "none").  The context would be a unique user-user quantity.  Thus,
 messages which do not *transport* the cipher type, can nevertheless
 *specify* the cipher by having a previously-established context.
 Obviously, first-time messages would use a default cipher.


>> 3. PEM seems to unnecessarily prohibit the direct use of ciphers
>>    which are designed to produce radix-64 ciphertext, requiring
>>    instead ciphers to produce "binary" (e.g., radix-256) data,
>>    which is then coded into network-transportable ASCII.
>>[...]
>
>Such a design would be silly and inefficient in the long run.  The
>necessity of encoding data into printable characters is a temporary
>side effect of current mail transport systems

 In that case, one might reasonably wonder why PEM requires such
 encoding.  And, since PEM *does* require it, why a cipher design
 which performs better for the same strength (by doing its own
 coding) is not reasonable and efficient in the "short run,"
 whatever that may turn out to be.  If so, it is hardly the place
 of the PEM specification to prohibit it.

>; 8-bit clean mail is not
>hard to do, and sending unnecessarily encoded data would be wasteful.

 I believe the issues of cipher design, and cipher/coding efficiency
 belong to the cipher designer, and not in the PEM specification.
 PEM should specify the transportable character set, plus rules
 establishing line delimiters and length limits, and leave it at
 that.

>The MIME-PEM standard separates encoding into the more general MIME
>encoding rules, which is where it belongs.

 I am discussing PEM because an article on PEM was recently
 published in the Communications of the ACM, and because I think the
 cryptographic design should be better, or at least people should be
 informed that what they are getting is hardly the height of secure
 design.  MIME is something else again.


>The fact that the standards making process was done in a mailing list
>and at working group meetings is hardly unique to PEM.  Newsgroups
>have much too low a signal-noise ratio to actually accomplish
>anything.

 The RFC's speak for themselves as to the quality of the PEM
 development.  It simply is not possible to argue that a
 cryptosystem which announces the existence of cipher, and names
 the particular cipher and mode in every message, is stronger than
 some design, otherwise equivalent, which does not.   One *could*
 argue that protecting the cipher type has a minor effect, is
 unnecessary, irrelevant, too late, etc., but *not* that the
 current design is *stronger* than the alternative.  I find this
 a disturbing stance for a standard *deliberately* positioned as
 a *privacy* standard.


>I'll freely agree that there are some significant limitations to PEM,
>some of which make sense and some of which don't.  It's not at all
>clear to me that the existing system of distinguished names is a great
>one, for instance.  But I don't find many of the objections you
>mention above terribly compelling.

 I find my objections very compelling, all the more because they
 cost almost nothing beyond the vision of a better design.  Clearly,
 the group "design vision" did not include a desire to hide either
 the existence of cipher, or the particular cipher used.

 But I wonder why, if you see other problems, you have not come
 forth to discuss them in a forum which may be able to understand
 them, and which may be more receptive to that information.
 Certainly there is more chance that end users may be informed
 about inherent security problems in a cryptosystem design when
 doubts are discussed here.  At least the crypies would know.


 ---
 Terry Ritter   ritter@cactus.org


