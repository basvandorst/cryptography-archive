Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!pipex!uunet!mnemosyne.cs.du.edu!nyx!colin
From: colin@nyx.cs.du.edu (Colin Plumb)
Subject: Re: Privacy-Enhanced Mail: Crypto Problems
Message-ID: <1993Oct7.004307.27509@mnemosyne.cs.du.edu>
X-Disclaimer: Nyx's hardware; my opinions.
Sender: usenet@mnemosyne.cs.du.edu (netnews admin account)
Organization: Nyx, Public Access Unix at U. of Denver Math/CS dept.
References: <27vvdj$mjc@nic.umass.edu> <WILLETT.93Oct5005053@solitude.math.utah.edu> <1993Oct5.093151.27643@cactus.org>
Date: Thu, 7 Oct 93 00:43:07 GMT
Lines: 61

In article <1993Oct5.093151.27643@cactus.org> ritter@cactus.org (Terry Ritter) writes:
> Well, if you *did* trust "unrecognized algorithms," it *would* buy
> you all that much.  (I suspect the problem lies more in the
> "recognition" than the algorithms.)

The first thing you learn when studying the history of cryptanalysis
is that, to a first-order approximation, all ciphers are garbage.
If you restrict yourself to ciphers developed by non-cryptanalysts
(and there are VERY few good cryptanalysts who publish their work)
then this holds to a second-order approximation as well.

> Assume that there are just 10 reasonable cryptosystems (I think
> there could easily be hundreds), and that multiple encryption were
> allowed:  This gives 1000 triple-encryption possibilities alone.

Hooray.  10 bits.  And if each of the ciphers is about 10 bits of
work to break (and don't get cocky and think your system is better -
the few cryptosystems I've attacked from freeware products have
required work between linear and quadratic in the number of bits of key),
that's 40 bits total.  That is considered weak.

> And if you were a cryptosystem designer, you probably would trust
> your own algorithms.

Well, I *am* a cryptosystem designer (I'm working on the extensions for
PGP 3.0) and I don't trust any ciphers I've designed.  So I guess I'm
an exception.

> One way to think of cipher selection *is* like adding bits to a key
> for a single cipher.  However, if someone, somewhere, has found an
> attack on that cipher, adding key bits may not mean much, whereas
> the ability to use a different cipher (even with many fewer bits)
> may give effective security.  Note that, in general, we will not
> know if someone does have such an attack.  One defense against this
> is to have *a lot* of good, strong, ciphers and to use them.

Many cryptanalytic attacks can be used against whole *classes* of
ciphers.  Look at Differential Cryptanalysis and the line of ciphers
it's punched holes in.  There are lots of kinds of guns, but if
someone comes up with something that is proof against metal bullets,
variety doesn't help.

> *I* don't trust cryptosystems which have been around too long.

Well, I'm of the opposite opinion.  I'm starting to trust the DES,
becuase now its weaknesses have been explored.  After Michael Wierner's
paper, I won't trust single DES, but triple-DES will do.

Also, any system that hasn't been around long enough for people to start
using it is not very useful to me.  Changing algorithms, keeping more
things secret, and the things you've been proposing have merits, and
certainly don't hurt security (well, NOT using a tried-and-true cipher
would be a bad mistake), but they make cryptosystems harder to use
and more prone to procedural mistakes which could compromise the system.

There is a lot more to secure communicatinos than a secure cipher.  In
designing a cryptosystem, I have to keep in mind the fact that people
make mistakes and might leak information.  Minimizing that risk
is where it gets interesting.
-- 
	-Colin
