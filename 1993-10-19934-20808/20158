Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!pipex!uknet!pavo.csi.cam.ac.uk!nmm
From: nmm@cl.cam.ac.uk (Nick Maclaren)
Subject: Re: Random Bits from keyboard timings.
Message-ID: <1993Oct6.105434.25298@infodev.cam.ac.uk>
Keywords: random , bits, keyboard
Sender: news@infodev.cam.ac.uk (USENET news)
Nntp-Posting-Host: ely.cl.cam.ac.uk
Organization: U of Cambridge Computer Lab, UK
References: <28tjag$8c6@news.delphi.com>
Date: Wed, 6 Oct 1993 10:54:34 GMT
Lines: 42

In article <28tjag$8c6@news.delphi.com>, anspring@news.delphi.com (ANSPRING@DELPHI.COM) writes:
|> Encryption schemes have a huge appetite for random numbers.  
|> PC based encryptors have a hell of a time generating these, 
|> since PC's are very deterministic.  The carbon unit attacted 
|> to most PC's (sometimes referred to as the user), interacts 
|> randomly with the device, making it advantageous to use user 
|> inputs as a way of generating a pool of random numbers.  The 
|> time intervals between key strokes are often used for this.
|>  
|> Assumption:  the time interval t = t_key_hit-t_last_key_hit 
|> has a poisson density : 
|>     p(t) = 1/T * exp(-t/T) where T is the mean interval.
|>  
|> ...
|>  
|> The above argument is based on intuition, and of course
|> intuition outside one's domain of expertise is very risky, 
|> but it seems reasonable.  Also, my poisson distribution 
|> assumption may be shaky.  Keystroke timings might be gaussian 
|> instead of poisson.  But the math for poisson sure is a lot 
|> easier to do!

You are right, but are underestimating the shakiness.  The timings will
definitely NOT be even close to either a Poisson or Gaussian drstribution.
They will also have a complex structure, due to both keyboard layout and
phrase frequency (and this habit).  Your numbers will almost certainly fail
many or most of the standard empirical statistical tests.

Using such timings as a way of generating random numbers was used in the
1950s (sorry, no references that I can remember), and was given up when
the first decent methods were invented.  HOWEVER, using such timings as
a source of non-predictable randomness to counteract the predictability of
a pseudorandom generator is entirely reasonable.


Nick Maclaren
University of Cambridge Computer Laboratory,
New Museums Site, Pembroke Street,
Cambridge CB2 3QG, England.
Email:  nmm@cl.cam.ac.uk
Tel.:   +44 223 334761
Fax:    +44 223 334679
