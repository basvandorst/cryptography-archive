Path: msuinfo!agate!usenet.ins.cwru.edu!gatech!swrinde!cs.utexas.edu!uunet!haven.umd.edu!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson)
Newsgroups: sci.crypt,comp.security.misc
Subject: Re: DES is dead...
Date: 1 Oct 1993 13:40:06 -0400
Organization: University of Maryland, Baltimore County Campus
Lines: 66
Sender: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Distribution: world
Message-ID: <28hq1mINN3de@umbc7.umbc.edu>
References: <Sep.7.00.34.20.1993.15481@net.bio.net> <1993Sep29.022010.12390@cirrus.com> <strnlghtCE3xL9.4G2@netcom.com> <PCL.93Sep30112940@rhodium.ox.ac.uk> <strnlghtCE6GoB.HM3@netcom.com>
NNTP-Posting-Host: umbc7.umbc.edu
Xref: msuinfo sci.crypt:19996 comp.security.misc:5469


In article <strnlghtCE6GoB.HM3@netcom.com>, strnlght@netcom.com (David Sternlight) writes:
|> 
|> Thus as long as the search scheme tries any key only once, after it has run
|> for a while, if one changes one's key there is a finite probability one has
|> changed it to a key that has already been unsuccessfully searched, and thus
|> the probability of detection on a single search of the space (in that
|> instance) falls to zero. The next step in the calculation is to determine
|> the probability that any key falls into the now-excluded space. Given the
|> complexity, simulation is one approach and another reader has kindly set up
|> a simulation model (which he posted) and drawn the results. It shows that my
|> analysis is correct and the original poster's incorrect on empirical
|> grounds, though I have been arguing on theoretical ones.
|> 
|> Key variables also include the length of the full space search, the
|> frequency of key change, etc. But except for a true pseudo-random search in
|> which the same key might be repeatedly tested, or in the case of a trivial
|> cryptosystem where the full space search time is much less than any
|> reasonable key change interval, the original poster is incorrect. Since one
|> cannot guarantee the search scheme used by an adversary, the original
|> poster's idea that one shouldn't change keys is also unwise.
|> 
|> (Some here have made the correct observation that changing keys doesn't
|> prevent past traffic from being cracked. That wasn't, however, the original
|> poster's argument.)
|> 

I have to disagree.  As Richard Tobin showed in by far the
best posts on this subject, regularly changing the key can
at most double the time it takes an on-line attacker to find
the current key.  Specifically, if you change the key once
for every k keys the attacker tries, the expected number of
keys the attacker needs to try to find a current key out of
a space of N keys is:

N - (k-1)2.

(Actully Tobin had k where I have k-1, but the difference is trivial.)

Also, a randomized search order is not needed.  As long as
the keys chosen do not depend on the key being searched 
(a reasonable assumption since the attacker will most likely 
not provide the needed information), any order of cycling 
through the keys is just as good.


So Frequent Change of key:

1) Limits the amount of data exposed by a compromised key,

2) Increases the search time for a current key by at most
a factor of 2,

3) Does not increase the search time for a key to previously
recorded traffic.


The factor of 2 increase in effort is not really very
significant.  The major reason to change keys is to
limit the ammount of data compromised.

I don't think DES is dead.  But it should be.  A 56 bit
key is simply too short.  

Bryan Olson
olson@umbc.edu
