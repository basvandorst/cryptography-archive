Newsgroups: sci.crypt
Path: msuinfo!agate!ames!pacbell.com!amdahl!netcomsv!netcom.com!farid
From: farid@netcom.com (Farid F. El-Wailly)
Subject: Re: Privacy-Enhanced Mail: Crypto Problems
Message-ID: <faridCF3pHo.6xw@netcom.com>
Organization: Netcom - Online Communication Services (408 241-9760 guest)
References: <780@organic_sw.win.net> <PCL.93Oct12143415@rhodium.ox.ac.uk> <PCL.93Oct18113630@rhodium.ox.ac.uk>
Date: Mon, 18 Oct 1993 16:22:35 GMT
Lines: 62

In article <PCL.93Oct18113630@rhodium.ox.ac.uk> pcl@ox.ac.uk (Paul C Leyland) writes:
>
>6 days ago, I posted an example of steganography *not* involving
>pictures or images.  This was to clear up what was, IMO, a misconception
>by another author.
>
>I wrote:
>
>   By steganography, I understand: "the process of hiding information other
>   than by textual scrambling such as cipher and code".  Ambiguous, yes,
>   but more useful than your definition, IMO.  For instance:
>
>	   This odd sentence amends usably to an agent.
>
>   Ok, that wan't very secure, but:
>
>   1)  Tell me what it means.
>   2)  Create a better one off the top of your head and mail it to me.
>
<more comments about what it meant deleted>

It would be interesting to explore how well a software assisted
steganography system could work. The english language, for example,
has enough redundancy to theoretically bury one message in another
of the same length. I'm talking about conveying a meaning or piece
of information across, not the exact sequence of words or characters
used.

I envision a system where you compose a message and hand it to
the steganography program which would compose a new message about a
totally unrelated topic but whose information content were completly
determined by your message.  You send this new inocent message and
the reverse process is performed at the receiving end.

I, of course, have no idea how the innards of the above would work.
But this is what I came up with:

The program would compress your message and arrange the bits into
four bit nibbles.  It would then ask you to compose a new _inocent_
message. As each sentence is typed in it computes a keyed secure
hash of that sentence and discards all but four bits which are
compared to the next nibble of the secret message.  If it matches
it lets you know and we move on to the next sentence.  If not, it
tells you to rephrase last the sentence (which would hash
differently) and tries again. At the end of the (tedious) process
you have an inocent message that hashes (in a secure keyed way) into
a shorter secret message.

If the secret message is short the nibble could be made smaller (three
or two bits) to make the rephrasing less tedious. Or, if we can 
automate the rephrasing process and have it not look too artificial, we
could go with larger nibbles and pack more secret info per sentence.

What do you think?

Farid.

-- 
Farid F. El-Wailly                 farid@netcom.com
``PGP could potentially become a widespread problem.''
  Dorothy Denning, Georgetown University professor and National
  Security Agency consultant
