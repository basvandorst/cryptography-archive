Path: msuinfo!agate!howland.reston.ans.net!pipex!uunet!racerx!ken
From: ken@Bridge.COM (Ken Hardy)
Newsgroups: sci.crypt
Subject: Re: Secure identification of software versions
Message-ID: <1709@racerx.bridge.COM>
Date: 5 Oct 93 02:13:09 GMT
References: <1993Sep28.210824.15279@cs.ucla.edu> <1993Sep29.094815.25347@infodev.cam.ac.uk> <1706@racerx.bridge.COM>
Sender: news@racerx.bridge.COM
Organization: Planet Earth
Lines: 26
Nntp-Posting-Host: ernie

In article <1706@racerx.bridge.COM> ken@Bridge.COM (Ken Hardy) writes:
>Unfortunately, the only thing that stops someone from resigning a
>modified file is the "secret" nature of the signature algorithm.  Since
>I'd like to distribute the verifyer with the signed files (so it's
>there to do checking when trouble arises) someone could disassemble it
>to recreate my algorithm.  I guess this is an example of "security
>through obscurity"; obfuscation cannot be guaranteed.

A couple of correspondents suggested using public key encryption for
the stored signature.  If the signature is calculated as before but
then stored as encrypted with my private key.  The verifier uses my
public key to decrypt the stored signature for comparison against the
calculated one; anyone can check it, anyone can disect the verifier,
but only I can create the signature.  This, as I understand it, is how
"signed" (authenticated) e-mail (e.g.) works.  Should have thought of
that.

The only threat I see now is someone at the client site simply
replacing the verifyer with something that says, "Yup!  Looks OK to
me!" rather than really doing the signature verification.  But that's
another problem for another day.

-- 

Ken Hardy
ken@bridge.com  (racerx!ken) --__-_____--__-__--_--__-___-__-__-___----
