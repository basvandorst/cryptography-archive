Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!network.ucsd.edu!mvb.saic.com!ast.saic.com!actd!agnew
From: agnew@actd.actd.saic.com (Bob Agnew)
Subject: Re: LOW ASCII ENCRYPTION
Message-ID: <1993Oct25.152133.3622@ast.saic.com>
Sender: news@ast.saic.com
Reply-To: agnew@actd.actd.saic.com
Organization: Science Applications International Corporation
References: <1993Oct22.220944.25980@wuecl.wustl.edu>
Date: Mon, 25 Oct 1993 15:21:33 GMT
Lines: 38

In article 25980@wuecl.wustl.edu, jln2@cec2.wustl.edu (Sammy D.) writes:
>In <93102017192459@burnflag>, static.runner@burnflag (STATIC RUNNER) scribbles:
>: DT>I am an absolute novice when it comes to cryptography, so please bear
>: DT>with me. Does anybody know if there is an existing tried and
>: DT>tested key based algorithm that yields only low ASCII output (ie. 128
>: DT>and less)? If so, where can I get hold of it?
>: 
>:     Well, PGP for one has an ASCII armoring function, which does
>: effectively the same thing.  The latest version (2.3a) of the MS-DOS
>: compiled version and the source can be FTPd from black.ox.ac.uk among other
>: places, ghost.dsi.unimi.it I know for a fact carries a wide selection
>: encryption programs which includes PGP for almost all environments.
>: Otherwise, when dealing with ANY encryption program, have you thought of
>: simply UUEncoding it?
>
>It should be noted that uuencode produces characters that may only exist
>in the US ascii character set.  ASCII armoring is based on just using
>those 64 characters that pretty much _have_ to exist on all computers.
>(At least those that support fortran ;-)  If you have to talk to an
>ebcdic based machine (ibm mainframs) or something _really_ weird 
>(did you know CDC used to have its own char encoding?) ASCII armoring
>is the way to go.
>
>-- 
>"We cannot always do the good that we would, but we can
>always refuse to do evil." -- Richard John Neuhaus

Tsk, Tsk.  In this day and age, I should think that we would be more concerned 
with the various ISO character sets such as ISO 646-1983, 2022, 4873, 6937,......
I guess we could always use the ISO 8879 SGML representation of these entities
based on the 64 ASCII subset codes. Thus an up arrow becoms %uArr; for instance.


---
"Those who cannot cope with mathematics are not fully human. At best they
are tolerable sub-humans who have been taught to bathe and not make messes
in the house."  From the Notebook of Lazarus Long (Robert Heinlein)

