Newsgroups: comp.security.unix,comp.sys.sun.admin,alt.security,comp.security.misc,sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!cs.utexas.edu!swrinde!elroy.jpl.nasa.gov!decwrl!news.kpc.com!amd!amdahl!netcomsv!netcom.com!bbosen
From: bbosen@netcom.com (Bob Bosen)
Subject: Re: crypto calculators (Was: Re: Security Incident)
Message-ID: <bbosenCFKFEG.7u3@netcom.com>
Organization: NETCOM On-line Communication Services (408 241-9760 guest)
References: <2a3s4b$mm2@garnet.msen.com> <1993Oct21.000734.4804@tigger.jvnc.net> <nagleCFB6pn.D5z@netcom.com>
Date: Wed, 27 Oct 1993 17:03:51 GMT
Lines: 72
Xref: msuinfo comp.security.unix:550 comp.sys.sun.admin:23452 alt.security:12639 comp.security.misc:5881 sci.crypt:20730

nagle@netcom.com (John Nagle) writes:

>johnson@tigger.jvnc.net (Steven L. Johnson) writes:
>>vsagen@garnet.msen.com (Applied Computer Solutions) writes:
>>>mjr@tis.com (Marcus J. Ranum) writes:
>>>>
>>>>	In this case, there's a shared secret between the server and

(.. Regarding susceptibility of crypto calculator authentication to
    known plaintext attacks...)


>>Yes, but DES (or the particular encryption chosen) is not
>>(must not be) susceptible to a known plain text attack, so
>>this is not a problem.  I believe that the only known plain
>>text attack against DES is a brute force method which some
>>have shown is feasible, but fairly expensive.  Use of triple-DES
>>most likely raises this to infeasible for the near future.

>      That's right, but still, it would be better if these things had
>long internal keys.  A few hundred bits, say.

>      Some have clocks inside, so the challenge/response sequence is
>time dependent.  This is important if the challenge is short.

>					John Nagle

Considering that the 56-bit key used in a single pass of DES is
billions of times more difficult to break than snatching a cleartext
password (IMHO), the vast majority of environments would be well
served not to hold out for triple-DES crypto calculators.

Actually, a time-dependency tends to DECREASE security unless it is
implemented very carefully. The problem comes when you try to 
distribute a time-dependent authentication system. As the number of
clocks grows, it becomes increasingly hard to keep them all synchronized.
A network with only a few dozen hosts and only a few hundred users
might well have a collective time disagreement on the order of 3 or 4
minutes. A time-dependent authentication device that displays dynamic
passwords every 30 seconds or so would then have to allow 6 or 8 valid
passcodes for every user.

Picture it from the standpoint of a host evaluating a user's time-dependent
passcode: If the user provides the expected passcode, access is granted
as you would expect. However, if the user provides an incorrect passcode,
access cannot be DENIED until after the logic has exhausted the possibility
of the password 30 seconds BEFORE that time (in case the user's time-dependent
calculator is a little ahead of the host) and the password 30 seconds AFTER,
and 60 seconds before, and 60 seconds afterward, etc. In large networks,
this window of password acceptability tends to expand upward toward 5
minutes each way of center.

Unless a great deal of care is put forth in the design and implementation
of the network, this large window of validity is also a large window of
vulnerability: anybody can capture anybody else's passcode and replay it
during the validity window to access a DIFFERENT host. (Accessing the
same host won't work if the host is properly configured to deny re-use.)

Short-challenge devices need not be time-dependent, and time-dependent
devices need not be less secure; there are a lot of overlapping issues
here, but great care should be exercised in any situation where replayability
may be possible, because it destroys all user accountability. The last thing
you want to do is to spend a lot of money on a non-replayable user
authentication system and then hear your users deny responsibility for their
actions by saying "it wasn't me.... Somebody could have captured my password
during the validity window...."


Regards,


Bob Bosen 
