Newsgroups: comp.ai.genetic,sci.crypt
Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!pipex!uknet!pavo.csi.cam.ac.uk!nmm
From: nmm@cl.cam.ac.uk (Nick Maclaren)
Subject: Re: What are the best random numbers for genetic algorithms (was: Re: GA random no. gen.
Message-ID: <1993Oct13.103015.11420@infodev.cam.ac.uk>
Sender: news@infodev.cam.ac.uk (USENET news)
Nntp-Posting-Host: ely.cl.cam.ac.uk
Organization: U of Cambridge Computer Lab, UK
References: <29e54i$e6c@fbi-news.informatik.uni-dortmund.de> <RICE.93Oct12114922@hpp-ss10-1.stanford.edu> <29f8bm$gcu@senator-bedfellow.MIT.EDU> <1993Oct13.033953.18408@mnemosyne.cs.du.edu>
Date: Wed, 13 Oct 1993 10:30:15 GMT
Lines: 36
Xref: msuinfo comp.ai.genetic:1510 sci.crypt:20366

In article <1993Oct13.033953.18408@mnemosyne.cs.du.edu>, colin@nyx.cs.du.edu (Colin Plumb) writes:
|> In article <29f8bm$gcu@senator-bedfellow.MIT.EDU> fuellen@athena.mit.edu (Georg Fuellen) writes:
|> >Why does the new generation of rng's not come across ?
|> >
|> >Possible reasons:
|> >
|> >- They are communicated only in hard-to-read and hard-to-get 
|> >  journal/proceedings articles.
|> >- They are too inefficient (but see [MS91] ).
|> >- Nobody needs this perfect randomness (see for instance [KR88] ).
|> >- Implementation may need special software (e.g. large integer arithmetic) 
|> >- There are patents and arms export problems.
|>
|> Basically, cryptographically strong RNGs are much more complicated and slower,
|> and I don't think anyone needs them unless one has a very smart "opponent".
|> A genetic algorithm might be able to adapt to a simple RNG, but using, say
|> a large period additive congruential RNG followed by a scrambler (e.g. Knuth's
|> Algorithm B) should be effectively random to genetic algorithms for the
|> near future.

No way, I am afraid.  I have some papers and other in the pipeline that show
this is not a safe combination.  All right, your chances of being badly
caught are low, but there are some major flaws.  Also note that Marsaglia
does not recommend additive congruential generators on their own, but adds
them to something else (modulo 1).

There are generators of this sort of nature that are probably adequate for
the forseeable future, but the type you suggest definitely is not.  Sorry.

Nick Maclaren
University of Cambridge Computer Laboratory,
New Museums Site, Pembroke Street,
Cambridge CB2 3QG, England.
Email:  nmm@cl.cam.ac.uk
Tel.:   +44 223 334761
Fax:    +44 223 334679
