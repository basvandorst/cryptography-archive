Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!spool.mu.edu!howland.reston.ans.net!europa.eng.gtefsd.com!news.ans.net!newsgate.watson.ibm.com!hawnews.watson.ibm.com!yktnews.watson.ibm.com!mudvolcano!lwloen
From: lwloen@rchland.vnet.ibm.com (Larry Loen)
Subject: Re: Pencil and paper encryption algorithm
Sender: news@rchland.ibm.com
Message-ID: <1993Oct15.201549.46858@rchland.ibm.com>
Date: Fri, 15 Oct 1993 20:15:49 GMT
Reply-To: lwloen@rchland.vnet.ibm.com
Disclaimer: This posting represents the poster's views, not necessarily those of IBM
References:  <richardrCEv67J.3Ex@netcom.com>
Nntp-Posting-Host: mudvolcano.rchland.ibm.com
Organization: IBM Rochester
Lines: 138

I am posting the following response on behalf of John Taber, whom I know
to have good deciphering skills (that is, he is known to have deciphered
at least hobby level systems and has some skill with unknown paper and
pencil systems).

I couldn't resist adding a comment or two, even though I agree heartily
with John's analysis.  Hope John doesn't mind.

At present, John is without Internet access.

In article <richardrCEv67J.3Ex@netcom.com>, richardr@netcom.com (Richard L. Robertson) writes:
|> 
|> Bruce Schneier      schneier@chinet.chinet.com 
|>      says in Message-ID: <CEtKr4.7B7@chinet.chinet.com>
|>                    Date: Wed, 13 Oct 1993 05:04:13 GMT
|>                 Subject: Pencil and paper encryption algorithm
|> 
|> >For a while now I have been trying to invent a pencil-and-paper
|> >encryption algorithm.  The idea is to create an algorithm that
|> >can be used without computers, but is still secure against
|> >computer-aided attacks.  Recently I came up with a candidate
|> >algorithm.  I am still testing it, but I figured I'd let it out
|> >into the world for comments and criticisms.
|> >
|> >This is what I have come up with:
|> >
|> >    Algorithm and stuff deleted
|> >
|> 
|> 
|> To:  Bruce Schneier      schneier@chinet.chinet.com 
|> 
|> 
|> Without analyzing this algorithm for effectiveness against
|> computer-aided cryptanalysis attacks, from personal experience I
|> think that there are some very serious practical problems with a
|> pencil and paper implementation. 
|> 
|> Some time back in pre-history, before the age of readily available
|> computers (ie, pre-IBM 1401 days), I learned how to design camera
|> and telescope lens using hand-calculated ray tracing. I learned the
|> direct way that the speed of pencil and paper calculation is _very_
|> slow and the error rates are moderate (>= 1 - 2%) when doing
|> extensive pencil and paper calculations. Every calculation had to
|> be double checked for addition _and_ transcription errors.
|> 
|> This was reinforced when I worked as a clerk in an insurance
|> company (pre-computerization) where I calculated policy values from
|> 9 to 5 every day. There we had mechanical calculators to do the
|> arithmetic, but the error rate was still moderate (>= 0.5%, mostly
|> due to transcription errors) and the throughput still abysmally low
|> by today's standards. All work had to be double checked by another
|> clerk, and it was a _very_ rare day that anyone's error rate
|> dropped below 0.25%.
|> 
|> To more specifically address your pencil and paper algorithm, if
|> you consider a message of K characters broken up into N columns
|> with M iterations using different random keys, it is obvious that
|> the number of operations (adding two letters) is ~ K*N*M. 
|> 
|> For a 1000 character message (< 200 words) using 10 columns and 2
|> iterations, this becomes ~ 20,000 pencil and paper operations.
|> Taking the (wildly) optimistic assumption that this can be done at
|> a rate of 1 operation a second, encrypting the message will consume
|> ~ 20,000 seconds, or > 6 hours. Decryption will consume a
|> comparable amount of time.
|> 
|> If the error rate of calculation and transcription is ~ 0.5%
|> (plausible based on experience with comparable pencil and paper
|> work), encryption of a 1000 character message will generate ~ 100
|> errors as will decryption. (Without the math text right at hand and
|> being too rusty to remember the formula) I would guess-timate that
|> ~ 1/2 - 2/3 of the words would have one or more errors, which is
|> enough to make most textual messages very difficult to read and
|> would make transmission of numbers too unreliable to be of any
|> value.
|> 
|> The method might have adequate cryptographic merit, but it is
|> unfeasible both from enciphering time requirements and the expected
|> error rates in the encipherment. 
|> 
|> 
|> -------------------------------------------------
|> 
|> Richard Robertson       richardr@netcom.com
|> 

John Taber writes:
 
Bruce, for a good pencil and paper cipher, don't overlook the double
transposition.  If used carefully for occasional traffic, it resists
cryptanalysis.  I have been told by a source I consider good that the double
transposition is still in use for limited purposes because it is resistant.
 
There is almost no literature on solving double transpositions.  Gaines has one
sentence saying they are solved by multiple anagramming.  Apparently, you
collect several messages of the exact same length and encrypted by the same
keys.  Then, the two incomplete columnar transpositions can be treated as a
single equivalent permutation.  You line up the messages column by column, then
begin anagramming the columns, looking for likely digraphs.  You need about
five messages.

[I have read this, too.  I would warn that I have worked toy examples of this
and, with great pains, had success with as little as two messages.  Please note
that multiple anagramming will work against any transposition cipher whatever
that has no substitution or other ciphering element. -- Larry]
 
I know of no open literature on recovering the two column permutations from the
equivalent single permutation.  Maybe by solving several sets of messages of
different lengths, you can make inferences about the two column permutations.
There is a monograph on checking putative keys for correctness, but I haven't
seen anything on finding putative keys.  There is probably classified
literature on the subject.

[This is relevant as far as the opponent obtaining all messages written in
that key pair, including those of other message lengths.  But, you also
have to judge if it is OK to have "only" "some" messages intercepted before
worrying about this very much.  -- Larry]
 
I agree with Richard Robertson's criticism of your proposed cipher.  It is too
complicated and far too error prone.  It might help if everybody keeps in mind
that ciphers are not used by cryptographers.  Think of the guy in the foxhole
desperately asking for help while the enemy is doing its best to kill him.
 
If you use long keys (not single words), like BIS VIVIT QUI BENE VIVIT for one
and ROYAL NEW ZEALAND NAVY for the other; if you are careful not to encrypt two
messages of the same length (use padding); if you pad carefully (use LNRST, not
QX); if you are careful that message length is not a multiple of either key
length (again, use padding); and use it for low traffic, like between two
people; then I believe it is secure.  I think it is necessary to train people
in its use.
 
John K. Taber (no net address yet, maybe someday)


-- 
   Larry W. Loen        |  My Opinions are decidedly my own, so please
                        |  do not attribute them to my employer
