Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!cs.utexas.edu!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: Privacy-Enhanced Mail: Crypto Problems
Message-ID: <1993Oct7.182521.15311@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <27vvdj$mjc@nic.umass.edu> <1993Oct7.004307.27509@mnemosyne.cs.du.edu>
Date: Thu, 7 Oct 1993 18:25:21 GMT
Lines: 148


 I am eager to let the thread die so I can return to programming,
 but maybe just one more . . .

 In <1993Oct7.004307.27509@mnemosyne.cs.du.edu>
 colin@nyx.cs.du.edu (Colin Plumb) writes:


>The first thing you learn when studying the history of cryptanalysis
>is that, to a first-order approximation, all ciphers are garbage.

 To a first-order approximation, *everything* is garbage.


> there are VERY few good cryptanalysts who publish their work

 Excuse me for mentioning this little detail, but exactly how does
 a working cryptographer who publishes his work get paid?  Are all
 good ciphers patentable?  Are all good ciphers invented by
 university professors?


>> Assume that there are just 10 reasonable cryptosystems (I think
>> there could easily be hundreds), and that multiple encryption were
>> allowed:  This gives 1000 triple-encryption possibilities alone.
>
>Hooray.  10 bits.  And if each of the ciphers is about 10 bits of
>work to break (and don't get cocky and think your system is better -
>the few cryptosystems I've attacked from freeware products have
>required work between linear and quadratic in the number of bits of key),
>that's 40 bits total.  That is considered weak.

 Perhaps we should replace the battery in the calculator.

 Given 56-bit DES, in triple-encryption we have 168 bits (perhaps
 less a few for statistical duplication), *plus* 10 bits if we
 selected from among 10 ciphers three times.  Or, plus 30 bits if
 we selected from among 1,000 ciphers three times.  (Not that an
 8-byte block cipher could support that strength, of course.)
 Most modern designs at least attempt to be significantly stronger
 than DES.

 Assuming the government gets out of the way and some systems adopt
 my proposal for local negotiation of cipher type, I think we could
 easily see 1,000 new cipher designs in a decade.  And 30 bits is
 30 bits.  That is enough, for example, to take a toy cipher into
 serious territory.  But the real advantage is not in key-bits,
 but in developing a market for new designs, which necessarily
 involves competition, which supports the development of expertise
 in design and evaluation.  Nobody is an expert designer until they
 have designed--and seen the consequences of--real systems.  If we
 can find a way to support such competition, the user automatically
 ends up with designs far beyond those in the current texts.


>don't get cocky and think your system is better -
>the few cryptosystems I've attacked from freeware products have
>required work between linear and quadratic in the number of bits of key),
>that's 40 bits total.  That is considered weak.

 Perhaps it would be better not to make assumptions.

 Three years ago I posted to US sci.crypt, and uploaded to
 Compuserve, the complete source for a fairly-serious shareware
 stream cipher which I named CLOAK.  If you were around then, you
 might recall that it used a 992-bit main key (hashed from an
 arbitrary-length User Key phrase using 32 degree-31 primitive mod-2
 polynomials, which I found), a 992-bit really-random message key
 (developed from precision keystroke timing), and a degree-11,213
 Additive RNG (using a deg-11,213 primitive, which I found) with
 44,852 BYTES of internal state.  The RNG values were nonlinearized
 or "jitterized" prior to combining with data in a double-level
 polyalphabetic combiner based on the nonlinear but reversible
 Dynamic Substitution combiner, which I invented, patented, and
 described in the October 1990 issue of Cryptologia.

 Don't get cocky just because you found a few toy examples.


>> And if you were a cryptosystem designer, you probably would trust
>> your own algorithms.
>
>Well, I *am* a cryptosystem designer (I'm working on the extensions for
>PGP 3.0) and I don't trust any ciphers I've designed.  So I guess I'm
>an exception.

 An interesting contention.

 But tell me:  Do you *release for use* ciphers which you do not
 trust?  If so, do you feel any obligation *to tell your users*
 that the designer himself does not trust his design?

 Or is this just a semantic game for "it is best never to trust
 anything or anybody, even me"?

 Frankly, since users are unlikely to be able to evaluate a cipher,
 I think a cryptosystem designer is ethically required to stand in
 for them and to judge the work.  The designer may be wrong, but is
 still far more likely to be right than a user who might as well
 decide at random, or go for the prettiest box or best-known company.


>> *I* don't trust cryptosystems which have been around too long.
>
>Well, I'm of the opposite opinion.  I'm starting to trust the DES,
>becuase now its weaknesses have been explored.

 Let's imagine you are a new Assistant Professor of Chemistry, and
 it is your goal to synthesize a particular formula.  You try 30
 times and fail each time.  Your associates try and they fail also.
 Every experiment you know about has failed.

 Would you consider it helpful to your future to publish a claim
 that--since so many attempts have failed--obviously no such
 synthesis is possible?  Would you recommend that investors bet
 their money on that conclusion?

 In this case, as in cryptography, the failure of an experiment is
 simply irrelevant, regardless of all the effort and resources
 and people who were pressed into service.

 We may *believe* that all reasonable attempts to break DES have
 failed.  But we *know for sure* that many organizations have had
 an enormous amount of time to work on attacks, and with increasing
 DES traffic, they also have had substantial motive to make serious
 investments in attacks far beyond those which have been reported
 publicly.  We do not know--and *can* not know--that all of those
 experiments have been unsuccessful.  Nor will we necessarily know
 if the 12-year-old computer whiz down the street has found out
 how to do it.

 In a sense, our belief that DES has not been broken is simply the
 arrogant thought that, since we couldn't do it, and our friends
 couldn't do it, obviously *nobody* could do it.  This is hardly
 the best example of modern scientific thought.


>NOT using a tried-and-true cipher
>would be a bad mistake

 Is this a trick statement?  How can a cipher become "tried-and-true"
 if it is never used?  And if it is used, and broken in secret,
 what is to stop a broken cipher from becoming "tried-and-true"?


 ---
 Terry Ritter   ritter@cactus.org

