Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!jussieu.fr!univ-lyon1.fr!swidir.switch.ch!newsfeed.ACO.net!Austria.EU.net!EU.net!uunet!gator!fang!ulysses!smb
From: smb@research.att.com (Steven Bellovin)
Subject: Re: UNIX-Passwd encryption
Message-ID: <CvAz9H.7EC@ulysses.homer.att.com>
Sender: netnews@ulysses.homer.att.com (Shankar Ishwar)
Organization: AT&T Bell Laboratories
References: <33nhniINN2c21@rs1.rrz.Uni-Koeln.DE> <33rg15$jev@nic-nac.CSU.net> <CvA5DA.9tL@chinet.chinet.com>
Date: Mon, 29 Aug 1994 15:34:28 GMT
Lines: 29

In article <CvA5DA.9tL@chinet.chinet.com>, schneier@chinet.chinet.com (Bruce Schneier) writes:
> In article <33rg15$jev@nic-nac.CSU.net>,  <hacsc218@huey.csun.edu> wrote:
> >Unless you have lots of $ for custom chips, you're probably out of luck.
> >Crypt(3), the pasword-encryption function, uses a slightly modified DES.
> >Slightly modified deliberately so that you can't crack passwords with
> >standard DES hardware. 
> 
> What is the slight modification?  I have heard that the expansion
> permutation is different; I have heard that the expansion permutation
> is key-dependent.  Whis is it, or is something else entirely?

This should be in the sci.crypt FAQ...  UNIX password hashing is done
by using the pw as a key, and encrypting a block of all zeroes 25 times.
A possibly-modified DES is used for the encryption.  To modify it, a
random 12-bit ``salt'' is generated at password selection time.  If
bit i of the salt is set, E[i] and E[i+24] are exchanged.  The salt
is stored with the hash password, of course.

As for hardware -- the following paper describes a design:

@inproceedings{Leong91,
   author = {Philip Leong and Chris Tham},
   address = {Dallas, TX},
   booktitle = {Proc. Winter USENIX Conference},
   title = {{\Unix} Password Encryption Considered Insecure},
   year = {1991},
   annote = {How to build a hardware password-cracker.}
}

