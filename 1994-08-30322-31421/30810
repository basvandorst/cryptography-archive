Path: msuinfo!uwm.edu!cs.utexas.edu!not-for-mail
From: ritter@io.com (Terry Ritter)
Newsgroups: sci.crypt
Subject: Testing Recent Hardware RNG Designs
Date: 14 Aug 1994 14:24:46 -0500
Organization: UTexas Mail-to-News Gateway
Lines: 31
Sender: nobody@cs.utexas.edu
Message-ID: <199408141924.OAA11288@pentagon.io.com>
NNTP-Posting-Host: news.cs.utexas.edu

 For testing the hardware RNG's described recently, I would like
 them to include a counter which is large enough to contain the
 full count of however many HF cycles have occurred since the last
 reading (for any possible LF cycle).  I want to be able to read
 that complete value, and thus calculate the number of elapsed
 cycles.  Then I would want to capture enough of these values to
 build a distribution and see the shape, which will no doubt be
 very educational.

 To really understand the RNG, it is necessary to avoid the hardware
 modulo and see the actual "random" count values.  Then we can
 decide whether the modulo operation is sufficient, useful, or even
 necessary.  My guess is that the probability of getting a value
 near one or both ends of the range will be different from the
 probability of getting a value in the middle, in which case we
 would need to think about whether the modulo will cure the problem.
 Maybe a simple hardware fix would solve it, or maybe we could just
 set software limits, and reject any out-of-range value.  Each
 different hardware implementation will probably need the ability
 to conduct an individual certification.

 Now, obviously, if we limit the output to just a single-bit sample
 from the counter, this is a pretty severe modulo, and may be
 acceptable with a wide range of base distributions.  But this also
 drastically limits the random bit-rate, which is an important
 issue.

 ---
 Terry Ritter   ritter@io.com


