Newsgroups: sci.crypt
Path: msuinfo!agate!ames!hookup!yeshua.marcam.com!MathWorks.Com!news.duke.edu!godot.cc.duq.edu!newsfeed.pitt.edu!uunet!news.sprintlink.net!news.dorsai.org!stevalln
From: stevalln@dorsai.org (Steve_Allen)
Subject: My RNG design
Message-ID: <Cu8opK.15z@dorsai.org>
Organization: The Dorsai Embassy, New York, NY
X-Newsreader: TIN [version 1.2 PL2]
Date: Mon, 8 Aug 1994 23:17:43 GMT
Lines: 58

   Based on net advice, mostly from jathomas@netcom.com, I've built
a random-number/password generator. This is a summary of its
design. When I get the design fully vetted, and have finished
prettying up the software, I'll put a package up on
rpub.cl.msu.edu.
   It's a two-oscillator thingy, using a 74hc00 quad nand-gate and
a 4520 binary up-counter. Housekeeping is handled by a P16C84,
which displays output on a 40x2 LCD. (Final version will be a 16x2
LCD, so the box can be a manageable size.)

   The basic idea is that a jittery low-frequency oscillator gates
the output of a high-frequency oscillator.
   For the high-freq oscillator I used a 3.579545MHz quartz
crystal on one gate of the 74hc00.
   The low-freq oscillator uses two more gates of the 74hc00. Call
them gates A and B. The inputs of A are tied together, and its
output is tied to the two inputs of B. On the output of B (which is
the output of the oscillator) is a 100pf capacitor. The other end
of this cap is tied to 2 resistors, R1 and R2. R1, a 1-Meg
resistor, goes to the input of B. R2, a 150K resistor, goes to the
input of A.
   The frequency of this oscillator is about 4670 Hz.
   The outputs of th
e two oscillators are fed into the final nand
gate. Its output goes to the 4520 counter.
   The PIC samples one bit from the counter about every 4 mS. It
takes input from the counter's divide-by-2 output. To read a bit,
you:
  freeze the counter, holding the count stable for reading,
  read the counter,
  unfreeze the counter.

   The basic numbers involved are: 3.579MHz/4670Hz=766. Since the
fast oscillator passes the final gate only when the slow oscillator
is high, figure a nominal 383 high-frequency counts per
low-frequency period.
   The PIC samples every 4096uS/214uS= 19.1 pulses of the low-freq
oscillator.
   I estimate the low-freq jitter at 0.5% peak-to-peak. (Using a
delayed-sweep scope, I see about 10% p-p jitter on the 20th pulse.
1/20 of 10% is 0.5%) 0.5% of 214uS (the period of the lf
oscillator) is about 1 microsecond. This is more than 3 times the
period of the high-speed oscillator (.279uS). After 19.1 instances
of this jitter, the /2 output of the 4520 counter is totally
unpredictable. (n.b.  I'm still testing.)

   The PIC software displays 64 characters at a time in any one
of 6 modes: binary, decimal digits, hex digits, lowercase letters,
lowercase letters and digits, and upper and lowercase letters and
digits. The mode is stored in eeprom, and is recalled on power-up.
  There are two switches beside the power switch: mode change
and start.
   In all modes a running count of total ones minus zeros
since powerup is displayed on the LCD.
   For anyone who is fascinated by random numbers, this is a
totally cool little device.
-Steve

