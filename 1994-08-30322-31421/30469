Path: msuinfo!netnews.upenn.edu!newsserver.jvnc.net!howland.reston.ans.net!gatech!newsxfer.itd.umich.edu!uunet!nwnexus!coho!ken
From: ken@coho.halcyon.com (Ken Pizzini)
Newsgroups: comp.security.misc,sci.crypt
Subject: Re: key exchange sans patent encumberance?
Date: 3 Aug 1994 18:49:43 GMT
Organization: What, me?
Lines: 25
Message-ID: <31oos7$4lk@nwfocus.wa.com>
References: <31lsk2$1ua@news.bridge.com> <phrCtyBKp.HJt@netcom.com>
NNTP-Posting-Host: coho.halcyon.com
Xref: msuinfo comp.security.misc:11099 sci.crypt:30469

In article <phrCtyBKp.HJt@netcom.com>, Paul Rubin <phr@netcom.com> wrote:
>You might consider a one-time pad system along the lines of S/Key.

I agree that given the lack of specific information about
the application that S/Key is a good first suggestion, but
it is *not* a one-time pad system.  (It does work by use
of "use-once" passwords, but "one-time pad" has a specific
meaning that is not appropriate here.)

>For more practical advice, you need to specify in more detail what you
>are trying to do.  Is it ok to store persistent info (DSS secret key)
>on the user's remote computer, possibly in encrypted form?  Are you
>willing to put cryptographic code in your product if it means filling
>out some paperwork in order to export it (since it is used for
>authentication only, getting approval is not difficult)?  How
>much computing power is available at each end of the transaction?
>Is this an interactive application where the user will type a password
>at the start of each session?  If you describe in more detail how
>you see your application being used, we (sci.crypt readers) may be
>able to help you more.

Ditto.


		--Ken Pizzini
