Path: msuinfo!agate!howland.reston.ans.net!usc!nic-nac.CSU.net!ctp.org!not-for-mail
From: jomcgow@eis.calstate.edu (John S. McGowan)
Newsgroups: sci.crypt
Subject: Re: How safe is RSA?
Date: 25 Aug 1994 21:59:19 -0700
Organization: California Technology Project of The Calif State Univ
Lines: 36
Message-ID: <33jsr7$i2g@eis.calstate.edu>
References: <33jfqg$57b@search01.news.aol.com>
NNTP-Posting-Host: eis.calstate.edu

whmurray@aol.com (WHMurray) writes:
> In article <33iujc$c3q@rzsun02.rrz.uni-hamburg.de>,
> bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev) writes:
> 
> >Second, the dificulty to break RSA has not been proven to be
> >equivalent to factoring, so the P = NP problem might be completely
> >irrelevant to the discussed subject.
> 
> Careful how you say it.  It has not been proven that the difficulty of
> breaking RSA is equivalent to the difficulty of factoring.  However, they
> are functionally equivalent. That is, if I have broken RSA, recovered the
> value of the plaintext, then solving for the factors of N is trivial.  
> 


Surely not (at least using extended RSA.. that is, n is square free, 
public key (e,n) private key d where de-1 is divisible by lambda(n))

For example... if n=pq (p,q relatively prime... Carmichael numbers... 
public key e, private key d where ed-1 is divisible by (p-1)(q-1)) even 
if you find the private key (d) and then (p-1)(q-1)... you find p,q which 
only partially factors n (p,q are not prime... to factor n you need do 
more... do not need to do more to decrypt however!).

Are you saying that finding a multiple of lambda(n) permits one to 
partially factor n? (of course, if n has only two prime factors, then you 
have factored it). Does finding lamda(n) (if n=pq where p and q ARE 
prime... lambda(n)=LCM(p-1,q-1)) trivially permit finding p,q (would if 
we had (p-1)(q-1))?

--
   John S. McGowan   |    jmcgowan@bigcat.missouri.edu [COIN] (preferred)
                     |    j.mcgowan15@genie.geis.com   [GEnie]
                     |    jomcgow@eis.calstate.edu     [CORE]
   ----------------------------------------------------------------------

