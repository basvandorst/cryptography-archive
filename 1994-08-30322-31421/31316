Path: msuinfo!agate!howland.reston.ans.net!EU.net!ub4b!btmplq.god.bel.alcatel.be!se.bel.alcatel.be!se.alcbel.be!cgra
From: cgra@se.alcbel.be (Chris Gray)
Newsgroups: comp.graphics,comp.publish.prepress,sci.crypt,comp.lang.postscript
Subject: Re: .ps -> .eps?
Message-ID: <4844@btmwj1.se.bel.alcatel.be>
Date: 29 Aug 94 11:21:29 GMT
References: <collin.777579662@fmwu06> <33encj$j3u@crl6.crl.com>
Sender: guest@se.bel.alcatel.be
Reply-To: cgra@se.bel.alcatel.be
Followup-To: comp.graphics
Organization: Never was my forte
Lines: 51
Nntp-Posting-Host: btmwx4
Xref: msuinfo comp.graphics:60394 comp.publish.prepress:2183 sci.crypt:31316 comp.lang.postscript:26685



Collin Ong (collin@intel.com) wrote:
: I'd like some info on working with .ps Postscript files and .eps 
: encapsulated Postscript files.

: 1) What is the definition of an EPS file and how does it differ from
:    the straight EPS file?

: 2) I know that the text strings in a document are embedded inside the
:    Postscript file and can be edited, changing the content of the
:    document.  Can this be prevented and does EPS change this situation
:    in any way?  What is desired is protection for the integrity of the
:    document contents.
:
: [...]

Collin,

I Am Not A Postscript Guru, but...

1) Such people exist, and would be only too happy to hack their way around
any protection you built into your file, if for some reason they wanted to
pervert your text.  (BTW why should they, and why don't you want them to?)

2) Postscript is a programming language in it's own right; am I right in
thinking that Compressed Postscript files start with a program to unpack
the gibberish which follows, rather like a self-unpacking archive?  Now
if we combine that idea with public-key cryptography 8-(8->) we should be
able to distribute the encrypted form accompanied by a little decrypting
program and a key.  Now there is no (feasible) way to go from this (public)
key to the (private) key which was used for encryption, so our putative
hacker would not be able to re-encrypt a hacked version in such a way that
it could still be decrypted using the public key.

3) Anyone capable of actually implementing this in Postscript really is a 
Postscript Guru, with this sign I do thee crown.

4) If nobody has patented this idea yet then would someone please be so
kind as to put some flesh on the bones and make the whole thing freely
available before some orifice _does_ patent it... donations to the Free
Software Foundation.

__________________________________________________________________________

Chris Gray     cgra@btma74.se.bel.alcatel.be       Compu$erve: 100065,2102
__________________________________________________________________________

         `Beware of bugs in the above program.  I proved it
          correct, I did not try it.'                 - attrib. D. E. Knuth

