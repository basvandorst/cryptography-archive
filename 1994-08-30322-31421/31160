Path: msuinfo!agate!library.ucla.edu!europa.eng.gtefsd.com!gatech!swrinde!cs.utexas.edu!utnut!torn!uunet.ca!uunet.ca!io.org!nobody
From: trebla@io.org (Albert Y.C. Lai)
Newsgroups: sci.crypt,alt.security.pgp
Subject: Re: Cracking Military RSA
Date: 25 Aug 1994 13:00:21 -0400
Organization: Internex Online, Toronto, Ontario, Canada
Lines: 39
Message-ID: <O8$MkizOUR9K069yn@io.org>
References: <32k40g$39k@zippo.uwasa.fi> <jQGJkOwscgnS070yn@io.org> <CutJz1.DD5@sneaky.lonestar.org>
NNTP-Posting-Host: io.org
Xref: msuinfo sci.crypt:31160 alt.security.pgp:19533

In article <CutJz1.DD5@sneaky.lonestar.org>,
gordon@sneaky.lonestar.org (Gordon Burditt) wrote:
> The mathematical theory for factoring a large product of two primes
> is easy:  Try dividing it by every number between 2 and itself - 1.
> You can even use pencil and paper.  Theory doesn't concern itself
> with practical problems like the time required to do it
[...]

A branch of theory, usually known as computational complexity, precisely 
concerns itself with practical problems like the time required to do a task 
and even the memory space required to do a task.  (Cf. P, NP, NP-complete, 
coNP, PSPACE, PSPACE-complete, etc. etc.)

The mathematical theory of modern factoring methods for factoring N is not 
to "try dividing it by 2,...,N-1" but to find X & Y such that X^2 is 
congruent to Y^2 modulo N, then we can hope that gcd(X-Y,N) gives a 
non-trivial factor of N; or else that gcd is 0 or 1 or N.

At another level the mathematical theory of factoring numbers is the 
fundamental theorem of arithmetics: every natural number bears a unique 
factorization into primes.  Neither this statement nor its proof used the 
"try dividing by 2 to N-1" argument.  It's far more ineffective than that.  
The proof merely manipulates the definition of "primes", a property of 
primes, and the definition of divisibilty with mathematical induction and 
logic.  The theorem and its proof doesn't care if you like to "try dividing 
by 2 to N-1" or to "find X & Y s.t. N divides X^2-Y^2".  In front of this 
fundamental theorem, any method of factorization is a matter of practice.  
The theory just says "there is a factorization".

What I want to say is, a piece of knowledge is "theory" at one level and 
"practice" at another level.

You're right on the note that no matter how slow a factorization method is, 
eventually it will yield a factorization.  There is also a theory for that, 
called computability.  It discusses what can be done by "algorithms" (i.e. 
computers) and what cannot, without worrying how much time it will take as 
long as we agree to stick with finite amounts of time and finite input 
lengths.

