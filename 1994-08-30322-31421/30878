Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!gauss.mitre.org!bs
From: bs@gauss.mitre.org (Robert D. Silverman)
Newsgroups: sci.crypt
Subject: Re: Cracking Military RSA
Date: 17 Aug 1994 11:32:56 GMT
Organization: Research Computer Facility, MITRE Corporation, Bedford, MA
Lines: 118
Message-ID: <32ssh8$dhm@linus.mitre.org>
References: <tlittleCuoBr3.Hr1@netcom.com>
NNTP-Posting-Host: gauss.mitre.org

In article <tlittleCuoBr3.Hr1@netcom.com> tlittle@netcom.com (Timothy Little) writes:
>
> Bs> In article <32ncgi$14n@cleese.apana.org.au> clark@cleese.apana.org.au
> Bs> (Steven R. Clark) writes: >William Unruh (unruh@physics.ubc.ca) wrote:
> >: werewolf@io.org (Mark Terka) writes:
> >
> >: >But is it even theoretically possible? From some of the posts I've read
> >: >here and elsewhere, we may not be in possesion of sufficient mathematical
> >: >theory (to say nothing of computational power) to be able to do so.
> >
> >: Those as far as I know we have. What we don;t have is the time. ( ie to
> >: break long keys takes a long long time on current machines with current
> >: equipment.)
> >
> >Not entirely true. If you break the problem up, and use lots of machines
> >in parallel, the problem is not so difficult. A 128 digit key has been
> >broken this way using the internet, and anyone who was interested in
> >taking part.
>
> Bs> ^^^^^^^^ This last sentence is gibberish. And the prior sentence is
> Bs> WRONG. I would call a problem that took about 1600 machines 8 months
> Bs> to solve difficult. Wouldn't you?
>
>Well, actually, the information I've read, the project took 8 months, as
>you've mentioned -- but only 600 machines.  It took a mere 5000 MIPS
 
Then I suggest you don't know how to read. Derek Atkins has said repeatedly
that the project involved 600 USERS, but "around" 1600 machines. He
has confirmed this in personal conversations.

>has 16,384 processors.  His last statement was not at all even
>remotely gibberish.
 
Huh? If you don't think that talking in incomplete sentences is gibberish,
I'd like to know what you think *is* gibberish.

>The problem was broken up into 600 parts.  The parts ran, essentially as
 
Once again, we have someone ignorant of the algorithm, ignorant of
how it was run, and ignorant of the many details making pronouncements.

Where did you get this "600 parts" expression?  MANY more than 600 polynomials
were used and many more than 600 SETS of polynomials were involved. Each
machine is given a set of polynomials to sieve. When it has sieved that
set and reported its results it is assigned a new set. The fundamental
"parts" of the Quadratic Sieve are these independent sets of polynomials
and I assure you that MANY more than 600 were involved.

Tell me. Did you ever bother to READ how the algorithm is implemented in
parallel? If not, then why do you make these ridiculous public pronouncements
about it?

>would take eight months to perform the sieving step.  With 100 MIPs CPUs
>you can do it in a month.
 
NO! NO! NO!.  Once again you are showing your fundamental IGNORANCE
about the algorithm. A 100-MIPS machines does NOT execute it  8 times faster
than a 12.5 MIPS machine. 
 
This algorithm is MEMORY and CACHE bound; not CPU bound. A 100-MIPS
machine might run 3 times faster than a 12.5 MIPS machines. It would
depend on memory cycle time, cache size, design of the TLB, etc.

Try doing a little library research on your subject before shooting
your mouth off.

And how many of the "600 processor" machines do you think there are,
anyway? And what do you think they cost?

>Finally, the problem is easy to solve.  The distribution and collection of
 
And exactly how many large integers have you factored by distributed methods?
I suggest you talk to Derek Atkins or Paul Leyland and find out whether it
was "easy". Theoretically, it is "easy". In practice, the logistics are a
nuisance.

>the program and data might have taken planning.  The construction of the
>4 gigabyte sparse matrix array capable algorithms might have been both
>daunting and challenging but it is by no means difficult to solve.
 
So why don't you tell us how to do it? If you think it is so easy, why
don't you try it?

>
>Assuming the current mathematic methodologies and trends in computing
>progress (speed, power, capacities).  However, progress in mathematical
>methods of factoring have decreased the time required from our old
>conventional estimates, and it is quite likely that at ANY day, any
				   ^^^^^^^^^^^^^^^^

You have no basis for such an assumption. You are neither a mathematician,
nor have you studied existing algorithms. In fact, noone knows whether
factoring is inherently hard or easy.

>person could find a simple mathematical formula for factoring in essentially
	
Such a "simple" formula, on the other hand is unlikely to exist.

>cryptologists and mathematicians in the world).  Is there some special
>knowledge imparted by a degree, or working in the field which a self-taught
>"amateur" cryptanalyst wouldn't be privy to?
 
Self taught, no. But the previous posters haven't bothered to study this
area at all. I am complaining about the fact that many people are discussing
this topic WITHOUT having studied it.

>can.  What we dont need are arrogant pronouncements of who is qualified
>to speak on certain issues.
 
Yes we do. We need pronouncements that those who speak out should have
studied the subject beforehand. People who have not studied it are not
qualified. If this is "arrogant", then so be it.

-- 
Bob Silverman
These are my opinions and not MITRE's.
Mitre Corporation, Bedford, MA 01730
"You can lead a horse's ass to knowledge, but you can't make him think"
