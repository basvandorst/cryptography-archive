Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!EU.net!uknet!comlab.ox.ac.uk!pcl
From: pcl@foo.oucs.ox.ac.uk (Paul C Leyland)
Subject: Re: somebody post a book cipher so I can break it.
Message-ID: <PCL.94Aug3101121@foo.oucs.ox.ac.uk>
In-reply-to: ken@chinook.halcyon.com's message of 22 Jul 1994 20:31:59 GMT
References: <30mil3$gsm@xmission.xmission.com> <30pabv$7qm@nwfocus.wa.com>
Date: 03 Aug 1994 09:11:20 GMT
Lines: 87

In article <30pabv$7qm@nwfocus.wa.com> ken@chinook.halcyon.com (Ken Pizzini) writes:

   In article <30mil3$gsm@xmission.xmission.com>,
   Berzerk <berzerk@xmission.com> wrote:
   >Hey, could someone post a book cipher with the techneque used to generate 
   >it, but with unknown plaintext and unknown book key, so I could prove 
   >that it  can be broken?
   >
   >I have a fealing this will be easy.

   I suspect it should be.  Okay, here is a little ciphertext:

(Deleted)

   And here is the C program that created it:

(Boring boilerplate deleted)

	   while ((pc = getc(textfile)) != EOF){
		   if ((kc = getc(keyfile))== EOF){
			   fprintf(stderr, "%s: unexpected EOF on keyfile %s!\n",
					   argv[0], argv[1]);
			   return EXIT_FAILURE;
		   }
		   putchar(pc ^ kc);
	   }
	   return EXIT_SUCCESS;
   }


This is not what I think of as a book cipher.  It is much more akin to
a running-key Vigenere cipher, the difference being the combining
function is exclusive-or rather than radix-256 addition (radix-26 in
traditional Vigenere, of course).

To me, a book cipher replaces each plaintext character with an index
of an element of the key (book) which is identical to the plaintext
character.  Here's an example.  Suppose the book begins:

           "Now is the time for all good men to come to..."
                     1         2         3         4
            1234567890123456789012345678901234567890123

Then we could represent "o" by any of 2, 18, 26, 27, 35, 38, 43, ...
since the 2nd, 18th, ... characters in the book are all "o".

Variants of this scheme use the first letter of words --- in the
example, "t" would be represented by 3 or 4 or 9, or 11, or ... --- or
perhaps {page, line, word} triples.

I have neither solved the challenge cryptogram nor created what I
think of as a book cipher, sorry.

Paul
















   --------------------------


   Enjoy!


   (Oh, and P.S., if you prefer, I can do this in a variant form
   that more closely matches traditonal useage where plaintext,
   key, and ciphertext all consist solely of uppercase alphabetics.)

		   --Ken Pizzini
--
Paul Leyland <pcl@black.ox.ac.uk>        | Hanging on in quiet desperation is
Oxford University Computing Services     |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is gone, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
