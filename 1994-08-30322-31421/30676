Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!jussieu.fr!pasteur.fr!univ-lyon1.fr!swidir.switch.ch!newsfeed.ACO.net!Austria.EU.net!EU.net!uunet!senior.nectec.or.th!uwov!john.dehaven
From: john.dehaven@wov.com (John Dehaven)
Newsgroups: sci.crypt
Subject: Re: Graph Isomorphism pro
Date: Tue,  9 Aug 1994 13:18:00 GMT
Message-ID: <9408092123322488@wov.com>
Organization: WOV-Net - BSA Co Ltd
Distribution: world
Lines: 39   

 > For that matter any message you recieve that you can decrypt
 > with their public key proves the sender holds the secret key,
 > without revealing any knowledge of the secret key, or so it
 > seems to me.

 MT> To be precise, this proves they hold a message encoded with
 MT> the secret key. For proof, you need an unpredictable message,
 MT> not of their choosing, encrypted with the secret key.

Thanks to several folks who are clearing up my thinking about
this, and caused me to go back to my references.  :-)

Now, postulate a system like PGP.  If it works right, you can't
make *exactly* the same message twice, even if you have the
secret key and encrypt the same digital object.  (Well there is
only some vanishingly low probability of this happening.)  So
each message generated is in this sense already "unpredictable."
If the recipient were to store, say, secure hashes of all
messages purporting to be from a certain keyholder, and you
always require a "new" message, then only that actual keyholder
could make a new message that checked out, eh?

 MT> In any case, "zero knowledge proof" usually refers to a more
 MT> general-purpose application. Something like being able to
 MT> prove that I have a license to drive a motorcycle without
 MT> revealing my name or driver's license number. Public key is a
 MT> highly restricted instance of a more general concept.

To be sure.  But I am just thinking about the practicalities of
this restricted instance.  And there are other terms that might
better apply, like minimal knowledge proof, etc.  Gotta think
about this some more...

BTW the examples I find in my books aren't really what I would
call "proofs" at all!  Each of them seems to be a number of
tests that are iterated until you have some 2^n odds against
faking it that satisfy you, but none are *certain* in the sense
that you usually think of a "proof."  There ought to be a better
word to use for this "probabalistic assurance" kind of thing...
