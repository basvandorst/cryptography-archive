Path: msuinfo!agate!library.ucla.edu!csulb.edu!nic-nac.CSU.net!ctp.org!not-for-mail
From: jomcgow@eis.calstate.edu (John S. McGowan)
Newsgroups: sci.crypt
Subject: Re: PGP math
Date: 23 Aug 1994 22:41:14 -0700
Organization: California Technology Project of The Calif State Univ
Lines: 27
Message-ID: <33emhq$5u0@eis.calstate.edu>
References: <33eepa$a8d@eis.calstate.edu>
NNTP-Posting-Host: eis.calstate.edu


Just noticed... I referred to a "magic number" attack in the past
message... I had defined it in alt.security.pgp... it is guessing a magic
number that has a "good" chance of being a multiple of lambda(n)... or at
least a multiple of the order of many of the messages... one nice choice
is 2^INT(log_2(n))*3^INT(log_3(n))*...*P_T^INT(log_P_T(n)) where log_a is
the base-a log, INT is the integer function and P_T is the T'th prime
where T is on the order of power of log(n) [to make the magic number
feasible to use!]... if lambda(n) has all small prime factors (small
meaning less then P_T)... then given a public key, (e,n), reduce M to M'
(M the magic number given) by dropping all prime factors that divide e...
find d with ed=1 mod M'.... use d to decode... feasible and it works.. 
(since then M' is relatively prime to e and a multiple of lambda(n)!... 
IF all the prime factors of lambda(n) are no larger than P_T)

I call a "magic number" one that is a multiple of the order of a lot of 
messages (if a mutliple of lambda(n) it is a multiple of the orders of 
all messages) and finding one permits decoding... if all the prime 
factors of lambda(n) are small, one can find a practical "magic number").


--
   John S. McGowan   |    jmcgowan@bigcat.missouri.edu [COIN] (preferred)
                     |    j.mcgowan15@genie.geis.com   [GEnie]
                     |    jomcgow@eis.calstate.edu     [CORE]
   ----------------------------------------------------------------------

