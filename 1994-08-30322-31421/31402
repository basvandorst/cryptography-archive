Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!decwrl!amd!netcomsv!eabbs!dean.jennings
From: dean.jennings@eabbs.com (Dean Jennings) 
Newsgroups: sci.crypt
Subject: Extended Euclidean Algo.
Message-ID: <797.164.uupcb@eabbs.com>
Date: 29 Aug 94 17:04:00 GMT
Distribution: world
Organization: Easy Access BBS - San Ramon CA - 510-829-7627
Reply-To: dean.jennings@eabbs.com (Dean Jennings) 
References: <33nd8v$lou@eis.calstate.edu>
Lines: 59

I am new to cryptography and have some questions about finding
Inverses Modulo a number... In Bruce Schneier's book 'Applied
Cryptography' there appears some 'C' code for an Extended Euclidean
Algorithm....

>static void Update(int *un, int *vn, int q)
>  {
>  int tn;
>  tn = *un - *vn * q;
>  *un = *vn;
>  *vn = tn;
>  }
>
>int extended_euclidian(int u, int v, int *u1_out, int *u2_out)
>  {
>  int u1 = 1;
>  int u3 = u;
>  int v1 = 0;
>  int v3 = v;
>  int q;
>
>  while (v3 > 0) {
>    q = u3 / v3;
>    Update(&u1, &v1, q);
>    Update(&u3, &v3, q);
>    }
>  *u1_out = u1;
>  *u2_out = (u3 - u1 * u) / v;
>  return u3;
>  }

1. What are u1_out and u2_out?
2. How does one call this function?
3. Can this algorithm be adapted to find an 'x' such that

a * x = 1 Mod(a - x)         // Given 'a'

or

(a + 1) * x = b Mod(a - x)   // Given 'a' and 'b'


If these are silly questions, please respond via email.


Regards,
Dean

PS: I would also like to contribute something useful to this field...
Would it not be useful to generate psuedo-random sequences by
simulating a chaotic system? I have written a paper discussing 
how this can be easily done on a PC. Where can I submit it for    
review and publication?



---
. POW 1.0  On Trial . "We'll burn that bridge when we're on it."  Anonymous

