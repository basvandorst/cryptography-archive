Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!not-for-mail
From: ritter@io.com (Terry Ritter)
Newsgroups: sci.crypt
Subject: On Testable Really-Random Generators
Date: 28 Aug 1994 15:51:48 -0500
Organization: UTexas Mail-to-News Gateway
Lines: 106
Sender: nobody@cs.utexas.edu
Message-ID: <199408282051.PAA17442@pentagon.io.com>
NNTP-Posting-Host: news.cs.utexas.edu

              On Testable Really-Random Generators


 On sci.crypt we have recently had a number of excellent articles on
 noise generator designs--various approaches which actually work.

 Most such articles claim "random" results based on the physical
 randomness of noise, and perhaps some very basic statistical tests.
 But the current discussion started with proposals for devices to
 measure the noise *pulse width*, and then return a value based on
 that width (typically mod 2**8 or mod 2).  Pulse-width measurement
 provides the basis for a deeper understanding of the device, and a
 stronger validation of good-quality "randomness" than we have
 previously seen.


 Peering into Really-Random Devices

 When we measure pulse width--provided we can read the full pulse-
 width count--we can develop a probability distribution (pulse-
 width vs. frequency of occurrence).  Then, if we have a relatively
 flat distribution, we can have more confidence that the resulting
 values are unbiased.  In design, we can detect bandwidth problems,
 and predict whether an output modulo operation will be useful.
 When the user can re-verify the good distribution in the field,
 she can have confidence that that particular hardware is designed
 well and is also continuing to work well.

 Of course, the pulse-width idea is not sacred.  We might just as
 well imagine sampling instantaneous amplitude, but I don't know
 how we would get a flat distribution of amplitude probability
 from random noise.  A triangle or sawtooth wave might have such
 probability; perhaps we could use noise to vary the slope, but I
 am still dubious that it could give us what we want:

      What we want is a device which returns a complete range of
      values, each with equal probability, and this is something
      we can measure.  (We also want each sample to be "independent"
      of all other samples, but measuring this is more difficult.)

 If the measured probability distribution is not perfect, this at
 least defines the requirements for subsequent processing which
 must hide that imperfection in actual use.  Thus, the probability
 distribution provides a fundamental way to describe the quality of
 the noise production itself, distinct from subsequent deterministic
 processing.


 The Noise Source

 Zener or B-E junction noise generators are important to the extent
 that they solve the noise generation problem.  Personally, I like
 the FM IF strip idea (perhaps because I have not built one!) since
 it has the potential to avoid the production variations which are
 inevitable with diodes.  But noise generators have been around for
 many years.  Consequently, the real innovation is hardware which
 holds out the possibility of a deeper testing of the generator
 itself, rather than just testing resulting processed bits.


 Testing Really-Random RNG's

 Statistical tests on resulting values obviously cannot certify that
 an RNG is "really random."  Indeed, deterministic *pseudo* random
 RNG's are designed to pass such tests!

 Nor can statistical tests certify that an RNG is without bias; all
 each test can do is highlight a particular sort of bias.  This point
 is important, because detecting some problems may require special
 statistical tests which will not be applied.  It is this inability
 to detect real problems using ordinary tests, in fact, which leads
 to worries about power-supply hum, RFI, zener interaction, and
 various other noise-generator design issues.  If these problems
 were easy to detect, we would not have to worry that they might be
 present.

 Because statistical tests are necessarily equivocal, having a
 design which can provide a stronger validation is a big plus.  While
 it can be argued that the values after modulo operations "must" be
 random (since the bits come from a random source and the result
 has good statistics), these are really the wrong values to measure.
 If we are going to understand the design, we must have as clear a
 view of it as possible.  This means we need to validate randomness
 *before* modulos (or hashing or other confusion) are applied.


 Conclusion

 Even a good, flat, distribution is not going to eliminate the
 possibility of problems in a really-random generator:  A sawtooth-
 driven sweep-frequency generator should have an even frequency-
 probability distribution, but would not be random.  However, in a
 random device, having a good probability distribution should be a
 major step forward.  Although I have seen many proposals for noise
 devices, this is the first time that I have seen a way to trust
 any such device.

 This approach differs substantially from the concepts we have seen
 previously, and deserves considerable credit and support.


 ---
 Terry Ritter   ritter@io.com



