Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!gauss.mitre.org!bs
From: bs@gauss.mitre.org (Robert D. Silverman)
Newsgroups: sci.crypt
Subject: Re: How safe is RSA?
Date: 24 Aug 1994 22:26:48 GMT
Organization: Research Computer Facility, MITRE Corporation, Bedford, MA
Lines: 74
Distribution: world
Message-ID: <33ghf8$ft0@linus.mitre.org>
References: <9408242004.AA000un@flevel.demon.co.uk>
NNTP-Posting-Host: gauss.mitre.org

In article <9408242004.AA000un@flevel.demon.co.uk> trefor@flevel.demon.co.uk (Trefor Southwell) writes:
:> Your supposition is incorrect. I suggest you start by reading some of
:> my papers. And cracking in time "t" has no meaning for the best factoring
:> algorithms. Given a number N, and a GNFS or QS implementation and a 
:> given machine and a time 't', you know in advance whether 't' will be
:> sufficient. Either you spend enough time to collect enough relations
:> to factor the number or you don't. The time is perfectly predictable
:> (to within a couple of percent).
: 
:  
:> Do you know how QS and NFS work? You construct a number of congruences
:> A_i ^2 = B_i ^2  mod N  and compute (A_i + B_i, N) and (A_i - B_i, N)
:> if A_i != +/- B_i mod N, then N is factored. The time it takes to 
:> construct these congruences is perfectly deterministic and constitutes
:> > 99.9999...% of the total run time.
:
:Your statement does assume that the only way to break RSA is using the
:algorithm you have kindly detailed above. Would it not be reasonable to
 
Not quite. I have assumed the best known algorithms for factoring.

While there might be some other algorithm to break an RSA encrypted message
other than factoring the private key, no such method is KNOWN. It is
my *opinion* that any such method would probably be polynomial-time
equivalent to factoring.

:assume that there may be many other ways of solving the problem even if
:we don't know what they are at the moment. It may well be that there is
 
Reasonable on what basis? We have no basis for assuming one way or the
other whether a method exists that does not depend on factoring.

:another solution which does not require such massive computational power
:but could be based upon for example statistical or even random methods.
 
If one assumes a non-deterministic Turing machine (as you seem to be
doing), you can break ANY cipher, not just RSA. This is a red herring.
Factoring is much more efficient than random search of the key space
or even deterministic search of the keyspace.

:I could choose a 8192,16384,... key. Does that mean that RSA can never
:be broken if the user of the system keeps his/her key size at least twice
:the number of bits of the last known factorisation?
 
I don't follow you. ANY key can theoretically be broken. It is just
a question of how many resources you have available and how much
time you are willing to spend. The fact that someone reports a factorization
of a composite of D-digits, does not mean that someone else with much
more resources [and perhaps a better, but unpublished algorithm] can't
factor 2D-digits.

There is no proof that factoring is hard. There is no proof whether there
exists an alternate method. Until such proofs all one can present is the
security of a key of a given size against attacks with the best currently
known methods. Anything else is just silly speculation.

:I was at the time looking for solutions which are based upon methods other
:than the predictable application of raw power. For example I could just
:guess at the private key and then check if its correct or not. I may get
:it right on the first guess or it make take until eternity, this means
:there would be a probability:-)
 
The expected time based on guessing the key is far in excess of that
required by factoring. And it is simple to compute the chance of
success of a SINGLE guess; it is just 1/sizeof(keyspace). Further,
one must incur a non-constant cost for each guess. The time to check
such a guess is O(log N M(N))  where M(N) is the time to multiply 
two numbers together mod N [worst case, not e.g. 2x2 mod N]

-- 
Bob Silverman
These are my opinions and not MITRE's.
Mitre Corporation, Bedford, MA 01730
"You can lead a horse's ass to knowledge, but you can't make him think"
