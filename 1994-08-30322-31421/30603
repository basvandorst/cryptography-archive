Path: msuinfo!uwm.edu!math.ohio-state.edu!cs.utexas.edu!not-for-mail
From: ritter@io.com (Terry Ritter)
Newsgroups: sci.crypt
Subject: Testing hardware RNG's
Date: 7 Aug 1994 20:26:19 -0500
Organization: UTexas Mail-to-News Gateway
Lines: 31
Sender: nobody@cs.utexas.edu
Message-ID: <199408080126.UAA05545@pentagon.io.com>
NNTP-Posting-Host: news.cs.utexas.edu

 In <jathomasCu68Gx.5y0@netcom.com>
 jathomas@netcom.com (John A. Thomas) writes:


>My first try
>will be to use a synchronous counter.  Anyway, if I achieve useful
>results I'll post them here.  Thanks for your suggestions.

 Having had a night to think on it, I suspect that the problem is
 the direct use of the noise to gate the 5 MHz clock.  This is the
 way the 1 ns pulses are produced.  I believe this can be completely
 avoided by re-timing or synchronizing the 4 KHz (max) noise with
 the 5 MHz clock, before using it to enable the clock to the
 counter.  This should not affect the randomness of the results, and
 should solve the asymmetry problem.

 That is, we use (for example) a D flip-flop, with the D input from
 the noise comparator and the clock input from 5 MHz.  Then we take
 an output from the D ff into the [N]AND gate with a 5 MHz input.
 Done properly, we get only healthy, full, 5 MHz clock pulses out
 of the gate, thus avoiding the short-pulse problem.  Ideally, the
 D ff should latch on one edge, and the AND should enable starting
 with the *other* edge, giving the ff some time to settle any meta-
 stability caused by the asynchronous system (e.g., the comparator
 changing state when the ff is setting up).

 ---
 Terry Ritter   ritter@io.com



