Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!news.kei.com!ddsw1!not-for-mail
From: supercat@MCS.COM (John Payson)
Newsgroups: sci.crypt
Subject: Re: Hiding Cyphertext in sound
Date: 6 Aug 1994 15:30:32 -0500
Organization: /usr/lib/news/organi[sz]ation
Lines: 27
Message-ID: <320rt8$6gc@Mercury.mcs.com>
References: <Cu3twE.6Jo@news.hawaii.edu>
NNTP-Posting-Host: mercury.mcs.com

In article <Cu3twE.6Jo@news.hawaii.edu>,
Nathan Mariels <marielsn@Hawaii.Edu> wrote:
>8. store cyphertext 4 in lowest bits of a sound.
> 
>How hard is it to detect if the lowest (LSB) of a sound has
>encrypted data, or if it is just normal static from A to D
>conversion?  The sound sounds the same after adding data.

Two things you must do first (both are IMPORTANT)

1) Add at least two bits worth of forced-air noise to the sound when it is
   recorded.  Forced-air noise is not really random, whereas crypto-text is.
   The LSB's of the noise, however, will be more random-ish than the MSB's,
   so if one's "truly-random" noise is WELL below the level of the audio
   noise it should be fine.

2) Do *NOT* just replace the LSB of each sample with a bit of cryptext, but
   instead ADD 0 or 1 to each sample to make the LSB match the cryptext.
   Otherwise, especially at high sample rates, the LSB will stick out like a
   sore thumb (each bit should have NO LESS than half the randomness of the
   next-least-significant bit in a normal audio file.  ADDING 0 or 1 will
   assure that half the randomness leaks to bit 1, half of THAT to bit 2, etc.
   whereas otherwise bit 0 would be much more random than bit 1.)
-- 
-------------------------------------------------------------------------------
 supercat@mcs.com    |  "Je crois que je ne vais jamais voir...  |   J\_/L
 John Payson         |   Un animal si beau qu'un chat."          |  ( o o )
