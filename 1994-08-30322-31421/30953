Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!EU.net!uknet!comlab.ox.ac.uk!pcl
From: pcl@foo.oucs.ox.ac.uk (Paul C Leyland)
Subject: Re: CFV: sci.crypt.research moderated
Message-ID: <PCL.94Aug19134106@foo.oucs.ox.ac.uk>
In-reply-to: mpj@netcom.com's message of Thu, 18 Aug 1994 16:51:02 GMT
References: <sci.crypt.research-RFD1@uunet.uu.net> <32u3jv$hc@news1.shell>
	<mpjCuqpH2.AoF@netcom.com>
Date: 19 Aug 1994 12:41:06 GMT
Lines: 56

In article <mpjCuqpH2.AoF@netcom.com> mpj@netcom.com (Michael Paul Johnson) writes:

Good stuff deleted, but not what I want to respond to.

   The real hard question that comes to mind, for me, is what to do if 
   someone sends source code for a complete encryption application (not just 
   an algorithm) that is not exportable from the USA.  I think that right 
   now, I would suggest that the poster just submit a short article to 
   sci.crypt.moderated that told where the application can be found. If the 
   poster is outside of the USA, this could be a full posting on the 
   unmoderated sci.crypt or an open ftp site.  If the poster is inside of 
   the USA, it might be an "export controlled" site, an offer to mail the 
   full application to qualified (under the ITAR) recipients, or, if the 
   poster chooses to take the risk, on an umoderated news group or open ftp 
   site.  Such long posts as are involved in complete applications are 
   probably better off in a binaries or sources group, anyway.

Sounds an emminently sensible set of suggestions to me.  It should go
without saying that some other nationalities may be in analogous
positions, and that a global substitution of "USA or appropriate" for
"USA" is understood.

   As far as code fragments to implement an isolated algorithm, or perhaps a 
   complete one-time-pad program, I see no problem with these.  After all, 
   if anyone doesn't know how a one time pad works, they can probably read 
   it in someone's tag line.  How short of a one time pad program can you 
   write in C?


Ah, a challenge.  Here's my solution.  Call it with a file containing
a pad as argument, plaintext on stdin, ciphertext on stdout.  No error
checking of argument and the pad had better be at least as long as the
input.  Sorry I couldn't make it a one-liner, but I needed the <stdio.h>
for FILE* and EOF

#include<stdio.h>
main(int c,char**a){FILE*p=fopen(a[1],"r");while(EOF!=(c=getchar()))putchar(c^getc(p));}

I make that 107 characters of ANSI C; maybe someone could get it into
a <80 char one-liner.

However, in K&R, using type-punning, assuming sizeof(int**) ==
sizeof(char**) ==sizeof(FILE*), assuming twos-complement arithmetic
and expanding EOF to -1 I could have:

main(c,a)int*a;{a=fopen(a[1],"r");while(!~(c=getchar()))putchar(c^getc(a));}

which is 77 characters including the final '\n'.

Paul
--
Paul Leyland <pcl@black.ox.ac.uk>        | Hanging on in quiet desperation is
Oxford University Computing Services     |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is gone, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
