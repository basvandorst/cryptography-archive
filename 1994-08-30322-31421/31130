Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!charnel.ecst.csuchico.edu!yeshua.marcam.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Newsgroups: sci.crypt,sci.math
Subject: Re: P = NP? (was : How safe is RSA?)
Date: 24 Aug 94 19:18:51
Organization: The Mitre Corp., Bedford, MA.
Lines: 38
Message-ID: <EACHUS.94Aug24191851@spectre.mitre.org>
References: <33bl3c$jj@linus.mitre.org> <strnlghtCv00G5.J6I@netcom.com><33dkh3$pl8@linus.m
	itre.org> <33e9m1$cee@agate.berkeley.edu>
	<EACHUS.94Aug24114645@spectre.mitre.org>
	<a_rubin.777759241@dsg4.dse.beckman.com>
NNTP-Posting-Host: spectre.mitre.org
In-reply-to: a_rubin@dsg4.dse.beckman.com's message of 24 Aug 94 20:14:01 GMT
Xref: msuinfo sci.crypt:31130 sci.math:78803


   I said:

   >                         (One of the worst features of P=NP, is that,
   > if it is unprovable, you cannot prove that it is unprovable.)

In article <a_rubin.777759241@dsg4.dse.beckman.com> a_rubin@dsg4.dse.beckman.com (Arthur Rubin) writes:

  > I know what that means, but I'm not sure it's correct.  Can you explain in
  > more detail?

   Assume there exists a proof that P=NP is undecidable.  Then there
no algorithm can exist that solves an NP-complete problem in P-time,
since the existance of such an algorithm would mean that a proof that
P=NP was possible.  But if no such algorithm can exist, then P/=NP.

    Daniel Jimenez countered this earlier today, by saying that maybe
the algorithm exists but you can't prove that it works in P-time.
However, I think the shoe is on the other foot, again via
counterexamples.  If there is such an algorithm it could be used to
find any counterexamples for which it took longer than P-time.
(Finding such a counterexample would be in NP.  "Find an input N for
algorithm K for which the number of steps required is greater than
some polynomial f(length(N))..." And if there are no counterexamples,
P is proved to be equal NP whether or not that particular algorithm is
in P-time.)  The actual polynomial doesn't matter to the proof, since
I can assume, for the purpose of my proof, that I guess it correctly.

   I actually spent a day or two a dozen years ago looking for
possible approaches to proving that P=NP was undecidable, tripped
over this, and said, "Never mind."
--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
