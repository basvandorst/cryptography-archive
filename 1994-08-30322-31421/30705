Path: msuinfo!agate!howland.reston.ans.net!wupost!waikato!auckland.ac.nz!news
From: pgut1@cs.aukuni.ac.nz (Peter Gutmann)
Newsgroups: sci.crypt
Subject: Re: Self-destructive encryption util
Date: 10 Aug 1994 12:55:01 GMT
Organization: University of Auckland
Lines: 25
Sender: pgut1@cs.aukuni.ac.nz (Peter Gutmann)
Message-ID: <32ain5$ob2@ccu2.auckland.ac.nz>
References: <Cu3o1D.6Ap@rci.ripco.com> <31vq0i$ph4@ousrvr.oulu.fi> <mpjCu80pJ.E3@netcom.com>
NNTP-Posting-Host: cs13.cs.aukuni.ac.nz
X-Newsreader: NN version 6.5.0 #7 (NOV)

mpj@netcom.com (Michael Paul Johnson) writes:

>Make every block on the floppy a function not only of the key, but of some
>value (a random initialization vector, perhaps) on the disk.  To destroy
>the data in a hurry when the bad guys (or cops, in your case) are breaking
>and entering, all your hot key function has to do is to overwrite the
>initialization vector (which you don't have memorized or copied elsewhere)
>with some garbage.  This instantly makes all data on the disk
>unrecoverable, unless you can either break the encryption algorithm or do a
>brute force search for the random value.  This could be used to nearly
>instantly destroy the data on hard disks, too.
 
This is the technique used by SFS to allow quick "deletion" of encrypted
data on disk (you can still give the rest of the disk a good scrubbing if
you have a few days to spare).  The user password is used to decrypt a
1024-bit disk key stored in sector 0 which is what actually decrypts the
data on the disk.  To make the data somewhat difficult to access, all you
need to do is comprehensively overwrite the encrypted disk key.  Without the
encrypted disk key present, you'd need to break the encryption using a
640-bit (MDC/SHS doesn't use all 1024 bits) key.  I won't regurgitate the
whole thing here, if anyone's interested they can find details in the file
SFS2.DOC in the file /pub/virus/crypt/disk/sfs_108.zip on
ftp.informatik.uni-hamburg.de.
 
Peter.
