Newsgroups: sci.crypt
Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!charnel.ecst.csuchico.edu!yeshua.marcam.com!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!swrinde!sdd.hp.com!hplabs!hplextra!hplb!news
From: dg@dgupta.hpl.hp.com (Dipankar Gupta)
Subject: Re: How safe is RSA?
Sender: news@hplb.hpl.hp.com (Usenet News Administrator)
Message-ID: <DG.94Aug25164424@dgupta.hpl.hp.com>
In-Reply-To: spp@bob.eecs.berkeley.edu's message of 24 Aug 1994 17:20:17 GMT
Date: Thu, 25 Aug 1994 15:44:22 GMT
Lines: 133
References: <33dkh3$pl8@linus.mitre.org> <33e9m1$cee@agate.berkeley.edu>
	<EACHUS.94Aug24114645@spectre.mitre.org> <33fvgh$df@agate.berkeley.edu>
Nntp-Posting-Host: dgupta.hpl.hp.com
Organization: Hewlett-Packard Laboratories, Bristol, England


[I originally wrote this as a reply to Steve Pope. Lightly edited]

In response to Eachus' remark:

> If P=NP, then factoring is (relatively speaking) easy.

Pope wrote:

 SP> I seem to recall at the point when I left grad school
 SP> (10 years ago) the general swirl of opinion was that 
 SP> P=NP, and that this would be proved for certain within a 
 SP> few years.

This is intriguing: are you sure the swirl of opinion was that P=NP?
In the circles I'm familiar with, the bias is almost always towards
P=/=NP. In fact, results like the following are fairly common
nowadays:

``The maximum clique of a graph can't be poly-approximated in
polynomial time, unless P=NP''

 SP> Guess it hasn't happend yet. :)

It's a tough problem. How's that for an understatement?

 SP> In any case, I recall an NSA employee telling me that
 SP> NSA doesn't make use of RSA.  Clearly, if you are hyperparanoid
 SP> about security, you are not going to use a system whose
 SP> integrity depends on an unsolved mathematical problem
 SP> that everybody is working on....

A few words to add to the ``what's the problem with pinning down
factorization'' discussion:

1. I don't think that P =? NP problem is directly relevant to
   factoring, except if P = NP. This is because factoring has not been
   shown to be NP-hard, and thus separation of P and NP is unlikely to
   help very much. Perhaps more appropriate complexity theoretic
   issues are the existence of one-way functions, crudely whether
   there exists a function F such that it's complexity is
   significantly lower than that of it's inverse; and a lower bound
   for factoring.

2. The theory of hard lower bounds for computational problems, which I
   think is directly relevant to the issue at hand, is not very well
   developed at all: for example, a hard lower bound isn't known even
   for matrix multiplication. By hard lower bounds, I mean results
   like Victor Pan's proof of Ostrowski's conjecture. For the state of
   the art on this aspect of complexity theory, I would recommend a
   read of Volker Strassen's excellent chapter ``Algebraic Complexity
   Theory'' in [1].

2. Re. the previous discussion on lower bounds, Lenstra/Pomerance [2]
   came up with a rigorous lower bound for factoring integers using an
   algorithm based on class groups of binary quadratic forms due to
   Seysen/Lenstra (the algorithm is probabilistic):

There is a probabilistic algorithm that finds a complete prime
factorization of a number $n$ in expected time $L[1/2, 1+o(1)]$,

where  
	L[e, a] = exp( a * ((log n)^e) * ((log log n)^(1-e)))

   Re. the earlier digression on random numbers, probabilistic
   algorithms and the ensuing flame war, let me state that the
   expected time is over all the values of a random number generator,
   *NOT* the value of n; ie the expected time holds for all n.

4. This was a useful result, except that there now was an algorithm
   (ca. 1989) called the number field sieve [3]. It factors numbers of
   the form $a^3 - b$ (a, b are small integers) in conjectured time
   L[1/3, c + o(1)] and is conjectured to factor other integers (the
   general NFS) in time L[1/3, c' + o(1)] where c' > c and estimated
   to be ~1.90. Lenstra and Pomerance remark in [2]:

	``... we hoped to bridge the gap between rigorously analysed
	factoring algorithms and heuristically analysed factoring
	algorithms. Our victory has turned out to be an empty one,
	however, ...''

Even though (G)NFS is asymptotically faster, the number of digits
where it's implementations cross over those of other practical fast
factoring algorithms (esp. the quadratic sieve) is pretty high.
Perhaps Bob Silverman or others with experience in such matters will
be able to throw some light on this.

Also, there is the question of whether we consider BPP to be an
adequate representation of what we mean by ``easily computable'', as
the recent work on BQP [4] (bounded-error quantum polytime) and Shor's
result that factoring is in BQP demonstrate. However, it is difficult
to refrain from vapid philosophizing[*] in such a discussion.

In conclusion, I think that there are very few extant tools that help
us in defining a lower bound for many mathematical problems, hence the
``weaseling out'' that Steve Pope referred to. This won't necessarily
be resolved as a result of resolution of the P?NP question. I
personally feel comfortable with the current mode of operation:

  Assuming the existence of one-way functions (or a stronger
  condition), it can be shown that <cryptographic claim> is true.

Thus, the assumption that integer multiplication is one-way for
practical purposes strikes me as a useful compromise in order to
develop cryptographic applications. As Silverman remarked, talking
about hitherto unknown factoring algorithms and their possible
repercussions on RSA-related techniques is not very enlightening.

Regards,
--Dipankar

[*] Phrase stolen.

References
----------
[1] J. van Leeuwen, ed
    Handbook of Theoretical Computer Science
    Algorithms and Complexity (Vol I), pp 635--672
    Elsevier/MIT Press

[2] H. W. Lenstra, Jr. and C. Pomerance
    A Rigorous Time Bound for Factoring Integers
    J. Amer Math Soc 5(3) pp 483--516

[3] H. W. Lenstra, Jr. and A. K. Lenstra, eds
    The Development of the Number Field Sieve
    Lecture Notes in Mathematics #1554
    Springer Verlag

[4] E. Bernstein and U. Vazirani
    Quantum Complexity Theory
    Proc. 25th ACM STOC pp 11--20

