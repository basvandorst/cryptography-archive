Newsgroups: sci.crypt
Path: msuinfo!agate!ames!elroy.jpl.nasa.gov!swrinde!pipex!lyra.csx.cam.ac.uk!warwick!uknet!brunel!h2-mac-03.brunel.ac.uk!alan.macdonald
From: Alan MacDonald <alan.macdonald@brunel.ac.uk>
Subject: Re: My hardware rng
Message-ID: <Cun0qs.EIF@brunel.ac.uk>
X-Xxmessage-Id: <AA76B04062026085@h2-mac-03.brunel.ac.uk>
X-Xxdate: Tue, 16 Aug 94 18:04:48 GMT
Sender: news@brunel.ac.uk (News supervisor)
Nntp-Posting-Host: h2-mac-03.brunel.ac.uk
Organization: Brunel University
X-Useragent: Version 1.1.3
References: <CuDn9q.F7z@dorsai.org>
Date: Tue, 16 Aug 1994 17:04:03 GMT
Lines: 49


In article <CuDn9q.F7z@dorsai.org> Steve_Allen, stevalln@dorsai.org
writes:
>   Based on advice from Terry Ritter <ritter@io.com> I changed the
>switching power supply to a linear regulator, and turned off the
>high-frequency oscillator. Jitter on the low-frequency oscillator
>went from 0.5% to 0.08%. Not enough jitter!
>   Back to the drawing board....
>-Steve

One approach that might be fun to try would be to "balance" a 
flipflop repeatedly using its output as a bit source.
This seems to be quite easy to do.

EG I took a 7475 D-flipflop and fed a 10MHz clock 
directly into the D input thru an invertor (actually 7486
XOR gate with one input tied high) into the clock (G) input. 
By judiciously varying the 
clock rate and/or pulse width, it was quite easy to obtain
a random *looking* bitstream (sampling on the other clock
edge)

Now I'm not claiming that the true entropy of the output
was anything like 1bit/bit in my lashup. (It was also quite 
easy to get this setup to *toggle* - suggesting
that there are some quite long time constants in this
circuit - so maybe a slower clock or faster chips than
standard (obsolete?) TTL would be better.)

But I would guess that by keeping the clock period & pulse width  
constant & using a simple feedback loop which varied the relative 
clock-data  delay to get equal numbers of 1's & 0's you could possibly 
get a rate of 0.1 bit/bit. That should be enough true entropy for most
people.

I would be interested to hear from anyone who's made a serious
attempt to build an RNG using this method (I'm aware that there 
are plenty of publications on the closely related arbiter problem).

OBTW - I once also play with a diode-inductor chaotic circuit
as a possible hardware RNG - but this was pretty hard to get into
the chaotic regime reliably. There are also plenty of published
papers on this sort of circuit.

Sorry if all this has come up already - but I've been on holiday &
missed 2 weeks of postings.

Al
"We juggled till we dropped."
