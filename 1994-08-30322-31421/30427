Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!charnel.ecst.csuchico.edu!yeshua.marcam.com!news.kei.com!eff!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Newsgroups: sci.crypt
Subject: Re: Technical problems with Bryan Olsen's duress codes?
Date: 2 Aug 1994 22:11:39 GMT
Organization: University of Maryland, Baltimore County
Lines: 116
Message-ID: <31mgar$5ic@news.umbc.edu>
References: <31hb5m$idk@eis.calstate.edu> <1700410966S86.C445585@mizzou1.missouri.edu>
NNTP-Posting-Host: umbc7.umbc.edu
X-Newsreader: TIN [version 1.2 PL2]

C445585@mizzou1.missouri.edu wrote:
: In article <31hb5m$idk@eis.calstate.edu>
: wmoyes@eis.calstate.edu (William A Moyes) writes:
:  
: >Because the
: >random data is added in a unknown amount, someone who discovered
: >unaccounted space would obtain no usefull infomation, it could either be
: >ciphertext, or the random data used to foil this attack.
:  

To clarify, free space is not useless padding.  It is space which is
available for allocation.  All the pages on the partition are
accounted for at every level.  Each page either contains readable
data, or appears to be free.  The apparently free pages which contain
data readable at a higher level are marked as free in the lower level,
as are pages un-allocated at any level.

Since all pages are either in-use or marked as free, there are three
ways the system could reveal that pages marked as free actually
contain data at higher levels:

1. The content of the (marked) free pages could give it away.  We
avoid this by always filling un-allocated pages with noise, which (I
assume) is indistinguishable from ciphertext.

2. The content of the in-use pages could give it away.  We avoid this
by writing the system to store the same thing at a level whether or
not their are higher levels.  For example, an allocation table at level
4 must mark the pages in use at level 5 as free, the same way it marks
un-allocated pages.

3. The distribution of free pages could reveal it.  We avoid this by
adopting an allocation method for which, at any level, the
distribution of used pages is independent of the presence of higher
levels.  Two such methods are described in my first post.


A problem with many suggested methods of random padding is that no one
would ever waste this space if he were not using duress codes.  This
does not really apply to an encrypted file systems, since all file
systems normally have free space.

:    This is clearly necessary.  However, I don't think it's sufficient,
: unless the random data makes up the vast majority of the data on the
: disk.  Now, let me make sure I'm being clear with the weakness I see
: in this--it's not that it's possible to be sure that X% of space free
: implies that there's another level.  Instead, it's that the probability
: of there being at least one more level available is a function of the
: percentage of free disk space.

True.  For example, if the disk appears to have no free space, it can
not contain another level.  Thus I do not claim that the presence of
another level is independent of the amount of free space on the disk,
only that if there is free space, an adversary can not determine if it
is "really" free or holds another level.  Most personal computer users
keep significant amounts of free space on their disks and the amount
varies widely.

: This doesn't mean that Bruno knows when
: to stop breaking bones, but he may be able to get a clue from the amount
: of disk space accounted for.  If he's recently tried this disk-encryptor
: 1000 different times with different seed data, and he's seen that when
: more than 40% of the disk is unaccounted for, 70% of the time, there's
: another level available, then he's going to listen to your claims that
: the other 55% of your disk space is random bits with a touch of
: skepticism.
: 

The encryption software does not determine how much space appears to
be in use.  All the space holding files and bookkeeping info readable
under the user-provided key (and transitively by any lower-level key)
appears to be in use, while all the rest appears free (and available
for use).  There is no "unaccounted for" space, or unusable padding.
Thus Bruno could not use the system as you suggest.

He could get a random survey of users of the system and try to find
out how much free space they keep and how many levels they have, and
try to infer the probabilities from this data.  He will probably
get lies from those surveyed, and will not be able to come to even
probabilistically defensible conclusions.

Users of the system should keep faith with each other.  Normally,
don't reveal you have even two levels.  If asked, say the vast
majority of your disk is empty.

:    The obvious solution to this is to have the vast majority of
: the disk be random bits.  This way, the amount of variation in
: your random levels will be small regardless of how many levels
: are available.  Note that simply requiring that the last level
: not take up much space won't work--it'll just make your attacker
: look for the next-to-last level.  Only if all level sizes are
: relatively tiny will this attack not work to some extent.
:  


To be at all confident he has everything he can get, Bruno has to keep
doing his thing until 100% of the disk is shown to be in use, or the
subject is dead.  Very few people keep their disks 100% full, so Bruno
is going to torture the subject to death no matter what.  Thus the
torture no longer provides any motivation to tell Bruno anything,
since it continues no matter what.  But Bruno's motivation to perform
the torture is that the torture motives the subject to talk.  Thus the
motivation to perform the torture is also gone.



John, on another note, my news-reader doesn't thread based on the
References line, it only groups the thread titles together.  A few
times you have followed up, and I've missed them because you changed
the title, and I don't read the whole traffic very often.  I want to
know what you have to say, so if you follow up with a different title,
please e-mail me and let me know.  (I'd like to know if you think I
have answered your objections.)

Thanks,
--Bryan
