Newsgroups: comp.theory,sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!usc!nic-nac.CSU.net!charnel.ecst.csuchico.edu!csusac!csus.edu!netcom.com!szabo
From: szabo@netcom.com (Nick Szabo)
Subject: UTM via boolean circuit & secure multiparty computation
Message-ID: <szaboCv6MDK.H8D@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
Distribution: inet
Date: Sat, 27 Aug 1994 07:05:43 GMT
Lines: 34
Xref: msuinfo comp.theory:10238 sci.crypt:31241

Secure multiparty computations are protocols where every 
participant learns the value of the computed function, but no
one learns anything about the inputs of any of the other members
(except what they can infer from their own input and the output
value).  Alice and Bob, for example, create an arbitrary
boolean circuit.  The circuit accepts input from Alice and
Bob and computes an output.  Alice can enter input without
Bob being able to learn it, and vice versa; Alice and
Bob can each calculate the output and know that the other
did not tamper with it.  (Alice and Bob being honest about their
inputs, if necessary, is outside the scope of the protocol).

* Can the function be a universal Turing machine, for
example a boolean circuit within a simple loop containing a 
small amount of state?  Can state be transferred from one 
iteration to the next without leaking it to Alice or
Bob?
* is there any good analysis on information leakage for
multiparty secure (a) boolean circuits, and (b) if possible 
boolean circuits run repeatedly as UTMs? What kinds of
functions are most leak-proof?
* could the function be constructed from some other algebra 
than boolean, for example a Galois field?
* in general terms, what is the performance penalty in
time and space for computing functions this way over
a network?
* any good references?

much tbanks,
-- 
"Any time you make a peaceful and truthful behavior illegal, you 
create a crime, and a law enforcer to use force to stop the 
behavior, and a crimninal to use violence to continue the behavior."
-- Russel Nelson
