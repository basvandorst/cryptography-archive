Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!yeshua.marcam.com!charnel.ecst.csuchico.edu!csusac!csus.edu!netcom.com!tlittle
From: tlittle@netcom.com (Timothy Little)
Subject: Re: Cracking Military RSA
Message-ID: <tlittleCuoBr3.Hr1@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
Date: Wed, 17 Aug 1994 09:59:26 GMT
Lines: 111


 Bs> In article <32ncgi$14n@cleese.apana.org.au> clark@cleese.apana.org.au
 Bs> (Steven R. Clark) writes: >William Unruh (unruh@physics.ubc.ca) wrote:
 >: werewolf@io.org (Mark Terka) writes:
 >
 >: >But is it even theoretically possible? From some of the posts I've read
 >: >here and elsewhere, we may not be in possesion of sufficient mathematical
 >: >theory (to say nothing of computational power) to be able to do so.
 >
 >: Those as far as I know we have. What we don;t have is the time. ( ie to
 >: break long keys takes a long long time on current machines with current
 >: equipment.)
 >
 >Not entirely true. If you break the problem up, and use lots of machines
 >in parallel, the problem is not so difficult. A 128 digit key has been
 >broken this way using the internet, and anyone who was interested in
 >taking part.

 Bs> ^^^^^^^^ This last sentence is gibberish. And the prior sentence is
 Bs> WRONG. I would call a problem that took about 1600 machines 8 months
 Bs> to solve difficult. Wouldn't you?

Well, actually, the information I've read, the project took 8 months, as
you've mentioned -- but only 600 machines.  It took a mere 5000 MIPS
years.  The Gaussian elimination step took 45 hours, on a machine which
has 16,384 processors.  His last statement was not at all even
remotely gibberish.

The problem was broken up into 600 parts.  The parts ran, essentially as
seperate threads.  So a 600 cpu machine, each cpu running at 12.5 MIPs
would take eight months to perform the sieving step.  With 100 MIPs CPUs
you can do it in a month.

Finally, the problem is easy to solve.  The distribution and collection of
the program and data might have taken planning.  The construction of the
4 gigabyte sparse matrix array capable algorithms might have been both
daunting and challenging but it is by no means difficult to solve.

The only problem is getting the stuff (the cpus).  The solution is easy;
sort of...  build new factoring algorithms.  Our factoring methods have
gotten a little better of the years (centuries), but they aren't even
close to efficient.



 Bs> Firstly, someone talked about keys that were 10^15 times larger.
 Bs> If you knew anything about the subject (you obviously don't) you
 Bs> would know that the SIZE of a number is its number of digits or its
 Bs> number of bits, and NOT the VALUE of the number. A key that is
 Bs> 10^15 times larger than RSA-129  would have 1.29 x 10^17  DIGITS;
 Bs> The universe is not old enough or big enough to allow even a

In a like manner, the computing industry universe isn't big enough or
old enough to allow transmission of: 129,000,000,000,000,000 digit keys,
since that is 129 billion megabytes.

My 'adequate' modem can send a meg in 10 minutes.  At that rate, the key
alone would require a transmission time of 2,454,337 years.  With a
57.6k baud feed, you can make that just over 600,000 years.

Encryption with such a key would take about 6x10^12th years (excluding
the time necessary for fetching and storing the data for encryption and
the data for the key, which cannot possibly fit into any computer with
current technological standards).  Sure, you can break that problem up
into 64 pieces, or 16384.  If you broke it into 1 million pieces, it'd
still take over 1,000,000 years.

I could be off by, maybe a factor or two of magnitude, since calculations
were done in my head, and I have no clue as to whether the gov't has
teraflop devices.

 Bs> The question is NOT "How secure is my key?", but rather, "How
 Bs> secure is my key for a period of time X if  Y dollars are thrown at
 Bs> the problem?" 

Assuming the current mathematic methodologies and trends in computing
progress (speed, power, capacities).  However, progress in mathematical
methods of factoring have decreased the time required from our old
conventional estimates, and it is quite likely that at ANY day, any
person could find a simple mathematical formula for factoring in essentially
a single step.

 Bs> Now will those of you who have not worked in this area please stop
 Bs> making this ridiculous pronouncements? You are misleading others and
 Bs> misleading yourselves. 

Typical.  Gee, sounds like what has often been told to many in the fields
of math, science, music, art...  It seems that MOST who work in this field
don't talk at all (since they work for the NSA, the largest employer of
cryptologists and mathematicians in the world).  Is there some special
knowledge imparted by a degree, or working in the field which a self-taught
"amateur" cryptanalyst wouldn't be privy to?

The answer is no.  There is nothing in the field which any given person
cannot figure out.  If a person in the NSA figured it out, then anyone
can.  What we dont need are arrogant pronouncements of who is qualified
to speak on certain issues.

I've noticed that most computer science majors are absymal programmers,
and rather lack ingenuity or creativity and patience, but that degree
"makes" them qualified.  If any courses in college would seriously
impart such special cryptological material, then the government wouldn't
permit it.

Tim Little...


... DOS never says "EXCELLENT command or filename"...
---
 þ Blue Wave/QWK v2.12 þ
                                                
