Newsgroups: sci.crypt
Path: msuinfo!agate!ames!pacbell.com!att-out!nntpa!cbnewsi!cbnewsh!wcs
From: wcs@cbnewsh.cb.att.com (bill.stewart@pleasantonca.ncr.com)
Subject: Re: Finding Primes
Organization: AT&T Global Information Solutions, Pleasanton CA Field Office
Date: Fri, 26 Aug 1994 23:01:17 GMT
Message-ID: <Cv5zy6.87I@cbnewsh.cb.att.com>
References: <33iilp$f8n@ramp.metro.or.gov>
Lines: 47

In article <33iilp$f8n@ramp.metro.or.gov> eykampc@metro.or.gov (Chris Eykamp) writes:
]This is no doubt a naive question, but if RSA, or other public key
]encryption scheme were to become widespread, who would be 
]responsible for coming up with the millions of "unfactorable" numbers
]and their factors, and guaranteeing that everyone had their own unique
]keys?  It seems like it would require a fairly computationally intense
]effort to generate the number of numbers required to make widespread
]RSA feasible.

Yes, it's naive, but that's ok :-)  It's a good excuse to point you at
books like Bruce Schneier's "Applied Cryptography"...

The way to manage the computational load is for everyone to do it themselves.
You obviously can't have anybody else generate your keys for you,
since they'd then be able to impersonate you and read all your correspondence
(well, it's obvious to everyone except the government, who'd just love it :-)
but fortunately there's no need to.

While it's (probably exponentially) difficult to find the factors of a
non-prime number, there are characteristics of prime numbers that
don't take long to test, though composite numbers sometimes pass the
same tests.  So you run a bunch of tests on a large random odd number,
and a number that passes all of them is probably prime.
The popular tests are Miller-Rabin and Fermat, and non-primes have
probabilities of 1/2-1/4 of passing for any given parameter - so you
can run, say, 20-30 of the tests and be pretty sure you've got a prime.
(Keep trying random numbers until one passes...)

To construct an RSA key, you generate two large random primes.
You don't have to worry much about your primes being different from
other people's, because 512-bit-long primes are pretty dense you've
got an infinitesimally small chance of getting the same ones as anyone else,
and if you're still worried you can compare your public key with the
public keys of other people on the key servers.  

More of a problem than having the same keys (which *won't* happen) is
having the same PGP Key ID, which is the low-order N bits of the key
used for convenience in handling keys.  N used to be 24; it's now 32,
since people had noticed that there already were collisions in real keyids.
You still can't depend on key-ids being unique - someone even demonstrated
that it's not too hard to generate keys with arbitrary keyids,
but it's nice if they're usually unique for most people.
-- 
# Bill Stewart       AT&T Global Information Solutions (new name for NCR!)
# 6870 Koll Center Pkwy, Pleasanton CA 94566  1-510-484-6204 fax-6399
# Email: bill.stewart@pleasantonca.ncr.com billstewart@attmail.com
# ViaCrypt PGP Key IDs 384/C2AFCD 1024/9D6465
