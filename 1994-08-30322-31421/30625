Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!csulb.edu!csus.edu!netcom.com!rlglende
From: rlglende@netcom.com (Robert Lewis Glendenning)
Subject: Re: Self-destructive encryption util
Message-ID: <rlglendeCu7unM.JHH@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <adamtCu4spG.136@netcom.com> <324j7u$12o@larry.rice.edu>
Date: Mon, 8 Aug 1994 12:28:33 GMT
Lines: 71

In article <324j7u$12o@larry.rice.edu>,
Jeremy Daniel Buhler <jbuhler@is.rice.edu> wrote:
>adamt@netcom.com (Adam Thornton) writes:
>> If you're seriously this paranoid, I suggest packing the empty space in
>> your computer with thermite
>
>Hmmmm... kinda messy.  Instead, how about this for a practical, 
>cryptographically self-destructing secure drive implementation:
>
>The drive unit, which I will assume for the moment to be external,
>contains the following components:
>
>A standard 1 Gb drive
>8 Mb worth of fast EEPROM ("flash" memory)
>A hardware random number generator
>A hardware encryption chip (IDEA, for argument's sake)
>Suitable glue logic and a SCSI connector
>A Big Red Switch
>
>To your computer, the system looks like a normal SCSI device.  In
>fact, all data on the drive is IDEA encrypted, one key per sector.
>The sector keys are generated using the RNG hardware and stored in the
>EEPROM.  If we use CBC mode and store the sector IV's (also generated
>with the RNG hardware) on the drive itself, we diminish the capacity a
>little ( < 1% with 2kb sectors); alternatively, we can use more EEPROM
>for the IV's, but doing so would add about US$1000 to the unit cost.
>
>If the cryptosystem has a throughput faster than that of the drive,
>the encryption is transparent.  For reference, Applied Cryptography (p
>264) describes a hardware IDEA implementation which can encrypt at 177
>Mbits/sec @25 MHz.  I chose 8 Mb of EEPROM so that each 2k sector of
>the 1 Gb drive could have its own key.
>
>If you are in danger of being captured, flip the Big Red Switch, which
>instantly fries the EEPROMs and destroys the sector keys.  Recovering
>each sector becomes as hard as breaking IDEA, and you have no
>knowledge of the keys.  If you don't like IDEA, use another algorithm.
>If you can afford 1 Gb of EEPROM, you can even have your very own
>one-time-pad (nobody ever said that paranoia was cheap).
>
>For non-crisis situations, you could design the drive module so that
>the EEPROMs are on a removable card, which you could, say, lock in a
>safe at night (the current standard operating procedure for removable
>media containing classified data).  Any additional security features
>you want to build into the drive would be based on encrypting the
>key EEPROMs.
>
>I think the entire system could be built for under US$5000 - say,
>US$1000 for the EEPROMs, US$1000 for the drive, and the rest for the
>various VLSI stuff.
>
>Of course, thermite has a certain basic charm to it that no amount of
>fancy logic can ever hope to achieve :-).
>-- 
>\\ Jeremy Buhler * Rice University * jbuhler@owlnet.rice.edu //
>//     Yow!  Did you remember to MOUNT a scratch MONKEY?     \\


Any portable computer with the fancy flash memory card
meets your specification.  The Big Red Switch is any emergency
or coercion indicator.  Store your sector keys on the PCMCIA card,
...

This slows down some because IDEA (or whatever) is in software, but
I would not mind for some applications.  Can be applied on a
per-partition basis.

Lew
-- 
Lew Glendenning		rlglende@netcom.com
"Perspective is worth 80 IQ points."	Niels Bohr (or somebody like that).
