Path: msuinfo!uwm.edu!spool.mu.edu!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!athena.mit.edu!solman
From: solman@athena.mit.edu (Jason W Solinsky)
Newsgroups: sci.crypt
Subject: Re: SHA
Date: 31 Jul 1994 21:54:30 GMT
Organization: Massachusetts Institute of Technology
Lines: 34
Distribution: world
Message-ID: <31h6im$o2f@senator-bedfellow.MIT.EDU>
References: <316hn8$2qg@netnews.upenn.edu> <317688$enk@senator-bedfellow.MIT.EDU> <31egbp$nso@rzsun02.rrz.uni-hamburg.de>
NNTP-Posting-Host: e51-007-3.mit.edu

In article <31egbp$nso@rzsun02.rrz.uni-hamburg.de>, bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev) writes:
|> Jason W Solinsky (solman@athena.mit.edu) writes:
|> 
|> > |> Is it possible to use SHA solely for encryption?  I do not mean using it
|> > |> as a hash function and then implementing some encryption algorithm.
|> 
|> > No. SHA loses information when applied to any text longer than 160 bits, so it
|> > obviously can't do encryption. More over, its a one way hash function without
|> > a trapdoor, so there is no way to reverse it in a usefully short period of time.
|> 
|> Huh?! No, you are wrong, of course. It *is* possible to use SHA for
|> encryption - by using it as a secure hash function in a MDC-type
|> cypher. In fact, I think that it is possible to use *any* secure hash
|> function in this way.
|> 
|> I am *really* surprised that you don't know this. I think that there
|> was a paper describing this - how to make strong cyphers from
|> cryptographically strong hash functions - but I don't have the
|> reference handy. Maybe Peter Gutmann can help with the reference - he
|> seems to like the MDC cyphers a lot.
|> 
|> > That said, you can use just about any secure one-way hash as a building block
|> > in an encryption algorithm in the style of Mesage Digest Cypher (MDC) and
|> > Luby-Rackoff (spelling ?-} ).
|> 
|> Oh, so you know it? Why did you write you first paragraph then? The
|> two paragraphs of your article contradict each other...

The original question seemed to be very specific about not doing any
modification to the hash at all. "I do not mean using it as a hash function
and then implementing some encryption algorithm." As I interpret that line,
it rules out MDC-like things.

JWS
