Path: msuinfo!netnews.upenn.edu!dsinc!spool.mu.edu!howland.reston.ans.net!europa.eng.gtefsd.com!newsxfer.itd.umich.edu!ncar!noao!CS.Arizona.EDU!organpipe.uug.arizona.edu!math.arizona.edu!not-for-mail
From: nelson@math.arizona.edu (Jeff Nelson)
Newsgroups: sci.crypt
Subject: Re: Excel Spreadsheet Protection Question
Date: 8 Aug 1994 23:58:50 GMT
Organization: Mathematics Department -- Univeristy of Arizona
Lines: 52
Distribution: world
Message-ID: <326grq$mkp@organpipe.uug.arizona.edu>
References: <rlglendeCu2ypu.K5p@netcom.com> <320r3rINNppt@aston.insignia.uucp> <323d13$1b9@crl4.crl.com>
NNTP-Posting-Host: chinle.math.arizona.edu

In article <323d13$1b9@crl4.crl.com>, hoxsiew@crl.com (Wayne Hoxsie) writes:
|> Mark Grant (mark@aston.insignia.uucp) wrote:
|> : In article <rlglendeCu2ypu.K5p@netcom.com> rlglende@netcom.com (Robert Lewis Glendenning) writes:
|> : >Question: Is Excel encryption serious?  (I tried Microsoft Support,
|> : >who have no idea.)
|> 
|> : Probably not. I'd guess it uses the same algorithm as Word, which is
|> : pretty hopeless - basically it just XORs a repeating pattern on top
|> : of the data, and there are standard methods of breaking that sort
|> : of encryption. I'd suggest getting PGP or a DES program off of the
|> : net if you want to keep it secure.
|> 
|> : 		Mark
|> 
|> : P.S. The fact that Microsoft can export Excel would tend to imply
|> : that the encryption isn't much good, wheter it uses the same
|> : algorithm or not.
|> 
|> 	I've done some investigation on the WORD encryption algorithm and 
|> it is NOT secure.  The password (up to 16 characters) is prompted for 
|> then fed into a hash function which produces a 16 byte key.  This is 
|> repeatedly XORed with the data in the word file from a certian offset 
|> from the initial word document header.  A flag in the header tells 
|> whether the document is encrypted.  The main flaw is that the original 
|> word document has 48 bytes of nul's at offset 0x0150 that clearly reveal 
|> the hashed key.  One doesn't even need the original password, simply 
|> obtain the hashed key and re-XOR it with the file at the offset then flag 
|> the header as non-encrypted.
|> 	If anyone has any idea what sort of hash algorithm is used, I'd 
|> be interested in it.  I suppose I could disassemble WORD.EXE but I think 
|> that's illegal.
|> 
|> --
|> Wayne Hoxsie  hoxsiew@crl4.crl.com (Finger for PGP key)
|> 

I recall reading in the PGP documentation that someone wrote a
commercial package to break most of the widely available wordprocessor
and spreadsheet encryption systems.  The author said it generally took
"a fraction of a second" to break the encrypted data, but that he put
in a bunch of calls to sleep() in order to make the user feel better
about how hard the cracking routine must have to work.  

The author stated that in general all the encryption routines used by these
large packages are a joke, written by programmers with no real experience
in encryption.  The system was targetted at businesses who had misplaced
their keys to important pieces of data, and cost in the hundreds of dollars.

(All of the above is paraphrased from memory.)
-- 
				- Jeff

