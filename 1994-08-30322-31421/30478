Path: msuinfo!agate!ames!enews.sgi.com!decwrl!waikato!venus.cs.waikato.ac.nz!colinb
From: colinb@cs.waikato.ac.nz (Colin Boyd)
Newsgroups: sci.crypt
Subject: Re: DH as public key method?
Date: 3 Aug 1994 23:22:40 GMT
Organization: CompSci, U of Waikato, New Zealand
Lines: 18
Distribution: inet
Message-ID: <31p8s0$p5k@venus.cs.waikato.ac.nz>
References: <phrCtsILL.34E@netcom.com>
NNTP-Posting-Host: borg.cs.waikato.ac.nz
X-Newsreader: TIN [version 1.2 PL2]

Paul Rubin (phr@netcom.com) wrote:

: Does anyone know if there is any problem with using Diffie-Hellman as
: a public key encryption method, as opposed to a key exchange method?
: I.e., all users of the system share a common modulus P and generator
: g; for a public key, generate a secret X and publish g^x mod P;
: someone wanting to send you a secret message chooses a random y and
: sends you g^y mod P followed by an encrypted message using g^(xy) mod
: P as the session key per usual DH.  Of course this doesn't do digital
: signatures (use El Gamal) but are there any security problems aside
: from brute force precomputation of a giant log table?

This is essentially ElGamal encryption (see for example Schneier pp.301-302).
In ElGamal's original, encryption is simply multiplication mod P by the
'session key'. There seems no obvious reason why other encryption
methods should be insecure. However, one nice property of ElGamal
encryption is that breaking it is equivalent to breaking Diffie-Hellman.
This obviously goes away if more conventional encryption is used.  
