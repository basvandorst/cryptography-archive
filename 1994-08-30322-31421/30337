Path: msuinfo!agate!howland.reston.ans.net!usc!elroy.jpl.nasa.gov!decwrl!uunet!charon.citicorp.com!charon.citicorp.com!not-for-mail
From: philip@charon.citicorp.com (Philip Gladstone)
Newsgroups: sci.crypt
Subject: Graph Isomorphism problem
Date: 31 Jul 1994 17:10:55 -0400
Organization: Citicorp
Lines: 25
Message-ID: <31h40v$n9v@charon.citicorp.com>
Reply-To: Philip.Gladstone@mail.citicorp.com
NNTP-Posting-Host: charon.citicorp.com
X-Newsreader: TIN [version 1.2 PL2]

An example commonly given as a zero knowledge proof is that of graph
isomorphism. This is based on the difficulty of discovering an isomorphism 
between two graphs. The good guy has to generate a graph and then an
isomorphism of that graph by permuting the vertices. The bad guy would
like to discover the isomorphism given the two graphs.

After some experimentation, it seems that the hard part is generating 
a graph that is 'good'.  Most graphs have enough distinguishing
features that each of the vertices are identifiable, and hence 
reversing any isomorphism is trivial.

I have a way of recovering an isomorphism between two graphs in
a fairly reasonable time - under an hour for reasonable sized graphs
(say up to 10000 nodes densely connected or 200000 arcs in a sparse
graph). Are these numbers very small? My scheme seems to run at about
order n**3.

If anbody has a pair of graphs of this sort of order of size, I'd
be delighted to discuss trying to solve that pairing.

Philip
-- 
Philip Gladstone - Consultant
Citicorp Global Information Network
I don't speak for Citicorp. I presume that somebody else does!
