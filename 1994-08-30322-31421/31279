Path: msuinfo!agate!howland.reston.ans.net!pipex!sunic!news.kth.se!hemul.nada.kth.se!md85-epi
From: md85-epi@hemul.nada.kth.se (Urban Koistinen)
Newsgroups: sci.crypt
Subject: Re: Want to detect collisions without revealing extra information
Date: 28 Aug 1994 08:22:41 GMT
Lines: 47
Message-ID: <33phgh$cf@news.kth.se>
References: <33oc2r$n4l@news.kth.se> <33ok8j$kbs@agate.berkeley.edu>
NNTP-Posting-Host: hemul.nada.kth.se
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit

spp@bob.eecs.berkeley.edu (Steve Pope) writes:

:md85-epi@hemul.nada.kth.se (Urban Koistinen) writes:

:> A has a set of numbers from the range 0..999999999
:> B has a set of numbers from the range 0..999999999
:>
:> How do they calculate the size of the intersection of their sets
:> without revealing more?
:>
:> According to Dagens Nyheter, the biggest dayly newspaper in Sweden,
:> it is not possible without A and B finding out which are colliding.[1]

:Hash each number with a strong hash function, then reveal the
:hashes?

This is about how far I have gotten by myself:

If each number is hashed with a strong hash function it is possible
to reverse the process by creating a table with 10**9 entries.
It is also possible to know that the subset is smaller than 10**9,
allowing you to find the numbers corresponding to the hash values
without checking as many numbers.
Also, the method you propose would tell A and B exactly where the
collisions are.

I then thought of the following:
A and B each select a secret number, then transmit the numbers as
hash(number)**(secret number) to the other who responds with
(recieved number)**(secret number).
All calculations modulo some number as in Diffie-Hellman.
Then they have two sets of
 (hash(number from set 1)**(secret number 1))**(secret number 2)
and
 (hash(number from set 2)**(secret number 2))**(secret number 1)
Count the number of hits, and you are done, knowing the number
of hits and not where they occur.

When transmitting the numbers you should reorder them or else
the other side would know what number corresponds to what sent
number. Transmitting them least first would be fine.

The problem for me is that I don't know if the technique is
really good or if I have missed something.
-- 
Urban Koistinen - md85-epi@nada.kth.se
Stop software patents, interface copyrights:  contact lpf@uunet.uu.net
