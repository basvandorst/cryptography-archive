Newsgroups: sci.crypt
Path: msuinfo!agate!ames!elroy.jpl.nasa.gov!usc!nic-nac.CSU.net!charnel.ecst.csuchico.edu!csusac!csus.edu!netcom.com!ppearson
From: ppearson@netcom.com (PKJS Pearson family)
Subject: Re: Reversing CRC32?
Message-ID: <ppearsonCu0q2H.J4J@netcom.com>
Keywords: CRC, reversing
Sender: ppearson@netcom.com
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <775938813.758snx@netacsys.com>
Date: Thu, 4 Aug 1994 16:06:10 GMT
Lines: 31

In article <775938813.758snx@netacsys.com>, Mycal <mycal@NetAcsys.com> wrote:
>
>is it possible to reverese CRC32() or any other standard CRC routing?
>
>newcrc = CRC32(startcrc,bytevalue);
>
>to
>
>startcrc = RCRC32(newcrc,bytevalue);
>
>either that is there any info you can get back?

Certainly. Remember that the computation of a CRC is essentially
long division, in base 2, using XOR instead of subtraction. Instead
of extending the CRC by a full byte at one time, imagine what the
problem would look like if you were extending it by just one bit.
(The byte-at-a-time problem is just 8 successive applications of the
bit-at-a-time problem.) Given that your CRC polynomial begins and
ends with "1" bits, the last operation in the CRC generation must
have been one of these four (for simplicity, working with a 5-bit
CRC rather than 32 bits):

   0aaaa0    0aaaa1    1aaaa0    1aaaa1  (oldcrc<<1)+newbit
   000000    000000    1pppp1    1pppp1  0 or poly, dep'g on high bit
   ------    ------    ------    ------
    aaaa0     aaaa1     bbbb1     bbbb0  newcrc

Conclusion: XOR the last-added bit to the LSB of newcrc. If the result
is zero, oldcrc = newcrc>>1; else oldcrc = (newcrc>>1) ^ polynomial.

- Peter
