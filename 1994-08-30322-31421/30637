Newsgroups: sci.crypt
Path: msuinfo!agate!overload.lbl.gov!ames!enews.sgi.com!wdl1!mail!are107.lds.loral.com!hahn
From: hahn@newshost.lds.loral.com  (Karl Hahn)
Subject: Re: Rubic Encryption Algorithm (comments please)
Message-ID: <940808125100@are107.lds.loral.com>
Nntp-Software: PC/TCP NNTP
Lines: 49        
Sender: news@lds.loral.com
Reply-To: hahn@lds.loral.com
Organization: Loral Data Systems
References: <940808074752@are107.lds.loral.com> <PERRY.94Aug8105858@snark.imsi.com>
Date: Mon, 8 Aug 1994 17:51:00 GMT

In article <PERRY.94Aug8105858@snark.imsi.com> perry@snark.imsi.com (Perry E. Metzger) writes:

>   
>   In article <940808074752@are107.lds.loral.com> hahn@newshost.lds.loral.com  (Karl Hahn) writes:
>   
>   >This post solicits comments on an algorithm I'll call the Rubic
>   >encryption, due to its abstract resemblence to a Rubic Cube. 
>   
>   [Most of what Mr. Hahn thinks is important part of the algorithm
>   deleted. Then we get to what is actually the important part of
>   the algorithm.]
>   
>   >We shall assume we have a key stream generator that generates numbers
>   >1 through 9 in some cryptographically secure way.
>   
>   That, Mr. Hahn, is your actual algorithm. Your system is no more
>   secure than your cryptographic random number generator. What you have
>   left as a side detail is what most people would consider to be the
>   core of their algorithm. Given a cryptographically secure random
>   number generator, why not just XOR the stream it outputs with your
>   text and be done with it? Saying, at one point, "assume a
>   cryptographically secure random number generator" is like saying, in a
>   description on "how to perform brain surgery": "assume that you have a
>   talented brain surgeon who will actually do the surgery for you".

[deletia]

Thank you for taking time to reply.

What you say is true if a particular key stream is to be used only once.
If the key is to be used multiple times (for multple messages), then an
attacker who has just one sample of plaintext/ciphertext would be able
to deduce the key to an XOR pad.

The reason DES, for example, is not a simple XOR pad is because it does
make multiple use of a key.  The permutation algorithm I described requires
at least N (where N is the alphabet size) samples before an attacker
can completely deduce the key stream.  It is this type of attack
that I was interested in insights on.

--
|         (V)              |  "Tiger gotta hunt.  Bird gotta fly.
|   (^    (`>              |   Man gotta sit and wonder why, why, why.
|  ((\\__/ )               |   Tiger gotta sleep.  Bird gotta land.
|  (\\<   )   der Nethahn  |   Man gotta tell himself he understand."
|    \<  )                 |  
|     ( /                  |                Kurt Vonnegut Jr.
|      |                   |  
|      ^           hahn@lds.loral.com

