Path: msuinfo!agate!library.ucla.edu!csulb.edu!nic-nac.CSU.net!ctp.org!not-for-mail
From: jomcgow@eis.calstate.edu (John S. McGowan)
Newsgroups: sci.crypt
Subject: Re: RSA - Cracked ?
Date: 10 Aug 1994 08:53:35 -0700
Organization: California Technology Project of The Calif State Univ
Lines: 166
Message-ID: <32at5v$8jb@eis.calstate.edu>
References: <32755c$na7@eis.calstate.edu>
NNTP-Posting-Host: eis.calstate.edu

A footnote: With S(a)=the product of all the primes in a to their powers
in a... but restricted to primes which are smaller than P, then
S(abc)=S(a)S(b)S(c)

The formula for the percentage of messages which have orders having all
prime factors smaller than P was the product of 1/S(a) over the cyclic
decomposition (using invariant factors) of the multiplicative group of
units modulo n. The last factor was Lambda(n). The product of the a's is
the order of the group, so the formula for the percentage of messages in
the group of units modulo n which have orders with all prime factors
less than or equal to P is nothing but:

  1/S(PHI(n)) (and the number of messages with the property is R(PHI(n))

Where S(x) = the product of primes greater than P which divide x to
their order in x (the "greater than P" part of x) (and R(x) is the
"less than or equal than P part of x).

NOTE: IF (p-1)/2 and (q-1)/2 are primes, say, A,B then the
      multiplicative group of units modulo n is isomorphic to the group
      Z_2 + Z_(2AB)
      The number of solutions to x^2=1 here is four (includes the
      identity... for if a,b are the single elements of each factor of
      order 2 (PHI(2)=1) then 1,a,b,ab are the four solutions to x^2=1.
      Note that one of these is "-1" mod n, so the solns. are
      1,-1,z,-z for some 1<>z<>-1 with z^2=1 mod n.
      Except for these four elements, every other number relatively
      prime to n must have an order with a factor of A or B (we only
      consider the n(1-1/p)(1-1/q) messages which are relatively prime
      to n, ignoring ones such as "p", "0", "3q"... in percentage
      we are ignoring only 1/p+1/q-1/(pq) of the messages).
      If one is to try to decrypt a message by finding a multiple of its
      order, then in this case, except for the four messages, one must find
      A,B or AB to decode... finding A=(p-1)/2 is equivalent to finding p
      (or factoring n) and finding AB=(p-1)(q-1)/4 and knowing n=pq
      enables one to get a quadratic equation (over the reals, so the
      square roots can be done, say using Newton Rhapson.. this is NOT
      finding square roots in a finite field!) for p,q (factoring n).
      Thus, IF (p-1)/2,(q-1)/2 are primes, any attempt to decrypt a message
      by finding a multiple of its order would require taking all primes
      through A,B (about SQR(n)... too large) or factoring n. On the
      other hand, if all the prime factors of lambda(n) are less than P
      (where P is polynomial in log(n)... in my example I took 8*log_2(n))
      then using primes up through P is feasible for decrypting all messages.
      The moral is that p-1,q-1 should have large prime factors... being
      double prime themselves seems to force factoring n to use this method
      (but, knowing n=pq with p,q,(p-1)/2,(q-1)/2 are primes, does this
      simplify factoring n?).

One still must worry about whether or not (using PGP) all the prime
factors of the orders of an element are smaller than P... (PGP randomly
chooses primes p,q with n=pq... does not insist that PHI(n) have large
factors, or many of them) (though if PHI(n) does have large prime
factors, only a small percentage of the messages can be decrypted with
this attack... namely R(PHI(n))/PHI(n)). With regards to the
question as to whether *all* the prime factors of PHI(n) are less
than P, I have found a formula which, unfortunately, is not accurate
in the case in which I am interested, namely n being of
(binary) order 256,512 or 1024 and P=8192.

The formula (only valid for MUCH larger n for the given P) is as follows:

I have found a formula for the number of integers smaller than N for
which all the prime factors are smaller than P_T (P_T being the T'th
prime so P_T/ln(P_T) is about T.

It is based upon the fact that the number of solutions to:

   SUM[c_j*a_j:cj non negative integers: j from 1 to T] < K

Is about K^T/(T!*PRODuct[aj]) for K large. One takes a_j as ln(p_j)
where p_j is the j'th prime and K=ln(N) to get a formula for the number
of elements less than N all of whose prime factors are smaller than P_T
as about:

  (ln(N))^T/(T!*PROD[ln(p):p prime < P_T])

And the percentage of the numbers from 1 to N which have prime factors
no larger than P_T being this divided by N.

One problem... the formula only works for having many interior points in
the region in T-dimensional space... that is K should be large enough to
have large coeficients for the c_j... but, about T/2 of the terms ln(p)
have value very close to ln(P_T) (say, for p from 2^j to 2^(J+1) where
P_T is about 2^(J+1), the value of ln(p) is about j*ln(2) and there are
about 2^J/(J*ln(2)) primes there... about the same number as all the
others!)... so we want ln(N) to be a large number times T times ln(P_T),
or with P_T of about the same order of magnitude as T,
want N to be T^(K*T) for some large K. Thus for N indecently large
compared to T, the percentage of numbers from 1 to N which only have
prime factors smaller than P_T (T'th prime) is about:

 (1/N)*(ln(N))^T/(T!*PROD[ln(p):p prime < P_T])

(note, the numerator is a poly in ln(N), so for N large enough to use
this, we can see that few numbers randomly chosen will have only small
prime divisors of lambda(N))

Problem is... the term (ln(N))^T/(T!*PROD[ln(p):p prime < P_T]) (number
of numbers less than N with the property) is less than one (impossible!)
for N=exp(T) once T becomes just a small number! N must be extremely
large to use this! In particular, with a value of T^T for N and taking T
about 8000 if we use primes up to 8000, the formula would work for N as
large as 8000^8000, and we want one for 2^512 (or 2^128 or whatever...
remember we are taking N=(p-1)/2 or (q-1)/2 as random and want *their*
divisors smaller than P_T where n=pq... so if n has 1024 bits,
N or p has about 512).

I guess one could try to find all the solutions to the inequality (not a
good idea with about 8000 coeficients) or try for some recursive method
(rather than the use of volumes of simplices in T-dimensional space... which is
what the K^T/(T!*PROD[a_j]) is... these volumes only being an
approximation for large K * T times the average of a_j... maybe a better
approximation than dc_j for d[c_j] ([]=INTeger function) in changing
from the correct Stieltjes integral:

  INTegral[d[c1]d[c2]...d[cT]: over SUM[cj*aj]<K]

to get a better approximation... oh well).

One can answer the question of the average number of integers smaller
than N which have all prime factors smaller than the T'th prime, P_T...
but the approximation I have is not good enough to handle the case of
P_T=8192 and N=2^512 (sigh) (though it works, of course, for N being
"sufficiently large").

------------------------------------------------------------------------

Anyway, I think I have finally convinced myself that the technique of
simply choosing a number with a lot of factors (to high powers) and
using this to find d with d*e=1 modulo that number in order to be able
to factor some messages (take all prime factors up to P) will not factor
many if PHI(n) has a large prime factor (larger than P) (with S(x) being
the product of all primes greater than P that divide x raised to their
powers in x, the percentage of messages one can crack this way is
1/S(PHI(n))). So it would be nice to know that often PHI(n) has large
prime factors. It is important to know that it is almost impossible for
PHI(n) to have all its factors smaller than P (where P is on the order
of a polynomial in log(n)) but I still have not convinced myself that
random choice of p,q ensures this <sigh>. Though, if (p-1)/2 and (q-1)/2
are primes, using this technique to decrypt any but four of the messages
is equivalent to factoring n. Note that most of this involves the
n(1-1/p)(1-1/q) elements that are relatively prime to n... there are
only a few other messages, and they (though showing up infinitesimally
often) do decrypt correctly in RSA for n being square free.

Enough... I had a question on a probabalistic attack on RSA and am now
convinced that using strong primes p,q definitely foils it... and am
pretty sure that PGP does as well (though for random choice... what is
the actual probability that all primes dividing PHI(n) are smaller than
P for P=8192 and n of (binary) order 256 [random meaning p,q chosen as
random primes n=pq]?

Ah well... asked a question and answered it myself... sorry for
intruding...

Norbury! <sigh>

Sincerely,

--
   John S. McGowan   |    jmcgowan@bigcat.missouri.edu [COIN] (preferred)
                     |    j.mcgowan15@genie.geis.com   [GEnie]
                     |    jomcgow@eis.calstate.edu     [CORE]
   ----------------------------------------------------------------------

