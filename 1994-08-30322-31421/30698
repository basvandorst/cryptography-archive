Newsgroups: sci.crypt
Path: msuinfo!agate!ames!taligent!Dave.Engberg
From: snarflrd@leland.stanford.edu (David Engberg)
Subject: Broadcastable authentification algorithm needed
Message-ID: <CuA908.5nK@taligent.com>
X-Posted-From: InterNews 1.0@taligent.com.
Keywords: DSS DSA signature public key authentification zero-knowledge
Lines: 26
Sender: -Not-Authenticated-[7990]
Organization: Taligent, Inc.
Date: Tue, 9 Aug 1994 19:33:44 GMT
Xdisclaimer: No attempt was made to authenticate the sender's name.

I'm designing a GPL-able distributed DB system which needs to be able
to resolve change requests between a large number of
not-necessarily-trusted hosts.  This means that a host must be able to
send out an object change which will only be carried out by others if
the original host knows the object's secret 'key'.

Due to this architecture, other constraints are implicit:

1) a signed message must be verifiable by all (including non-trusted)
   servers, whether or not they posess the key.
2) the signature on a given change-request cannot be used verbatim by a
   non-trusted server to sign a second message.
3) the algorithm cannot rely on multiple-level communications back and
forth
   to establish validity:  need a sign-once-broadcast-out system.
4) the algorithm used needs to be as freely-usable and -exportable as
   possible.

Obviously, public-key signatures (and public-key encryption, as a
superset) could satisfy 1-3, but only DSS would satisfy 4, and I have
been unable to find any published DSA implementation yet.  (anyone?
anyone?)  In any case, threatening legal posturing by RSA makes even
DSA seem like dangerous overkill for what should be a simpler problem.

Any ideas would be greatly appreciated.  100% certainty is not
neccessary ... reducing the chance of cheating to 1/1000 would be
enough to prevent problems for this system.
