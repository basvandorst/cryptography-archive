Path: msuinfo!agate!dog.ee.lbl.gov!ihnp4.ucsd.edu!swrinde!howland.reston.ans.net!wupost!udel!MathWorks.Com!zombie.ncsc.mil!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: collisions
Date: Sun, 28 Aug 94 23:47:30 CDT
Organization: University of Missouri, Columbia
Lines: 69
Message-ID: <1702014E92S86.C445585@mizzou1.missouri.edu>
NNTP-Posting-Host: mizzou1.missouri.edu

-----BEGIN PGP SIGNED MESSAGE-----
 
>From: spp@bob.eecs.berkeley.edu (Steve Pope)
>Subject: Re: Want to detect collisions without revealing extra information
>Date: 28 Aug 1994 00:03:31 GMT
 
>md85-epi@hemul.nada.kth.se (Urban Koistinen) writes:
 
>> A has a set of numbers from the range 0..999999999
>> B has a set of numbers from the range 0..999999999
 
>Hash each number with a strong hash function, then reveal the
>hashes?
 
     No, that won't work.  If H(A) = X, and I hash A and then see that
you've hashed to the same value, then I've just discovered than A is a
collision value.
 
>Steve
 
>> How do they calculate the size of the intersection of their sets
>> without revealing more?
>> According to Dagens Nyheter, the biggest dayly newspaper in Sweden,
>> it is not possible without A and B finding out which are colliding.[1]
 
     There is a way I can see, but it's unwieldy.
 
     Let's suppose Alice has N1 elements in her set, and Bob has N2
elements in his set.  Assume they're willing to reveal number of
elements in their sets.
 
Let:
     F(X,K) be a keyed oneway function such that F(F(X,k0),k1) = F(F(X,k1),k0).
     KA = Alice's key
     KB = Bob's key
 
     Alice shuffles her A[] randomly, and sends Bob
          S[i] = F(A[i],KA) for i = 1 to N1.
     Bob shuffles his B[] randomly, and sends Alice
          T[i] = F(B[i],KB) for i = 1 to N2.
     Alice shuffles the T[] and hashes each with her key, giving
          U[i] = F(T[i],KA) for i = 1 to N2.
     Bob shuffles the S[] and hashes each with his key, giving
          V[i] = F(S[i],KB) for i = 1 to N1.
 
     Now, for each U[i] = V[j], there is one A[i] = B[j].
 
     Assuming Alice and Bob don't cheat, this seems to work.  Am I
missing anything?  Clearly, by cheating, either party can make the other
think they have fewer in common than they do.
 
     To get around the cheating problem, they'd have to reveal their
sets to someone.  Otherwise, what keeps Alice from substituting two or
three random numbers?  Also, at any point in this protocol, something
similar could be done--randomly change the number.
 
   --John Kelsey, c445585@mizzou1.missouri.edu for another couple of weeks.
 
 PGP 2.6 Key fingerprint =  4F E2 F4 21 10 0F BB 0A  03 D1 FE 06 A4 35 7E 36
 
-----BEGIN PGP SIGNATURE-----
Version: 2.6
 
iQCVAgUBLl2dn0Hx57Ag8goBAQGC5wQAsgQ4vPCeWXBtIe5FqAk1YzeO3sy9+egG
vjrwT9zfdNhmPK6D84Ji6wK3yEnReTNRMAGkF8UXm4ni+nHrklUmF2QL0jmNIDDe
kmvJSjNkbtE8i/e0HzTvWxiX/n2G6bdmT0mJoac11DLE3yc+2SMudnfPxswyCWHC
olFfg3whbY8=
=fRre
-----END PGP SIGNATURE-----
