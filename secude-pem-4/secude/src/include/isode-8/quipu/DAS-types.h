/* automatically generated by pepsy 8.0 #2 (pilsen), do not edit! */

#ifndef	_module_DAS_defined_
#define	_module_DAS_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#ifndef	PEPYPATH
#include <isode/psap.h>
#include <isode/pepsy.h>
#include <isode/pepsy/UNIV-types.h>
#else
#include "psap.h"
#include "pepsy.h"
#include "UNIV-types.h"
#endif



extern modtyp	_ZDAS_mod;
#define _ZNameErrorParmDAS	65
#define _ZCompareArgumentDataDAS	33
#define _ZDirectoryBindResultDAS	28
#define _ZSearchArgumentDAS	45
#define _ZListArgumentDAS	41
#define _ZCompareResultDAS	36
#define _ZCompareArgumentDAS	34
#define _ZProtectionRequestDAS	12
#define _ZDirectoryBindErrorDAS	62
#define _ZListResultDataDAS	42
#define _ZAttributeProblemDAS	24
#define _ZSecurityParametersDAS	14
#define _ZReadResultDAS	32
#define _ZDBitStringDAS	13
#define _ZPartialOutcomeQualifierDAS	18
#define _ZUpdateErrorParmDAS	69
#define _ZModifyRDNResultDAS	61
#define _ZServiceControlsDAS	11
#define _ZAttributeErrorParmDAS	64
#define _ZAddEntryArgumentDataDAS	50
#define _ZSecurityProblemDAS	8
#define _ZReferralParmDAS	66
#define _ZAddEntryArgumentDAS	51
#define _ZListResultDAS	43
#define _ZServiceProblemDAS	9
#define _ZFilterItemDAS	19
#define _ZLimitProblemDAS	17
#define _ZEntryInformationDAS	16
#define _ZStrongCredentialsDAS	5
#define _ZTAttributeTypeDAS	21
#define _ZTokenToSignDAS	3
#define _ZAbandonProblemDAS	23
#define _ZExtensionDAS	15
#define _ZTInvokeIDDAS	37
#define _ZNameProblemDAS	25
#define _ZSimpleCredentialsDAS	0
#define _ZCredentialsDAS	6
#define _ZTokenDAS	4
#define _ZSecurityErrorParmDAS	67
#define _ZDirectoryBindArgumentDAS	27
#define _ZAddEntryResultDAS	52
#define _ZServiceErrorParmDAS	68
#define _ZRemoveEntryResultDAS	55
#define _ZSearchResultDataDAS	46
#define _ZAbandonResultDAS	39
#define _ZAbandonArgumentDAS	38
#define _ZRemoveEntryArgumentDAS	54
#define _ZSBitStringDAS	48
#define _ZAbandonFailedParmDAS	63
#define _ZRemoveEntryArgumentDataDAS	53
#define _ZReadArgumentDataDAS	29
#define _ZTBitStringDAS	2
#define _ZModifyRDNArgumentDAS	60
#define _ZModifyRDNArgumentDataDAS	59
#define _ZModifyEntryResultDAS	58
#define _ZSAlgorithmIdentifierDAS	47
#define _ZEntryInformationSelectionDAS	10
#define _ZModifyEntryArgumentDAS	57
#define _ZSearchResultDAS	49
#define _ZFilterDAS	20
#define _ZTAlgorithmIdentifierDAS	1
#define _ZModifyEntryArgumentDataDAS	56
#define _ZListArgumentDataDAS	40
#define _ZUpdateProblemDAS	26
#define _ZCompareResultDataDAS	35
#define _ZReadArgumentDAS	30
#define _ZEntryModificationDAS	22
#define _ZVersionsDAS	7
#define _ZSearchArgumentDataDAS	44
#define _ZReadResultDataDAS	31

#ifndef	lint
#define encode_DAS_SimpleCredentials(pe, top, len, buffer, parm) \
    enc_f(_ZSimpleCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SimpleCredentials(pe, top, len, buffer, parm) \
    dec_f(_ZSimpleCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SimpleCredentials(pe, top, len, buffer, parm) \
    prnt_f(_ZSimpleCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SimpleCredentials_P    _ZSimpleCredentialsDAS, &_ZDAS_mod

#define encode_DAS_TAlgorithmIdentifier(pe, top, len, buffer, parm) \
    enc_f(_ZTAlgorithmIdentifierDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_TAlgorithmIdentifier(pe, top, len, buffer, parm) \
    dec_f(_ZTAlgorithmIdentifierDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_TAlgorithmIdentifier(pe, top, len, buffer, parm) \
    prnt_f(_ZTAlgorithmIdentifierDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_TAlgorithmIdentifier_P    _ZTAlgorithmIdentifierDAS, &_ZDAS_mod

#define encode_DAS_TBitString(pe, top, len, buffer, parm) \
    enc_f(_ZTBitStringDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_TBitString(pe, top, len, buffer, parm) \
    dec_f(_ZTBitStringDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_TBitString(pe, top, len, buffer, parm) \
    prnt_f(_ZTBitStringDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_TBitString_P    _ZTBitStringDAS, &_ZDAS_mod

#define encode_DAS_TokenToSign(pe, top, len, buffer, parm) \
    enc_f(_ZTokenToSignDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_TokenToSign(pe, top, len, buffer, parm) \
    dec_f(_ZTokenToSignDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_TokenToSign(pe, top, len, buffer, parm) \
    prnt_f(_ZTokenToSignDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_TokenToSign_P    _ZTokenToSignDAS, &_ZDAS_mod

#define encode_DAS_Token(pe, top, len, buffer, parm) \
    enc_f(_ZTokenDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_Token(pe, top, len, buffer, parm) \
    dec_f(_ZTokenDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_Token(pe, top, len, buffer, parm) \
    prnt_f(_ZTokenDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_Token_P    _ZTokenDAS, &_ZDAS_mod

#define encode_DAS_StrongCredentials(pe, top, len, buffer, parm) \
    enc_f(_ZStrongCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_StrongCredentials(pe, top, len, buffer, parm) \
    dec_f(_ZStrongCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_StrongCredentials(pe, top, len, buffer, parm) \
    prnt_f(_ZStrongCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_StrongCredentials_P    _ZStrongCredentialsDAS, &_ZDAS_mod

#define encode_DAS_Credentials(pe, top, len, buffer, parm) \
    enc_f(_ZCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_Credentials(pe, top, len, buffer, parm) \
    dec_f(_ZCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_Credentials(pe, top, len, buffer, parm) \
    prnt_f(_ZCredentialsDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_Credentials_P    _ZCredentialsDAS, &_ZDAS_mod

#define encode_DAS_Versions(pe, top, len, buffer, parm) \
    enc_f(_ZVersionsDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_Versions(pe, top, len, buffer, parm) \
    dec_f(_ZVersionsDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_Versions(pe, top, len, buffer, parm) \
    prnt_f(_ZVersionsDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_Versions_P    _ZVersionsDAS, &_ZDAS_mod

#define encode_DAS_SecurityProblem(pe, top, len, buffer, parm) \
    enc_f(_ZSecurityProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SecurityProblem(pe, top, len, buffer, parm) \
    dec_f(_ZSecurityProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SecurityProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZSecurityProblemDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SecurityProblem_P    _ZSecurityProblemDAS, &_ZDAS_mod

#define encode_DAS_ServiceProblem(pe, top, len, buffer, parm) \
    enc_f(_ZServiceProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ServiceProblem(pe, top, len, buffer, parm) \
    dec_f(_ZServiceProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ServiceProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZServiceProblemDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ServiceProblem_P    _ZServiceProblemDAS, &_ZDAS_mod

#define encode_DAS_EntryInformationSelection(pe, top, len, buffer, parm) \
    enc_f(_ZEntryInformationSelectionDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_EntryInformationSelection(pe, top, len, buffer, parm) \
    dec_f(_ZEntryInformationSelectionDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_EntryInformationSelection(pe, top, len, buffer, parm) \
    prnt_f(_ZEntryInformationSelectionDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_EntryInformationSelection_P    _ZEntryInformationSelectionDAS, &_ZDAS_mod

#define encode_DAS_ServiceControls(pe, top, len, buffer, parm) \
    enc_f(_ZServiceControlsDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ServiceControls(pe, top, len, buffer, parm) \
    dec_f(_ZServiceControlsDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ServiceControls(pe, top, len, buffer, parm) \
    prnt_f(_ZServiceControlsDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ServiceControls_P    _ZServiceControlsDAS, &_ZDAS_mod

#define encode_DAS_ProtectionRequest(pe, top, len, buffer, parm) \
    enc_f(_ZProtectionRequestDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ProtectionRequest(pe, top, len, buffer, parm) \
    dec_f(_ZProtectionRequestDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ProtectionRequest(pe, top, len, buffer, parm) \
    prnt_f(_ZProtectionRequestDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ProtectionRequest_P    _ZProtectionRequestDAS, &_ZDAS_mod

#define encode_DAS_DBitString(pe, top, len, buffer, parm) \
    enc_f(_ZDBitStringDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_DBitString(pe, top, len, buffer, parm) \
    dec_f(_ZDBitStringDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_DBitString(pe, top, len, buffer, parm) \
    prnt_f(_ZDBitStringDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_DBitString_P    _ZDBitStringDAS, &_ZDAS_mod

#define encode_DAS_SecurityParameters(pe, top, len, buffer, parm) \
    enc_f(_ZSecurityParametersDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SecurityParameters(pe, top, len, buffer, parm) \
    dec_f(_ZSecurityParametersDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SecurityParameters(pe, top, len, buffer, parm) \
    prnt_f(_ZSecurityParametersDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SecurityParameters_P    _ZSecurityParametersDAS, &_ZDAS_mod

#define encode_DAS_Extension(pe, top, len, buffer, parm) \
    enc_f(_ZExtensionDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_Extension(pe, top, len, buffer, parm) \
    dec_f(_ZExtensionDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_Extension(pe, top, len, buffer, parm) \
    prnt_f(_ZExtensionDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_Extension_P    _ZExtensionDAS, &_ZDAS_mod

#define encode_DAS_EntryInformation(pe, top, len, buffer, parm) \
    enc_f(_ZEntryInformationDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_EntryInformation(pe, top, len, buffer, parm) \
    dec_f(_ZEntryInformationDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_EntryInformation(pe, top, len, buffer, parm) \
    prnt_f(_ZEntryInformationDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_EntryInformation_P    _ZEntryInformationDAS, &_ZDAS_mod

#define encode_DAS_LimitProblem(pe, top, len, buffer, parm) \
    enc_f(_ZLimitProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_LimitProblem(pe, top, len, buffer, parm) \
    dec_f(_ZLimitProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_LimitProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZLimitProblemDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_LimitProblem_P    _ZLimitProblemDAS, &_ZDAS_mod

#define encode_DAS_PartialOutcomeQualifier(pe, top, len, buffer, parm) \
    enc_f(_ZPartialOutcomeQualifierDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_PartialOutcomeQualifier(pe, top, len, buffer, parm) \
    dec_f(_ZPartialOutcomeQualifierDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_PartialOutcomeQualifier(pe, top, len, buffer, parm) \
    prnt_f(_ZPartialOutcomeQualifierDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_PartialOutcomeQualifier_P    _ZPartialOutcomeQualifierDAS, &_ZDAS_mod

#define encode_DAS_FilterItem(pe, top, len, buffer, parm) \
    enc_f(_ZFilterItemDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_FilterItem(pe, top, len, buffer, parm) \
    dec_f(_ZFilterItemDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_FilterItem(pe, top, len, buffer, parm) \
    prnt_f(_ZFilterItemDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_FilterItem_P    _ZFilterItemDAS, &_ZDAS_mod

#define encode_DAS_Filter(pe, top, len, buffer, parm) \
    enc_f(_ZFilterDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_Filter(pe, top, len, buffer, parm) \
    dec_f(_ZFilterDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_Filter(pe, top, len, buffer, parm) \
    prnt_f(_ZFilterDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_Filter_P    _ZFilterDAS, &_ZDAS_mod

#define encode_DAS_TAttributeType(pe, top, len, buffer, parm) \
    enc_f(_ZTAttributeTypeDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_TAttributeType(pe, top, len, buffer, parm) \
    dec_f(_ZTAttributeTypeDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_TAttributeType(pe, top, len, buffer, parm) \
    prnt_f(_ZTAttributeTypeDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_TAttributeType_P    _ZTAttributeTypeDAS, &_ZDAS_mod

#define encode_DAS_EntryModification(pe, top, len, buffer, parm) \
    enc_f(_ZEntryModificationDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_EntryModification(pe, top, len, buffer, parm) \
    dec_f(_ZEntryModificationDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_EntryModification(pe, top, len, buffer, parm) \
    prnt_f(_ZEntryModificationDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_EntryModification_P    _ZEntryModificationDAS, &_ZDAS_mod

#define encode_DAS_AbandonProblem(pe, top, len, buffer, parm) \
    enc_f(_ZAbandonProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AbandonProblem(pe, top, len, buffer, parm) \
    dec_f(_ZAbandonProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AbandonProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZAbandonProblemDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AbandonProblem_P    _ZAbandonProblemDAS, &_ZDAS_mod

#define encode_DAS_AttributeProblem(pe, top, len, buffer, parm) \
    enc_f(_ZAttributeProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AttributeProblem(pe, top, len, buffer, parm) \
    dec_f(_ZAttributeProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AttributeProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZAttributeProblemDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AttributeProblem_P    _ZAttributeProblemDAS, &_ZDAS_mod

#define encode_DAS_NameProblem(pe, top, len, buffer, parm) \
    enc_f(_ZNameProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_NameProblem(pe, top, len, buffer, parm) \
    dec_f(_ZNameProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_NameProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZNameProblemDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_NameProblem_P    _ZNameProblemDAS, &_ZDAS_mod

#define encode_DAS_UpdateProblem(pe, top, len, buffer, parm) \
    enc_f(_ZUpdateProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_UpdateProblem(pe, top, len, buffer, parm) \
    dec_f(_ZUpdateProblemDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_UpdateProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZUpdateProblemDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_UpdateProblem_P    _ZUpdateProblemDAS, &_ZDAS_mod

#define encode_DAS_DirectoryBindArgument(pe, top, len, buffer, parm) \
    enc_f(_ZDirectoryBindArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_DirectoryBindArgument(pe, top, len, buffer, parm) \
    dec_f(_ZDirectoryBindArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_DirectoryBindArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZDirectoryBindArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_DirectoryBindArgument_P    _ZDirectoryBindArgumentDAS, &_ZDAS_mod

#define encode_DAS_DirectoryBindResult(pe, top, len, buffer, parm) \
    enc_f(_ZDirectoryBindResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_DirectoryBindResult(pe, top, len, buffer, parm) \
    dec_f(_ZDirectoryBindResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_DirectoryBindResult(pe, top, len, buffer, parm) \
    prnt_f(_ZDirectoryBindResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_DirectoryBindResult_P    _ZDirectoryBindResultDAS, &_ZDAS_mod

#define encode_DAS_ReadArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZReadArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ReadArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZReadArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ReadArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZReadArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ReadArgumentData_P    _ZReadArgumentDataDAS, &_ZDAS_mod

#define encode_DAS_ReadArgument(pe, top, len, buffer, parm) \
    enc_f(_ZReadArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ReadArgument(pe, top, len, buffer, parm) \
    dec_f(_ZReadArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ReadArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZReadArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ReadArgument_P    _ZReadArgumentDAS, &_ZDAS_mod

#define encode_DAS_ReadResultData(pe, top, len, buffer, parm) \
    enc_f(_ZReadResultDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ReadResultData(pe, top, len, buffer, parm) \
    dec_f(_ZReadResultDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ReadResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZReadResultDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ReadResultData_P    _ZReadResultDataDAS, &_ZDAS_mod

#define encode_DAS_ReadResult(pe, top, len, buffer, parm) \
    enc_f(_ZReadResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ReadResult(pe, top, len, buffer, parm) \
    dec_f(_ZReadResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ReadResult(pe, top, len, buffer, parm) \
    prnt_f(_ZReadResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ReadResult_P    _ZReadResultDAS, &_ZDAS_mod

#define encode_DAS_CompareArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZCompareArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_CompareArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZCompareArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_CompareArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZCompareArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_CompareArgumentData_P    _ZCompareArgumentDataDAS, &_ZDAS_mod

#define encode_DAS_CompareArgument(pe, top, len, buffer, parm) \
    enc_f(_ZCompareArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_CompareArgument(pe, top, len, buffer, parm) \
    dec_f(_ZCompareArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_CompareArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZCompareArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_CompareArgument_P    _ZCompareArgumentDAS, &_ZDAS_mod

#define encode_DAS_CompareResultData(pe, top, len, buffer, parm) \
    enc_f(_ZCompareResultDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_CompareResultData(pe, top, len, buffer, parm) \
    dec_f(_ZCompareResultDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_CompareResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZCompareResultDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_CompareResultData_P    _ZCompareResultDataDAS, &_ZDAS_mod

#define encode_DAS_CompareResult(pe, top, len, buffer, parm) \
    enc_f(_ZCompareResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_CompareResult(pe, top, len, buffer, parm) \
    dec_f(_ZCompareResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_CompareResult(pe, top, len, buffer, parm) \
    prnt_f(_ZCompareResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_CompareResult_P    _ZCompareResultDAS, &_ZDAS_mod

#define encode_DAS_TInvokeID(pe, top, len, buffer, parm) \
    enc_f(_ZTInvokeIDDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_TInvokeID(pe, top, len, buffer, parm) \
    dec_f(_ZTInvokeIDDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_TInvokeID(pe, top, len, buffer, parm) \
    prnt_f(_ZTInvokeIDDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_TInvokeID_P    _ZTInvokeIDDAS, &_ZDAS_mod

#define encode_DAS_AbandonArgument(pe, top, len, buffer, parm) \
    enc_f(_ZAbandonArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AbandonArgument(pe, top, len, buffer, parm) \
    dec_f(_ZAbandonArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AbandonArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZAbandonArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AbandonArgument_P    _ZAbandonArgumentDAS, &_ZDAS_mod

#define encode_DAS_AbandonResult(pe, top, len, buffer, parm) \
    enc_f(_ZAbandonResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AbandonResult(pe, top, len, buffer, parm) \
    dec_f(_ZAbandonResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AbandonResult(pe, top, len, buffer, parm) \
    prnt_f(_ZAbandonResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AbandonResult_P    _ZAbandonResultDAS, &_ZDAS_mod

#define encode_DAS_ListArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZListArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ListArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZListArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ListArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZListArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ListArgumentData_P    _ZListArgumentDataDAS, &_ZDAS_mod

#define encode_DAS_ListArgument(pe, top, len, buffer, parm) \
    enc_f(_ZListArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ListArgument(pe, top, len, buffer, parm) \
    dec_f(_ZListArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ListArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZListArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ListArgument_P    _ZListArgumentDAS, &_ZDAS_mod

#define encode_DAS_ListResultData(pe, top, len, buffer, parm) \
    enc_f(_ZListResultDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ListResultData(pe, top, len, buffer, parm) \
    dec_f(_ZListResultDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ListResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZListResultDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ListResultData_P    _ZListResultDataDAS, &_ZDAS_mod

#define encode_DAS_ListResult(pe, top, len, buffer, parm) \
    enc_f(_ZListResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ListResult(pe, top, len, buffer, parm) \
    dec_f(_ZListResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ListResult(pe, top, len, buffer, parm) \
    prnt_f(_ZListResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ListResult_P    _ZListResultDAS, &_ZDAS_mod

#define encode_DAS_SearchArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZSearchArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SearchArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZSearchArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SearchArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SearchArgumentData_P    _ZSearchArgumentDataDAS, &_ZDAS_mod

#define encode_DAS_SearchArgument(pe, top, len, buffer, parm) \
    enc_f(_ZSearchArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SearchArgument(pe, top, len, buffer, parm) \
    dec_f(_ZSearchArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SearchArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SearchArgument_P    _ZSearchArgumentDAS, &_ZDAS_mod

#define encode_DAS_SearchResultData(pe, top, len, buffer, parm) \
    enc_f(_ZSearchResultDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SearchResultData(pe, top, len, buffer, parm) \
    dec_f(_ZSearchResultDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SearchResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchResultDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SearchResultData_P    _ZSearchResultDataDAS, &_ZDAS_mod

#define encode_DAS_SAlgorithmIdentifier(pe, top, len, buffer, parm) \
    enc_f(_ZSAlgorithmIdentifierDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SAlgorithmIdentifier(pe, top, len, buffer, parm) \
    dec_f(_ZSAlgorithmIdentifierDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SAlgorithmIdentifier(pe, top, len, buffer, parm) \
    prnt_f(_ZSAlgorithmIdentifierDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SAlgorithmIdentifier_P    _ZSAlgorithmIdentifierDAS, &_ZDAS_mod

#define encode_DAS_SBitString(pe, top, len, buffer, parm) \
    enc_f(_ZSBitStringDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SBitString(pe, top, len, buffer, parm) \
    dec_f(_ZSBitStringDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SBitString(pe, top, len, buffer, parm) \
    prnt_f(_ZSBitStringDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SBitString_P    _ZSBitStringDAS, &_ZDAS_mod

#define encode_DAS_SearchResult(pe, top, len, buffer, parm) \
    enc_f(_ZSearchResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SearchResult(pe, top, len, buffer, parm) \
    dec_f(_ZSearchResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SearchResult(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SearchResult_P    _ZSearchResultDAS, &_ZDAS_mod

#define encode_DAS_AddEntryArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZAddEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AddEntryArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZAddEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AddEntryArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZAddEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AddEntryArgumentData_P    _ZAddEntryArgumentDataDAS, &_ZDAS_mod

#define encode_DAS_AddEntryArgument(pe, top, len, buffer, parm) \
    enc_f(_ZAddEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AddEntryArgument(pe, top, len, buffer, parm) \
    dec_f(_ZAddEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AddEntryArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZAddEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AddEntryArgument_P    _ZAddEntryArgumentDAS, &_ZDAS_mod

#define encode_DAS_AddEntryResult(pe, top, len, buffer, parm) \
    enc_f(_ZAddEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AddEntryResult(pe, top, len, buffer, parm) \
    dec_f(_ZAddEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AddEntryResult(pe, top, len, buffer, parm) \
    prnt_f(_ZAddEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AddEntryResult_P    _ZAddEntryResultDAS, &_ZDAS_mod

#define encode_DAS_RemoveEntryArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZRemoveEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_RemoveEntryArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZRemoveEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_RemoveEntryArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZRemoveEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_RemoveEntryArgumentData_P    _ZRemoveEntryArgumentDataDAS, &_ZDAS_mod

#define encode_DAS_RemoveEntryArgument(pe, top, len, buffer, parm) \
    enc_f(_ZRemoveEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_RemoveEntryArgument(pe, top, len, buffer, parm) \
    dec_f(_ZRemoveEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_RemoveEntryArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZRemoveEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_RemoveEntryArgument_P    _ZRemoveEntryArgumentDAS, &_ZDAS_mod

#define encode_DAS_RemoveEntryResult(pe, top, len, buffer, parm) \
    enc_f(_ZRemoveEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_RemoveEntryResult(pe, top, len, buffer, parm) \
    dec_f(_ZRemoveEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_RemoveEntryResult(pe, top, len, buffer, parm) \
    prnt_f(_ZRemoveEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_RemoveEntryResult_P    _ZRemoveEntryResultDAS, &_ZDAS_mod

#define encode_DAS_ModifyEntryArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZModifyEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ModifyEntryArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZModifyEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ModifyEntryArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyEntryArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ModifyEntryArgumentData_P    _ZModifyEntryArgumentDataDAS, &_ZDAS_mod

#define encode_DAS_ModifyEntryArgument(pe, top, len, buffer, parm) \
    enc_f(_ZModifyEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ModifyEntryArgument(pe, top, len, buffer, parm) \
    dec_f(_ZModifyEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ModifyEntryArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyEntryArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ModifyEntryArgument_P    _ZModifyEntryArgumentDAS, &_ZDAS_mod

#define encode_DAS_ModifyEntryResult(pe, top, len, buffer, parm) \
    enc_f(_ZModifyEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ModifyEntryResult(pe, top, len, buffer, parm) \
    dec_f(_ZModifyEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ModifyEntryResult(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyEntryResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ModifyEntryResult_P    _ZModifyEntryResultDAS, &_ZDAS_mod

#define encode_DAS_ModifyRDNArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZModifyRDNArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ModifyRDNArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZModifyRDNArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ModifyRDNArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyRDNArgumentDataDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ModifyRDNArgumentData_P    _ZModifyRDNArgumentDataDAS, &_ZDAS_mod

#define encode_DAS_ModifyRDNArgument(pe, top, len, buffer, parm) \
    enc_f(_ZModifyRDNArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ModifyRDNArgument(pe, top, len, buffer, parm) \
    dec_f(_ZModifyRDNArgumentDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ModifyRDNArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyRDNArgumentDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ModifyRDNArgument_P    _ZModifyRDNArgumentDAS, &_ZDAS_mod

#define encode_DAS_ModifyRDNResult(pe, top, len, buffer, parm) \
    enc_f(_ZModifyRDNResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ModifyRDNResult(pe, top, len, buffer, parm) \
    dec_f(_ZModifyRDNResultDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ModifyRDNResult(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyRDNResultDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ModifyRDNResult_P    _ZModifyRDNResultDAS, &_ZDAS_mod

#define encode_DAS_DirectoryBindError(pe, top, len, buffer, parm) \
    enc_f(_ZDirectoryBindErrorDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_DirectoryBindError(pe, top, len, buffer, parm) \
    dec_f(_ZDirectoryBindErrorDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_DirectoryBindError(pe, top, len, buffer, parm) \
    prnt_f(_ZDirectoryBindErrorDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_DirectoryBindError_P    _ZDirectoryBindErrorDAS, &_ZDAS_mod

#define encode_DAS_AbandonFailedParm(pe, top, len, buffer, parm) \
    enc_f(_ZAbandonFailedParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AbandonFailedParm(pe, top, len, buffer, parm) \
    dec_f(_ZAbandonFailedParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AbandonFailedParm(pe, top, len, buffer, parm) \
    prnt_f(_ZAbandonFailedParmDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AbandonFailedParm_P    _ZAbandonFailedParmDAS, &_ZDAS_mod

#define encode_DAS_AttributeErrorParm(pe, top, len, buffer, parm) \
    enc_f(_ZAttributeErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_AttributeErrorParm(pe, top, len, buffer, parm) \
    dec_f(_ZAttributeErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_AttributeErrorParm(pe, top, len, buffer, parm) \
    prnt_f(_ZAttributeErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_AttributeErrorParm_P    _ZAttributeErrorParmDAS, &_ZDAS_mod

#define encode_DAS_NameErrorParm(pe, top, len, buffer, parm) \
    enc_f(_ZNameErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_NameErrorParm(pe, top, len, buffer, parm) \
    dec_f(_ZNameErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_NameErrorParm(pe, top, len, buffer, parm) \
    prnt_f(_ZNameErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_NameErrorParm_P    _ZNameErrorParmDAS, &_ZDAS_mod

#define encode_DAS_ReferralParm(pe, top, len, buffer, parm) \
    enc_f(_ZReferralParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ReferralParm(pe, top, len, buffer, parm) \
    dec_f(_ZReferralParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ReferralParm(pe, top, len, buffer, parm) \
    prnt_f(_ZReferralParmDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ReferralParm_P    _ZReferralParmDAS, &_ZDAS_mod

#define encode_DAS_SecurityErrorParm(pe, top, len, buffer, parm) \
    enc_f(_ZSecurityErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_SecurityErrorParm(pe, top, len, buffer, parm) \
    dec_f(_ZSecurityErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_SecurityErrorParm(pe, top, len, buffer, parm) \
    prnt_f(_ZSecurityErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_SecurityErrorParm_P    _ZSecurityErrorParmDAS, &_ZDAS_mod

#define encode_DAS_ServiceErrorParm(pe, top, len, buffer, parm) \
    enc_f(_ZServiceErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_ServiceErrorParm(pe, top, len, buffer, parm) \
    dec_f(_ZServiceErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_ServiceErrorParm(pe, top, len, buffer, parm) \
    prnt_f(_ZServiceErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_ServiceErrorParm_P    _ZServiceErrorParmDAS, &_ZDAS_mod

#define encode_DAS_UpdateErrorParm(pe, top, len, buffer, parm) \
    enc_f(_ZUpdateErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char *) parm)

#define decode_DAS_UpdateErrorParm(pe, top, len, buffer, parm) \
    dec_f(_ZUpdateErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer, (char **) parm)

#define print_DAS_UpdateErrorParm(pe, top, len, buffer, parm) \
    prnt_f(_ZUpdateErrorParmDAS, &_ZDAS_mod, pe, top, len, buffer)
#define print_DAS_UpdateErrorParm_P    _ZUpdateErrorParmDAS, &_ZDAS_mod


#endif   /* lint */
#include "das-cdefs.h"
#ifndef	PEPYPATH
#include "IF-types.h"
#include "AF-types.h"
#include "DO-types.h"
#else
#include "IF-types.h"
#include "AF-types.h"
#include "DO-types.h"
#endif



#define	type_DAS_TAlgorithmIdentifier	type_AF_AlgorithmIdentifier

#define	type_DAS_TBitString	PElement

#define	type_DAS_Versions	PElement
#define	bits_DAS_Versions	"\020\01v1988"
#define	bit_DAS_Versions_v1988	0

#define	type_DAS_DBitString	PElement

#define	type_DAS_DirectoryBindResult	type_DAS_DirectoryBindArgument

#define	type_DAS_SAlgorithmIdentifier	type_AF_AlgorithmIdentifier

#define	type_DAS_SBitString	PElement

struct type_DAS_SimpleCredentials {
    struct type_IF_DistinguishedName *name;

    struct member_DAS_0 {
        struct	qbuf	*time1;

        struct	qbuf	*time2;

        PE      random1;

        PE      random2;
    } *validity;

    struct qbuf *password;
};
#define	free_DAS_SimpleCredentials(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZSimpleCredentialsDAS], &_ZDAS_mod, 1)

struct type_DAS_TokenToSign {
    struct type_AF_AlgorithmIdentifier *algorithm;

    struct type_IF_DistinguishedName *name;

    struct	qbuf	*time;

    PE      random;
};
#define	free_DAS_TokenToSign(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZTokenToSignDAS], &_ZDAS_mod, 1)

struct type_DAS_Token {
    struct type_DAS_TokenToSign *element_DAS_0;

    struct type_DAS_TAlgorithmIdentifier *element_DAS_1;

    struct type_DAS_TBitString *element_DAS_2;
};
#define	free_DAS_Token(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZTokenDAS], &_ZDAS_mod, 1)

struct type_DAS_StrongCredentials {
    struct type_AF_CertificationPath *certificationPath;

    struct type_DAS_Token *bindToken;
};
#define	free_DAS_StrongCredentials(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZStrongCredentialsDAS], &_ZDAS_mod, 1)

struct type_DAS_Credentials {
    int         offset;
#define	type_DAS_Credentials_simple	1
#define	type_DAS_Credentials_strong	2
#define	type_DAS_Credentials_externalProcedure	3

    union {
        struct type_DAS_SimpleCredentials *simple;

        struct type_DAS_StrongCredentials *strong;

        struct	type_UNIV_EXTERNAL	*externalProcedure;
    }       un;
};
#define	free_DAS_Credentials(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZCredentialsDAS], &_ZDAS_mod, 1)

struct type_DAS_SecurityProblem {
    integer     parm;
#define	int_DAS_SecurityProblem_inappropriateAuthentication	1
#define	int_DAS_SecurityProblem_invalidCredentials	2
#define	int_DAS_SecurityProblem_insufficientAccessRights	3
#define	int_DAS_SecurityProblem_invalidSignature	4
#define	int_DAS_SecurityProblem_protectionRequired	5
#define	int_DAS_SecurityProblem_noInformation	6
};
#define	free_DAS_SecurityProblem(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZSecurityProblemDAS], &_ZDAS_mod, 1)

struct type_DAS_ServiceProblem {
    integer     parm;
#define	int_DAS_ServiceProblem_busy	1
#define	int_DAS_ServiceProblem_unavailable	2
#define	int_DAS_ServiceProblem_unwillingToPerform	3
#define	int_DAS_ServiceProblem_chainingRequired	4
#define	int_DAS_ServiceProblem_unableToProceed	5
#define	int_DAS_ServiceProblem_invalidReference	6
#define	int_DAS_ServiceProblem_timeLimitExceeded	7
#define	int_DAS_ServiceProblem_administrativeLimitExceeded	8
#define	int_DAS_ServiceProblem_loopDetected	9
#define	int_DAS_ServiceProblem_unavailableCriticalExtension	10
#define	int_DAS_ServiceProblem_outOfScope	11
#define	int_DAS_ServiceProblem_ditError	12
};
#define	free_DAS_ServiceProblem(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZServiceProblemDAS], &_ZDAS_mod, 1)

struct type_DAS_EntryInformationSelection {
    struct choice_DAS_0 {
        int         offset;
#define	choice_DAS_0_allAttributes	1
#define	choice_DAS_0_select	2

        union {
            char    allAttributes;

            struct member_DAS_1 {
                struct type_IF_AttributeType *member_DAS_2;

                struct member_DAS_1 *next;
            } *select;
        }       un;
    } *attributeTypes;

    integer     infoTypes;
#define	int_DAS_infoTypes_attributeTypesOnly	0
#define	int_DAS_infoTypes_attributeTypesAndValues	1
};
#define	free_DAS_EntryInformationSelection(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZEntryInformationSelectionDAS], &_ZDAS_mod, 1)

struct type_DAS_ServiceControls {
    integer     optionals;
#define	opt_DAS_ServiceControls_timeLimit (000000001)
#define	opt_DAS_ServiceControls_sizeLimit (000000002)
#define	opt_DAS_ServiceControls_scopeOfReferral (000000004)

    PE      options;
#define	bits_DAS_options	"\020\01preferChaining\02chainingProhibited\03localScope\04dontUseCopy\05dontDereferenceAliases"
#define	bit_DAS_options_preferChaining	0
#define	bit_DAS_options_chainingProhibited	1
#define	bit_DAS_options_localScope	2
#define	bit_DAS_options_dontUseCopy	3
#define	bit_DAS_options_dontDereferenceAliases	4

    integer     priority;
#define	int_DAS_priority_low	0
#define	int_DAS_priority_medium	1
#define	int_DAS_priority_high	2

    integer     timeLimit;

    integer     sizeLimit;

    integer     scopeOfReferral;
#define	int_DAS_scopeOfReferral_dmd	0
#define	int_DAS_scopeOfReferral_country	1
};
#define	free_DAS_ServiceControls(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZServiceControlsDAS], &_ZDAS_mod, 1)

struct type_DAS_ProtectionRequest {
    integer     parm;
#define	int_DAS_ProtectionRequest_none	0
#define	int_DAS_ProtectionRequest_signed	1
};
#define	free_DAS_ProtectionRequest(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZProtectionRequestDAS], &_ZDAS_mod, 1)

struct type_DAS_SecurityParameters {
    struct type_AF_CertificationPath *certificationPath;

    struct type_IF_DistinguishedName *name;

    struct	qbuf	*time;

    struct type_DAS_TBitString *random;

    struct type_DAS_ProtectionRequest *target;
};
#define	free_DAS_SecurityParameters(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZSecurityParametersDAS], &_ZDAS_mod, 1)

struct type_DAS_Extension {
    integer     identifier;

    char    critical;

    PE      item;
};
#define	free_DAS_Extension(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZExtensionDAS], &_ZDAS_mod, 1)

struct type_DAS_EntryInformation {
    struct type_IF_DistinguishedName *element_DAS_3;

    char    fromEntry;

    struct member_DAS_3 {
        struct choice_DAS_1 {
            int         offset;
#define	choice_DAS_1_1	1
#define	choice_DAS_1_2	2

            union {
                struct type_IF_AttributeType *choice_DAS_2;

                struct type_IF_Attribute *choice_DAS_3;
            }       un;
        } *member_DAS_4;

        struct member_DAS_3 *next;
    } *element_DAS_4;
};
#define	free_DAS_EntryInformation(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZEntryInformationDAS], &_ZDAS_mod, 1)

struct type_DAS_LimitProblem {
    integer     parm;
#define	int_DAS_LimitProblem_timeLimitExceeded	0
#define	int_DAS_LimitProblem_sizeLimitExceeded	1
#define	int_DAS_LimitProblem_administrativeLimitExceeded	2
};
#define	free_DAS_LimitProblem(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZLimitProblemDAS], &_ZDAS_mod, 1)

struct type_DAS_PartialOutcomeQualifier {
    struct type_DAS_LimitProblem *limitProblem;

    struct member_DAS_5 {
        struct type_DO_ContinuationReference *member_DAS_6;

        struct member_DAS_5 *next;
    } *unexplored;

    char    unavailableCriticalExtensions;
};
#define	free_DAS_PartialOutcomeQualifier(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZPartialOutcomeQualifierDAS], &_ZDAS_mod, 1)

struct type_DAS_FilterItem {
    int         offset;
#define	type_DAS_FilterItem_equality	1
#define	type_DAS_FilterItem_substrings	2
#define	type_DAS_FilterItem_greaterOrEqual	3
#define	type_DAS_FilterItem_lessOrEqual	4
#define	type_DAS_FilterItem_present	5
#define	type_DAS_FilterItem_approximateMatch	6

    union {
        struct type_IF_AttributeValueAssertion *equality;

        PE      substrings;

        struct type_IF_AttributeValueAssertion *greaterOrEqual;

        struct type_IF_AttributeValueAssertion *lessOrEqual;

        struct type_IF_AttributeType *present;

        struct type_IF_AttributeValueAssertion *approximateMatch;
    }       un;
};
#define	free_DAS_FilterItem(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZFilterItemDAS], &_ZDAS_mod, 1)

struct type_DAS_Filter {
    int         offset;
#define	type_DAS_Filter_item	1
#define	type_DAS_Filter_and	2
#define	type_DAS_Filter_or	3
#define	type_DAS_Filter_not	4

    union {
        struct type_DAS_FilterItem *item;

        struct member_DAS_7 {
            struct type_DAS_Filter *member_DAS_8;

            struct member_DAS_7 *next;
        } *and;

        struct member_DAS_9 {
            struct type_DAS_Filter *member_DAS_10;

            struct member_DAS_9 *next;
        } *or;

        struct type_DAS_Filter *not;
    }       un;
};
#define	free_DAS_Filter(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZFilterDAS], &_ZDAS_mod, 1)

struct type_DAS_TAttributeType {
    int         offset;
#define	type_DAS_TAttributeType_1	1

    union {
        struct type_IF_AttributeType *choice_DAS_4;
    }       un;
};
#define	free_DAS_TAttributeType(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZTAttributeTypeDAS], &_ZDAS_mod, 1)

struct type_DAS_EntryModification {
    int         offset;
#define	type_DAS_EntryModification_addAttribute	1
#define	type_DAS_EntryModification_removeAttribute	2
#define	type_DAS_EntryModification_addValues	3
#define	type_DAS_EntryModification_removeValues	4

    union {
        struct type_IF_Attribute *addAttribute;

        struct type_DAS_TAttributeType *removeAttribute;

        struct type_IF_Attribute *addValues;

        struct type_IF_Attribute *removeValues;
    }       un;
};
#define	free_DAS_EntryModification(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZEntryModificationDAS], &_ZDAS_mod, 1)

struct type_DAS_AbandonProblem {
    integer     parm;
#define	int_DAS_AbandonProblem_noSuchOperation	1
#define	int_DAS_AbandonProblem_tooLate	2
#define	int_DAS_AbandonProblem_cannotAbandon	3
};
#define	free_DAS_AbandonProblem(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAbandonProblemDAS], &_ZDAS_mod, 1)

struct type_DAS_AttributeProblem {
    integer     parm;
#define	int_DAS_AttributeProblem_noSuchAttributeOrValue	1
#define	int_DAS_AttributeProblem_invalidAttributeSyntax	2
#define	int_DAS_AttributeProblem_undefinedAttributeType	3
#define	int_DAS_AttributeProblem_inappropriateMatching	4
#define	int_DAS_AttributeProblem_constraintViolation	5
#define	int_DAS_AttributeProblem_attributeOrValueAlreadyExists	6
};
#define	free_DAS_AttributeProblem(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAttributeProblemDAS], &_ZDAS_mod, 1)

struct type_DAS_NameProblem {
    integer     parm;
#define	int_DAS_NameProblem_noSuchObject	1
#define	int_DAS_NameProblem_aliasProblem	2
#define	int_DAS_NameProblem_invalidAttributeSyntax	3
#define	int_DAS_NameProblem_aliasDereferencingProblem	4
};
#define	free_DAS_NameProblem(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZNameProblemDAS], &_ZDAS_mod, 1)

struct type_DAS_UpdateProblem {
    integer     parm;
#define	int_DAS_UpdateProblem_namingViolation	1
#define	int_DAS_UpdateProblem_objectClassViolation	2
#define	int_DAS_UpdateProblem_notAllowedOnNonLeaf	3
#define	int_DAS_UpdateProblem_notAllowedOnRDN	4
#define	int_DAS_UpdateProblem_entryAlreadyExists	5
#define	int_DAS_UpdateProblem_affectsMultipleDSAs	6
#define	int_DAS_UpdateProblem_objectClassModificationProhibited	7
};
#define	free_DAS_UpdateProblem(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZUpdateProblemDAS], &_ZDAS_mod, 1)

struct type_DAS_DirectoryBindArgument {
    struct type_DAS_Credentials *credentials;

    struct type_DAS_Versions *versions;
};
#define	free_DAS_DirectoryBindArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZDirectoryBindArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_ReadArgumentData {
    integer     optionals;
#define	opt_DAS_ReadArgumentData_aliasedRDNs (000000001)

    struct type_IF_Name *object;

    struct type_DAS_EntryInformationSelection *selection;

    struct type_DAS_ServiceControls *member_DAS_11;

    struct type_DAS_SecurityParameters *member_DAS_12;

    struct type_IF_DistinguishedName *requestor;

    struct type_DO_OperationProgress *member_DAS_13;

    integer     aliasedRDNs;

    struct member_DAS_14 {
        struct type_DAS_Extension *member_DAS_15;

        struct member_DAS_14 *next;
    } *extensions;
};
#define	free_DAS_ReadArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZReadArgumentDataDAS], &_ZDAS_mod, 1)

struct type_DAS_ReadArgument {
    int         offset;
#define	type_DAS_ReadArgument_1	1
#define	type_DAS_ReadArgument_2	2

    union {
        struct type_DAS_ReadArgumentData *choice_DAS_5;

        struct element_DAS_5 {
            struct type_DAS_ReadArgumentData *element_DAS_6;

            struct type_DAS_TAlgorithmIdentifier *element_DAS_7;

            struct type_DAS_TBitString *element_DAS_8;
        } *choice_DAS_6;
    }       un;
};
#define	free_DAS_ReadArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZReadArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_ReadResultData {
    struct type_DAS_EntryInformation *entry;

    struct type_DAS_SecurityParameters *member_DAS_16;

    struct type_IF_DistinguishedName *performer;

    char    aliasDereferenced;
};
#define	free_DAS_ReadResultData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZReadResultDataDAS], &_ZDAS_mod, 1)

struct type_DAS_ReadResult {
    int         offset;
#define	type_DAS_ReadResult_1	1
#define	type_DAS_ReadResult_2	2

    union {
        struct type_DAS_ReadResultData *choice_DAS_7;

        struct element_DAS_9 {
            struct type_DAS_ReadResultData *element_DAS_10;

            struct type_AF_AlgorithmIdentifier *element_DAS_11;

            PE      element_DAS_12;
        } *choice_DAS_8;
    }       un;
};
#define	free_DAS_ReadResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZReadResultDAS], &_ZDAS_mod, 1)

struct type_DAS_CompareArgumentData {
    integer     optionals;
#define	opt_DAS_CompareArgumentData_aliasedRDNs (000000001)

    struct type_IF_Name *object;

    struct type_IF_AttributeValueAssertion *purported;

    struct type_DAS_ServiceControls *member_DAS_17;

    struct type_DAS_SecurityParameters *member_DAS_18;

    struct type_IF_DistinguishedName *requestor;

    struct type_DO_OperationProgress *member_DAS_19;

    integer     aliasedRDNs;

    struct member_DAS_20 {
        struct type_DAS_Extension *member_DAS_21;

        struct member_DAS_20 *next;
    } *extensions;
};
#define	free_DAS_CompareArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZCompareArgumentDataDAS], &_ZDAS_mod, 1)

struct type_DAS_CompareArgument {
    int         offset;
#define	type_DAS_CompareArgument_1	1
#define	type_DAS_CompareArgument_2	2

    union {
        struct type_DAS_CompareArgumentData *choice_DAS_9;

        struct element_DAS_13 {
            struct type_DAS_CompareArgumentData *element_DAS_14;

            struct type_DAS_TAlgorithmIdentifier *element_DAS_15;

            struct type_DAS_TBitString *element_DAS_16;
        } *choice_DAS_10;
    }       un;
};
#define	free_DAS_CompareArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZCompareArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_CompareResultData {
    struct type_IF_DistinguishedName *member_DAS_22;

    char    matched;

    char    fromEntry;

    struct type_DAS_SecurityParameters *member_DAS_23;

    struct type_IF_DistinguishedName *performer;

    char    aliasDereferenced;
};
#define	free_DAS_CompareResultData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZCompareResultDataDAS], &_ZDAS_mod, 1)

struct type_DAS_CompareResult {
    int         offset;
#define	type_DAS_CompareResult_1	1
#define	type_DAS_CompareResult_2	2

    union {
        struct type_DAS_CompareResultData *choice_DAS_11;

        struct element_DAS_17 {
            struct type_DAS_CompareResultData *element_DAS_18;

            struct type_AF_AlgorithmIdentifier *element_DAS_19;

            PE      element_DAS_20;
        } *choice_DAS_12;
    }       un;
};
#define	free_DAS_CompareResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZCompareResultDAS], &_ZDAS_mod, 1)

struct type_DAS_TInvokeID {
    integer     parm;
};
#define	free_DAS_TInvokeID(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZTInvokeIDDAS], &_ZDAS_mod, 1)

struct type_DAS_AbandonArgument {
    struct type_DAS_TInvokeID *invokeID;
};
#define	free_DAS_AbandonArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAbandonArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_AbandonResult {
    char    parm;
};
#define	free_DAS_AbandonResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAbandonResultDAS], &_ZDAS_mod, 1)

struct type_DAS_ListArgumentData {
    integer     optionals;
#define	opt_DAS_ListArgumentData_aliasedRDNs (000000001)

    struct type_IF_Name *object;

    struct type_DAS_ServiceControls *member_DAS_24;

    struct type_DAS_SecurityParameters *member_DAS_25;

    struct type_IF_DistinguishedName *requestor;

    struct type_DO_OperationProgress *member_DAS_26;

    integer     aliasedRDNs;

    struct member_DAS_27 {
        struct type_DAS_Extension *member_DAS_28;

        struct member_DAS_27 *next;
    } *extensions;
};
#define	free_DAS_ListArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZListArgumentDataDAS], &_ZDAS_mod, 1)

struct type_DAS_ListArgument {
    int         offset;
#define	type_DAS_ListArgument_1	1
#define	type_DAS_ListArgument_2	2

    union {
        struct type_DAS_ListArgumentData *choice_DAS_13;

        struct element_DAS_21 {
            struct type_DAS_ListArgumentData *element_DAS_22;

            struct type_DAS_TAlgorithmIdentifier *element_DAS_23;

            struct type_DAS_TBitString *element_DAS_24;
        } *choice_DAS_14;
    }       un;
};
#define	free_DAS_ListArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZListArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_ListResultData {
    int         offset;
#define	type_DAS_ListResultData_listInfo	1
#define	type_DAS_ListResultData_uncorrelatedListInfo	2

    union {
        struct member_DAS_29 {
            struct type_IF_DistinguishedName *member_DAS_30;

            struct member_DAS_31 {
                struct element_DAS_25 {
                    struct type_IF_RelativeDistinguishedName *element_DAS_26;

                    char    aliasEntry;

                    char    fromEntry;
                } *member_DAS_32;

                struct member_DAS_31 *next;
            } *subordinates;

            struct type_DAS_PartialOutcomeQualifier *partialOutcomeQualifier;

            struct type_DAS_SecurityParameters *member_DAS_33;

            struct type_IF_DistinguishedName *performer;

            char    aliasDereferenced;
        } *listInfo;

        struct member_DAS_34 {
            struct type_DAS_ListResult *member_DAS_35;

            struct member_DAS_34 *next;
        } *uncorrelatedListInfo;
    }       un;
};
#define	free_DAS_ListResultData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZListResultDataDAS], &_ZDAS_mod, 1)

struct type_DAS_ListResult {
    int         offset;
#define	type_DAS_ListResult_1	1
#define	type_DAS_ListResult_2	2

    union {
        struct type_DAS_ListResultData *choice_DAS_15;

        struct element_DAS_27 {
            struct type_DAS_ListResultData *element_DAS_28;

            struct type_AF_AlgorithmIdentifier *element_DAS_29;

            PE      element_DAS_30;
        } *choice_DAS_16;
    }       un;
};
#define	free_DAS_ListResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZListResultDAS], &_ZDAS_mod, 1)

struct type_DAS_SearchArgumentData {
    integer     optionals;
#define	opt_DAS_SearchArgumentData_aliasedRDNs (000000001)

    struct type_IF_Name *baseObject;

    integer     subset;
#define	int_DAS_subset_baseObject	0
#define	int_DAS_subset_oneLevel	1
#define	int_DAS_subset_wholeSubtree	2

    struct type_DAS_Filter *filter;

    char    searchAliases;

    struct type_DAS_EntryInformationSelection *selection;

    struct type_DAS_ServiceControls *member_DAS_36;

    struct type_DAS_SecurityParameters *member_DAS_37;

    struct type_IF_DistinguishedName *requestor;

    struct type_DO_OperationProgress *member_DAS_38;

    integer     aliasedRDNs;

    struct member_DAS_39 {
        struct type_DAS_Extension *member_DAS_40;

        struct member_DAS_39 *next;
    } *extensions;
};
#define	free_DAS_SearchArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZSearchArgumentDataDAS], &_ZDAS_mod, 1)

struct type_DAS_SearchArgument {
    int         offset;
#define	type_DAS_SearchArgument_1	1
#define	type_DAS_SearchArgument_2	2

    union {
        struct type_DAS_SearchArgumentData *choice_DAS_17;

        struct element_DAS_31 {
            struct type_DAS_SearchArgumentData *element_DAS_32;

            struct type_DAS_TAlgorithmIdentifier *element_DAS_33;

            struct type_DAS_TBitString *element_DAS_34;
        } *choice_DAS_18;
    }       un;
};
#define	free_DAS_SearchArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZSearchArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_SearchResultData {
    int         offset;
#define	type_DAS_SearchResultData_searchInfo	1
#define	type_DAS_SearchResultData_uncorrelatedSearchInfo	2

    union {
        struct member_DAS_41 {
            struct type_IF_DistinguishedName *member_DAS_42;

            struct member_DAS_43 {
                struct type_DAS_EntryInformation *member_DAS_44;

                struct member_DAS_43 *next;
            } *entries;

            struct type_DAS_PartialOutcomeQualifier *partialOutcomeQualifier;

            struct type_DAS_SecurityParameters *member_DAS_45;

            struct type_IF_DistinguishedName *performer;

            char    aliasDereferenced;
        } *searchInfo;

        struct member_DAS_46 {
            struct type_DAS_SearchResult *member_DAS_47;

            struct member_DAS_46 *next;
        } *uncorrelatedSearchInfo;
    }       un;
};
#define	free_DAS_SearchResultData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZSearchResultDataDAS], &_ZDAS_mod, 1)

struct type_DAS_SearchResult {
    int         offset;
#define	type_DAS_SearchResult_1	1
#define	type_DAS_SearchResult_2	2

    union {
        struct type_DAS_SearchResultData *choice_DAS_19;

        struct element_DAS_35 {
            struct type_DAS_SearchResultData *element_DAS_36;

            struct type_DAS_SAlgorithmIdentifier *element_DAS_37;

            struct type_DAS_SBitString *element_DAS_38;
        } *choice_DAS_20;
    }       un;
};
#define	free_DAS_SearchResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZSearchResultDAS], &_ZDAS_mod, 1)

struct type_DAS_AddEntryArgumentData {
    integer     optionals;
#define	opt_DAS_AddEntryArgumentData_aliasedRDNs (000000001)

    struct type_IF_DistinguishedName *object;

    struct member_DAS_48 {
        struct type_IF_Attribute *member_DAS_49;

        struct member_DAS_48 *next;
    } *entry;

    struct type_DAS_ServiceControls *member_DAS_50;

    struct type_DAS_SecurityParameters *member_DAS_51;

    struct type_IF_DistinguishedName *requestor;

    struct type_DO_OperationProgress *member_DAS_52;

    integer     aliasedRDNs;

    struct member_DAS_53 {
        struct type_DAS_Extension *member_DAS_54;

        struct member_DAS_53 *next;
    } *extensions;
};
#define	free_DAS_AddEntryArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAddEntryArgumentDataDAS], &_ZDAS_mod, 1)

struct type_DAS_AddEntryArgument {
    int         offset;
#define	type_DAS_AddEntryArgument_1	1
#define	type_DAS_AddEntryArgument_2	2

    union {
        struct type_DAS_AddEntryArgumentData *choice_DAS_21;

        struct element_DAS_39 {
            struct type_DAS_AddEntryArgumentData *element_DAS_40;

            struct type_DAS_TAlgorithmIdentifier *element_DAS_41;

            struct type_DAS_TBitString *element_DAS_42;
        } *choice_DAS_22;
    }       un;
};
#define	free_DAS_AddEntryArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAddEntryArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_AddEntryResult {
    char    parm;
};
#define	free_DAS_AddEntryResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAddEntryResultDAS], &_ZDAS_mod, 1)

struct type_DAS_RemoveEntryArgumentData {
    integer     optionals;
#define	opt_DAS_RemoveEntryArgumentData_aliasedRDNs (000000001)

    struct type_IF_DistinguishedName *object;

    struct type_DAS_ServiceControls *member_DAS_55;

    struct type_DAS_SecurityParameters *member_DAS_56;

    struct type_IF_DistinguishedName *requestor;

    struct type_DO_OperationProgress *member_DAS_57;

    integer     aliasedRDNs;

    struct member_DAS_58 {
        struct type_DAS_Extension *member_DAS_59;

        struct member_DAS_58 *next;
    } *extensions;
};
#define	free_DAS_RemoveEntryArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZRemoveEntryArgumentDataDAS], &_ZDAS_mod, 1)

struct type_DAS_RemoveEntryArgument {
    int         offset;
#define	type_DAS_RemoveEntryArgument_1	1
#define	type_DAS_RemoveEntryArgument_2	2

    union {
        struct type_DAS_RemoveEntryArgumentData *choice_DAS_23;

        struct element_DAS_43 {
            struct type_DAS_RemoveEntryArgumentData *element_DAS_44;

            struct type_DAS_TAlgorithmIdentifier *element_DAS_45;

            struct type_DAS_TBitString *element_DAS_46;
        } *choice_DAS_24;
    }       un;
};
#define	free_DAS_RemoveEntryArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZRemoveEntryArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_RemoveEntryResult {
    char    parm;
};
#define	free_DAS_RemoveEntryResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZRemoveEntryResultDAS], &_ZDAS_mod, 1)

struct type_DAS_ModifyEntryArgumentData {
    integer     optionals;
#define	opt_DAS_ModifyEntryArgumentData_aliasedRDNs (000000001)

    struct type_IF_DistinguishedName *object;

    struct element_DAS_47 {
        struct type_DAS_EntryModification *element_DAS_48;

        struct element_DAS_47 *next;
    } *changes;

    struct type_DAS_ServiceControls *member_DAS_60;

    struct type_DAS_SecurityParameters *member_DAS_61;

    struct type_IF_DistinguishedName *requestor;

    struct type_DO_OperationProgress *member_DAS_62;

    integer     aliasedRDNs;

    struct member_DAS_63 {
        struct type_DAS_Extension *member_DAS_64;

        struct member_DAS_63 *next;
    } *extensions;
};
#define	free_DAS_ModifyEntryArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZModifyEntryArgumentDataDAS], &_ZDAS_mod, 1)

struct type_DAS_ModifyEntryArgument {
    int         offset;
#define	type_DAS_ModifyEntryArgument_1	1
#define	type_DAS_ModifyEntryArgument_2	2

    union {
        struct type_DAS_ModifyEntryArgumentData *choice_DAS_25;

        struct element_DAS_49 {
            struct type_DAS_ModifyEntryArgumentData *element_DAS_50;

            struct type_DAS_TAlgorithmIdentifier *element_DAS_51;

            struct type_DAS_TBitString *element_DAS_52;
        } *choice_DAS_26;
    }       un;
};
#define	free_DAS_ModifyEntryArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZModifyEntryArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_ModifyEntryResult {
    char    parm;
};
#define	free_DAS_ModifyEntryResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZModifyEntryResultDAS], &_ZDAS_mod, 1)

struct type_DAS_ModifyRDNArgumentData {
    integer     optionals;
#define	opt_DAS_ModifyRDNArgumentData_aliasedRDNs (000000001)

    struct type_IF_DistinguishedName *object;

    struct type_IF_RelativeDistinguishedName *newRDN;

    char    deleteRDN;

    struct type_DAS_ServiceControls *member_DAS_65;

    struct type_DAS_SecurityParameters *member_DAS_66;

    struct type_IF_DistinguishedName *requestor;

    struct type_DO_OperationProgress *member_DAS_67;

    integer     aliasedRDNs;

    struct member_DAS_68 {
        struct type_DAS_Extension *member_DAS_69;

        struct member_DAS_68 *next;
    } *extensions;
};
#define	free_DAS_ModifyRDNArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZModifyRDNArgumentDataDAS], &_ZDAS_mod, 1)

struct type_DAS_ModifyRDNArgument {
    int         offset;
#define	type_DAS_ModifyRDNArgument_1	1
#define	type_DAS_ModifyRDNArgument_2	2

    union {
        struct type_DAS_ModifyRDNArgumentData *choice_DAS_27;

        struct element_DAS_53 {
            struct type_DAS_ModifyRDNArgumentData *element_DAS_54;

            struct type_DAS_TAlgorithmIdentifier *element_DAS_55;

            struct type_DAS_TBitString *element_DAS_56;
        } *choice_DAS_28;
    }       un;
};
#define	free_DAS_ModifyRDNArgument(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZModifyRDNArgumentDAS], &_ZDAS_mod, 1)

struct type_DAS_ModifyRDNResult {
    char    parm;
};
#define	free_DAS_ModifyRDNResult(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZModifyRDNResultDAS], &_ZDAS_mod, 1)

struct type_DAS_DirectoryBindError {
    struct type_DAS_Versions *versions;

    struct choice_DAS_29 {
        int         offset;
#define	choice_DAS_29_serviceError	1
#define	choice_DAS_29_securityError	2

        union {
            struct type_DAS_ServiceProblem *serviceError;

            struct type_DAS_SecurityProblem *securityError;
        }       un;
    } *member_DAS_70;
};
#define	free_DAS_DirectoryBindError(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZDirectoryBindErrorDAS], &_ZDAS_mod, 1)

struct type_DAS_AbandonFailedParm {
    struct type_DAS_AbandonProblem *problem;

    struct type_DAS_TInvokeID *operation;
};
#define	free_DAS_AbandonFailedParm(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAbandonFailedParmDAS], &_ZDAS_mod, 1)

struct type_DAS_AttributeErrorParm {
    struct type_IF_Name *object;

    struct member_DAS_71 {
        struct element_DAS_57 {
            struct type_DAS_AttributeProblem *problem;

            struct type_IF_AttributeType *type;

            struct type_IF_AttributeValue *value;
        } *member_DAS_72;

        struct member_DAS_71 *next;
    } *problems;
};
#define	free_DAS_AttributeErrorParm(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZAttributeErrorParmDAS], &_ZDAS_mod, 1)

struct type_DAS_NameErrorParm {
    struct type_DAS_NameProblem *problem;

    struct type_IF_Name *matched;
};
#define	free_DAS_NameErrorParm(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZNameErrorParmDAS], &_ZDAS_mod, 1)

struct type_DAS_ReferralParm {
    struct type_DO_ContinuationReference *candidate;
};
#define	free_DAS_ReferralParm(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZReferralParmDAS], &_ZDAS_mod, 1)

struct type_DAS_SecurityErrorParm {
    struct type_DAS_SecurityProblem *problem;
};
#define	free_DAS_SecurityErrorParm(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZSecurityErrorParmDAS], &_ZDAS_mod, 1)

struct type_DAS_ServiceErrorParm {
    struct type_DAS_ServiceProblem *problem;
};
#define	free_DAS_ServiceErrorParm(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZServiceErrorParmDAS], &_ZDAS_mod, 1)

struct type_DAS_UpdateErrorParm {
    struct type_DAS_UpdateProblem *problem;
};
#define	free_DAS_UpdateErrorParm(parm)\
	(void) fre_obj((char *) parm, _ZDAS_mod.md_dtab[_ZUpdateErrorParmDAS], &_ZDAS_mod, 1)
#endif
