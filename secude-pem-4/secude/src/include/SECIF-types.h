/* automatically generated by pepsy 10.0 #12 (tiber), do not edit! */

#ifndef	_module_SECIF_defined_
#define	_module_SECIF_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#include <isode/asn1/asn1.h>
#include <isode/asn1/pepsy.h>
#include <isode/pepsy/UNIV-types.h>


extern modtyp	_ZSECIF_mod;
#define _ZSETOFAttributeTypeSECIF	1
#define _ZAttributeValueSECIF	2
#define _ZAttributeTypeSECIF	0
#define _ZNameSECIF	5
#define _ZAttributeValueAssertionSECIF	3
#define _ZSETOFAttributeSECIF	8
#define _ZAttributeValuesSECIF	6
#define _ZRelativeDistinguishedNameSECIF	4
#define _ZAttributeSECIF	7

#ifndef	lint
#define build_SECIF_AttributeType(pe, top, len, buffer, parm) \
    enc_f(_ZAttributeTypeSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_AttributeType(pe, top, len, buffer, parm) \
    dec_f(_ZAttributeTypeSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_AttributeType(pe, top, len, buffer, parm) \
    prnt_f(_ZAttributeTypeSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_AttributeType_P    _ZAttributeTypeSECIF, &_ZSECIF_mod

#define build_SECIF_SETOFAttributeType(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFAttributeTypeSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_SETOFAttributeType(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFAttributeTypeSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_SETOFAttributeType(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFAttributeTypeSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_SETOFAttributeType_P    _ZSETOFAttributeTypeSECIF, &_ZSECIF_mod

#define build_SECIF_AttributeValue(pe, top, len, buffer, parm) \
    enc_f(_ZAttributeValueSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_AttributeValue(pe, top, len, buffer, parm) \
    dec_f(_ZAttributeValueSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_AttributeValue(pe, top, len, buffer, parm) \
    prnt_f(_ZAttributeValueSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_AttributeValue_P    _ZAttributeValueSECIF, &_ZSECIF_mod

#define build_SECIF_AttributeValueAssertion(pe, top, len, buffer, parm) \
    enc_f(_ZAttributeValueAssertionSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_AttributeValueAssertion(pe, top, len, buffer, parm) \
    dec_f(_ZAttributeValueAssertionSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_AttributeValueAssertion(pe, top, len, buffer, parm) \
    prnt_f(_ZAttributeValueAssertionSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_AttributeValueAssertion_P    _ZAttributeValueAssertionSECIF, &_ZSECIF_mod

#define build_SECIF_RelativeDistinguishedName(pe, top, len, buffer, parm) \
    enc_f(_ZRelativeDistinguishedNameSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_RelativeDistinguishedName(pe, top, len, buffer, parm) \
    dec_f(_ZRelativeDistinguishedNameSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_RelativeDistinguishedName(pe, top, len, buffer, parm) \
    prnt_f(_ZRelativeDistinguishedNameSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_RelativeDistinguishedName_P    _ZRelativeDistinguishedNameSECIF, &_ZSECIF_mod

#define build_SECIF_Name(pe, top, len, buffer, parm) \
    enc_f(_ZNameSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_Name(pe, top, len, buffer, parm) \
    dec_f(_ZNameSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_Name(pe, top, len, buffer, parm) \
    prnt_f(_ZNameSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_Name_P    _ZNameSECIF, &_ZSECIF_mod

#define build_SECIF_AttributeValues(pe, top, len, buffer, parm) \
    enc_f(_ZAttributeValuesSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_AttributeValues(pe, top, len, buffer, parm) \
    dec_f(_ZAttributeValuesSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_AttributeValues(pe, top, len, buffer, parm) \
    prnt_f(_ZAttributeValuesSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_AttributeValues_P    _ZAttributeValuesSECIF, &_ZSECIF_mod

#define build_SECIF_Attribute(pe, top, len, buffer, parm) \
    enc_f(_ZAttributeSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_Attribute(pe, top, len, buffer, parm) \
    dec_f(_ZAttributeSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_Attribute(pe, top, len, buffer, parm) \
    prnt_f(_ZAttributeSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_Attribute_P    _ZAttributeSECIF, &_ZSECIF_mod

#define build_SECIF_SETOFAttribute(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFAttributeSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char *) parm)

#define parse_SECIF_SETOFAttribute(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFAttributeSECIF, &_ZSECIF_mod, pe, top, len, buffer, (char **) parm)

#define print_SECIF_SETOFAttribute(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFAttributeSECIF, &_ZSECIF_mod, pe, top, len, buffer)
#define print_SECIF_SETOFAttribute_P    _ZSETOFAttributeSECIF, &_ZSECIF_mod


#endif   /* lint */

#define	type_SECIF_AttributeType	OIDentifier
#define	free_SECIF_AttributeType	oid_free

#define	type_SECIF_AttributeValue	PElement
#define	free_SECIF_AttributeValue	pe_free

struct type_SECIF_SETOFAttributeType {
        struct type_SECIF_AttributeType *AttributeType;

        struct type_SECIF_SETOFAttributeType *next;
};
#define	free_SECIF_SETOFAttributeType(parm)\
	(void) fre_obj((char *) parm, _ZSECIF_mod.md_dtab[_ZSETOFAttributeTypeSECIF], &_ZSECIF_mod, 1)

struct type_SECIF_AttributeValueAssertion {
    OID     element_SECIF_0;

    PE      element_SECIF_1;
};
#define	free_SECIF_AttributeValueAssertion(parm)\
	(void) fre_obj((char *) parm, _ZSECIF_mod.md_dtab[_ZAttributeValueAssertionSECIF], &_ZSECIF_mod, 1)

struct type_SECIF_RelativeDistinguishedName {
        struct type_SECIF_AttributeValueAssertion *AttributeValueAssertion;

        struct type_SECIF_RelativeDistinguishedName *next;
};
#define	free_SECIF_RelativeDistinguishedName(parm)\
	(void) fre_obj((char *) parm, _ZSECIF_mod.md_dtab[_ZRelativeDistinguishedNameSECIF], &_ZSECIF_mod, 1)

struct type_SECIF_Name {
        struct type_SECIF_RelativeDistinguishedName *RelativeDistinguishedName;

        struct type_SECIF_Name *next;
};
#define	free_SECIF_Name(parm)\
	(void) fre_obj((char *) parm, _ZSECIF_mod.md_dtab[_ZNameSECIF], &_ZSECIF_mod, 1)

struct type_SECIF_AttributeValues {
        PE      member_SECIF_0;

        struct type_SECIF_AttributeValues *next;
};
#define	free_SECIF_AttributeValues(parm)\
	(void) fre_obj((char *) parm, _ZSECIF_mod.md_dtab[_ZAttributeValuesSECIF], &_ZSECIF_mod, 1)

struct type_SECIF_Attribute {
    OID     element_SECIF_2;

    struct type_SECIF_AttributeValues *element_SECIF_3;
};
#define	free_SECIF_Attribute(parm)\
	(void) fre_obj((char *) parm, _ZSECIF_mod.md_dtab[_ZAttributeSECIF], &_ZSECIF_mod, 1)

struct type_SECIF_SETOFAttribute {
        struct type_SECIF_Attribute *Attribute;

        struct type_SECIF_SETOFAttribute *next;
};
#define	free_SECIF_SETOFAttribute(parm)\
	(void) fre_obj((char *) parm, _ZSECIF_mod.md_dtab[_ZSETOFAttributeSECIF], &_ZSECIF_mod, 1)
#endif
