/* automatically generated by pepsy 10.0 #12 (tiber), do not edit! */

#ifndef	_module_STRONG_defined_
#define	_module_STRONG_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#include <isode/asn1/asn1.h>
#include <isode/asn1/pepsy.h>
#include <isode/pepsy/UNIV-types.h>


extern modtyp	_ZSTRONG_mod;
#define _ZSETOFAccessPointSTRONG	66
#define _ZSETOFSubordEntrySTRONG	56
#define _ZSECExtensionSTRONG	44
#define _ZAddArgumentSTRONG	13
#define _ZContinuationReferenceSTRONG	65
#define _ZEntryInfoSELSTRONG	47
#define _ZSETOFSECExtensionSTRONG	43
#define _ZRemoveArgumentTBSSTRONG	31
#define _ZSearchInfoSTRONG	59
#define _ZSearchArgumentSTRONG	34
#define _ZListArgumentSTRONG	19
#define _ZCompareResultSTRONG	17
#define _ZCompareArgumentSTRONG	15
#define _ZEntryModificationSequenceSTRONG	39
#define _ZSecurityParametersSTRONG	41
#define _ZTRequestorSTRONG	3
#define _ZSETOFContinuationReferenceSTRONG	64
#define _ZReadResultSTRONG	30
#define _ZPSAPaddrSTRONG	68
#define _ZPartialOutcomeQualifierSTRONG	61
#define _ZFilterSubstringsSTRONG	52
#define _ZServiceControlsSTRONG	40
#define _ZSearchResultTBSSTRONG	35
#define _ZAccessPointSTRONG	67
#define _ZEntryINFOSTRONG	49
#define _ZListInfoSTRONG	58
#define _ZListResultSTRONG	21
#define _ZLimitProblemSTRONG	63
#define _ZFilterItemSTRONG	53
#define _ZSETOFSearchResultSTRONG	37
#define _ZReadArgumentTBSSTRONG	27
#define _ZTPerformerSTRONG	7
#define _ZSETOFAttrAttrTypeCHOICESTRONG	45
#define _ZModifyRDNArgumentTBSSTRONG	25
#define _ZAddArgumentTBSSTRONG	12
#define _ZTServiceControlsSTRONG	5
#define _ZTOperationProgressSTRONG	2
#define _ZReferenceTypeSTRONG	62
#define _ZOperationProgressSTRONG	42
#define _ZRemoveArgumentSTRONG	32
#define _ZModifyEntryArgumentTBSSTRONG	23
#define _ZListArgumentTBSSTRONG	18
#define _ZTokenSTRONG	11
#define _ZTAttributeSTRONG	9
#define _ZTBooleanSTRONG	6
#define _ZCompareResultTBSSTRONG	16
#define _ZSETOFDNameSTRONG	60
#define _ZStringsCHOICESTRONG	50
#define _ZSearchArgumentTBSSTRONG	33
#define _ZReadResultTBSSTRONG	29
#define _ZCompareArgumentTBSSTRONG	14
#define _ZTSecParmArgumentSTRONG	4
#define _ZSEQUENCEOFStringsCHOICESTRONG	51
#define _ZSETOFEntryINFOSTRONG	48
#define _ZAttrAttrTypeCHOICESTRONG	46
#define _ZListResultTBSSTRONG	20
#define _ZTokenTBSSTRONG	10
#define _ZTSETOFSECExtensionSTRONG	0
#define _ZModifyRDNArgumentSTRONG	26
#define _ZFilterSTRONG	55
#define _ZSearchResultSTRONG	36
#define _ZModifyEntryArgumentSTRONG	24
#define _ZSETOFListResultSTRONG	22
#define _ZTIntegerSTRONG	1
#define _ZTSecParmResultSTRONG	8
#define _ZSubordEntrySTRONG	57
#define _ZEntryModificationSTRONG	38
#define _ZReadArgumentSTRONG	28
#define _ZSETOFFilterSTRONG	54

#ifndef	lint
#define build_STRONG_TSETOFSECExtension(pe, top, len, buffer, parm) \
    enc_f(_ZTSETOFSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TSETOFSECExtension(pe, top, len, buffer, parm) \
    dec_f(_ZTSETOFSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TSETOFSECExtension(pe, top, len, buffer, parm) \
    prnt_f(_ZTSETOFSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TSETOFSECExtension_P    _ZTSETOFSECExtensionSTRONG, &_ZSTRONG_mod

#define build_STRONG_TInteger(pe, top, len, buffer, parm) \
    enc_f(_ZTIntegerSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TInteger(pe, top, len, buffer, parm) \
    dec_f(_ZTIntegerSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TInteger(pe, top, len, buffer, parm) \
    prnt_f(_ZTIntegerSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TInteger_P    _ZTIntegerSTRONG, &_ZSTRONG_mod

#define build_STRONG_TOperationProgress(pe, top, len, buffer, parm) \
    enc_f(_ZTOperationProgressSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TOperationProgress(pe, top, len, buffer, parm) \
    dec_f(_ZTOperationProgressSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TOperationProgress(pe, top, len, buffer, parm) \
    prnt_f(_ZTOperationProgressSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TOperationProgress_P    _ZTOperationProgressSTRONG, &_ZSTRONG_mod

#define build_STRONG_TRequestor(pe, top, len, buffer, parm) \
    enc_f(_ZTRequestorSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TRequestor(pe, top, len, buffer, parm) \
    dec_f(_ZTRequestorSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TRequestor(pe, top, len, buffer, parm) \
    prnt_f(_ZTRequestorSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TRequestor_P    _ZTRequestorSTRONG, &_ZSTRONG_mod

#define build_STRONG_TSecParmArgument(pe, top, len, buffer, parm) \
    enc_f(_ZTSecParmArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TSecParmArgument(pe, top, len, buffer, parm) \
    dec_f(_ZTSecParmArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TSecParmArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZTSecParmArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TSecParmArgument_P    _ZTSecParmArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_TServiceControls(pe, top, len, buffer, parm) \
    enc_f(_ZTServiceControlsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TServiceControls(pe, top, len, buffer, parm) \
    dec_f(_ZTServiceControlsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TServiceControls(pe, top, len, buffer, parm) \
    prnt_f(_ZTServiceControlsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TServiceControls_P    _ZTServiceControlsSTRONG, &_ZSTRONG_mod

#define build_STRONG_TBoolean(pe, top, len, buffer, parm) \
    enc_f(_ZTBooleanSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TBoolean(pe, top, len, buffer, parm) \
    dec_f(_ZTBooleanSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TBoolean(pe, top, len, buffer, parm) \
    prnt_f(_ZTBooleanSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TBoolean_P    _ZTBooleanSTRONG, &_ZSTRONG_mod

#define build_STRONG_TPerformer(pe, top, len, buffer, parm) \
    enc_f(_ZTPerformerSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TPerformer(pe, top, len, buffer, parm) \
    dec_f(_ZTPerformerSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TPerformer(pe, top, len, buffer, parm) \
    prnt_f(_ZTPerformerSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TPerformer_P    _ZTPerformerSTRONG, &_ZSTRONG_mod

#define build_STRONG_TSecParmResult(pe, top, len, buffer, parm) \
    enc_f(_ZTSecParmResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TSecParmResult(pe, top, len, buffer, parm) \
    dec_f(_ZTSecParmResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TSecParmResult(pe, top, len, buffer, parm) \
    prnt_f(_ZTSecParmResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TSecParmResult_P    _ZTSecParmResultSTRONG, &_ZSTRONG_mod

#define build_STRONG_TAttribute(pe, top, len, buffer, parm) \
    enc_f(_ZTAttributeSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TAttribute(pe, top, len, buffer, parm) \
    dec_f(_ZTAttributeSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TAttribute(pe, top, len, buffer, parm) \
    prnt_f(_ZTAttributeSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TAttribute_P    _ZTAttributeSTRONG, &_ZSTRONG_mod

#define build_STRONG_TokenTBS(pe, top, len, buffer, parm) \
    enc_f(_ZTokenTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_TokenTBS(pe, top, len, buffer, parm) \
    dec_f(_ZTokenTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_TokenTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZTokenTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_TokenTBS_P    _ZTokenTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_Token(pe, top, len, buffer, parm) \
    enc_f(_ZTokenSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_Token(pe, top, len, buffer, parm) \
    dec_f(_ZTokenSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_Token(pe, top, len, buffer, parm) \
    prnt_f(_ZTokenSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_Token_P    _ZTokenSTRONG, &_ZSTRONG_mod

#define build_STRONG_AddArgumentTBS(pe, top, len, buffer, parm) \
    enc_f(_ZAddArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_AddArgumentTBS(pe, top, len, buffer, parm) \
    dec_f(_ZAddArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_AddArgumentTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZAddArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_AddArgumentTBS_P    _ZAddArgumentTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_AddArgument(pe, top, len, buffer, parm) \
    enc_f(_ZAddArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_AddArgument(pe, top, len, buffer, parm) \
    dec_f(_ZAddArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_AddArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZAddArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_AddArgument_P    _ZAddArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_CompareArgumentTBS(pe, top, len, buffer, parm) \
    enc_f(_ZCompareArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_CompareArgumentTBS(pe, top, len, buffer, parm) \
    dec_f(_ZCompareArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_CompareArgumentTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZCompareArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_CompareArgumentTBS_P    _ZCompareArgumentTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_CompareArgument(pe, top, len, buffer, parm) \
    enc_f(_ZCompareArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_CompareArgument(pe, top, len, buffer, parm) \
    dec_f(_ZCompareArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_CompareArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZCompareArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_CompareArgument_P    _ZCompareArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_CompareResultTBS(pe, top, len, buffer, parm) \
    enc_f(_ZCompareResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_CompareResultTBS(pe, top, len, buffer, parm) \
    dec_f(_ZCompareResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_CompareResultTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZCompareResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_CompareResultTBS_P    _ZCompareResultTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_CompareResult(pe, top, len, buffer, parm) \
    enc_f(_ZCompareResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_CompareResult(pe, top, len, buffer, parm) \
    dec_f(_ZCompareResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_CompareResult(pe, top, len, buffer, parm) \
    prnt_f(_ZCompareResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_CompareResult_P    _ZCompareResultSTRONG, &_ZSTRONG_mod

#define build_STRONG_ListArgumentTBS(pe, top, len, buffer, parm) \
    enc_f(_ZListArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ListArgumentTBS(pe, top, len, buffer, parm) \
    dec_f(_ZListArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ListArgumentTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZListArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ListArgumentTBS_P    _ZListArgumentTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_ListArgument(pe, top, len, buffer, parm) \
    enc_f(_ZListArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ListArgument(pe, top, len, buffer, parm) \
    dec_f(_ZListArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ListArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZListArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ListArgument_P    _ZListArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_ListResultTBS(pe, top, len, buffer, parm) \
    enc_f(_ZListResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ListResultTBS(pe, top, len, buffer, parm) \
    dec_f(_ZListResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ListResultTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZListResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ListResultTBS_P    _ZListResultTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_ListResult(pe, top, len, buffer, parm) \
    enc_f(_ZListResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ListResult(pe, top, len, buffer, parm) \
    dec_f(_ZListResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ListResult(pe, top, len, buffer, parm) \
    prnt_f(_ZListResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ListResult_P    _ZListResultSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFListResult(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFListResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFListResult(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFListResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFListResult(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFListResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFListResult_P    _ZSETOFListResultSTRONG, &_ZSTRONG_mod

#define build_STRONG_ModifyEntryArgumentTBS(pe, top, len, buffer, parm) \
    enc_f(_ZModifyEntryArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ModifyEntryArgumentTBS(pe, top, len, buffer, parm) \
    dec_f(_ZModifyEntryArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ModifyEntryArgumentTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyEntryArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ModifyEntryArgumentTBS_P    _ZModifyEntryArgumentTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_ModifyEntryArgument(pe, top, len, buffer, parm) \
    enc_f(_ZModifyEntryArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ModifyEntryArgument(pe, top, len, buffer, parm) \
    dec_f(_ZModifyEntryArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ModifyEntryArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyEntryArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ModifyEntryArgument_P    _ZModifyEntryArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_ModifyRDNArgumentTBS(pe, top, len, buffer, parm) \
    enc_f(_ZModifyRDNArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ModifyRDNArgumentTBS(pe, top, len, buffer, parm) \
    dec_f(_ZModifyRDNArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ModifyRDNArgumentTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyRDNArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ModifyRDNArgumentTBS_P    _ZModifyRDNArgumentTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_ModifyRDNArgument(pe, top, len, buffer, parm) \
    enc_f(_ZModifyRDNArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ModifyRDNArgument(pe, top, len, buffer, parm) \
    dec_f(_ZModifyRDNArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ModifyRDNArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZModifyRDNArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ModifyRDNArgument_P    _ZModifyRDNArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_ReadArgumentTBS(pe, top, len, buffer, parm) \
    enc_f(_ZReadArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ReadArgumentTBS(pe, top, len, buffer, parm) \
    dec_f(_ZReadArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ReadArgumentTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZReadArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ReadArgumentTBS_P    _ZReadArgumentTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_ReadArgument(pe, top, len, buffer, parm) \
    enc_f(_ZReadArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ReadArgument(pe, top, len, buffer, parm) \
    dec_f(_ZReadArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ReadArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZReadArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ReadArgument_P    _ZReadArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_ReadResultTBS(pe, top, len, buffer, parm) \
    enc_f(_ZReadResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ReadResultTBS(pe, top, len, buffer, parm) \
    dec_f(_ZReadResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ReadResultTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZReadResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ReadResultTBS_P    _ZReadResultTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_ReadResult(pe, top, len, buffer, parm) \
    enc_f(_ZReadResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ReadResult(pe, top, len, buffer, parm) \
    dec_f(_ZReadResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ReadResult(pe, top, len, buffer, parm) \
    prnt_f(_ZReadResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ReadResult_P    _ZReadResultSTRONG, &_ZSTRONG_mod

#define build_STRONG_RemoveArgumentTBS(pe, top, len, buffer, parm) \
    enc_f(_ZRemoveArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_RemoveArgumentTBS(pe, top, len, buffer, parm) \
    dec_f(_ZRemoveArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_RemoveArgumentTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZRemoveArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_RemoveArgumentTBS_P    _ZRemoveArgumentTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_RemoveArgument(pe, top, len, buffer, parm) \
    enc_f(_ZRemoveArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_RemoveArgument(pe, top, len, buffer, parm) \
    dec_f(_ZRemoveArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_RemoveArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZRemoveArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_RemoveArgument_P    _ZRemoveArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_SearchArgumentTBS(pe, top, len, buffer, parm) \
    enc_f(_ZSearchArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SearchArgumentTBS(pe, top, len, buffer, parm) \
    dec_f(_ZSearchArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SearchArgumentTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchArgumentTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SearchArgumentTBS_P    _ZSearchArgumentTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_SearchArgument(pe, top, len, buffer, parm) \
    enc_f(_ZSearchArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SearchArgument(pe, top, len, buffer, parm) \
    dec_f(_ZSearchArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SearchArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchArgumentSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SearchArgument_P    _ZSearchArgumentSTRONG, &_ZSTRONG_mod

#define build_STRONG_SearchResultTBS(pe, top, len, buffer, parm) \
    enc_f(_ZSearchResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SearchResultTBS(pe, top, len, buffer, parm) \
    dec_f(_ZSearchResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SearchResultTBS(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchResultTBSSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SearchResultTBS_P    _ZSearchResultTBSSTRONG, &_ZSTRONG_mod

#define build_STRONG_SearchResult(pe, top, len, buffer, parm) \
    enc_f(_ZSearchResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SearchResult(pe, top, len, buffer, parm) \
    dec_f(_ZSearchResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SearchResult(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SearchResult_P    _ZSearchResultSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFSearchResult(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFSearchResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFSearchResult(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFSearchResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFSearchResult(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFSearchResultSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFSearchResult_P    _ZSETOFSearchResultSTRONG, &_ZSTRONG_mod

#define build_STRONG_EntryModification(pe, top, len, buffer, parm) \
    enc_f(_ZEntryModificationSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_EntryModification(pe, top, len, buffer, parm) \
    dec_f(_ZEntryModificationSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_EntryModification(pe, top, len, buffer, parm) \
    prnt_f(_ZEntryModificationSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_EntryModification_P    _ZEntryModificationSTRONG, &_ZSTRONG_mod

#define build_STRONG_EntryModificationSequence(pe, top, len, buffer, parm) \
    enc_f(_ZEntryModificationSequenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_EntryModificationSequence(pe, top, len, buffer, parm) \
    dec_f(_ZEntryModificationSequenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_EntryModificationSequence(pe, top, len, buffer, parm) \
    prnt_f(_ZEntryModificationSequenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_EntryModificationSequence_P    _ZEntryModificationSequenceSTRONG, &_ZSTRONG_mod

#define build_STRONG_ServiceControls(pe, top, len, buffer, parm) \
    enc_f(_ZServiceControlsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ServiceControls(pe, top, len, buffer, parm) \
    dec_f(_ZServiceControlsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ServiceControls(pe, top, len, buffer, parm) \
    prnt_f(_ZServiceControlsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ServiceControls_P    _ZServiceControlsSTRONG, &_ZSTRONG_mod

#define build_STRONG_SecurityParameters(pe, top, len, buffer, parm) \
    enc_f(_ZSecurityParametersSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SecurityParameters(pe, top, len, buffer, parm) \
    dec_f(_ZSecurityParametersSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SecurityParameters(pe, top, len, buffer, parm) \
    prnt_f(_ZSecurityParametersSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SecurityParameters_P    _ZSecurityParametersSTRONG, &_ZSTRONG_mod

#define build_STRONG_OperationProgress(pe, top, len, buffer, parm) \
    enc_f(_ZOperationProgressSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_OperationProgress(pe, top, len, buffer, parm) \
    dec_f(_ZOperationProgressSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_OperationProgress(pe, top, len, buffer, parm) \
    prnt_f(_ZOperationProgressSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_OperationProgress_P    _ZOperationProgressSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFSECExtension(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFSECExtension(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFSECExtension(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFSECExtension_P    _ZSETOFSECExtensionSTRONG, &_ZSTRONG_mod

#define build_STRONG_SECExtension(pe, top, len, buffer, parm) \
    enc_f(_ZSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SECExtension(pe, top, len, buffer, parm) \
    dec_f(_ZSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SECExtension(pe, top, len, buffer, parm) \
    prnt_f(_ZSECExtensionSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SECExtension_P    _ZSECExtensionSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFAttrAttrTypeCHOICE(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFAttrAttrTypeCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFAttrAttrTypeCHOICE(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFAttrAttrTypeCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFAttrAttrTypeCHOICE(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFAttrAttrTypeCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFAttrAttrTypeCHOICE_P    _ZSETOFAttrAttrTypeCHOICESTRONG, &_ZSTRONG_mod

#define build_STRONG_AttrAttrTypeCHOICE(pe, top, len, buffer, parm) \
    enc_f(_ZAttrAttrTypeCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_AttrAttrTypeCHOICE(pe, top, len, buffer, parm) \
    dec_f(_ZAttrAttrTypeCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_AttrAttrTypeCHOICE(pe, top, len, buffer, parm) \
    prnt_f(_ZAttrAttrTypeCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_AttrAttrTypeCHOICE_P    _ZAttrAttrTypeCHOICESTRONG, &_ZSTRONG_mod

#define build_STRONG_EntryInfoSEL(pe, top, len, buffer, parm) \
    enc_f(_ZEntryInfoSELSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_EntryInfoSEL(pe, top, len, buffer, parm) \
    dec_f(_ZEntryInfoSELSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_EntryInfoSEL(pe, top, len, buffer, parm) \
    prnt_f(_ZEntryInfoSELSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_EntryInfoSEL_P    _ZEntryInfoSELSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFEntryINFO(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFEntryINFOSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFEntryINFO(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFEntryINFOSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFEntryINFO(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFEntryINFOSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFEntryINFO_P    _ZSETOFEntryINFOSTRONG, &_ZSTRONG_mod

#define build_STRONG_EntryINFO(pe, top, len, buffer, parm) \
    enc_f(_ZEntryINFOSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_EntryINFO(pe, top, len, buffer, parm) \
    dec_f(_ZEntryINFOSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_EntryINFO(pe, top, len, buffer, parm) \
    prnt_f(_ZEntryINFOSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_EntryINFO_P    _ZEntryINFOSTRONG, &_ZSTRONG_mod

#define build_STRONG_StringsCHOICE(pe, top, len, buffer, parm) \
    enc_f(_ZStringsCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_StringsCHOICE(pe, top, len, buffer, parm) \
    dec_f(_ZStringsCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_StringsCHOICE(pe, top, len, buffer, parm) \
    prnt_f(_ZStringsCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_StringsCHOICE_P    _ZStringsCHOICESTRONG, &_ZSTRONG_mod

#define build_STRONG_SEQUENCEOFStringsCHOICE(pe, top, len, buffer, parm) \
    enc_f(_ZSEQUENCEOFStringsCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SEQUENCEOFStringsCHOICE(pe, top, len, buffer, parm) \
    dec_f(_ZSEQUENCEOFStringsCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SEQUENCEOFStringsCHOICE(pe, top, len, buffer, parm) \
    prnt_f(_ZSEQUENCEOFStringsCHOICESTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SEQUENCEOFStringsCHOICE_P    _ZSEQUENCEOFStringsCHOICESTRONG, &_ZSTRONG_mod

#define build_STRONG_FilterSubstrings(pe, top, len, buffer, parm) \
    enc_f(_ZFilterSubstringsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_FilterSubstrings(pe, top, len, buffer, parm) \
    dec_f(_ZFilterSubstringsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_FilterSubstrings(pe, top, len, buffer, parm) \
    prnt_f(_ZFilterSubstringsSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_FilterSubstrings_P    _ZFilterSubstringsSTRONG, &_ZSTRONG_mod

#define build_STRONG_FilterItem(pe, top, len, buffer, parm) \
    enc_f(_ZFilterItemSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_FilterItem(pe, top, len, buffer, parm) \
    dec_f(_ZFilterItemSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_FilterItem(pe, top, len, buffer, parm) \
    prnt_f(_ZFilterItemSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_FilterItem_P    _ZFilterItemSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFFilter(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFFilterSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFFilter(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFFilterSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFFilter(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFFilterSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFFilter_P    _ZSETOFFilterSTRONG, &_ZSTRONG_mod

#define build_STRONG_Filter(pe, top, len, buffer, parm) \
    enc_f(_ZFilterSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_Filter(pe, top, len, buffer, parm) \
    dec_f(_ZFilterSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_Filter(pe, top, len, buffer, parm) \
    prnt_f(_ZFilterSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_Filter_P    _ZFilterSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFSubordEntry(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFSubordEntrySTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFSubordEntry(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFSubordEntrySTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFSubordEntry(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFSubordEntrySTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFSubordEntry_P    _ZSETOFSubordEntrySTRONG, &_ZSTRONG_mod

#define build_STRONG_SubordEntry(pe, top, len, buffer, parm) \
    enc_f(_ZSubordEntrySTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SubordEntry(pe, top, len, buffer, parm) \
    dec_f(_ZSubordEntrySTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SubordEntry(pe, top, len, buffer, parm) \
    prnt_f(_ZSubordEntrySTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SubordEntry_P    _ZSubordEntrySTRONG, &_ZSTRONG_mod

#define build_STRONG_ListInfo(pe, top, len, buffer, parm) \
    enc_f(_ZListInfoSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ListInfo(pe, top, len, buffer, parm) \
    dec_f(_ZListInfoSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ListInfo(pe, top, len, buffer, parm) \
    prnt_f(_ZListInfoSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ListInfo_P    _ZListInfoSTRONG, &_ZSTRONG_mod

#define build_STRONG_SearchInfo(pe, top, len, buffer, parm) \
    enc_f(_ZSearchInfoSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SearchInfo(pe, top, len, buffer, parm) \
    dec_f(_ZSearchInfoSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SearchInfo(pe, top, len, buffer, parm) \
    prnt_f(_ZSearchInfoSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SearchInfo_P    _ZSearchInfoSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFDName(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFDNameSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFDName(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFDNameSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFDName(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFDNameSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFDName_P    _ZSETOFDNameSTRONG, &_ZSTRONG_mod

#define build_STRONG_PartialOutcomeQualifier(pe, top, len, buffer, parm) \
    enc_f(_ZPartialOutcomeQualifierSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_PartialOutcomeQualifier(pe, top, len, buffer, parm) \
    dec_f(_ZPartialOutcomeQualifierSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_PartialOutcomeQualifier(pe, top, len, buffer, parm) \
    prnt_f(_ZPartialOutcomeQualifierSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_PartialOutcomeQualifier_P    _ZPartialOutcomeQualifierSTRONG, &_ZSTRONG_mod

#define build_STRONG_ReferenceType(pe, top, len, buffer, parm) \
    enc_f(_ZReferenceTypeSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ReferenceType(pe, top, len, buffer, parm) \
    dec_f(_ZReferenceTypeSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ReferenceType(pe, top, len, buffer, parm) \
    prnt_f(_ZReferenceTypeSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ReferenceType_P    _ZReferenceTypeSTRONG, &_ZSTRONG_mod

#define build_STRONG_LimitProblem(pe, top, len, buffer, parm) \
    enc_f(_ZLimitProblemSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_LimitProblem(pe, top, len, buffer, parm) \
    dec_f(_ZLimitProblemSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_LimitProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZLimitProblemSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_LimitProblem_P    _ZLimitProblemSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFContinuationReference(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFContinuationReferenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFContinuationReference(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFContinuationReferenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFContinuationReference(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFContinuationReferenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFContinuationReference_P    _ZSETOFContinuationReferenceSTRONG, &_ZSTRONG_mod

#define build_STRONG_ContinuationReference(pe, top, len, buffer, parm) \
    enc_f(_ZContinuationReferenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_ContinuationReference(pe, top, len, buffer, parm) \
    dec_f(_ZContinuationReferenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_ContinuationReference(pe, top, len, buffer, parm) \
    prnt_f(_ZContinuationReferenceSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_ContinuationReference_P    _ZContinuationReferenceSTRONG, &_ZSTRONG_mod

#define build_STRONG_SETOFAccessPoint(pe, top, len, buffer, parm) \
    enc_f(_ZSETOFAccessPointSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_SETOFAccessPoint(pe, top, len, buffer, parm) \
    dec_f(_ZSETOFAccessPointSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_SETOFAccessPoint(pe, top, len, buffer, parm) \
    prnt_f(_ZSETOFAccessPointSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_SETOFAccessPoint_P    _ZSETOFAccessPointSTRONG, &_ZSTRONG_mod

#define build_STRONG_AccessPoint(pe, top, len, buffer, parm) \
    enc_f(_ZAccessPointSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_AccessPoint(pe, top, len, buffer, parm) \
    dec_f(_ZAccessPointSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_AccessPoint(pe, top, len, buffer, parm) \
    prnt_f(_ZAccessPointSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_AccessPoint_P    _ZAccessPointSTRONG, &_ZSTRONG_mod

#define build_STRONG_PSAPaddr(pe, top, len, buffer, parm) \
    enc_f(_ZPSAPaddrSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char *) parm)

#define parse_STRONG_PSAPaddr(pe, top, len, buffer, parm) \
    dec_f(_ZPSAPaddrSTRONG, &_ZSTRONG_mod, pe, top, len, buffer, (char **) parm)

#define none_STRONG_PSAPaddr(pe, top, len, buffer, parm) \
    prnt_f(_ZPSAPaddrSTRONG, &_ZSTRONG_mod, pe, top, len, buffer)
#define none_STRONG_PSAPaddr_P    _ZPSAPaddrSTRONG, &_ZSTRONG_mod


#endif   /* lint */
#include "SECIF-types.h"
#include "SEC-types.h"
#include "SECAF-types.h"


#define	type_STRONG_TSETOFSECExtension	type_STRONG_SETOFSECExtension
#define	free_STRONG_TSETOFSECExtension	free_STRONG_SETOFSECExtension

#define	type_STRONG_TOperationProgress	type_STRONG_OperationProgress
#define	free_STRONG_TOperationProgress	free_STRONG_OperationProgress

#define	type_STRONG_TRequestor	type_SECIF_Name
#define	free_STRONG_TRequestor	free_SECIF_Name

#define	type_STRONG_TSecParmArgument	type_STRONG_SecurityParameters
#define	free_STRONG_TSecParmArgument	free_STRONG_SecurityParameters

#define	type_STRONG_TServiceControls	type_STRONG_ServiceControls
#define	free_STRONG_TServiceControls	free_STRONG_ServiceControls

#define	type_STRONG_TPerformer	type_SECIF_Name
#define	free_STRONG_TPerformer	free_SECIF_Name

#define	type_STRONG_TSecParmResult	type_STRONG_SecurityParameters
#define	free_STRONG_TSecParmResult	free_STRONG_SecurityParameters

#define	type_STRONG_TAttribute	type_SECIF_Attribute
#define	free_STRONG_TAttribute	free_SECIF_Attribute

struct type_STRONG_TInteger {
    integer     parm;
};
#define	free_STRONG_TInteger(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZTIntegerSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_TBoolean {
    char    parm;
};
#define	free_STRONG_TBoolean(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZTBooleanSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_TokenTBS {
    struct type_SEC_AlgorithmIdentifier *signature;

    struct type_SECIF_Name *name;

    struct	qbuf	*time;

    struct type_SEC_BitString *random;
};
#define	free_STRONG_TokenTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZTokenTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_Token {
    struct type_STRONG_TokenTBS *element_STRONG_0;

    struct type_SEC_TAlgorithmIdentifier *element_STRONG_1;

    struct type_SEC_TBitString *element_STRONG_2;
};
#define	free_STRONG_Token(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZTokenSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_AddArgumentTBS {
    struct type_SECIF_Name *object;

    struct type_SECIF_SETOFAttribute *entry;

    struct type_STRONG_TSETOFSECExtension *extensions;

    struct type_STRONG_TInteger *aliasedRDNs;

    struct type_STRONG_TOperationProgress *progress;

    struct type_STRONG_TRequestor *requestor;

    struct type_STRONG_TSecParmArgument *secparm;

    struct type_STRONG_TServiceControls *servcontr;
};
#define	free_STRONG_AddArgumentTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZAddArgumentTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_AddArgument {
    int         offset;
#define	type_STRONG_AddArgument_1	1
#define	type_STRONG_AddArgument_2	2

    union {
        struct type_STRONG_AddArgumentTBS *choice_STRONG_0;

        struct element_STRONG_3 {
            struct type_STRONG_AddArgumentTBS *element_STRONG_4;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_5;

            struct type_SEC_TBitString *element_STRONG_6;
        } *choice_STRONG_1;
    }       un;
};
#define	free_STRONG_AddArgument(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZAddArgumentSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_CompareArgumentTBS {
    struct type_SECIF_Name *object;

    struct type_SECIF_AttributeValueAssertion *purported;

    struct type_STRONG_TSETOFSECExtension *extensions;

    struct type_STRONG_TInteger *aliasedRDNs;

    struct type_STRONG_TOperationProgress *progress;

    struct type_STRONG_TRequestor *requestor;

    struct type_STRONG_TSecParmArgument *secparm;

    struct type_STRONG_TServiceControls *servcontr;
};
#define	free_STRONG_CompareArgumentTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZCompareArgumentTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_CompareArgument {
    int         offset;
#define	type_STRONG_CompareArgument_1	1
#define	type_STRONG_CompareArgument_2	2

    union {
        struct type_STRONG_CompareArgumentTBS *choice_STRONG_2;

        struct element_STRONG_7 {
            struct type_STRONG_CompareArgumentTBS *element_STRONG_8;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_9;

            struct type_SEC_TBitString *element_STRONG_10;
        } *choice_STRONG_3;
    }       un;
};
#define	free_STRONG_CompareArgument(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZCompareArgumentSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_CompareResultTBS {
    struct type_SECIF_Name *member_STRONG_0;

    char    matched;

    char    fromEntry;

    struct type_STRONG_TBoolean *aliasDereferenced;

    struct type_STRONG_TPerformer *performer;

    struct type_STRONG_TSecParmResult *secparm;
};
#define	free_STRONG_CompareResultTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZCompareResultTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_CompareResult {
    int         offset;
#define	type_STRONG_CompareResult_1	1
#define	type_STRONG_CompareResult_2	2

    union {
        struct type_STRONG_CompareResultTBS *choice_STRONG_4;

        struct element_STRONG_11 {
            struct type_STRONG_CompareResultTBS *element_STRONG_12;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_13;

            struct type_SEC_TBitString *element_STRONG_14;
        } *choice_STRONG_5;
    }       un;
};
#define	free_STRONG_CompareResult(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZCompareResultSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ListArgumentTBS {
    struct type_SECIF_Name *object;

    struct type_STRONG_TSETOFSECExtension *extensions;

    struct type_STRONG_TInteger *aliasedRDNs;

    struct type_STRONG_TOperationProgress *progress;

    struct type_STRONG_TRequestor *requestor;

    struct type_STRONG_TSecParmArgument *secparm;

    struct type_STRONG_TServiceControls *servcontr;
};
#define	free_STRONG_ListArgumentTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZListArgumentTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ListArgument {
    int         offset;
#define	type_STRONG_ListArgument_1	1
#define	type_STRONG_ListArgument_2	2

    union {
        struct type_STRONG_ListArgumentTBS *choice_STRONG_6;

        struct element_STRONG_15 {
            struct type_STRONG_ListArgumentTBS *element_STRONG_16;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_17;

            struct type_SEC_TBitString *element_STRONG_18;
        } *choice_STRONG_7;
    }       un;
};
#define	free_STRONG_ListArgument(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZListArgumentSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ListResultTBS {
    int         offset;
#define	type_STRONG_ListResultTBS_listInfo	1
#define	type_STRONG_ListResultTBS_uncorrelatedListInfo	2

    union {
        struct type_STRONG_ListInfo *listInfo;

        struct type_STRONG_SETOFListResult *uncorrelatedListInfo;
    }       un;
};
#define	free_STRONG_ListResultTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZListResultTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ListResult {
    int         offset;
#define	type_STRONG_ListResult_1	1
#define	type_STRONG_ListResult_2	2

    union {
        struct type_STRONG_ListResultTBS *choice_STRONG_8;

        struct element_STRONG_19 {
            struct type_STRONG_ListResultTBS *element_STRONG_20;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_21;

            struct type_SEC_TBitString *element_STRONG_22;
        } *choice_STRONG_9;
    }       un;
};
#define	free_STRONG_ListResult(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZListResultSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFListResult {
        struct type_STRONG_ListResult *ListResult;

        struct type_STRONG_SETOFListResult *next;
};
#define	free_STRONG_SETOFListResult(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFListResultSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ModifyEntryArgumentTBS {
    struct type_SECIF_Name *object;

    struct type_STRONG_EntryModificationSequence *changes;

    struct type_STRONG_TSETOFSECExtension *extensions;

    struct type_STRONG_TInteger *aliasedRDNs;

    struct type_STRONG_TOperationProgress *progress;

    struct type_STRONG_TRequestor *requestor;

    struct type_STRONG_TSecParmArgument *secparm;

    struct type_STRONG_TServiceControls *servcontr;
};
#define	free_STRONG_ModifyEntryArgumentTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZModifyEntryArgumentTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ModifyEntryArgument {
    int         offset;
#define	type_STRONG_ModifyEntryArgument_1	1
#define	type_STRONG_ModifyEntryArgument_2	2

    union {
        struct type_STRONG_ModifyEntryArgumentTBS *choice_STRONG_10;

        struct element_STRONG_23 {
            struct type_STRONG_ModifyEntryArgumentTBS *element_STRONG_24;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_25;

            struct type_SEC_TBitString *element_STRONG_26;
        } *choice_STRONG_11;
    }       un;
};
#define	free_STRONG_ModifyEntryArgument(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZModifyEntryArgumentSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ModifyRDNArgumentTBS {
    struct type_SECIF_Name *object;

    struct type_SECIF_RelativeDistinguishedName *newRDN;

    char    deleteOldRDN;

    struct type_STRONG_TSETOFSECExtension *extensions;

    struct type_STRONG_TInteger *aliasedRDNs;

    struct type_STRONG_TOperationProgress *progress;

    struct type_STRONG_TRequestor *requestor;

    struct type_STRONG_TSecParmArgument *secparm;

    struct type_STRONG_TServiceControls *servcontr;
};
#define	free_STRONG_ModifyRDNArgumentTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZModifyRDNArgumentTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ModifyRDNArgument {
    int         offset;
#define	type_STRONG_ModifyRDNArgument_1	1
#define	type_STRONG_ModifyRDNArgument_2	2

    union {
        struct type_STRONG_ModifyRDNArgumentTBS *choice_STRONG_12;

        struct element_STRONG_27 {
            struct type_STRONG_ModifyRDNArgumentTBS *element_STRONG_28;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_29;

            struct type_SEC_TBitString *element_STRONG_30;
        } *choice_STRONG_13;
    }       un;
};
#define	free_STRONG_ModifyRDNArgument(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZModifyRDNArgumentSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ReadArgumentTBS {
    struct type_SECIF_Name *object;

    struct type_STRONG_EntryInfoSEL *selection;

    struct type_STRONG_TSETOFSECExtension *extensions;

    struct type_STRONG_TInteger *aliasedRDNs;

    struct type_STRONG_TOperationProgress *progress;

    struct type_STRONG_TRequestor *requestor;

    struct type_STRONG_TSecParmArgument *secparm;

    struct type_STRONG_TServiceControls *servcontr;
};
#define	free_STRONG_ReadArgumentTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZReadArgumentTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ReadArgument {
    int         offset;
#define	type_STRONG_ReadArgument_1	1
#define	type_STRONG_ReadArgument_2	2

    union {
        struct type_STRONG_ReadArgumentTBS *choice_STRONG_14;

        struct element_STRONG_31 {
            struct type_STRONG_ReadArgumentTBS *element_STRONG_32;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_33;

            struct type_SEC_TBitString *element_STRONG_34;
        } *choice_STRONG_15;
    }       un;
};
#define	free_STRONG_ReadArgument(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZReadArgumentSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ReadResultTBS {
    struct type_STRONG_EntryINFO *entry;

    struct type_STRONG_TBoolean *aliasDereferenced;

    struct type_STRONG_TPerformer *performer;

    struct type_STRONG_TSecParmResult *secparm;
};
#define	free_STRONG_ReadResultTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZReadResultTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ReadResult {
    int         offset;
#define	type_STRONG_ReadResult_1	1
#define	type_STRONG_ReadResult_2	2

    union {
        struct type_STRONG_ReadResultTBS *choice_STRONG_16;

        struct element_STRONG_35 {
            struct type_STRONG_ReadResultTBS *element_STRONG_36;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_37;

            struct type_SEC_TBitString *element_STRONG_38;
        } *choice_STRONG_17;
    }       un;
};
#define	free_STRONG_ReadResult(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZReadResultSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_RemoveArgumentTBS {
    struct type_SECIF_Name *object;

    struct type_STRONG_TSETOFSECExtension *extensions;

    struct type_STRONG_TInteger *aliasedRDNs;

    struct type_STRONG_TOperationProgress *progress;

    struct type_STRONG_TRequestor *requestor;

    struct type_STRONG_TSecParmArgument *secparm;

    struct type_STRONG_TServiceControls *servcontr;
};
#define	free_STRONG_RemoveArgumentTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZRemoveArgumentTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_RemoveArgument {
    int         offset;
#define	type_STRONG_RemoveArgument_1	1
#define	type_STRONG_RemoveArgument_2	2

    union {
        struct type_STRONG_RemoveArgumentTBS *choice_STRONG_18;

        struct element_STRONG_39 {
            struct type_STRONG_RemoveArgumentTBS *element_STRONG_40;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_41;

            struct type_SEC_TBitString *element_STRONG_42;
        } *choice_STRONG_19;
    }       un;
};
#define	free_STRONG_RemoveArgument(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZRemoveArgumentSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SearchArgumentTBS {
    struct type_SECIF_Name *baseObject;

    integer     subset;
#define	int_STRONG_subset_baseObject	0
#define	int_STRONG_subset_oneLevel	1
#define	int_STRONG_subset_wholeSubtree	2

    struct type_STRONG_Filter *filter;

    char    searchAliases;

    struct type_STRONG_EntryInfoSEL *selection;

    struct type_STRONG_TSETOFSECExtension *extensions;

    struct type_STRONG_TInteger *aliasedRDNs;

    struct type_STRONG_TOperationProgress *progress;

    struct type_STRONG_TRequestor *requestor;

    struct type_STRONG_TSecParmArgument *secparm;

    struct type_STRONG_TServiceControls *servcontr;
};
#define	free_STRONG_SearchArgumentTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSearchArgumentTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SearchArgument {
    int         offset;
#define	type_STRONG_SearchArgument_1	1
#define	type_STRONG_SearchArgument_2	2

    union {
        struct type_STRONG_SearchArgumentTBS *choice_STRONG_20;

        struct element_STRONG_43 {
            struct type_STRONG_SearchArgumentTBS *element_STRONG_44;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_45;

            struct type_SEC_TBitString *element_STRONG_46;
        } *choice_STRONG_21;
    }       un;
};
#define	free_STRONG_SearchArgument(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSearchArgumentSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SearchResultTBS {
    int         offset;
#define	type_STRONG_SearchResultTBS_searchInfo	1
#define	type_STRONG_SearchResultTBS_uncorrelatedSearchInfo	2

    union {
        struct type_STRONG_SearchInfo *searchInfo;

        struct type_STRONG_SETOFSearchResult *uncorrelatedSearchInfo;
    }       un;
};
#define	free_STRONG_SearchResultTBS(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSearchResultTBSSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SearchResult {
    int         offset;
#define	type_STRONG_SearchResult_1	1
#define	type_STRONG_SearchResult_2	2

    union {
        struct type_STRONG_SearchResultTBS *choice_STRONG_22;

        struct element_STRONG_47 {
            struct type_STRONG_SearchResultTBS *element_STRONG_48;

            struct type_SEC_TAlgorithmIdentifier *element_STRONG_49;

            struct type_SEC_TBitString *element_STRONG_50;
        } *choice_STRONG_23;
    }       un;
};
#define	free_STRONG_SearchResult(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSearchResultSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFSearchResult {
        struct type_STRONG_SearchResult *SearchResult;

        struct type_STRONG_SETOFSearchResult *next;
};
#define	free_STRONG_SETOFSearchResult(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFSearchResultSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_EntryModification {
    int         offset;
#define	type_STRONG_EntryModification_addAttribute	1
#define	type_STRONG_EntryModification_removeAttribute	2
#define	type_STRONG_EntryModification_addValues	3
#define	type_STRONG_EntryModification_removeValues	4

    union {
        struct type_SECIF_Attribute *addAttribute;

        OID     removeAttribute;

        struct type_SECIF_Attribute *addValues;

        struct type_SECIF_Attribute *removeValues;
    }       un;
};
#define	free_STRONG_EntryModification(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZEntryModificationSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_EntryModificationSequence {
        struct type_STRONG_EntryModification *EntryModification;

        struct type_STRONG_EntryModificationSequence *next;
};
#define	free_STRONG_EntryModificationSequence(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZEntryModificationSequenceSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ServiceControls {
    integer     optionals;
#define	opt_STRONG_ServiceControls_timeLimit (000000001)
#define	opt_STRONG_ServiceControls_sizeLimit (000000002)
#define	opt_STRONG_ServiceControls_scopeOfReferral (000000004)

    PE      options;
#define	bits_STRONG_options	"\020\01preferChaining\02chainingProhibited\03localScope\04dontUseCopy\05dontDereferenceAliases"
#define	bit_STRONG_options_preferChaining	0
#define	bit_STRONG_options_chainingProhibited	1
#define	bit_STRONG_options_localScope	2
#define	bit_STRONG_options_dontUseCopy	3
#define	bit_STRONG_options_dontDereferenceAliases	4

    integer     priority;
#define	int_STRONG_priority_low	0
#define	int_STRONG_priority_medium	1
#define	int_STRONG_priority_high	2

    integer     timeLimit;

    integer     sizeLimit;

    integer     scopeOfReferral;
#define	int_STRONG_scopeOfReferral_dmd	0
#define	int_STRONG_scopeOfReferral_country	1
};
#define	free_STRONG_ServiceControls(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZServiceControlsSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SecurityParameters {
    struct type_SECAF_CertificationPath *certificationPath;

    struct type_SECIF_Name *name;

    struct	qbuf	*time;

    struct type_SEC_BitString *random;

    integer     target;
#define	int_STRONG_target_none	0
#define	int_STRONG_target_signed	1
};
#define	free_STRONG_SecurityParameters(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSecurityParametersSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_OperationProgress {
    integer     optionals;
#define	opt_STRONG_OperationProgress_opNextRDNToBeResolved (000000001)

    integer     opResolutionPhase;
#define	int_STRONG_opResolutionPhase_notStarted	1
#define	int_STRONG_opResolutionPhase_proceeding	2
#define	int_STRONG_opResolutionPhase_completed	3

    integer     opNextRDNToBeResolved;
};
#define	free_STRONG_OperationProgress(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZOperationProgressSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFSECExtension {
        struct type_STRONG_SECExtension *SECExtension;

        struct type_STRONG_SETOFSECExtension *next;
};
#define	free_STRONG_SETOFSECExtension(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFSECExtensionSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SECExtension {
    integer     identifier;

    char    critical;

    PE      item;
};
#define	free_STRONG_SECExtension(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSECExtensionSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFAttrAttrTypeCHOICE {
        struct type_STRONG_AttrAttrTypeCHOICE *AttrAttrTypeCHOICE;

        struct type_STRONG_SETOFAttrAttrTypeCHOICE *next;
};
#define	free_STRONG_SETOFAttrAttrTypeCHOICE(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFAttrAttrTypeCHOICESTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_AttrAttrTypeCHOICE {
    int         offset;
#define	type_STRONG_AttrAttrTypeCHOICE_1	1
#define	type_STRONG_AttrAttrTypeCHOICE_2	2

    union {
        OID     choice_STRONG_24;

        struct type_STRONG_TAttribute *choice_STRONG_25;
    }       un;
};
#define	free_STRONG_AttrAttrTypeCHOICE(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZAttrAttrTypeCHOICESTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_EntryInfoSEL {
    struct choice_STRONG_26 {
        int         offset;
#define	choice_STRONG_26_allAttributes	1
#define	choice_STRONG_26_select	2

        union {
            char    allAttributes;

            struct type_SECIF_SETOFAttributeType *select;
        }       un;
    } *attributeTypes;

    integer     infoTypes;
#define	int_STRONG_infoTypes_attributeTypesOnly	0
#define	int_STRONG_infoTypes_attributeTypesAndValues	1
};
#define	free_STRONG_EntryInfoSEL(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZEntryInfoSELSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFEntryINFO {
        struct type_STRONG_EntryINFO *EntryINFO;

        struct type_STRONG_SETOFEntryINFO *next;
};
#define	free_STRONG_SETOFEntryINFO(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFEntryINFOSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_EntryINFO {
    struct type_SECIF_Name *name;

    char    fromEntry;

    struct type_STRONG_SETOFAttrAttrTypeCHOICE *element_STRONG_51;
};
#define	free_STRONG_EntryINFO(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZEntryINFOSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_StringsCHOICE {
    int         offset;
#define	type_STRONG_StringsCHOICE_initial	1
#define	type_STRONG_StringsCHOICE_any	2
#define	type_STRONG_StringsCHOICE_final	3

    union {
        PE      initial;

        PE      any;

        PE      final;
    }       un;
};
#define	free_STRONG_StringsCHOICE(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZStringsCHOICESTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SEQUENCEOFStringsCHOICE {
        struct type_STRONG_StringsCHOICE *StringsCHOICE;

        struct type_STRONG_SEQUENCEOFStringsCHOICE *next;
};
#define	free_STRONG_SEQUENCEOFStringsCHOICE(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSEQUENCEOFStringsCHOICESTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_FilterSubstrings {
    OID     type;

    struct type_STRONG_SEQUENCEOFStringsCHOICE *strings;
};
#define	free_STRONG_FilterSubstrings(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZFilterSubstringsSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_FilterItem {
    int         offset;
#define	type_STRONG_FilterItem_equality	1
#define	type_STRONG_FilterItem_substrings	2
#define	type_STRONG_FilterItem_greaterOrEqual	3
#define	type_STRONG_FilterItem_lessOrEqual	4
#define	type_STRONG_FilterItem_present	5
#define	type_STRONG_FilterItem_approximateMatch	6

    union {
        struct type_SECIF_AttributeValueAssertion *equality;

        struct type_STRONG_FilterSubstrings *substrings;

        struct type_SECIF_AttributeValueAssertion *greaterOrEqual;

        struct type_SECIF_AttributeValueAssertion *lessOrEqual;

        OID     present;

        struct type_SECIF_AttributeValueAssertion *approximateMatch;
    }       un;
};
#define	free_STRONG_FilterItem(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZFilterItemSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFFilter {
        struct type_STRONG_Filter *Filter;

        struct type_STRONG_SETOFFilter *next;
};
#define	free_STRONG_SETOFFilter(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFFilterSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_Filter {
    int         offset;
#define	type_STRONG_Filter_item	1
#define	type_STRONG_Filter_and	2
#define	type_STRONG_Filter_or	3
#define	type_STRONG_Filter_not	4

    union {
        struct type_STRONG_FilterItem *item;

        struct type_STRONG_SETOFFilter *and;

        struct type_STRONG_SETOFFilter *or;

        struct type_STRONG_Filter *not;
    }       un;
};
#define	free_STRONG_Filter(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZFilterSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFSubordEntry {
        struct type_STRONG_SubordEntry *SubordEntry;

        struct type_STRONG_SETOFSubordEntry *next;
};
#define	free_STRONG_SETOFSubordEntry(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFSubordEntrySTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SubordEntry {
    struct type_SECIF_RelativeDistinguishedName *element_STRONG_52;

    char    aliasEntry;

    char    fromEntry;
};
#define	free_STRONG_SubordEntry(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSubordEntrySTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ListInfo {
    struct type_SECIF_Name *member_STRONG_1;

    struct type_STRONG_SETOFSubordEntry *subordinates;

    struct type_STRONG_PartialOutcomeQualifier *partialOutcomeQualifier;

    struct type_STRONG_TBoolean *aliasDereferenced;

    struct type_STRONG_TPerformer *performer;

    struct type_STRONG_TSecParmResult *secparm;
};
#define	free_STRONG_ListInfo(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZListInfoSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SearchInfo {
    struct type_SECIF_Name *member_STRONG_2;

    struct type_STRONG_SETOFEntryINFO *entries;

    struct type_STRONG_PartialOutcomeQualifier *partialOutcomeQualifier;

    struct type_STRONG_TBoolean *aliasDereferenced;

    struct type_STRONG_TPerformer *performer;

    struct type_STRONG_TSecParmResult *secparm;
};
#define	free_STRONG_SearchInfo(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSearchInfoSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFDName {
        struct type_SECIF_Name *Name;

        struct type_STRONG_SETOFDName *next;
};
#define	free_STRONG_SETOFDName(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFDNameSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_PartialOutcomeQualifier {
    struct type_STRONG_LimitProblem *limitProblem;

    struct type_STRONG_SETOFContinuationReference *unexplored;

    char    unavailableCriticalExtensions;
};
#define	free_STRONG_PartialOutcomeQualifier(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZPartialOutcomeQualifierSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ReferenceType {
    integer     parm;
#define	int_STRONG_ReferenceType_superior	1
#define	int_STRONG_ReferenceType_subordinate	2
#define	int_STRONG_ReferenceType_cross	3
#define	int_STRONG_ReferenceType_nonSpecificSubordinate	4
};
#define	free_STRONG_ReferenceType(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZReferenceTypeSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_LimitProblem {
    integer     parm;
#define	int_STRONG_LimitProblem_timeLimitExceeded	0
#define	int_STRONG_LimitProblem_sizeLimitExceeded	1
#define	int_STRONG_LimitProblem_administrativeLimitExceeded	2
};
#define	free_STRONG_LimitProblem(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZLimitProblemSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFContinuationReference {
        struct type_STRONG_ContinuationReference *ContinuationReference;

        struct type_STRONG_SETOFContinuationReference *next;
};
#define	free_STRONG_SETOFContinuationReference(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFContinuationReferenceSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_ContinuationReference {
    integer     optionals;
#define	opt_STRONG_ContinuationReference_aliasedRDNs (000000001)
#define	opt_STRONG_ContinuationReference_rdnsResolved (000000002)

    struct type_SECIF_Name *targetObject;

    integer     aliasedRDNs;

    struct type_STRONG_OperationProgress *operationProgress;

    integer     rdnsResolved;

    struct type_STRONG_ReferenceType *referenceType;

    struct type_STRONG_SETOFAccessPoint *accessPoints;
};
#define	free_STRONG_ContinuationReference(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZContinuationReferenceSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_SETOFAccessPoint {
        struct type_STRONG_AccessPoint *AccessPoint;

        struct type_STRONG_SETOFAccessPoint *next;
};
#define	free_STRONG_SETOFAccessPoint(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZSETOFAccessPointSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_AccessPoint {
    struct type_SECIF_Name *member_STRONG_3;

    struct type_STRONG_PSAPaddr *member_STRONG_4;
};
#define	free_STRONG_AccessPoint(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZAccessPointSTRONG], &_ZSTRONG_mod, 1)

struct type_STRONG_PSAPaddr {
    struct qbuf *pSelector;

    struct qbuf *sSelector;

    struct qbuf *tSelector;

    struct type_SEC_SETOFOctetString *nAddress;
};
#define	free_STRONG_PSAPaddr(parm)\
	(void) fre_obj((char *) parm, _ZSTRONG_mod.md_dtab[_ZPSAPaddrSTRONG], &_ZSTRONG_mod, 1)
#endif
