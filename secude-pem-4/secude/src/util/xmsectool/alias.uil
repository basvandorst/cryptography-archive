!OSF/Motif: @(#)alias.uil	2.2	93/10/07
!********************************************************************
!********************************************************************
!
!  SecuDE Release 4.2 (GMD)
!
!*******************************************************************
! Copyright (C) 1991, GMD. All rights reserved.                    *
!                                                                  *
!                                                                  *
!                         NOTICE                                   *
!                                                                  *
!    Acquisition, use, and distribution of this module             *
!    and related materials are subject to restrictions             *
!    mentioned in each volume of the documentation.                *
!                                                                  *
!*******************************************************************

!-----------------------alias.uil----------------------------------*
!                                                                  *
!------------------------------------------------------------------*
! GMD Darmstadt Institute for System Technic (I2)                  *
! Rheinstr. 75 / Dolivostr. 15                                     *
! 6100 Darmstadt                                                   *
! Project ``Secure DFN'' 1990 / "SecuDE" 1991/92/93                *
! Grimm/Nausester/Schneider/Viebeg/Vollmer 	                   *
! Luehe/Surkau/Reichelt/Kolletzki		                   *
!------------------------------------------------------------------*
!                                                                  *
! PROGRAM   xmst            VERSION   1.0                          *
!                              DATE   07.10.1993                   *
!                                BY   Kolletzki                    *
!                                                                  *
! MODULE    alias.uil                                              *
!                                                                  *
! DESCRIPTION                                                      *
! 	uil program for alias tool (included by main.uil)          *
!                                                                  *
!------------------------------------------------------------------*


!!!!!!!!!!!!!!!!!!!!!!!!!!
!!			!!
!!	Main Window	!!
!!			!!
!!!!!!!!!!!!!!!!!!!!!!!!!!

object
    atMainShell : XmMainWindow {
        controls {
            XmMenuBar     			at_menu_bar;
            XmForm        			at_form;
            
	    unmanaged XmInformationDialog 	ok_dialog;
	    unmanaged XmErrorDialog 		abort_dialog;
	    unmanaged XmErrorDialog 		cont_quit_dialog;
	    unmanaged XmErrorDialog 		retr_quit_dialog;
	    unmanaged XmWarningDialog 		cont_canc_dialog;
	    unmanaged XmWarningDialog 		save_loose_dialog;
	    unmanaged XmWarningDialog 		cont_show_dialog;
	    unmanaged XmSelectionDialog 	otheraliases_dialog;
	    unmanaged XmWarningDialog 		toolquit_dialog;
        };
	callbacks {
	    XmNdestroyCallback = procedure at_destroy_cb();
	};
    };


!!!!!!!!!!!!
!!
!!	Form
!!

object
    at_form : XmForm {
	arguments {
	    arguments	main_form_args;
	};
	controls {
	    XmForm	at_radio_form;
 	    XmForm	at_list_form;
	    XmForm	at_bot_form;
	};
    };
	


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!				!!
!!	Main Form Stuff		!!
!!				!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!





!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!
!!	Toggle & Radio Button
!!

object
    at_radio_form : XmForm {
	arguments {
	    arguments	radio_form_args;
	};
	controls {
	    XmForm	at_radio_left_form;
	    XmForm	at_radio_right_form;
	};
    };

object
    at_radio_left_form : XmForm {
	arguments {
	    arguments	radio_left_form_args;
	};
	controls {
	    XmRowColumn { 
	    	arguments {
		    XmNspacing = 0;
		};
	    	controls {
		    XmToggleButton 	at_user_toggle;
		    XmToggleButton 	at_system_toggle;
	    	};
	    };
	};
    };

object
    at_user_toggle : XmToggleButton {
    	arguments {
	    XmNlabelString = 'User Aliases';
	    XmNset = true;
	};
	callbacks {
	    XmNvalueChangedCallback = procedure at_file_toggle_cb();
	};
    };
    
object
    at_system_toggle : XmToggleButton {
    	arguments {
	    XmNlabelString = 'System Aliases';
    	};
	callbacks {
	    XmNvalueChangedCallback = procedure at_file_toggle_cb();
	};
    };
	   
object
    at_radio_right_form : XmForm {
	arguments {
	    arguments	radio_right_form_args;
	};
	controls {
	    XmRadioBox { 
	    	arguments {
		    XmNradioAlwaysOne = true;
	   	    XmNnumColumns = 2;
		    XmNspacing = 0;
		};
	    	controls {
		    XmToggleButton 	at_localname_toggle;
		    XmToggleButton 	at_nextbest_toggle;
		    XmToggleButton 	at_rfcmail_toggle;
		    XmToggleButton 	at_x400mail_toggle;
	    	};
	    };
	};
    };
	    
object
    at_localname_toggle : XmToggleButton {
    	arguments {
	    XmNlabelString = 'Local Name';
	    XmNset = true;
    	};
	callbacks {
	    XmNvalueChangedCallback = procedure at_type_toggle_cb();
	};
    };
	   
object
    at_nextbest_toggle : XmToggleButton {
    	arguments {
	    XmNlabelString = 'Next Best';
    	};
	callbacks {
	    XmNvalueChangedCallback = procedure at_type_toggle_cb();
	};
    };
	   
object
    at_rfcmail_toggle : XmToggleButton {
    	arguments {
	    XmNlabelString = 'Internet Mail Address';
    	};
	callbacks {
	    XmNvalueChangedCallback = procedure at_type_toggle_cb();
	};
    };
	   
object
    at_x400mail_toggle : XmToggleButton {
    	arguments {
	    XmNlabelString = 'X.400 Mail Address';
    	};
	callbacks {
	    XmNvalueChangedCallback = procedure at_type_toggle_cb();
	};
    };
	   



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!
!!	Alias List & Find Button/Textfield
!!

object
    at_list_form : XmForm {
	arguments {
	    arguments	at_list_form_args;
	};
	controls {
	    XmForm {
		arguments {
		    arguments	at_list_form2_args;
		};
		controls {
		    XmLabel		at_list_label;
		    XmDrawnButton	at_find_drawnbutton;
		    XmForm		at_find_textform;
		    XmScrolledList	at_list;
		};
	    };
	};
    };

object
    at_list_label : XmLabel {
	arguments {
	    arguments	listlabel_args;
	    XmNlabelString = 'Aliases for DNames';
	};
    };

object
    at_list : XmScrolledList {
	arguments {
	    arguments	scrolledlist_args;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmLabel at_list_label;
	    XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmDrawnButton at_find_drawnbutton;
	};
	callbacks {
	    XmNbrowseSelectionCallback = procedure at_aliaslist_action_cb();
	    XmNdefaultActionCallback = procedure at_aliaslist_action_cb();
	};
    };

object
    at_find_drawnbutton : XmDrawnButton {
	arguments {
	    arguments	at_button_args;
            XmNleftAttachment = XmATTACH_FORM;
	    XmNbottomAttachment = XmATTACH_FORM;
	    XmNbackgroundPixmap = find_icon;
	};
	callbacks {
	    XmNactivateCallback = procedure at_find_cb();
	};
    };

object
    at_find_textform : XmForm {
        arguments {
	    arguments	at_find_textform_args;
	};
	controls {
	    XmTextField		at_find_textfield;
	};
    };

object
    at_find_textfield : XmTextField {
	arguments {
	    arguments	edit_textfield_args;
	    XmNtopAttachment = XmATTACH_FORM;
	    XmNbottomAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_FORM;
	};
	callbacks {
	    XmNactivateCallback = procedure at_find_cb();
	    XmNfocusCallback = procedure textfield_focus_cb();
	    XmNlosingFocusCallback = procedure textfield_focus_cb();
	};
    };
	

!!!!!!!!!!!!!!!!!!!
!!
!!	Bottom Form
!!

object
    at_bot_form : XmForm {
	arguments {
	    arguments	at_bot_form_args;
	};
	controls {
	    XmForm	at_button_form;
	    XmForm	at_text_form;
	};
    };
	


!!!!!!!!!!!!!!!!!!!!
!!
!!	Push Buttons
!!

object
    at_button_form : XmForm {
	arguments {
	   arguments	at_button_form_args;
	};
	controls {
	    XmRowColumn {
		arguments {
		    XmNpacking = XmPACK_COLUMN;
	   	    XmNnumColumns = 2;
		};
		controls {
		! left
		    XmDrawnButton	at_apply_drawnbutton;
		    XmDrawnButton	at_clear_drawnbutton;
		    XmDrawnButton	at_change_drawnbutton;
		! right
		    XmDrawnButton	at_reset_drawnbutton;
		    XmDrawnButton	at_insert_drawnbutton;
		    XmDrawnButton	at_delete_drawnbutton;
		};
	    };
	};
    };

object
    at_apply_drawnbutton : XmDrawnButton {
	arguments {
	    arguments	at_button_args;
	    XmNbackgroundPixmap = apply_icon;
	};
	callbacks {
	    XmNactivateCallback = procedure at_apply_drawnbutton_cb();
	};
    };

object
    at_reset_drawnbutton : XmDrawnButton {
	arguments {
	    arguments	at_button_args;
	    XmNbackgroundPixmap = undo_icon;
	};
	callbacks {
	    XmNactivateCallback = procedure at_reset_drawnbutton_cb();
	};
    };

object
    at_clear_drawnbutton : XmDrawnButton {
	arguments {
	    arguments	at_button_args;
	    XmNbackgroundPixmap = clear_icon;
	};
	callbacks {
	    XmNactivateCallback = procedure at_clear_drawnbutton_cb();
	};
   };

object
    at_insert_drawnbutton : XmDrawnButton {
	arguments {
	    arguments	at_button_args;
	    XmNbackgroundPixmap = insert_icon;
	};
	callbacks {
	    XmNactivateCallback = procedure at_insert_drawnbutton_cb();
	};
    };

object
    at_change_drawnbutton : XmDrawnButton {
	arguments {
	    arguments	at_button_args;
	    XmNbackgroundPixmap = change_icon;
	};
	callbacks {
	    XmNactivateCallback = procedure at_change_drawnbutton_cb();
	};
    };

object
    at_delete_drawnbutton : XmDrawnButton {
	arguments {
	    arguments	at_button_args;
	    XmNbackgroundPixmap = cut_icon;
	};
	callbacks {
	    XmNactivateCallback = procedure at_delete_drawnbutton_cb();
	};
    };




!!!!!!!!!!!!!!!!!!!
!!
!!	Text Fields
!!

object
    at_text_form : XmForm {
	arguments {
	    arguments	at_text_form_args;
	};
	controls {
	    XmTextField		at_dname_textfield;
	    XmTextField		at_localname_textfield;
	    XmTextField		at_rfcmail_textfield;
	    XmTextField		at_x400mail_textfield;
	    XmLabel 		at_dname_label;
	    XmLabel 		at_localname_label;
	    XmLabel 		at_rfcmail_label;
	    XmLabel 		at_x400mail_label;
	    XmPushButton	at_others_pushbutton;
	};
    };

object
    at_dname_label : XmLabel {
	arguments {
	    arguments	at_textlabel_args;
	    XmNtopAttachment = XmATTACH_FORM;
	    XmNlabelString =  compound_string("DName:");
	};
    };
object
    at_localname_label : XmLabel {
	arguments {
	    arguments	at_textlabel_args;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmLabel at_dname_label;
	    XmNlabelString =  compound_string("Local Name:");
	};
    };
object
    at_rfcmail_label : XmLabel {
	arguments {
	    arguments	at_textlabel_args;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmLabel at_localname_label;
	    XmNlabelString =  compound_string("Internet Mail:");
	};
    };
object
    at_x400mail_label : XmLabel {
	arguments {
	    arguments	at_textlabel_args;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmLabel at_rfcmail_label;
	    XmNlabelString =  compound_string("X.400 Mail:");
	};
    };

object
    at_dname_textfield : XmTextField {
	arguments {
	    arguments	edit_textfield_args;
	    XmNtopAttachment = XmATTACH_FORM;
	    XmNleftAttachment = XmATTACH_WIDGET;
	    XmNleftWidget = XmLabel at_dname_label;
	};
	callbacks {
	    XmNfocusCallback = procedure textfield_focus_cb();
	    XmNlosingFocusCallback = procedure textfield_focus_cb();
	};
    };
object
    at_localname_textfield : XmTextField {
	arguments {
	    arguments	edit_textfield_args;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmTextField at_dname_textfield;
	    XmNleftAttachment = XmATTACH_WIDGET;
	    XmNleftWidget = XmLabel at_localname_label;
	};
	callbacks {
	    XmNfocusCallback = procedure textfield_focus_cb();
	    XmNlosingFocusCallback = procedure textfield_focus_cb();
	};
    };
object
    at_rfcmail_textfield : XmTextField {
	arguments {
	    arguments	edit_textfield_args;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmTextField at_localname_textfield;
	    XmNleftAttachment = XmATTACH_WIDGET;
	    XmNleftWidget = XmLabel at_rfcmail_label;
	};
	callbacks {
	    XmNfocusCallback = procedure textfield_focus_cb();
	    XmNlosingFocusCallback = procedure textfield_focus_cb();
	};
    };
object
    at_x400mail_textfield : XmTextField {
	arguments {
	    arguments	edit_textfield_args;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmTextField at_rfcmail_textfield;
	    XmNleftAttachment = XmATTACH_WIDGET;
	    XmNleftWidget = XmLabel at_x400mail_label;
	};
	callbacks {
	    XmNfocusCallback = procedure textfield_focus_cb();
	    XmNlosingFocusCallback = procedure textfield_focus_cb();
	};
    };
	
object
    at_others_pushbutton : XmPushButton {
	arguments {
	    arguments	listpushbutton_args;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmTextField at_x400mail_textfield;
	    XmNbottomAttachment = XmATTACH_FORM;
	    XmNlabelString = 'Aliases Dialog';
	};
	callbacks {
	    XmNactivateCallback = procedure at_otheraliases_pushbutton_cb();
	};
    };
	


	   
		
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!		
!!				!!
!!	Main Menu Stuff		!!			
!!				!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!
!!	MenuBar
!!

object
    at_menu_bar : XmMenuBar {
	arguments {
            XmNorientation = XmHORIZONTAL;
	    XmNmenuHelpWidget = XmCascadeButton at_help_button;
	};
	controls {
            XmCascadeButton	at_tools_button;
            XmCascadeButton 	at_properties_button;
            XmCascadeButton 	at_help_button;
        };
    };


!!
!!	CascadeButtons
!!

object
    at_tools_button : XmCascadeButton {
	arguments {
	    XmNlabelType = XmPIXMAP;
	    XmNlabelPixmap = at_tools_icon;
	};
        controls {
            XmPulldownMenu {
        	controls {
            	    XmCascadeButton 	at_about_button;
            	    XmPushButton 	at_sectool_button;
            	    XmPushButton 	at_directory_button;
            	    XmPushButton 	at_keypool_button;
    	    	    XmSeparator {};
    	    	    XmPushButton 	at_viewer_button;
    	    	    XmPushButton 	at_debug_button;
    	    	    XmPushButton 	at_config_button;
    	    	    XmSeparator {};
        	    XmPushButton 	at_xlock_button;
    	    	    XmSeparator {};
    	    	    XmPushButton 	at_close_button;
    	    	    XmPushButton 	at_quit_button;
		};
	    };
        };
    };

object
    at_about_button : XmCascadeButton {
	arguments {
	    XmNlabelString = 'About';
	};
	controls {
	    XmPulldownMenu {
		controls {
		    XmPushButton {
			arguments {
			    XmNlabelString = compound_string('',separate=true) &
					     compound_string('        AliasTool 1.0',separate=true) &
					     compound_string('        for SecuDE 4.3',separate=true) &
					     compound_string(' (c)GMD Darmstadt 1994 ',separate=true) & '';
			};
		    };
		};
	    };
        };
    };

object
    at_sectool_button : XmPushButton {
	arguments { 
	    XmNlabelString = 'SecTool';
	};
	callbacks { 
	    XmNactivateCallback = procedure at_sectool_button_cb();
	};
    };

object
    at_directory_button : XmPushButton {
	arguments { 
	    XmNlabelString = 'Directory Browser';
	};
	callbacks { 
	    XmNactivateCallback = procedure at_directory_button_cb();
	};
    };

object
    at_keypool_button : XmPushButton {
	arguments {
	    XmNlabelString = 'Keypool';
	};
	callbacks {
	    XmNactivateCallback = procedure at_keypool_button_cb();
	};
    };

object
    at_viewer_button : XmPushButton {
	arguments { 
	    XmNlabelString = 'Viewer...';
	};
	callbacks { 
	    XmNactivateCallback = procedure at_viewer_button_cb();
	};
    };

object
    at_debug_button : XmPushButton {
	arguments { 
	    XmNlabelString = 'Error Log...';
	};
	callbacks { 
	    XmNactivateCallback = procedure at_debug_button_cb();
	};
    };

object
    at_config_button : XmPushButton {
	arguments {
	    XmNlabelString = 'Configuration...';
	};
	callbacks { 
	    XmNactivateCallback = procedure at_config_button_cb();
	};
    };

object
    at_xlock_button : XmPushButton {
	arguments { 
	    XmNlabelString = 'Lock Screen';
	};
	callbacks { 
	    XmNactivateCallback = procedure at_xlock_button_cb();
	};
    };

object
    at_close_button : XmPushButton {
	arguments { 
	    XmNlabelString = 'Close Tool';
	};
	callbacks { 
	    XmNactivateCallback = procedure at_close_button_cb();
	};
    };

object
    at_quit_button : XmPushButton {
	arguments { 
	    XmNlabelString = 'Quit';
	};
	callbacks { 
	    XmNactivateCallback = procedure at_quit_button_cb();
	};
    };




object
    at_properties_button : XmCascadeButton {
	arguments {
	    XmNlabelString = 'Properties';
	};
        controls {
            XmPulldownMenu {
        	controls {
		};
            };
        };
    };

object
    at_help_button : XmCascadeButton {
	arguments {
	    XmNlabelString = 'Help';
	};
        controls {
            XmPulldownMenu {
        	controls {
	    	    XmPushButton {
			arguments {
		    	    XmNlabelString = 'Overview...';
			};
		    };
		    XmPushButton {
			arguments {
			    XmNlabelString = 'Tutorial...';
			};
		    };
            	};
            };
        };
    };






!!
!!	aliastool
!!
!!
!!	end of include file
!!
!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!



