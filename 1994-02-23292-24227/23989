Path: msuinfo!agate!howland.reston.ans.net!wupost!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Re: another amateur cipher scheme...
Date: Tue, 22 Feb 94 00:10:25 CST
Organization: University of Missouri, Columbia
Lines: 23
Message-ID: <16F65275S86.C445585@mizzou1.missouri.edu>
References: <2j81vl$n80@cnn.MOTOWN.GE.COM> <jktaberCLH3x7.176@netcom.com>
NNTP-Posting-Host: mizzou1.missouri.edu

In article <jktaberCLH3x7.176@netcom.com>
jktaber@netcom.com (John K. Taber) writes:
 
 
>I've been playing some more with this idea.  I've changed it so that each
>encrypting byte generated is ADDED (not XORed) back into the rotors at
>the ith position.  I'm using vector v of 17 random bytes.  v is partitioned
>into 4 rotors of lengths 2 3 5 and 7 (just to keep things simple).  The
>current position on each rotor is added (not XORed) to form a byte encryption
>key.  This key is then added to the ith byte in v.
 
   Just one suggestion:  When you add numbers modulo a power of two (you're
probably letting roundoff error take care of that for you--adding modulo 256),
no bit to the left of a bit i can ever affect it, no matter how many times
you iterate through the scheme.  To use this as a PRNG (and I can't imagine
it being seriously used for anything cryptographic), you might want to rotate
the rotor bytes somehow, or maybe add back in the previous output value,
rotated 1 bit left.  Otherwise, your low-order bit is still just a straight
XOR of the rotor bits that went into making it....
 
>John K. Taber                        jktaber@netcom.com
 
   --John Kelsey, c445585@mizzou1.missouri.edu
