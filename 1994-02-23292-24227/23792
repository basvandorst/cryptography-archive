Newsgroups: sci.crypt
Path: msuinfo!harbinger.cc.monash.edu.au!yeshua.marcam.com!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!wupost!gumby!yale!cs.yale.edu!news-mail-gateway!daemon
From: Grant@DOCKMASTER.NCSC.MIL (Lynn R Grant)
Subject: Re: CARD FRAUD AND COMPUTER EVIDENCE -re ACF2, IBM Mainframes
Message-ID: <940216174140.611759@DOCKMASTER.NCSC.MIL>
Sender: Grant.CA1@DOCKMASTER.NCSC.MIL
Organization: Yale CS Mail/News Gateway
Date: Wed, 16 Feb 1994 17:41:00 GMT
Lines: 92

On 16 Feb 1994 02:33:03 -0500 (EST), mike@avon.demon.co.uk ("Mike H.")
wrote about the ease of bypassing security on MVS mainframes by systems
programmers.  This deserves a bit of clarification, as the problems
he speaks of have more to do with how the system is administered than
with its architecture.

The IBM System/370 architecture, which MVS runs on, is basically a
two-state machine.  The operating system protects itself from
corruption or subversion by unauthorized programs by keeping its
important control blocks in storage that is accessible only to
authorized programs (there are problem and supervisor states,
and there are problem and supervisor storage keys; for purposes of
this discussion, we can lump them together into "problem mode"
(unauthorized) and "supervisor mode" (authorized).)

When a problem-mode program needs a system service, it issues a
supervisor call (SVC) instruction, which puts the system into
supervisor mode and calls a predefined supervisor routine from a
protected location.  Since this routine is part of the supervisor, it
has the responsibility of verfiying the addresses passed by the caller
to see that he is not trying to access something he shouldn't, and that
sort of thing.

In a secure system, SVC routines, as well as any routine in an authorized
library (there is a special SVC that allows programs from authorized
libraries to get into supervisor mode) must be carefully protected, and
access to the libraries restricted to trusted systems programmers.

The problem is that in the past, systems programmers were not considered
a part of the security team, and security officers were not technically
savvy.  The systems programmers, irritated that security was getting
in their way, would install what came to be known as "magic SVCs",
which would put the system in supervisor mode and return directly to
the caller.  This allowed *any* program to run in supervisor mode.

The security officers, not being technically sharp, never realized
what was happening.

This is why NCSC-rated systems specify that there is to be no
installation-supplied authorized code, and that a vendor-supplied
installation process is to be strictly followed.  (Of course, most
shops running NCSC-rated systems do have their own authorized code,
but it is something one must be careful about.  And a rated system
with authorized user code is no longer a rated system.)

The systems programmer is part of the security team.  If your systems
programmer is not trustworthy, and if you do not have sufficient configuration
management to help him stay trustworthy, then you are in trouble.

If you give an untrusted programmer access to an authorized library, even
once, he can install a program that he can later use to get into supervisor
mode and do what ever he wants.  The nature of a two-state architecture is
that a program in supervisor mode is unfettered.  This has nothing to do
with whether or not the security system keeps its profiles in storage or
how integrated into the operating system it is, but with the fact that
that only the supervisor should be allowed to use supervisor mode, and
that supervisor mode allows the supervisor to change its own data.

I have often heard it said that a good systems programmer can break any
system.  If you give him access to the system libraries, and let him modify
them as he will, this is certainly true.  Similarly, if you hire a crook
for the comptroller of your company and put no checks on him, he can
embezzle all your money.  On the other hand, I am not convinced that
a good systems programmer who has only user access to a system can
break it if it is properly administered.  (I certainly try to design
systems that I can't break.)

Having said all that, I would agree with Mike that this particular
bank's computers are probably not 100% secure, or even close,
particularly judging from the attitude they seem to display.
There are a lot of businesses that still do not understand the
importance of security.  For some mystifying reason, many of them
seem to be banks.  But as a MVS vendor, I wanted to clarify that
MVS can be installed in a secure manner, if the customer cares
enough to do so, and isn't just installing ACF2 to satisfy a
comment from the auditors.

One final clarification: As Mike says, CA-ACF2 can be certified at
the B1 level (actually, the proper term is "evaluated"; "certified"
has a different meaning to the U.S. government folks, having to do
with accessing the product as installed at a particular site and
for a particular use).  It has not yet received the B1 rating, but
is currently in evaluation with the National Computer Security
Center.  In the past, ACF2 has received a C2 rating from the
center.

---------------------------------------------------------------------------
Lynn Grant
CA-ACF2 development
Computer Associates International, Inc.
Grant@Dockmaster.NCSC.MIL
---------------------------------------------------------------------------
