Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!csulb.edu!csus.edu!netcom.com!jktaber
From: jktaber@netcom.com (John K. Taber)
Subject: Re: another amateur cipher scheme...
Message-ID: <jktaberCLH3x7.176@netcom.com>
Organization: None, I'm disorganized
X-Newsreader: TIN [version 1.2 PL1]
References: <2j81vl$n80@cnn.MOTOWN.GE.COM>
Date: Sat, 19 Feb 1994 13:24:42 GMT
Lines: 30

Peter C. Bosch, X3549 (pbosch@epi042.gesd) wrote:
: Comments on viability of this crypto-algorithm?

[snipped cipher description]

I've been playing some more with this idea.  I've changed it so that each
encrypting byte generated is ADDED (not XORed) back into the rotors at
the ith position.  I'm using vector v of 17 random bytes.  v is partitioned
into 4 rotors of lengths 2 3 5 and 7 (just to keep things simple).  The
current position on each rotor is added (not XORed) to form a byte encryption
key.  This key is then added to the ith byte in v.

Is it any good?  Don't know, haven't tested it for randomness with any
thoroughness.  But it's interesting.  I run it 1000 bytes at a crack.
Distribution of odds and evens (easy to test) appears good.  Distribution
of byte values for 1000 bytes seems good to the eyeballs (haven't done
the math yet).  And the average byte value seems to splatter nicely 
around expected 1000/256 (again, haven't done the math).

It's sensitive to the index.  If I don't keep it current the output soon
loses the odd numbers.  

I have a bunch of stats programs for chi-squared, runs, etc., that I mean
to run real soon now.

Is anybody familiar with this kind of rng?

-- 
John K. Taber                        jktaber@netcom.com
=======================================================
