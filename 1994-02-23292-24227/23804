Path: msuinfo!agate!howland.reston.ans.net!pipex!demon!avon.demon.co.uk!mike
Newsgroups: sci.crypt
From: mike@avon.demon.co.uk ("Mike H.")
Subject: Re: CARD FRAUD AND COMPUTER EVIDENCE -re ACF2, IBM Mainframes
References: <940216174140.611759@DOCKMASTER.NCSC.MIL>
X-Mailer: Umail1.10 (c) mike@avon.demon.co.uk '94
Date: Wed, 16 Feb 1994 21:44:00 +0000
Message-ID: <02161994214442@avon.demon.co.uk>
Sender: usenet@demon.co.uk
Lines: 105

 
In article <940216174140.611759@DOCKMASTER.NCSC.MIL> Grant@DOCKMASTER.NCSC.MIL writes...

->From: Grant@DOCKMASTER.NCSC.MIL (Lynn R Grant)
        ^^^^^^^^^^^^^^^^ Hmmm. This name seems mighty familiar :-)
        
->
->On 16 Feb 1994 02:33:03 -0500 (EST), mike@avon.demon.co.uk ("Mike H.")
->wrote about the ease of bypassing security on MVS mainframes by systems
->programmers.  This deserves a bit of clarification, as the problems
->he speaks of have more to do with how the system is administered than
->with its architecture.

To be honest, I didn't wish to say that it was easy, merely possible.
->
->The IBM System/370 architecture, which MVS runs on, is basically a
->two-state machine.  The operating system protects itself from
->corruption or subversion by unauthorized programs by keeping its

These days yes.

->In a secure system, SVC routines, as well as any routine in an authorized
->library (there is a special SVC that allows programs from authorized
->libraries to get into supervisor mode) must be carefully protected, and
->access to the libraries restricted to trusted systems programmers.
                                        ^^^^^^^^^^^^^^^ And herein is the 
                                                                     flaw.
->which would put the system in supervisor mode and return directly to
->the caller.  This allowed *any* program to run in supervisor mode.

There is also a legitimate requirement in some environments such as TSO 
where you want to make use of authorised services....

->
->The security officers, not being technically sharp, never realized
->what was happening.

Not always true... 

->
->This is why NCSC-rated systems specify that there is to be no
->installation-supplied authorized code, and that a vendor-supplied
->installation process is to be strictly followed.  (Of course, most
->shops running NCSC-rated systems do have their own authorized code,
->but it is something one must be careful about.  And a rated system
->with authorized user code is no longer a rated system.)

It does tend to be unavoidable. Secure systems wish to do extra checking. 
This requires authorisation etc etc. There is a secondary problem that it 
may be possible to call an authorised service with an invalid parameter and 
cause it to abend - leaving you (perhaps) in an authorised state.

->
->If you give an untrusted programmer access to an authorized library, even
->once, he can install a program that he can later use to get into supervisor
->mode and do what ever he wants.  The nature of a two-state architecture is
->that a program in supervisor mode is unfettered.  This has nothing to do

Very true indeed.

->with whether or not the security system keeps its profiles in storage or
->how integrated into the operating system it is, but with the fact that
->that only the supervisor should be allowed to use supervisor mode, and
->that supervisor mode allows the supervisor to change its own data.

True.
->
->I have often heard it said that a good systems programmer can break any
->system.  If you give him access to the system libraries, and let him modify
->them as he will, this is certainly true.  Similarly, if you hire a crook
->for the comptroller of your company and put no checks on him, he can
->embezzle all your money.  On the other hand, I am not convinced that
->a good systems programmer who has only user access to a system can
->break it if it is properly administered.  (I certainly try to design
->systems that I can't break.)

The stress here is on 'properly administered'.
->
->Having said all that, I would agree with Mike that this particular
->bank's computers are probably not 100% secure, or even close,
->particularly judging from the attitude they seem to display.

It is there attitude that scares me. No-one who works with MVS systems or 
crypto would say such a blase statement.

->One final clarification: As Mike says, CA-ACF2 can be certified at
->the B1 level (actually, the proper term is "evaluated"; "certified"
->has a different meaning to the U.S. government folks, having to do
->with accessing the product as installed at a particular site and
->for a particular use).  It has not yet received the B1 rating, but
->is currently in evaluation with the National Computer Security
->Center.  In the past, ACF2 has received a C2 rating from the
->center.

I was a little fuzzy from memory on the comparitive rating of ACF2. I am 
familiar with both ACF2 and RACF. I have to say that I have a leaning 
towards RACF. However ACF2 is probably harder to break.

________________________________________________________________________________
 
  Mike H. (Software Sans Frontieres)  PGP:818C97EB 75366540  8A27D2AB 8E7482CB 
         Umail 1.10 is available from ftp.demon.co.uk:/pub/ibmpc/umail 
________________________________________________________________________________


