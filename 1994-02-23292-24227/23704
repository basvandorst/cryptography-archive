Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!uunet!mnemosyne.cs.du.edu!nyx10!colin
From: colin@nyx10.cs.du.edu (Colin Plumb)
Subject: Re: GOST standard
Message-ID: <1994Feb13.044514.19239@mnemosyne.cs.du.edu>
X-Disclaimer: Nyx is a public access Unix system run by the University
 	of Denver for the Denver community.  The University has neither
 	control over nor responsibility for the opinions of users.
Keywords: GOST standard
Sender: usenet@mnemosyne.cs.du.edu (netnews admin account)
Organization: Nyx, Public Access Unix at U. of Denver Math/CS dept.
References: <2j5jmu$6dc@hobbes.cc.uga.edu>
Date: Sun, 13 Feb 94 04:45:14 GMT
Lines: 38

In article <2j5jmu$6dc@hobbes.cc.uga.edu>,
Hahn(Han) <han@joe.math.uga.edu> wrote:
>I am looking for literatures about GOST standard.
>I saw some posting about published papers about GOST.
>But I could not get any reply from the original posters.
>
>Is there any public source describing GOST in detail ?

Here's all the detail you need:

GOST is just like the DES, except:
- It is uniformly little-endian in its nomenclature
- There are 32 rather than 16 rounds
- The key is 8 32-bit words (256 bits)
- The f function, which in DES is expand, XOR with subkey, substitute,
  and permute, is simpler in the GOST cipher.  To wit:
  - There is no expansion
  - You add (mod 2^32) 32 bits of subkey each round
  - You then pass the result through a bank of 4->4 bit S-boxes
  - You then rotate the result left (i.e. in the direction of the
    carries in the previous addition) 11 bits.

The subkeys are the 8 words, used in the order 0-7,0-7,0-7,7-0 during
encryption and 0-7,7-0,7-0,7-0 during decryption.

The S-boxes are NOT SPECIFIED by the standard..  In the sample code
I have written for Bruce Schneier's Applied Cryptography disks, I used
the first line of the 8 DES s-boxes, but for real use some careful
analysis should go into the design.
-- 
	-Colin
>Or anyone in Russia perhaps ?
>
>S. Hahn 
>
>


