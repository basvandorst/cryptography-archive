Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!xlink.net!zib-berlin.de!fauern!news.dfn.de!gwdu03.gwdg.de!slucks
From: slucks@gwdu03.gwdg.de (Stefan Lucks )
Subject: Re: Failure of some pseudo-random generators
Message-ID: <W8TLBC0P@gwdu03.gwdg.de>
Keywords: Bias of shift register sequences
Organization: GWDG, Goettingen
References: <2i78jm$8ha@hobbes.cc.uga.edu> <2j6mav$1nn@solaris.cc.vt.edu>
Date: Wed, 9 Feb 1994 11:18:55 GMT
Lines: 55

spn@mprg1.mprg.ee.vt.edu (Shawn Neugebauer) writes:

>In article <2i78jm$8ha@hobbes.cc.uga.edu>, han@joe.math.uga.edu (Hahn(Han)) writes:
>|>  [ ... ]                     Are pseudo-random number generators
>|> used in cryptology much better than the ones used in Monte Carlo
>|> simulation ? (Yes, I am trying to contact them.)

>I have several other articles which describe (some in extreme
>mathematical detail) the structure of many of the most common PN sequence
>generators and how to crack them.  However, the most commond generators
>are not (from my limited experience) used in crypto systems since there
>are much more secure PN sequence generators, some especially designed
>for crypto.

I'll try do give a short explanation of the difference between "normal"
pseudo-number generators (PNG) and cryptographic ones:

    -	A statistical test is given either a pseudo-random or a random
	sequence of numbers. The test guesses, wether the input is
	pseudorandom or random.

    -	A RNG doesn't pass a statistical test, if the test guesses right
	with the probability 0.5 + epsilon (for some epsilon>0).

    - 	"Normal" RNGs must pass SOME statistical tests (e.g. the famous 
	chi^2 test). See Knuth II.

    -	Cryptographic RNGs must pass ALL statistical tests which can be
	done in polynomial time.

It seems to be difficult to prove that there are no polynomial time sta-
tistical test for a given random number generators.

The best known cryptographic random number generators have the following
property:

IF there is a polynomial time statistical test to decide wether a given
number sequence is random or the Output of the RNG G with probability
0.5 + epsilon, THEN this test can be used to construct a polynomial time
algorithm for factoring (of for computing the discrete logarithm).

>Does anyone have references that they could post??  We could trade.

See the overview article from J.C. Lagarias:
    "Pseudorandom number Generators in Cryptography and Number Theory",
which can be found in 
    "Cryptology and Compuational Number Theory"
by C. Pomerance (ed.), American Mathematical Society, 1990.

	Stefan

-- 
Stefan Lucks  Institut f"ur Numerische und Angewandte Mathematik,
              Lotzestra\3e 16-18,   37083 G"ottingen,   Germany
e-mail: lucks@namu01.gwdg.de (oder slucks@gwdu03.gwdg.de)
