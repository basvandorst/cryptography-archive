Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!xlink.net!rz.uni-karlsruhe.de!stepsun.uni-kl.de!uklirb!posthorn!bloch!neuhaus
From: neuhaus@bloch.informatik.uni-kl.de (Stephan Neuhaus (DA Sturm))
Subject: Re: RNG's
Message-ID: <neuhaus.760301318@bloch>
Keywords: rng, prng
Sender: news@posthorn.informatik.uni-kl.de (News system account)
Nntp-Posting-Host: bloch.informatik.uni-kl.de
Organization: University of Kaiserslautern, Germany
References: <CKLKvL.77q@crash.cts.com>
Date: Thu, 3 Feb 1994 18:48:38 GMT
Lines: 29

kephart@crash.cts.com (Wray Kephart) writes:

>When a random 1 or 0 was required, you
>read the serial port. WRONG! The chip output was random however there
>existed a _slight_ difference between the rise and fall times of the buffer.
>This gave the data a slight skew towards 1's (slower rise, faster fall).

This is true, but you can still use this device to generate uniformly
distributed random numbers.  The trick allegedly goes back to von
Neumann.  He used it to get a completely unbiased decision out of a
probably biased coin.  You simply read your serial line until you get
two different bits in a row.  Then you map 01 -> 1 and 10 -> 0 or vice
versa.  This *assumes* that the bits as read from the serial line are
independent.  (Proof: Since the bits are independent, we have P(01) =
P(0)*P(1) = P(10) and hence your decision is completely unbiased.)

>My advice to anyone seriously requiring
>a source of truly random numbers is to buy the commercial version of a
>'randomizer' chip.

Despite of what I said above, this remains good advice because noone
can guarantee that the serial line delivers independent bits.

Have fun.

-- 
Stephan <neuhaus@informatik.uni-kl.de>
sig closed for inventory.  Please leave your pickaxe outside.
PGP 2.2 public key available on request.  Note the expiration date.
