Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!uunet!cds8604!Cadence.COM!lou
From: lou@Cadence.COM (Louis K. Scheffer)
Subject: Re: Factoring N=P*Q vs. general factoring
Message-ID: <lou.761675381@cadence.com>
Sender: usenet@Cadence.COM (Usenet News)
Nntp-Posting-Host: caber.cadence.com
Organization: Cadence Design Systems, Inc.
References: <2jqpre$6j1@fbi-news.informatik.uni-dortmund.de> <2jt8ii$ioa@linus.mitre.org>
Date: Sat, 19 Feb 1994 16:29:41 GMT
Lines: 23

In <2jt8ii$ioa@linus.mitre.org> bs@gauss.mitre.org (Robert D. Silverman) writes:

>Either a method depends on the size of the factors or it does not.
>If it does, then that method will find it harder to factor N = pq,
>(p ~ q ~ sqrt(N)) than an N which has small factors.

This is not clear to me.  Suppose it depends on the size of the factors,
but not in the simple way "bigger->slower".  For example, I think there
is an algorithm which works better if the two factors are roughly equal
in size.  (This is from some very early RSA articles, which said the
primes should be a few digits different in length.)  In this case,
factoring a p*q number gets easier as the smaller factor gets bigger.

>This is a trivial observation that is independent of the
>state-of-the-art.

Maybe too trivial to be correct.  I think the original poster's point was:
"How do we know that there isn't some great factoring method that works
ONLY on p*q numbers?"  If such a scheme exists, then you might want to use
the products of 3 primes, for example, even though this would make the
factoring with existing algorithms easier.

   Lou Scheffer
