Path: msuinfo!harbinger.cc.monash.edu.au!bruce.cs.monash.edu.au!merlin!mel.dit.csiro.au!its.csiro.au!dmssyd.syd.dms.CSIRO.AU!metro!ultima!acacia!mgream
From: M.Gream@uts.edu.au (Matthew Gream)
Newsgroups: sci.crypt
Subject: Re: Wanted: Information or just name on/of algorithm.
Date: 6 Feb 1994 23:37:08 GMT
Organization: University of Technology, Sydney.
Lines: 39
Message-ID: <2j3uv4$7fr@lucy.socs.uts.EDU.AU>
References: <583_9402051832@consgate.hacktic.nl>
NNTP-Posting-Host: acacia.socs.uts.edu.au
X-Newsreader: TIN [version 1.2 PL2]

somedude (somedude@consgate.hacktic.nl) wrote:

> I'm desperately looking for an algorithm suitable to crypt character-based (!)
> data transmission, so no blocks, no
> checksums on these blocks.

This is possible, but remember that without _any_ ARQ techniques, you
should never expect to receive an accurate copy of the transmitted 
information.

> I know garbling is a real life problem, but a bit of line noise (on an
> unencrypted line)
> is not a problem. The problem is that most algorithms
> loose track entirely after just a bit of garbage, making the rest of the data
> sent totally useless, as it isn't being
> decrypted into it's original plaintext anymore.

> Is there an algorithm that doesn't have this problem,
> or a "trick" in combination with an
> algorithm to avoid this problem?
> The need for synchronisation between the two computers would be sure to kill
> the entire project.

You might want to consider using a block cipher (such as DES or IDEA) in
8bit cipher-feedback (CFB) mode. In this mode of operation they are self-
syncronous, which is to stay that any ciphertext errors will only propgate
and corrupt an entire blocksize. For a blocksize of 64bits, this means
one erroneous octet results in eight corrupt octets. No syncronisation 
procedures are required by either end, except for the initial key and IV
loading.

Of course, this can be pretty bad if your channel has a high error rate,
you could never see any valid data! Maybe you can think about Forward
Error Correcting codes if bandwidth isn't a problem ?

Matthew.
--
Matthew Gream, ph: (02)-821-2043
	M.Gream@uts.edu.au.
