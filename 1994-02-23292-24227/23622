Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!wupost!decwrl!decwrl!netcomsv!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: another amateur cipher scheme...
Message-ID: <phrCKzGs8.FGJ@netcom.com>
Organization: Netcom - Online Communication Services (408 241-9760 guest)
References: <2j81vl$n80@cnn.MOTOWN.GE.COM>
Date: Thu, 10 Feb 1994 00:45:43 GMT
Lines: 31

In article <2j81vl$n80@cnn.MOTOWN.GE.COM> pbosch@epi042.gesd writes:
>I have seven wheels (circular buffers) with 3, 5, 7, 11, 13, 17, & 23
>positions on each, respectively.  Each position holds a random number.
>At the start of a message, I align all wheels to the top-dead-center
>position.  I take the first character of the plaintext, xor with each 
>wheel's top number in succession, deriving my ciphertext.  I advance 
>each wheel one position, and repeat with the next character.  I can 
>optionally have an eighth wheel, containing a password.
>
>I think it gives me, in essence, a 4,800,000 character pseudorandom xor
>sequence with random access capability into a file, a relatively quick
>implementation, and bidirectionality ( for what that's worth... )

There is an easy known-plaintext attack for this.  Assume
for simplicity that the known plaintext is 23 characters that are all
0's (you can work out the details if they're not all 0's).  Let the
random numbers on the first wheel be (a1, a2, a3), the second wheel be
(b1, b2, ... b5), and so on.  The encrypted version of the block of
zeros is (z1, z2, z3, ..., z23).  Then you know that
	z1 = a1 + b1 + c1 + ... + g1  (for 7 wheels)
	z2 = a2 + b2 + ... + g2
	z3 = a3 + b3 + ... + g3
	z4 = a1 + b4 + ... + g4
	z5 = a2 + b5 + ... + g5
	z6 = a3 + b1 + ... + g6
	...
	z23 = a2 + b3 + c2 + d2 + e10 + f6 + g23
All additions are mod 2 (ie they are xor's).  Note how the wheels all
cycle.  Anyway, since all the z's are known, you have a set of 23
linear equations (mod 2) in 23 unknowns that you can solve with Gaussian
elimination.  This gives you all the random numbers on all the wheels.
