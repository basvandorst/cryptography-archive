Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!news.kei.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!senator-bedfellow.mit.edu!not-for-mail
From: tytso@ATHENA.MIT.EDU (Theodore Ts'o)
Newsgroups: sci.crypt
Subject: Re: Non invertible encryption
Date: 26 Feb 1994 10:39:02 -0500
Organization: The Internet
Lines: 132
Sender: news@athena.mit.edu
Distribution: world
Message-ID: <2knqem$o40@senator-bedfellow.MIT.EDU>
Reply-To: tytso@ATHENA.MIT.EDU (Theodore Ts'o)
NNTP-Posting-Host: senator-bedfellow.mit.edu

   From: Colin James <cjames@dsc.blm.gov>
   X-Mailer: SCO System V Mail (version 3.2)

   Who is the academic / industrial (non NSA) authority(s) on the subject.

Dr. Burt Kaliski, Ph.D is certinaly one of the authorities; so is
Professor Ron Rivest at MIT.  Unfortunately, you may consider their
views biased.  :-)

Seriously, though, I suggest you find any professor in mathematics, and
ask them; the mathematics involved here are not hard.  My degree was in
computer science, but nevertheless, it seems fairly clear to me that
Bill Payne has convinced himself that he has "squared the circle", and
is squawking because no one is taking him seriously.

If he really thinks RSA is so easy to crack, he should take some
well-known public key, say one of RSADSI's PEM Public Certification
Authority public keys, and demonstrate that he knows the factors of
them.  That will get him immediate attention, I promise you!

   Here are the details why RSA is broken (so Ada developers of RSA
   and DES algorithms will know)......

	3.  The letter of Bill Payne to Kaliski of January 30, 1994
   pointing out an enormous blunder by Kaliski in his "post". 

There were no enormous blunders by Dr. Kaliski, at least that I can
detect.  Let's review what was said in Payne's letter:

   Your statement, "Given phi(n) one can easily find p and q, so a
   method that finds phi(n) also factors n.", I believe is false.

   Knowledge of phi(n) does not always lead to factors of n.

Only a few minutes thought is required to show that Dr. Kaliski's
statement is true.  Given n and phi(n), where n=pq, it is trivial to
find p and q.  In fact, it is so obvious that I can't fault Dr. Kaliski
for not including the proof.  (I'm not sure it would even make it as a
homework question on an undergraduate math course.  :-)  Considering that
Payne was not able to figure this out, my respect of him as a
mathematician has taken another quantuum leap downward.  Consider, and
judge for yourself:

	Phi(n) = (p-1)(q-1)		(Definition of Phi(n))
	Phi(n) = pq - q - p + 1		(polynomial expansion)
	Phi(n) = n - q - p + 1		(substitution of n=pq)
	p = n - Phi(n) + 1 - q		(rearranging the above)
	
Since n and Phi(n) is known, one can easily compute n - Phi(n) + 1.
So let K = n - Phi(n) + 1.

	p = K - q			(from definition of K)
	n = (K-q)q			(from n=pq)
	n = Kq - q^2			(algebraic manipulation)

We now solve for q using the quadratic formula, and I will leave the
rest as an exercise to the reader.  

   Your statement, "There's only one problem:  Finding x can take up
   to phi(n) steps." may be, I believe inaccurate.  But your 
   statement is correct.  Let me explain this apparent anomaly.

	....

   Therefore, the two algorithms can work simultaneously and meet in
   the middle of the sequence of even numbers.  Phi(n)/2 maximum.
   Not phi(n).

Dr. Kaliski had just shown the following: ``Indeed, this is an
"exponential-time" algorithm for finding phi(n), the slowest kind.''
You don't refute that argument by saying that you can reduce the time in
half.  A multiplicative factor of two is completely meaningless when you
are talking about exponential-time algorithms.  If Payne doesn't even
realize this, he is completely ignorant of some of the fundamental
principals of mathematic algorithm analysis.  Even if you grant that his
"indefinite division" buys you a factor of two, this doesn't change the
fact that his algorthm is still O(2^n).

Consider what an algorithm which is O(2^n) means; let's look at how fast
various other different types of algorithms are:

n	O(1)	O(n)	O(n^2)	O(2^n)

1	1	1	1	1
2	1	2	4	2
3	1	3	9	8
4	1	4	16	16
5	1	5	25	32
6	1	6	36	64
7	1	7	49	128
8	1	8	64	256
9	1	9	81	512
10	1	10	100	1024
11	1	11	121	2048

Do you see how rapidly the O(2^n) numbers are growing?  They are
doubling at every step.  So just imagine how big 2**1024 is.  And you
will immediately realize that a factor of two is just completely in the
noise.  This is why for the purposes of computing "the big O" of an
algorithm, O(0.5 * 2^n - 2n - 12) is still considered equivalent to
O(2^n).  If you don't believe me, ask any math professor, or indeed any
computer science graduate from MIT --- at MIT, all C.S. students are
required to take an algorithm class.  One of the reasons for this is so
that they won't embarass themselves as Payne has.  :-)

In summary, I see no evidence in the papers you have submitted to me
that Payne has managed to "break" RSA.  I do see evidence that Payne is
missing a fundamental education in mathematics, or at least as far as
algorithms analysis is concerned.

This reminds me of the continuous streams of "proofs" submitted by
people who know nothing about mathemtics that they are able to "square
the circle", and are complaining that there is a conspiracy by the
mathematical community since everyone refuses to look at their "proofs".
The reason for this, of course, is that it has already been
mathematically *proven* that it is impossible to "square the circle",
and so matheticians, unless they are being very generous with their
time, aren't going to bother looking for the hole in the proof which
they know is there.

Payne's case is somewhat different, since there is no conclusive proof
that RSA is impossible to break.  However, it shares similar elements in
that someone who is an "outsider", who is apparently not trained in
mathematics, is sure that he has found something which the rest of the
mathematical community has completely missed.  To be fair, this is
possible, and has happened.  However, in most cases, it is the outsider
who is pathetically wrong.

						- Ted

P.S.  If someone could forward this analysis back to the ADA development
list, I'd appreciate it.
