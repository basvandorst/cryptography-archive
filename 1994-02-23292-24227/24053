Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!cs.utexas.edu!not-for-mail
From: jlc@Camex.COM (Jeff Caruso)
Newsgroups: sci.crypt
Subject: Re: proving P=NP (was Re: Factoring N=P*Q vs. general factoring)
Date: 23 Feb 1994 08:43:42 -0600
Organization: Information International, Inc.
Lines: 45
Sender: daemon@cs.utexas.edu
Message-ID: <9402231445.AA12974@Camex.COM>
References: <EACHUS.94Feb15182635@spectre.mitre.org> <1994Feb19.111248.10076@jarvis.csri.toronto.edu> <Feb.20.18.33.41.1994.25926@romulus.rutgers.edu>
NNTP-Posting-Host: cs.utexas.edu

In article <Feb.20.18.33.41.1994.25926@romulus.rutgers.edu> wclark@romulus.rutgers.edu (Bill Clark) writes:
>eachus@spectre.mitre.org (Robert I. Eachus) writes:
>
>>If you prove that P=NP is
>>unprovable, then you have proven that no counterexample exists,
>>therefore P=NP is true!
>
>	Actually, I'm having a little difficulty in understanding how it would
>be possible for the statement to be independant (unprovable).  If it were
>unprovable, then couldn't we just assume it as an axiom?  If this were the
>case, then I don't see how this could be of any use to us.  Isn't the problem
>of proving/disproving P=NP based on polynomial-time solution of NP-complete
>problems?  How would one actually go about proving that such a problem is
>independant?  I don't see how we could provide models that demonstrate one
>way or another that the assumptions would be consistent, since this doesn't
>seem to be a problem of Math Logic... 
>

1.)  Remember the difference between provability in an axiom system and
     truth in a particular model.  Most of us would say that P=NP is 
     either true or false as a statement about Turing machines.  It does not
     follow that P=NP is provable or refutable from our axioms, which 
     are some true statements about sets and Turing machines and things.

2.)  If P=NP were in fact independent of our axioms, then yes, we can
     add it as an axiom and have a consistent system of axioms.  That 
     still leaves the question of whether P=NP is true of the particular
     model of interest, namely Turing machines.

3.)  As someone has already pointed out, it is possible that P=NP is
     unprovable and still false. Possibly there is a problem X for which
     an NP algorithm exists, but the question of whether a polynomial-time
     solution exists is undecidable (which in turn goes to the question of
     examining a particular algorithm and proving that it takes polynomial
     time, or not).
-- 

- Jeff C.

******************************************************************
*  Dr. Jeffrey L. Caruso             617/ 937-9400 x227          *
*  Information International         jlc@camex.com               *
*  10 Commerce Way                                               *
*  Woburn, MA 01801                  617/ 937-0303 fax           *
******************************************************************
