Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!fs7.ece.cmu.edu!honeydew.srv.cs.cmu.edu!bb3.andrew.cmu.edu!andrew.cmu.edu!cd2a+
From: Court Demas <court+@CMU.EDU>
Newsgroups: sci.crypt
Subject: Re: PGP info
Date: Tue,  1 Feb 1994 20:39:38 -0500
Organization: Junior, Math/Computer Science, Carnegie Mellon, Pittsburgh, PA
Lines: 42
Message-ID: <0hHkFOa00gjkM5LowR@andrew.cmu.edu>
References: <2525@se.alcbel.be>
	<760130535snz@ubik.demon.co.uk>
NNTP-Posting-Host: po5.andrew.cmu.edu
In-Reply-To: <760130535snz@ubik.demon.co.uk>


	I think one of the big questions is going to be what to do
with the PC.  The Newton is oddball enough that we have no other
choice but to rewrite something completely new (and I'll get to that
in a minute).  But the PC could conceivable be setup with Unix (Mach,
Linux, etc) and X - and run the actual 'Dispatcher' system that is
being designed for the HP's.

	I don't like the idea of writing two Friend systems - one for
DOS, on for Unix; I also don't like the idea of running Unix/X on the
laptop in particular (besides the fact that Tk would probrably look
terrible; and I definitely don't like the idea of having a fairly
powerful PC sitting around just as a router for the GPS.
	I personally think that we would just use one of the many
cross-platform UI toolkits to develop the system (scrapping Tcl/Tk).
This would allow us to run the same application on X/Motif, Windows -
even Macintosh.  We wouldn't have to worry about writing two separate
sets of code.  There are many free toolkits available which do this
(wxWin, etc).






	Writing a cross-platform system would also require scrapping
Exodus (a Good Thing).  Put it this way: if we *don't* switch
databases, and we want any kind of real functionality from the NEC
laptop, then we're going to have to completely abstract Exodus from
the PC.  This is nontrivial.  It would involve writing some sort of
transaction-processing system - which is what databases were created
for in the first place.  A better solution would be to *buy* an
abstraction layer that somebody else has written.  An OODBMS like Poet
or ObjectManager would run with the same code on just about any platform.

	
	The Newton development, IMHO, is going to be very heavily
dependent on the type of communications device we get - the difference
between running a system over 2400bps modem / 19.2k Ardis / LocalTalk
is very big.  I have already talked to Motorola about Ardis, and the
PCMCIA card is still beta, so we may not be able to get one.  I have
been unable to contact the RAM (sp?) people so far.
