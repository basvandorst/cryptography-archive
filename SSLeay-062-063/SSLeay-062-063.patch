*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./Makefile.ssl	Thu Jul 25 16:06:06 1996
--- ./Makefile.ssl	Thu Aug  8 01:48:08 1996
***************
*** 1,6 ****
  #
  # Makefile for all the SSL related library routines and utilities
! VERSION	= 0.6.2
  #
  # make install will install:
  #   libraries into $INSTALLTOP/lib
--- 1,6 ----
  #
  # Makefile for all the SSL related library routines and utilities
! VERSION	= 0.6.3
  #
  # make install will install:
  #   libraries into $INSTALLTOP/lib
***************
*** 138,144 ****
  	done;
  
  rehash:
! 	@(PATH="./apps:${PATH}"; sh tools/c_rehash certs)
  
  test:	tests
  
--- 138,144 ----
  	done;
  
  rehash:
! 	@(PATH="`pwd`/apps:${PATH}"; sh tools/c_rehash certs)
  
  test:	tests
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./README	Wed Jul 24 07:56:42 1996
--- ./README	Tue Aug  6 15:57:45 1996
***************
*** 1,4 ****
! 		SSLeay 0.6.2 24-Jul-1996
  		Copyright (c) 1996, Eric Young
  		All rights reserved.
  
--- 1,4 ----
! 		SSLeay 0.6.3 06-Aug-1996
  		Copyright (c) 1996, Eric Young
  		All rights reserved.
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./VERSION	Thu Jul 25 10:26:56 1996
--- ./VERSION	Thu Aug  8 00:53:43 1996
***************
*** 1,4 ****
! Version 0.6.2 eay
  	- Cleanup of CA.sh - prompted by John Franks <john@math.nwu.edu>
  	- Added DESX, I need to get some test vectors for it.
  	  It takes a 24 bit key, 56 bits are the DES key and the
--- 1,35 ----
! Version 0.6.3 eay
! 	- A few minor memory leaks in the pkcs7 stuff.
! 	- Assed -modulus option to 'rsa'.
! 	- A fix to SSL_set_rbio(), if was free()ing the ssl->wbio.
! 	- A few mods to crypto/rand/randfile.c
! 	- Error in ASN1_INTEGER_set, I had the endian around the wrong way
! 	  when loading the 'long'.
! 	- 2 out[1]='\n' instead of out[0]='\n' bugs in evp/encode.c.
! 	  If you were using the returned 'data' length this error
! 	  would not be noticed, thanks to Andreas Persson <andper@rsv.se>.
! 	- Fixed the checking on the return code from X509_verify().
! 	  I was not checking for <= 0, where < 0 indicates an error
! 	  that is not related to a bad signature (0).  This was
! 	  letting unknown message digests type pass as ok signatures.
! 	- A few fixes to the pkcs7 signed type, this stuff was not being
! 	  tested before.  I used a pkcs7 example from
! 	  Francisco Jordan <jordan@ac.upc.es>.
! 	- A few BIO routine fixes from Raph Levien <raph@cs.berkeley.edu>.
! 	- memcpy()  replaced by memmove() in crypto/stack/stack.c:sk_insert()
! 	  thanks to Richard Dorman <richard@tns.co.za> for the bug report.
! 	- Mods so that apps/ca can now be driven from a CGI script taking a
! 	  SPKI structure as input, donated by
! 	  Jeff Barber <jeffb@issl.atl.hp.com>
! 	- From Tom Titchener <tomt@osf.org>, a NO_RC2 fix.
! 	- Fixes for EVP_EncryptInit()/EVP_DecryptInit() to make them
! 	  behave as the documentation expects them to and a fix
! 	  for PEM_SealInit() which was bad :-(.  Thanks to
! 	  Andreas Persson <andper@rsv.se> for these.
! 	- Added sha1WithRsaSignature object ID, I can now finally do
! 	  SHA1 signatures :-).
! 
! Version 0.6.2 25/07/1996 eay
  	- Cleanup of CA.sh - prompted by John Franks <john@math.nwu.edu>
  	- Added DESX, I need to get some test vectors for it.
  	  It takes a 24 bit key, 56 bits are the DES key and the
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./MINFO	Thu Jul 25 16:07:09 1996
--- ./MINFO	Thu Aug  8 01:48:59 1996
***************
*** 17,31 ****
  MAN1=1
  MAN3=3
  MISC=COPYRIGHT Configure INSTALL Makefile.ssl Makefile RAMBLINGS README README.050 README.051 README.052 TODO README.060 README.061 README.062 VERSION PROBLEMS MINFO makefile.one e_os.h MICROSOFT
! NAME=SSLeay-0.6.2
  ONEDIRS=out tmp
  PEX_LIBS=-L. -L.. -L../.. -L../../..
  SHELL=/bin/sh
! TARFILE=SSLeay-0.6.2.tar
  TOP=.
! VERSION=0.6.2
  WDIRS=windows
! WTARFILE=SSLeay-0.6.2-win.tar
  RELATIVE_DIRECTORY=
  RELATIVE_DIRECTORY=crypto
  ALL=Makefile README cryptlib.c cryptlib.h date.h crypto.h cryptoall.h
--- 17,31 ----
  MAN1=1
  MAN3=3
  MISC=COPYRIGHT Configure INSTALL Makefile.ssl Makefile RAMBLINGS README README.050 README.051 README.052 TODO README.060 README.061 README.062 VERSION PROBLEMS MINFO makefile.one e_os.h MICROSOFT
! NAME=SSLeay-0.6.3
  ONEDIRS=out tmp
  PEX_LIBS=-L. -L.. -L../.. -L../../..
  SHELL=/bin/sh
! TARFILE=SSLeay-0.6.3.tar
  TOP=.
! VERSION=0.6.3
  WDIRS=windows
! WTARFILE=SSLeay-0.6.3-win.tar
  RELATIVE_DIRECTORY=
  RELATIVE_DIRECTORY=crypto
  ALL=Makefile README cryptlib.c cryptlib.h date.h crypto.h cryptoall.h
***************
*** 658,664 ****
  TOP=..
  RELATIVE_DIRECTORY=
  RELATIVE_DIRECTORY=apps
! ALL=Makefile verify.c asn1pars.c req.c dgst.c dh.c enc.c gendh.c errstr.c ca.c pkcs7.c crl2p7.c crl.c rsa.c x509.c genrsa.c s_server.c s_client.c s_filter.c speed.c hashdir.c s_time.c s_mult.c apps.c s_cb.c s_socket.c s_eio.c version.c apps.h progs.h s_apps.h s_eio.h testcert.h 
  A_OBJ=apps.o
  A_SRC=apps.c
  CC=cc
--- 658,664 ----
  TOP=..
  RELATIVE_DIRECTORY=
  RELATIVE_DIRECTORY=apps
! ALL=Makefile verify.c asn1pars.c req.c dgst.c dh.c enc.c gendh.c errstr.c ca.c pkcs7.c crl2p7.c crl.c rsa.c x509.c genrsa.c s_server.c s_client.c s_filter.c speed.c hashdir.c s_time.c s_mult.c apps.c s_cb.c s_socket.c s_eio.c version.c sess_id.c apps.h progs.h s_apps.h s_eio.h testcert.h 
  A_OBJ=apps.o
  A_SRC=apps.c
  CC=cc
***************
*** 670,678 ****
  EXE=ssleay
  EXHEADER=
  EX_LIBS=
! E_EXE=verify asn1pars req dgst dh enc gendh errstr ca crl rsa x509 genrsa s_server s_client s_filter speed hashdir s_time s_mult version pkcs7 crl2pkcs7
! E_OBJ=verify.o asn1pars.o req.o dgst.o dh.o enc.o gendh.o errstr.o ca.o pkcs7.o crl2p7.o crl.o rsa.o x509.o genrsa.o s_server.o s_client.o s_filter.o speed.o hashdir.o s_time.o s_mult.o apps.o s_cb.o s_socket.o s_eio.o version.o
! E_SRC=verify.c asn1pars.c req.c dgst.c dh.c enc.c gendh.c errstr.c ca.c pkcs7.c crl2p7.c crl.c rsa.c x509.c genrsa.c s_server.c s_client.c s_filter.c speed.c hashdir.c s_time.c s_mult.c apps.c s_cb.c s_socket.c s_eio.c version.c
  GENERAL=Makefile
  HEADER=apps.h progs.h s_apps.h s_eio.h testcert.h 
  INCLUDES=-I../include
--- 670,678 ----
  EXE=ssleay
  EXHEADER=
  EX_LIBS=
! E_EXE=verify asn1pars req dgst dh enc gendh errstr ca crl rsa x509 genrsa s_server s_client s_filter speed hashdir s_time s_mult version pkcs7 crl2pkcs7 sess_id
! E_OBJ=verify.o asn1pars.o req.o dgst.o dh.o enc.o gendh.o errstr.o ca.o pkcs7.o crl2p7.o crl.o rsa.o x509.o genrsa.o s_server.o s_client.o s_filter.o speed.o hashdir.o s_time.o s_mult.o apps.o s_cb.o s_socket.o s_eio.o version.o sess_id.o
! E_SRC=verify.c asn1pars.c req.c dgst.c dh.c enc.c gendh.c errstr.c ca.c pkcs7.c crl2p7.c crl.c rsa.c x509.c genrsa.c s_server.c s_client.c s_filter.c speed.c hashdir.c s_time.c s_mult.c apps.c s_cb.c s_socket.c s_eio.c version.c sess_id.c
  GENERAL=Makefile
  HEADER=apps.h progs.h s_apps.h s_eio.h testcert.h 
  INCLUDES=-I../include
***************
*** 686,692 ****
  PROGS=ssleay.c
  RM=/bin/rm -f
  SCRIPTS=CA.sh der_chop
! SRC=verify.c asn1pars.c req.c dgst.c dh.c enc.c gendh.c errstr.c ca.c pkcs7.c crl2p7.c crl.c rsa.c x509.c genrsa.c s_server.c s_client.c s_filter.c speed.c hashdir.c s_time.c s_mult.c apps.c s_cb.c s_socket.c s_eio.c version.c
  SSLEAY=ssleay
  S_OBJ=s_cb.o s_socket.o s_eio.o
  S_SRC=s_cb.c s_socket.c s_eio.c
--- 686,692 ----
  PROGS=ssleay.c
  RM=/bin/rm -f
  SCRIPTS=CA.sh der_chop
! SRC=verify.c asn1pars.c req.c dgst.c dh.c enc.c gendh.c errstr.c ca.c pkcs7.c crl2p7.c crl.c rsa.c x509.c genrsa.c s_server.c s_client.c s_filter.c speed.c hashdir.c s_time.c s_mult.c apps.c s_cb.c s_socket.c s_eio.c version.c sess_id.c
  SSLEAY=ssleay
  S_OBJ=s_cb.o s_socket.o s_eio.o
  S_SRC=s_cb.c s_socket.c s_eio.c
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./makefile.one	Thu Jul 25 16:07:10 1996
--- ./makefile.one	Thu Aug  8 01:49:00 1996
***************
*** 38,44 ****
  
  CP=/bin/cp
  RM=/bin/rm -f
! RANLIB=$(SRC_D)/util/ranlib.sh
  MKDIR=mkdir
  MKLIB=ar r
  MLFLAGS=
--- 38,44 ----
  
  CP=/bin/cp
  RM=/bin/rm -f
! RANLIB=RANLIB=$(SRC_D)/util/ranlib.sh
  MKDIR=mkdir
  MKLIB=ar r
  MLFLAGS=
***************
*** 127,143 ****
  	$(OBJ_D)/s_client.o $(OBJ_D)/s_filter.o $(OBJ_D)/speed.o \
  	$(OBJ_D)/hashdir.o $(OBJ_D)/s_time.o $(OBJ_D)/s_mult.o \
  	$(OBJ_D)/apps.o $(OBJ_D)/s_cb.o $(OBJ_D)/s_socket.o \
! 	$(OBJ_D)/s_eio.o $(OBJ_D)/version.o $(OBJ_D)/ssleay.o
  
- SSLOBJ=$(OBJ_D)/ssl_lib.o \
- 	$(OBJ_D)/ssl_err2.o $(OBJ_D)/ssl_trc.o $(OBJ_D)/ssl_cert.o \
- 	$(OBJ_D)/ssl_sess.o $(OBJ_D)/ssl_srvr.o $(OBJ_D)/ssl_clnt.o \
- 	$(OBJ_D)/ssl_pkt.o $(OBJ_D)/ssl_auth.o $(OBJ_D)/ssl_stat.o \
- 	$(OBJ_D)/ssl_asn1.o $(OBJ_D)/ssl_txt.o $(OBJ_D)/ssl_rsa.o \
- 	$(OBJ_D)/ssl_null.o $(OBJ_D)/ssl_des.o $(OBJ_D)/ssl_idea.o \
- 	$(OBJ_D)/ssl_rc4.o $(OBJ_D)/ssl_rc2.o $(OBJ_D)/bio_ssl.o \
- 	$(OBJ_D)/ssl_md5.o $(OBJ_D)/ssl_sha.o $(OBJ_D)/ssl_err.o
- 
  CRYPTOOBJ=$(OBJ_D)/cryptlib.o \
  	$(OBJ_D)/md2_dgst.o $(OBJ_D)/md5_dgst.o $(OBJ_D)/md2_one.o \
  	$(OBJ_D)/md5_one.o $(OBJ_D)/sha_dgst.o $(OBJ_D)/sha1dgst.o \
--- 127,135 ----
  	$(OBJ_D)/s_client.o $(OBJ_D)/s_filter.o $(OBJ_D)/speed.o \
  	$(OBJ_D)/hashdir.o $(OBJ_D)/s_time.o $(OBJ_D)/s_mult.o \
  	$(OBJ_D)/apps.o $(OBJ_D)/s_cb.o $(OBJ_D)/s_socket.o \
! 	$(OBJ_D)/s_eio.o $(OBJ_D)/version.o $(OBJ_D)/sess_id.o \
! 	$(OBJ_D)/ssleay.o
  
  CRYPTOOBJ=$(OBJ_D)/cryptlib.o \
  	$(OBJ_D)/md2_dgst.o $(OBJ_D)/md5_dgst.o $(OBJ_D)/md2_one.o \
  	$(OBJ_D)/md5_one.o $(OBJ_D)/sha_dgst.o $(OBJ_D)/sha1dgst.o \
***************
*** 212,217 ****
--- 204,218 ----
  	$(OBJ_D)/meth_err.o $(OBJ_D)/conf.o $(OBJ_D)/conf_err.o \
  	$(OBJ_D)/txt_db.o
  
+ SSLOBJ=$(OBJ_D)/ssl_lib.o \
+ 	$(OBJ_D)/ssl_err2.o $(OBJ_D)/ssl_trc.o $(OBJ_D)/ssl_cert.o \
+ 	$(OBJ_D)/ssl_sess.o $(OBJ_D)/ssl_srvr.o $(OBJ_D)/ssl_clnt.o \
+ 	$(OBJ_D)/ssl_pkt.o $(OBJ_D)/ssl_auth.o $(OBJ_D)/ssl_stat.o \
+ 	$(OBJ_D)/ssl_asn1.o $(OBJ_D)/ssl_txt.o $(OBJ_D)/ssl_rsa.o \
+ 	$(OBJ_D)/ssl_null.o $(OBJ_D)/ssl_des.o $(OBJ_D)/ssl_idea.o \
+ 	$(OBJ_D)/ssl_rc4.o $(OBJ_D)/ssl_rc2.o $(OBJ_D)/bio_ssl.o \
+ 	$(OBJ_D)/ssl_md5.o $(OBJ_D)/ssl_sha.o $(OBJ_D)/ssl_err.o
+ 
  RSAGLUEOBJ=$(OBJ_D)/rsaref.o \
  	$(OBJ_D)/rsar_err.o
  
***************
*** 565,639 ****
  $(OBJ_D)/version.o: $(SRC_D)/apps/version.c
  	$(CC) -o $(OBJ_D)/version.o -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)/apps/version.c
  
  $(OBJ_D)/ssleay.o: $(SRC_D)/apps/ssleay.c
  	$(CC) -o $(OBJ_D)/ssleay.o -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)/apps/ssleay.c
  
- $(OBJ_D)/ssl_lib.o: $(SRC_D)/ssl/ssl_lib.c
- 	$(CC) -o $(OBJ_D)/ssl_lib.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_lib.c
- 
- $(OBJ_D)/ssl_err2.o: $(SRC_D)/ssl/ssl_err2.c
- 	$(CC) -o $(OBJ_D)/ssl_err2.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_err2.c
- 
- $(OBJ_D)/ssl_trc.o: $(SRC_D)/ssl/ssl_trc.c
- 	$(CC) -o $(OBJ_D)/ssl_trc.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_trc.c
- 
- $(OBJ_D)/ssl_cert.o: $(SRC_D)/ssl/ssl_cert.c
- 	$(CC) -o $(OBJ_D)/ssl_cert.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_cert.c
- 
- $(OBJ_D)/ssl_sess.o: $(SRC_D)/ssl/ssl_sess.c
- 	$(CC) -o $(OBJ_D)/ssl_sess.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_sess.c
- 
- $(OBJ_D)/ssl_srvr.o: $(SRC_D)/ssl/ssl_srvr.c
- 	$(CC) -o $(OBJ_D)/ssl_srvr.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_srvr.c
- 
- $(OBJ_D)/ssl_clnt.o: $(SRC_D)/ssl/ssl_clnt.c
- 	$(CC) -o $(OBJ_D)/ssl_clnt.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_clnt.c
- 
- $(OBJ_D)/ssl_pkt.o: $(SRC_D)/ssl/ssl_pkt.c
- 	$(CC) -o $(OBJ_D)/ssl_pkt.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_pkt.c
- 
- $(OBJ_D)/ssl_auth.o: $(SRC_D)/ssl/ssl_auth.c
- 	$(CC) -o $(OBJ_D)/ssl_auth.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_auth.c
- 
- $(OBJ_D)/ssl_stat.o: $(SRC_D)/ssl/ssl_stat.c
- 	$(CC) -o $(OBJ_D)/ssl_stat.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_stat.c
- 
- $(OBJ_D)/ssl_asn1.o: $(SRC_D)/ssl/ssl_asn1.c
- 	$(CC) -o $(OBJ_D)/ssl_asn1.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_asn1.c
- 
- $(OBJ_D)/ssl_txt.o: $(SRC_D)/ssl/ssl_txt.c
- 	$(CC) -o $(OBJ_D)/ssl_txt.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_txt.c
- 
- $(OBJ_D)/ssl_rsa.o: $(SRC_D)/ssl/ssl_rsa.c
- 	$(CC) -o $(OBJ_D)/ssl_rsa.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_rsa.c
- 
- $(OBJ_D)/ssl_null.o: $(SRC_D)/ssl/ssl_null.c
- 	$(CC) -o $(OBJ_D)/ssl_null.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_null.c
- 
- $(OBJ_D)/ssl_des.o: $(SRC_D)/ssl/ssl_des.c
- 	$(CC) -o $(OBJ_D)/ssl_des.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_des.c
- 
- $(OBJ_D)/ssl_idea.o: $(SRC_D)/ssl/ssl_idea.c
- 	$(CC) -o $(OBJ_D)/ssl_idea.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_idea.c
- 
- $(OBJ_D)/ssl_rc4.o: $(SRC_D)/ssl/ssl_rc4.c
- 	$(CC) -o $(OBJ_D)/ssl_rc4.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_rc4.c
- 
- $(OBJ_D)/ssl_rc2.o: $(SRC_D)/ssl/ssl_rc2.c
- 	$(CC) -o $(OBJ_D)/ssl_rc2.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_rc2.c
- 
- $(OBJ_D)/bio_ssl.o: $(SRC_D)/ssl/bio_ssl.c
- 	$(CC) -o $(OBJ_D)/bio_ssl.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/bio_ssl.c
- 
- $(OBJ_D)/ssl_md5.o: $(SRC_D)/ssl/ssl_md5.c
- 	$(CC) -o $(OBJ_D)/ssl_md5.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_md5.c
- 
- $(OBJ_D)/ssl_sha.o: $(SRC_D)/ssl/ssl_sha.c
- 	$(CC) -o $(OBJ_D)/ssl_sha.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_sha.c
- 
- $(OBJ_D)/ssl_err.o: $(SRC_D)/ssl/ssl_err.c
- 	$(CC) -o $(OBJ_D)/ssl_err.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_err.c
- 
  $(OBJ_D)/cryptlib.o: $(SRC_D)/crypto/cryptlib.c
  	$(CC) -o $(OBJ_D)/cryptlib.o $(LIB_CFLAGS) -DCFLAGS="\"$(CC) $(CFLAG)\"" -c $(SRC_D)/crypto/cryptlib.c
  
--- 566,577 ----
  $(OBJ_D)/version.o: $(SRC_D)/apps/version.c
  	$(CC) -o $(OBJ_D)/version.o -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)/apps/version.c
  
+ $(OBJ_D)/sess_id.o: $(SRC_D)/apps/sess_id.c
+ 	$(CC) -o $(OBJ_D)/sess_id.o -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)/apps/sess_id.c
+ 
  $(OBJ_D)/ssleay.o: $(SRC_D)/apps/ssleay.c
  	$(CC) -o $(OBJ_D)/ssleay.o -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)/apps/ssleay.c
  
  $(OBJ_D)/cryptlib.o: $(SRC_D)/crypto/cryptlib.c
  	$(CC) -o $(OBJ_D)/cryptlib.o $(LIB_CFLAGS) -DCFLAGS="\"$(CC) $(CFLAG)\"" -c $(SRC_D)/crypto/cryptlib.c
  
***************
*** 1278,1283 ****
--- 1216,1287 ----
  
  $(OBJ_D)/txt_db.o: $(SRC_D)/crypto/txt_db/txt_db.c
  	$(CC) -o $(OBJ_D)/txt_db.o $(LIB_CFLAGS) -c $(SRC_D)/crypto/txt_db/txt_db.c
+ 
+ $(OBJ_D)/ssl_lib.o: $(SRC_D)/ssl/ssl_lib.c
+ 	$(CC) -o $(OBJ_D)/ssl_lib.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_lib.c
+ 
+ $(OBJ_D)/ssl_err2.o: $(SRC_D)/ssl/ssl_err2.c
+ 	$(CC) -o $(OBJ_D)/ssl_err2.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_err2.c
+ 
+ $(OBJ_D)/ssl_trc.o: $(SRC_D)/ssl/ssl_trc.c
+ 	$(CC) -o $(OBJ_D)/ssl_trc.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_trc.c
+ 
+ $(OBJ_D)/ssl_cert.o: $(SRC_D)/ssl/ssl_cert.c
+ 	$(CC) -o $(OBJ_D)/ssl_cert.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_cert.c
+ 
+ $(OBJ_D)/ssl_sess.o: $(SRC_D)/ssl/ssl_sess.c
+ 	$(CC) -o $(OBJ_D)/ssl_sess.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_sess.c
+ 
+ $(OBJ_D)/ssl_srvr.o: $(SRC_D)/ssl/ssl_srvr.c
+ 	$(CC) -o $(OBJ_D)/ssl_srvr.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_srvr.c
+ 
+ $(OBJ_D)/ssl_clnt.o: $(SRC_D)/ssl/ssl_clnt.c
+ 	$(CC) -o $(OBJ_D)/ssl_clnt.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_clnt.c
+ 
+ $(OBJ_D)/ssl_pkt.o: $(SRC_D)/ssl/ssl_pkt.c
+ 	$(CC) -o $(OBJ_D)/ssl_pkt.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_pkt.c
+ 
+ $(OBJ_D)/ssl_auth.o: $(SRC_D)/ssl/ssl_auth.c
+ 	$(CC) -o $(OBJ_D)/ssl_auth.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_auth.c
+ 
+ $(OBJ_D)/ssl_stat.o: $(SRC_D)/ssl/ssl_stat.c
+ 	$(CC) -o $(OBJ_D)/ssl_stat.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_stat.c
+ 
+ $(OBJ_D)/ssl_asn1.o: $(SRC_D)/ssl/ssl_asn1.c
+ 	$(CC) -o $(OBJ_D)/ssl_asn1.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_asn1.c
+ 
+ $(OBJ_D)/ssl_txt.o: $(SRC_D)/ssl/ssl_txt.c
+ 	$(CC) -o $(OBJ_D)/ssl_txt.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_txt.c
+ 
+ $(OBJ_D)/ssl_rsa.o: $(SRC_D)/ssl/ssl_rsa.c
+ 	$(CC) -o $(OBJ_D)/ssl_rsa.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_rsa.c
+ 
+ $(OBJ_D)/ssl_null.o: $(SRC_D)/ssl/ssl_null.c
+ 	$(CC) -o $(OBJ_D)/ssl_null.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_null.c
+ 
+ $(OBJ_D)/ssl_des.o: $(SRC_D)/ssl/ssl_des.c
+ 	$(CC) -o $(OBJ_D)/ssl_des.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_des.c
+ 
+ $(OBJ_D)/ssl_idea.o: $(SRC_D)/ssl/ssl_idea.c
+ 	$(CC) -o $(OBJ_D)/ssl_idea.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_idea.c
+ 
+ $(OBJ_D)/ssl_rc4.o: $(SRC_D)/ssl/ssl_rc4.c
+ 	$(CC) -o $(OBJ_D)/ssl_rc4.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_rc4.c
+ 
+ $(OBJ_D)/ssl_rc2.o: $(SRC_D)/ssl/ssl_rc2.c
+ 	$(CC) -o $(OBJ_D)/ssl_rc2.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_rc2.c
+ 
+ $(OBJ_D)/bio_ssl.o: $(SRC_D)/ssl/bio_ssl.c
+ 	$(CC) -o $(OBJ_D)/bio_ssl.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/bio_ssl.c
+ 
+ $(OBJ_D)/ssl_md5.o: $(SRC_D)/ssl/ssl_md5.c
+ 	$(CC) -o $(OBJ_D)/ssl_md5.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_md5.c
+ 
+ $(OBJ_D)/ssl_sha.o: $(SRC_D)/ssl/ssl_sha.c
+ 	$(CC) -o $(OBJ_D)/ssl_sha.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_sha.c
+ 
+ $(OBJ_D)/ssl_err.o: $(SRC_D)/ssl/ssl_err.c
+ 	$(CC) -o $(OBJ_D)/ssl_err.o $(LIB_CFLAGS) -c $(SRC_D)/ssl/ssl_err.c
  
  $(OBJ_D)/rsaref.o: $(SRC_D)/rsaref/rsaref.c
  	$(CC) -o $(OBJ_D)/rsaref.o $(LIB_CFLAGS) -c $(SRC_D)/rsaref/rsaref.c
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/asn1_lib.c	Wed Jul 24 07:56:41 1996
--- ./crypto/asn1/asn1_lib.c	Tue Aug  6 15:57:44 1996
***************
*** 57,63 ****
  static void asn1_put_length();
  #endif
  
! char *ASN1_version="ASN1 part of SSLeay 0.6.2 24-Jul-1996";
  
  int ASN1_check_infinite_end(p,len)
  unsigned char **p;
--- 57,63 ----
  static void asn1_put_length();
  #endif
  
! char *ASN1_version="ASN1 part of SSLeay 0.6.3 06-Aug-1996";
  
  int ASN1_check_infinite_end(p,len)
  unsigned char **p;
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/a_int.c	Wed Jul 17 16:45:35 1996
--- ./crypto/asn1/a_int.c	Fri Aug  2 17:24:02 1996
***************
*** 239,248 ****
  	if (a->data == NULL)
  		return(0);
  
! 	for (i=a->length; i > 0; i--)
  		{
  		r<<=8;
! 		r|=(unsigned char)a->data[i-1];
  		}
  	if (neg) r= -r;
  	return(r);
--- 239,248 ----
  	if (a->data == NULL)
  		return(0);
  
! 	for (i=0; i<a->length; i++)
  		{
  		r<<=8;
! 		r|=(unsigned char)a->data[i];
  		}
  	if (neg) r= -r;
  	return(r);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/a_object.c	Wed Jul 17 16:45:35 1996
--- ./crypto/asn1/a_object.c	Wed Aug  7 16:11:00 1996
***************
*** 157,163 ****
  
  	/* only the ASN1_OBJECTs from the 'table' will have values
  	 * for ->sn or ->ln */
! 	if ((a == NULL) || ((*a) == NULL) || !(*a)->dynamic)
  		{
  		if ((ret=ASN1_OBJECT_new()) == NULL) return(NULL);
  		}
--- 157,163 ----
  
  	/* only the ASN1_OBJECTs from the 'table' will have values
  	 * for ->sn or ->ln */
! 	if ((a == NULL) || ((*a) == NULL) || !((*a)->dynamic))
  		{
  		if ((ret=ASN1_OBJECT_new()) == NULL) return(NULL);
  		}
***************
*** 177,183 ****
  		i=ASN1_R_EXPECTING_AN_OBJECT;
  		goto err;
  		}
! 	if ((ret->data != NULL) || (ret->length < len))
  		{
  		if (ret->data != NULL) free(ret->data);
  		ret->data=(unsigned char *)malloc((int)len);
--- 177,183 ----
  		i=ASN1_R_EXPECTING_AN_OBJECT;
  		goto err;
  		}
! 	if ((ret->data == NULL) || (ret->length < len))
  		{
  		if (ret->data != NULL) free(ret->data);
  		ret->data=(unsigned char *)malloc((int)len);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/p7_dgst.c	Wed Jul 17 16:45:37 1996
--- ./crypto/asn1/p7_dgst.c	Wed Aug  7 16:40:05 1996
***************
*** 62,68 ****
  	M_ASN1_I2D_vars(a);
  
  	M_ASN1_I2D_len(a->version,i2d_ASN1_INTEGER);
! 	M_ASN1_I2D_len(a->md,i2d_ASN1_OBJECT);
  	M_ASN1_I2D_len(a->contents,i2d_PKCS7);
  	M_ASN1_I2D_len(a->digest,i2d_ASN1_OCTET_STRING);
  
--- 62,68 ----
  	M_ASN1_I2D_vars(a);
  
  	M_ASN1_I2D_len(a->version,i2d_ASN1_INTEGER);
! 	M_ASN1_I2D_len(a->md,i2d_X509_ALGOR);
  	M_ASN1_I2D_len(a->contents,i2d_PKCS7);
  	M_ASN1_I2D_len(a->digest,i2d_ASN1_OCTET_STRING);
  
***************
*** 69,75 ****
  	M_ASN1_I2D_seq_total();
  
  	M_ASN1_I2D_put(a->version,i2d_ASN1_INTEGER);
! 	M_ASN1_I2D_put(a->md,i2d_ASN1_OBJECT);
  	M_ASN1_I2D_put(a->contents,i2d_PKCS7);
  	M_ASN1_I2D_put(a->digest,i2d_ASN1_OCTET_STRING);
  
--- 69,75 ----
  	M_ASN1_I2D_seq_total();
  
  	M_ASN1_I2D_put(a->version,i2d_ASN1_INTEGER);
! 	M_ASN1_I2D_put(a->md,i2d_X509_ALGOR);
  	M_ASN1_I2D_put(a->contents,i2d_PKCS7);
  	M_ASN1_I2D_put(a->digest,i2d_ASN1_OCTET_STRING);
  
***************
*** 86,92 ****
  	M_ASN1_D2I_Init();
  	M_ASN1_D2I_start_sequence();
  	M_ASN1_D2I_get(ret->version,d2i_ASN1_INTEGER);
! 	M_ASN1_D2I_get(ret->md,d2i_ASN1_OBJECT);
  	M_ASN1_D2I_get(ret->contents,d2i_PKCS7);
  	M_ASN1_D2I_get(ret->digest,d2i_ASN1_OCTET_STRING);
  
--- 86,92 ----
  	M_ASN1_D2I_Init();
  	M_ASN1_D2I_start_sequence();
  	M_ASN1_D2I_get(ret->version,d2i_ASN1_INTEGER);
! 	M_ASN1_D2I_get(ret->md,d2i_X509_ALGOR);
  	M_ASN1_D2I_get(ret->contents,d2i_PKCS7);
  	M_ASN1_D2I_get(ret->digest,d2i_ASN1_OCTET_STRING);
  
***************
*** 99,105 ****
  
  	M_ASN1_New_Malloc(ret,PKCS7_DIGEST);
  	M_ASN1_New(ret->version,ASN1_INTEGER_new);
! 	M_ASN1_New(ret->md,ASN1_OBJECT_new);
  	M_ASN1_New(ret->contents,PKCS7_new);
  	M_ASN1_New(ret->digest,ASN1_OCTET_STRING_new);
  	return(ret);
--- 99,105 ----
  
  	M_ASN1_New_Malloc(ret,PKCS7_DIGEST);
  	M_ASN1_New(ret->version,ASN1_INTEGER_new);
! 	M_ASN1_New(ret->md,X509_ALGOR_new);
  	M_ASN1_New(ret->contents,PKCS7_new);
  	M_ASN1_New(ret->digest,ASN1_OCTET_STRING_new);
  	return(ret);
***************
*** 111,117 ****
  	{
  	if (a == NULL) return;
  	ASN1_INTEGER_free(a->version);
! 	ASN1_OBJECT_free(a->md);
  	PKCS7_free(a->contents);
  	ASN1_OCTET_STRING_free(a->digest);
  	free(a);
--- 111,117 ----
  	{
  	if (a == NULL) return;
  	ASN1_INTEGER_free(a->version);
! 	X509_ALGOR_free(a->md);
  	PKCS7_free(a->contents);
  	ASN1_OCTET_STRING_free(a->digest);
  	free(a);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/p7_lib.c	Wed Jul 17 16:45:38 1996
--- ./crypto/asn1/p7_lib.c	Wed Aug  7 16:52:14 1996
***************
*** 170,179 ****
--- 170,182 ----
  			c.error=ASN1_R_BAD_PKCS7_CONTENT;
  			goto err;
  			}
+ 
  		c.q=c.p;
  		Tinf=ASN1_get_object(&c.p,&Tlen,&Ttag,&Tclass,
  			(c.inf & 1)?(length+ *pp-c.q):c.slen);
  		if (Tinf == 0xff) goto err;
+ 		c.slen-=(c.p-c.q);
+ 
  		switch (OBJ_obj2nid(ret->type))
  			{
  		case NID_pkcs7_data:
***************
*** 261,266 ****
--- 264,271 ----
  			break;
  			}
  		}
+ 	if (a->type != NULL)
+ 		ASN1_OBJECT_free(a->type);
  	free((char *)a);
  	}
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/p7_signd.c	Wed Jul 17 16:45:38 1996
--- ./crypto/asn1/p7_signd.c	Wed Aug  7 16:40:05 1996
***************
*** 62,68 ****
  	M_ASN1_I2D_vars(a);
  
  	M_ASN1_I2D_len(a->version,i2d_ASN1_INTEGER);
! 	M_ASN1_I2D_len_SET(a->md_algs,i2d_ASN1_OBJECT);
  	M_ASN1_I2D_len(a->contents,i2d_PKCS7);
  	M_ASN1_I2D_len_IMP_set_opt(a->cert,i2d_X509,0);
  	M_ASN1_I2D_len_IMP_set_opt(a->crl,i2d_X509_CRL,1);
--- 62,68 ----
  	M_ASN1_I2D_vars(a);
  
  	M_ASN1_I2D_len(a->version,i2d_ASN1_INTEGER);
! 	M_ASN1_I2D_len_SET(a->md_algs,i2d_X509_ALGOR);
  	M_ASN1_I2D_len(a->contents,i2d_PKCS7);
  	M_ASN1_I2D_len_IMP_set_opt(a->cert,i2d_X509,0);
  	M_ASN1_I2D_len_IMP_set_opt(a->crl,i2d_X509_CRL,1);
***************
*** 71,77 ****
  	M_ASN1_I2D_seq_total();
  
  	M_ASN1_I2D_put(a->version,i2d_ASN1_INTEGER);
! 	M_ASN1_I2D_put_SET(a->md_algs,i2d_ASN1_OBJECT);
  	M_ASN1_I2D_put(a->contents,i2d_PKCS7);
  	M_ASN1_I2D_put_IMP_set_opt(a->cert,i2d_X509,0);
  	M_ASN1_I2D_put_IMP_set_opt(a->crl,i2d_X509_CRL,1);
--- 71,77 ----
  	M_ASN1_I2D_seq_total();
  
  	M_ASN1_I2D_put(a->version,i2d_ASN1_INTEGER);
! 	M_ASN1_I2D_put_SET(a->md_algs,i2d_X509_ALGOR);
  	M_ASN1_I2D_put(a->contents,i2d_PKCS7);
  	M_ASN1_I2D_put_IMP_set_opt(a->cert,i2d_X509,0);
  	M_ASN1_I2D_put_IMP_set_opt(a->crl,i2d_X509_CRL,1);
***************
*** 90,96 ****
  	M_ASN1_D2I_Init();
  	M_ASN1_D2I_start_sequence();
  	M_ASN1_D2I_get(ret->version,d2i_ASN1_INTEGER);
! 	M_ASN1_D2I_get_set(ret->md_algs,d2i_ASN1_OBJECT);
  	M_ASN1_D2I_get(ret->contents,d2i_PKCS7);
  	M_ASN1_D2I_get_IMP_set_opt(ret->cert,d2i_X509,0);
  	M_ASN1_D2I_get_IMP_set_opt(ret->crl,d2i_X509_CRL,1);
--- 90,96 ----
  	M_ASN1_D2I_Init();
  	M_ASN1_D2I_start_sequence();
  	M_ASN1_D2I_get(ret->version,d2i_ASN1_INTEGER);
! 	M_ASN1_D2I_get_set(ret->md_algs,d2i_X509_ALGOR);
  	M_ASN1_D2I_get(ret->contents,d2i_PKCS7);
  	M_ASN1_D2I_get_IMP_set_opt(ret->cert,d2i_X509,0);
  	M_ASN1_D2I_get_IMP_set_opt(ret->crl,d2i_X509_CRL,1);
***************
*** 119,125 ****
  	{
  	if (a == NULL) return;
  	ASN1_INTEGER_free(a->version);
! 	sk_pop_free(a->md_algs,ASN1_OBJECT_free);
  	PKCS7_free(a->contents);
  	sk_pop_free(a->cert,X509_free);
  	sk_pop_free(a->crl,X509_CRL_free);
--- 119,125 ----
  	{
  	if (a == NULL) return;
  	ASN1_INTEGER_free(a->version);
! 	sk_pop_free(a->md_algs,X509_ALGOR_free);
  	PKCS7_free(a->contents);
  	sk_pop_free(a->cert,X509_free);
  	sk_pop_free(a->crl,X509_CRL_free);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/p7_signi.c	Wed Jul 17 16:45:38 1996
--- ./crypto/asn1/p7_signi.c	Wed Aug  7 16:40:05 1996
***************
*** 63,69 ****
  
  	M_ASN1_I2D_len(a->version,i2d_ASN1_INTEGER);
  	M_ASN1_I2D_len(a->issuer_and_serial,i2d_PKCS7_ISSUER_AND_SERIAL);
! 	M_ASN1_I2D_len(a->digest_alg,i2d_ASN1_OBJECT);
  	M_ASN1_I2D_len_IMP_set_opt(a->auth_attr,i2d_X509_ATTRIBUTE,0);
  	M_ASN1_I2D_len(a->digest_enc_alg,i2d_X509_ALGOR);
  	M_ASN1_I2D_len(a->enc_digest,i2d_ASN1_OCTET_STRING);
--- 63,69 ----
  
  	M_ASN1_I2D_len(a->version,i2d_ASN1_INTEGER);
  	M_ASN1_I2D_len(a->issuer_and_serial,i2d_PKCS7_ISSUER_AND_SERIAL);
! 	M_ASN1_I2D_len(a->digest_alg,i2d_X509_ALGOR);
  	M_ASN1_I2D_len_IMP_set_opt(a->auth_attr,i2d_X509_ATTRIBUTE,0);
  	M_ASN1_I2D_len(a->digest_enc_alg,i2d_X509_ALGOR);
  	M_ASN1_I2D_len(a->enc_digest,i2d_ASN1_OCTET_STRING);
***************
*** 73,79 ****
  
  	M_ASN1_I2D_put(a->version,i2d_ASN1_INTEGER);
  	M_ASN1_I2D_put(a->issuer_and_serial,i2d_PKCS7_ISSUER_AND_SERIAL);
! 	M_ASN1_I2D_put(a->digest_alg,i2d_ASN1_OBJECT);
  	M_ASN1_I2D_put_IMP_set_opt(a->auth_attr,i2d_X509_ATTRIBUTE,0);
  	M_ASN1_I2D_put(a->digest_enc_alg,i2d_X509_ALGOR);
  	M_ASN1_I2D_put(a->enc_digest,i2d_ASN1_OCTET_STRING);
--- 73,79 ----
  
  	M_ASN1_I2D_put(a->version,i2d_ASN1_INTEGER);
  	M_ASN1_I2D_put(a->issuer_and_serial,i2d_PKCS7_ISSUER_AND_SERIAL);
! 	M_ASN1_I2D_put(a->digest_alg,i2d_X509_ALGOR);
  	M_ASN1_I2D_put_IMP_set_opt(a->auth_attr,i2d_X509_ATTRIBUTE,0);
  	M_ASN1_I2D_put(a->digest_enc_alg,i2d_X509_ALGOR);
  	M_ASN1_I2D_put(a->enc_digest,i2d_ASN1_OCTET_STRING);
***************
*** 93,99 ****
  	M_ASN1_D2I_start_sequence();
  	M_ASN1_D2I_get(ret->version,d2i_ASN1_INTEGER);
  	M_ASN1_D2I_get(ret->issuer_and_serial,d2i_PKCS7_ISSUER_AND_SERIAL);
! 	M_ASN1_D2I_get(ret->digest_alg,d2i_ASN1_OBJECT);
  	M_ASN1_D2I_get_IMP_set_opt(ret->auth_attr,d2i_X509_ATTRIBUTE,0);
  	M_ASN1_D2I_get(ret->digest_enc_alg,d2i_X509_ALGOR);
  	M_ASN1_D2I_get(ret->enc_digest,d2i_ASN1_OCTET_STRING);
--- 93,99 ----
  	M_ASN1_D2I_start_sequence();
  	M_ASN1_D2I_get(ret->version,d2i_ASN1_INTEGER);
  	M_ASN1_D2I_get(ret->issuer_and_serial,d2i_PKCS7_ISSUER_AND_SERIAL);
! 	M_ASN1_D2I_get(ret->digest_alg,d2i_X509_ALGOR);
  	M_ASN1_D2I_get_IMP_set_opt(ret->auth_attr,d2i_X509_ATTRIBUTE,0);
  	M_ASN1_D2I_get(ret->digest_enc_alg,d2i_X509_ALGOR);
  	M_ASN1_D2I_get(ret->enc_digest,d2i_ASN1_OCTET_STRING);
***************
*** 110,116 ****
  	M_ASN1_New_Malloc(ret,PKCS7_SIGNER_INFO);
  	M_ASN1_New(ret->version,ASN1_INTEGER_new);
  	M_ASN1_New(ret->issuer_and_serial,PKCS7_ISSUER_AND_SERIAL_new);
! 	M_ASN1_New(ret->digest_alg,ASN1_OBJECT_new);
  	ret->auth_attr=NULL;
  	M_ASN1_New(ret->digest_enc_alg,X509_ALGOR_new);
  	M_ASN1_New(ret->enc_digest,ASN1_OCTET_STRING_new);
--- 110,116 ----
  	M_ASN1_New_Malloc(ret,PKCS7_SIGNER_INFO);
  	M_ASN1_New(ret->version,ASN1_INTEGER_new);
  	M_ASN1_New(ret->issuer_and_serial,PKCS7_ISSUER_AND_SERIAL_new);
! 	M_ASN1_New(ret->digest_alg,X509_ALGOR_new);
  	ret->auth_attr=NULL;
  	M_ASN1_New(ret->digest_enc_alg,X509_ALGOR_new);
  	M_ASN1_New(ret->enc_digest,ASN1_OCTET_STRING_new);
***************
*** 125,131 ****
  	if (a == NULL) return;
  	ASN1_INTEGER_free(a->version);
  	PKCS7_ISSUER_AND_SERIAL_free(a->issuer_and_serial);
! 	ASN1_OBJECT_free(a->digest_alg);
  	sk_pop_free(a->auth_attr,X509_ATTRIBUTE_free);
  	X509_ALGOR_free(a->digest_enc_alg);
  	ASN1_OCTET_STRING_free(a->enc_digest);
--- 125,131 ----
  	if (a == NULL) return;
  	ASN1_INTEGER_free(a->version);
  	PKCS7_ISSUER_AND_SERIAL_free(a->issuer_and_serial);
! 	X509_ALGOR_free(a->digest_alg);
  	sk_pop_free(a->auth_attr,X509_ATTRIBUTE_free);
  	X509_ALGOR_free(a->digest_enc_alg);
  	ASN1_OCTET_STRING_free(a->enc_digest);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/p7_s_e.c	Wed Jul 17 16:45:38 1996
--- ./crypto/asn1/p7_s_e.c	Wed Aug  7 16:40:05 1996
***************
*** 63,69 ****
  
  	M_ASN1_I2D_len(a->version,i2d_ASN1_INTEGER);
  	M_ASN1_I2D_len_SET(a->recipientinfo,i2d_PKCS7_RECIP_INFO);
! 	M_ASN1_I2D_len_SET(a->md_algs,i2d_ASN1_OBJECT);
  	M_ASN1_I2D_len(a->enc_data,i2d_PKCS7_ENC_CONTENT);
  	M_ASN1_I2D_len_IMP_set_opt(a->cert,i2d_X509,0);
  	M_ASN1_I2D_len_IMP_set_opt(a->crl,i2d_X509_CRL,1);
--- 63,69 ----
  
  	M_ASN1_I2D_len(a->version,i2d_ASN1_INTEGER);
  	M_ASN1_I2D_len_SET(a->recipientinfo,i2d_PKCS7_RECIP_INFO);
! 	M_ASN1_I2D_len_SET(a->md_algs,i2d_X509_ALGOR);
  	M_ASN1_I2D_len(a->enc_data,i2d_PKCS7_ENC_CONTENT);
  	M_ASN1_I2D_len_IMP_set_opt(a->cert,i2d_X509,0);
  	M_ASN1_I2D_len_IMP_set_opt(a->crl,i2d_X509_CRL,1);
***************
*** 73,79 ****
  
  	M_ASN1_I2D_put(a->version,i2d_ASN1_INTEGER);
  	M_ASN1_I2D_put_SET(a->recipientinfo,i2d_PKCS7_RECIP_INFO);
! 	M_ASN1_I2D_put_SET(a->md_algs,i2d_ASN1_OBJECT);
  	M_ASN1_I2D_put(a->enc_data,i2d_PKCS7_ENC_CONTENT);
  	M_ASN1_I2D_put_IMP_set_opt(a->cert,i2d_X509,0);
  	M_ASN1_I2D_put_IMP_set_opt(a->crl,i2d_X509_CRL,1);
--- 73,79 ----
  
  	M_ASN1_I2D_put(a->version,i2d_ASN1_INTEGER);
  	M_ASN1_I2D_put_SET(a->recipientinfo,i2d_PKCS7_RECIP_INFO);
! 	M_ASN1_I2D_put_SET(a->md_algs,i2d_X509_ALGOR);
  	M_ASN1_I2D_put(a->enc_data,i2d_PKCS7_ENC_CONTENT);
  	M_ASN1_I2D_put_IMP_set_opt(a->cert,i2d_X509,0);
  	M_ASN1_I2D_put_IMP_set_opt(a->crl,i2d_X509_CRL,1);
***************
*** 93,99 ****
  	M_ASN1_D2I_start_sequence();
  	M_ASN1_D2I_get(ret->version,d2i_ASN1_INTEGER);
  	M_ASN1_D2I_get_set(ret->recipientinfo,d2i_PKCS7_RECIP_INFO);
! 	M_ASN1_D2I_get_set(ret->md_algs,d2i_ASN1_OBJECT);
  	M_ASN1_D2I_get(ret->enc_data,d2i_PKCS7_ENC_CONTENT);
  	M_ASN1_D2I_get_IMP_set_opt(ret->cert,d2i_X509,0);
  	M_ASN1_D2I_get_IMP_set_opt(ret->crl,d2i_X509_CRL,1);
--- 93,99 ----
  	M_ASN1_D2I_start_sequence();
  	M_ASN1_D2I_get(ret->version,d2i_ASN1_INTEGER);
  	M_ASN1_D2I_get_set(ret->recipientinfo,d2i_PKCS7_RECIP_INFO);
! 	M_ASN1_D2I_get_set(ret->md_algs,d2i_X509_ALGOR);
  	M_ASN1_D2I_get(ret->enc_data,d2i_PKCS7_ENC_CONTENT);
  	M_ASN1_D2I_get_IMP_set_opt(ret->cert,d2i_X509,0);
  	M_ASN1_D2I_get_IMP_set_opt(ret->crl,d2i_X509_CRL,1);
***************
*** 125,131 ****
  	if (a == NULL) return;
  	ASN1_INTEGER_free(a->version);
  	sk_pop_free(a->recipientinfo,PKCS7_RECIP_INFO_free);
! 	sk_pop_free(a->md_algs,ASN1_OBJECT_free);
  	PKCS7_ENC_CONTENT_free(a->enc_data);
  	sk_pop_free(a->cert,X509_free);
  	sk_pop_free(a->crl,X509_CRL_free);
--- 125,131 ----
  	if (a == NULL) return;
  	ASN1_INTEGER_free(a->version);
  	sk_pop_free(a->recipientinfo,PKCS7_RECIP_INFO_free);
! 	sk_pop_free(a->md_algs,X509_ALGOR_free);
  	PKCS7_ENC_CONTENT_free(a->enc_data);
  	sk_pop_free(a->cert,X509_free);
  	sk_pop_free(a->crl,X509_CRL_free);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/asn1/t_x509.c	Wed Jul 17 16:45:38 1996
--- ./crypto/asn1/t_x509.c	Thu Aug  1 09:42:34 1996
***************
*** 155,161 ****
  			goto err;
  		RSA_print(bp,rsa,16);
  		break;
! 	case NID_dss:
  	case NID_dsaWithSHA:
  	case NID_dsaWithSHA1:
  		if (d2i_DSAPublicKey(&dsa,(unsigned char **)&s, len) == NULL)
--- 155,161 ----
  			goto err;
  		RSA_print(bp,rsa,16);
  		break;
! 	case NID_dsa:
  	case NID_dsaWithSHA:
  	case NID_dsaWithSHA1:
  		if (d2i_DSAPublicKey(&dsa,(unsigned char **)&s, len) == NULL)
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/bn/bn_lib.c	Wed Jul 24 07:56:41 1996
--- ./crypto/bn/bn_lib.c	Tue Aug  6 15:57:42 1996
***************
*** 49,55 ****
  #include "cryptlib.h"
  #include "bn.h"
  
! char *BN_version="Big Number part of SSLeay 0.6.2 24-Jul-1996";
  
  static BN_ULONG data_one=1L;
  static BIGNUM const_one={&data_one,1,1,0};
--- 49,55 ----
  #include "cryptlib.h"
  #include "bn.h"
  
! char *BN_version="Big Number part of SSLeay 0.6.3 06-Aug-1996";
  
  static BN_ULONG data_one=1L;
  static BIGNUM const_one={&data_one,1,1,0};
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/buffer/bss_mem.c	Tue Jul 23 19:47:30 1996
--- ./crypto/buffer/bss_mem.c	Wed Jul 31 09:53:47 1996
***************
*** 177,182 ****
--- 177,184 ----
  char *ptr;
  	{
  	long ret=1;
+ 	char **pptr;
+ 
  	BUF_MEM *bm=(BUF_MEM *)b->ptr;
  
  	switch (cmd)
***************
*** 191,197 ****
  	case BIO_CTRL_INFO:
  		ret=(long)bm->length;
  		if (ptr != NULL)
! 			ptr=(char *)&(bm->data[0]);
  		break;
  	case BIO_CTRL_SET:
  		mem_free(b);
--- 193,203 ----
  	case BIO_CTRL_INFO:
  		ret=(long)bm->length;
  		if (ptr != NULL)
! 			{
! 			pptr=(char **)ptr;
! 			if (pptr != NULL)
! 				pptr=(char **)&(bm->data[0]);
! 			}
  		break;
  	case BIO_CTRL_SET:
  		mem_free(b);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/buffer/bss_sock.c	Wed Jul 17 16:45:42 1996
--- ./crypto/buffer/bss_sock.c	Wed Jul 31 11:15:24 1996
***************
*** 157,166 ****
  			{
  #ifndef BIO_FD
  			shutdown(a->num,2);
! #ifdef WINDOWS
  			closesocket(a->num);
! #endif
! #else
  			close(a->num);
  #endif
  
--- 157,168 ----
  			{
  #ifndef BIO_FD
  			shutdown(a->num,2);
! # ifdef WINDOWS
  			closesocket(a->num);
! # else
! 			close(a->num);
! # endif
! #else			/* BIO_FD */
  			close(a->num);
  #endif
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/conf/conf.c	Wed Jul 24 07:56:40 1996
--- ./crypto/conf/conf.c	Tue Aug  6 15:57:41 1996
***************
*** 84,90 ****
  
  #define scan_esc(p)	((*(++p) == '\0')?(p):(++p))
  
! char *CONF_version="CONF part of SSLeay 0.6.2 24-Jul-1996";
  
  LHASH *CONF_load(h,file,line)
  LHASH *h;
--- 84,90 ----
  
  #define scan_esc(p)	((*(++p) == '\0')?(p):(++p))
  
! char *CONF_version="CONF part of SSLeay 0.6.3 06-Aug-1996";
  
  LHASH *CONF_load(h,file,line)
  LHASH *h;
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/cryptlib.c	Wed Jul 24 19:11:24 1996
--- ./crypto/cryptlib.c	Wed Aug  7 09:24:25 1996
***************
*** 89,95 ****
  int t;
  	{
  	if (t == SSLEAY_VERSION)
! 		return("SSLeay 0.6.2 24-Jul-1996");
  	if (t == SSLEAY_OPTIONS)
  		{
  		static char buf[100];
--- 89,95 ----
  int t;
  	{
  	if (t == SSLEAY_VERSION)
! 		return("SSLeay 0.6.3 06-Aug-1996");
  	if (t == SSLEAY_OPTIONS)
  		{
  		static char buf[100];
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/crypto.h	Wed Jul 24 07:58:09 1996
--- ./crypto/crypto.h	Tue Aug  6 15:57:18 1996
***************
*** 54,60 ****
  
  /* This is more to be used to check the correct DLL is being used
   * in the MS world. */
! #define SSLEAY_VERSION_NUMBER	0x0620	/* Version 0.5.1c would be 0513 */
  
  #define SSLEAY_VERSION		0
  #define SSLEAY_OPTIONS		1
--- 54,60 ----
  
  /* This is more to be used to check the correct DLL is being used
   * in the MS world. */
! #define SSLEAY_VERSION_NUMBER	0x0630	/* Version 0.5.1c would be 0513 */
  
  #define SSLEAY_VERSION		0
  #define SSLEAY_OPTIONS		1
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/date.h	Thu Jul 25 12:39:28 1996
--- ./crypto/date.h	Thu Aug  8 00:59:29 1996
***************
*** 1 ****
! #define DATE	"Thu Jul 25 12:39:28 EST 1996"
--- 1 ----
! #define DATE	"Thu Aug  8 00:59:29 EST 1996"
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/des/ecb_enc.c	Wed Jul 24 07:56:40 1996
--- ./crypto/des/ecb_enc.c	Tue Aug  6 15:57:41 1996
***************
*** 49,55 ****
  #include "spr.h"
  
  char *libdes_version="libdes v 3.24 - 20-Apr-1996 - eay";
! char *DES_version="DES part of SSLeay 0.6.2 24-Jul-1996";
  
  char *des_options()
  	{
--- 49,55 ----
  #include "spr.h"
  
  char *libdes_version="libdes v 3.24 - 20-Apr-1996 - eay";
! char *DES_version="DES part of SSLeay 0.6.3 06-Aug-1996";
  
  char *des_options()
  	{
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/des/read_pwd.c	Wed Jul 17 16:53:06 1996
--- ./crypto/des/read_pwd.c	Mon Jul 29 12:02:33 1996
***************
*** 56,61 ****
--- 56,62 ----
  #include <signal.h>
  #include <string.h>
  #include <setjmp.h>
+ #include <errno.h>
  
  /* There are 5 types of terminal interface supported,
   * TERMIO, TERMIOS, VMS, MSDOS and SGTTY
***************
*** 238,243 ****
--- 239,246 ----
  	int number=5;
  	int ok=0;
  	int ps=0;
+ 	int is_a_tty=1;
+ 
  	FILE *tty=NULL;
  	char *p;
  
***************
*** 251,257 ****
--- 254,267 ----
  
  #if defined(TTY_get) && !defined(VMS)
  	if (TTY_get(fileno(tty),&tty_orig) == -1)
+ 		{
+ #ifdef ENOTTY
+ 		if (errno == ENOTTY)
+ 			is_a_tty=0;
+ 		else
+ #endif
  			return(-1);
+ 		}
  	memcpy(&(tty_new),&(tty_orig),sizeof(tty_orig));
  #endif
  #ifdef VMS
***************
*** 276,282 ****
  #endif
  
  #if defined(TTY_set) && !defined(VMS)
! 	if (TTY_set(fileno(tty),&tty_new) == -1)
  		return(-1);
  #endif
  #ifdef VMS
--- 286,292 ----
  #endif
  
  #if defined(TTY_set) && !defined(VMS)
! 	if (is_a_tty && (TTY_set(fileno(tty),&tty_new) == -1))
  		return(-1);
  #endif
  #ifdef VMS
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/des/VERSION	Thu Jul 25 10:28:35 1996
--- ./crypto/des/VERSION	Sun Jul 28 02:41:39 1996
***************
*** 1,4 ****
--- 1,6 ----
  Version 3.25 17/07/96
+ 	Modified read_pwd.c so that stdin can be read if not a tty.
+ 	Thanks to Jeff Barber <jeffb@issl.atl.hp.com> for the patches.
  	des_init_random_number_generator() shortened due to VMS linker
  	limits.
  	Added RSA's DESX cbc mode.  It is a form of cbc encryption, with 2
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/des/xcbc_enc.c	Thu Jul 25 11:05:06 1996
--- ./crypto/des/xcbc_enc.c	Fri Aug  2 14:31:10 1996
***************
*** 48,53 ****
--- 48,105 ----
  #include "des_locl.h"
  
  /* RSA's DESX */
+ 
+ static unsigned char desx_white_in2out[256]={
+ 0xBD,0x56,0xEA,0xF2,0xA2,0xF1,0xAC,0x2A,0xB0,0x93,0xD1,0x9C,0x1B,0x33,0xFD,0xD0,
+ 0x30,0x04,0xB6,0xDC,0x7D,0xDF,0x32,0x4B,0xF7,0xCB,0x45,0x9B,0x31,0xBB,0x21,0x5A,
+ 0x41,0x9F,0xE1,0xD9,0x4A,0x4D,0x9E,0xDA,0xA0,0x68,0x2C,0xC3,0x27,0x5F,0x80,0x36,
+ 0x3E,0xEE,0xFB,0x95,0x1A,0xFE,0xCE,0xA8,0x34,0xA9,0x13,0xF0,0xA6,0x3F,0xD8,0x0C,
+ 0x78,0x24,0xAF,0x23,0x52,0xC1,0x67,0x17,0xF5,0x66,0x90,0xE7,0xE8,0x07,0xB8,0x60,
+ 0x48,0xE6,0x1E,0x53,0xF3,0x92,0xA4,0x72,0x8C,0x08,0x15,0x6E,0x86,0x00,0x84,0xFA,
+ 0xF4,0x7F,0x8A,0x42,0x19,0xF6,0xDB,0xCD,0x14,0x8D,0x50,0x12,0xBA,0x3C,0x06,0x4E,
+ 0xEC,0xB3,0x35,0x11,0xA1,0x88,0x8E,0x2B,0x94,0x99,0xB7,0x71,0x74,0xD3,0xE4,0xBF,
+ 0x3A,0xDE,0x96,0x0E,0xBC,0x0A,0xED,0x77,0xFC,0x37,0x6B,0x03,0x79,0x89,0x62,0xC6,
+ 0xD7,0xC0,0xD2,0x7C,0x6A,0x8B,0x22,0xA3,0x5B,0x05,0x5D,0x02,0x75,0xD5,0x61,0xE3,
+ 0x18,0x8F,0x55,0x51,0xAD,0x1F,0x0B,0x5E,0x85,0xE5,0xC2,0x57,0x63,0xCA,0x3D,0x6C,
+ 0xB4,0xC5,0xCC,0x70,0xB2,0x91,0x59,0x0D,0x47,0x20,0xC8,0x4F,0x58,0xE0,0x01,0xE2,
+ 0x16,0x38,0xC4,0x6F,0x3B,0x0F,0x65,0x46,0xBE,0x7E,0x2D,0x7B,0x82,0xF9,0x40,0xB5,
+ 0x1D,0x73,0xF8,0xEB,0x26,0xC7,0x87,0x97,0x25,0x54,0xB1,0x28,0xAA,0x98,0x9D,0xA5,
+ 0x64,0x6D,0x7A,0xD4,0x10,0x81,0x44,0xEF,0x49,0xD6,0xAE,0x2E,0xDD,0x76,0x5C,0x2F,
+ 0xA7,0x1C,0xC9,0x09,0x69,0x9A,0x83,0xCF,0x29,0x39,0xB9,0xE9,0x4C,0xFF,0x43,0xAB,
+ 	};
+ 
+ void des_xwhite_in2out(des_key,in_white,out_white)
+ des_cblock (*des_key);
+ des_cblock (*in_white);
+ des_cblock (*out_white);
+ 	{
+ 	unsigned char *key,*in,*out;
+ 	int out0,out1;
+ 	int i;
+ 
+ 	key=(unsigned char *)des_key;
+ 	in=(unsigned char *)in_white;
+ 	out=(unsigned char *)out_white;
+ 
+ 	out[0]=out[1]=out[2]=out[3]=out[4]=out[5]=out[6]=out[7]=0;
+ 	out0=out1=0;
+ 	for (i=0; i<8; i++)
+ 		{
+ 		out[i]=key[i]^desx_white_in2out[out0^out1];
+ 		out0=out1;
+ 		out1=(int)out[i&0x07];
+ 		}
+ 
+ 	out0=out[0];
+ 	out1=out[i];
+ 	for (i=0; i<8; i++)
+ 		{
+ 		out[i]=in[i]^desx_white_in2out[out0^out1];
+ 		out0=out1;
+ 		out1=(int)out[i&0x07];
+ 		}
+ 	}
+ 
  void des_xcbc_encrypt(input, output, length, schedule, ivec, inw,outw,encrypt)
  des_cblock (*input);
  des_cblock (*output);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/dh/dh_lib.c	Wed Jul 24 07:56:41 1996
--- ./crypto/dh/dh_lib.c	Tue Aug  6 15:57:42 1996
***************
*** 50,56 ****
  #include "bn.h"
  #include "dh.h"
  
! char *DH_version="Diffie-Hellman part of SSLeay 0.6.2 24-Jul-1996";
  
  DH *DH_new()
  	{
--- 50,56 ----
  #include "bn.h"
  #include "dh.h"
  
! char *DH_version="Diffie-Hellman part of SSLeay 0.6.3 06-Aug-1996";
  
  DH *DH_new()
  	{
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/dsa/dsa_lib.c	Wed Jul 24 07:56:41 1996
--- ./crypto/dsa/dsa_lib.c	Tue Aug  6 15:57:43 1996
***************
*** 53,59 ****
  #include "dsa.h"
  #include "asn1.h"
  
! char *DSA_version="\0DSA part of SSLeay 0.6.2 24-Jul-1996";
  
  DSA *DSA_new()
  	{
--- 53,59 ----
  #include "dsa.h"
  #include "asn1.h"
  
! char *DSA_version="\0DSA part of SSLeay 0.6.3 06-Aug-1996";
  
  DSA *DSA_new()
  	{
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/dsa/dsa_vrf.c	Wed Jul 17 16:45:48 1996
--- ./crypto/dsa/dsa_vrf.c	Thu Aug  1 14:10:06 1996
***************
*** 85,91 ****
  
  	t1=BN_new();
  	t2=BN_new();
! 	if (r == NULL || t1 == NULL || t2 == NULL || u1 == NULL) goto err;
  
  	M_ASN1_D2I_Init();
  	M_ASN1_D2I_start_sequence();
--- 85,91 ----
  
  	t1=BN_new();
  	t2=BN_new();
! 	if (t1 == NULL || t2 == NULL) goto err;
  
  	M_ASN1_D2I_Init();
  	M_ASN1_D2I_start_sequence();
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/evp/encode.c	Wed Jul 17 16:45:51 1996
--- ./crypto/evp/encode.c	Fri Aug  2 08:34:20 1996
***************
*** 126,132 ****
  		ctx->num=0;
  		out+=j;
  		*(out++)='\n';
! 		out[1]='\0';
  		total=j+1;
  		}
  	while (inl >= ctx->length)
--- 126,132 ----
  		ctx->num=0;
  		out+=j;
  		*(out++)='\n';
! 		*out='\0';
  		total=j+1;
  		}
  	while (inl >= ctx->length)
***************
*** 136,142 ****
  		inl-=ctx->length;
  		out+=j;
  		*(out++)='\n';
! 		out[1]='\0';
  		total+=j+1;
  		}
  	if (inl != 0)
--- 136,142 ----
  		inl-=ctx->length;
  		out+=j;
  		*(out++)='\n';
! 		*out='\0';
  		total+=j+1;
  		}
  	if (inl != 0)
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/evp/envelope.h	Thu Jul 25 11:35:19 1996
--- ./crypto/evp/envelope.h	Thu Aug  1 10:37:41 1996
***************
*** 91,97 ****
  #define EVP_PKEY_NONE	NID_undef
  #define EVP_PKEY_RSA	NID_rsaEncryption
  #define EVP_PKEY_RSA2	NID_rsa
! #define EVP_PKEY_DSA	NID_dss
  #define EVP_PKEY_DSA2	NID_dsaWithSHA
  #define EVP_PKEY_DSA3	NID_dsaWithSHA1
  #define EVP_PKEY_DH	NID_dhKeyAgreement
--- 91,97 ----
  #define EVP_PKEY_NONE	NID_undef
  #define EVP_PKEY_RSA	NID_rsaEncryption
  #define EVP_PKEY_RSA2	NID_rsa
! #define EVP_PKEY_DSA	NID_dsa
  #define EVP_PKEY_DSA2	NID_dsaWithSHA
  #define EVP_PKEY_DSA3	NID_dsaWithSHA1
  #define EVP_PKEY_DH	NID_dhKeyAgreement
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/evp/evp_enc.c	Wed Jul 24 07:56:41 1996
--- ./crypto/evp/evp_enc.c	Tue Aug  6 15:57:44 1996
***************
*** 49,55 ****
  #include "cryptlib.h"
  #include "envelope.h"
  
! char *EVP_version="EVP part of SSLeay 0.6.2 24-Jul-1996";
  
  void EVP_CipherInit(ctx,data,key,iv,enc)
  EVP_CIPHER_CTX *ctx;
--- 49,55 ----
  #include "cryptlib.h"
  #include "envelope.h"
  
! char *EVP_version="EVP part of SSLeay 0.6.3 06-Aug-1996";
  
  void EVP_CipherInit(ctx,data,key,iv,enc)
  EVP_CIPHER_CTX *ctx;
***************
*** 97,103 ****
  	{
  	if (cipher != NULL)
  		ctx->cipher=cipher;
! 	cipher->enc_init(ctx,key,iv);
  	ctx->encrypt=1;
  	ctx->buf_len=0;
  	}
--- 97,103 ----
  	{
  	if (cipher != NULL)
  		ctx->cipher=cipher;
! 	ctx->cipher->enc_init(ctx,key,iv);
  	ctx->encrypt=1;
  	ctx->buf_len=0;
  	}
***************
*** 110,116 ****
  	{
  	if (cipher != NULL)
  		ctx->cipher=cipher;
! 	cipher->dec_init(ctx,key,iv);
  	ctx->encrypt=0;
  	ctx->buf_len=0;
  	}
--- 110,116 ----
  	{
  	if (cipher != NULL)
  		ctx->cipher=cipher;
! 	ctx->cipher->dec_init(ctx,key,iv);
  	ctx->encrypt=0;
  	ctx->buf_len=0;
  	}
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/evp/m_dss.c	Wed Jul 17 16:45:51 1996
--- ./crypto/evp/m_dss.c	Thu Aug  1 10:36:15 1996
***************
*** 56,64 ****
  	NID_sha,
  	NID_dsaWithSHA,
  	SHA_DIGEST_LENGTH,
! 	SHA1_Init,
! 	SHA1_Update,
! 	SHA1_Final,
  	EVP_PKEY_DSA_method,
  	};
  
--- 56,64 ----
  	NID_sha,
  	NID_dsaWithSHA,
  	SHA_DIGEST_LENGTH,
! 	SHA_Init,
! 	SHA_Update,
! 	SHA_Final,
  	EVP_PKEY_DSA_method,
  	};
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/idea/i_ecb.c	Wed Jul 24 07:56:40 1996
--- ./crypto/idea/i_ecb.c	Tue Aug  6 15:57:41 1996
***************
*** 48,54 ****
  #include "idea.h"
  #include "idea_lcl.h"
  
! char *IDEA_version="IDEA part of SSLeay 0.6.2 24-Jul-1996";
  
  char *idea_options()
  	{
--- 48,54 ----
  #include "idea.h"
  #include "idea_lcl.h"
  
! char *IDEA_version="IDEA part of SSLeay 0.6.3 06-Aug-1996";
  
  char *idea_options()
  	{
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/lhash/lhash.c	Wed Jul 24 07:56:40 1996
--- ./crypto/lhash/lhash.c	Tue Aug  6 15:57:41 1996
***************
*** 45,51 ****
   * [including the GNU Public Licence.]
   */
  
! char *lh_version="lhash part of SSLeay 0.6.2 24-Jul-1996";
  
  /* Code for dynamic hash table routines
   * Author - Eric Young v 2.0
--- 45,51 ----
   * [including the GNU Public Licence.]
   */
  
! char *lh_version="lhash part of SSLeay 0.6.3 06-Aug-1996";
  
  /* Code for dynamic hash table routines
   * Author - Eric Young v 2.0
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/md/md2_dgst.c	Wed Jul 24 07:56:40 1996
--- ./crypto/md/md2_dgst.c	Tue Aug  6 15:57:42 1996
***************
*** 50,56 ****
  #include <string.h>
  #include "md2.h"
  
! char *MD2_version="MD2 part of SSLeay 0.6.2 24-Jul-1996";
  
  /* Implemented from RFC1319 The MD2 Message-Digest Algorithm
   */
--- 50,56 ----
  #include <string.h>
  #include "md2.h"
  
! char *MD2_version="MD2 part of SSLeay 0.6.3 06-Aug-1996";
  
  /* Implemented from RFC1319 The MD2 Message-Digest Algorithm
   */
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/md/md5_dgst.c	Wed Jul 24 07:56:40 1996
--- ./crypto/md/md5_dgst.c	Tue Aug  6 15:57:42 1996
***************
*** 48,54 ****
  #include <stdio.h>
  #include "md5_locl.h"
  
! char *MD5_version="MD5 part of SSLeay 0.6.2 24-Jul-1996";
  
  /* Implemented from RFC1321 The MD5 Message-Digest Algorithm
   */
--- 48,54 ----
  #include <stdio.h>
  #include "md5_locl.h"
  
! char *MD5_version="MD5 part of SSLeay 0.6.3 06-Aug-1996";
  
  /* Implemented from RFC1321 The MD5 Message-Digest Algorithm
   */
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/objects/objects.h	Wed Jul 24 23:17:31 1996
--- ./crypto/objects/objects.h	Thu Aug  1 14:37:47 1996
***************
*** 351,366 ****
  #define SN_sha1WithRSAEncryption	"RSA-SHA1"
  #define LN_sha1WithRSAEncryption	"sha1WithRSAEncryption"
  #define NID_sha1WithRSAEncryption	65
  
! #define SN_dsaWithSHA			"DSS-SHA"
! #define LN_dsaWithSHA			"shaWithDSSEncryption"
  #define NID_dsaWithSHA			66
! #define OBJ_dsaWithSHA			OBJ_algorithm,12L
  
! #define SN_dss				"DSS"
! #define LN_dss				"dssEncryption"
! #define NID_dss				67
! #define OBJ_dss				OBJ_algorithm,13L
  
  /* proposed by microsoft to RSA */
  #define LN_pbeWithSHA1AndRC2_CBC	"pbeWithSHA1AndRC2-CBC"
--- 351,367 ----
  #define SN_sha1WithRSAEncryption	"RSA-SHA1"
  #define LN_sha1WithRSAEncryption	"sha1WithRSAEncryption"
  #define NID_sha1WithRSAEncryption	65
+ #define OBJ_sha1WithRSAEncryption	OBJ_pkcs,1L,5L
  
! #define SN_dsaWithSHA			"DSA-SHA"
! #define LN_dsaWithSHA			"dsaWithSHA"
  #define NID_dsaWithSHA			66
! #define OBJ_dsaWithSHA			OBJ_algorithm,13L
  
! #define SN_dsa				"DSA"
! #define LN_dsa				"dsaEncryption"
! #define NID_dsa				67
! #define OBJ_dsa				OBJ_algorithm,12L
  
  /* proposed by microsoft to RSA */
  #define LN_pbeWithSHA1AndRC2_CBC	"pbeWithSHA1AndRC2-CBC"
***************
*** 373,379 ****
  #define OBJ_pbeWithSHA1AndRC4		OBJ_pkcs,5L,12L 
  
  #define SN_dsaWithSHA1			"DSS-SHA1"
! #define LN_dsaWithSHA1			"sha1WithDSSEncryption"
  #define NID_dsaWithSHA1			70
  
  #define SN_netscape_cert_type		"nsCertType"
--- 374,380 ----
  #define OBJ_pbeWithSHA1AndRC4		OBJ_pkcs,5L,12L 
  
  #define SN_dsaWithSHA1			"DSS-SHA1"
! #define LN_dsaWithSHA1			"dsaWithSHA1"
  #define NID_dsaWithSHA1			70
  
  #define SN_netscape_cert_type		"nsCertType"
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/objects/obj_dat.h	Wed Jul 24 23:17:36 1996
--- ./crypto/objects/obj_dat.h	Thu Aug  1 14:38:19 1996
***************
*** 53,61 ****
  #define NUM_NID 81
  #define NUM_SN 54
  #define NUM_LN 81
! #define NUM_OBJ 63
  
! static unsigned char lvalues[462]={
  0x2A,0x86,0x48,0x86,0xF7,0x0D,               /* [  0] OBJ_rsadsi */
  0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,          /* [  6] OBJ_pkcs */
  0x2A,0x86,0x48,0x86,0xF7,0x0D,0x02,0x02,     /* [ 13] OBJ_md2 */
--- 53,61 ----
  #define NUM_NID 81
  #define NUM_SN 54
  #define NUM_LN 81
! #define NUM_OBJ 64
  
! static unsigned char lvalues[471]={
  0x2A,0x86,0x48,0x86,0xF7,0x0D,               /* [  0] OBJ_rsadsi */
  0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,          /* [  6] OBJ_pkcs */
  0x2A,0x86,0x48,0x86,0xF7,0x0D,0x02,0x02,     /* [ 13] OBJ_md2 */
***************
*** 106,124 ****
  0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,     /* [331] OBJ_netscape_cert_extension */
  0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x02,     /* [339] OBJ_netscape_data_type */
  0x2B,0x0E,0x02,0x1A,0x05,                    /* [347] OBJ_sha1 */
! 0x2B,0x0E,0x03,0x02,0x0C,                    /* [352] OBJ_dsaWithSHA */
! 0x2B,0x0E,0x03,0x02,0x0D,                    /* [357] OBJ_dss */
! 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0B,/* [362] OBJ_pbeWithSHA1AndRC2_CBC */
! 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0C,/* [371] OBJ_pbeWithSHA1AndRC4 */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x01,/* [380] OBJ_netscape_cert_type */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x02,/* [389] OBJ_netscape_base_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x03,/* [398] OBJ_netscape_revocation_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x04,/* [407] OBJ_netscape_ca_revocation_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x07,/* [416] OBJ_netscape_renewal_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x08,/* [425] OBJ_netscape_ca_policy_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x0C,/* [434] OBJ_netscape_ssl_server_name */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x0D,/* [443] OBJ_netscape_comment */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x02,0x05,/* [452] OBJ_netscape_cert_sequence */
  };
  
  static ASN1_OBJECT nid_objs[NUM_NID]={
--- 106,125 ----
  0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,     /* [331] OBJ_netscape_cert_extension */
  0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x02,     /* [339] OBJ_netscape_data_type */
  0x2B,0x0E,0x02,0x1A,0x05,                    /* [347] OBJ_sha1 */
! 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x01,0x05,/* [352] OBJ_sha1WithRSAEncryption */
! 0x2B,0x0E,0x03,0x02,0x0D,                    /* [361] OBJ_dsaWithSHA */
! 0x2B,0x0E,0x03,0x02,0x0C,                    /* [366] OBJ_dsa */
! 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0B,/* [371] OBJ_pbeWithSHA1AndRC2_CBC */
! 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0C,/* [380] OBJ_pbeWithSHA1AndRC4 */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x01,/* [389] OBJ_netscape_cert_type */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x02,/* [398] OBJ_netscape_base_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x03,/* [407] OBJ_netscape_revocation_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x04,/* [416] OBJ_netscape_ca_revocation_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x07,/* [425] OBJ_netscape_renewal_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x08,/* [434] OBJ_netscape_ca_policy_url */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x0C,/* [443] OBJ_netscape_ssl_server_name */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x0D,/* [452] OBJ_netscape_comment */
! 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x02,0x05,/* [461] OBJ_netscape_cert_sequence */
  };
  
  static ASN1_OBJECT nid_objs[NUM_NID]={
***************
*** 207,237 ****
  {"DES-EDE-OFB","des-ede-ofb",NID_des_ede_ofb,0,NULL},
  {"DES-EDE3-OFB","des-ede3-ofb",NID_des_ede3_ofb,0,NULL},
  {"SHA1","sha1",NID_sha1,5,&(lvalues[347]),0},
! {"RSA-SHA1","sha1WithRSAEncryption",NID_sha1WithRSAEncryption,0,NULL},
! {"DSS-SHA","shaWithDSSEncryption",NID_dsaWithSHA,5,&(lvalues[352]),0},
! {"DSS","dssEncryption",NID_dss,5,&(lvalues[357]),0},
  {"pbeWithSHA1AndRC2-CBC","pbeWithSHA1AndRC2-CBC",
! 	NID_pbeWithSHA1AndRC2_CBC,9,&(lvalues[362]),0},
  {"pbeWithSHA1AndRC4","pbeWithSHA1AndRC4",NID_pbeWithSHA1AndRC4,9,
- 	&(lvalues[371]),0},
- {"DSS-SHA1","sha1WithDSSEncryption",NID_dsaWithSHA1,0,NULL},
- {"nsCertType","Netscape Cert Type",NID_netscape_cert_type,9,
  	&(lvalues[380]),0},
! {"nsBaseUrl","Netscape Base Url",NID_netscape_base_url,9,
  	&(lvalues[389]),0},
  {"nsRevocationUrl","Netscape Revocation Url",
! 	NID_netscape_revocation_url,9,&(lvalues[398]),0},
  {"nsCaRevocationUrl","Netscape CA Revocation Url",
! 	NID_netscape_ca_revocation_url,9,&(lvalues[407]),0},
  {"nsRenewalUrl","Netscape Renewal Url",NID_netscape_renewal_url,9,
! 	&(lvalues[416]),0},
  {"nsCaPolicyUrl","Netscape CA Policy Url",NID_netscape_ca_policy_url,
! 	9,&(lvalues[425]),0},
  {"nsSslServerName","Netscape SSL Server Name",
! 	NID_netscape_ssl_server_name,9,&(lvalues[434]),0},
! {"nsComment","Netscape Comment",NID_netscape_comment,9,&(lvalues[443]),0},
  {"nsCertSequence","Netscape Certificate Sequence",
! 	NID_netscape_cert_sequence,9,&(lvalues[452]),0},
  {"DESX-CBC","desx-cbc",NID_desx_cbc,0,NULL},
  };
  
--- 208,239 ----
  {"DES-EDE-OFB","des-ede-ofb",NID_des_ede_ofb,0,NULL},
  {"DES-EDE3-OFB","des-ede3-ofb",NID_des_ede3_ofb,0,NULL},
  {"SHA1","sha1",NID_sha1,5,&(lvalues[347]),0},
! {"RSA-SHA1","sha1WithRSAEncryption",NID_sha1WithRSAEncryption,9,
! 	&(lvalues[352]),0},
! {"DSA-SHA","dsaWithSHA",NID_dsaWithSHA,5,&(lvalues[361]),0},
! {"DSA","dsaEncryption",NID_dsa,5,&(lvalues[366]),0},
  {"pbeWithSHA1AndRC2-CBC","pbeWithSHA1AndRC2-CBC",
! 	NID_pbeWithSHA1AndRC2_CBC,9,&(lvalues[371]),0},
  {"pbeWithSHA1AndRC4","pbeWithSHA1AndRC4",NID_pbeWithSHA1AndRC4,9,
  	&(lvalues[380]),0},
! {"DSS-SHA1","dsaWithSHA1",NID_dsaWithSHA1,0,NULL},
! {"nsCertType","Netscape Cert Type",NID_netscape_cert_type,9,
  	&(lvalues[389]),0},
+ {"nsBaseUrl","Netscape Base Url",NID_netscape_base_url,9,
+ 	&(lvalues[398]),0},
  {"nsRevocationUrl","Netscape Revocation Url",
! 	NID_netscape_revocation_url,9,&(lvalues[407]),0},
  {"nsCaRevocationUrl","Netscape CA Revocation Url",
! 	NID_netscape_ca_revocation_url,9,&(lvalues[416]),0},
  {"nsRenewalUrl","Netscape Renewal Url",NID_netscape_renewal_url,9,
! 	&(lvalues[425]),0},
  {"nsCaPolicyUrl","Netscape CA Policy Url",NID_netscape_ca_policy_url,
! 	9,&(lvalues[434]),0},
  {"nsSslServerName","Netscape SSL Server Name",
! 	NID_netscape_ssl_server_name,9,&(lvalues[443]),0},
! {"nsComment","Netscape Comment",NID_netscape_comment,9,&(lvalues[452]),0},
  {"nsCertSequence","Netscape Certificate Sequence",
! 	NID_netscape_cert_sequence,9,&(lvalues[461]),0},
  {"DESX-CBC","desx-cbc",NID_desx_cbc,0,NULL},
  };
  
***************
*** 251,258 ****
  &(nid_objs[63]),/* "DES-EDE3-OFB" */
  &(nid_objs[45]),/* "DES-OFB" */
  &(nid_objs[80]),/* "DESX-CBC" */
! &(nid_objs[67]),/* "DSS" */
! &(nid_objs[66]),/* "DSS-SHA" */
  &(nid_objs[70]),/* "DSS-SHA1" */
  &(nid_objs[48]),/* "Email" */
  &(nid_objs[34]),/* "IDEA-CBC" */
--- 253,260 ----
  &(nid_objs[63]),/* "DES-EDE3-OFB" */
  &(nid_objs[45]),/* "DES-OFB" */
  &(nid_objs[80]),/* "DESX-CBC" */
! &(nid_objs[67]),/* "DSA" */
! &(nid_objs[66]),/* "DSA-SHA" */
  &(nid_objs[70]),/* "DSS-SHA1" */
  &(nid_objs[48]),/* "Email" */
  &(nid_objs[34]),/* "IDEA-CBC" */
***************
*** 326,332 ****
  &(nid_objs[45]),/* "des-ofb" */
  &(nid_objs[80]),/* "desx-cbc" */
  &(nid_objs[28]),/* "dhKeyAgreement" */
! &(nid_objs[67]),/* "dssEncryption" */
  &(nid_objs[48]),/* "emailAddress" */
  &(nid_objs[56]),/* "extendedCertificateAttributes" */
  &(nid_objs[34]),/* "idea-cbc" */
--- 328,336 ----
  &(nid_objs[45]),/* "des-ofb" */
  &(nid_objs[80]),/* "desx-cbc" */
  &(nid_objs[28]),/* "dhKeyAgreement" */
! &(nid_objs[67]),/* "dsaEncryption" */
! &(nid_objs[66]),/* "dsaWithSHA" */
! &(nid_objs[70]),/* "dsaWithSHA1" */
  &(nid_objs[48]),/* "emailAddress" */
  &(nid_objs[56]),/* "extendedCertificateAttributes" */
  &(nid_objs[34]),/* "idea-cbc" */
***************
*** 365,373 ****
  &(nid_objs[ 1]),/* "rsadsi" */
  &(nid_objs[41]),/* "sha" */
  &(nid_objs[64]),/* "sha1" */
- &(nid_objs[70]),/* "sha1WithDSSEncryption" */
  &(nid_objs[65]),/* "sha1WithRSAEncryption" */
- &(nid_objs[66]),/* "shaWithDSSEncryption" */
  &(nid_objs[42]),/* "shaWithRSAEncryption" */
  &(nid_objs[52]),/* "signingTime" */
  &(nid_objs[16]),/* "stateOrProvinceName" */
--- 369,375 ----
***************
*** 391,398 ****
  &(nid_objs[31]),/* OBJ_des_cbc                      1 3 14 3 2 7 */
  &(nid_objs[45]),/* OBJ_des_ofb                      1 3 14 3 2 8 */
  &(nid_objs[30]),/* OBJ_des_cfb                      1 3 14 3 2 9 */
! &(nid_objs[66]),/* OBJ_dsaWithSHA                   1 3 14 3 2 12 */
! &(nid_objs[67]),/* OBJ_dss                          1 3 14 3 2 13 */
  &(nid_objs[41]),/* OBJ_sha                          1 3 14 3 2 18 */
  &(nid_objs[ 1]),/* OBJ_rsadsi                       1 2 840 113549 */
  &(nid_objs[ 2]),/* OBJ_pkcs                         1 2 840 113549 1 */
--- 393,400 ----
  &(nid_objs[31]),/* OBJ_des_cbc                      1 3 14 3 2 7 */
  &(nid_objs[45]),/* OBJ_des_ofb                      1 3 14 3 2 8 */
  &(nid_objs[30]),/* OBJ_des_cfb                      1 3 14 3 2 9 */
! &(nid_objs[67]),/* OBJ_dsa                          1 3 14 3 2 12 */
! &(nid_objs[66]),/* OBJ_dsaWithSHA                   1 3 14 3 2 13 */
  &(nid_objs[41]),/* OBJ_sha                          1 3 14 3 2 18 */
  &(nid_objs[ 1]),/* OBJ_rsadsi                       1 2 840 113549 */
  &(nid_objs[ 2]),/* OBJ_pkcs                         1 2 840 113549 1 */
***************
*** 411,416 ****
--- 413,419 ----
  &(nid_objs[ 6]),/* OBJ_rsaEncryption                1 2 840 113549 1 1 1 */
  &(nid_objs[ 7]),/* OBJ_md2withRSAEncryption         1 2 840 113549 1 1 2 */
  &(nid_objs[ 8]),/* OBJ_md5withRSAEncryption         1 2 840 113549 1 1 4 */
+ &(nid_objs[65]),/* OBJ_sha1WithRSAEncryption        1 2 840 113549 1 1 5 */
  &(nid_objs[28]),/* OBJ_dhKeyAgreement               1 2 840 113549 1 3 1 */
  &(nid_objs[ 9]),/* OBJ_pbeWithMD2AndDES_CBC         1 2 840 113549 1 5 1 */
  &(nid_objs[10]),/* OBJ_pbeWithMD5AndDES_CBC         1 2 840 113549 1 5 3 */
*** /dev/null	Thu Aug  8 01:20:57 1996
--- ./crypto/objects/f	Fri Jul 26 09:38:17 1996
***************
*** 0 ****
--- 1,444 ----
+ /* lib/obj/obj_dat.h */
+ /* Copyright (C) 1995-1996 Eric Young (eay@mincom.oz.au)
+  * All rights reserved.
+  * 
+  * This file is part of an SSL implementation written
+  * by Eric Young (eay@mincom.oz.au).
+  * The implementation was written so as to conform with Netscapes SSL
+  * specification.  This library and applications are
+  * FREE FOR COMMERCIAL AND NON-COMMERCIAL USE
+  * as long as the following conditions are aheared to.
+  * 
+  * Copyright remains Eric Young's, and as such any Copyright notices in
+  * the code are not to be removed.  If this code is used in a product,
+  * Eric Young should be given attribution as the author of the parts used.
+  * This can be in the form of a textual message at program startup or
+  * in documentation (online or textual) provided with the package.
+  * 
+  * Redistribution and use in source and binary forms, with or without
+  * modification, are permitted provided that the following conditions
+  * are met:
+  * 1. Redistributions of source code must retain the copyright
+  *    notice, this list of conditions and the following disclaimer.
+  * 2. Redistributions in binary form must reproduce the above copyright
+  *    notice, this list of conditions and the following disclaimer in the
+  *    documentation and/or other materials provided with the distribution.
+  * 3. All advertising materials mentioning features or use of this software
+  *    must display the following acknowledgement:
+  *    This product includes software developed by Eric Young (eay@mincom.oz.au)
+  * 
+  * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
+  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
+  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+  * SUCH DAMAGE.
+  * 
+  * The licence and distribution terms for any publically available version or
+  * derivative of this code cannot be changed.  i.e. this code cannot simply be
+  * copied and put under another distribution licence
+  * [including the GNU Public Licence.]
+  */
+ 
+ /* THIS FILE IS GENERATED FROM Objects.h by obj_dat.pl via the
+  * following command:
+  * perl obj_dat.pl < objects.h > obj_dat.h
+  */
+ 
+ #define NUM_NID 81
+ #define NUM_SN 54
+ #define NUM_LN 81
+ #define NUM_OBJ 63
+ 
+ static unsigned char lvalues[462]={
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,               /* [  0] OBJ_rsadsi */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,          /* [  6] OBJ_pkcs */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x02,0x02,     /* [ 13] OBJ_md2 */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x02,0x05,     /* [ 21] OBJ_md5 */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x03,0x04,     /* [ 29] OBJ_rc4 */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x01,0x01,/* [ 37] OBJ_rsaEncryption */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x01,0x02,/* [ 46] OBJ_md2withRSAEncryption */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x01,0x04,/* [ 55] OBJ_md5withRSAEncryption */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x01,/* [ 64] OBJ_pbeWithMD2AndDES_CBC */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x03,/* [ 73] OBJ_pbeWithMD5AndDES_CBC */
+ 0x55,                                        /* [ 82] OBJ_X500 */
+ 0x55,0x04,                                   /* [ 83] OBJ_X509 */
+ 0x55,0x04,0x03,                              /* [ 85] OBJ_commonName */
+ 0x55,0x04,0x06,                              /* [ 88] OBJ_countryName */
+ 0x55,0x04,0x07,                              /* [ 91] OBJ_localityName */
+ 0x55,0x04,0x08,                              /* [ 94] OBJ_stateOrProvinceName */
+ 0x55,0x04,0x0A,                              /* [ 97] OBJ_organizationName */
+ 0x55,0x04,0x0B,                              /* [100] OBJ_organizationalUnitName */
+ 0x55,0x08,0x01,0x01,                         /* [103] OBJ_rsa */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,     /* [107] OBJ_pkcs7 */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,0x01,/* [115] OBJ_pkcs7_data */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,0x02,/* [124] OBJ_pkcs7_signed */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,0x03,/* [133] OBJ_pkcs7_enveloped */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,0x04,/* [142] OBJ_pkcs7_signedAndEnveloped */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,0x05,/* [151] OBJ_pkcs7_digest */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,0x06,/* [160] OBJ_pkcs7_encrypted */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x03,     /* [169] OBJ_pkcs3 */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x03,0x01,/* [177] OBJ_dhKeyAgreement */
+ 0x2B,0x0E,0x03,0x02,0x06,                    /* [186] OBJ_des_ecb */
+ 0x2B,0x0E,0x03,0x02,0x09,                    /* [191] OBJ_des_cfb */
+ 0x2B,0x0E,0x03,0x02,0x07,                    /* [196] OBJ_des_cbc */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x03,0x11,     /* [201] OBJ_des_ede3 */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x03,0x02,     /* [209] OBJ_rc2_cbc */
+ 0x2B,0x0E,0x03,0x02,0x12,                    /* [217] OBJ_sha */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x03,0x07,     /* [222] OBJ_des_ede3_cbc */
+ 0x2B,0x0E,0x03,0x02,0x08,                    /* [230] OBJ_des_ofb */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,     /* [235] OBJ_pkcs9 */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x01,/* [243] OBJ_pkcs9_emailAddress */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x02,/* [252] OBJ_pkcs9_unstructuredName */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x03,/* [261] OBJ_pkcs9_contentType */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x04,/* [270] OBJ_pkcs9_messageDigest */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x05,/* [279] OBJ_pkcs9_signingTime */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x06,/* [288] OBJ_pkcs9_countersignature */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x07,/* [297] OBJ_pkcs9_challengePassword */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x08,/* [306] OBJ_pkcs9_unstructuredAddress */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x09,/* [315] OBJ_pkcs9_extCertAttributes */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,          /* [324] OBJ_netscape */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,     /* [331] OBJ_netscape_cert_extension */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x02,     /* [339] OBJ_netscape_data_type */
+ 0x2B,0x0E,0x02,0x1A,0x05,                    /* [347] OBJ_sha1 */
+ 0x2B,0x0E,0x03,0x02,0x0C,                    /* [352] OBJ_dsaWithSHA */
+ 0x2B,0x0E,0x03,0x02,0x0D,                    /* [357] OBJ_dss */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0B,/* [362] OBJ_pbeWithSHA1AndRC2_CBC */
+ 0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0C,/* [371] OBJ_pbeWithSHA1AndRC4 */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x01,/* [380] OBJ_netscape_cert_type */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x02,/* [389] OBJ_netscape_base_url */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x03,/* [398] OBJ_netscape_revocation_url */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x04,/* [407] OBJ_netscape_ca_revocation_url */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x07,/* [416] OBJ_netscape_renewal_url */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x08,/* [425] OBJ_netscape_ca_policy_url */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x0C,/* [434] OBJ_netscape_ssl_server_name */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x01,0x0D,/* [443] OBJ_netscape_comment */
+ 0x60,0x86,0x48,0x01,0x86,0xF8,0x42,0x02,0x05,/* [452] OBJ_netscape_cert_sequence */
+ };
+ 
+ static ASN1_OBJECT nid_objs[NUM_NID]={
+ {"UNDEF","undefined",NID_undef,0,NULL},
+ {"rsadsi","rsadsi",NID_rsadsi,6,&(lvalues[0]),0},
+ {"pkcs","pkcs",NID_pkcs,7,&(lvalues[6]),0},
+ {"MD2","md2",NID_md2,8,&(lvalues[13]),0},
+ {"MD5","md5",NID_md5,8,&(lvalues[21]),0},
+ {"RC4","rc4",NID_rc4,8,&(lvalues[29]),0},
+ {"rsaEncryption","rsaEncryption",NID_rsaEncryption,9,&(lvalues[37]),0},
+ {"RSA-MD2","md2withRSAEncryption",NID_md2withRSAEncryption,9,
+ 	&(lvalues[46]),0},
+ {"RSA-MD5","md5withRSAEncryption",NID_md5withRSAEncryption,9,
+ 	&(lvalues[55]),0},
+ {"pbeWithMD2AndDES-CBC","pbeWithMD2AndDES-CBC",
+ 	NID_pbeWithMD2AndDES_CBC,9,&(lvalues[64]),0},
+ {"pbeWithMD5AndDES-CBC","pbeWithMD5AndDES-CBC",
+ 	NID_pbeWithMD5AndDES_CBC,9,&(lvalues[73]),0},
+ {"X500","X500",NID_X500,1,&(lvalues[82]),0},
+ {"X509","X509",NID_X509,2,&(lvalues[83]),0},
+ {"CN","commonName",NID_commonName,3,&(lvalues[85]),0},
+ {"C","countryName",NID_countryName,3,&(lvalues[88]),0},
+ {"L","localityName",NID_localityName,3,&(lvalues[91]),0},
+ {"SP","stateOrProvinceName",NID_stateOrProvinceName,3,&(lvalues[94]),0},
+ {"O","organizationName",NID_organizationName,3,&(lvalues[97]),0},
+ {"OU","organizationalUnitName",NID_organizationalUnitName,3,
+ 	&(lvalues[100]),0},
+ {"RSA","rsa",NID_rsa,4,&(lvalues[103]),0},
+ {"pkcs7","pkcs7",NID_pkcs7,8,&(lvalues[107]),0},
+ {"pkcs7-data","pkcs7-data",NID_pkcs7_data,9,&(lvalues[115]),0},
+ {"pkcs7-signedData","pkcs7-signedData",NID_pkcs7_signed,9,
+ 	&(lvalues[124]),0},
+ {"pkcs7-envelopedData","pkcs7-envelopedData",NID_pkcs7_enveloped,9,
+ 	&(lvalues[133]),0},
+ {"pkcs7-signedAndEnvelopedData","pkcs7-signedAndEnvelopedData",
+ 	NID_pkcs7_signedAndEnveloped,9,&(lvalues[142]),0},
+ {"pkcs7-digestData","pkcs7-digestData",NID_pkcs7_digest,9,
+ 	&(lvalues[151]),0},
+ {"pkcs7-encryptedData","pkcs7-encryptedData",NID_pkcs7_encrypted,9,
+ 	&(lvalues[160]),0},
+ {"pkcs3","pkcs3",NID_pkcs3,8,&(lvalues[169]),0},
+ {"dhKeyAgreement","dhKeyAgreement",NID_dhKeyAgreement,9,
+ 	&(lvalues[177]),0},
+ {"DES-ECB","des-ecb",NID_des_ecb,5,&(lvalues[186]),0},
+ {"DES-CFB","des-cfb",NID_des_cfb,5,&(lvalues[191]),0},
+ {"DES-CBC","des-cbc",NID_des_cbc,5,&(lvalues[196]),0},
+ {"DES-EDE","des-ede",NID_des_ede,0,NULL},
+ {"DES-EDE3","des-ede3",NID_des_ede3,8,&(lvalues[201]),0},
+ {"IDEA-CBC","idea-cbc",NID_idea_cbc,0,NULL},
+ {"IDEA-CFB","idea-cfb",NID_idea_cfb,0,NULL},
+ {"IDEA-ECB","idea-ecb",NID_idea_ecb,0,NULL},
+ {"RC2-CBC","rc2-cbc",NID_rc2_cbc,8,&(lvalues[209]),0},
+ {"RC2-ECB","rc2-ecb",NID_rc2_ecb,0,NULL},
+ {"RC2-CFB","rc2-cfb",NID_rc2_cfb,0,NULL},
+ {"RC2-OFB","rc2-ofb",NID_rc2_ofb,0,NULL},
+ {"SHA","sha",NID_sha,5,&(lvalues[217]),0},
+ {"RSA-SHA","shaWithRSAEncryption",NID_shaWithRSAEncryption,0,NULL},
+ {"DES-EDE-CBC","des-ede-cbc",NID_des_ede_cbc,0,NULL},
+ {"DES-EDE3-CBC","des-ede3-cbc",NID_des_ede3_cbc,8,&(lvalues[222]),0},
+ {"DES-OFB","des-ofb",NID_des_ofb,5,&(lvalues[230]),0},
+ {"IDEA-OFB","idea-ofb",NID_idea_ofb,0,NULL},
+ {"pkcs9","pkcs9",NID_pkcs9,8,&(lvalues[235]),0},
+ {"Email","emailAddress",NID_pkcs9_emailAddress,9,&(lvalues[243]),0},
+ {"unstructuredName","unstructuredName",NID_pkcs9_unstructuredName,9,
+ 	&(lvalues[252]),0},
+ {"contentType","contentType",NID_pkcs9_contentType,9,&(lvalues[261]),0},
+ {"messageDigest","messageDigest",NID_pkcs9_messageDigest,9,
+ 	&(lvalues[270]),0},
+ {"signingTime","signingTime",NID_pkcs9_signingTime,9,&(lvalues[279]),0},
+ {"countersignature","countersignature",NID_pkcs9_countersignature,9,
+ 	&(lvalues[288]),0},
+ {"challengePassword","challengePassword",NID_pkcs9_challengePassword,
+ 	9,&(lvalues[297]),0},
+ {"unstructuredAddress","unstructuredAddress",
+ 	NID_pkcs9_unstructuredAddress,9,&(lvalues[306]),0},
+ {"extendedCertificateAttributes","extendedCertificateAttributes",
+ 	NID_pkcs9_extCertAttributes,9,&(lvalues[315]),0},
+ {"Netscape","Netscape Communications Corp.",NID_netscape,7,
+ 	&(lvalues[324]),0},
+ {"nsCertExt","Netscape Certificate Extension",
+ 	NID_netscape_cert_extension,8,&(lvalues[331]),0},
+ {"nsDataType","Netscape Data Type",NID_netscape_data_type,8,
+ 	&(lvalues[339]),0},
+ {"DES-EDE-CFB","des-ede-cfb",NID_des_ede_cfb,0,NULL},
+ {"DES-EDE3-CFB","des-ede3-cfb",NID_des_ede3_cfb,0,NULL},
+ {"DES-EDE-OFB","des-ede-ofb",NID_des_ede_ofb,0,NULL},
+ {"DES-EDE3-OFB","des-ede3-ofb",NID_des_ede3_ofb,0,NULL},
+ {"SHA1","sha1",NID_sha1,5,&(lvalues[347]),0},
+ {"RSA-SHA1","sha1WithRSAEncryption",NID_sha1WithRSAEncryption,0,NULL},
+ {"DSS-SHA","shaWithDSSEncryption",NID_dsaWithSHA,5,&(lvalues[352]),0},
+ {"DSS","dssEncryption",NID_dss,5,&(lvalues[357]),0},
+ {"pbeWithSHA1AndRC2-CBC","pbeWithSHA1AndRC2-CBC",
+ 	NID_pbeWithSHA1AndRC2_CBC,9,&(lvalues[362]),0},
+ {"pbeWithSHA1AndRC4","pbeWithSHA1AndRC4",NID_pbeWithSHA1AndRC4,9,
+ 	&(lvalues[371]),0},
+ {"DSS-SHA1","sha1WithDSSEncryption",NID_dsaWithSHA1,0,NULL},
+ {"nsCertType","Netscape Cert Type",NID_netscape_cert_type,9,
+ 	&(lvalues[380]),0},
+ {"nsBaseUrl","Netscape Base Url",NID_netscape_base_url,9,
+ 	&(lvalues[389]),0},
+ {"nsRevocationUrl","Netscape Revocation Url",
+ 	NID_netscape_revocation_url,9,&(lvalues[398]),0},
+ {"nsCaRevocationUrl","Netscape CA Revocation Url",
+ 	NID_netscape_ca_revocation_url,9,&(lvalues[407]),0},
+ {"nsRenewalUrl","Netscape Renewal Url",NID_netscape_renewal_url,9,
+ 	&(lvalues[416]),0},
+ {"nsCaPolicyUrl","Netscape CA Policy Url",NID_netscape_ca_policy_url,
+ 	9,&(lvalues[425]),0},
+ {"nsSslServerName","Netscape SSL Server Name",
+ 	NID_netscape_ssl_server_name,9,&(lvalues[434]),0},
+ {"nsComment","Netscape Comment",NID_netscape_comment,9,&(lvalues[443]),0},
+ {"nsCertSequence","Netscape Certificate Sequence",
+ 	NID_netscape_cert_sequence,9,&(lvalues[452]),0},
+ {"DESX-CBC","desx-cbc",NID_desx_cbc,0,NULL},
+ };
+ 
+ static ASN1_OBJECT *sn_objs[NUM_SN]={
+ &(nid_objs[14]),/* "C" */
+ &(nid_objs[13]),/* "CN" */
+ &(nid_objs[31]),/* "DES-CBC" */
+ &(nid_objs[30]),/* "DES-CFB" */
+ &(nid_objs[29]),/* "DES-ECB" */
+ &(nid_objs[32]),/* "DES-EDE" */
+ &(nid_objs[43]),/* "DES-EDE-CBC" */
+ &(nid_objs[60]),/* "DES-EDE-CFB" */
+ &(nid_objs[62]),/* "DES-EDE-OFB" */
+ &(nid_objs[33]),/* "DES-EDE3" */
+ &(nid_objs[44]),/* "DES-EDE3-CBC" */
+ &(nid_objs[61]),/* "DES-EDE3-CFB" */
+ &(nid_objs[63]),/* "DES-EDE3-OFB" */
+ &(nid_objs[45]),/* "DES-OFB" */
+ &(nid_objs[80]),/* "DESX-CBC" */
+ &(nid_objs[67]),/* "DSS" */
+ &(nid_objs[66]),/* "DSS-SHA" */
+ &(nid_objs[70]),/* "DSS-SHA1" */
+ &(nid_objs[48]),/* "Email" */
+ &(nid_objs[34]),/* "IDEA-CBC" */
+ &(nid_objs[35]),/* "IDEA-CFB" */
+ &(nid_objs[36]),/* "IDEA-ECB" */
+ &(nid_objs[46]),/* "IDEA-OFB" */
+ &(nid_objs[15]),/* "L" */
+ &(nid_objs[ 3]),/* "MD2" */
+ &(nid_objs[ 4]),/* "MD5" */
+ &(nid_objs[57]),/* "Netscape" */
+ &(nid_objs[17]),/* "O" */
+ &(nid_objs[18]),/* "OU" */
+ &(nid_objs[37]),/* "RC2-CBC" */
+ &(nid_objs[39]),/* "RC2-CFB" */
+ &(nid_objs[38]),/* "RC2-ECB" */
+ &(nid_objs[40]),/* "RC2-OFB" */
+ &(nid_objs[ 5]),/* "RC4" */
+ &(nid_objs[19]),/* "RSA" */
+ &(nid_objs[ 7]),/* "RSA-MD2" */
+ &(nid_objs[ 8]),/* "RSA-MD5" */
+ &(nid_objs[42]),/* "RSA-SHA" */
+ &(nid_objs[65]),/* "RSA-SHA1" */
+ &(nid_objs[41]),/* "SHA" */
+ &(nid_objs[64]),/* "SHA1" */
+ &(nid_objs[16]),/* "SP" */
+ &(nid_objs[ 0]),/* "UNDEF" */
+ &(nid_objs[72]),/* "nsBaseUrl" */
+ &(nid_objs[76]),/* "nsCaPolicyUrl" */
+ &(nid_objs[74]),/* "nsCaRevocationUrl" */
+ &(nid_objs[58]),/* "nsCertExt" */
+ &(nid_objs[79]),/* "nsCertSequence" */
+ &(nid_objs[71]),/* "nsCertType" */
+ &(nid_objs[78]),/* "nsComment" */
+ &(nid_objs[59]),/* "nsDataType" */
+ &(nid_objs[75]),/* "nsRenewalUrl" */
+ &(nid_objs[73]),/* "nsRevocationUrl" */
+ &(nid_objs[77]),/* "nsSslServerName" */
+ };
+ 
+ static ASN1_OBJECT *ln_objs[NUM_LN]={
+ &(nid_objs[72]),/* "Netscape Base Url" */
+ &(nid_objs[76]),/* "Netscape CA Policy Url" */
+ &(nid_objs[74]),/* "Netscape CA Revocation Url" */
+ &(nid_objs[71]),/* "Netscape Cert Type" */
+ &(nid_objs[58]),/* "Netscape Certificate Extension" */
+ &(nid_objs[79]),/* "Netscape Certificate Sequence" */
+ &(nid_objs[78]),/* "Netscape Comment" */
+ &(nid_objs[57]),/* "Netscape Communications Corp." */
+ &(nid_objs[59]),/* "Netscape Data Type" */
+ &(nid_objs[75]),/* "Netscape Renewal Url" */
+ &(nid_objs[73]),/* "Netscape Revocation Url" */
+ &(nid_objs[77]),/* "Netscape SSL Server Name" */
+ &(nid_objs[11]),/* "X500" */
+ &(nid_objs[12]),/* "X509" */
+ &(nid_objs[54]),/* "challengePassword" */
+ &(nid_objs[13]),/* "commonName" */
+ &(nid_objs[50]),/* "contentType" */
+ &(nid_objs[53]),/* "countersignature" */
+ &(nid_objs[14]),/* "countryName" */
+ &(nid_objs[31]),/* "des-cbc" */
+ &(nid_objs[30]),/* "des-cfb" */
+ &(nid_objs[29]),/* "des-ecb" */
+ &(nid_objs[32]),/* "des-ede" */
+ &(nid_objs[43]),/* "des-ede-cbc" */
+ &(nid_objs[60]),/* "des-ede-cfb" */
+ &(nid_objs[62]),/* "des-ede-ofb" */
+ &(nid_objs[33]),/* "des-ede3" */
+ &(nid_objs[44]),/* "des-ede3-cbc" */
+ &(nid_objs[61]),/* "des-ede3-cfb" */
+ &(nid_objs[63]),/* "des-ede3-ofb" */
+ &(nid_objs[45]),/* "des-ofb" */
+ &(nid_objs[80]),/* "desx-cbc" */
+ &(nid_objs[28]),/* "dhKeyAgreement" */
+ &(nid_objs[67]),/* "dssEncryption" */
+ &(nid_objs[48]),/* "emailAddress" */
+ &(nid_objs[56]),/* "extendedCertificateAttributes" */
+ &(nid_objs[34]),/* "idea-cbc" */
+ &(nid_objs[35]),/* "idea-cfb" */
+ &(nid_objs[36]),/* "idea-ecb" */
+ &(nid_objs[46]),/* "idea-ofb" */
+ &(nid_objs[15]),/* "localityName" */
+ &(nid_objs[ 3]),/* "md2" */
+ &(nid_objs[ 7]),/* "md2withRSAEncryption" */
+ &(nid_objs[ 4]),/* "md5" */
+ &(nid_objs[ 8]),/* "md5withRSAEncryption" */
+ &(nid_objs[51]),/* "messageDigest" */
+ &(nid_objs[17]),/* "organizationName" */
+ &(nid_objs[18]),/* "organizationalUnitName" */
+ &(nid_objs[ 9]),/* "pbeWithMD2AndDES-CBC" */
+ &(nid_objs[10]),/* "pbeWithMD5AndDES-CBC" */
+ &(nid_objs[68]),/* "pbeWithSHA1AndRC2-CBC" */
+ &(nid_objs[69]),/* "pbeWithSHA1AndRC4" */
+ &(nid_objs[ 2]),/* "pkcs" */
+ &(nid_objs[27]),/* "pkcs3" */
+ &(nid_objs[20]),/* "pkcs7" */
+ &(nid_objs[21]),/* "pkcs7-data" */
+ &(nid_objs[25]),/* "pkcs7-digestData" */
+ &(nid_objs[26]),/* "pkcs7-encryptedData" */
+ &(nid_objs[23]),/* "pkcs7-envelopedData" */
+ &(nid_objs[24]),/* "pkcs7-signedAndEnvelopedData" */
+ &(nid_objs[22]),/* "pkcs7-signedData" */
+ &(nid_objs[47]),/* "pkcs9" */
+ &(nid_objs[37]),/* "rc2-cbc" */
+ &(nid_objs[39]),/* "rc2-cfb" */
+ &(nid_objs[38]),/* "rc2-ecb" */
+ &(nid_objs[40]),/* "rc2-ofb" */
+ &(nid_objs[ 5]),/* "rc4" */
+ &(nid_objs[19]),/* "rsa" */
+ &(nid_objs[ 6]),/* "rsaEncryption" */
+ &(nid_objs[ 1]),/* "rsadsi" */
+ &(nid_objs[41]),/* "sha" */
+ &(nid_objs[64]),/* "sha1" */
+ &(nid_objs[70]),/* "sha1WithDSSEncryption" */
+ &(nid_objs[65]),/* "sha1WithRSAEncryption" */
+ &(nid_objs[66]),/* "shaWithDSSEncryption" */
+ &(nid_objs[42]),/* "shaWithRSAEncryption" */
+ &(nid_objs[52]),/* "signingTime" */
+ &(nid_objs[16]),/* "stateOrProvinceName" */
+ &(nid_objs[ 0]),/* "undefined" */
+ &(nid_objs[55]),/* "unstructuredAddress" */
+ &(nid_objs[49]),/* "unstructuredName" */
+ };
+ 
+ static ASN1_OBJECT *obj_objs[NUM_OBJ]={
+ &(nid_objs[11]),/* OBJ_X500                         2 5 */
+ &(nid_objs[12]),/* OBJ_X509                         2 5 4 */
+ &(nid_objs[13]),/* OBJ_commonName                   2 5 4 3 */
+ &(nid_objs[14]),/* OBJ_countryName                  2 5 4 6 */
+ &(nid_objs[15]),/* OBJ_localityName                 2 5 4 7 */
+ &(nid_objs[16]),/* OBJ_stateOrProvinceName          2 5 4 8 */
+ &(nid_objs[17]),/* OBJ_organizationName             2 5 4 10 */
+ &(nid_objs[18]),/* OBJ_organizationalUnitName       2 5 4 11 */
+ &(nid_objs[19]),/* OBJ_rsa                          2 5 8 1 1 */
+ &(nid_objs[64]),/* OBJ_sha1                         1 3 14 2 26 05 */
+ &(nid_objs[29]),/* OBJ_des_ecb                      1 3 14 3 2 6 */
+ &(nid_objs[31]),/* OBJ_des_cbc                      1 3 14 3 2 7 */
+ &(nid_objs[45]),/* OBJ_des_ofb                      1 3 14 3 2 8 */
+ &(nid_objs[30]),/* OBJ_des_cfb                      1 3 14 3 2 9 */
+ &(nid_objs[66]),/* OBJ_dsaWithSHA                   1 3 14 3 2 12 */
+ &(nid_objs[67]),/* OBJ_dss                          1 3 14 3 2 13 */
+ &(nid_objs[41]),/* OBJ_sha                          1 3 14 3 2 18 */
+ &(nid_objs[ 1]),/* OBJ_rsadsi                       1 2 840 113549 */
+ &(nid_objs[ 2]),/* OBJ_pkcs                         1 2 840 113549 1 */
+ &(nid_objs[57]),/* OBJ_netscape                     2 16 840 1 113730 */
+ &(nid_objs[27]),/* OBJ_pkcs3                        1 2 840 113549 1 3 */
+ &(nid_objs[20]),/* OBJ_pkcs7                        1 2 840 113549 1 7 */
+ &(nid_objs[47]),/* OBJ_pkcs9                        1 2 840 113549 1 9 */
+ &(nid_objs[ 3]),/* OBJ_md2                          1 2 840 113549 2 2 */
+ &(nid_objs[ 4]),/* OBJ_md5                          1 2 840 113549 2 5 */
+ &(nid_objs[37]),/* OBJ_rc2_cbc                      1 2 840 113549 3 2 */
+ &(nid_objs[ 5]),/* OBJ_rc4                          1 2 840 113549 3 4 */
+ &(nid_objs[44]),/* OBJ_des_ede3_cbc                 1 2 840 113549 3 7 */
+ &(nid_objs[33]),/* OBJ_des_ede3                     1 2 840 113549 3 17 */
+ &(nid_objs[58]),/* OBJ_netscape_cert_extension      2 16 840 1 113730 1 */
+ &(nid_objs[59]),/* OBJ_netscape_data_type           2 16 840 1 113730 2 */
+ &(nid_objs[ 6]),/* OBJ_rsaEncryption                1 2 840 113549 1 1 1 */
+ &(nid_objs[ 7]),/* OBJ_md2withRSAEncryption         1 2 840 113549 1 1 2 */
+ &(nid_objs[ 8]),/* OBJ_md5withRSAEncryption         1 2 840 113549 1 1 4 */
+ &(nid_objs[28]),/* OBJ_dhKeyAgreement               1 2 840 113549 1 3 1 */
+ &(nid_objs[ 9]),/* OBJ_pbeWithMD2AndDES_CBC         1 2 840 113549 1 5 1 */
+ &(nid_objs[10]),/* OBJ_pbeWithMD5AndDES_CBC         1 2 840 113549 1 5 3 */
+ &(nid_objs[68]),/* OBJ_pbeWithSHA1AndRC2_CBC        1 2 840 113549 1 5 11  */
+ &(nid_objs[69]),/* OBJ_pbeWithSHA1AndRC4            1 2 840 113549 1 5 12  */
+ &(nid_objs[21]),/* OBJ_pkcs7_data                   1 2 840 113549 1 7 1 */
+ &(nid_objs[22]),/* OBJ_pkcs7_signed                 1 2 840 113549 1 7 2 */
+ &(nid_objs[23]),/* OBJ_pkcs7_enveloped              1 2 840 113549 1 7 3 */
+ &(nid_objs[24]),/* OBJ_pkcs7_signedAndEnveloped     1 2 840 113549 1 7 4 */
+ &(nid_objs[25]),/* OBJ_pkcs7_digest                 1 2 840 113549 1 7 5 */
+ &(nid_objs[26]),/* OBJ_pkcs7_encrypted              1 2 840 113549 1 7 6 */
+ &(nid_objs[48]),/* OBJ_pkcs9_emailAddress           1 2 840 113549 1 9 1 */
+ &(nid_objs[49]),/* OBJ_pkcs9_unstructuredName       1 2 840 113549 1 9 2 */
+ &(nid_objs[50]),/* OBJ_pkcs9_contentType            1 2 840 113549 1 9 3 */
+ &(nid_objs[51]),/* OBJ_pkcs9_messageDigest          1 2 840 113549 1 9 4 */
+ &(nid_objs[52]),/* OBJ_pkcs9_signingTime            1 2 840 113549 1 9 5 */
+ &(nid_objs[53]),/* OBJ_pkcs9_countersignature       1 2 840 113549 1 9 6 */
+ &(nid_objs[54]),/* OBJ_pkcs9_challengePassword      1 2 840 113549 1 9 7 */
+ &(nid_objs[55]),/* OBJ_pkcs9_unstructuredAddress    1 2 840 113549 1 9 8 */
+ &(nid_objs[56]),/* OBJ_pkcs9_extCertAttributes      1 2 840 113549 1 9 9 */
+ &(nid_objs[71]),/* OBJ_netscape_cert_type           2 16 840 1 113730 1 1 */
+ &(nid_objs[72]),/* OBJ_netscape_base_url            2 16 840 1 113730 1 2 */
+ &(nid_objs[73]),/* OBJ_netscape_revocation_url      2 16 840 1 113730 1 3 */
+ &(nid_objs[74]),/* OBJ_netscape_ca_revocation_url   2 16 840 1 113730 1 4 */
+ &(nid_objs[75]),/* OBJ_netscape_renewal_url         2 16 840 1 113730 1 7 */
+ &(nid_objs[76]),/* OBJ_netscape_ca_policy_url       2 16 840 1 113730 1 8 */
+ &(nid_objs[77]),/* OBJ_netscape_ssl_server_name     2 16 840 1 113730 1 12 */
+ &(nid_objs[78]),/* OBJ_netscape_comment             2 16 840 1 113730 1 13 */
+ &(nid_objs[79]),/* OBJ_netscape_cert_sequence       2 16 840 1 113730 2 5 */
+ };
+ 
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/pem/pem_lib.c	Wed Jul 24 07:56:41 1996
--- ./crypto/pem/pem_lib.c	Tue Aug  6 15:57:42 1996
***************
*** 60,66 ****
  #include "des.h"
  #endif
  
! char *PEM_version="PEM part of SSLeay 0.6.2 24-Jul-1996";
  
  #define MIN_LENGTH	4
  
--- 60,66 ----
  #include "des.h"
  #endif
  
! char *PEM_version="PEM part of SSLeay 0.6.3 06-Aug-1996";
  
  #define MIN_LENGTH	4
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/pem/pem_seal.c	Wed Jul 17 16:45:57 1996
--- ./crypto/pem/pem_seal.c	Sat Jul 27 13:48:43 1996
***************
*** 77,83 ****
  			goto err;
  			}
  		j=RSA_size(pubk[i]->pkey.rsa);
! 		if (j > max) max=i;
  		}
  	s=(char *)malloc(max*2);
  	if (s == NULL)
--- 77,83 ----
  			goto err;
  			}
  		j=RSA_size(pubk[i]->pkey.rsa);
! 		if (j > max) max=j;
  		}
  	s=(char *)malloc(max*2);
  	if (s == NULL)
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/pkcs7/pkcs7.h	Wed Jul 17 16:45:57 1996
--- ./crypto/pkcs7/pkcs7.h	Wed Jul 31 12:50:40 1996
***************
*** 70,76 ****
  	{
  	ASN1_INTEGER 			*version;	/* version 1 */
  	PKCS7_ISSUER_AND_SERIAL		*issuer_and_serial;
! 	ASN1_OBJECT			*digest_alg;
  	STACK /* X509_ATTRIBUTE */	*auth_attr;	/* [ 0 ] */
  	X509_ALGOR			*digest_enc_alg;
  	ASN1_OCTET_STRING		*enc_digest;
--- 70,76 ----
  	{
  	ASN1_INTEGER 			*version;	/* version 1 */
  	PKCS7_ISSUER_AND_SERIAL		*issuer_and_serial;
! 	X509_ALGOR			*digest_alg;
  	STACK /* X509_ATTRIBUTE */	*auth_attr;	/* [ 0 ] */
  	X509_ALGOR			*digest_enc_alg;
  	ASN1_OCTET_STRING		*enc_digest;
***************
*** 88,94 ****
  typedef struct pkcs7_signed_st
  	{
  	ASN1_INTEGER			*version;	/* version 1 */
! 	STACK /* ASN1_OBJECT's */	*md_algs;	/* md used */
  	struct pkcs7_st			*contents;
  	STACK /* X509 */		*cert;		/* [ 0 ] */
  	STACK /* X509_CRL */		*crl;		/* [ 1 ] */
--- 88,94 ----
  typedef struct pkcs7_signed_st
  	{
  	ASN1_INTEGER			*version;	/* version 1 */
! 	STACK /* X509_ALGOR's */	*md_algs;	/* md used */
  	struct pkcs7_st			*contents;
  	STACK /* X509 */		*cert;		/* [ 0 ] */
  	STACK /* X509_CRL */		*crl;		/* [ 1 ] */
***************
*** 113,119 ****
  	{
  	ASN1_INTEGER			*version;	/* version 1 */
  	STACK /* PKCS7_RECIP_INFO */	*recipientinfo;
! 	STACK /* ASN1_OBJECT's */	*md_algs;	/* md used */
  	PKCS7_ENC_CONTENT		*enc_data;
  	STACK /* X509 */		*cert;		/* [ 0 ] */
  	STACK /* X509_CRL */		*crl;		/* [ 1 ] */
--- 113,119 ----
  	{
  	ASN1_INTEGER			*version;	/* version 1 */
  	STACK /* PKCS7_RECIP_INFO */	*recipientinfo;
! 	STACK /* X509_ALGOR's */	*md_algs;	/* md used */
  	PKCS7_ENC_CONTENT		*enc_data;
  	STACK /* X509 */		*cert;		/* [ 0 ] */
  	STACK /* X509_CRL */		*crl;		/* [ 1 ] */
***************
*** 123,129 ****
  typedef struct pkcs7_digest_st
  	{
  	ASN1_INTEGER			*version;	/* version 0 */
! 	ASN1_OBJECT			*md;		/* md used */
  	struct pkcs7_st 		*contents;
  	ASN1_OCTET_STRING		*digest;
  	} PKCS7_DIGEST;
--- 123,129 ----
  typedef struct pkcs7_digest_st
  	{
  	ASN1_INTEGER			*version;	/* version 0 */
! 	X509_ALGOR			*md;		/* md used */
  	struct pkcs7_st 		*contents;
  	ASN1_OCTET_STRING		*digest;
  	} PKCS7_DIGEST;
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/rand/md5_rand.c	Wed Jul 24 07:56:41 1996
--- ./crypto/rand/md5_rand.c	Tue Aug  6 15:57:44 1996
***************
*** 71,77 ****
  static unsigned char md[MD5_DIGEST_LENGTH];
  static int count=0;
  
! char *RAND_version="RAND part of SSLeay 0.6.2 24-Jul-1996";
  
  void RAND_cleanup()
  	{
--- 71,77 ----
  static unsigned char md[MD5_DIGEST_LENGTH];
  static int count=0;
  
! char *RAND_version="RAND part of SSLeay 0.6.3 06-Aug-1996";
  
  void RAND_cleanup()
  	{
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/rand/randfile.c	Wed Jul 17 16:45:57 1996
--- ./crypto/rand/randfile.c	Mon Aug  5 12:08:49 1996
***************
*** 60,68 ****
  char *file;
  long bytes;
  	{
! 	unsigned char buf[BUFSIZE];
  	struct stat sb;
! 	int i,ret=0;
  	FILE *in;
  
  	if (file == NULL) return(0);
--- 60,68 ----
  char *file;
  long bytes;
  	{
! 	MS_STATIC unsigned char buf[BUFSIZE];
  	struct stat sb;
! 	int i,ret=0,n;
  	FILE *in;
  
  	if (file == NULL) return(0);
***************
*** 78,90 ****
  	if (in == NULL) goto err;
  	for (;;)
  		{
! 		i=fread(buf,1,BUFSIZE,in);
  		if (i <= 0) break;
! 		/* even if BUSIZE != i, use the full array */
! 		RAND_seed(buf,BUFSIZE);
  		ret+=i;
! 		if (i > bytes) break;
! 		bytes-=i;
  		}
  	fclose(in);
  	memset(buf,0,BUFSIZE);
--- 78,91 ----
  	if (in == NULL) goto err;
  	for (;;)
  		{
! 		n=(bytes < BUFSIZE)?bytes:BUFSIZE;
! 		i=fread(buf,1,n,in);
  		if (i <= 0) break;
! 		/* even if n != i, use the full array */
! 		RAND_seed(buf,n);
  		ret+=i;
! 		bytes-=n;
! 		if (bytes <= 0) break;
  		}
  	fclose(in);
  	memset(buf,0,BUFSIZE);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/rc2/rc2_ecb.c	Wed Jul 24 07:56:41 1996
--- ./crypto/rc2/rc2_ecb.c	Tue Aug  6 15:57:43 1996
***************
*** 48,54 ****
  #include "rc2.h"
  #include "rc2_locl.h"
  
! char *RC2_version="RC2 part of SSLeay 0.6.2 24-Jul-1996";
  
  /* RC2 as implemented frm a posting from
   * Newsgroups: sci.crypt
--- 48,54 ----
  #include "rc2.h"
  #include "rc2_locl.h"
  
! char *RC2_version="RC2 part of SSLeay 0.6.3 06-Aug-1996";
  
  /* RC2 as implemented frm a posting from
   * Newsgroups: sci.crypt
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/rc4/rc4_enc.c	Thu Jul 25 16:06:06 1996
--- ./crypto/rc4/rc4_enc.c	Thu Aug  8 01:48:09 1996
***************
*** 58,64 ****
   * speedup on x86 */
  #undef RC4_INDEX
  
! char *RC4_version="RC4 part of SSLeay 0.6.2 24-Jul-1996";
  
  char *RC4_options()
  	{
--- 58,64 ----
   * speedup on x86 */
  #undef RC4_INDEX
  
! char *RC4_version="RC4 part of SSLeay 0.6.3 06-Aug-1996";
  
  char *RC4_options()
  	{
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/rc4/rc4_enc.org	Wed Jul 24 07:56:41 1996
--- ./crypto/rc4/rc4_enc.org	Tue Aug  6 15:57:43 1996
***************
*** 58,64 ****
   * speedup on x86 */
  #undef RC4_INDEX
  
! char *RC4_version="RC4 part of SSLeay 0.6.2 24-Jul-1996";
  
  char *RC4_options()
  	{
--- 58,64 ----
   * speedup on x86 */
  #undef RC4_INDEX
  
! char *RC4_version="RC4 part of SSLeay 0.6.3 06-Aug-1996";
  
  char *RC4_options()
  	{
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/rsa/rsa_lib.c	Wed Jul 24 07:56:41 1996
--- ./crypto/rsa/rsa_lib.c	Tue Aug  6 15:57:43 1996
***************
*** 50,56 ****
  #include "bn.h"
  #include "rsa.h"
  
! char *RSA_version="RSA part of SSLeay 0.6.2 24-Jul-1996";
  
  RSA *RSA_new()
  	{
--- 50,56 ----
  #include "bn.h"
  #include "rsa.h"
  
! char *RSA_version="RSA part of SSLeay 0.6.3 06-Aug-1996";
  
  RSA *RSA_new()
  	{
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/sha/sha1dgst.c	Wed Jul 24 07:56:41 1996
--- ./crypto/sha/sha1dgst.c	Tue Aug  6 15:57:43 1996
***************
*** 51,57 ****
  #include "sha.h"
  #include "sha_locl.h"
  
! char *SHA1_version="SHA1 part of SSLeay 0.6.2 24-Jul-1996";
  
  /* Implemented from SHA-1 document - The Secure Hash Algorithm
   */
--- 51,57 ----
  #include "sha.h"
  #include "sha_locl.h"
  
! char *SHA1_version="SHA1 part of SSLeay 0.6.3 06-Aug-1996";
  
  /* Implemented from SHA-1 document - The Secure Hash Algorithm
   */
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/sha/sha_dgst.c	Wed Jul 24 07:56:41 1996
--- ./crypto/sha/sha_dgst.c	Tue Aug  6 15:57:43 1996
***************
*** 51,57 ****
  #include "sha.h"
  #include "sha_locl.h"
  
! char *SHA_version="SHA part of SSLeay 0.6.2 24-Jul-1996";
  
  /* Implemented from SHA document - The Secure Hash Algorithm
   */
--- 51,57 ----
  #include "sha.h"
  #include "sha_locl.h"
  
! char *SHA_version="SHA part of SSLeay 0.6.3 06-Aug-1996";
  
  /* Implemented from SHA document - The Secure Hash Algorithm
   */
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/stack/stack.c	Wed Jul 24 07:56:41 1996
--- ./crypto/stack/stack.c	Thu Aug  8 01:19:00 1996
***************
*** 58,64 ****
  #undef MIN_NODES
  #define MIN_NODES	4
  
! char *STACK_version="STACK part of SSLeay 0.6.2 24-Jul-1996";
  
  #ifndef NOPROTO
  #define	FP_ICC	(int (*)(const void *,const void *))
--- 58,64 ----
  #undef MIN_NODES
  #define MIN_NODES	4
  
! char *STACK_version="STACK part of SSLeay 0.6.3 06-Aug-1996";
  
  #ifndef NOPROTO
  #define	FP_ICC	(int (*)(const void *,const void *))
***************
*** 110,118 ****
  		st->data[st->num]=data;
  	else
  		{
! 		memcpy( (char *)&(st->data[loc+1]),
  			(char *)&(st->data[loc]),
  			sizeof(char *)*(st->num-loc));
  		st->data[loc]=data;
  		}
  	st->num++;
--- 110,128 ----
  		st->data[st->num]=data;
  	else
  		{
! 		int i;
! 		char **f,**t;
! 
! 		f=(char **)st->data;
! 		t=(char **)&(st->data[1]);
! 		for (i=st->num; i>loc; i--)
! 			t[i]=f[i];
! 			
! #ifdef undef /* no memmove on sunos :-( */
! 		memmove( (char *)&(st->data[loc+1]),
  			(char *)&(st->data[loc]),
  			sizeof(char *)*(st->num-loc));
+ #endif
  		st->data[loc]=data;
  		}
  	st->num++;
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/txt_db/txt_db.c	Wed Jul 24 07:56:41 1996
--- ./crypto/txt_db/txt_db.c	Tue Aug  6 15:57:45 1996
***************
*** 54,60 ****
  #undef BUFSIZE
  #define BUFSIZE	512
  
! char *TXT_DB_version="TXT_DB part of SSLeay 0.6.2 24-Jul-1996";
  
  TXT_DB *TXT_DB_read(in,num)
  BIO *in;
--- 54,60 ----
  #undef BUFSIZE
  #define BUFSIZE	512
  
! char *TXT_DB_version="TXT_DB part of SSLeay 0.6.3 06-Aug-1996";
  
  TXT_DB *TXT_DB_read(in,num)
  BIO *in;
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/x509/x509_req.c	Wed Jul 17 16:46:01 1996
--- ./crypto/x509/x509_req.c	Thu Aug  1 09:40:04 1996
***************
*** 89,95 ****
  	if (pkey->type == EVP_PKEY_RSA)
  		obj=OBJ_nid2obj(NID_rsaEncryption);
  	else if (pkey->type == EVP_PKEY_DSA)
! 		obj=OBJ_nid2obj(NID_dss);
  	else
  		{
  		X509err(X509_F_X509_TO_X509_REQ,X509_R_BAD_PUBLIC_KEY_TYPE);
--- 89,95 ----
  	if (pkey->type == EVP_PKEY_RSA)
  		obj=OBJ_nid2obj(NID_rsaEncryption);
  	else if (pkey->type == EVP_PKEY_DSA)
! 		obj=OBJ_nid2obj(NID_dsa);
  	else
  		{
  		X509err(X509_F_X509_TO_X509_REQ,X509_R_BAD_PUBLIC_KEY_TYPE);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./crypto/x509/x509_vrf.c	Wed Jul 24 07:56:41 1996
--- ./crypto/x509/x509_vrf.c	Tue Aug  6 15:57:44 1996
***************
*** 78,84 ****
  void RSA_print_bytes();
  #endif
  
! char *X509_version="X509 part of SSLeay 0.6.2 24-Jul-1996";
  
  int X509_add_cert_file(ctx,file, type)
  CERTIFICATE_CTX *ctx;
--- 78,84 ----
  void RSA_print_bytes();
  #endif
  
! char *X509_version="X509 part of SSLeay 0.6.3 06-Aug-1996";
  
  int X509_add_cert_file(ctx,file, type)
  CERTIFICATE_CTX *ctx;
***************
*** 282,288 ****
  		goto end;
  		}
  
! 	if (!X509_verify(xs,pkey)) /* EAY */
  		{
  		reason=VERIFY_ERR_SIGNATURE_FAILURE;
  		ret=(*cb)(0,xs,xi,depth,reason);
--- 282,288 ----
  		goto end;
  		}
  
! 	if (X509_verify(xs,pkey) <= 0)
  		{
  		reason=VERIFY_ERR_SIGNATURE_FAILURE;
  		ret=(*cb)(0,xs,xi,depth,reason);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ssl/ssl.h	Wed Jul 24 14:26:47 1996
--- ./ssl/ssl.h	Fri Aug  2 16:38:17 1996
***************
*** 57,63 ****
  #define SSL_SERVER_VERSION	0x0002
  
  /* SSLeay version number for ASN.1 encoding of the session information */
! #define SSL_SESSION_ASN1_VERSION 0x0000
  
  /* Protocol Message Codes */
  #define SSL_MT_ERROR			0
--- 57,66 ----
  #define SSL_SERVER_VERSION	0x0002
  
  /* SSLeay version number for ASN.1 encoding of the session information */
! /* Version 0 - initial version
!  * Version 1 - added the optional peer certificate
!  */
! #define SSL_SESSION_ASN1_VERSION 0x0001
  
  /* Protocol Message Codes */
  #define SSL_MT_ERROR			0
***************
*** 145,152 ****
--- 148,159 ----
   *	Session_ID 		OCTET_STRING,	-- the Session ID
   *	Master_key 		OCTET_STRING,	-- the master key
   *	Key_Arg [ 0 ] IMPLICIT	OCTET_STRING,	-- the optional Key argument
+  *	Time [ 1 ] EXPLICIT	INTEGER,	-- optional Start Time
+  *	Timeout [ 2 ] EXPLICIT	INTEGER,	-- optional Timeout ins seconds
+  *	Peer [ 3 ] EXPLICIT	X509,		-- optional Peer Certificate
   *	}
   * Look in ssl/ssl_asn1.c for more details
+  * I'm using EXPLICIT tags so I can read the damn things using asn1parse :-).
   */
  typedef struct ssl_session_st
  	{
***************
*** 554,559 ****
--- 561,572 ----
  /* VMS linker has a 31 char name limit */
  #define SSL_CTX_set_cert_verify_callback(a,b,c) \
  		SSL_CTX_set_cert_verify_cb((a),(b),(c))
+ 
+ #define d2i_SSL_SESSION_bio(bp,s_id) (SSL_SESSION *)ASN1_d2i_bio( \
+ 	(char *(*)())SSL_SESSION_new,(char *(*)())d2i_SSL_SESSION, \
+ 	(bp),(unsigned char **)(s_id))
+ #define i2d_SSL_SESSION_bio(bp,s_id) ASN1_i2d_bio(i2d_SSL_SESSION, \
+ 	bp,(unsigned char *)s_id)
  
  #ifndef NOPROTO
  #ifdef HEADER_BUFFER_H
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ssl/ssl_asn1.c	Wed Jul 24 14:27:10 1996
--- ./ssl/ssl_asn1.c	Wed Aug  7 17:38:22 1996
***************
*** 59,64 ****
--- 59,66 ----
  	ASN1_OCTET_STRING master_key;
  	ASN1_OCTET_STRING session_id;
  	ASN1_OCTET_STRING key_arg;
+ 	ASN1_INTEGER time;
+ 	ASN1_INTEGER timeout;
  	} SSL_SESSION_ASN1;
  
  /*
***************
*** 71,77 ****
--- 73,81 ----
  unsigned char **pp;
  	{
  #define LSIZE2 (sizeof(long)*2)
+ 	int v1,v2,v3;
  	unsigned char buf[4],ibuf1[LSIZE2],ibuf2[LSIZE2];
+ 	unsigned char ibuf3[LSIZE2],ibuf4[LSIZE2];
  	SSL_SESSION_ASN1 a;
  	M_ASN1_I2D_vars(in);
  
***************
*** 112,117 ****
--- 116,137 ----
  	a.key_arg.type=V_ASN1_OCTET_STRING;
  	a.key_arg.data=in->key_arg;
  
+ 	if (in->time != 0L)
+ 		{
+ 		a.time.length=LSIZE2;
+ 		a.time.type=V_ASN1_INTEGER;
+ 		a.time.data=ibuf3;
+ 		ASN1_INTEGER_set(&(a.time),in->time);
+ 		}
+ 
+ 	if (in->timeout != 0L)
+ 		{
+ 		a.timeout.length=LSIZE2;
+ 		a.timeout.type=V_ASN1_INTEGER;
+ 		a.timeout.data=ibuf4;
+ 		ASN1_INTEGER_set(&(a.timeout),in->timeout);
+ 		}
+ 
  	M_ASN1_I2D_len(&(a.version),		i2d_ASN1_INTEGER);
  	M_ASN1_I2D_len(&(a.ssl_version),	i2d_ASN1_INTEGER);
  	M_ASN1_I2D_len(&(a.cipher),		i2d_ASN1_OCTET_STRING);
***************
*** 119,124 ****
--- 139,150 ----
  	M_ASN1_I2D_len(&(a.master_key),		i2d_ASN1_OCTET_STRING);
  	if (in->key_arg_length > 0)
  		M_ASN1_I2D_len_IMP_opt(&(a.key_arg),i2d_ASN1_OCTET_STRING);
+ 	if (in->time != 0L)
+ 		M_ASN1_I2D_len_EXP_opt(&(a.time),i2d_ASN1_INTEGER,1,v1);
+ 	if (in->timeout != 0L)
+ 		M_ASN1_I2D_len_EXP_opt(&(a.timeout),i2d_ASN1_INTEGER,2,v2);
+ 	if (in->peer != NULL)
+ 		M_ASN1_I2D_len_EXP_opt(in->peer,i2d_X509,3,v3);
  
  	M_ASN1_I2D_seq_total();
  
***************
*** 129,134 ****
--- 155,166 ----
  	M_ASN1_I2D_put(&(a.master_key),		i2d_ASN1_OCTET_STRING);
  	if (in->key_arg_length > 0)
  		M_ASN1_I2D_put_IMP_opt(&(a.key_arg),i2d_ASN1_OCTET_STRING,0);
+ 	if (in->time != 0L)
+ 		M_ASN1_I2D_put_EXP_opt(&(a.time),i2d_ASN1_INTEGER,1,v1);
+ 	if (in->timeout != 0L)
+ 		M_ASN1_I2D_put_EXP_opt(&(a.timeout),i2d_ASN1_INTEGER,2,v2);
+ 	if (in->peer != NULL)
+ 		M_ASN1_I2D_put_EXP_opt(in->peer,i2d_X509,3,v3);
  
  	M_ASN1_I2D_finish();
  	}
***************
*** 139,145 ****
  long length;
  	{
  	CIPHER cipher,*cp;
! 	int version,ssl_version=0,i;
  	ASN1_INTEGER ai,*aip;
  	ASN1_OCTET_STRING os,*osp;
  	M_ASN1_D2I_vars(a,SSL_SESSION *,SSL_SESSION_new);
--- 171,177 ----
  long length;
  	{
  	CIPHER cipher,*cp;
! 	int version,ssl_version=0;
  	ASN1_INTEGER ai,*aip;
  	ASN1_OCTET_STRING os,*osp;
  	M_ASN1_D2I_vars(a,SSL_SESSION *,SSL_SESSION_new);
***************
*** 152,165 ****
  
  	ai.data=NULL; ai.length=0;
  	M_ASN1_D2I_get(aip,d2i_ASN1_INTEGER);
! 	version=0;
! 	for (i=0; i<ai.length; i++)
! 		version=version*256+ai.data[i];
  
  	/* we don't care about the version right now :-) */
  	M_ASN1_D2I_get(aip,d2i_ASN1_INTEGER);
! 	for (i=0; i<ai.length; i++)
! 		ssl_version=ssl_version*256+ai.data[i];
  
  	os.data=NULL; os.length=0;
  	M_ASN1_D2I_get(osp,d2i_ASN1_OCTET_STRING);
--- 184,196 ----
  
  	ai.data=NULL; ai.length=0;
  	M_ASN1_D2I_get(aip,d2i_ASN1_INTEGER);
! 	version=ASN1_INTEGER_get(aip);
! 	if (ai.data != NULL) { free(ai.data); ai.data=NULL; ai.length=0; }
  
  	/* we don't care about the version right now :-) */
  	M_ASN1_D2I_get(aip,d2i_ASN1_INTEGER);
! 	ssl_version=ASN1_INTEGER_get(aip);
! 	if (ai.data != NULL) { free(ai.data); ai.data=NULL; ai.length=0; }
  
  	os.data=NULL; os.length=0;
  	M_ASN1_D2I_get(osp,d2i_ASN1_OCTET_STRING);
***************
*** 188,208 ****
  
  	M_ASN1_D2I_get(osp,d2i_ASN1_OCTET_STRING);
  	ret->session_id_length=os.length;
  	ret->session_id=os.data;
  	os.data=NULL; os.length=0;
  
  	M_ASN1_D2I_get(osp,d2i_ASN1_OCTET_STRING);
  	ret->master_key_length=os.length;
  	ret->master_key=os.data;
  	os.data=NULL; os.length=0;
  
  	M_ASN1_D2I_get_IMP_opt(osp,d2i_ASN1_OCTET_STRING,0,V_ASN1_OCTET_STRING);
  	ret->key_arg_length=os.length;
  	ret->key_arg=os.data;
  	os.data=NULL; os.length=0;
  
! 	ret->timeout=100;
  	ret->time=time(NULL);
  
  	M_ASN1_D2I_Finish(a,SSL_SESSION_free,SSL_F_D2I_SSL_SESSION);
  	}
--- 219,264 ----
  
  	M_ASN1_D2I_get(osp,d2i_ASN1_OCTET_STRING);
  	ret->session_id_length=os.length;
+ 	if (ret->session_id != NULL) free(ret->session_id);
  	ret->session_id=os.data;
  	os.data=NULL; os.length=0;
  
  	M_ASN1_D2I_get(osp,d2i_ASN1_OCTET_STRING);
  	ret->master_key_length=os.length;
+ 	if (ret->master_key != NULL) free(ret->master_key);
  	ret->master_key=os.data;
  	os.data=NULL; os.length=0;
  
  	M_ASN1_D2I_get_IMP_opt(osp,d2i_ASN1_OCTET_STRING,0,V_ASN1_OCTET_STRING);
  	ret->key_arg_length=os.length;
+ 	if (ret->key_arg != NULL) free(ret->key_arg);
  	ret->key_arg=os.data;
  	os.data=NULL; os.length=0;
  
! 	M_ASN1_D2I_get_EXP_opt(aip,d2i_ASN1_INTEGER,1);
! 	if (ai.data != NULL)
! 		{
! 		ret->time=ASN1_INTEGER_get(aip);
! 		free(ai.data); ai.data=NULL; ai.length=0;
! 		}
! 	else
  		ret->time=time(NULL);
+ 
+ 	M_ASN1_D2I_get_EXP_opt(aip,d2i_ASN1_INTEGER,2);
+ 	if (ai.data != NULL)
+ 		{
+ 		ret->timeout=ASN1_INTEGER_get(aip);
+ 		free(ai.data); ai.data=NULL; ai.length=0;
+ 		}
+ 	else
+ 		ret->timeout=100;
+ 
+ 	if (ret->peer != NULL)
+ 		{
+ 		X509_free(ret->peer);
+ 		ret->peer=NULL;
+ 		}
+ 	M_ASN1_D2I_get_EXP_opt(ret->peer,d2i_X509,3);
  
  	M_ASN1_D2I_Finish(a,SSL_SESSION_free,SSL_F_D2I_SSL_SESSION);
  	}
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ssl/ssl_clnt.c	Wed Jul 24 14:27:10 1996
--- ./ssl/ssl_clnt.c	Thu Aug  1 11:52:33 1996
***************
*** 230,237 ****
  
  				if (!s->ctx->new_session_cb(s->session))
  					{
! 					CRYPTO_add(&s->session->references,-1,
! 						CRYPTO_LOCK_SSL_SESSION);
  					}
  				}
  
--- 230,236 ----
  
  				if (!s->ctx->new_session_cb(s->session))
  					{
! 					SSL_SESSION_free(s->session);
  					}
  				}
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ssl/ssl_lib.c	Wed Jul 24 14:27:10 1996
--- ./ssl/ssl_lib.c	Tue Aug  6 15:57:45 1996
***************
*** 61,67 ****
  #include "ssl_rsa.h"
  #include "ssl_null.h"
  
! char *SSL_version="SSLeay 0.6.2 24-Jul-1996";
  
  /* THIS ARRAY MUST BE KEPT ORDERED BY c1, c2 and c3.
   * basically the second last 'value' which is a #define for these 3
--- 61,67 ----
  #include "ssl_rsa.h"
  #include "ssl_null.h"
  
! char *SSL_version="SSLeay 0.6.3 06-Aug-1996";
  
  /* THIS ARRAY MUST BE KEPT ORDERED BY c1, c2 and c3.
   * basically the second last 'value' which is a #define for these 3
***************
*** 401,407 ****
  	{
  	if ((s->rbio != NULL) && (s->rbio != rbio))
  		BIO_free(s->rbio);
! 	if ((s->wbio != NULL) && (s->wbio != wbio) && (s->rbio != s->rbio))
  		BIO_free(s->wbio);
  	s->rbio=rbio;
  	s->wbio=wbio;
--- 401,407 ----
  	{
  	if ((s->rbio != NULL) && (s->rbio != rbio))
  		BIO_free(s->rbio);
! 	if ((s->wbio != NULL) && (s->wbio != wbio) && (s->rbio != s->wbio))
  		BIO_free(s->wbio);
  	s->rbio=rbio;
  	s->wbio=wbio;
***************
*** 443,454 ****
  		goto err;
  		}
  	BIO_set_fd(bio,&fd,BIO_NOCLOSE);
! 	if (s->rbio != NULL)
! 		BIO_free(s->rbio);
! 	if ((s->wbio != NULL) && (s->wbio != s->rbio))
! 		BIO_free(s->wbio);
! 	s->rbio=bio;
! 	s->wbio=bio;
  	ret=1;
  err:
  	return(ret);
--- 443,449 ----
  		goto err;
  		}
  	BIO_set_fd(bio,&fd,BIO_NOCLOSE);
! 	SSL_set_bio(s,bio,bio);
  	ret=1;
  err:
  	return(ret);
***************
*** 466,473 ****
  	if (bio == NULL)
  		{ SSLerr(SSL_F_SSL_SET_WFD,ERR_R_BUF_LIB); goto err; }
  	BIO_set_fd(bio,&fd,BIO_NOCLOSE);
! 	if (s->wbio != NULL) BIO_free(s->wbio);
! 	s->wbio=bio;
  	ret=1;
  err:
  	return(ret);
--- 461,467 ----
  	if (bio == NULL)
  		{ SSLerr(SSL_F_SSL_SET_WFD,ERR_R_BUF_LIB); goto err; }
  	BIO_set_fd(bio,&fd,BIO_NOCLOSE);
! 	SSL_set_bio(s,SSL_get_rbio(s),bio);
  	ret=1;
  err:
  	return(ret);
***************
*** 488,495 ****
  		goto err;
  		}
  	BIO_set_fd(bio,&fd,BIO_NOCLOSE);
! 	if (s->wbio != NULL) BIO_free(s->wbio);
! 	s->rbio=bio;
  	ret=1;
  err:
  	return(ret);
--- 482,488 ----
  		goto err;
  		}
  	BIO_set_fd(bio,&fd,BIO_NOCLOSE);
! 	SSL_set_bio(s,bio,SSL_get_wbio(s));
  	ret=1;
  err:
  	return(ret);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ssl/ssl_locl.h	Wed Jul 17 16:45:29 1996
--- ./ssl/ssl_locl.h	Sat Jul 27 14:47:23 1996
***************
*** 147,153 ****
  #else
  #define HAVE_RC4
  #endif
! #ifndef NO_RC4
  #define HAVE_RC2	+2
  #else
  #define HAVE_RC2
--- 147,153 ----
  #else
  #define HAVE_RC4
  #endif
! #ifndef NO_RC2
  #define HAVE_RC2	+2
  #else
  #define HAVE_RC2
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ssl/ssl_srvr.c	Wed Jul 24 14:27:10 1996
--- ./ssl/ssl_srvr.c	Fri Aug  2 14:28:33 1996
***************
*** 241,251 ****
  				CRYPTO_add(&s->session->references,1,
  					CRYPTO_LOCK_SSL_SESSION);
  				if (!s->ctx->new_session_cb(s->session))
! 					{
! 					CRYPTO_add(&s->session->references,-1,
! 						CRYPTO_LOCK_SSL_SESSION);
  					}
- 				}
  
  			/* flush cache every 32 entries */
                          if (!((s->ctx->session_cache_mode &
--- 241,248 ----
  				CRYPTO_add(&s->session->references,1,
  					CRYPTO_LOCK_SSL_SESSION);
  				if (!s->ctx->new_session_cb(s->session))
! 					SSL_SESSION_free(s->session);
  				}
  
  			/* flush cache every 32 entries */
                          if (!((s->ctx->session_cache_mode &
***************
*** 588,593 ****
--- 585,602 ----
  				ssl_cert_free(s->session->cert);
  			s->session->cert=s->cert;		
  			CRYPTO_add(&s->cert->references,1,CRYPTO_LOCK_X509);
+ 			}
+ 		else	/* We have a session id-cache hit, if the
+ 			 * session-id has no certificate listed against
+ 			 * the 'cert' structure, grab the 'old' one
+ 			 * listed against the SSL connection */
+ 			{
+ 			if (s->session->cert == NULL)
+ 				{
+ 				s->session->cert=s->cert;
+ 				CRYPTO_add(&s->cert->references,1,
+ 					CRYPTO_LOCK_X509);
+ 				}
  			}
  
  		if (s->session->cert == NULL)
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ssl/ssl_txt.c	Wed Jul 24 14:27:10 1996
--- ./ssl/ssl_txt.c	Wed Aug  7 09:14:39 1996
***************
*** 102,108 ****
--- 102,119 ----
  			sprintf(str,"%02X",x->key_arg[i]);
  			if (BIO_puts(bp,str) <= 0) goto err;
  			}
+ 	if (x->time != 0L)
+ 		{
+ 		sprintf(str,"\n    Start Time: %ld",x->time);
+ 		if (BIO_puts(bp,str) <= 0) goto err;
+ 		}
+ 	if (x->timeout != 0L)
+ 		{
+ 		sprintf(str,"\n    Timeout   : %ld (sec)",x->timeout);
+ 		if (BIO_puts(bp,str) <= 0) goto err;
+ 		}
  	if (BIO_puts(bp,"\n") <= 0) goto err;
+ 		
  	return(1);
  err:
  	return(0);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/ca.c	Wed Jul 24 08:14:27 1996
--- ./apps/ca.c	Thu Aug  1 13:48:45 1996
***************
*** 44,49 ****
--- 44,50 ----
   * copied and put under another distribution licence
   * [including the GNU Public Licence.]
   */
+ /* The PPKI stuff has been donated by Jeff Barber <jeffb@issl.atl.hp.com> */
  
  #include <stdio.h>
  #include <stdlib.h>
***************
*** 123,128 ****
--- 124,130 ----
  " -out file       - Where to put the output file(s)\n",
  " -outdir dir     - Where to put output certificates\n",
  " -infiles ....   - The last argument, requests to process\n",
+ " -spkac file     - File contains DN and signed public key and challenge\n",
  NULL
  };
  
***************
*** 139,146 ****
  static int certify(X509 **xret, char *infile,RSA *rsa,X509 *x509,
  	EVP_MD *dgst,STACK *policy,TXT_DB *db,BIGNUM *serial,int days,
  	int batch, int verbose);
  static int cmp_on_nid(X509_NAME_ENTRY **a,X509_NAME_ENTRY **b);
! static void write_new_certificate(BIO *bp, X509 *x);
  #else
  static void lookup_fail();
  static int MS_CALLBACK key_callback();
--- 141,155 ----
  static int certify(X509 **xret, char *infile,RSA *rsa,X509 *x509,
  	EVP_MD *dgst,STACK *policy,TXT_DB *db,BIGNUM *serial,int days,
  	int batch, int verbose);
+ static int certify_spkac(X509 **xret, char *infile,RSA *rsa,X509 *x509,
+ 	EVP_MD *dgst,STACK *policy,TXT_DB *db,BIGNUM *serial,int days,
+ 	int verbose);
+ static int fix_data(int nid, int *type);
  static int cmp_on_nid(X509_NAME_ENTRY **a,X509_NAME_ENTRY **b);
! static void write_new_certificate(BIO *bp, X509 *x, int output_der);
! static int do_body(X509 **xret, RSA *rsa, X509 *x509, EVP_MD *dgst,
! 	STACK *policy, TXT_DB *db, BIGNUM *serial, int days, int batch,
! 	int verbose, X509_REQ *req);
  #else
  static void lookup_fail();
  static int MS_CALLBACK key_callback();
***************
*** 154,159 ****
--- 163,169 ----
  static int certify();
  static int cmp_on_nid();
  static void write_new_certificate();
+ static int do_body();
  #endif
  
  static LHASH *conf;
***************
*** 180,185 ****
--- 190,197 ----
  	char *keyfile=NULL;
  	char *certfile=NULL;
  	char *infile=NULL;
+ 	char *spkac_file=NULL;
+ 	int output_der = 0;
  	char *outfile=NULL;
  	char *outdir=NULL;
  	char *serialfile=NULL;
***************
*** 294,299 ****
--- 306,317 ----
  			req=1;
  			break;
  			}
+ 		else if (strcmp(*argv, "-spkac") == 0)
+ 			{
+ 			if (--argc < 1) goto bad;
+ 			spkac_file = *(++argv);
+ 			req=1;
+ 			}
  		else
  			{
  bad:
***************
*** 601,606 ****
--- 619,647 ----
  			fprintf(stderr,"malloc failure\n");
  			goto err;
  			}
+ 		if (spkac_file != NULL)
+ 			{
+ 			total++;
+ 			j=certify_spkac(&x,spkac_file,rsa,x509,dgst,attribs,db,
+ 				serial,days,verbose);
+ 			if (j < 0) goto err;
+ 			if (j > 0)
+ 				{
+ 				total_done++;
+ 				fprintf(stderr,"\n");
+ 				if (!BN_add_word(serial,1)) goto err;
+ 				if (!sk_push(cert_sk,(char *)x))
+ 					{
+ 					fprintf(stderr,"malloc failure\n");
+ 					goto err;
+ 					}
+ 				if (outfile)
+ 					{
+ 					output_der = 1;
+ 					batch = 1;
+ 					}
+ 				}
+ 			}
  		if (infile != NULL)
  			{
  			total++;
***************
*** 714,721 ****
  				perror(buf[2]);
  				goto err;
  				}
! 			write_new_certificate(Cout,x);
! 			write_new_certificate(Sout,x);
  			}
  
  		if (sk_num(cert_sk))
--- 755,762 ----
  				perror(buf[2]);
  				goto err;
  				}
! 			write_new_certificate(Cout,x, 0);
! 			write_new_certificate(Sout,x, output_der);
  			}
  
  		if (sk_num(cert_sk))
***************
*** 1021,1052 ****
  int batch;
  int verbose;
  	{
- 	BIO *in=NULL,*b_err=NULL;
- 	STACK *name=NULL,*CAname=NULL;
- 	STACK *subject=NULL;
  	X509_REQ *req=NULL;
! 	X509 *ret=NULL;
! 	X509_CINF *ci;
! 	X509_NAME_ENTRY *ne;
! 	X509_NAME_ENTRY tmp,*tne,*push;
! 	int ok= -1,i,j;
! 	char *p;
! 	CONF_VALUE *cv;
! 	char *row[DB_NUMBER],**rrow,**irow=NULL;
  	EVP_PKEY *pkey=NULL;
! 	EVP_PKEY static_pkey;
  
- 	for (i=0; i<DB_NUMBER; i++)
- 		row[i]=NULL;
- 
  	in=BIO_new(BIO_s_file());
- 	b_err=BIO_new(BIO_s_file());
- 	if ((in == NULL) || (b_err == NULL))
- 		{
- 		ERR_print_errors(bio_err);
- 		goto err;
- 		}
- 	BIO_set_fp(b_err,stderr,BIO_NOCLOSE);
  
  	if (BIO_read_filename(in,infile) <= 0)
  		{
--- 1062,1073 ----
  int batch;
  int verbose;
  	{
  	X509_REQ *req=NULL;
! 	BIO *in=NULL;
  	EVP_PKEY *pkey=NULL;
! 	int ok= -1,i;
  
  	in=BIO_new(BIO_s_file());
  
  	if (BIO_read_filename(in,infile) <= 0)
  		{
***************
*** 1060,1066 ****
  		goto err;
  		}
  	if (verbose)
! 		X509_REQ_print(b_err,req);
  
  	fprintf(stderr,"Check that the request matches the signature\n");
  
--- 1081,1087 ----
  		goto err;
  		}
  	if (verbose)
! 		X509_REQ_print(bio_err,req);
  
  	fprintf(stderr,"Check that the request matches the signature\n");
  
***************
*** 1080,1088 ****
  		}
  	i=X509_REQ_verify(req,pkey);
  	EVP_PKEY_free(pkey);
! 	if (!i)
  		{
  		ok=0;
  		fprintf(stderr,"Signature did not match the certificate request\n");
  		goto err;
  		}
--- 1101,1115 ----
  		}
  	i=X509_REQ_verify(req,pkey);
  	EVP_PKEY_free(pkey);
! 	if (i < 0)
  		{
  		ok=0;
+ 		fprintf(stderr,"Signature verification problems....\n");
+ 		goto err;
+ 		}
+ 	if (i == 0)
+ 		{
+ 		ok=0;
  		fprintf(stderr,"Signature did not match the certificate request\n");
  		goto err;
  		}
***************
*** 1089,1100 ****
  	else
  		fprintf(stderr,"Signature ok\n");
  
  	fprintf(stderr,"The Subjects Distinguished Name is as follows\n");
  	name=req->req_info->subject;
  	for (i=0; i<sk_num(name); i++)
  		{
  		ne=(X509_NAME_ENTRY *)sk_value(name,i);
! 		j=i2a_ASN1_OBJECT(b_err,ne->object);
  		for (j=22-j; j>0; j--)
  			fputc(' ',stderr);
  		fputc(':',stderr);
--- 1116,1163 ----
  	else
  		fprintf(stderr,"Signature ok\n");
  
+ 	ok=do_body(xret,rsa,x509,dgst,policy,db,serial,days,batch,verbose,req);
+ 
+ err:
+ 	if (req != NULL) X509_REQ_free(req);
+ 	if (in != NULL) BIO_free(in);
+ 	return(ok);
+ 	}
+ 
+ static int do_body(xret,rsa,x509,dgst,policy,db,serial,days,batch,verbose,req)
+ X509 **xret;
+ RSA *rsa;
+ X509 *x509;
+ EVP_MD *dgst;
+ STACK *policy;
+ TXT_DB *db;
+ BIGNUM *serial;
+ int days;
+ int batch;
+ int verbose;
+ X509_REQ *req;
+ 	{
+ 	STACK *name=NULL,*CAname=NULL;
+ 	STACK *subject=NULL;
+ 	X509 *ret=NULL;
+ 	X509_CINF *ci;
+ 	X509_NAME_ENTRY *ne;
+ 	X509_NAME_ENTRY tmp,*tne,*push;
+ 	int ok= -1,i,j;
+ 	char *p;
+ 	CONF_VALUE *cv;
+ 	char *row[DB_NUMBER],**rrow,**irow=NULL;
+ 	EVP_PKEY static_pkey;
+ 
+ 	for (i=0; i<DB_NUMBER; i++)
+ 		row[i]=NULL;
+ 
  	fprintf(stderr,"The Subjects Distinguished Name is as follows\n");
  	name=req->req_info->subject;
  	for (i=0; i<sk_num(name); i++)
  		{
  		ne=(X509_NAME_ENTRY *)sk_value(name,i);
! 		j=i2a_ASN1_OBJECT(bio_err,ne->object);
  		for (j=22-j; j>0; j--)
  			fputc(' ',stderr);
  		fputc(':',stderr);
***************
*** 1120,1130 ****
  			((j == V_ASN1_IA5STRING) &&
  			 (ne->value->type == V_ASN1_PRINTABLESTRING)))
  			{
! 			fprintf(stderr,"\nThe string contains characters that are ilegal for the ASN.1 type\n");
  			goto err;
  			}
  
- 			
  		p=(char *)ne->value->data;
  		for (j=ne->value->length; j>0; j--)
  			{
--- 1183,1192 ----
  			((j == V_ASN1_IA5STRING) &&
  			 (ne->value->type == V_ASN1_PRINTABLESTRING)))
  			{
! 			fprintf(stderr,"\nThe string contains characters that are illegal for the ASN.1 type\n");
  			goto err;
  			}
  			
  		p=(char *)ne->value->data;
  		for (j=ne->value->length; j>0; j--)
  			{
***************
*** 1190,1202 ****
  			{
  			if (tne == NULL)
  				{
! 				fprintf(stderr,"The manditory %s field was missing\n",cv->name);
  				goto err;
  				}
  			j=sk_find(CAname,(char *)&tmp);
  			if (j < 0)
  				{
! 				fprintf(stderr,"The %s field does not exist in the CA certificate,\nthe 'policy' is missconfigured\n",cv->name);
  				goto err;
  				}
  
--- 1252,1264 ----
  			{
  			if (tne == NULL)
  				{
! 				fprintf(stderr,"The mandatory %s field was missing\n",cv->name);
  				goto err;
  				}
  			j=sk_find(CAname,(char *)&tmp);
  			if (j < 0)
  				{
! 				fprintf(stderr,"The %s field does not exist in the CA certificate,\nthe 'policy' is misconfigured\n",cv->name);
  				goto err;
  				}
  
***************
*** 1241,1247 ****
  	row[DB_serial]=BN_bn2ascii(serial);
  	if ((row[DB_name] == NULL) || (row[DB_serial] == NULL))
  		{
! 		fprintf(stderr,"malloc failur\n");
  		goto err;
  		}
  
--- 1303,1309 ----
  	row[DB_serial]=BN_bn2ascii(serial);
  	if ((row[DB_name] == NULL) || (row[DB_serial] == NULL))
  		{
! 		fprintf(stderr,"malloc failure\n");
  		goto err;
  		}
  
***************
*** 1298,1317 ****
  
  	if ((ret=X509_new()) == NULL) goto err;
  	ci=ret->cert_info;
! /*#ifdef undef */
! 	if ((req->req_info->attributes != NULL) &&
! 		(sk_num(req->req_info->attributes) > 0))
! 		{
  		if (ci->version == NULL)
  			if ((ci->version=ASN1_INTEGER_new()) == NULL)
  				goto err;
  		ASN1_INTEGER_set(ci->version,2);
! 		j=1;
! 		}
! 	else
! /* #endif */
! 		j=0;
! 	/* else ci->version=NULL; */
  
  	if (BN_to_ASN1_INTEGER(serial,ci->serialNumber) == NULL)
  		goto err;
--- 1360,1373 ----
  
  	if ((ret=X509_new()) == NULL) goto err;
  	ci=ret->cert_info;
! 
! #ifdef X509_V3
! 	/* Make it an X509 v3 certificate. */
  	if (ci->version == NULL)
  		if ((ci->version=ASN1_INTEGER_new()) == NULL)
  			goto err;
  	ASN1_INTEGER_set(ci->version,2);
! #endif
  
  	if (BN_to_ASN1_INTEGER(serial,ci->serialNumber) == NULL)
  		goto err;
***************
*** 1322,1328 ****
  	fprintf(stderr,"Certificate is to be certified until ");
  	X509_gmtime_adj(ci->validity->notBefore,0);
  	X509_gmtime_adj(ci->validity->notAfter,(long)60*60*24*days);
! 	ASN1_UTCTIME_print(b_err,ci->validity->notAfter);
  	fprintf(stderr," (%d days)\n",days);
  
  	X509_NAME_free(ci->subject);
--- 1378,1384 ----
  	fprintf(stderr,"Certificate is to be certified until ");
  	X509_gmtime_adj(ci->validity->notBefore,0);
  	X509_gmtime_adj(ci->validity->notAfter,(long)60*60*24*days);
! 	ASN1_UTCTIME_print(bio_err,ci->validity->notAfter);
  	fprintf(stderr," (%d days)\n",days);
  
  	X509_NAME_free(ci->subject);
***************
*** 1333,1346 ****
  	ci->key=req->req_info->pubkey;
  	req->req_info->pubkey=NULL;
  
- /* #ifdef 1 */
- 	if (j)
- 		{
- /*		ci->extensions=req->req_info->attributes;
- 		req->req_info->attributes=NULL;*/
- 		}
- /* #endif */
- 
  	if (!batch)
  		{
  		char buf[10];
--- 1389,1394 ----
***************
*** 1403,1411 ****
  	for (i=0; i<DB_NUMBER; i++)
  		if (row[i] != NULL) free(row[i]);
  
- 	if (req != NULL) X509_REQ_free(req);
- 	if (in != NULL) BIO_free(in);
- 	if (b_err != NULL) BIO_free(b_err);
  	if (CAname != NULL)
  		X509_NAME_free(CAname);
  	if (ok <= 0)
--- 1451,1456 ----
***************
*** 1433,1444 ****
  	return(OBJ_obj2nid((*a)->object)-OBJ_obj2nid((*b)->object));
  	}
  
! static void write_new_certificate(bp,x)
  BIO *bp;
  X509 *x;
  	{
  	char *f;
  
  	f=X509_NAME_oneline(X509_get_issuer_name(x));
  	BIO_puts(bp,"issuer :");
  	BIO_puts(bp,f);
--- 1478,1496 ----
  	return(OBJ_obj2nid((*a)->object)-OBJ_obj2nid((*b)->object));
  	}
  
! static void write_new_certificate(bp,x, output_der)
  BIO *bp;
  X509 *x;
+ int output_der;
  	{
  	char *f;
  
+ 	if (output_der)
+ 	{
+ 	    (void)i2d_X509_bio(bp,x);
+ 	    return;
+ 	}
+ 
  	f=X509_NAME_oneline(X509_get_issuer_name(x));
  	BIO_puts(bp,"issuer :");
  	BIO_puts(bp,f);
***************
*** 1455,1458 ****
--- 1507,1710 ----
  	PEM_write_bio_X509(bp,x);
  	BIO_puts(bp,"\n");
  	}
+ 
+ static int certify_spkac(xret,infile,rsa,x509,dgst,policy,db,serial,days,
+ 	verbose)
+ X509 **xret;
+ char *infile;
+ RSA *rsa;
+ X509 *x509;
+ EVP_MD *dgst;
+ STACK *policy;
+ TXT_DB *db;
+ BIGNUM *serial;
+ int days;
+ int verbose;
+ 	{
+ 	STACK *sk=NULL;
+ 	LHASH *parms=NULL;
+ 	X509_REQ *req=NULL;
+ 	CONF_VALUE *cv=NULL;
+ 	NETSCAPE_SPKI *spki = NULL;
+ 	unsigned char *spki_der = NULL,*p;
+ 	X509_REQ_INFO *ri;
+ 	char *type;
+ 	EVP_PKEY *pkey=NULL;
+ 	X509_NAME *n=NULL;
+ 	X509_NAME_ENTRY *ne=NULL;
+ 	int ok= -1,i,j;
+ 	long errline;
+ 	int nid;
+ 
+ 	/*
+ 	 * Load input file into a hash table.  (This is just an easy
+ 	 * way to read and parse the file, then put it into a convenient
+ 	 * STACK format).
+ 	 */
+ 	parms=CONF_load(NULL,infile,&errline);
+ 	if (parms == NULL)
+ 		{
+ 		fprintf(stderr,"error on line %ld of %s\n",errline,infile);
+ 		ERR_print_errors(bio_err);
+ 		goto err;
+ 		}
+ 
+ 	sk=CONF_get_section(parms, "default");
+ 	if (sk_num(sk) == 0)
+ 		{
+ 		fprintf(stderr, "no name/value pairs found in %s\n", infile);
+ 		CONF_free(parms);
+ 		goto err;
+ 		}
+ 
+ 	/*
+ 	 * Now create a dummy X509 request structure.  We don't actually
+ 	 * have an X509 request, but we have many of the components
+ 	 * (a public key, various DN components).  The idea is that we
+ 	 * put these components into the right X509 request structure
+ 	 * and we can use the same code as if you had a real X509 request.
+ 	 */
+ 	req=X509_REQ_new();
+ 	if (req == NULL)
+ 		{
+ 		ERR_print_errors(bio_err);
+ 		goto err;
+ 		}
+ 
+ 	/*
+ 	 * Build up the subject name set.
+ 	 */
+ 	ri=req->req_info;
+ 	n = ri->subject;
+ 
+ 	for (i = 0; ; i++)
+ 		{
+ 		if ((int)sk_num(sk) <= i) break;
+ 
+ 		cv=(CONF_VALUE *)sk_value(sk,i);
+ 		type=cv->name;
+ 
+ 		if ((nid=OBJ_txt2nid(type)) == NID_undef)
+ 			{
+ 			if (strcmp(type, "SPKAC") == 0)
+ 				{
+ 				spki_der = malloc(strlen(cv->value) + 1);
+ 				if (spki_der == NULL)
+ 					{
+ 					fprintf(stderr,"malloc failure\n");
+ 					goto err;
+ 					}
+ 				j = EVP_DecodeBlock(spki_der, (unsigned char *)cv->value,
+ 					strlen(cv->value));
+ 				if (j <= 0)
+ 					{
+ 					fprintf(stderr, "Can't b64 decode SPKAC structure\n");
+ 					goto err;
+ 					}
+ 
+ 				p=spki_der;
+ 				spki = d2i_NETSCAPE_SPKI(&spki, &p, j);
+ 				free(spki_der);
+ 				spki_der = NULL;
+ 				if (spki == NULL)
+ 					{
+ 					fprintf(stderr,"unable to load Netscape SPKAC structure\n");
+ 					ERR_print_errors(bio_err);
+ 					goto err;
+ 					}
+ 				}
+ 			continue;
+ 			}
+ 
+ 		/* add object plus value */
+ 		j = sk_num(n);
+ 		if (j) j=((X509_NAME_ENTRY *)(sk_value(n, j-1)))->set+1;
+ 
+ 		if ((ne=X509_NAME_ENTRY_new()) == NULL) goto err;
+ 
+ 		ne->object=OBJ_nid2obj(nid);
+ 		ne->set=j;
+ 
+ 		ne->value->type=ASN1_PRINTABLE_type((unsigned char *)cv->value);
+ 
+ 		if (fix_data(nid, &ne->value->type) == 0)
+ 			{
+ 			fprintf(stderr, "invalid characters in string %s\n",
+ 				cv->value);
+ 			goto err;
+ 			}
+ 
+ 		j = strlen(cv->value);
+ 		ne->value->length=j;
+ 		ne->value->data=(unsigned char *)malloc(j+1);
+ 		if (ne->value->data == NULL)
+ 			{ fprintf(stderr,"malloc failure\n"); goto err; }
+ 		memcpy(ne->value->data,cv->value,j+1);
+ 		if (!sk_push(n,(char *)ne)) goto err;
+ 		ne=NULL;
+ 		}
+ 	if (spki == NULL)
+ 		{
+ 		fprintf(stderr,"Netscape SPKAC structure not found in %s\n",
+ 			infile);
+ 		goto err;
+ 		}
+ 
+ 	/*
+ 	 * Now extract the key from the SPKI structure.
+ 	 */
+ 
+ 	fprintf(stderr,"Check that the SPKAC request matches the signature\n");
+ 
+ 	nid=OBJ_obj2nid(spki->spkac->pubkey->algor->algorithm);
+ 	p=spki->spkac->pubkey->public_key->data;
+ 	j=spki->spkac->pubkey->public_key->length;
+ 	pkey=d2i_PublicKey(nid,NULL,&p,(long)j);
+ 	if (pkey == NULL)
+ 		{
+ 		fprintf(stderr,"error unpacking SPKAC public key\n");
+ 		goto err;
+ 		}
+ 
+ 	j = NETSCAPE_SPKI_verify(spki, pkey);
+ 	EVP_PKEY_free(pkey);
+ 	if (j <= 0)
+ 		{
+ 		fprintf(stderr,"signature verification failed on SPKAC public key\n");
+ 		goto err;
+ 		}
+ 	fprintf(stderr,"Signature ok\n");
+ 
+ 	
+ 	X509_PUBKEY_free(req->req_info->pubkey);
+ 	req->req_info->pubkey=spki->spkac->pubkey;
+ 	spki->spkac->pubkey=NULL;
+ 	ok=do_body(xret,rsa,x509,dgst,policy,db,serial,days,1,verbose,req);
+ err:
+ 	if (req != NULL) X509_REQ_free(req);
+ 	if (parms != NULL) CONF_free(parms);
+ 	if (spki_der != NULL) free(spki_der);
+ 	if (spki != NULL) NETSCAPE_SPKI_free(spki);
+ 	if (ne != NULL) X509_NAME_ENTRY_free(ne);
+ 
+ 	return(ok);
+ 	}
+ 
+ static int fix_data(nid,type)
+ int nid;
+ int *type;
+ 	{
+ 	if (nid == NID_pkcs9_emailAddress)
+ 		*type=V_ASN1_IA5STRING;
+ 	if ((nid == NID_commonName) && (*type == V_ASN1_IA5STRING))
+ 		*type=V_ASN1_T61STRING;
+ 	if ((nid == NID_pkcs9_challengePassword) && (*type == V_ASN1_IA5STRING))
+ 		*type=V_ASN1_T61STRING;
+ 	if ((nid == NID_pkcs9_unstructuredName) && (*type == V_ASN1_T61STRING))
+ 		return(0);
+ 	if (nid == NID_pkcs9_unstructuredName)
+ 		*type=V_ASN1_IA5STRING;
+ 	return(1);
+ 	}
+ 
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/Makefile.ssl	Thu Jul 25 16:06:37 1996
--- ./apps/Makefile.ssl	Thu Aug  8 01:48:39 1996
***************
*** 33,39 ****
  
  E_EXE=	verify asn1pars req dgst dh enc gendh errstr ca \
  	crl rsa x509 genrsa s_server s_client s_filter speed \
! 	hashdir s_time s_mult version pkcs7 crl2pkcs7
  
  PROGS= $(SSLEAY).c
  
--- 33,39 ----
  
  E_EXE=	verify asn1pars req dgst dh enc gendh errstr ca \
  	crl rsa x509 genrsa s_server s_client s_filter speed \
! 	hashdir s_time s_mult version pkcs7 crl2pkcs7 sess_id
  
  PROGS= $(SSLEAY).c
  
***************
*** 45,51 ****
  E_OBJ=	verify.o asn1pars.o req.o dgst.o dh.o enc.o gendh.o errstr.o ca.o \
  	pkcs7.o crl2p7.o \
  	crl.o rsa.o x509.o genrsa.o s_server.o s_client.o s_filter.o speed.o \
! 	hashdir.o s_time.o s_mult.o $(A_OBJ) $(S_OBJ) version.o
  
  #	pem_mail.o
  
--- 45,51 ----
  E_OBJ=	verify.o asn1pars.o req.o dgst.o dh.o enc.o gendh.o errstr.o ca.o \
  	pkcs7.o crl2p7.o \
  	crl.o rsa.o x509.o genrsa.o s_server.o s_client.o s_filter.o speed.o \
! 	hashdir.o s_time.o s_mult.o $(A_OBJ) $(S_OBJ) version.o sess_id.o
  
  #	pem_mail.o
  
***************
*** 52,58 ****
  E_SRC=	verify.c asn1pars.c req.c dgst.c dh.c enc.c gendh.c errstr.c ca.c \
  	pkcs7.c crl2p7.c \
  	crl.c rsa.c x509.c genrsa.c s_server.c s_client.c s_filter.c speed.c \
! 	hashdir.c s_time.c s_mult.c $(A_SRC) $(S_SRC) version.c
  
  #	pem_mail.c
  
--- 52,58 ----
  E_SRC=	verify.c asn1pars.c req.c dgst.c dh.c enc.c gendh.c errstr.c ca.c \
  	pkcs7.c crl2p7.c \
  	crl.c rsa.c x509.c genrsa.c s_server.c s_client.c s_filter.c speed.c \
! 	hashdir.c s_time.c s_mult.c $(A_SRC) $(S_SRC) version.c sess_id.c
  
  #	pem_mail.c
  
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/mklinks	Thu Jul 25 10:58:58 1996
--- ./apps/mklinks	Fri Aug  2 16:15:48 1996
***************
*** 1,5 ****
  #!/bin/sh
! for i in verify asn1parse req dgst dh enc gendh errstr ca crl rsa x509 genrsa s_server s_client s_filter speed hashdir s_time s_mult version pkcs7 crl2pkcs7 md2 md5 sha sha1 base64 des des3 desx idea rc4 rc2 des-ecb des-ede des-ede3 des-cbc des-ede-cbc des-ede3-cbc des-cfb des-ede-cfb des-ede3-cfb des-ofb des-ede-ofb des-ede3-ofb idea-cbc idea-ecb idea-cfb idea-ofb rc2-cbc rc2-ecb rc2-cfb rc2-ofb 
  do
  echo making symlink for $i
  /bin/rm -f $i
--- 1,5 ----
  #!/bin/sh
! for i in verify asn1parse req dgst dh enc gendh errstr ca crl rsa x509 genrsa s_server s_client s_filter speed hashdir s_time s_mult version pkcs7 crl2pkcs7 sess_id md2 md5 sha sha1 base64 des des3 desx idea rc4 rc2 des-ecb des-ede des-ede3 des-cbc des-ede-cbc des-ede3-cbc des-cfb des-ede-cfb des-ede3-cfb des-ofb des-ede-ofb des-ede3-ofb idea-cbc idea-ecb idea-cfb idea-ofb rc2-cbc rc2-ecb rc2-cfb rc2-ofb 
  do
  echo making symlink for $i
  /bin/rm -f $i
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/progs.h	Thu Jul 25 10:58:58 1996
--- ./apps/progs.h	Fri Aug  2 16:15:48 1996
***************
*** 22,27 ****
--- 22,28 ----
  extern int version_main(int argc,char *argv[]);
  extern int pkcs7_main(int argc,char *argv[]);
  extern int crl2pkcs7_main(int argc,char *argv[]);
+ extern int sess_id_main(int argc,char *argv[]);
  #else
  extern int verify_main();
  extern int asn1parse_main();
***************
*** 46,51 ****
--- 47,53 ----
  extern int version_main();
  extern int pkcs7_main();
  extern int crl2pkcs7_main();
+ extern int sess_id_main();
  #endif
  
  #define FUNC_TYPE_GENERAL	1
***************
*** 92,97 ****
--- 94,100 ----
  	{FUNC_TYPE_GENERAL,"version",version_main},
  	{FUNC_TYPE_GENERAL,"pkcs7",pkcs7_main},
  	{FUNC_TYPE_GENERAL,"crl2pkcs7",crl2pkcs7_main},
+ 	{FUNC_TYPE_GENERAL,"sess_id",sess_id_main},
  	{FUNC_TYPE_MD,"md2",dgst_main},
  	{FUNC_TYPE_MD,"md5",dgst_main},
  	{FUNC_TYPE_MD,"sha",dgst_main},
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/rmlinks	Thu Jul 25 10:58:58 1996
--- ./apps/rmlinks	Fri Aug  2 16:15:48 1996
***************
*** 1,5 ****
  #!/bin/sh
! for i in verify asn1parse req dgst dh enc gendh errstr ca crl rsa x509 genrsa s_server s_client s_filter speed hashdir s_time s_mult version pkcs7 crl2pkcs7 md2 md5 sha sha1 base64 des des3 desx idea rc4 rc2 des-ecb des-ede des-ede3 des-cbc des-ede-cbc des-ede3-cbc des-cfb des-ede-cfb des-ede3-cfb des-ofb des-ede-ofb des-ede3-ofb idea-cbc idea-ecb idea-cfb idea-ofb rc2-cbc rc2-ecb rc2-cfb rc2-ofb 
  do
  echo removing $i
  /bin/rm -f $i
--- 1,5 ----
  #!/bin/sh
! for i in verify asn1parse req dgst dh enc gendh errstr ca crl rsa x509 genrsa s_server s_client s_filter speed hashdir s_time s_mult version pkcs7 crl2pkcs7 sess_id md2 md5 sha sha1 base64 des des3 desx idea rc4 rc2 des-ecb des-ede des-ede3 des-cbc des-ede-cbc des-ede3-cbc des-cfb des-ede-cfb des-ede3-cfb des-ofb des-ede-ofb des-ede3-ofb idea-cbc idea-ecb idea-cfb idea-ofb rc2-cbc rc2-ecb rc2-cfb rc2-ofb 
  do
  echo removing $i
  /bin/rm -f $i
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/rsa.c	Wed Jul 24 08:14:27 1996
--- ./apps/rsa.c	Tue Aug  6 15:23:14 1996
***************
*** 68,73 ****
--- 68,74 ----
   * -des3	- encrypt output if PEM format
   * -idea	- encrypt output if PEM format
   * -text	- print a text version
+  * -modulus	- print the RSA key modulus
   */
  
  int MAIN(argc, argv)
***************
*** 81,86 ****
--- 82,88 ----
  	BIO *in=NULL,*out=NULL;
  	int informat,outformat,text=0,noout=0;
  	char *infile,*outfile,*prog;
+ 	int modulus=0;
  
  	apps_startup();
  
***************
*** 122,127 ****
--- 124,131 ----
  			noout=1;
  		else if (strcmp(*argv,"-text") == 0)
  			text=1;
+ 		else if (strcmp(*argv,"-modulus") == 0)
+ 			modulus=1;
  		else if (strcmp(*argv,"-des") == 0)
  			enc=EVP_des_cbc();
  		else if (strcmp(*argv,"-des3") == 0)
***************
*** 156,161 ****
--- 160,166 ----
  #endif
  		fprintf(stderr," -text         print the key in text\n");
  		fprintf(stderr," -noout        don't print key out\n");
+ 		fprintf(stderr," -modulus      print the RSA key modulus\n");
  		goto end;
  		}
  
***************
*** 241,246 ****
--- 246,258 ----
  			perror(outfile);
  			ERR_print_errors(bio_err);
  			goto end;
+ 			}
+ 
+ 	if (modulus)
+ 		{
+ 		fprintf(stdout,"Modulus=");
+ 		BN_print(out,rsa->n);
+ 		fprintf(stdout,"\n");
  		}
  
  	if (noout) goto end;
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/speed.c	Wed Jul 24 08:14:27 1996
--- ./apps/speed.c	Wed Jul 31 16:04:40 1996
***************
*** 138,144 ****
  #endif
  
  #undef BUFSIZE
! #define BUFSIZE	((long)1024*/*8*/20)
  long run=0;
  
  #ifndef NOPROTO
--- 138,144 ----
  #endif
  
  #undef BUFSIZE
! #define BUFSIZE	((long)1024*8)
  long run=0;
  
  #ifndef NOPROTO
***************
*** 260,266 ****
  #define	D_CFB_RC2	10
  #define	D_CBC_RC2	11
  	double d,results[ALGOR_NUM][SIZE_NUM];
! 	static int lengths[SIZE_NUM]={8,64,256,1024,/*8192*/20*1024};
  	long c[ALGOR_NUM][SIZE_NUM];
  	static char *names[ALGOR_NUM]={
  		"md2","md5","sha","sha1","rc4",
--- 260,266 ----
  #define	D_CFB_RC2	10
  #define	D_CBC_RC2	11
  	double d,results[ALGOR_NUM][SIZE_NUM];
! 	static int lengths[SIZE_NUM]={8,64,256,1024,8*1024};
  	long c[ALGOR_NUM][SIZE_NUM];
  	static char *names[ALGOR_NUM]={
  		"md2","md5","sha","sha1","rc4",
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/ssleay.c	Wed Jul 24 23:18:34 1996
--- ./apps/ssleay.c	Sat Jul 27 15:27:31 1996
***************
*** 223,229 ****
  		}
  	else
  		{
! 		fprintf(stderr,"bad command, valid commands are");
  		i=0;
  		fp=functions;
  		tp=0;
--- 223,230 ----
  		}
  	else
  		{
! 		fprintf(stderr,"'%s' is a bad command, valid commands are",
! 			argv[0]);
  		i=0;
  		fp=functions;
  		tp=0;
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/ssleay.conf	Wed Jul 10 09:46:17 1996
--- ./apps/ssleay.conf	Sun Jul 28 01:37:06 1996
***************
*** 12,18 ****
  ####################################################################
  [ CA_default ]
  
! dir		= ./democa		# Where everything is kept
  certs		= $dir/certs		# Where the issued certs are kept
  crl_dir		= $dir/crl		# Where the issued crl are kept
  database	= $dir/index.txt	# database index file.
--- 12,18 ----
  ####################################################################
  [ CA_default ]
  
! dir		= ./demoCA		# Where everything is kept
  certs		= $dir/certs		# Where the issued certs are kept
  crl_dir		= $dir/crl		# Where the issued crl are kept
  database	= $dir/index.txt	# database index file.
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/s_server.c	Wed Jul 24 08:14:27 1996
--- ./apps/s_server.c	Fri Aug  2 17:29:31 1996
***************
*** 154,160 ****
  			}
  		else if	(strcmp(*argv,"-verify") == 0)
  			{
! 			verify=SSL_VERIFY_PEER;
  			if (--argc < 1) goto bad;
  			verify_depth=atoi(*(++argv));
  			fprintf(stderr,"verify depth is %d\n",verify_depth);
--- 154,160 ----
  			}
  		else if	(strcmp(*argv,"-verify") == 0)
  			{
! 			verify=SSL_VERIFY_PEER|SSL_VERIFY_CLIENT_ONCE;
  			if (--argc < 1) goto bad;
  			verify_depth=atoi(*(++argv));
  			fprintf(stderr,"verify depth is %d\n",verify_depth);
***************
*** 161,167 ****
  			}
  		else if	(strcmp(*argv,"-Verify") == 0)
  			{
! 			verify=SSL_VERIFY_PEER|SSL_VERIFY_FAIL_IF_NO_PEER_CERT;
  			if (--argc < 1) goto bad;
  			verify_depth=atoi(*(++argv));
  			fprintf(stderr,"verify depth is %d, must return a certificate\n",verify_depth);
--- 161,168 ----
  			}
  		else if	(strcmp(*argv,"-Verify") == 0)
  			{
! 			verify=SSL_VERIFY_PEER|SSL_VERIFY_FAIL_IF_NO_PEER_CERT|
! 				SSL_VERIFY_CLIENT_ONCE;
  			if (--argc < 1) goto bad;
  			verify_depth=atoi(*(++argv));
  			fprintf(stderr,"verify depth is %d, must return a certificate\n",verify_depth);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/s_time.c	Wed Jul 24 08:14:27 1996
--- ./apps/s_time.c	Fri Aug  2 17:29:47 1996
***************
*** 238,244 ****
  
  	} else if( strcmp(*argv,"-verify") == 0) {
  
! 	    verify=SSL_VERIFY_PEER;
  	    if (--argc < 1) goto bad;
  	    verify_depth=atoi(*(++argv));
  	    fprintf(stderr,"verify depth is %d\n",verify_depth);
--- 238,244 ----
  
  	} else if( strcmp(*argv,"-verify") == 0) {
  
! 	    verify=SSL_VERIFY_PEER|SSL_VERIFY_CLIENT_ONCE;
  	    if (--argc < 1) goto bad;
  	    verify_depth=atoi(*(++argv));
  	    fprintf(stderr,"verify depth is %d\n",verify_depth);
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./apps/x509.c	Wed Jul 24 08:14:27 1996
--- ./apps/x509.c	Tue Aug  6 12:50:46 1996
***************
*** 89,95 ****
  " -startdate      - notBefore field\n",
  " -enddate        - notAfter field\n",
  " -dates          - both Before and After dates\n",
! " -modulus        - print the private key modulus\n",
  " -fingerprint    - print the certificate fingerprint\n",
  " -noout          - no certificate output\n",
  
--- 89,95 ----
  " -startdate      - notBefore field\n",
  " -enddate        - notAfter field\n",
  " -dates          - both Before and After dates\n",
! " -modulus        - print the RSA key modulus\n",
  " -fingerprint    - print the certificate fingerprint\n",
  " -noout          - no certificate output\n",
  
***************
*** 121,126 ****
--- 121,128 ----
  static int certify ();
  #endif
  
+ static int reqfile=0;
+ 
  int MAIN(argc, argv)
  int argc;
  char **argv;
***************
*** 137,143 ****
  	char *CAkeyfile=NULL,*str=NULL,*CAserial=NULL;
  	int text=0,serial=0,hash=0,subject=0,issuer=0,startdate=0,enddate=0;
  	int noout=0,sign_flag=0,CA_flag=0,CA_createserial=0;
! 	int x509req=0,days=DEF_DAYS,reqfile=0,modulus=0;
  	char **pp;
  	CERTIFICATE_CTX *ctx=NULL;
  	X509_REQ *rq=NULL;
--- 139,145 ----
  	char *CAkeyfile=NULL,*str=NULL,*CAserial=NULL;
  	int text=0,serial=0,hash=0,subject=0,issuer=0,startdate=0,enddate=0;
  	int noout=0,sign_flag=0,CA_flag=0,CA_createserial=0;
! 	int x509req=0,days=DEF_DAYS,modulus=0;
  	char **pp;
  	CERTIFICATE_CTX *ctx=NULL;
  	X509_REQ *rq=NULL;
***************
*** 144,149 ****
--- 146,153 ----
  	RSA *r=NULL;
  	int fingerprint=0;
  
+ 	reqfile=0;
+ 
  	apps_startup();
  
  	if (bio_err == NULL)
***************
*** 348,355 ****
  	                }
  		i=X509_REQ_verify(req,pkey);
  		EVP_PKEY_free(pkey);
! 	        if (!i)
  			{
  			fprintf(stderr,"Signature did not match the certificate request\n");
  			goto end;
  			}
--- 352,365 ----
  	                }
  		i=X509_REQ_verify(req,pkey);
  		EVP_PKEY_free(pkey);
! 		if (i < 0)
  			{
+ 			fprintf(stderr,"Signature verification error\n");
+ 			ERR_print_errors(bio_err);
+ 			goto end;
+ 			}
+ 	        if (i == 0)
+ 			{
  			fprintf(stderr,"Signature did not match the certificate request\n");
  			goto end;
  			}
***************
*** 726,733 ****
  	/* Must up the references since X509_add_cert thinks it can keep
  	 * the cert for it's very own :-) */
  	x->references++;
! 	/* NOTE: this certificate can/should be self signed */
! 	if (!X509_cert_verify(ctx,x,callb,NULL))
  		goto end;
  
  	X509_NAME_free(x->cert_info->issuer);
--- 736,745 ----
  	/* Must up the references since X509_add_cert thinks it can keep
  	 * the cert for it's very own :-) */
  	x->references++;
! 
! 	/* NOTE: this certificate can/should be self signed, unless it was
! 	 * a certificate request in which case it is not. */
! 	if (!reqfile && !X509_cert_verify(ctx,x,callb,NULL))
  		goto end;
  
  	X509_NAME_free(x->cert_info->issuer);
*** /dev/null	Thu Aug  8 01:20:57 1996
--- ./apps/s.pem	Wed Aug  7 16:15:02 1996
***************
*** 0 ****
--- 1,25 ----
+ -----BEGIN CERTIFICATE-----
+ MIICRjCCAa8CAQQwDQYJKoZIhvcNAQEEBQAwgYcxCzAJBgNVBAYTAkFVMREwDwYD
+ VQQIEwhWaWN0b3JpYTEVMBMGA1UEChMMVGVsc3RyYSBJbmMuMQwwCgYDVQQLEwNJ
+ VEcxFzAVBgNVBAMTDlRlbHN0cmEgQ05QIENBMScwJQYJKoZIhvcNAQkBFhhjZXJ0
+ c0BpdGcudGVsZWNvbS5jb20uYXUwHhcNOTYwMzE1MDUxNzM5WhcNOTcwMzE1MDUx
+ NzM5WjCBkjELMAkGA1UEBhMCQVUxETAPBgNVBAgTCFZpY3RvcmlhMRUwEwYDVQQK
+ EwxUZWxzdHJhIEluYy4xDDAKBgNVBAsTA0lURzEkMCIGA1UEAxMbZnJvZG8uZG4u
+ aXRnLnRlbGVjb20uY29tLmF1MSUwIwYJKoZIhvcNAQkBFhZzamdAaXRnLnRlbGVj
+ b20uY29tLmF1MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAL+o1wSA3JIl+arPm6U8
+ K1WTlQE/SE+tcmMi8iVg23g76dE4aa3DKYCTONjzj6rPbdb/6LU7GqG6kVX3+WkI
+ +CcCAwEAATANBgkqhkiG9w0BAQQFAAOBgQBfyVB+aq/hmXEEVBcBCxRWp0I+Rgi1
+ 28PuPxq/2wRM+YIBLN5QGbHJsSZWMggGxlEz1WZjNKa7G4+rWC/5q1OMov1bynW7
+ QbgEZNfniK3wyo7BqdMgfV6v9+zib6r5ZTGYX5h+vj+yKZjuQ1H4d4RscJHreCn3
+ GeefTaEfeIHJJQ==
+ -----END CERTIFICATE-----
+ -----BEGIN RSA PRIVATE KEY-----
+ MIIBOgIBAAJBAL+o1wSA3JIl+arPm6U8K1WTlQE/SE+tcmMi8iVg23g76dE4aa3D
+ KYCTONjzj6rPbdb/6LU7GqG6kVX3+WkI+CcCAwEAAQJAO/37n/s+D7k3V1I45BXb
+ cqQJhiRq3BXssj9kEHMq/40mx8EeoRL9g4S9bEfA1K8KoEtlZeJkyJ7pozoejTC2
+ IQIhAOGH68F+CpdUrB4Ykr2vZ8uwSYBDDES51JPiHu1opOR5AiEA2Y12aGo0Ii0S
+ mHR9Tx5sW/N46fcKPOwR/SBW6mp5WZ8CIFjt8aaAfsihWKUdZ29oZPNKdhEfXw0S
+ gaI2fZ97rdlxAiBgHtyeLa5zGy8IJQ/okSyXQ++8j+X6HOOlz1AXqouLSQIhANCO
+ KSJrOGvVzMhK9cgj9oLY+iRgJ/eLGryze3ubY0EB
+ -----END RSA PRIVATE KEY-----
+ 
*** /dev/null	Thu Aug  8 01:20:57 1996
--- ./apps/sess_id.c	Wed Aug  7 09:53:00 1996
***************
*** 0 ****
--- 1,294 ----
+ /* apps/sess-id.c */
+ /* Copyright (C) 1995-1996 Eric Young (eay@mincom.oz.au)
+  * All rights reserved.
+  * 
+  * This file is part of an SSL implementation written
+  * by Eric Young (eay@mincom.oz.au).
+  * The implementation was written so as to conform with Netscapes SSL
+  * specification.  This library and applications are
+  * FREE FOR COMMERCIAL AND NON-COMMERCIAL USE
+  * as long as the following conditions are aheared to.
+  * 
+  * Copyright remains Eric Young's, and as such any Copyright notices in
+  * the code are not to be removed.  If this code is used in a product,
+  * Eric Young should be given attribution as the author of the parts used.
+  * This can be in the form of a textual message at program startup or
+  * in documentation (online or textual) provided with the package.
+  * 
+  * Redistribution and use in source and binary forms, with or without
+  * modification, are permitted provided that the following conditions
+  * are met:
+  * 1. Redistributions of source code must retain the copyright
+  *    notice, this list of conditions and the following disclaimer.
+  * 2. Redistributions in binary form must reproduce the above copyright
+  *    notice, this list of conditions and the following disclaimer in the
+  *    documentation and/or other materials provided with the distribution.
+  * 3. All advertising materials mentioning features or use of this software
+  *    must display the following acknowledgement:
+  *    This product includes software developed by Eric Young (eay@mincom.oz.au)
+  * 
+  * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
+  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
+  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+  * SUCH DAMAGE.
+  * 
+  * The licence and distribution terms for any publically available version or
+  * derivative of this code cannot be changed.  i.e. this code cannot simply be
+  * copied and put under another distribution licence
+  * [including the GNU Public Licence.]
+  */
+ 
+ #include <stdio.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "apps.h"
+ #include "buffer.h"
+ #include "err.h"
+ #include "x509.h"
+ #include "pem.h"
+ #include "ssl.h"
+ 
+ #undef PROG
+ #define PROG	sess_id_main
+ 
+ #define FORMAT_UNDEF	0
+ #define FORMAT_ASN1	1
+ #define FORMAT_TEXT	2
+ #define FORMAT_PEM	3
+ 
+ static char *ctl_usage[]={
+ "usage: crl args\n",
+ "\n",
+ " -inform arg     - input format - default PEM (one of DER, TXT or PEM)\n",
+ " -outform arg    - output format - default PEM\n",
+ " -in arg         - input file - default stdin\n",
+ " -out arg        - output file - default stdout\n",
+ " -text           - print ssl session id details\n",
+ " -cert           - output certificaet \n",
+ " -noout          - no CRL output\n",
+ NULL
+ };
+ 
+ #ifndef NOPROTO
+ static SSL_SESSION *load_sess_id(char *file, int format);
+ #else
+ static SSL_SESSION *load_sess_id();
+ #endif
+ 
+ int MAIN(argc, argv)
+ int argc;
+ char **argv;
+ 	{
+ 	SSL_SESSION *x=NULL;
+ 	int ret=1,i,num,badops=0;
+ 	BIO *out=NULL;
+ 	int informat,outformat;
+ 	char *infile=NULL,*outfile=NULL;
+ 	int cert=0,noout=0,text=0;
+ 	char **pp;
+ 
+ 	apps_startup();
+ 
+ 	if (bio_err == NULL)
+ 		if ((bio_err=BIO_new(BIO_s_file())) != NULL)
+ 			BIO_set_fp(bio_err,stderr,BIO_NOCLOSE);
+ 
+ 	informat=FORMAT_PEM;
+ 	outformat=FORMAT_PEM;
+ 
+ 	argc--;
+ 	argv++;
+ 	num=0;
+ 	while (argc >= 1)
+ 		{
+ 		if 	(strcmp(*argv,"-inform") == 0)
+ 			{
+ 			if (--argc < 1) goto bad;
+ 			informat=str2fmt(*(++argv));
+ 			}
+ 		else if (strcmp(*argv,"-outform") == 0)
+ 			{
+ 			if (--argc < 1) goto bad;
+ 			outformat=str2fmt(*(++argv));
+ 			}
+ 		else if (strcmp(*argv,"-in") == 0)
+ 			{
+ 			if (--argc < 1) goto bad;
+ 			infile= *(++argv);
+ 			}
+ 		else if (strcmp(*argv,"-out") == 0)
+ 			{
+ 			if (--argc < 1) goto bad;
+ 			outfile= *(++argv);
+ 			}
+ 		else if (strcmp(*argv,"-text") == 0)
+ 			text= ++num;
+ 		else if (strcmp(*argv,"-cert") == 0)
+ 			cert= ++num;
+ 		else if (strcmp(*argv,"-noout") == 0)
+ 			noout= ++num;
+ 		else
+ 			{
+ 			fprintf(stderr,"unknown option %s\n",*argv);
+ 			badops=1;
+ 			break;
+ 			}
+ 		argc--;
+ 		argv++;
+ 		}
+ 
+ 	if (badops)
+ 		{
+ bad:
+ 		for (pp=ctl_usage; (*pp != NULL); pp++)
+ 			fprintf(stderr,*pp);
+ 		goto end;
+ 		}
+ 
+ 	ERR_load_crypto_strings();
+ 	x=load_sess_id(infile,informat);
+ 	if (x == NULL) { goto end; }
+ 
+ #ifdef undef
+ 	/* just testing for memory leaks :-) */
+ 	{
+ 	SSL_SESSION *s;
+ 	char buf[1024*10],*p;
+ 	int i;
+ 
+ 	s=SSL_SESSION_new();
+ 
+ 	p= &buf;
+ 	i=i2d_SSL_SESSION(x,&p);
+ 	p= &buf;
+ 	d2i_SSL_SESSION(&s,&p,(long)i);
+ 	p= &buf;
+ 	d2i_SSL_SESSION(&s,&p,(long)i);
+ 	p= &buf;
+ 	d2i_SSL_SESSION(&s,&p,(long)i);
+ 	SSL_SESSION_free(s);
+ 	}
+ #endif
+ 
+ 	if (!noout || text)
+ 		{
+ 		out=BIO_new(BIO_s_file());
+ 		if (out == NULL)
+ 			{
+ 			ERR_print_errors(bio_err);
+ 			goto end;
+ 			}
+ 
+ 		if (outfile == NULL)
+ 			BIO_set_fp(out,stdout,BIO_NOCLOSE);
+ 		else
+ 			{
+ 			if (BIO_write_filename(out,outfile) <= 0)
+ 			{
+ 				perror(outfile);
+ 				goto end;
+ 				}
+ 			}
+ 		}
+ 
+ 	if (text)
+ 		{
+ 		SSL_SESSION_print(out,x);
+ 
+ 		if (cert)
+ 			{
+ 			if (x->peer == NULL)
+ 				BIO_puts(out,"No certificate present\n");
+ 			else
+ 				X509_print(out,x->peer);
+ 			}
+ 		}
+ 
+ 	if (!noout && !cert)
+ 		{
+ 		if 	(outformat == FORMAT_ASN1)
+ 			i=(int)i2d_SSL_SESSION_bio(out,x);
+ 		else if (outformat == FORMAT_PEM)
+ 			i=PEM_write_bio_SSL_SESSION(out,x);
+ 		else	{
+ 			fprintf(stderr,"bad output format specified for outfile\n");
+ 			goto end;
+ 			}
+ 		if (!i) {
+ 			fprintf(stderr,"unable to write SSL_SESSION\n");
+ 			goto end;
+ 			}
+ 		}
+ 	else if (!noout && (x->peer != NULL)) /* just print the certificate */
+ 		{
+ 		if 	(outformat == FORMAT_ASN1)
+ 			i=(int)i2d_X509_bio(out,x->peer);
+ 		else if (outformat == FORMAT_PEM)
+ 			i=PEM_write_bio_X509(out,x->peer);
+ 		else	{
+ 			fprintf(stderr,"bad output format specified for outfile\n");
+ 			goto end;
+ 			}
+ 		if (!i) {
+ 			fprintf(stderr,"unable to write X509\n");
+ 			goto end;
+ 			}
+ 		}
+ 	ret=0;
+ end:
+ 	if (out != NULL) BIO_free(out);
+ 	if (x != NULL) SSL_SESSION_free(x);
+ 	EXIT(ret);
+ 	}
+ 
+ static SSL_SESSION *load_sess_id(infile, format)
+ char *infile;
+ int format;
+ 	{
+ 	SSL_SESSION *x=NULL;
+ 	BIO *in=NULL;
+ 
+ 	in=BIO_new(BIO_s_file());
+ 	if (in == NULL)
+ 		{
+ 		ERR_print_errors(bio_err);
+ 		goto end;
+ 		}
+ 
+ 	if (infile == NULL)
+ 		BIO_set_fp(in,stdin,BIO_NOCLOSE);
+ 	else
+ 		{
+ 		if (BIO_read_filename(in,infile) <= 0)
+ 			{
+ 			perror(infile);
+ 			goto end;
+ 			}
+ 		}
+ 	if 	(format == FORMAT_ASN1)
+ 		x=d2i_SSL_SESSION_bio(in,NULL);
+ 	else if (format == FORMAT_PEM)
+ 		x=PEM_read_bio_SSL_SESSION(in,NULL,NULL);
+ 	else	{
+ 		fprintf(stderr,"bad input format specified for input crl\n");
+ 		goto end;
+ 		}
+ 	if (x == NULL)
+ 		{
+ 		fprintf(stderr,"unable to load SSL_SESSION\n");
+ 		ERR_print_errors(bio_err);
+ 		goto end;
+ 		}
+ 	
+ end:
+ 	if (in != NULL) BIO_free(in);
+ 	return(x);
+ 	}
+ 
Binary files /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./test/.rand and ./test/.rand differ
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./test/certCA.ss.srl	Thu Jul 25 12:06:02 1996
--- ./test/certCA.ss.srl	Thu Aug  8 01:21:49 1996
***************
*** 1 ****
! 80
--- 1 ----
! 92
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./test/Makefile.ssl	Thu Jul 25 16:06:37 1996
--- ./test/Makefile.ssl	Thu Aug  8 01:48:40 1996
***************
*** 95,102 ****
--- 95,104 ----
  	@sh ./tx509 v3-cert2.pem 2>/dev/null
  	@sh ./trsa 2>/dev/null
  	@sh ./tcrl 2>/dev/null
+ 	@sh ./tsid 2>/dev/null
  	@sh ./treq 2>/dev/null
  	@sh ./tpkcs7 2>/dev/null
+ 	@sh ./tpkcs7d 2>/dev/null
  	@echo starting big number library test, could take a while...
  	@(./$(BNTEST)|bc) | awk '{ \
  if ($$0 != "0") {print "error"; exit(1); } \
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./test/ssleay.conf	Thu Jul 25 09:55:53 1996
--- ./test/ssleay.conf	Sun Jul 28 01:37:19 1996
***************
*** 12,18 ****
  ####################################################################
  [ CA_default ]
  
! dir		= ./democa		# Where everything is kept
  certs		= $dir/certs		# Where the issued certs are kept
  crl_dir		= $dir/crl		# Where the issued crl are kept
  database	= $dir/index.txt	# database index file.
--- 12,18 ----
  ####################################################################
  [ CA_default ]
  
! dir		= ./demoCA		# Where everything is kept
  certs		= $dir/certs		# Where the issued certs are kept
  crl_dir		= $dir/crl		# Where the issued crl are kept
  database	= $dir/index.txt	# database index file.
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./test/testkey.pem	Thu Jul 25 12:04:46 1996
--- ./test/testkey.pem	Thu Aug  8 01:21:35 1996
***************
*** 1,9 ****
  -----BEGIN RSA PRIVATE KEY-----
! MIIBOQIBAAJBANFjVEIGzKyCo1WmeSjFPkJHbhM4256nIGHcI77ToFD+QjCVdpn7
! xc+Awbo82Pfx00jM5pAv28In8mAqOK6bYvkCAwEAAQJAByjvW6ah3xBEh4w+vl8o
! RtnscKnUELPETrRZYJAZ/krzoCqwtt7r5eUf1sq5n3/DzAN1NqrFfTGeUjrmv2JN
! 9QIhAOw8usc039rSGI137jrGcGP4H9uI8hpTtIkySVUIec5fAiEA4ueYVA6sy0Dq
! zgdMK+7cye24Nk8Yucgc4FfkNGFbHacCIGvCvBS4utBvfAG0TniDIquHeMjE7GM0
! Aat/w9HFHwMTAiBeZ6MuHejwq/LFg63CfaAo95n0JpaP/V1eTdMpo/Pn8wIgakiV
! nAFovCteZOVhlNDNjHQacWfoJHz/d/9/91c8AVI=
  -----END RSA PRIVATE KEY-----
--- 1,9 ----
  -----BEGIN RSA PRIVATE KEY-----
! MIIBOgIBAAJBANZ3kLk7SMhlh8C0tBnZomUf67ZDspuoPL1xlm3ZuBeLb6LW6Szm
! Bk0pGWBpOvLQJVGb+y6OVlR7D/uH5l2TQ4cCAwEAAQJAK2LgyjguDyxK/DcSQDCA
! 48hDXQnw9gBg2UpDTlG/JjPWCVF05r/FfdLs6D1DDSZj5pIBGmQwMrUA+bH+3Shg
! oQIhAPraAcWwqFLwRZGZ//rBGI4NrS6MEKNuJh2nzo1QC6j5AiEA2t5kLRjm68DT
! GoBuhDtEQbUf466hfIvxKc7R79Wp8H8CIFhXflhIpn7O7zEfsu50Ilmkp2DFIvbr
! S7EV78AEeJbBAiEAkZnMrquYQ1Gdnk2+N71tpQCnXEH6L+6w2o054AEV8mUCIBa2
! VICXo9M0Mn1Ej52ddg2dsJ3fcODAJyVqm9Rdfg11
  -----END RSA PRIVATE KEY-----
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./test/testreq.pem	Thu Jul 25 12:04:46 1996
--- ./test/testreq.pem	Thu Aug  8 01:21:35 1996
***************
*** 2,9 ****
  MIIBPzCB6gIBADCBhDELMAkGA1UEBhMCQVUxEzARBgNVBAgTClF1ZWVuc2xhbmQx
  ETAPBgNVBAcTCEJyaXNiYW5lMRcwFQYDVQQKEw5NaW5jb20gUHR5IEx0ZDETMBEG
  A1UEAxMKRXJpYyBZb3VuZzEfMB0GCSqGSIb3DQEJARYQZWF5QG1pbmNvbS5vei5h
! dTBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQDRY1RCBsysgqNVpnkoxT5CR24TONue
! pyBh3CO+06BQ/kIwlXaZ+8XPgMG6PNj38dNIzOaQL9vCJ/JgKjium2L5AgMBAAGg
! ADANBgkqhkiG9w0BAQQFAANBAMTBb4fZ/BMsuePqpif6l2U8SkIcnzRUsy+mzU/E
! WJ/X6T/og0AWYv49iqNmG9VoAvIHx3QWBCJtqyWS/RAYtMY=
  -----END CERTIFICATE REQUEST-----
--- 2,9 ----
  MIIBPzCB6gIBADCBhDELMAkGA1UEBhMCQVUxEzARBgNVBAgTClF1ZWVuc2xhbmQx
  ETAPBgNVBAcTCEJyaXNiYW5lMRcwFQYDVQQKEw5NaW5jb20gUHR5IEx0ZDETMBEG
  A1UEAxMKRXJpYyBZb3VuZzEfMB0GCSqGSIb3DQEJARYQZWF5QG1pbmNvbS5vei5h
! dTBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQDWd5C5O0jIZYfAtLQZ2aJlH+u2Q7Kb
! qDy9cZZt2bgXi2+i1uks5gZNKRlgaTry0CVRm/sujlZUew/7h+Zdk0OHAgMBAAGg
! ADANBgkqhkiG9w0BAQQFAANBAKNhXiLweiKaZBfEU7xsCs6CiaOSLGgoUk3GQDTY
! Re9N0YNfcjnLfEUAW6f7xq9FwDcvTmyBtj5qxne7qGnbZPU=
  -----END CERTIFICATE REQUEST-----
*** /dev/null	Thu Aug  8 01:20:57 1996
--- ./test/tpkcs7d	Wed Jul 31 13:24:18 1996
***************
*** 0 ****
--- 1,44 ----
+ #!/bin/sh
+ 
+ PATH=../apps:$PATH
+ export PATH
+ 
+ cmd='../apps/ssleay pkcs7'
+ 
+ if [ "$1"x != "x" ]; then
+ 	t=$1
+ else
+ 	t=pkcs7-1.pem
+ fi
+ 
+ echo testing pkcs7 conversions
+ cp $t fff.p
+ 
+ echo "p -> d"
+ $cmd -in fff.p -inform p -outform d >f.d
+ if [ $? != 0 ]; then exit 1; fi
+ echo "p -> p"
+ $cmd -in fff.p -inform p -outform p >f.p
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ echo "d -> d"
+ $cmd -in f.d -inform d -outform d >ff.d1
+ if [ $? != 0 ]; then exit 1; fi
+ echo "p -> d"
+ $cmd -in f.p -inform p -outform d >ff.d3
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ echo "d -> p"
+ $cmd -in f.d -inform d -outform p >ff.p1
+ if [ $? != 0 ]; then exit 1; fi
+ echo "p -> p"
+ $cmd -in f.p -inform p -outform p >ff.p3
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ cmp f.p ff.p1
+ if [ $? != 0 ]; then exit 1; fi
+ cmp f.p ff.p3
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ /bin/rm -f f.* ff.* fff.*
+ exit 0
*** /dev/null	Thu Aug  8 01:20:57 1996
--- ./test/pkcs7-1.pem	Wed Jul 31 13:12:41 1996
***************
*** 0 ****
--- 1,15 ----
+ -----BEGIN PKCS7-----
+ MIICUAYJKoZIhvcNAQcCoIICQTCCAj0CAQExDjAMBggqhkiG9w0CAgUAMCgGCSqG
+ SIb3DQEHAaAbBBlFdmVyeW9uZSBnZXRzIEZyaWRheSBvZmYuoIIBXjCCAVowggEE
+ AgQUAAApMA0GCSqGSIb3DQEBAgUAMCwxCzAJBgNVBAYTAlVTMR0wGwYDVQQKExRF
+ eGFtcGxlIE9yZ2FuaXphdGlvbjAeFw05MjA5MDkyMjE4MDZaFw05NDA5MDkyMjE4
+ MDVaMEIxCzAJBgNVBAYTAlVTMR0wGwYDVQQKExRFeGFtcGxlIE9yZ2FuaXphdGlv
+ bjEUMBIGA1UEAxMLVGVzdCBVc2VyIDEwWzANBgkqhkiG9w0BAQEFAANKADBHAkAK
+ ZnkdxpiBaN56t3QZu3+wwAHGJxAnAHUUKULhmo2MUdBTs+N4Kh3l3Fr06+mUaBcB
+ FKHf5nzcmpr1XWVWILurAgMBAAEwDQYJKoZIhvcNAQECBQADQQBFGqHhqncgSl/N
+ 9XYGnQL3MsJvNnsNV4puZPOakR9Hld8JlDQFEaDR30ogsmp3TMrvdfxpLlTCoZN8
+ BxEmnZsWMYGbMIGYAgEBMDQwLDELMAkGA1UEBhMCVVMxHTAbBgNVBAoTFEV4YW1w
+ bGUgT3JnYW5pemF0aW9uAgQUAAApMAwGCCqGSIb3DQICBQAwDQYJKoZIhvcNAQEB
+ BQAEQAX6aoEvx9+L9PJUJQngPoRuEbnGIL4gCe+0QO+8xmkhaZSsBPNBtX0FIC1C
+ j7Kie1x339mxW/w9VZNTUDQQweHh
+ -----END PKCS7-----
*** /dev/null	Thu Aug  8 01:20:57 1996
--- ./test/testsid.pem	Fri Aug  2 17:36:55 1996
***************
*** 0 ****
--- 1,12 ----
+ -----BEGIN SSL SESSION PARAMETERS-----
+ MIIBxwIBAQIBAgQDAQCABBCi11xa5qkOP8xrr02K/NQCBBBkIYQZM0Bt95W0EHNV
+ bA58oQYCBDIBr7WiBAICASyjggGGMIIBgjCCASwCAQMwDQYJKoZIhvcNAQEEBQAw
+ ODELMAkGA1UEBhMCQVUxDDAKBgNVBAgTA1FMRDEbMBkGA1UEAxMSU1NMZWF5L3Jz
+ YSB0ZXN0IENBMB4XDTk1MTAwOTIzMzEzNFoXDTk4MDcwNTIzMzEzNFowYDELMAkG
+ A1UEBhMCQVUxDDAKBgNVBAgTA1FMRDEZMBcGA1UEChMQTWluY29tIFB0eS4gTHRk
+ LjELMAkGA1UECxMCQ1MxGzAZBgNVBAMTElNTTGVheSBkZW1vIGNsaWVudDBcMA0G
+ CSqGSIb3DQEBAQUAA0sAMEgCQQC4pcXEL1lgVA+B5Q3TcuW/O3LZHoA73IYm8oFD
+ TezgCDhL2RTMn+seKWF36UtJKRIOBU9jZHCVVd0Me5ls6BEjAgMBAAEwDQYJKoZI
+ hvcNAQEEBQADQQBoIpOcwUY1qlVF7j3ROSGvUsbvByOBFmYWkIBgsCqR+9qo1A7L
+ CrWF5i8LWt/vLwAHaxWNx2YuBJMFyuK81fTv
+ -----END SSL SESSION PARAMETERS-----
*** /dev/null	Thu Aug  8 01:20:57 1996
--- ./test/tsid	Fri Aug  2 17:37:47 1996
***************
*** 0 ****
--- 1,81 ----
+ #!/bin/sh
+ 
+ PATH=../apps:$PATH
+ export PATH
+ 
+ cmd='../apps/ssleay sess_id'
+ 
+ if [ "$1"x != "x" ]; then
+ 	t=$1
+ else
+ 	t=testsid.pem
+ fi
+ 
+ echo testing session-id conversions
+ cp $t fff.p
+ 
+ echo "p -> d"
+ $cmd -in fff.p -inform p -outform d >f.d
+ if [ $? != 0 ]; then exit 1; fi
+ #echo "p -> t"
+ #$cmd -in fff.p -inform p -outform t >f.t
+ #if [ $? != 0 ]; then exit 1; fi
+ echo "p -> p"
+ $cmd -in fff.p -inform p -outform p >f.p
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ echo "d -> d"
+ $cmd -in f.d -inform d -outform d >ff.d1
+ if [ $? != 0 ]; then exit 1; fi
+ #echo "t -> d"
+ #$cmd -in f.t -inform t -outform d >ff.d2
+ #if [ $? != 0 ]; then exit 1; fi
+ echo "p -> d"
+ $cmd -in f.p -inform p -outform d >ff.d3
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ #echo "d -> t"
+ #$cmd -in f.d -inform d -outform t >ff.t1
+ #if [ $? != 0 ]; then exit 1; fi
+ #echo "t -> t"
+ #$cmd -in f.t -inform t -outform t >ff.t2
+ #if [ $? != 0 ]; then exit 1; fi
+ #echo "p -> t"
+ #$cmd -in f.p -inform p -outform t >ff.t3
+ #if [ $? != 0 ]; then exit 1; fi
+ 
+ echo "d -> p"
+ $cmd -in f.d -inform d -outform p >ff.p1
+ if [ $? != 0 ]; then exit 1; fi
+ #echo "t -> p"
+ #$cmd -in f.t -inform t -outform p >ff.p2
+ #if [ $? != 0 ]; then exit 1; fi
+ echo "p -> p"
+ $cmd -in f.p -inform p -outform p >ff.p3
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ cmp fff.p f.p
+ if [ $? != 0 ]; then exit 1; fi
+ cmp fff.p ff.p1
+ if [ $? != 0 ]; then exit 1; fi
+ #cmp fff.p ff.p2
+ #if [ $? != 0 ]; then exit 1; fi
+ cmp fff.p ff.p3
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ #cmp f.t ff.t1
+ #if [ $? != 0 ]; then exit 1; fi
+ #cmp f.t ff.t2
+ #if [ $? != 0 ]; then exit 1; fi
+ #cmp f.t ff.t3
+ #if [ $? != 0 ]; then exit 1; fi
+ 
+ cmp f.p ff.p1
+ if [ $? != 0 ]; then exit 1; fi
+ #cmp f.p ff.p2
+ #if [ $? != 0 ]; then exit 1; fi
+ cmp f.p ff.p3
+ if [ $? != 0 ]; then exit 1; fi
+ 
+ /bin/rm -f f.* ff.* fff.*
+ exit 0
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./doc/bss_mem.doc	Wed Jul 10 09:46:22 1996
--- ./doc/bss_mem.doc	Wed Jul 31 09:53:38 1996
***************
*** 12,17 ****
--- 12,19 ----
  BIO_gets does a fgets.
  BIO_puts does a BIO_put().
  
+ /* woops, the folowing need to be fixed :-) */
+ 
  BIO_CTRL_RESET does a fseek() back to the start of the file.
  
  BIO_CTRL_EOF does a feof().
*** /dev/null	Thu Aug  8 01:20:57 1996
--- ./doc/ns-ca.doc	Mon Jul 29 11:32:42 1996
***************
*** 0 ****
--- 1,150 ----
+ The following documentation was supplied by Jeff Barber, who provided the
+ patch to the CA program to add this functionality.
+ 
+ eric
+ --
+ Jeff Barber                                Email: jeffb@issl.atl.hp.com
+ 
+ Hewlett Packard                            Phone: (404) 648-9503
+ Internet and System Security Lab           Fax:   (404) 648-9516
+ 
+                          oo
+ ---------------------cut /\ here for ns-ca.doc ------------------------------
+ 
+ This document briefly describes how to use SSLeay to implement a 
+ certificate authority capable of dynamically serving up client
+ certificates for version 3.0 beta 5 (and presumably later) versions of
+ the Netscape Navigator.  Before describing how this is done, it's
+ important to understand a little about how the browser implements its
+ client certificate support.  This is documented in some detail in the
+ URLs based at <URL:http://home.netscape.com/eng/security/certs.html>.
+ Here's a brief overview:
+ 
+ -	The Navigator supports a new HTML tag "KEYGEN" which will cause
+ 	the browser to generate an RSA key pair when you submit a form
+ 	containing the tag.  The public key, along with an optional
+ 	challenge (supposedly provided for use in certificate revocation
+ 	but I don't use it) is signed, DER-encoded, base-64 encoded
+ 	and sent to the web server as the value of the variable
+ 	whose NAME is provided in the KEYGEN tag.  The private key is
+ 	stored by the browser in a local key database.
+ 
+ 	This "Signed Public Key And Challenge" (SPKAC) arrives formatted
+ 	into 64 character lines (which are of course URL-encoded when 
+ 	sent via HTTP -- i.e. spaces, newlines and most punctuatation are
+ 	encoded as "%HH" where HH is the hex equivalent of the ASCII code).
+ 	Note that the SPKAC does not contain the other usual attributes
+ 	of a certificate request, especially the subject name fields.
+ 	These must be otherwise encoded in the form for submission along
+ 	with the SPKAC.
+ 
+ -	Either immediately (in response to this form submission), or at
+ 	some later date (a real CA will probably verify your identity in
+ 	some way before issuing the certificate), a web server can send a
+ 	certificate based on the public key and other attributes back to
+ 	the browser by encoding it in DER (the binary form) and sending it
+ 	to the browser as MIME type:
+ 	"Content-type: application/x-x509-user-cert"
+ 
+ 	The browser uses the public key encoded in the certificate to
+ 	associate the certificate with the appropriate private key in
+ 	its local key database.  Now, the certificate is "installed".
+ 
+ -	When a server wants to require authentication based on client
+ 	certificates, it uses the right signals via the SSL protocol to
+ 	trigger the Navigator to ask you which certificate you want to
+ 	send.  Whether the certificate is accepted is dependent on CA
+ 	certificates and so forth installed in the server and is beyond
+ 	the scope of this document.
+ 
+ 
+ Now, here's how the SSLeay package can be used to provide client 
+ certficates:
+ 
+ -	You prepare a file for input to the SSLeay ca application.
+ 	The file contains a number of "name = value" pairs that identify
+ 	the subject.  The names here are the same subject name component
+ 	identifiers used in the CA section of the lib/ssleay.conf file,
+ 	such as "emailAddress", "commonName" "organizationName" and so
+ 	forth.  Both the long version and the short version (e.g. "Email",
+ 	"CN", "O") can be used.
+ 
+ 	One more name is supported: this one is "SPKAC".  Its value
+ 	is simply the value of the base-64 encoded SPKAC sent by the
+ 	browser (with all the newlines and other space charaters
+ 	removed -- and newline escapes are NOT supported).
+ 	
+ 	Here's a sample input file:
+ 
+ C = US
+ SP = Georgia
+ O = Some Organization, Inc.
+ OU = Netscape Compatibility Group
+ CN = John X. Doe
+ Email = jxdoe@someorg.com
+ SPKAC = MIG0MGAwXDANBgkqhkiG9w0BAQEFAANLADBIAkEAwmk6FMJ4uAVIYbcvIOx5+bDGTfvL8X5gE+R67ccMk6rCSGbVQz2cetyQtnI+VIs0NwdD6wjuSuVtVFbLoHonowIDAQABFgAwDQYJKoZIhvcNAQEEBQADQQBFZDUWFl6BJdomtN1Bi53mwijy1rRgJ4YirF15yBEDM3DjAQkKXHYOIX+qpz4KXKnl6EYxTnGSFL5wWt8X2iyx
+ 
+ -	You execute the ca command (either from a CGI program run out of
+ 	the web server, or as a later manual task) giving it the above
+ 	file as input.  For example, if the file were named /tmp/cert.req,
+ 	you'd run:
+ 	$SSLDIR/bin/ca -spkac /tmp/cert.req -out /tmp/cert
+ 
+ 	The output is in DER format (binary) if a -out argument is 
+ 	provided, as above; otherwise, it's in the PEM format (base-64
+ 	encoded DER).  Also, the "-batch" switch is implied by the
+ 	"-spkac" so you don't get asked whether to complete the signing
+ 	(probably it shouldn't work this way but I was only interested
+ 	in hacking together an online CA that could be used for issuing
+ 	test certificates).
+ 
+ 	The "-spkac" capability doesn't support multiple files (I think).
+ 
+ 	Any CHALLENGE provided in the SPKAC is simply ignored.
+ 
+ 	The interactions between the identification fields you provide
+ 	and those identified in your lib/ssleay.conf are the same as if
+ 	you did an ordinary "ca -in infile -out outfile" -- that is, if
+ 	something is marked as required in the ssleay.conf file and it
+ 	isn't found in the -spkac file, the certificate won't be issued.
+ 
+ -	Now, you pick up the output from /tmp/cert and pass it back to
+ 	the Navigator prepending the Content-type string described earlier.
+ 
+ -	In order to run the ca command out of a CGI program, you must
+ 	provide a password to decrypt the CA's private key.  You can
+ 	do this by using "echo MyKeyPassword | $SSLDIR/bin/ca ..."
+ 	I think there's a way to not encrypt the key file in the first
+ 	place, but I didn't see how to do that, so I made a small change
+ 	to the library that allows the password to be accepted from a pipe.
+ 	Either way is UTTERLY INSECURE and a real CA would never do that.
+ 
+ 	[ You can use the 'ssleay rsa' command to remove the password
+ 	  from the private key, or you can use the '-key' option to the
+ 	  ca command to specify the decryption key on the command line
+ 	  or use the -nodes option when generating the key.
+ 	  ca will try to clear the command line version of the password
+ 	  but for quite a few operating systems, this is not possible.
+ 	  - eric ]
+ 
+ So, what do you have to do to make use of this stuff to create an online 
+ demo CA capability with SSLeay?
+ 
+ 1	Create an HTML form for your users.  The form should contain
+ 	fields for all of the required or optional fields in ssleay.conf.
+ 	The form must contain a KEYGEN tag somewhere with at least a NAME
+ 	attribute.
+ 
+ 2	Create a CGI program to process the form input submitted by the
+ 	browser.  The CGI program must URL-decode the variables and create
+ 	the file described above, containing subject identification info
+ 	as well as the SPKAC block.  It should then run the the ca program
+ 	with the -spkac option.  If it works (check the exit status),
+ 	return the new certificate with the appropriate MIME type.  If not,
+ 	return the output of the ca command with MIME type "text/plain".
+ 
+ 3	Set up your web server to accept connections signed by your demo
+ 	CA.  This probably involves obtaining the PEM-encoded CA certificate
+ 	(ordinarily in $SSLDIR/CA/cacert.pem) and installing it into a
+ 	server database.  See your server manual for instructions.
+ 
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./times/sparc.t	Fri Jul 12 13:42:19 1996
--- ./times/sparc.t	Wed Jul 31 16:03:56 1996
***************
*** 12,17 ****
--- 12,21 ----
  rc4           3911.67k     4417.07k     4484.61k     4458.15k     4508.33k
  des cfb        852.73k      881.60k      877.14k      886.67k      884.74k
  des cbc        907.15k      979.65k      987.90k      989.53k      985.77k
+ 
+ des cbc        630.42k      703.27k      713.39k      720.31k      719.20k
+ 
+ 
  des ede3       353.56k      365.01k      369.02k      370.01k      368.64k
  idea cfb       775.18k      802.05k      805.80k      806.57k      808.28k
  idea cbc       830.14k      874.45k      884.39k      886.10k      884.74k
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./times/usparc.t	Wed Jul 10 09:46:43 1996
--- ./times/usparc.t	Mon Aug  5 15:01:01 1996
***************
*** 1,43 ****
  Sparc 2000? - Solaris 2.5.1 - 167mhz Ultra sparc
- SSLeay 0.5.2 - gcc (2.7.0) -O3 -fomit-frame-pointer -mv8
- MD2_CHAR RC4_INDEX DES_PTR
- Binary compiled on a Sparc 10
- type           8 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes
- md2            146.68k      410.28k      553.05k      608.60k      625.32k
- md5           1546.68k     6300.61k    10024.53k    11806.48k    12397.23k
- sha           1016.75k     4115.99k     6576.13k     7732.91k     8148.31k
- sha-1          897.33k     3612.37k     5768.96k     6776.49k     7135.23k
- rc4           5670.75k     6063.32k     6156.46k     6168.58k     6174.04k
- des cfb       1856.14k     1912.34k     1924.69k     1924.78k     1930.58k
- des cbc       1973.02k     2095.19k     2112.26k     2123.78k     2124.46k
- des ede3       780.12k      803.33k      806.31k      807.94k      805.55k
- idea cfb      1489.65k     1524.93k     1533.87k     1539.75k     1540.10k
- idea cbc      1572.03k     1649.51k     1667.41k     1668.10k     1660.25k
- rc2 cfb       1621.30k     1737.60k     1711.53k     1714.18k     1737.03k
- rc2 cbc       1785.52k     1888.70k     1896.36k     1890.65k     1900.54k
- rsa  512 bits   0.034s
- rsa 1024 bits   0.216s
- rsa 2048 bits   1.581s
- rsa 4096 bits  11.940s
  
! Sparc 2000? - Solaris 2.5.1 - 167mhz Ultra sparc
! SSLeay 0.5.2 - SC4.0 -fast -xO5 -Xa
! MD2_CHAR RC4_INDEX DES_PTR
  type           8 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes
! md2            127.79k      352.43k      476.50k      520.53k      532.48k
! md5           1638.16k     6775.51k    11056.55k    13040.64k    13770.75k
! sha           1194.95k     5179.63k     8584.79k    10302.12k    10900.82k
! sha-1         1143.16k     4715.31k     7602.94k     8937.13k     9404.42k
! rc4           6206.68k     6586.67k     6647.64k     6668.29k     6668.29k
! des cfb       2438.70k     2541.38k     2571.86k     2527.91k     2550.44k
! des cbc       2695.09k     2871.85k     2820.52k     2901.67k     2845.35k
! des ede3      1069.12k     1099.56k     1103.79k     1105.58k     1103.19k
! idea cfb      1530.98k     1576.30k     1603.93k     1603.58k     1586.52k
! idea cbc      1605.27k     1698.92k     1723.73k     1731.58k     1714.86k
! rc2 cfb       1810.24k     1911.06k     1887.57k     1898.15k     1919.66k
! rc2 cbc       1955.63k     2075.71k     2087.08k     2102.27k     2067.11k
! rsa  512 bits   0.035s
! rsa 1024 bits   0.221s
! rsa 2048 bits   1.626s
! rsa 4096 bits  12.250s
! 
--- 1,25 ----
  Sparc 2000? - Solaris 2.5.1 - 167mhz Ultra sparc
  
! SSLeay 0.6.2 24-Jul-1996
! built on Mon Aug  5 14:19:54 EST 1996
! options:bn(64,32) md2(int) rc4(ptr,char) des(ptr,long) idea(int)
! C flags:cc -fast -xO5 -Xa -DB_ENDIAN
! The 'numbers' are in 1000s of bytes per second processed.
  type           8 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes
! md2            144.36k      400.36k      540.42k      594.60k      611.67k
! md5           1492.83k     6093.57k     9609.98k    11490.30k    12167.85k
! sha           1244.64k     5284.54k     8637.61k    10433.54k    11064.66k
! sha1          1115.48k     4751.66k     7794.26k     9438.89k     9915.05k
! rc4           7117.67k     7741.40k     7812.44k     7853.74k     7735.98k
! des cfb       2224.10k     2328.06k     2335.91k     2340.52k     2329.26k
! des cbc       2446.05k     2583.42k     2591.66k     2596.18k     2596.86k
! des ede3       964.61k      993.30k      991.32k      995.33k      996.69k
! idea cfb      1609.67k     1656.70k     1667.58k     1663.32k     1668.44k
! idea cbc      1735.98k     1789.74k     1794.90k     1804.97k     1807.70k
! rc2 cfb       1858.89k     1900.39k     1875.88k     1897.81k     1892.35k
! rc2 cbc       1975.04k     2068.37k     2082.05k     2077.70k     2078.04k
! rsa  512 bits   0.021s
! rsa 1024 bits   0.125s
! rsa 2048 bits   0.887s
! rsa 4096 bits   6.765s
! 
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./util/mk1mf.pl	Wed Jul 10 09:46:46 1996
--- ./util/mk1mf.pl	Wed Jul 31 10:17:57 1996
***************
*** 75,80 ****
--- 75,81 ----
  $ssl="ssl";
  $crypto="crypto";
  $RSAglue="RSAglue";
+ $ranlib="echo ranlib";
  
  push(@INC,"util/pl","pl");
  if ($type eq "VC-MSDOS")
***************
*** 151,156 ****
--- 152,162 ----
  
  $ex_libs="$l_flags$ex_libs" if ($l_flags ne "");
  
+ if ($ranlib ne "")
+ 	{
+ 	$ranlib="RANLIB=\$(SRC_D)$o$ranlib";
+ 	}
+ 
  if ($msdos)
  	{
  	$banner ="\t\@echo Make sure you have run 'perl Configure $type' in the\n";
***************
*** 200,206 ****
  
  CP=$cp
  RM=$rm
! RANLIB=\$(SRC_D)$o$ranlib
  MKDIR=mkdir
  MKLIB=$mklib
  MLFLAGS=$mlflags
--- 206,212 ----
  
  CP=$cp
  RM=$rm
! RANLIB=$ranlib
  MKDIR=mkdir
  MKLIB=$mklib
  MLFLAGS=$mlflags
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./util/pl/BC-16.pl	Wed Jul 10 09:47:31 1996
--- ./util/pl/BC-16.pl	Wed Jul 31 10:16:22 1996
***************
*** 56,62 ****
  
  # static library stuff
  $mklib='tlib';
! $ranlib='';
  $plib="";
  $libp=".lib";
  $shlibp=($shlib)?".dll":".lib";
--- 56,62 ----
  
  # static library stuff
  $mklib='tlib';
! $ranlib='echo no ranlib';
  $plib="";
  $libp=".lib";
  $shlibp=($shlib)?".dll":".lib";
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ms/msdos.mak	Thu Jul 25 16:07:12 1996
--- ./ms/msdos.mak	Thu Aug  8 01:49:01 1996
***************
*** 38,44 ****
  
  CP=copy
  RM=del
! RANLIB=$(SRC_D)\
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS=
--- 38,44 ----
  
  CP=copy
  RM=del
! RANLIB=
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS=
***************
*** 124,140 ****
  	$(OBJ_D)\crl2p7.obj $(OBJ_D)\crl.obj $(OBJ_D)\rsa.obj \
  	$(OBJ_D)\x509.obj $(OBJ_D)\genrsa.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\apps.obj $(OBJ_D)\version.obj \
! 	$(OBJ_D)\ssleay.obj
  
- SSLOBJ=$(OBJ_D)\ssl_lib.obj \
- 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
- 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
- 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
- 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
- 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
- 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
- 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
- 
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
--- 124,131 ----
  	$(OBJ_D)\crl2p7.obj $(OBJ_D)\crl.obj $(OBJ_D)\rsa.obj \
  	$(OBJ_D)\x509.obj $(OBJ_D)\genrsa.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\apps.obj $(OBJ_D)\version.obj \
! 	$(OBJ_D)\sess_id.obj $(OBJ_D)\ssleay.obj
  
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
***************
*** 209,214 ****
--- 200,214 ----
  	$(OBJ_D)\meth_err.obj $(OBJ_D)\conf.obj $(OBJ_D)\conf_err.obj \
  	$(OBJ_D)\txt_db.obj
  
+ SSLOBJ=$(OBJ_D)\ssl_lib.obj \
+ 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
+ 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
+ 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
+ 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
+ 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
+ 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
+ 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
+ 
  RSAGLUEOBJ=$(OBJ_D)\rsaref.obj \
  	$(OBJ_D)\rsar_err.obj
  
***************
*** 536,610 ****
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
- $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
- 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
- 
- $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
- 
- $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
- 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
- 
- $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
- 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
- 
- $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
- 
- $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
- 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
- 
- $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
- 
- $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
- 
- $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
- 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
- 
- $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
- 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
- 
- $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
- 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
- 
- $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
- 
- $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
- 
- $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
- 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
- 
- $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
- 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
- 
- $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
- 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
- 
- $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
- 
- $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
- 
- $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
- 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
- 
- $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
- 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
- 
- $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
- 
- $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
- 
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
--- 536,547 ----
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
+ $(OBJ_D)\sess_id.obj: $(SRC_D)\apps\sess_id.c
+ 	$(CC) /Fo$(OBJ_D)\sess_id.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\sess_id.c
+ 
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
***************
*** 1253,1258 ****
--- 1190,1261 ----
  $(OBJ_D)\txt_db.obj: $(SRC_D)\crypto\txt_db\txt_db.c
  	$(CC) /Fo$(OBJ_D)\txt_db.obj $(LIB_CFLAGS) -c $(SRC_D)\crypto\txt_db\txt_db.c
  
+ $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
+ 
+ $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
+ 
+ $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
+ 
+ $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
+ 
+ $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
+ 
+ $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
+ 
+ $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
+ 
+ $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
+ 
+ $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
+ 
+ $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
+ 
+ $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
+ 
+ $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
+ 
+ $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
+ 
+ $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
+ 
+ $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
+ 
+ $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
+ 
+ $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
+ 
+ $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
+ 
+ $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
+ 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
+ 
+ $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
+ 
+ $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
+ 
+ $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
+ 
  $(OBJ_D)\rsaref.obj: $(SRC_D)\rsaref\rsaref.c
  	$(CC) /Fo$(OBJ_D)\rsaref.obj $(LIB_CFLAGS) -c $(SRC_D)\rsaref\rsaref.c
  
***************
*** 1651,1656 ****
--- 1654,1660 ----
    $(OBJ_D)\pkcs7.obj +
    $(OBJ_D)\req.obj +
    $(OBJ_D)\rsa.obj +
+   $(OBJ_D)\sess_id.obj +
    $(OBJ_D)\speed.obj +
    $(OBJ_D)\ssleay.obj +
    $(OBJ_D)\verify.obj +
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ms/nt.mak	Thu Jul 25 16:07:16 1996
--- ./ms/nt.mak	Thu Aug  8 01:49:03 1996
***************
*** 38,44 ****
  
  CP=copy
  RM=del
! RANLIB=$(SRC_D)\
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS=
--- 38,44 ----
  
  CP=copy
  RM=del
! RANLIB=
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS=
***************
*** 127,143 ****
  	$(OBJ_D)\s_client.obj $(OBJ_D)\s_filter.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\s_time.obj $(OBJ_D)\s_mult.obj \
  	$(OBJ_D)\apps.obj $(OBJ_D)\s_cb.obj $(OBJ_D)\s_socket.obj \
! 	$(OBJ_D)\s_eio.obj $(OBJ_D)\version.obj $(OBJ_D)\ssleay.obj
  
- SSLOBJ=$(OBJ_D)\ssl_lib.obj \
- 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
- 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
- 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
- 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
- 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
- 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
- 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
- 
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
--- 127,135 ----
  	$(OBJ_D)\s_client.obj $(OBJ_D)\s_filter.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\s_time.obj $(OBJ_D)\s_mult.obj \
  	$(OBJ_D)\apps.obj $(OBJ_D)\s_cb.obj $(OBJ_D)\s_socket.obj \
! 	$(OBJ_D)\s_eio.obj $(OBJ_D)\version.obj $(OBJ_D)\sess_id.obj \
! 	$(OBJ_D)\ssleay.obj
  
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
***************
*** 212,217 ****
--- 204,218 ----
  	$(OBJ_D)\meth_err.obj $(OBJ_D)\conf.obj $(OBJ_D)\conf_err.obj \
  	$(OBJ_D)\txt_db.obj
  
+ SSLOBJ=$(OBJ_D)\ssl_lib.obj \
+ 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
+ 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
+ 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
+ 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
+ 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
+ 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
+ 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
+ 
  RSAGLUEOBJ=$(OBJ_D)\rsaref.obj \
  	$(OBJ_D)\rsar_err.obj
  
***************
*** 565,639 ****
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
- $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
- 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
- 
- $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
- 
- $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
- 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
- 
- $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
- 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
- 
- $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
- 
- $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
- 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
- 
- $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
- 
- $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
- 
- $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
- 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
- 
- $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
- 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
- 
- $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
- 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
- 
- $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
- 
- $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
- 
- $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
- 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
- 
- $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
- 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
- 
- $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
- 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
- 
- $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
- 
- $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
- 
- $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
- 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
- 
- $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
- 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
- 
- $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
- 
- $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
- 
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
--- 566,577 ----
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
+ $(OBJ_D)\sess_id.obj: $(SRC_D)\apps\sess_id.c
+ 	$(CC) /Fo$(OBJ_D)\sess_id.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\sess_id.c
+ 
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
***************
*** 1281,1286 ****
--- 1219,1290 ----
  
  $(OBJ_D)\txt_db.obj: $(SRC_D)\crypto\txt_db\txt_db.c
  	$(CC) /Fo$(OBJ_D)\txt_db.obj $(LIB_CFLAGS) -c $(SRC_D)\crypto\txt_db\txt_db.c
+ 
+ $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
+ 
+ $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
+ 
+ $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
+ 
+ $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
+ 
+ $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
+ 
+ $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
+ 
+ $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
+ 
+ $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
+ 
+ $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
+ 
+ $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
+ 
+ $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
+ 
+ $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
+ 
+ $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
+ 
+ $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
+ 
+ $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
+ 
+ $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
+ 
+ $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
+ 
+ $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
+ 
+ $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
+ 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
+ 
+ $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
+ 
+ $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
+ 
+ $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
  
  $(OBJ_D)\rsaref.obj: $(SRC_D)\rsaref\rsaref.c
  	$(CC) /Fo$(OBJ_D)\rsaref.obj $(LIB_CFLAGS) -c $(SRC_D)\rsaref\rsaref.c
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ms/ntdll.mak	Thu Jul 25 16:07:17 1996
--- ./ms/ntdll.mak	Thu Aug  8 01:49:04 1996
***************
*** 38,44 ****
  
  CP=copy
  RM=del
! RANLIB=$(SRC_D)\
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS= /nologo /subsystem:console /machine:I386 /dll
--- 38,44 ----
  
  CP=copy
  RM=del
! RANLIB=
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS= /nologo /subsystem:console /machine:I386 /dll
***************
*** 127,143 ****
  	$(OBJ_D)\s_client.obj $(OBJ_D)\s_filter.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\s_time.obj $(OBJ_D)\s_mult.obj \
  	$(OBJ_D)\apps.obj $(OBJ_D)\s_cb.obj $(OBJ_D)\s_socket.obj \
! 	$(OBJ_D)\s_eio.obj $(OBJ_D)\version.obj $(OBJ_D)\ssleay.obj
  
- SSLOBJ=$(OBJ_D)\ssl_lib.obj \
- 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
- 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
- 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
- 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
- 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
- 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
- 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
- 
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
--- 127,135 ----
  	$(OBJ_D)\s_client.obj $(OBJ_D)\s_filter.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\s_time.obj $(OBJ_D)\s_mult.obj \
  	$(OBJ_D)\apps.obj $(OBJ_D)\s_cb.obj $(OBJ_D)\s_socket.obj \
! 	$(OBJ_D)\s_eio.obj $(OBJ_D)\version.obj $(OBJ_D)\sess_id.obj \
! 	$(OBJ_D)\ssleay.obj
  
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
***************
*** 212,217 ****
--- 204,218 ----
  	$(OBJ_D)\meth_err.obj $(OBJ_D)\conf.obj $(OBJ_D)\conf_err.obj \
  	$(OBJ_D)\txt_db.obj
  
+ SSLOBJ=$(OBJ_D)\ssl_lib.obj \
+ 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
+ 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
+ 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
+ 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
+ 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
+ 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
+ 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
+ 
  RSAGLUEOBJ=$(OBJ_D)\rsaref.obj \
  	$(OBJ_D)\rsar_err.obj
  
***************
*** 565,639 ****
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
- $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
- 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
- 
- $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
- 
- $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
- 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
- 
- $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
- 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
- 
- $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
- 
- $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
- 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
- 
- $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
- 
- $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
- 
- $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
- 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
- 
- $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
- 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
- 
- $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
- 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
- 
- $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
- 
- $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
- 
- $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
- 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
- 
- $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
- 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
- 
- $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
- 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
- 
- $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
- 
- $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
- 
- $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
- 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
- 
- $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
- 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
- 
- $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
- 
- $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
- 
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
--- 566,577 ----
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
+ $(OBJ_D)\sess_id.obj: $(SRC_D)\apps\sess_id.c
+ 	$(CC) /Fo$(OBJ_D)\sess_id.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\sess_id.c
+ 
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
***************
*** 1281,1286 ****
--- 1219,1290 ----
  
  $(OBJ_D)\txt_db.obj: $(SRC_D)\crypto\txt_db\txt_db.c
  	$(CC) /Fo$(OBJ_D)\txt_db.obj $(LIB_CFLAGS) -c $(SRC_D)\crypto\txt_db\txt_db.c
+ 
+ $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
+ 
+ $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
+ 
+ $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
+ 
+ $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
+ 
+ $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
+ 
+ $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
+ 
+ $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
+ 
+ $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
+ 
+ $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
+ 
+ $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
+ 
+ $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
+ 
+ $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
+ 
+ $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
+ 
+ $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
+ 
+ $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
+ 
+ $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
+ 
+ $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
+ 
+ $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
+ 
+ $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
+ 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
+ 
+ $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
+ 
+ $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
+ 
+ $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
  
  $(OBJ_D)\rsaref.obj: $(SRC_D)\rsaref\rsaref.c
  	$(CC) /Fo$(OBJ_D)\rsaref.obj $(LIB_CFLAGS) -c $(SRC_D)\rsaref\rsaref.c
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ms/w31.mak	Thu Jul 25 16:07:13 1996
--- ./ms/w31.mak	Thu Aug  8 01:49:02 1996
***************
*** 38,44 ****
  
  CP=copy
  RM=del
! RANLIB=$(SRC_D)\
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS=
--- 38,44 ----
  
  CP=copy
  RM=del
! RANLIB=
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS=
***************
*** 127,143 ****
  	$(OBJ_D)\s_client.obj $(OBJ_D)\s_filter.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\s_time.obj $(OBJ_D)\s_mult.obj \
  	$(OBJ_D)\apps.obj $(OBJ_D)\s_cb.obj $(OBJ_D)\s_socket.obj \
! 	$(OBJ_D)\s_eio.obj $(OBJ_D)\version.obj $(OBJ_D)\ssleay.obj
  
- SSLOBJ=$(OBJ_D)\ssl_lib.obj \
- 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
- 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
- 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
- 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
- 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
- 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
- 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
- 
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
--- 127,135 ----
  	$(OBJ_D)\s_client.obj $(OBJ_D)\s_filter.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\s_time.obj $(OBJ_D)\s_mult.obj \
  	$(OBJ_D)\apps.obj $(OBJ_D)\s_cb.obj $(OBJ_D)\s_socket.obj \
! 	$(OBJ_D)\s_eio.obj $(OBJ_D)\version.obj $(OBJ_D)\sess_id.obj \
! 	$(OBJ_D)\ssleay.obj
  
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
***************
*** 212,217 ****
--- 204,218 ----
  	$(OBJ_D)\meth_err.obj $(OBJ_D)\conf.obj $(OBJ_D)\conf_err.obj \
  	$(OBJ_D)\txt_db.obj
  
+ SSLOBJ=$(OBJ_D)\ssl_lib.obj \
+ 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
+ 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
+ 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
+ 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
+ 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
+ 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
+ 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
+ 
  RSAGLUEOBJ=$(OBJ_D)\rsaref.obj \
  	$(OBJ_D)\rsar_err.obj
  
***************
*** 569,643 ****
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
- $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
- 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
- 
- $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
- 
- $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
- 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
- 
- $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
- 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
- 
- $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
- 
- $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
- 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
- 
- $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
- 
- $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
- 
- $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
- 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
- 
- $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
- 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
- 
- $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
- 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
- 
- $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
- 
- $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
- 
- $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
- 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
- 
- $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
- 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
- 
- $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
- 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
- 
- $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
- 
- $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
- 
- $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
- 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
- 
- $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
- 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
- 
- $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
- 
- $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
- 
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
--- 570,581 ----
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
+ $(OBJ_D)\sess_id.obj: $(SRC_D)\apps\sess_id.c
+ 	$(CC) /Fo$(OBJ_D)\sess_id.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\sess_id.c
+ 
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
***************
*** 1286,1291 ****
--- 1224,1295 ----
  $(OBJ_D)\txt_db.obj: $(SRC_D)\crypto\txt_db\txt_db.c
  	$(CC) /Fo$(OBJ_D)\txt_db.obj $(LIB_CFLAGS) -c $(SRC_D)\crypto\txt_db\txt_db.c
  
+ $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
+ 
+ $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
+ 
+ $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
+ 
+ $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
+ 
+ $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
+ 
+ $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
+ 
+ $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
+ 
+ $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
+ 
+ $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
+ 
+ $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
+ 
+ $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
+ 
+ $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
+ 
+ $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
+ 
+ $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
+ 
+ $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
+ 
+ $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
+ 
+ $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
+ 
+ $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
+ 
+ $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
+ 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
+ 
+ $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
+ 
+ $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
+ 
+ $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
+ 
  $(OBJ_D)\rsaref.obj: $(SRC_D)\rsaref\rsaref.c
  	$(CC) /Fo$(OBJ_D)\rsaref.obj $(LIB_CFLAGS) -c $(SRC_D)\rsaref\rsaref.c
  
***************
*** 1692,1697 ****
--- 1696,1702 ----
    $(OBJ_D)\s_server.obj +
    $(OBJ_D)\s_socket.obj +
    $(OBJ_D)\s_time.obj +
+   $(OBJ_D)\sess_id.obj +
    $(OBJ_D)\speed.obj +
    $(OBJ_D)\ssleay.obj +
    $(OBJ_D)\verify.obj +
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ms/w31dll.mak	Thu Jul 25 16:07:15 1996
--- ./ms/w31dll.mak	Thu Aug  8 01:49:02 1996
***************
*** 38,44 ****
  
  CP=copy
  RM=del
! RANLIB=$(SRC_D)\
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS=/NOLOGO /NOD /SEG:1024 /ONERROR:NOEXE /NOE /PACKC:60000 /FARCALL /PACKD:60000
--- 38,44 ----
  
  CP=copy
  RM=del
! RANLIB=
  MKDIR=mkdir
  MKLIB=lib
  MLFLAGS=/NOLOGO /NOD /SEG:1024 /ONERROR:NOEXE /NOE /PACKC:60000 /FARCALL /PACKD:60000
***************
*** 127,143 ****
  	$(OBJ_D)\s_client.obj $(OBJ_D)\s_filter.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\s_time.obj $(OBJ_D)\s_mult.obj \
  	$(OBJ_D)\apps.obj $(OBJ_D)\s_cb.obj $(OBJ_D)\s_socket.obj \
! 	$(OBJ_D)\s_eio.obj $(OBJ_D)\version.obj $(OBJ_D)\ssleay.obj
  
- SSLOBJ=$(OBJ_D)\ssl_lib.obj \
- 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
- 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
- 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
- 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
- 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
- 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
- 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
- 
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
--- 127,135 ----
  	$(OBJ_D)\s_client.obj $(OBJ_D)\s_filter.obj $(OBJ_D)\speed.obj \
  	$(OBJ_D)\hashdir.obj $(OBJ_D)\s_time.obj $(OBJ_D)\s_mult.obj \
  	$(OBJ_D)\apps.obj $(OBJ_D)\s_cb.obj $(OBJ_D)\s_socket.obj \
! 	$(OBJ_D)\s_eio.obj $(OBJ_D)\version.obj $(OBJ_D)\sess_id.obj \
! 	$(OBJ_D)\ssleay.obj
  
  CRYPTOOBJ=$(OBJ_D)\cryptlib.obj \
  	$(OBJ_D)\md2_dgst.obj $(OBJ_D)\md5_dgst.obj $(OBJ_D)\md2_one.obj \
  	$(OBJ_D)\md5_one.obj $(OBJ_D)\sha_dgst.obj $(OBJ_D)\sha1dgst.obj \
***************
*** 212,217 ****
--- 204,218 ----
  	$(OBJ_D)\meth_err.obj $(OBJ_D)\conf.obj $(OBJ_D)\conf_err.obj \
  	$(OBJ_D)\txt_db.obj
  
+ SSLOBJ=$(OBJ_D)\ssl_lib.obj \
+ 	$(OBJ_D)\ssl_err2.obj $(OBJ_D)\ssl_trc.obj $(OBJ_D)\ssl_cert.obj \
+ 	$(OBJ_D)\ssl_sess.obj $(OBJ_D)\ssl_srvr.obj $(OBJ_D)\ssl_clnt.obj \
+ 	$(OBJ_D)\ssl_pkt.obj $(OBJ_D)\ssl_auth.obj $(OBJ_D)\ssl_stat.obj \
+ 	$(OBJ_D)\ssl_asn1.obj $(OBJ_D)\ssl_txt.obj $(OBJ_D)\ssl_rsa.obj \
+ 	$(OBJ_D)\ssl_null.obj $(OBJ_D)\ssl_des.obj $(OBJ_D)\ssl_idea.obj \
+ 	$(OBJ_D)\ssl_rc4.obj $(OBJ_D)\ssl_rc2.obj $(OBJ_D)\bio_ssl.obj \
+ 	$(OBJ_D)\ssl_md5.obj $(OBJ_D)\ssl_sha.obj $(OBJ_D)\ssl_err.obj
+ 
  RSAGLUEOBJ=$(OBJ_D)\rsaref.obj \
  	$(OBJ_D)\rsar_err.obj
  
***************
*** 569,643 ****
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
- $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
- 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
- 
- $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
- 
- $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
- 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
- 
- $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
- 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
- 
- $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
- 
- $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
- 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
- 
- $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
- 
- $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
- 
- $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
- 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
- 
- $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
- 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
- 
- $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
- 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
- 
- $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
- 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
- 
- $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
- 
- $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
- 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
- 
- $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
- 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
- 
- $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
- 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
- 
- $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
- 
- $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
- 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
- 
- $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
- 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
- 
- $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
- 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
- 
- $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
- 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
- 
- $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
- 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
- 
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
--- 570,581 ----
  $(OBJ_D)\version.obj: $(SRC_D)\apps\version.c
  	$(CC) /Fo$(OBJ_D)\version.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\version.c
  
+ $(OBJ_D)\sess_id.obj: $(SRC_D)\apps\sess_id.c
+ 	$(CC) /Fo$(OBJ_D)\sess_id.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\sess_id.c
+ 
  $(OBJ_D)\ssleay.obj: $(SRC_D)\apps\ssleay.c
  	$(CC) /Fo$(OBJ_D)\ssleay.obj -DMONOLITH $(APP_CFLAGS) -c $(SRC_D)\apps\ssleay.c
  
  $(BN_MULW_OBJ): $(BN_MULW_SRC)
  	$(ASM) /Fo$(BN_MULW_OBJ) $(SRC_D)\$(BN_MULW_SRC)
  
***************
*** 1286,1291 ****
--- 1224,1295 ----
  $(OBJ_D)\txt_db.obj: $(SRC_D)\crypto\txt_db\txt_db.c
  	$(CC) /Fo$(OBJ_D)\txt_db.obj $(LIB_CFLAGS) -c $(SRC_D)\crypto\txt_db\txt_db.c
  
+ $(OBJ_D)\ssl_lib.obj: $(SRC_D)\ssl\ssl_lib.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_lib.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_lib.c
+ 
+ $(OBJ_D)\ssl_err2.obj: $(SRC_D)\ssl\ssl_err2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err2.c
+ 
+ $(OBJ_D)\ssl_trc.obj: $(SRC_D)\ssl\ssl_trc.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_trc.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_trc.c
+ 
+ $(OBJ_D)\ssl_cert.obj: $(SRC_D)\ssl\ssl_cert.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_cert.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_cert.c
+ 
+ $(OBJ_D)\ssl_sess.obj: $(SRC_D)\ssl\ssl_sess.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sess.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sess.c
+ 
+ $(OBJ_D)\ssl_srvr.obj: $(SRC_D)\ssl\ssl_srvr.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_srvr.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_srvr.c
+ 
+ $(OBJ_D)\ssl_clnt.obj: $(SRC_D)\ssl\ssl_clnt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_clnt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_clnt.c
+ 
+ $(OBJ_D)\ssl_pkt.obj: $(SRC_D)\ssl\ssl_pkt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_pkt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_pkt.c
+ 
+ $(OBJ_D)\ssl_auth.obj: $(SRC_D)\ssl\ssl_auth.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_auth.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_auth.c
+ 
+ $(OBJ_D)\ssl_stat.obj: $(SRC_D)\ssl\ssl_stat.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_stat.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_stat.c
+ 
+ $(OBJ_D)\ssl_asn1.obj: $(SRC_D)\ssl\ssl_asn1.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_asn1.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_asn1.c
+ 
+ $(OBJ_D)\ssl_txt.obj: $(SRC_D)\ssl\ssl_txt.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_txt.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_txt.c
+ 
+ $(OBJ_D)\ssl_rsa.obj: $(SRC_D)\ssl\ssl_rsa.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rsa.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rsa.c
+ 
+ $(OBJ_D)\ssl_null.obj: $(SRC_D)\ssl\ssl_null.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_null.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_null.c
+ 
+ $(OBJ_D)\ssl_des.obj: $(SRC_D)\ssl\ssl_des.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_des.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_des.c
+ 
+ $(OBJ_D)\ssl_idea.obj: $(SRC_D)\ssl\ssl_idea.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_idea.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_idea.c
+ 
+ $(OBJ_D)\ssl_rc4.obj: $(SRC_D)\ssl\ssl_rc4.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc4.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc4.c
+ 
+ $(OBJ_D)\ssl_rc2.obj: $(SRC_D)\ssl\ssl_rc2.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_rc2.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_rc2.c
+ 
+ $(OBJ_D)\bio_ssl.obj: $(SRC_D)\ssl\bio_ssl.c
+ 	$(CC) /Fo$(OBJ_D)\bio_ssl.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\bio_ssl.c
+ 
+ $(OBJ_D)\ssl_md5.obj: $(SRC_D)\ssl\ssl_md5.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_md5.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_md5.c
+ 
+ $(OBJ_D)\ssl_sha.obj: $(SRC_D)\ssl\ssl_sha.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_sha.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_sha.c
+ 
+ $(OBJ_D)\ssl_err.obj: $(SRC_D)\ssl\ssl_err.c
+ 	$(CC) /Fo$(OBJ_D)\ssl_err.obj $(LIB_CFLAGS) -c $(SRC_D)\ssl\ssl_err.c
+ 
  $(OBJ_D)\rsaref.obj: $(SRC_D)\rsaref\rsaref.c
  	$(CC) /Fo$(OBJ_D)\rsaref.obj $(LIB_CFLAGS) -c $(SRC_D)\rsaref\rsaref.c
  
***************
*** 1698,1703 ****
--- 1702,1708 ----
    $(OBJ_D)\s_server.obj +
    $(OBJ_D)\s_socket.obj +
    $(OBJ_D)\s_time.obj +
+   $(OBJ_D)\sess_id.obj +
    $(OBJ_D)\speed.obj +
    $(OBJ_D)\ssleay.obj +
    $(OBJ_D)\verify.obj +
*** /var/spool/ftp/pub/Crypto/SSL/063/SSLeay-0.6.2/./ms/testpem.bat	Wed Jul 24 20:48:07 1996
--- ./ms/testpem.bat	Fri Aug  2 17:45:34 1996
***************
*** 24,29 ****
--- 24,32 ----
  call tpem.bat x509 ..\test\v3-cert1.pem
  if errorlevel 1 goto err
  
+ call tpem.bat sess_id ..\test\testsid.pem
+ if errorlevel 1 goto err
+ 
  echo OK
  del %tmp1%
  :err
