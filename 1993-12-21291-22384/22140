Path: msuinfo!agate!howland.reston.ans.net!pipex!uunet!zib-berlin.de!math.fu-berlin.de!unidus.rz.uni-duesseldorf.de!lannert.rz.uni-duesseldorf.de!TSOS
From: TSOS@uni-duesseldorf.de (Detlef Lannert)
Newsgroups: comp.security.misc,sci.crypt
Subject: Re: Proposal for new login authentication method
Date: Mon, 20 Dec 1993 16:32:02 GMT
Organization: Universitaetsrechenzentrum, Heinrich-Heine-Universitaet, Duesseldorf
Lines: 41
Message-ID: <TSOS.653.2D15D382@uni-duesseldorf.de>
References: <phrCHwnFq.6LC@netcom.com> <JROZES.93Dec12021934@allegro.cs.tufts.edu>
NNTP-Posting-Host: lannert.rz.uni-duesseldorf.de
Xref: msuinfo comp.security.misc:7044 sci.crypt:22140

In article <JROZES.93Dec12021934@allegro.cs.tufts.edu> jrozes@allegro.cs.tufts.edu (J Rozes) writes:

 [...]
>I liked Alec Muffet's suggestion (I think it was his), although it requires
>software to run on both machines, which is not what you are looking for.
>It essentially involves the server sending a random string to the client
>and letting the client encrypt the string with a private key (signing the
>string) and sending it back to the server (no unencrypted passwords on
>the network), where it is decrypted with the public key and tested
>against the original string to authenticate the client. This seems like
>a simple, yet strong improvement over the current password system used
>and it doesn't force the user to rely on a piece of paper for security.

Who tells me that it's the right server I'm responding to? The server (or 
host) must identify itself through a secret key that is used to encrypt 
a challenge generated by the client. The corresponding public key has to 
be transferred to the client via some trusted communication beforehand. 

The host's sys admin has to take care of the secrecy of this secret key; 
if the o/s is worth communicating with, it should be able to keep this 
secret from crackers.    ;-)

>If anyone out there is interested in developing such a system, I would
>like to hear from you. I'd also like to hear any other ideas for replacing
>the current unix password scheme.

I've implemented such a system (well, to be honest, an alpha test version) 
for communication between a host (with a proprietary, non-U##x o/s) and 
terminal emulations on PCs; after successful authentication the whole 
dialog is secured and, if so desired, encrypted by passwords that are 
exchanged during the login phase. [The computational and protocol overhead 
is not too big because the system only supports block i/o to and from the 
terminal, no single-keystroke asynchronous i/o as is so popular with U##x 
systems.] 

Detlef
--
Detlef Lannert      DC3EK      E-Mail: tsos@rz.uni-duesseldorf.de
PGP 2.x key available (finger lannert@clio.rz.uni-duesseldorf.de)
          "Oft ist das Denken schwer, indes
           das Schreiben geht auch ohne es."        Wilhelm Busch
