Path: msuinfo!agate!howland.reston.ans.net!pipex!uunet!psinntp!internet!sbi.sbi.com!std!bet
From: bet@std.sbi.com (Bennett Todd)
Newsgroups: sci.crypt
Subject: Re: How do I crack a unix 'crypt'ed tar file?
Date: 10 Dec 1993 02:08:46 GMT
Organization: Salomon Brothers, Inc.
Lines: 51
Message-ID: <2e8lne$1ha@sbi.sbi.com>
References: <2e5o0k$76r@quad.wfunet.wfu.edu>
NNTP-Posting-Host: std.sbi.com

In article <2e5o0k$76r@quad.wfunet.wfu.edu>, thomas kevi lynch <lynchtk@wfu.edu> wrote:
>
>Is there any easy way to do this?  I have an old bunch of mail that I 
>tarred and then crypted a ways back.

If you mean you used something like

	tar cf - stuff | crypt >stuff.tar.encrypted

then yeah, you're in luck. Check your favourite anon FTP archive for Crypt
Breaker's Workbench (CBW). For example, it's in
ftp.uu.net:usenet/comp.sources.unix/volume10/cbw.

It'll be a piece o' cake. If you had done

	tar cf - stuff | compress | crypt >stuff.tar.Z.encrypted

you'd be pretty close to sunk; the three bytes of ``known plaintext'' at the
front wouldn't give CBW much of a toehold. People claim that such a file can
be broken, but I haven't heard any detailed explanation of how.

And as far as I know, the sequence

	... | compress | spindle | crypt >....Z.spindle.encrypted

can't be touched by anybody. Gzip can be substituted for compress in the
above command. Spindle I include after my .sig; it copies stdin to stdout,
Xor-ing the second half of the document onto the first. This is a trivially
self-inverting transformation, but it conceals any known prefix strings, as
might be found in a tar|compress sequence.

-Bennett
bet@sbi.com

Spindle:
	#!/usr/local/bin/perl

	$/ = 0777;

	$input = <>;

	$len = length($input);
	$cutpoint = $len / 2;
	$firsthalf = substr($input,0,$cutpoint);
	$secondhalf = substr($input,$cutpoint);
	$stomp = substr($secondhalf,0,length($firsthalf));

	vec($0,0,8); # turn on bitstring operations
	$firsthalf ^= $stomp;

	print $firsthalf, $secondhalf;
