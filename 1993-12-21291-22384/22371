Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!network.ucsd.edu!pacbell.com!decwrl!decwrl!netcomsv!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: RUMOUR: RSA has been broken! Comments please!
Message-ID: <phrCIvLsK.Ez3@netcom.com>
Keywords: rsa public key encryption broken cryptography
Organization: Netcom - Online Communication Services (408 241-9760 guest)
References: <2fvr3e$jtq@huon.itd.adelaide.edu.au>
Date: Fri, 31 Dec 1993 01:36:19 GMT
Lines: 34

In article <2fvr3e$jtq@huon.itd.adelaide.edu.au> ross@wattle.itd.adelaide.edu.au (Ross Williams) writes:
># William H Payne originally discovered how to break RSA without factoring
># by using powers of two on 10/15/90.
>#
># Mr Payne wrote a draft paper "Public Key Cryptography is Easy to
># Break" on 10/16/90.  The abstract (draft only) appears below:
>#
>#   Public key, also known as Rivest, Shamir, and Adelman,
>#   cryptography is broken without factoring the modulus m.
>#   The product of the encryption and the decryption exponent is
>#   computed directly with order log(base 2) m shifts, adds, and compares.
>#   A continued product between the modulus and its multiplier which
>#   matches a criterion solves the Fermat-Euler theorems simply for
>#   even very large moduli.

This sounds very bogus.  From the definition of RSA, the product of
the encryption and decryption exponent is congruent to 1, modulo
phi(N) where N is the modulus and phi is the Euler phi function.
(phi(N) = (p-1)(q-1) when N is the product of two primes p and q).  So
if Payne can compute the product of the encryption and decryption
exponents, he should also be able to easily compute phi(N) in almost
all cases, especially for low decryption exponents (maybe for all
cases, I haven't thought about it much).  And knowing phi(N) gives you
the factors of N almost immediately, from the quadratic formula.  So
Payne's method, if for real, would usually give the factors of N,
which he claims are unnecessary.  In fact since it gives st where
s is the public and t is the secret exponent, it immediately gives
you t (just divide st by s), and there is a well known probabalistic
algorithm for factoring N given t.  See N. Koblitz, A Course in
Number Theory and Cryptography, for details.

Besides, Payne did this stuff in 1990 and still intends to publish it
but hasn't yet?  He also writes his abstract in the typical fractured
English of mathematical cranks.  Give us a break.
