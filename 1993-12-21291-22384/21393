Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!olivea!pagesat!news.cerf.net!class.class.org!treid
From: treid@class.class.org (Taylor Reid)
Newsgroups: sci.crypt
Subject: Re: Public Key systems and multiple receivers
Date: 23 Nov 1993 14:30:44 GMT
Organization: C.L.A.S.S. Cooperative Library Agency for Systems and Services
Lines: 18
Message-ID: <2ct6qk$m5r@news.cerf.net>
References: <2crmpoINN5m8@umbc8.umbc.edu> <DOUG.93Nov22211609@midget.towson.edu>
NNTP-Posting-Host: class.class.org

In article <DOUG.93Nov22211609@midget.towson.edu>
           doug@midget.towson.edu (Doug McNaught) writes:

>  You assume incorrectly. In PGP, the message is encrypted *once* using
>the IDEA algorithm and a random 128-bit session key. The session key
>is then encrypted once for each recipient, using the recipient's
>RSA public key.

Excuse what may be a rookie question: Couldn't the security of PGP be
easily compromised by distributing a version that always encrypts the
session key with a cracker's public key in addition to any that the user
specifies on the command line?  How is the non-technical user of PGP to
know whether this has been done?  Is the only security against this type
of backdoor to write your own source code and compile it on your own machine?

TSR


