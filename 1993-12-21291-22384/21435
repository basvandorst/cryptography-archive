Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!spool.mu.edu!sol.ctr.columbia.edu!news.kei.com!ub!galileo.cc.rochester.edu!news
From: gtf@math.rochester.edu (Geoffrey T. Falk)
Subject: Re: Can NSA crack PGP?
Message-ID: <1993Nov24.223919.3911@galileo.cc.rochester.edu>
Sender: news@galileo.cc.rochester.edu
Nntp-Posting-Host: gauss.math.rochester.edu
Organization: University of Rochester Computing Center
References: <1993Nov24.203722.6805@cactus.org>
Date: Wed, 24 Nov 93 22:39:19 GMT
Lines: 55

In article <1993Nov24.203722.6805@cactus.org> ritter@cactus.org (Terry Ritter)  
writes:

>  An unfortunate and under-published aspect of public-key technology
>  is the need to validate public keys.  Key-validation protocols are
>  an essential part of public-key security.  In some public-key
>  systems we see proposals for Certification Authorities (CA's) or
>  tree-structured protocols for key validation.  In PGP we do not.
> 
>  The so-called "trust" protocol which PGP depends upon has had
>  surprisingly little public comment.  But it does not take much
>  analysis to show that a single error in a chain of trust can
>  produce an improper validation.  Consider A giving his public key
>  to B; B decides to change it, and gets C to accept the new (wrong)
>  key; now C gives the key to D; and D gives it to E, F, G, H, etc.,
>  each of which claims to Z that they are more or less trusting of D.
>  Clearly, no matter how many people (E, F, G, H, etc.) claim to
>  know that key, it is still the wrong key.  C was wrong, but the
>  issue is that Z got the wrong key and is potentially insecure
>  because of it.

Yes, this is true. If one wanted to make a theoretical analysis of key validity  
in a trust web, one would take into account the 'connectivity' of the web. The  
situation you describe can be illustrated as follows:

A -> B -> C -> D -> E -> F -> G -> H ... -> Z

which is an intrinsically weak structure. If each signer has a small  
probability p of being fooled into signing a wrong key (or of being malicious),  
the probability that Z gets the right key is only (1-p)^n where n is the number  
of links in the chain. Think of it as a real chain in which each link has a  
small probability of failure: the longer the chain, the greater the probability  
that there is at least one weak link.

If the trust web is to be secure, there need to be many more interconnections.  
For instance, if there are two connections from A to D,

    > B
   /    \
 A        > D
   \    /
    > C

then neither B nor C can change the key without D knowing about it (unless they  
collaborate), and the probability that B and C were both careless about signing  
the key without checking is now only p^2. Parallel links and more  
interconnections make the trust web robust.

Perhaps, instead of trust parameters, PGP could calculate probabilities that  
keys are correct, based on the structure of the trust web and the trust values  
assigned to the signers. From the above analysis, it is clear that the  
algorithm presently employed (k partially trusted signers -> key assumed to be  
valid) is not actually the correct one.

g.
