Newsgroups: comp.ai,comp.ai.nat-lang,comp.compression,sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!paladin.american.edu!gatech!news.ans.net!newsgate.watson.ibm.com!watnews.watson.ibm.com!yktnews.watson.ibm.com!rocky!lwloen
From: lwloen@rchland.vnet.ibm.com (Larry Loen)
Subject: Re: American language standardized dicti
Sender: news@rchland.ibm.com
Message-ID: <1993Dec22.184440.13812@rchland.ibm.com>
Date: Wed, 22 Dec 1993 18:44:40 GMT
Reply-To: lwloen@rchland.vnet.ibm.com
Disclaimer: This posting represents the poster's views, not necessarily those of IBM
References: <gradyCI8qov.2uz@netcom.com> <jktaberCI8z9B.2AE@netcom.com>
Nntp-Posting-Host: rocky.rchland.ibm.com
Organization: IBM Rochester
Lines: 72
Xref: msuinfo comp.ai:20136 comp.ai.nat-lang:1012 comp.compression:9971 sci.crypt:22199

In article <jktaberCI8z9B.2AE@netcom.com>, jktaber@netcom.com (John K. Taber) writes:
|> Grady Ward (grady@netcom.com) wrote:
[snip] 
|> : My Moby Words product has two 1,000 'most frequent' lists, a 70,000
|> : list of words 'most commonly found in dictionaries', separate places
|> : and names lists so you can add for spelling checkers, the Scrabble (R)
|> : lists and of course the main corpus of 600,000 words and phrases.
|> 
|> 
|> : -- 
|> : Grady Ward          | compiler of:            | finger grady@netcom.com
|> : grady@netcom.com    | Moby Words, Hyphenator  |    for more information
|> : +1 707 826 7715     | Part-of-Speech          | 15 E2 AD D3 D1 C6 F3 FC
|> : (voice / 24hr FAX)  | Pronunciator, Thesaurus | 58 AC F7 3D 4F 01 1E 2F
|> 
|> I would be interested in a dictionary of phrases without regard to word 
|> divisions.  Things like "on account of", "in order to", just plain 
|> ordinary phrases, not necessarily cliches or hackneyed expressions, however.
|> 
|> I could use this to create pattern dictionaries to help automate 
|> solutions of patristocrats (simple substitutions without word divisions), 
|> Playfairs, and the like.
|> 
|> Anybody else interested?
|> -- 
|> John K. Taber                        jktaber@netcom.com
|> =======================================================

I have a very workable approach for Simple Substitution that seems
harder to describe than it is to do.  Works splendidly when there are
word divisions present.  Requires a word list of as small as 10,000 words.

Basically, you pick any two words, grab the pattern word list for those
two words, and then figure out which _pairs_ of words jointly satisfy
the simple substitution constraint.  If the pair of ct words is well-chosen,
the number of surviving pairs is small, even for patterns with up to
100 words on each of the two lists.  Manual/computer aided trial finishes
up most crypts in short order (only the very specially, weirdly constructed
ones give any trouble and not even all of those).

To extend this idea to undivided simple substitutions could be done in
a couple of ways:

1.  The beginning and end of the cipher represent a starting and ending
word boundary, respectively.  You could then start with 4, 5, 6, 7, . . .12
letter words at each position and see what you have.

But, what about all the crypts that start with "In the. . ." or "Is it . . ."
and stuff like that?  My answer would be to add all the valid pairs of two
letter words to the list (most are valid, some are nonsense) and also the
3 and 2, 2 and 3 letter words.  This gives you a supplemental list of pseudo
"4" and "5" letter "words" that I speculate would be quite adequate in
practice, given my experiences with the word division case.

2.  If that didn't work well, a higher computational cost approach would be
to pick one or two "promising" places (places with a ct letter repeated often)
and try out the various surrounding areas as 4, 5, 6, 7,. . .12 letter cts.
This would obviously be many more candidates and you'd probably want to
supplement the "hits" with some sort of frequency-fit matching for the rest
of the trial solution.

Obviously, the "supplemental" word list given above would be used again.

If your computer has more main store, a three word set can be used and this
should work even better.  The performance of the two word case, with word
divisions, is quite good, even with an anceint PC.

-- 
   Larry W. Loen        |  My Opinions are decidedly my own, so please
                        |  do not attribute them to my employer

   email to:  lwloen@rchland.vnet.ibm.com
