Path: msuinfo!uwm.edu!spool.mu.edu!howland.reston.ans.net!noc.near.net!news.delphi.com!davesparks
From: davesparks@delphi.com (Dave Sparks)
Newsgroups: sci.crypt
Subject: Re: Birthday attack in CBC mode?
Date: 28 Nov 1993 04:41:21 GMT
Organization: General Videotex Corporation
Lines: 48
Message-ID: <9311272338591.davesparks.DLITE@delphi.com>
References: <jktaberCH66u2.Hs2@netcom.com>
NNTP-Posting-Host: bos3a.delphi.com

 >> This is basically code book solving.  I have absolutely no experience  
 >> solving codebooks, so what I say is surmise, but with some basis in  
 >> experience solving puzzle ciphers.  The DES in ECB is really a simple  
 >> substitution cipher on a gigantic alphabet of 2^64 characters.  Knowing
 >> enough ct-pt pairings will let you eventually work out a practical code
 >> book. That is, I know a few, and by luck I can translate the pt with a
 >> ct block between them (let's imagine it).  Because I know quite a lot
 >> about the "enemy", I can guess the intervening 8 bytes of pt.  So now I
 >> have another pt-ct pair that I collect for trying in other intercepted
 >> messages.
 
 >> I can't estimate how much work it would be before a practical but  
 >> incomplete concordance was compiled, but my feeling is that ECB is not
 >> safe.

I suppose "safety" is a relative term.  First of all, a 2^64 character
"meta-alphabet" is highly context sensitive.  IOW, an eight character
fragment of plaintext will only produce the same ciphertext when it is
aligned exactly with a block's boundaries.  Thus, the same eight characters
in an ASCII text file will only produce the same ciphertext, on the average,
12.5% of the time.

The success of the attack that you hypothesize depends upon a number of
sloppy practices on the part of the crypto-user for its success.  The first
is allowing the plaintext to fall into the wrong hands.  The second, which
you alluded to, was using a fairly weak implementation of the cipher (ECB
mode).  The third is not changing the crypto key after the system has even
*POTENTIALLY* been compromised.  In fact, crypto keys should ideally be
changed periodically, regardless.  This would make the value of the
"concordance" you had compiled very time-limited.  In fact, if the sender
changed crypto keys without your knowledge, continued compilation of a
"concordance" could lead you to some very misleading conclusions.

Apart from changing to a more secure implementation, such as CBC or CFB,
even compressing the file prior to encryption would make such an attack much
less fruitful.

If you knew only a few isolated pt-ct pairs out of a potential domain of
2^64, I would suspect that good old-fashioned traffic analysis would be more
cost-effective in deriving useful inteligence from transmission originating
from a given site.

/--------------+------------------------------------\
|              |  Internet: davesparks@delphi.com   |
| Dave Sparks  |  Fidonet:  Dave Sparks @ 1:207/212 |
|              |  Famnet:   Dave Sparks @ 77:500/1  |
\--------------+------------------------------------/

