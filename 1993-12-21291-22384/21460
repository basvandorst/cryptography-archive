Newsgroups: comp.sources.testers,sci.crypt
Path: msuinfo!uwm.edu!spool.mu.edu!sgiblab!barrnet.net!infoserv!lila!dorsey
From: dorsey@lila.com (Bill Dorsey)
Subject: Announcing KFS -- Encrypting Filesystem for SunOS 4.1.X
Message-ID: <CH2FtK.DAq@lila.com>
Organization: NOYB, Inc.
Date: Thu, 25 Nov 1993 21:03:20 GMT
Lines: 66
Xref: msuinfo comp.sources.testers:207 sci.crypt:21460

KFS is an encrypting filesystem written for Sun computers running SunOS
4.1.x.  KFS was designed to be compatible with existing filesystem tools
such as dump and fsck, thus allowing normal archival and recovery tools
to be used with it.  It is implemented as a layor on top of UFS, and
usage is similar to the LOFS (loopback filesystem).

A KFS filesystem can be mounted by root and used by any number of users.
Each user can set their own key phrase for their filesystem accesses.
Only files stored under a particular key phrase by a particular user id
will appear normally; all other files on KFS will appear to be garbage.
Even root will not be able to read your files, though a knowledgeable
superuser might be able to adb the kernel and discover user's key phrases
while they were active on the filesystem.

KFS presently uses DES in CBC mode for encryption.  If you're not a fan
of DES, don't despair.  The encryption functions of KFS were written in
a highly modular fashion, and it should be simple enough to replace DES
with IDEA or other ciphers.  Remember, too, that the speed of the
cipher is the primary limit on the performance of the filesystem.  IDEA
should achieve performance levels above that of DES, but Triple-DES
might be considered too slow for some users.

On a Sparcstation 2 running SunOS 4.1.3, performance approaches 300K/
second for reading and writing.  While not exactly speedy, this is fast
enough for many uses.

KFS is currently in alpha test.  It appears to work reliably on the
Sun 3 (!), Sun 4, and Sun 4c platforms on which it has been tested,
but no warranty of any kind is made with respect to its performance.
I am making the source available in the hopes that others will be
interested in helping to test it.  Another goal is that others will
use and improve it.  In addition to whatever further work I do on it
myself, I will collect other people's additions and roll them into the
source tree and make them available in subsequent releases of the code.
The source code is provided under the terms of the GPL (Gnu Public
License).

Until the laws here in the U.S. change with regard to the export of
cryptographic software, I regret that I will be unable to release my
source code to those outside of the U.S. and Canada.  Until I can
find an FTP site willing to carry my source code, I am going to have
to release it on an individual basis.  If you are interested in
obtaining a copy of the source code, please send me a request stating
the following:

o  That you are a citizen of the United States or Canada or a permanent
   resident of one of the above two countries and entitled under the law
   to use cryptographic software.

o  That you will not redistribute the source code to anyone that does
   not meet the above requirement and will take reasonable steps to
   insure that unauthorized users do not gain access to the software.

o  Your full name and email address.

If you agree to the above, and your email comes from a site in the U.S.
or Canada, I will be happy to send you a copy of the source code.  I
deeply regret that I cannot send it to others, but though I do not agree
with the U.S. laws on exporting cryptographical software, I do not
intend to make myself a target of our justice system by violating them.

-- 
Bill Dorsey	"Nothing that results from human progress is achieved
dorsey@lila.com	 with unamimous consent.  And thos who are enlightened
PGP 2.X pubkey	 before the others are condemned to pursue that light
available	 in spite of the others."  -- Christopher Columbus
