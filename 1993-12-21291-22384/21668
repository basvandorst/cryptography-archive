Path: msuinfo!uwm.edu!spool.mu.edu!news.clark.edu!netnews.nwnet.net!news.u.washington.edu!stein3.u.washington.edu!tzs
From: tzs@stein3.u.washington.edu (Tim Smith)
Newsgroups: alt.privacy,sci.crypt,alt.conspiracy
Subject: Re: NSA CAN BREAK PGP ENCRYPTION
Date: 3 Dec 1993 09:33:41 GMT
Organization: University of Washington School of Law, Class of '95
Lines: 14
Message-ID: <2dn15l$1vu@news.u.washington.edu>
References: <064303Z02121993@anon.penet.fi> <znr754833388k@brax.se>
NNTP-Posting-Host: stein.u.washington.edu
Xref: msuinfo alt.privacy:10014 sci.crypt:21668 alt.conspiracy:38416

In article <znr754833388k@brax.se>, Daniel Lundh <daniel@brax.se> wrote:
>And having the trapdoor in the compiler is SO SMART since it will then only
>recognize the original source and not something you have changed in it
>yourself. (And why the hell not get an old compiler?)

I seem to recall reading that when Ken Thompson did this, he had the compiler
find the proper place to to insert the trapdoor by looking for calls to certain
library routines.  If you modified the source locally, you'd probably still
have these calls in, so the compiler would still manage to insert the trapdoor.

I think this was either in one of the early papers on Unix security, or in
Thompson's Turing Award lecture, in case you want to read the original.

--Tim Smith
