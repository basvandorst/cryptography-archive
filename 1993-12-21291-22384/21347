Path: msuinfo!netnews.upenn.edu!newsserver.jvnc.net!gmd.de!xlink.net!howland.reston.ans.net!gatech!usenet.ufl.edu!travis.csd.harris.com!amber!tom
From: tom@ssd.csd.harris.com (Tom Horsley)
Newsgroups: sci.crypt
Subject: thought experiment on weak IDEA keys
Date: 09 Nov 1993 13:26:17 GMT
Organization: Harris Computer Systems Division
Lines: 26
Message-ID: <TOM.93Nov9082617@amber.ssd.csd.harris.com>
NNTP-Posting-Host: amber.ssd.csd.harris.com

A few days ago there was an article about the possibility of generating weak
IDEA keys, and (if I remember it correctly, unfortunately the article has
expired and I didn't save it) it said one way to insure the key was not
suffering from this particular weakness was to xor it with some specific
bit pattern.

It didn't occur to me at the time, but that doesn't seem reasonable. If I
happen to randomly select the weak key: "xyzzy" and then "fix" it by xoring
it with the magic pattern, that will (just as an example) result in the new
(strong) key "plugh".

At some other time, my random key generator might create "plugh" as the
random key. When I fix it with the xor pattern, I will wind up with "xyzzy"
as the fixed key, which, by the original hypothesis, is weak.

I know it is dangerous to work from memory on something like this. Did I
perhaps miss something? Was the original article about a specific key
generation technique which would never randomly produce "plugh"?
--
======================================================================
domain: tahorsley@csd.harris.com       USMail: Tom Horsley
+=============================================+511 Kingbird Circle
Don't have awk? Use this simple sh emulation: |Delray Beach, FL  33444
#!/bin/sh                                     +======================+
echo 'Awk bailing out!'
exit 2
