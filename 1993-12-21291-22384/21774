Path: msuinfo!uwm.edu!cs.utexas.edu!uunet!psinntp!barilvm!vms.huji.ac.il!radai
From: radai@vms.huji.ac.il
Newsgroups: sci.crypt
Subject: Re: CRC's
Message-ID: <1993Dec6.123838.2356@vms.huji.ac.il>
Date: 6 Dec 93 12:38:38 GMT
References: <1869@beacon.rain.com>
Distribution: world
Organization: The Hebrew University of Jerusalem
Lines: 47

  Ted Rolle quotes a letter from Gavin Puche in DDJ:
>     I refer to Mark R. Nelson's article "File Verification Using CRC"
> in the May 1992 DDJ.  Mark suggests that the CRC calculation is
> noninvertible in the sense that on changing the contents of a file it
> is difficult to avoid changing the CRC and that trial and error is
> required to restore the former CRC.  This is not the case.
>     If a region of the file is modified and there are four extra bytes
> following the region (without extending the file) which can also be
> modified, then you simply calculate the CRC over that region before
> and after the changes, calculate the difference with a bit-wise
> exclusive-OR, and then exclusive-OR that value into those four following
> bytes.  The CRC over the whole file will then be unchanged.
                               ....
>     But the CRC is not a good defense against viruses.  Presently
> it is useful because the viruses do not account for CRCs, but as
> shown, it is neither hard nor time consuming.

 Ted then asks:
> Can anyone comment on this?

Yes.  Gavin is correct if the CRC generator is known.  But when dealing with
the possibility of viral infection, or any other situation where each user
wishes to detect modifications made to files on the same computer (as opposed
to modifications which take place during transfer between computers), it is
possible for each user to choose a CRC generator which is UNKNOWN to anyone
else.  In this case, it is impossible to perform the above type of forgery,
provided the CRC hash values are inaccessible to the forger (since if they
were accessible, this would allow him to compute the generator, or to compute
the 4-byte adjustment directly from the file-hash pairs).
  On a PC, the surest way of satisfying this condition is to keep the pre-
viously computed hash values and the CRC program on a "system" diskette, and
to boot from this diskette before computing the new CRC values and comparing.
It may not be too convenient, but it's a wise thing to do in any case, since
it's also the surest way to prevent stealth viruses from fooling scanners
and integrity checkers, and this is a much greater practical danger than is
the forging of files to preserve CRC values.
  Theoretically, it's possible for a forger to compute a modification which
would preserve the hash value relative to all possible generators, but if the
generator is assumed to be an irreducible polynomial, he would need to create
a file which (considered as a polynomial) has degree at least 2^k-2, where k
is the number of bits in each CRC hash value.  Thus for k = 32, he would have
to create a 4-gigabit file, which hardly seems practical.  And what if the
generator is not necessarily irreducible?

                                     Y. Radai
                                     Hebrew Univ. of Jerusalem, Israel
                                     RADAI@VMS.HUJI.AC.IL
