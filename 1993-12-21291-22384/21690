Path: msuinfo!caen!sol.ctr.columbia.edu!howland.reston.ans.net!cs.utexas.edu!swrinde!elroy.jpl.nasa.gov!inst-sun1!seth
From: seth@inst-sun1.jpl.nasa.gov (Seth Chazanoff)
Newsgroups: sci.crypt
Subject: Re: NSA CAN BREAK PGP ENCRYPTION
Date: 3 Dec 1993 22:39:46 GMT
Organization: Jet Propulsion Laboratory
Lines: 29
Distribution: world
Message-ID: <2dof7i$m8h@elroy.jpl.nasa.gov>
References: <dasherCHH8n7.5w1@netcom.com>
Reply-To: seth@inst-sun1.jpl.nasa.gov
NNTP-Posting-Host: 128.149.109.9

In article 5w1@netcom.com, dasher@netcom.com (D. Anton Sherwood) writes:
> In article <2dlmna$a7p@sefl.satelnet.org> skybird@satelnet.org (Scott Pallack) writes:
> >This is trivial to test.  Compile the program using an older compiler, 
> >translate the program into fortran or something or hand-code it in 
> >assembler.  
> >Compare the outputs.
> >I'll bet they're the same.
> 
> Do all un-spooked compilers produce the same output?

No!  If they did, all compiled code would take the same amount of disk space,
memory space, and run at the same speed, this is clearly not the case, hence
compiler benchmarks giving relitive sizes for executable files, and run speeds
for the programs as compiled.

The statement about "C" compilers being written to "recognize" PGP and put the
"trapdoor" into it reminds me of a similar acquisation about 10 years ago that
FORTRAN compilers were being written to recognize when an FFT was being compiled
and replacing the user code with specially optomized FFT code since the compile
and run speeds of an FFT was a common benchmark.
 
> -- 
> Anton Sherwood   *\\*   +1 415 267 0685   *\\*   DASher@netcom.com
> Bureau of Making Sure You Get Enough Sleep and Eat Your Vegetables
> Disclaimer:    The above is likely to refer to anecdotal evidence.

				Seth


