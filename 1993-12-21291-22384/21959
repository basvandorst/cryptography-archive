Newsgroups: comp.security.misc,sci.crypt
Path: msuinfo!uwm.edu!news.doit.wisc.edu!decwrl!csus.edu!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: Proposal for new login authentication method
Message-ID: <phrCHyo9t.6sE@netcom.com>
Organization: Netcom - Online Communication Services (408 241-9760 guest)
References: <JROZES.93Dec12021934@allegro.cs.tufts.edu> <phrCHxztq.6wE@netcom.com> <JROZES.93Dec12220257@allegro.cs.tufts.edu>
Date: Mon, 13 Dec 1993 06:49:04 GMT
Lines: 35
Xref: msuinfo comp.security.misc:6856 sci.crypt:21959

In article <JROZES.93Dec12220257@allegro.cs.tufts.edu> jrozes@allegro.cs.tufts.edu (J Rozes) writes:
>In article <phrCHxztq.6wE@netcom.com> phr@netcom.com (Paul Rubin) writes:
>
>   I'm not worried too much about losing the piece of paper, it's no
>   worse than getting a password stolen in the usual way.  Perhaps the
>   program should support a "backup" hash file.  You would have a second
>   piece of paper with more passwords, in case you lose the first one.
>   The program would recognize if you use one of the backup passwords,
>   and invalidate the primary hash file. 
>Someone suggested this type of deal a few posts back, only using a 
>sequential series of lists where the usage of a password on list n
>automagically invalidates all passwords on lists n-1 through 0. The 
>only problem with this type of functionality is that you're royally
>screwed if someone gets a hold of your highest-numbered password sheet.
>Also, calling a sysadmin-type is not always a viable option. And then
>you have to worry about securely transmitting the fax... 8^)

Yes.  Basically if you're going for very high security, you should
never be doing unencrypted remote logins in the first place.  I'm
not really thinking about defeating people who are after *my* password
enough to go after my backup paper.  The way I'd likely lose the primary
paper would be to take it out of my pocket, log in using it, and
forget to take it with me.  So it's just a matter of storing the backup
a little more safely.

>   [my rave about public key authentication]
>
>Is RSA still off-limits? Can any crypto-types out there tell us about
>other public key algorithms?
Afraid so.  This is the topic of perennial flame wars on the crypto
groups, so I won't go into the details.  But the quick summary is that
the patent holder claims to own *all* public key and digital signature
methods, including those not yet invented, and while this claim is
legally questionable nobody has yet been willing to gamble with the
legal system by challenging it.
