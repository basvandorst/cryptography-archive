Path: msuinfo!uwm.edu!math.ohio-state.edu!howland.reston.ans.net!cs.utexas.edu!uunet!decwrl!apple!mumbo.apple.com!Richard_W._Outerbridge@magic-bbs.corp.apple.com
Message-ID: <1993Dec07.214936.1865959@magic-bbs.corp.apple.com>
Newsgroups: sci.crypt
From: Richard_W._Outerbridge@magic-bbs.corp.apple.com
Distribution: world
Organization: M A G I C
Date: Tue, 07 Dec 1993 21:49:36 EST
Subject: Mining p's & q's
Lines: 63

Recently there has been some discussion of how PGP mines its p's
and q's, especially wrt detection of Carmicahel numbers.  Listed
below are a number of other criteria for "good" RSA primes, none
of which seem to be tested for or guaranteed by PGP out-of-the-box
(if I'm wrong please let me know).

So, the question is, how many are still relevent?  Should users of
PGP (or any RSA package that doesn't guard against an unlucky 
choice of p or q, or which predetermines a small e) be worried?
Are the odds against stumbling into any such pathological cases
"by chance" so astronomical that one could more profitably buy
insurance against being struck by lightning while standing at the
North pole than worry about testing for them during key generation?

Also note that few of the terms are quantified.  Can anyone define
what "large", "small" or "many" mean in terms of p & q?

Are there any other criteria which should be satisfied?

[I'll summarize all personal replies to the net if that will help]

Richard Outerbridge

[Koblitz, A Course in Number Theory and Cryptography, 1987]

Ko1.	p and q not too close together; they should differ in length
		by a few decimal digits [this avoids Fermat factoring].
	
Ko2.	gcd((p-1),(q-1)) be "small".

Ko3.	both (p-1) and (q-1) have at least one "large" prime factor.

[Welsh, Codes and Cryptography, 1988]

We1.	neither (p-1) nor (q-1) have "many" "small" prime factors.

We2.	choose p, q, and e such that the number of fixed points
		is "small".  [if r = gcd((p-1),(e-1)) and s = gcd((q-1),(e-1)),
		then the number of fixed points is given by (1+r)*(1+s). 
		The practical minimum seems to be nine.]
		
[Saloma, Public-Key Cryptography, 1990]

Sa1.	(p-1)*(q-1) itself should have at least one "large" prime factor.

Sa2.	both p and q should be constructed so that both (p-1)/2
		and (q-1)/2 are prime ("safe" primes).
		
Sa3.	the "large" prime factors of both (p-1) and (q-1) should
		themselves have at least one "large" prime factor. [This is
		only against attack by factoring algorithms that have been
		superceded : "strong" primes]
		
Sa4.	both e and d must be "large" [e or d less than 1/4 the size
		of p*q can be a problem].
		
=====================
93/12/07 21:39:25 EST
Richard Outerbridge 71755.204@compuserve.com
"Just an eccentric soul with a curiosity for the bizarre."



