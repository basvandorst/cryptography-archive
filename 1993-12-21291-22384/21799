Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!zib-berlin.de!news.rrz.uni-hamburg.de!fbihh.informatik.uni-hamburg.de!bontchev
From: bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Newsgroups: sci.crypt
Subject: Re: CRC's
Date: 6 Dec 1993 22:25:13 GMT
Organization: University of Hamburg -- Germany
Lines: 69
Message-ID: <2e0bg9$lbn@rzsun02.rrz.uni-hamburg.de>
References: <1869@beacon.rain.com>
NNTP-Posting-Host: fbihh.informatik.uni-hamburg.de
X-Newsreader: TIN [version 1.2 PL2]

Ted Rolle (Ted.Rolle@f36.n105.z1.fidonet.org) writes:

>     I refer to Mark R. Nelson's article "File Verification Using CRC"
> in the May 1992 DDJ.  Mark suggests that the CRC calculation is
> noninvertible in the sense that on changing the contents of a file it
> is difficult to avoid changing the CRC and that trial and error is
> required to restore the former CRC.  This is not the case.

Correct. Provided that you know enough about the particular CRC used.
See below for explanation of what is enough.

>     If a region of the file is modified and there are four extra bytes
> following the region (without extending the file) which can also be
> modified, then you simply calculate the CRC over that region before
> and after the changes, calculate the difference with a bit-wise
> exclusive-OR, and then exclusive-OR that value into those four following
> bytes.  The CRC over the whole file will then be unchanged.

Alternatively, instead of modifying N bytes and then 4 additional ones
to coverup the modification, you could simply modify N-4 and then 4
additional ones.

BTW, the letter assumes CRC-32. A CRC-16 would need only 2 bytes.

Also, you will have to know the generator polynomial of the CRC and
the particular CRC type - reversed or not and what exactly is
reversed. For a discussion of the CRCs, see the file on our ftp site:

ftp.informatik.uni-hamburg.de:/pub/virus/texts/security/crc.zip

>     Better still is the fact that the CRC of a file can be arranged to
> come out to any chosen value if only there are 32 consecutive bits
> that can be modified somewhere in the file.  The bits do not even have
> to be aligned on a byte boundary.

Also true. Provided that you know how the CRC is cumputed (i.e., the
generator polynomial).

>     If the location for the CRC patch is a fixed distance from the
> end of the file, much of the calculation can be done in advance.

Ha, I didn't know that... and it's not obvious to me... I'll have to
think about it.

>     But the CRC is not a good defense against viruses.  Presently

Wrong. The CRCs are very convenient for detection of modifications
introduced by viruses. For all practical purposes, they are secure
enough, if implemented correctly. By "implemented correctly" I mean
that the virus author must not be able to deduce the particular
generator polynomial used in a particular installation (that is - each
installation of the product must generate its own polynomial) and that
the database with CRCs is kept securely off line (e.g., on a diskette)
- out of the reach of the virus.

Theoretically, it is also possible to deduce the generator polynomial
from enough files/CRCs pairs. Even if the pairs are not enough, some
knowledge about the polynomial can be deduced. However, in a good
implementation even this method will not be available to the virus,
because, as I wrote above, the database of CRCs must be kept secured
on a diskette.

Regards,
Vesselin
--
Vesselin Vladimirov Bontchev          Virus Test Center, University of Hamburg
Tel.:+49-40-54715-224, Fax: +49-40-54715-226      Fachbereich Informatik - AGN
< PGP 2.3 public key available on request. > Vogt-Koelln-Strasse 30, rm. 107 C
e-mail: bontchev@fbihh.informatik.uni-hamburg.de        22527 Hamburg, Germany
