Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!EU.net!julienas!dmi.ens.fr!vaudenay
From: vaudenay@dmi.ens.fr (Serge Vaudenay)
Subject: Re: Help with understanding hash functions
Message-ID: <1993Nov30.092028.20160@ens.fr>
Sender: news@ens.fr (USENET News System)
Nntp-Posting-Host: morille.ens.fr
Organization: Ecole Normale Superieure, Paris, France
References: <931126.65463.BOBES_PIERRE@delphi.com> <1993Nov27.082140.10241@ens.fr> <4CMJBVUJ@gwdu03.gwdg.de>
Date: Tue, 30 Nov 93 09:20:28 GMT
Lines: 49

In article <4CMJBVUJ@gwdu03.gwdg.de>, slucks@gwdu03.gwdg.de (Stefan Lucks ) writes:
|> vaudenay@dmi.ens.fr (Serge Vaudenay) writes:
|> 
|> >In article <931126.65463.BOBES_PIERRE@delphi.com>, BOBES_PIERRE@delphi.com writes:
|> >To be clear, a hash function is a mapping h from the set Z^* of all words on
|> >the finite alphabet Z to Z. Thus, this function cannot be injective.
|> 
|>  [ ... ]
|> 
|> >Now, there are several properties for security. For instance :
|> >- Universal hash functions : roughly, for any word w, it is too difficult to
|> >find an other word w' such that h(w) = h(w');
|> >- One Way hash functions : for any hash value c, it is too difficult to find a
|> >word w such that h(w) = c;
|> >- Collision Free hash functions : it is too difficult to find two different
|> >words w and w' such that h(w) = h(w').
|> 
|> >The links between those properties are not well known. For surjective hash
|> >functions, we may have CF ==> U ==> OW. Otherwise, we still have CF ==> U. So,
|> >CF and OW are the most powerfull property for cryptographic hash functions.
|> 
|> Here an easy example of a collision-free Hash-Function that is clearly not
|> one-way:
|> 
|>   Let h: A^* -> A any collision-free Hash-Function (may be one-way or not).
|>   Then the Function
|>  
|>     h': A^* -> {0,1}*A 	with h'(x) = (0,x)    if x in A
|> 			and  h'(x) = (1,h(x)) else
|> 
|>   is collision-free too (proof left as example).
|> 
|>   But for any randomly chosen hash-output O in {0,1}*A we have a 
|>   50% probability that it is trivial, to find a "fitting" hash-input
|>   I with h'(I)=O.

When I write "we may have CF ==> U ==> OW", it might depend on the formal
definitions. I do not think there is such a theorem, but the intuition tells
us CF is stronger than OW : it is easier to get OW functions than to get CF
functions. If we get a CF function which is not OW, we may have done this
function to get precisely this property.

Can we make another contrexample is we define OW  as follow?

A function is OW if for all probalistic algorithm A and for all x, the proba-
bility that M(x) return a preimage of x is exponentially small. Then, for the
example above, the probability that A get a preimage of (1,y) may be too small.

  --Serge
