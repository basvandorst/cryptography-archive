Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!pipex!pavo.csi.cam.ac.uk!rja14
From: rja14@cl.cam.ac.uk (Ross Anderson)
Subject: Re: Help with understanding hash functions
Message-ID: <1993Dec7.135509.23596@infodev.cam.ac.uk>
Sender: news@infodev.cam.ac.uk (USENET news)
Nntp-Posting-Host: nene.cl.cam.ac.uk
Organization: U of Cambridge Computer Lab, UK
References: <931126.65463.BOBES_PIERRE@delphi.com> <1993Nov27.082140.10241@ens.fr> <4CMJBVUJ@gwdu03.gwdg.de> <1993Nov30.092028.2016 <1993Dec6.124738.2357@vms.huji.ac.il>
Date: Tue, 7 Dec 1993 13:55:09 GMT
Lines: 101

I pointed out last week that collision freedom is only one of a number of
freedom properties which a hash function might need. Others include 
multiplication freedom (you can't find x, y and z such that h(x)h(y) = h(z)) and 
correlation freedom (you can't find x and y such that h(x) xor h(y) is sparse).

Then, in article <1993Dec6.124738.2357@vms.huji.ac.il>, radai@vms.huji.ac.il 
(Yitzhak Radai) replied:

|> Sorry, but I can't agree that the fact that all OW functions are multiplica-
|> tion-free, or anything else mentioned above, implies that "one-way functions
|> are much stronger than universal ones."  The most that has been shown here is
|> that a universal hash function is not necessarily one-way.  However, it can
|> equally well be shown that a one-way hash function is not necessarily
|> universal:
|>   Given a function E on blocks of length l to blocks of length l (think of E
|> as a block encryption algorithm), define a corresponding hash function H on
|> inputs of length nl by H(x) = E(x_1) xor ... xor E(x_n) (where  x = x_1 ||
|> x_2 || ... || x_n, where '||' indicates concatenation).  Now define x' = x_2
|> || x_1 || ... || x_n (or any other transposition of blocks of x).  Since xor
|> is commutative (and associative), H(x') = H(x) even though x' ~= x, so H is
|> clearly not universal.  Otoh, there is no reason to suppose that such an H
|> can never be one-way.  Thus there exist functions which are one-way but not
|> universal (and hence, a fortiori, not collision-free).

This is a matter of definition. If we accept Radai's function as being one-way,
then we would also have to accept many other pathologies such as the function
which calculates the MD5 of the first block of our file and completely ignores
the rest of it.

This highlights the original problem with both one-way and universal functions,
namely the implicit temporal ordering. You have to be able to start off with m 
and work out h(m), but unable to start off with c and work out m. The property 
you get depends on exactly how you formalise procedures to deal with any side 
information which you might have about c (such that it is h(m') for some m' <> m, 
or that it is h(x)h(y) for some x and y). 

This problem is well known to the formal methods community; I had deliberately 
avoided it by writing in English instead of in formal logic. Radai's proposal,
namely 

|>         Definition                     By itself      Plus h easy to compute
|>         ----------                     ---------      ----------------------
|> (y in Rng) (CIF x) h(x) = y           Non-invertible          One-way
|> (CIF x1,x2, x1~=x2) h(x1) = h(x2)     Collision-free       Strong one-way
|> (x in Dom) (CIF x'~=x) h(x') = h(x)         ??          Universal(?) one-way

doesn't tackle it at all.

If I were pressed, I would take one-way to mean `if h(m) = c, and you start off 
knowing c but not knowing m, then regardless of what else you know about c, you 
can't end up knowing m'. Then one-wayness implies both multiplication freedom and 
collision freedom.

If another formal definition forces one-way functions to have just a proper 
subset of all possible freedom properties (eg must be multiplication free but 
needn't be collision free) then the question becomes one of whether it can give 
you any interesting results at all; my paper implies that you couldn't use such a
definition to get a class of functions equivalent under polynomial time 
transformations.

One might remark in passing that Bart Preneel's thesis, which is the closest 
thing we have to a reference work on hash functions, avoids this problem. He 
explicitly requires his one-way functions to be collision-free. With this 
`authoritative' definition, Radai's objection also goes away.

Radai continues:

|>   Now it might be objected that the above proof depends on the assumption
|> that there is at least one such function H which is one-way, and this has not
|> been proven.  But even the weakened form of Ross's conclusion, that a univer-
|> sal function is not necessarily one-way, requires an existential assumption,
|> namely that there is a universal function which is not multiplication-free,
|> and from what I can see, this does not seem to have been been proven either.
|> In both cases, the assumptions seem very plausible, although I know of no
|> absolute proof.

I show in my Cirencester paper that given any collision free function, you 
can construct a derived function h which is not addition free and then let h' = 
g^h (mod whatever), thus getting a function which is not multiplication free. 
The proof goes over to universal functions in the sense that if any universal 
function exists, then you can construct a derived one which is also universal but 
not multiplication free.

All these results are about relationships between certain properties. The 
existential assumption is that collision free (or universal, or one-way) 
functions exist at all; and I don't expect that we will ever see this turn into a 
theorem, as it would trivially imply P <> NP.

In any case, my motivation in writing the Cirencester paper was not to spur the
complexity theoreticians to yet more intricate and hair-splitting definitions, 
but

(a)	to point out the practical problems with using collision freedom as the 
	sole measure of `goodness' of a hash function, and 

(b)	to show that concepts such as correlation freedom and multiplication 
	freedom are of practical use outside the somewhat rarefied domain of 
	theoretical cryptology.

Ross

