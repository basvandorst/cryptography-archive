Newsgroups: sci.crypt
Path: msuinfo!agate!spool.mu.edu!bloom-beacon.mit.edu!world!kkirksey
From: kkirksey@world.std.com (Ken B Kirksey)
Subject: Re: PC Based One-Time Pad
Message-ID: <CH7s86.MDM@world.std.com>
Organization: The World Public Access UNIX, Brookline, MA
References: <CH24Dp.1yn@world.std.com> <phrCH2HGw.7r0@netcom.com>
Date: Sun, 28 Nov 1993 18:19:17 GMT
Lines: 54

In article <phrCH2HGw.7r0@netcom.com> phr@netcom.com (Paul Rubin) writes:
>In article <CH24Dp.1yn@world.std.com> kkirksey@world.std.com (Ken B Kirksey) writes:
>>It seems like this would be a fairly easy system to implement, but since
>>no one (to my knowledge) has yet done so, there must be something I'm
>>missing. :-)  Secure distribution and storage of the pad disk could be
>>difficult, but not insurmountable. The only hurdle that comes to mind is that
>>filling a 1.4 meg floppy, or even a 700k floppy, with a sequence of TRULY
>>random bits might be difficult and/or very time consuming.  Any thoughts?
>
>I think there's a general feeling that conventional cryptography
>(triple DES or whatever) is quite secure and therefore bulk one-time
>pads are unnecessary unless very high-powered opponents are after your
>information.  At that level, you have to start worrying about tempest
>attacks, kidnapping and torture of your couriers, truth serums, and
>all that kind of thing; computer algorithms are only a small part of
>your problem and you can build hardware sources of random bits without
>making a dent in the budget you need to handle the rest of the stuff.
>
>Nonetheless, I've thought about how you could conveniently get random
>bits on a conventional PC.  My current idea is to use the digitized
>audio input from a Soundblaster-type board with its analog input
>connected to a microphone (to pick up ambient noise) or radio receiver
>tuned between stations (more noise) as a source of entropy, and
>continually stir this entropy into a conventional cryptographic RNG
>such as the one in PGP or RSAREF.  I'd be interested in hearing what
>people think of this idea.  It seems to me to be a good way to get
>random bits for session keys and the like; I haven't really been thinking
>about one-time pads.

I was thinking along the same lines.  Since most (if not all) of the 
Macs in current production come with sound input capablities, this
would seem a logical source.  
 
Now, the question is "What sound source will provide us with the
randomness we need?"  I like the idea of using radio static, but I'm
not sure how random that would be.  Someone on the cypherpunks list
suggested compressing the sampled sound to increase entropy, which
sounds like it might work given the proper compression algorithm.
 
Feeding random sound to an RNG?  I don't know enough about RNGs
yet to comment (but I'm learning <g>), but that also SOUNDS
feasible to me.
 
                         Ken
                         
 
=============================================================================
Ken Kirksey            kkirksey@world.std.com            Mac Guru & Developer
-----------------------------------------------------------------------------
Among the many misdeeds of the British rule in India, history will look upon
the act of depriving a whole nation of arms, as the blackest.
                                                            - Mahatma Ghandi
 

