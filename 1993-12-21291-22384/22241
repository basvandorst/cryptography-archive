Newsgroups: comp.ai,comp.ai.nat-lang,comp.compression,sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!usc.edu!elroy.jpl.nasa.gov!decwrl!netcomsv!netcom.com!straits
From: straits@netcom.com (Stewart C. Strait)
Subject: Re: American language standardized dicti
Message-ID: <straitsCIJ6uL.20H@netcom.com>
Followup-To: comp.ai,comp.ai.nat-lang,comp.compression,sci.crypt
Organization: NETCOM On-line Communication Services (408 241-9760 guest)
X-Newsreader: TIN [version 1.2 PL1]
References: <gradyCI8qov.2uz@netcom.com> <jktaberCI8z9B.2AE@netcom.com> <1993Dec22.184440.13812@rchland.ibm.com>
Date: Fri, 24 Dec 1993 08:42:20 GMT
Lines: 34
Xref: msuinfo comp.ai:20153 comp.ai.nat-lang:1020 comp.compression:9988 sci.crypt:22241

Larry Loen (lwloen@rchland.vnet.ibm.com) wrote:

: I have a very workable approach for Simple Substitution that seems
: harder to describe than it is to do.  Works splendidly when there are
: word divisions present.  Requires a word list of as small as 10,000 words.

: Basically, you pick any two words, grab the pattern word list for those
: two words, and then figure out which _pairs_ of words jointly satisfy
: the simple substitution constraint.  If the pair of ct words is well-chosen,
: the number of surviving pairs is small, even for patterns with up to
: 100 words on each of the two lists.  Manual/computer aided trial finishes
: up most crypts in short order (only the very specially, weirdly constructed
: ones give any trouble and not even all of those).

: If your computer has more main store, a three word set can be used and this
: should work even better.  The performance of the two word case, with word
: divisions, is quite good, even with an anceint PC.

If you are really serious about breaking weirdly constructed crypts
(such as puzzles A-20 through A-25 in a typical issue of the Cryptogram)
you may want to try something like a five or six word case, after finding
a set of ciphertext words with many shared letters.  This usually works,
but the two big problems are getting too many solutions to even glance at,
or getting no good solutions.  Too many solutions may mean not enough
letters shared between the words, either because you (the solver) made
a bad choice of the word set, or because the constructor was shrewd enough
to leave you no good choices.  No solutions must mean a program bug or
a plaintext word not in your dictionary.  IMO, the two word case is
not at all enough for deliberately difficult plaintext.  Incidentally,
knowing the frequency of the words would help _enormously_ in the
case of too many solutions.
-- 
Stewart C. Strait
straits@netcom.com
