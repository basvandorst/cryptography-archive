Path: msuinfo!uwm.edu!math.ohio-state.edu!usc!rand.org!jim
From: jim@rand.org (Jim Gillogly)
Newsgroups: sci.crypt
Subject: Re: can ELM encoded messages be decoded without the key?
Date: 31 Dec 1993 04:10:14 GMT
Organization: Banzai Institute
Lines: 54
Message-ID: <2g08n6$ko2@rand.org>
References: <rmhubbrd.757286490@cwis> <jktaberCIvqqD.I8u@netcom.com>
NNTP-Posting-Host: mycroft.rand.org

>Roger Hubbard (rmhubbrd@cwis.unomaha.edu) wrote:
>: i have been using the mail package elm.  it has an encode...
>: anyone know of a way to get to the original mail messages?

In article <jktaberCIvqqD.I8u@netcom.com>,
   John K. Taber <jktaber@netcom.com> wrote:
>I think you want the Cryptanalyst's Work Bench (CWB) by Bob Baldwin...
>This is a guess, mind you, but it sounds like elm is using unix's 
>crypt(), a single rotor Enigma with 256 characters (instead of 26).  The 
>"rotor" is randomly seeded.

Nope -- I just checked the Elm source, and it uses 4 rotors, each with 94
positions (and a half rotor, like Enigma).  This would make it somewhat
nastier than Enigma, I suspect.  I'm not a CWB user, but my impression is
that it's useful only for Unix crypt (1).  The source for the Elm
algorithm gives this credit, for what it's worth:

  /** This is a heavily mangled version of the 'cypher' program written by
      person or persons unknown.

For those guessing that this is a trivial hack, I include another comment
from the source to delight and amuse you:

  /*
   * shuffle rotors.
   * shuffle each of the rotors indiscriminately.  shuffle the half-rotor
   * using a special obvious and not very tricky algorithm which is not as
   * sophisticated as the one in crypt(1) and Oh God, I'm so depressed.
   * After all this is done build the inverses of the rotors.
   */

Again, this looks nastier than Enigma, where they often had an idea of what
(some of) the rotors consisted of.

>Basically, you look for "isologs", identical phrases encrypted in...
>Finding two isologs, you now know the distance between the characters on 
>the "rotor".  In other words, you have part of the key.  This will help...
>...  It's really lots of fun.

Yes, sounds like great fun.  I'd suggest having a lot of messages in the
same key to start with, and a pretty good idea of the content, to give you
some help with plaintext cribs.  Deavours and Kruh's "Modern Cryptography
and Machine Cryptanalysis" should give you some good pointers to get you
on the way.  Not for the faint of heart, but probably not impossible for a
determined assailant with plenty of material and time.

If you just want the data, though, I suspect the best first try is to
write a password guesser.  Since Roger chose the original password
himself, he'll know the general structure he uses, giving him a good leg
up on the random incoming cryppie.  Elm uses 8-letter passwords (max) and
runs them through the UNIX password algorithm (crypt(3))... good luck!
-- 
	Jim Gillogly
	9 Afteryule S.R. 1994, 04:10
