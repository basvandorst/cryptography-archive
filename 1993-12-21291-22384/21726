Path: msuinfo!agate!howland.reston.ans.net!usc!elroy.jpl.nasa.gov!decwrl!hal.com!hal.com!howard
From: howard@hal.com (Howard Gayle)
Newsgroups: sci.crypt
Subject: Evading statistical tests for steganography
Date: 4 Dec 1993 16:32:31 GMT
Organization: HaL Computer Systems, Inc., Campbell, California
Lines: 46
Message-ID: <2dqe2v$97a@hal.com>
Reply-To: howard@hal.com (Howard Gayle)
NNTP-Posting-Host: hasse.hal.com
Summary: Use small fraction of potential hiding places; choose quasi-randomly.

There has been some discussion recently about statistical tests
to detect steganography.  Detection is easily avoided by using
only a small fraction of the available hiding places, and by
choosing them quasi-randomly.  A disadvantage of this approach is
that the stegotext becomes much larger than the cyphertext.

For example, suppose you have a cyphertext represented as an
array of m bits.  You want to hide it in a digital audio file
that has 16 bits per audio sample.  The least significant bit
(LSB) of each audio sample is a potential hiding place.  Pick an
audio file with at least 100*m audio samples.  Then, use a
quasi-random number generator to select audio samples from the
file without replacement.  As each audio sample is selected, hide
the next bit of cyphertext in that sample.  At the end you have
an audio file with fewer than 1% of the LSBs changed.  No
statistical test is going to be able to distinguish it from
unaltered audio files.

The seed for the quasi-random number generator can be anything
known to both sender and receiver.  The receiver's public key
would be a good choice.  The quasi-random number generator does
not need to be cryptographically strong.

This approach assumes that the distribution of 0 and 1 bits in
the cyphertext is about the same as the distribution in unaltered
hiding places.  This is probably not the case for the most
straightforward encodings.  For example, audio often contains
long silences, and images often contain large areas with the same
hue, saturation, and intensity.  A compression scheme will
eliminate this problem.  For example, consider a simple audio
compression scheme that transmits the difference between the
current audio sample value and the previous value.  The LSB of
each non-zero difference is a potential hiding place.

In practice you'd want to hide cyphertexts in compressed files
anyway, to reduce suspicion.  When most images are in, say, JPEG
format, a message using 24 bits per pixel will stand out.
--
Howard Gayle
HAL Computer Systems, Inc.
1315 Dell Avenue
Campbell, California 95008
USA
howard@hal.com
Phone: +1 408 379 7000 extension 1080
FAX  : +1 408 379 5022
