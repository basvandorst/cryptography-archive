Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!gatech!swrinde!sgiblab!sgigate.sgi.com!olivea!news.bu.edu!att-in!att-out!cbnewsh!cbnewsh.cb.att.com!wcs
From: wcs@anchor.ho.att.com (Bill Stewart +1-908-949-0705)
Subject: Re: CRC & MD5
Organization: NCR, an AT&T Company, Pleasanton CA
Date: Mon, 20 Dec 1993 03:11:23 GMT
Message-ID: <WCS.93Dec19221123@anchor.ATT.COM>
In-Reply-To: bontchev@fbihh.informatik.uni-hamburg.de's message of 14 Dec 1993 13:21:38 GMT
References: <5233@teslab.lab.oz.au> <2ekel2$d43@rzsun02.rrz.uni-hamburg.de>
Sender: news@cbnewsh.cb.att.com (NetNews Administrator)
Nntp-Posting-Host: anchor.ho.att.com
Lines: 40

In article <2ekel2$d43@rzsun02.rrz.uni-hamburg.de> bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev) writes:
   Jacob John (jacob@teslab.lab.oz.au) writes:
   > Is there any measure for the level
   > of security acheived in using a MD5 function. How many bits in the 
   > hash would make it computationally infeasible (in a practical purpose)
   > to produce two messages with the same hash function. Also what sort 
   MD5 has a constant number of bits - 128.

There are two kinds of attacks you can do with hash functions.
One requires creating a message M' that has the same hash value as
an existing message M.  For a good hash function (MD5 appears to be good),
the only way to solve this is brute force, rather than reverse-engineering.
This takes 2**(number of bits in hash) tries; for MD5, this is 2**128,
which is clearly secure.  For messier hash functions, including MD5,
there's also no particular guarantee that there are more than N
input strings that hash to a given value (N=0 and N=1 are the
main interesting values), though there probably are.
If you *do* have a guarantee, the hash function is probably simple
enough that you can easily find the input string hashing to that value.

The other attack requires finding two messages M1 and M2 that have the
same hash value, and doing something like sending M1 and later
claiming you sent M2.  This is a classic "birthday problem", and takes
an average of SQRT(2**N_bits_in_hash) tries, i.e. 2**(N/2).  
To be feasible, you not only need to calculate the hashes, you need to
store them so you can tell if you've got a match.  For MD5, this is
2**64 tries, and requires storing somewhere between 24 and several
hundred bytes per try; since large-capacity tape drives hold between
2**32 and 2**40 bytes per tape, this attack is currently quite infeasible,
but technology may make it feasible in the next few hundred years.

To be useful, this attack also requires that the two messages you find
be meaningful, which is problem-dependent (64-bit long numbers may not
be believable bank account balances, for example :-), but they'll do
fine as "random number included for verification" or whatever.)
--
# Bill Stewart       NCR Corp, 6870 Koll Center Pkwy, Pleasanton CA 94566
# Email: bill.stewart@pleasantonca.ncr.com billstewart@attmail.com
# Phone: 1-510-484-6204 Beeper: 1-510-224-7043
# Pay no attention to the man behind the curtain!
