Path: msuinfo!agate!howland.reston.ans.net!usc!rand.org!jim
From: jim@rand.org (Jim Gillogly)
Newsgroups: sci.crypt
Subject: Re: more computer shopper challenge
Date: 22 Nov 1993 16:37:32 GMT
Organization: Banzai Institute
Lines: 37
Message-ID: <2cqpsc$htk@rand.org>
References: <752376077snx@netacsys.com> <1993Nov8.172303.18937@convex.com> <2bojud$62l@aja.rand.org> <PCL.93Nov22150643@rhodium.ox.ac.uk>
NNTP-Posting-Host: mycroft.rand.org

In article <PCL.93Nov22150643@rhodium.ox.ac.uk>, Paul C Leyland <pcl@ox.ac.uk> wrote:
>I take the view that if you accept the challenge, like Gollum, then it
>is fair.  If you don't accept the challenge, what does it matter whether
>it is fair or not?

Yeah, I've spent time on it also, so I've accepted it also.

>Obcrypt:
>
>I looked for periodicities in the two files.  First, I looked for
>coincidences between shifted versions of each file.  There was nothing I
>regarded as significant, though SECRT2 shifted 31 characters had a

I compared the two files also, XORing them against each other at each
offset (kappa test).  I also found no significant overlap.  We can deduce
something from the negative information: either (a) the two files were
encrypted with different keys, or (b) there is feedback between
characters, like the variation proposed by John Smolin, but applied to the
previous character instead of the curreent one.  Further, if they were
different keys, the keystream doesn't overlap during the course of these
messages.

One wouldn't expect it to, but with a lot of messages in a mere 2^24
key space, the birthday paradox will give us an overlap somewhere before
long, even with different keys.  Two messages isn't quite enough for a
birthday attack to kick in. :-)

My current guess is that it's option (a): different keys for the two
messages, using a system like Smolin suggested (4 bits select how much to
shift the 32-bit word, with a botch that sometimes shifts all the bits
away).  The problem I have with it is that we don't see enough hex 21
characters -- if it's really 4 equally likely bits for the shifter, then
0x01 should be half as common a mask as 0x00, shouldn't it?

-- 
	Jim Gillogly
	Mersday, 2 Foreyule S.R. 1993, 16:37
