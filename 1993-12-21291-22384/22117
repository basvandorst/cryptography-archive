Path: msuinfo!agate!sprite.berkeley.edu!shirriff
From: shirriff@sprite.berkeley.edu (Ken Shirriff)
Newsgroups: sci.crypt,talk.politics.crypto,alt.cd-rom
Subject: Re: Question: Cd unlocking- is this a simple crack for it?
Date: 19 Dec 1993 23:26:30 GMT
Organization: University of California, Berkeley
Lines: 24
Message-ID: <2f2nv6$t70@agate.berkeley.edu>
References: <2evtno$mpl@fitz.TC.Cornell.EDU> <2f2j4i$s3a@nntp.ucs.ubc.ca> <2f2kki$ao4@fitz.tc.cornell.edu>
NNTP-Posting-Host: sassafras.berkeley.edu
Xref: msuinfo sci.crypt:22117 talk.politics.crypto:1731 alt.cd-rom:18386

In article <2f2kki$ao4@fitz.tc.cornell.edu> seth@alchemy.TN.Cornell.EDU (Seth Cohn) writes:
>I've played with DES a bit... and from the little I've played,
>if I had the encrypted text and decrypted text, finding the key didn't
>seem that hard.. you only need to check the first small bit of text
>each time... What am I missing here? checking keys by rout, would take a 
>while, but hacking backwards might be faster.

Well, how about you take some encrypted text and decrypted text, try to find
the key, and get back to us when you're done?

While you're waiting for that to finish, you could do a few calculations.
a) How many key bits does DES have?		Hint: 56
b) How many different keys is this to test?	Hint: 7x10^16
c) How long will that take?			Hint: at a million tests per
							second, 2000 years.

In other words, you can't easily figure out the key from the text; that's
called resistance to a known plaintext attack and is a property of encryption
algorithms such as DES.  See the sci.crypt FAQ for more information.

(Of course, if Seth has enough custom parallel hardware, he will be able
to determine the key much faster then 2000 years.)

Ken Shirriff			shirriff@cs.Berkeley.EDU
