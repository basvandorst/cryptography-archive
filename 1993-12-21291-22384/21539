Newsgroups: sci.crypt
Path: msuinfo!agate!headwall.Stanford.EDU!nntp.Stanford.EDU!kocherp
From: kocherp@leland.Stanford.EDU (Paul Carl Kocher)
Subject: Re: Norton Diskreet (Security overview)
Message-ID: <1993Nov29.213903.6693@leland.Stanford.EDU>
Sender: news@leland.Stanford.EDU (Mr News)
Organization: DSG, Stanford University, CA 94305, USA
References: <1993Nov18.234332.26656@leland.stanford.edu> <2cv82h$ltd@fido.asd.sgi.com>
Distribution: na
Date: Mon, 29 Nov 93 21:39:03 GMT
Lines: 102

In article <2cv82h$ltd@fido.asd.sgi.com> nelson@bolyard.wpd.sgi.com (Nelson Bolyard) writes:
>In article <1993Nov18.234332.26656@leland.stanford.edu>, Paul Carl Kocher 
>>[...]  The [key setup] algorithm is:
>>
>>      unsigned char DESKey[8] = { 0,0,0,0,0,0,0,0 };
>>      for (n = 0; n < password_length; n++)
>>          DESKey[n % 8] ^= toupper(password[n]);
>>                 /* toupper converts lowercase ascii to uppercase */
>>                 /* (n % 8) equals (n mod 8) */
>>
>>To see just how bad this is, consider a password containing just
>>letters that is known to be 16 bytes long.  
>
>While useful for illustration, this constraint is not a property of the 
>software described in your "overview".

I'm not exactly sure what you're saying here, but the actual password 
doesn't have to be 16 to exploit the weakness -- it just makes the
example a bit simpler.  To reduce the keyspace down to 2^32 for
alphabetic passwords, all you have to know is the password length
(mod 16), or you can try all 16 values for the length mod 16.

>>This *should* give
>>an effective keyspace significantly above that of the DES
>>key (26^16 = 4.3 x 10^22, while the 56-bit DES key has 2^56 =
>>7.2 x 10^16 possibilities).  
>
>Of course, if it really is using DES, then it cannot have a keyspace 
>larger than 2^56.

The point is that the "information content" of the user's password
is more than adequate to fully randomize the DES key.

>> However for this password, the
>>keyspace is actually only 32 bits (4 billion passwords):
>>
>>  - The total keyspace in DESKey is 64 bits.
>>  - The most significant bit (value 128) is zero in each password
>>       byte, and consequently is zero in each byte the DES key,
>>       reducing the keyspace to 56 bits.
>>  - The bit with value 64 is set to 1 for all capital letters, lowering
>>       the keyspace to 48 bits.
>
>Yes, and if there are exactly 16 letters, as you required above, 
>then the "bit with value 64" in each of the first 8 bytes of password 
>will xor with the same bit in each of the second 8 bytes of password, 
>causing this bit to have the value zero in each of the 8 bytes of DESKey.
>
>If the key has more, or fewer, letters than 16, some of these bits will 
>be 1, others zero, as a function of the length of the password.  If any
>of the password characters are not letters, they will have a zero value
>for the "bit with value 64".

I figured this was obvious, but several people have asked for additional
clarification, so I guess I should have explained in more detail...

>>  - The bit with value 32 is set to 0 in all capital letters, lowering
>>       the keyspace to 40 bits.  (If the password length isn't known,
>>       there are 16 different possible combinations for the bit in 
>>       this position if the password only contains letters.)
>
>I think you meant to apply this last parenthetic remark to the "bit with
>value 64", since xor'ing any number of zero bits changes nothing.

You're right, obviously.  Sorry about that...

>>A PC is more than adequate to crack such passwords.  
>
>However, note that Norton Diskreet is not limited to such passwords.
>That is, Norton Diskreet will accept passwords of lengths other than 16,
>and will (as I recall) accept passwords containing characters other than 
>letters, e.g. numerals.  
>
>So the total key-space of Norton Diskreet should be nearly 36 bits when only
>letters are used, and is possibly as high as 48 bits when non-letters are 
>also used.  The loss of the least-significant bit is really the major loss.

You can even use the ALT key to enter extended ASCII characters, making
it possible to enter any DES key if you sit down and figure out a
combination of characters that will produce that key.  Still, this
doesn't doesn't change the fact that thousands of people have been
told they're getting DES-quality encryption but are actually getting
only minimal security.

Unfortunately DiskReet isn't the only commercial data security
protect with problems like this.  In fact, of the products I've
been hired to do reports on, only a very few have been completely
free from security weaknesses and a surprising number turn out to
be breakable.

>The one detail of fact that would be useful to others would be the 
>initial permutation (table) used by ND.

I don't remember the permutations, but findint them is easy.
Just create a zero key (e.g. enter 16 identical letters for 
the password) then simply compare the output produced by 
encrypting/decrypting known blocks against a standard DES 
implementation.  Because the zero key is weak, it's easy to find
initialization vectors as well.

-- Paul Kocher
kocherp@leland.stanford.edu
