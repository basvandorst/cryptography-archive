Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!spool.mu.edu!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!mnemosyne.cs.du.edu!nyx10!colin
From: colin@nyx10.cs.du.edu (Colin Plumb)
Subject: Re: Speed of DES/IDEA implementations
Message-ID: <1993Dec7.002435.24505@mnemosyne.cs.du.edu>
X-Disclaimer: Nyx is a public access Unix system run by the University
 	of Denver for the Denver community.  The University has neither
 	control over nor responsibility for the opinions of users.
Sender: usenet@mnemosyne.cs.du.edu (netnews admin account)
Organization: Nyx, Public Access Unix at U. of Denver Math/CS dept.
References: <2dvsed$7ob@senator-bedfellow.mit.edu>
Date: Tue, 7 Dec 93 00:24:35 GMT
Lines: 29

In article <2dvsed$7ob@senator-bedfellow.mit.edu>,
Nikos I Nassuphis <ninassup@ATHENA.MIT.EDU> wrote:
>I recently looked into the performance of DES/IDEA implementations
>on Intel architectures.

I have an 8086 Assembler version that does IDEA CFB at 100K/sec
(almost exactly!) on a 386SX.  It may have been 25 MHz, but I
think it was 20 MHz.  (I haven't got the machine to re-test.)

Surprisingly, moving to a 486 produces little speedup.  Since it
is almost entirely in registers, a wider data bus has little
effect.

It is available from Bruce Schneier's Applied Cryptography
disks.  An early version is distributed with PGP 2.3a.

It is fully re-entrant, large-model code.  Source, destination, and key
may be in different segments.  The source and destination may be the
same buffer.  Bytes are swapped as in the reference IDEA code and PGP
conventions for portability.

(That is an average for encryption and decryption on 64K blocks.
Nothing is done with the data.  Decryption is a few cycles slower.)

It is optimized for an 8086, and although I'm not positive, it's
close enough that I can credibly claim it's optimal.  Certainly
I would be very interested in hearing about speedups.
-- 
	-Colin
