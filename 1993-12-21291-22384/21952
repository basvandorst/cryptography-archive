Newsgroups: comp.security.misc,sci.crypt
Path: msuinfo!agate!ames!sgi!geezer.denver.sgi.com!rhyolite.wpd.sgi.com!calcite!vjs
From: vjs@calcite.rhyolite.com (Vernon Schryver)
Subject: Re: Proposal for new login authentication method
References: <phrCHwp09.8JA@netcom.com> <2efc9gINN3gb@hancock.cc.williams.edu> <1993Dec12.180912.12713@lokkur.dexter.mi.us>
Organization: Rhyolite Software
Date: Sun, 12 Dec 1993 23:00:54 GMT
Message-ID: <CHy2LJ.5J3@calcite.rhyolite.com>
Lines: 47
Xref: msuinfo comp.security.misc:6849 sci.crypt:21952

In article <1993Dec12.180912.12713@lokkur.dexter.mi.us> scs@lokkur.dexter.mi.us (Steve Simmons) writes:
>>What if I am on your local subnet and can cause some collision at
>>"just the right time?"  Conceivably, I could "hear" your password but
>>the host you're logging in to would not, so that I'd have a password
>>for later use, if you decided next to try another password.  It'd be
>>nice if this sort of problem could be avoided somehow.
> ...

>I won't say it's impossible.  I doubt there's any hardware which will
>exist in the near future which can do it, tho.

You don't need any special hardware for that attack.  You need only ensure
that the server does not listen to the client's packet.  It is sufficient
to kill the TCP connection as far as the server is concerned.  So consider:

    1. monitor packets until you see a client start to log in to the
    	server.

    2. watch for the equivalent of "password:" from the server.

    3. immediately transmit your TCP ACK to the server acknowledging 
    	the TCP bytes up through the ":", and also include a bunch
    	of other data.  50 or 60 control-U's, backspaces, @'s, or
    	other editing characters honored by the server while collecting
    	passwords would be the best choice.

    4. listen for the real password from the client.  Because the
    	server will have moved the TCP window, the server will
    	ignore the data from the client, although it may respond
    	with a TCP ACK at what it thinks is the correct start of
    	the windo.

    5. use the real password, pirating the TCP connection.
    	You'll have to be quick, since eventually the client will
    	kill the connection.  Also, without care, the client
    	may see the output of whatever you're doing, So it would be 
    	smart to immediately ask for a new batch of passwords.

Yes, this attack depends on being able to use a monitor that hears both
sides of the conversation, and on your code to send arbitrary MAC (e.g.
Ethernet) packets.

Moral: (even if I'm wrong and this attack doesn't work) There Aint No Such
Thing As A Substitute For End-To-End Encryption.


Vernon Schryver    vjs@rhyolite.com
