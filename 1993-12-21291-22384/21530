Path: msuinfo!agate!howland.reston.ans.net!EU.net!ieunet!ieunet!vax1.dcu.ie!75001969
From: 75001969@vax1.dcu.ie
Newsgroups: sci.crypt
Subject: SHS Encryption
Message-ID: <1993Nov29.102059.114@vax1.dcu.ie>
Date: 29 Nov 93 10:20:58 GMT
Lines: 20

Someone mentioned using SHS for Encryption

Here's one possible configuration:- Use your Diffie-Hellman (or whatever)
512 bit key as Initial input the the basic SHS function.

Take the 160-bit output and divide it into three parts. A 32-bit part is 
discarded. A 64-bit part is XORed with the plaintext to produce the 
ciphertext. A further 64 bit part is XORed with this Ciphertext, and the
result shifted into the Input register, moving the other bits to the left,
the top 64-bits 'falling off'. SHS is then activated again, etc.

This yields a kind of Error Propagating CFB. A known/chosen plaintext attack
reveals only partial output of SHS, and nothing useful concerning the input,
so an attack on SHS does not appear possible.

A variation would be to hold 256 bits of the input constant, and use only
the lower 256 bits as a shift register.

M. Scott

