Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!usc!news.service.uci.edu!unogate!mvb.saic.com!ast.saic.com!actd!agnew
From: agnew@actd.actd.saic.com (Bob Agnew)
Subject: Re: DH Key exchange and MD5 bit distribution?
Message-ID: <1993Nov22.155711.16792@ast.saic.com>
Sender: news@ast.saic.com
Reply-To: agnew@actd.actd.saic.com
Organization: Science Applications International Corporation
References: <pwd-191193161943@thunder.apple.com>
Date: Mon, 22 Nov 1993 15:57:11 GMT
Lines: 74

In article 191193161943@thunder.apple.com, pwd@apple.com (Patrick W. P. Dirks) writes:
>Hi,
>
>I'm considering a system to set up session keys between two parties
>communicating over an open network using the Diffie-Hellman key exchange
>method where the two sides A and B, having previously agreed to a modulo N
>and a generator g, each pick a random number, say a and b, and send g**a
>mod N and g**b mod N to the other side, respectively.  A then computes
>[g**b]**a mod N (since A knows a) and B computes [g**a]**b mod N (since B
>knows b), each one arriving at the session key K = g**a**b mod N without
>ever sending K, a, or b over the net.
>

This sounds like Dr. Jim Omura's "SEEK" (Secure Exchange of Encrypted Key)
algorithm to me. I've lost the original paper over the years. Anyone out there still have it?


>Two questions:
>
>(a) Are there any new weaknesses known about this scheme [i.e. are there
>any known approaches that don't require the computation of log base g of
>g**a]?
>
>(b) Does anyone know how large a and b need to be to ensure reasonably
>security given today's processors [i.e. for how many bits does the discrete
>logarithm problem become sufficiently difficult], and
>

Here's some hardware designed for that algorithm from a response to a post a few months
ago for RSA hardware.

>The name of the company is Cylink.  We have two general purpose devices
>or performing modular arithmetic.  The first handles operands up to 
> 518-bits in length.  The second handles operands up to 1028-bits in length 
>nd may be cascaded to handle moduli up to 16,384 bits long.
>or a 1028-bit modulus, a single exponentiation with randomly chosen operands
>takes approximately 550 milliseconds when using a 12 MHz clock.  We do,
>however, have parts that run up to 30 MHz if you're in a real hurry :-)
>
>If anyone wants more info, email or call me directly at Cylink.
>
>John Kennedy
>jkennedy@cylink.com
>Cylink Corporation
>voice (408) 735-5885

The 550 ms number will give you an estimate for brute force searches.

My guess was 1024 bits or 300 digits about ten years ago, but some
thought that to be an overkill. Today, I'd insist on more but that's just
seat of the pants.


>(d) given this multi-hundred bit K, what's a good way to distill this into
>a smaller session key, like a 56-bit DES key?  I was thinking of using MD5

There is no good way!!!!!

>on K first and then picking some part of the digest.  Is there any reason
>to favor any part of the digest result?  The first 56 bits?  The last? 
>Roughly every other bit?  Is any part of the digest likely to be more or
>less well suited as a random session key, given that the digest is probably
>going to be created from only a few hundred bits of data to begin with?
>
>Thanks for any insights,
>-Pat Dirks.



---
"Those who cannot cope with mathematics are not fully human. At best they
are tolerable sub-humans who have been taught to bathe and not make messes
in the house."  From the Notebook of Lazarus Long (Robert Heinlein)

