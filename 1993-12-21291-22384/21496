Newsgroups: sci.crypt
Path: msuinfo!agate!spool.mu.edu!wupost!usc!elroy.jpl.nasa.gov!decwrl!netcomsv!netcom.com!jktaber
From: jktaber@netcom.com (John K. Taber)
Subject: Re: PC Based One-Time Pad
Message-ID: <jktaberCH65n3.GK6@netcom.com>
Organization: NETCOM On-line Communication Services (408 241-9760 guest)
X-Newsreader: TIN [version 1.1 PL8]
References: <CH24Dp.1yn@world.std.com>
Date: Sat, 27 Nov 1993 21:13:51 GMT
Lines: 64

Ken B Kirksey (kkirksey@world.std.com) wrote:
: While I was reading though _Applied Cryptography_ last night, a thought
: struck me (no damage):  Why hasn't anyone come up with a good Mac or PC based
: One-Time Pad system.  I'd envision it working something like this:

:    * A 1.4 Meg floppy with a single file, or multiple files, of random bits.
:      2 copies, one for sender and one for reciever.

:    * The first few bytes of the cyphertext file will contain the name of
:      the pad file used, possibly the volume name where the pad file is
:      stored, and the starting offset within the pad file.

: It seems like this would be a fairly easy system to implement, but since
: no one (to my knowledge) has yet done so, there must be something I'm
: missing. :-)  Secure distribution and storage of the pad disk could be
: difficult, but not insurmountable. The only hurdle that comes to mind is that
: filling a 1.4 meg floppy, or even a 700k floppy, with a sequence of TRULY
: random bits might be difficult and/or very time consuming.  Any thoughts?


:                                 Ken

: =============================================================================
: Ken Kirksey            kkirksey@world.std.com            Mac Guru & Developer
: -----------------------------------------------------------------------------
: Among the many misdeeds of the British rule in India, history will look upon
: the act of depriving a whole nation of arms, as the blackest.
:                                                             - Mahatma Ghandi

Well, I can state why I have not implemented a one-time-pad.  I have a 
nice lil .com program for my old pc that samples the microsecond clock 
per keystroke.  I type from a newspaper column, and so far as I can tell, 
the output is random.  These random hex values are saved in a file for my 
onetime pad.  

The 1st problem is security of the one-time pad.  I'm just an individual, 
so I have NO protection from legal or illegal search and seizure.  
Basically, if anybody wanted my key, they would have it.  

The second problem is, the quantity of pads.  You can only use a pad 
once.  If you use it twice, it isn't a one-time pad.  So, I would need 
quantities of pads.  Well, if I can't protect one pad, how can I protect
scores of them?

The third is indexing pads to files.  So, I have oodles of encrypted 
files, where oh where is my pad for it?  And if I decrypt it, and make 
minor changes to the plaintext I have to re-encrypt it with a new pad.

There are a lot of practical problems in using encryption.  So, I prefer
a very simple system with a key that I can keep in my head.  That is 
secure from search and seizure, though perhaps not from rubber-hose 
cryptanalysis.  PGP is fine for my purposes.  So is DES with a front end 
that hashes character strings into a DES key.

BTW, somebody once urged "shocking" keys.  I think short poems of your 
own creation, never published and never to be published, make good keys.  
Poetry predates writing and seems designed for memory.  Something like 
haiku seems good.  Or a little "poeme en prose".  It pleases me to 
imagine that some keys will be much better reading than the messages they 
hide.
-- 
John K. Taber                        jktaber@netcom.com
=======================================================
Virtual Morality!
