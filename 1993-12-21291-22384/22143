Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!swrinde!elroy.jpl.nasa.gov!decwrl!netcomsv!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: Crypto review of Secure Drive wanted
Message-ID: <phrCICHDH.63K@netcom.com>
Organization: Netcom - Online Communication Services (408 241-9760 guest)
References: <01H6NEY6KGCI937BF4@delphi.com> <TSOS.652.2D15C7D4@uni-duesseldorf.de>
Date: Mon, 20 Dec 1993 17:46:28 GMT
Lines: 37

In article <TSOS.652.2D15C7D4@uni-duesseldorf.de> TSOS@uni-duesseldorf.de (Detlef Lannert) writes:

>- the eight-byte block containing the sector address could be XORed with 
>  a hash of the keyphrase to create an IV (which is -- hopefully -- never 
>  directly exposed to an attacker anyway); 

A hash of the passphrase should *never* be kept around, for reasons
already discussed.

>(*) I like this idea (tm) very much. Precautions should be taken, however, 
>    that not the whole disk is lost when a read error occurs in the area 
>    where the encrypted random key is stored. Therefore it might be useful 
>    to store it repeatedly at various places on the disk. The "panic key" 
>    would then affect the partial key in the CMOS RAM ("KR") rather than 
>    the keyfield on disk ("KF"); when generating "KR", "key escrow" 
>    floppies would be created at the same time so that the data can 
>    survive a CMOS battery failure. [Gosh, I shouldn't have used that 
>    expression! ;-) ] 

It makes sense to let the panic button affect only KR, if KR is in use,
but paranoid users should still have the option of also deleting KF.
The panic button could even reformat the whole partition if it has
enough time to do this, but it can delete KF and/or KR very quickly first.
Whether this is desirable depends on which is more important to you:
data security or data integrity.  Different users needs will be
different and they would want to set up the options in different ways.

Normally though I don't think KR should be ever be written to disk,
especially in unencrypted form.

Since KR is user settable, nothing stops the user from generating it
from a pass phrase or some other source rather than randomly.  He
could use a very long, super secret pass phrase, since KR rarely needs
to be entered.  The normal pass phrase would be shorter and more
convenient to type.  The longer pass phrase could still be committed
to memory or concealed more readily than a bunch of random hex numbers
could be.
