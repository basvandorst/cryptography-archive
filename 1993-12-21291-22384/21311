Path: msuinfo!uwm.edu!cs.utexas.edu!uunet!news.sprintlink.net!clark.net!clark.net
From: barryh@pro-cynosure.clark.net (Barry Herman)
Newsgroups: sci.crypt
Subject: New Cryptosystem?
Date: 20 Nov 1993 17:31:53 -0500
Organization: Cynosure BBS - Email and newsgroups at 410-549-2584
Lines: 163
Sender: umdss@clark.net
Distribution: world
Message-ID: <kk61468@pro-cynosure.clark.net>
NNTP-Posting-Host: clarknet.clark.net
Mime-Version: 1.0
Content-Type: text
Content-Transfer-Encoding: 7bit

  A friend of mine recently created the following algorithm.  When he
explained the system, which he calls "unbreakable", it seemed too simple to
be foolproof. Please take a look at it and tell us what you think.
(the source is in Clarion)

         PROGRAM
 
             INCLUDE('STD_KEYS.CLA')
             INCLUDE('CTL_KEYS.CLA')
             INCLUDE('ALT_KEYS.CLA')
             INCLUDE('SHF_KEYS.CLA')
 
REJECT_KEY   EQUATE(CTRL_ESC)
ACCEPT_KEY   EQUATE(CTRL_ENTER)
TRUE         EQUATE(1)
FALSE        EQUATE(0)
 
 
SCREEN       SCREEN       WINDOW(21,76),AT(3,3),HUE(14,1,3)
               ROW(1,1)   STRING('IM{74};')
               ROW(2,1)   REPEAT(19);STRING(':<0{74}>:') .
               ROW(21,1)  STRING('HM{74}<')
               ROW(2,23)  STRING('Data Processing Directions, Ltd.')
               ROW(3,26)  STRING('Sample Encryption Algorythm')
               ROW(5,25)  STRING('    '),HUE(15,1)
               ROW(10,38) STRING('/'),HUE(15,1)
               ROW(20,2)  STRING('Ctrl-Esc to Exit'),HUE(15,1)
               ROW(5,30)  STRING('Key:'),HUE(15,1)
                 COL(34) 
ENTRY(@S10),USE(IKEY),HUE(1,1),SEL(1,1),OVR,REQ,NUM  |
                            LFT
               ROW(8,29)  STRING('File:'),HUE(15,1)
                 COL(34) 
ENTRY(@S15),USE(FNAME),SEL(11,0),OVR,REQ,NUM,LFT,UPR
               ROW(9,35)  MENU,USE(ACT),REQ
               ROW(10,34)   STRING('Read'),SEL(11,0)
                 COL(39)    STRING('Write'),SEL(11,0)
             .            .
OKEY     STRING(80)
IKEY     GROUP
IBYTE    BYTE,DIM(80)
         .
ILEN     BYTE
FNAME    STRING(80)
ACT      STRING(1)
 
FIL      DOS,NAME(FNAME),PRE(F)
RECORD   RECORD
DATA     GROUP
IDB      BYTE,DIM(65)
         ...
 
 
DISPL        SCREEN       WINDOW(25,80),AT(1,1),HUE(15,4,1)
               ROW(1,30)  STRING('ENCRYPTION FILE DISPLAY'),HUE(15,4)
                          REPEAT(20),INDEX(INX)
               ROW(2,9)     ENTRY(@S65),USE(ADATA),HUE(15,1),OVR,NUM
                          .
               ROW(25,34) PAUSE('CONFIRM'),USE(?PAUSE),HUE(31,1)
             .
INX      SHORT
ARRAY    GROUP
ADATA    GROUP,DIM(30)
ADB      BYTE,DIM(65)
         . .
X        SHORT
Y        SHORT
Z        SHORT
 
         CODE
         CLEAR(ARRAY)
         LOOP
            CLEAR(IKEY);CLOSE(DISPL)
            DO PGM
            IF KEYCODE()=REJECT_KEY;DO ENDER;END
         END
 
 
PGM      ROUTINE
         OPEN(SCREEN)
         LOOP
            ALERT;ALERT(REJECT_KEY)
            ACCEPT;IF KEYCODE()=REJECT_KEY THEN EXIT;END
            CASE FIELD()
               OF ?ACT
                  IF ACT='R' THEN
                     CLOSE(FIL);OPEN(FIL)
                     IF ERROR();BEEP;SELECT(?FNAME);CYCLE;END
                     BREAK
                  ELSE
                     BREAK
                  END
            END ! CASE
         END ! LOOP
         ILEN=LEN(CLIP(IKEY))
         LOOP ILEN=ILEN+1 TO 80
            IKEY=SUB(IKEY,1,ILEN-1)&CHR(ILEN)
         END
         ILEN=80
         IF ACT='R'
            DO DECRYPT
         ELSE
            DO ENCRYPT
         END
         CLOSE(FIL)
 
ENCRYPT  ROUTINE
         INX=1;OPEN(DISPL)
         LOOP INX=1 TO 20;DISPLAY;END;INX=1
         LOOP
            ALERT;ALERT(REJECT_KEY)
            ACCEPT;IF KEYCODE()=REJECT_KEY;EXIT;END
            IF FIELD()=?PAUSE
               CREATE(FIL);IF ERROR();STOP(FNAME&' '&ERROR());EXIT;END
               P#=0
               LOOP INX=1 TO 20
                  LOOP X=1 TO 65
                     P#+=1;IF P#>ILEN;P#=1;END
                     P1#=P#+1;IF P1#>ILEN;P1#=1;END
                     E#=IBYTE[P#]+ADB[INX,X];IF E#>255;E#-=255;END
                     IDB[X]=E# ! ENC BYTE
                     E#=IBYTE[P1#]+ADB[INX,X];IF E#>255;E#-=255;END
                     IBYTE[P1#]=E# ! MOD KEY
                  END
                  ADD(FIL);IF ERROR();STOP(FNAME&' '&ERROR());EXIT;END
               END ! LOOP
               BREAK ! OUT OF MAIN LOOP
            END ! IF
         END ! LOOP
         CLOSE(FIL);CLOSE(DISPL)
DECRYPT  ROUTINE
         INX=1;OPEN(DISPL);CLEAR(ARRAY)
         SET(FIL);P#=0
         LOOP INX=1 TO 20
            NEXT(FIL)
            LOOP X=1 TO 65
               P#+=1;IF P#>ILEN;P#=1;END
               P1#=P#+1;IF P1#>ILEN;P1#=1;END
               E#=IDB[X]-IBYTE[P#];IF E#<0;E#+=255;END
               ADB[INX,X]=E#;E#=ADB[INX,X]+IBYTE[P1#]
               IF E#>255;E#-=255;END
               IBYTE[P1#]=E#
            END
            DISPLAY
         END ! LOOP
         CLOSE(FIL)
         BEEP;ASK
         CLOSE(DISPL)
         EXIT
 
ENDER    ROUTINE
         CLOSE(SCREEN);SETHUE(,,0)
         RETURN

Thanks,
    Barry
+----------------------------------------------- (\ ------------------------+
|            My address:            |             \\_ _/(\                  |
|   barryh@pro-cynosure.clark.net   |               0 0 _\)___              |
|         (Barry C. Herman)         |             =(_T_)=     )*            |
|      #include <disclaimer.h>      | . .. . .  .   /"/   (  /   .. ...  .. |
+------------------------------------------------- <_<_/-<__| --------------+

