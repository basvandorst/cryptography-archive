Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!newsserver.jvnc.net!yale.edu!cs.yale.edu!news-mail-gateway!daemon
From: WHMurray@DOCKMASTER.NCSC.MIL
Subject: Proposal for new login authentication method
Message-ID: <931212201344.892351@DOCKMASTER.NCSC.MIL>
Sender: WHMurray.ISSA@DOCKMASTER.NCSC.MIL
Organization: Yale CS Mail/News Gateway
Date: Sun, 12 Dec 1993 20:13:00 GMT
Lines: 76


              A SIMPLE CHALLENGE RESPONSE SYSTEM

In "Proposal for new login authentication method" Paul Rubin
proposes a one time pad of passwords as an alternative to reuseable
passwords (vulnerable to password grabbers) and to a full blown
automated challenge response system (more expensive than his
alternative).   While I am not aware of any more problems with his
system than he notes, I would like to suggest a compromise.

Back in the olden days we used typewriter style or teletype style
terminals with paper.  The effect was when you entered the password
it was recorded on the paper.   Scavenging wastebaskets in terminal
rooms (we did not have our own in those days) was often an effective
and efficient form of attack.

The most common method for preventing the disclosure and reuse of
the password was called "blotting."  Noise characters were printed on
the paper in the location where the password would be entered
(carriage return but no line feed.)

However, there was one more elegant and effective solution that was
used.  It was a simple challenge response system.  The user was
given a ten character password.  At logon time he was given a
challenge of the form NN or NNN where each N corresponded to a
position in the ten character password.  The expected response was
of the form CC or CCC, the characters from the corresponding
positions of the password.

The beauty of the system was that an attacker had a very low
probability of guessing the proper response on the first try, and an
eavesdropper would have to watch a large number of exchanges in
order to improve his chances very much.  That is, while the password
was reuseable, only a small portion of it was disclosed on each
exchange.  While the expected response is short, it changes with
each trial.  Thus, the space is much larger than is suggested by the
short length.

(Perhaps one of the mathematicians out there would be good enough
to calculate for us how many trials, for various choices of challenge
size and character sets, an attacker has to watch to have a fifty-fifty
chance of guessing the correct response.   For our purposes, it is
sufficient that it is more than a few.)

The limitations are obvious.  First, the effective password space for
each attack trial is much smaller than that allowed (but rarely used) in
most modern systems.  Thus, the probability that a guess is correct is
the number of characters in the reponse raised to the power of the
characters in the set divided by two.  On the other hand, a correct
guess only marginally increases your chances on the second trial,
and an incorrect guess increases it hardly at all.

(Some of you may recognize the similarity to the game "mastermind."
Even with a binary character set, it is a challenging game even
though computationally trivial.)

While both effective and efficient, the method was never widely used;
with the advent of display based terminals, it disappeared completely.

In the face of password grabbers, perhaps it is time to ressurect it.
While it is no where near as secure as a full-blown automated
challenge-response system, it is more resistant to password
grabbers than simple reuseable passwords.  In combination with
such mechanisms as Capek's Inductor (slowing response time
between failed attempts) it can have a high cost of attack.  It can be
either automated or manual, in place of or in addition to the reuseable
system, installed at the system layer or the user application layer,
used all of the time or only when logging on via an untrusted network.

While it is obviously not as secure as the OTP of passwords
netcom.com (Paul Rubin), it is easier to use.  It is
certainly more secure than what we are doing now.

William Hugh Murray, Executive Consultant, Information System Security
49 Locust Avenue, Suite 104; New Canaan, Connecticut 06840                
1-0-ATT-0-700-WMURRAY; WHMurray at DOCKMASTER.NCSC.MIL
