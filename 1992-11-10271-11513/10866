Xref: msuinfo sci.crypt:10866 comp.sys.next.misc:25026
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!magnus.acs.ohio-state.edu!usenet.ins.cwru.edu!agate!soda.berkeley.edu!nweaver
From: nweaver@soda.berkeley.edu (Nicholas C. Weaver (The Weeniehead))
Newsgroups: sci.crypt,comp.sys.next.misc
Subject: Re: UNIX Mail with PubKey Encryption
Date: 15 Nov 1992 18:24:07 GMT
Organization: U.C. Berkeley, CS Undergraduate Association
Lines: 22
Message-ID: <1e64k7INNsqv@agate.berkeley.edu>
References: <1992Nov15.064520.9574@extropia.wimsey.bc.ca> <1992Nov15.135015.19748@cubetech.com> <947SBPN7@cc.swarthmore.edu>
NNTP-Posting-Host: soda.berkeley.edu

In article <947SBPN7@cc.swarthmore.edu> eoliver@ralph.cs.haverford.edu (Erik Oliver) writes:
>Thwap!  Erik hits himself over the head for not being aware of For Your
>Eyes Only on the NeXT.  On the other hand, Public Key encryption is only
>useful if the other person can certify the file and unless the receiving
>machine is another NeXT that just won't be the case.
>
>-Erik

	Of course, the real way to do solid encription is the following.
First, make up some gizmo to generate a random binary string, (White noise,
maby.  Hmm, I wonder how random blowing into the mike is?)  You CAN"T use
the random number function, it must be TREULY random.  THen, make a single
copy and give it to your friend through a secure channel.  You then use the
Voyench (sp) algorythem for one time encription.  Very useful, completely
uncrackable.  See Scientific American Oct 92 for a sidebar on the subject.
Possibly make a service to take a key and file and encrypt, and another to
decrypt.  Voila, now you can REALLY give the NSA fits.
-- 
                             Nicholas C. Weaver
			  nweaver@soda.berkeley.edu
It is a tale, told by an idiot, full of sound and fury, .signifying nothing.
                   Tis better to dream with eyes wide open.
