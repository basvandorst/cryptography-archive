Xref: msuinfo sci.crypt:10913 sci.math:35172 comp.theory:5786
Newsgroups: sci.crypt,sci.math,comp.theory
Path: msuinfo!caen!uunet!telebit!phr
From: phr@telebit.com (Paul Rubin)
Subject: Re: Cryptography and P=NP
In-Reply-To: ramsay@math.ubc.ca's message of 16 Nov 1992 06:43:57 GMT
Message-ID: <PHR.92Nov16003614@napa.telebit.com>
Sender: news@telebit.com
Nntp-Posting-Host: napa.telebit.com
Organization: Telebit Corporation; Sunnyvale, CA, USA
References: <1992Nov15.110945.19939@ringer.cs.utsa.edu>
	<PHR.92Nov15203840@napa.telebit.com> <1e7fvdINN87s@iskut.ucs.ubc.ca>
Distribution: inet
Date: 16 Nov 92 00:36:14
Lines: 18

    Mathematics would also be placed in a surprising position by P=NP.
    P=NP implies that there is an algorithm which, given a theorem
    expressed formally in ZF, say, and a number n, either gives a formal
    proof of the theorem of length at most n, or shows that there is none,
    and which would take time bounded by some polynomial in n. It wouldn't
    *necessarily* put us all out of the math research business, but....

I don't know that this is really so interesting: the kinds of things
we write down in mathematical proofs ("by symmetry, X, and by
induction on n, Z") often would have very large expansions in formal
proofs.  The kind of thing a mathematician would write down as a proof
of a theorem is less like shorthand for a formal proof than like a
computer program which generates a formal proof.  So we're not so
interested in the length of the formal proof as in the length of the
shortest such program.  But recognizing whether a program P generates
a proof of a theorem T is not in NP---it's not even undecidable
(because we can't even tell if P ever halts).  Thus, my feeling is
that even an NP-oracle wouldn't put mathemeticians out of business.
