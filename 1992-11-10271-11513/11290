Newsgroups: sci.crypt
Path: msuinfo!caen!spool.mu.edu!umn.edu!lynx!nmsu.edu!opus!ted
From: ted@nmsu.edu (Classic Ted)
Subject: Re: Attack Methods
In-Reply-To: lwloen@rchland.vnet.ibm.com's message of Fri, 20 Nov 1992 18:46:19 GMT
Message-ID: <TED.92Nov24104521@lole.nmsu.edu>
Sender: usenet@nmsu.edu
Reply-To: ted@nmsu.edu
Organization: Computing Research Lab
References: <1992Nov18.190513.10997@cis.uab.edu> <1992Nov18.203413.11509@rchland.ibm.com>
	<1992Nov18.224350.11512@cis.uab.edu>
	<1992Nov19.215029.22401@bernina.ethz.ch>
	<1992Nov20.162319.24428@rchland.ibm.com>
	<1992Nov20.184619.7545@rchland.ibm.com>
Date: Tue, 24 Nov 1992 17:45:21 GMT
Lines: 24


In article <1992Nov20.184619.7545@rchland.ibm.com> lwloen@rchland.vnet.ibm.com (Larry Loen) writes:


      "correlate very accurately even when they can't solve. . ."

      That is to say, they can often be very sure about which message is
      the press release even when they can't solve it.  This analysis is
      called "traffic analysis".

actually, you can go much further than simple traffic analysis without
solving the system.

      As far as I know, there is no way to
      prevent the traffic analysis part in general, though maybe it can
      be beaten off with enough super-encryption.

padding is the answer,  if the channel is always full of data, but
most is just hardware generated noise, it can be very hard to tell
when an actual message is sent, especially if one time pads are used.
it is relatively easy for the receiver to accept blocks and do trial
encryptions until a pattern is found so that the one time pad need not
be wasted on encrypting the noise.

