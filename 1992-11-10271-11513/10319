Path: msuinfo!netnews.upenn.edu!cs.widener.edu!dsinc!ub!zaphod.mps.ohio-state.edu!darwin.sura.net!haven.umd.edu!decuac!pa.dec.com!decwrl!netcomsv!netcom.com!rlglende
From: rlglende@netcom.com (Robert Lewis Glendenning)
Newsgroups: sci.crypt
Subject: Re: Hardware random number generators compatible with PCs?
Message-ID: <1992Oct31.021332.18534@netcom.com>
Date: 31 Oct 92 02:13:32 GMT
References: <1992Oct25.224554.1853@fasttech.com> <BwqLK7.IE0@mentor.cc.purdue.edu>
Organization: Netcom - Online Communication Services  (408 241-9760 guest)
Lines: 29

There is no need to exchange the randomly-generated one-time pad.

The trick is to use Shannon : bury the info in the noise.

With a genuine random number stream, you can simply embed compressed
information into the stream (or file) at random locations.  These
random locations can be selected by an RNG.  If you also select bytes
from the plain text via an RNG, the cryptoanalyst has the problem of
predicting both RNGs in order to reconstruct the message.

Because the plain text was compressed, its bits should be close to
random, and not stick out from the background.  The cryptoanalysts
problem can be made arbitrarily difficult by increasing the amount
of noise (the random number stream) relative to the signal (the
embedded compressed info).

I believe the reason this technique isn't used is the difficulty
of producing RNGs which can't be predicted.  The hardware implementation
presumedly can't be, and so there is no need to XOR the plaintext,
provided it doesn't stand out in any way.

I am not a crypto person,  so my understanding could be flawed, but
this seems correct from basic information theory.

Lew

-- 
Lew Glendenning		rlglende@netcom.com
"Perspective is worth 80 IQ points."	Nils Bohr (or somebody like that).
