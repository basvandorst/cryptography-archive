Path: msuinfo!netnews.upenn.edu!jvnc.net!darwin.sura.net!europa.asd.contel.com!uunet!well!moon!pixar!markv
From: markv@pixar.com (Mark T. VandeWettering)
Newsgroups: sci.crypt
Subject: Re: New Encryption System - Challenge!
Message-ID: <markv.721418524@pixar>
Date: 10 Nov 92 18:02:04 GMT
References: <n0dc8t@ofa123.fidonet.org>
Sender: news@pixar.com (Usenet Newsmaster)
Organization: Pixar -- Point Richmond, California
Lines: 78
Nntp-Posting-Host: taz.pixar.com

Erik.Lindano@ofa123.fidonet.org writes:

>  
> A person has approached me and said he has devised an unusual 
> encryption method.  He showed me an MS DOS program that encrypts and 
> decrypts files in a way that I cannot fathom - but then I am no 
> expert, so that's no surprise.  However, to prove to me the value of 
> his encryption method, he has suggested a series of challenges, and 
> I'd like to present them here for discussion.  Let's call his new 
> encryption method `NuCrypt' for the sake of brevity.  Right now, 
> NuCrypt is a secret program, but I'm allowed to say that it is a 
> very short program which encrypts extremely fast.  No huge prime 
> numbers or anything... the author don't know nothin' 'bout prime 
> nummers, he says...  
>  
> One of the challenges he's proposed goes like this:
>  
>    1. Almost all the contents of a 200-word English plaintext file 
>       are disclosed. Somewhere in the midst of the English text, 
>       however, there are two or three words, of 8 characters or less 
>       each, represented only by "--------". These words are not 
>       disclosed. They, too, are common English words and are valid 
>       in the context they're in.

	I was reading an interesting text on cryptography wherein the 
	analyst was to attempt to guess the contents of blacked out 
	words (or even entire sentences) from telegrams, technical manuals
	and other sources.  The English language is highly redundant, but
	the way that certain types of prose is written make it even more so.
	I would be very surprised if you could not guess these words from 
	the context.

>    2. Ten identical copies of the above text file, including the 
>       two/three undisclosed words, are encrypted with NuCrypt.  Each 
>       copy is encrypted only once.  Each time, NuCrypt produces an 
>       encrypted version of the file.  Each ciphertext example is 
>       different from the others. (NuCrypt itself doesn't change, nor 
>       does it create any "key" files or any other output except the 
>       ciphertext and a brief screen message announcing completion.)  
>       In creating ciphertext, NuCrypt may use all 255 ASCII 
>       characters, even if the plaintext did not.  Each of these 
>       encrypted files can be quickly and correctly decrypted using 
>       the same or another copy of NuCrypt.  As usual, the ciphertext 
>       has a more or less random appearance and is pretty much 
>       incompressible by archiving utilities.

	From your description, it appears that your program stores a key 
	internally (since you do not supply a key).  This leaves the problem		of key distribution (you must either operate the two programs in lock 
	step, or somehow communicate the beginning key to the remote site).

	Assuming that the above is wrong, and the user picks a key for 
	each of the files, the rest of your paragraph tells us nothing about
	the relative strength or weakness of the method.  "Pretty much random"
	is a meaningless phrase.   
>        
>    3. The entire English plaintext (minus the actual 2 or 3 non- 
>       disclosed words), as well as all 10 NuCrypt-encrypted 
>       examples, are made public.
>        
>    4. The NuCrypt program itself, used to perform the encryption and 
>       decryption, is not disclosed.

	I would be very surprised if we could not discover both the hidden 
	words and the encryption/decryption method.

> Another challenge he proposed goes like this:

	[ Second, probably easier challenge deleted ]

> My acquaintance likes to think no one can defeat his cipher.  He 
> further states that if anyone feels that the above examples are not 
> fair or adequate, then the readers here are free to suggest their 
> own rules, test methods and materials.

	Your friend is quite probably an idiot.

========================================================================
Mark T. VandeWettering (markv@pixar.com)
