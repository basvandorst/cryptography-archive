Path: msuinfo!netnews.upenn.edu!dsinc!spool.mu.edu!umn.edu!lynx!nmsu.edu!opus!ted
From: ted@nmsu.edu (Classic Ted)
Newsgroups: sci.crypt
Subject: Re: New Encryption Method - a Challenge!
Message-ID: <TED.92Nov23182002@lole.nmsu.edu>
Date: 24 Nov 92 01:20:02 GMT
References: <1992Nov14.195515.27178@leland.Stanford.EDU> <BxztIC.BJ1@world.std.com>
Sender: usenet@nmsu.edu
Reply-To: ted@nmsu.edu
Organization: Computing Research Lab
Lines: 30
In-Reply-To: ariel@world.std.com's message of Fri, 20 Nov 1992 02:27:48 GMT


In article <BxztIC.BJ1@world.std.com> ariel@world.std.com (Robert L Ullmann) writes:

   Newsgroups: sci.crypt
   Path: nmsu.edu!lynx!fmsrl7!destroyer!gumby!wupost!tulane!ukma!cs.widener.edu!eff!world!ariel
   From: ariel@world.std.com (Robert L Ullmann)
   Organization: The World in Boston
   References: <1992Nov14.195515.27178@leland.Stanford.EDU>
   Date: Fri, 20 Nov 1992 02:27:48 GMT
   Lines: 26

   kocherp@leland.Stanford.EDU (Paul Carl Kocher) writes:
   > It sounds to me like this "encryption" system just involves XORing
   > random numbers onto the plaintext, which would explain why the program
   > is very short, cannot use keys, and produces different cryptotext when
   > run multiple times (different random number seeds stored at the beginning
   > of the cryptotext).

   Ah, very good. Does indeed sound like that.

   Perhaps the originator (whom, after all, may be misrepresented by the
   poster) has not designed security-by-obscurity, but simple obscurity-
   by-obscurity, a perfectly valid and useful concept. But not what we
   mean by cryptography.


actually xoring with a random stream is a completely viable method, if
the actually random stream is selected from a relatively small subset
of the total possible number of random streams.  decryption could be
done by trial or could be keyed by the first few bytes of the message.
