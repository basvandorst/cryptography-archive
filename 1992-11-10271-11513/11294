Newsgroups: sci.crypt
Path: msuinfo!caen!uunet!noc.near.net!meiko.com!philip
From: philip@meiko.com (Philip Gladstone)
Subject: New Encryption ideas - a control Proposal
Message-ID: <1992Nov25.054252.8068@meiko.com>
Organization: Meiko Scientific Corp.
References: <1992Nov24.083543.15627@cs.ucla.edu>
Date: Wed, 25 Nov 1992 05:42:52 GMT
Lines: 104

This note proposes some standard information that can be gathered by
an attacker of any cryptosystem. The questions below gather the
basic facts about a system, without revealing how the system works.
Anybody who proposes a new and wonderful cryptosystem should provide 
the answers to these questions. There are no right and wrong answers, 
but there are more desirable and less desirable ones!
 
I'm sure that everybody will want to add their own questions, please
feel free to do so. Maybe we can agree on a set that could go into
the FAQ, and thereby eliminate future (futile) flame wars.
 
***
This discussion is limited to those systems that encrypt data and can
then decrypt the encrypted data, ending up with the original data.
 
Definitions:
 
*	A system has one or more public parts. This is typically the
	'mechanism' or 'program' that implements the system. These
	parts can typically be obtained for reasonable amounts of
	money. Call the operation of the Encryptor E, and the
	decryptor D.
 
*	A system has one or more secret parts. Some portion of this
	secret (S1) is supplied to the encryption mechanism. Some portion
	(S2) is supplied to the decryption mechanism. The key
	management problem tends to keep the size of S2 (at least)
	small (less than 100kbytes).
 
*	The system may have one or more internal parts. Some portion
	is held by the encryptor (I1) and some by the decryptor (I2).
	Note that if these parts are constant for all time, for all
	recipients, for all senders, then they are considered part 
	of the mechanism. If these parts are constant for any
	recipient-sender pair, then these internal parts can be
	considered part of the secret.
 
	However, I1 and I2 need to be kept in synch.
 
	Then   Edata = E(data, S1, I1)	-- I1 modified over time/use
		data = D(Edata, S2, I2) -- I2 modified over time/use
 
Basic information about a cryptosystem:
 
1)	What is size (or range of sizes) for S2, and how many
	different values are there? [1] Note that if S2 is
	very small, then exhaustive search of all possible S2 values
	is probably a good attack (assuming that the algorithm
	runs at a reasonable speed). 
 
1a)	How long does E(data, S1, I1) and D(Edata, S2, I2) take? [2]
	Measure wall-clock times on *any* platform, but specify
	the platform. The size of 'data' should be reasonably
	large (100k at least).
 
2)	What is relationship of size of Edata to size of data? [3]
	Is this S1 dependant? [4]. Is this dependant on data
	contents? [5]
 
	E.g. size of Edata for data = "a", "aa", "aaa" (up to 64).
	E.g. size of Edata for data = "a". "gh","tam", ...
	E.g. size of Edata for 1k, 10k, 100k of already compressed
	data (output of compress, pkzip etc).
 
3)	Does E(data, S1, I1) always equal E(data, S1, I1)? [6] I.e. does
	encrypting the same data under the same circumstances result
	in the same data? [6] [There might be a random initialization
	vector]
 
3a)	If so, then consider E(data+d1+data3, S1, I1) and
			     E(data+d2+data3, S1, I1).
	(where + is concatenation). How many bytes typically are
	different in the encrypted data (assume d1 is nothing like
	d2, both are single bytes)?[7] Possible answers include:
	1 byte, 8 bytes, all bytes after some point corresponding to
	d1, the whole encrypted data.
 
4)	Does E(data, S1, I1) equal E(data, S1, I1')? i.e. is there
	any internal state? [8]
 
	If there is internal state, then this internal state must
	be saved on a per sender-recipient basis. What is the size
	of this internal state? [9] If this state is saved as part of
	the (finite sized) mechanism, then what is the size of the
	changed portion of the mechanism after use? [10] How many 
	different sender-recipient pairs can be stored in this
	(fixed size) mechanism? [11] For variable size mechanism, how much
	does mechanism increase in size per sender-recipient pair? [12]
 
5)	Consider D(data, S2, I2) and D(data', S2, I2), where data'
	is equal to data with a single byte replaced.
 
	What are the differences in the decrypted data? [13] Possible
	answers include: 1 byte, 8 bytes, all bytes after some point,
	the whole file.	Does the actual byte replaced make a
	qualitative difference, if so give examples? [14]
 
****
There are 14 questions here. Not all are applicable to all systems.
Note that all this information is *basic* to a cryptosystem and can
be discovered by anyone with (even) black box access. 


Philip Gladstone
