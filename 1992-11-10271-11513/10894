Path: msuinfo!netnews.upenn.edu!jvnc.net!yale.edu!qt.cs.utexas.edu!cs.utexas.edu!zaphod.mps.ohio-state.edu!sample.eng.ohio-state.edu!blanc!butzerd
From: butzerd@blanc.eng.ohio-state.edu (Dane C. Butzer)
Newsgroups: sci.crypt
Subject: Re: Disclosing a new encryption method (the other side)
Message-ID: <1992Nov12.004920.421@ee.eng.ohio-state.edu>
Date: 12 Nov 92 00:49:20 GMT
References: <1992Nov11.182902.29740@ee.eng.ohio-state.edu> <1992Nov11.213452.28545@rchland.ibm.com>
Sender: news@ee.eng.ohio-state.edu
Organization: The Ohio State University Dept of Electrical Engineering
Lines: 117

Promise to keep this short...

In article <1992Nov11.213452.28545@rchland.ibm.com> lwloen@vnet.ibm.com writes:
>In article<1992Nov11.182902.29740@ee.eng.ohio-state.edu> Dane C. Butzer
>writes
>
>< lots of stuff about keeping an encryption algorithm secret for
>  patent protection reasons deleted>
>
>>1) Run a challenge with a large amount of known plaintext and ciphertext
>>(like 50K to 100K), a nice reward ($500?), but do not publish the
  ^^^^^^^^^^^^^^^^^^
>>encryption method.  Let this test run 3 months.  The idea here is to see if
>>Rcrypt is very EASILY broken.  The expectation would be the "experts" would
>>throw some of the simpler/standard (automated?) attacks at it.  They would
>>spend a relatively small of time on it, like a few hours (qv. "Hey Bob,
>>lets try cracking this ya-hoo's encryption method.  Shouldn't take long.
>>Worth $500...")  Also offer the working object code to anybody in the US
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>>that wants it (provided publishing object code != publishing the source
>>code/method in a legal sense - the lawyer gets some $$$ here).
>
>>2) If . . .(no one succeeds). . .patent it.
>
>>3) Post the encryption scheme, and re-run the challenge.  Also, make the
>>actual source code available via US mail.  
>
> <Nice try stuff deleted>
>
>and so the cost is much greater than $500 to decide about patenting.  It is
>probably better to try and patent the thing (and see if you can get some
>free "vetting" from the government via the patent office) than to try
>this.

Any info on how to go about this?  Is this done automatically by the gov't?
In the stuff I've collected about patents, they've said nothing about
verifying that your invention even works.  Am I missing something?  Any info
would be greatly appreciated.

>Cryptography's big problem is that it _looks_ easy, but is no easier 
>than any other thing in mathematics.
>
>Basically, you are describing someone without enough capital to discover if
>they have a serious crypto-system.  

BINGO :->  They think they do, but would like a second opinion, but also don't
want to give the thing away in the process of finding out if it works!

>There have been folks who have done
>what you describe.  Jim Button of PC-File fame did it and I do not know
>how good the system really was, because he simply published one very
>small (100 byte) encrypted data base file and said "go at it" and I decided 
>after about an hour that there was not enough material to be worth my 
>trouble on those terms.  I was not mad/interested enough to buy his product
>to try a fairer "break".  However, had I bought his product, I might well have
>gotten somewhere; any DB encrypt package would surely have to
>overcome a chosen plaintext attack.

OK.  Maybe I wasn't clear, but when I said 50K to 100K, I meant 50,000
bytes to 100,000 bytes of plain text and the associated cipher text.  More
specifically, how about making a 10,000 byte long plain text file
(reasonable content, too: I had the preamble to the US Constitution in
mind, followed by a whole heap of sequential integers [1...n], one per
line, and then some short quote from a book), encrypting it, and then
publishing the first, say, 9,900 bytes of the plain text along with all
10,000 bytes of the cipher text.  Do this for 5-10 keys.  Now, the
challenge is to find that last 100 bytes (ie. the quote from the book).  Is
that more reasonable?  Also, note the underlined (^^) part of the original
post - the working object code (ie. excecutable) would be provided, just
without a description of how it works.  You could play with it all you
wanted.  However, since I wouldn't have published the what to/how for, I'd
still be safe in a legal sense (I think).  Is that at least a little more
interesting?

>
>Nippon Telephone and Telegraph, a while back, published a much more 
>serious challenge for its Feal-8, an 8 round, DES-like system.  I have a
>sneaking suspicion that any 8 round system is not quite good enough, but
>I can't back it with the analysis that says so.  It may be very fine
>indeed.
>
>However, NT&T did the following things:
>
>1.  It published the algorithm.  They obviously did enough work, in house,
>  to do the patent stuff first.  I'm afraid this is a practical requirement,
>  so one-man garage store inventors are at a natural disadvantage, sorry.
>

The following is an IMHO:

Just a comment.  Neat thing about Math.  It doesn't take a lot of physical
resources to do stuff with it.  If you can catch yourself up to the state
of the art, $$$ won't help you that much.  With a good number crunching
computer, a "one-man garage" isn't at all that much of a disadvantage -
until s/he tries to do something with their "product".  What I'm trying to
do is find a method for a challenge that would:

a) Slaughter poor encryption techniques (no linear recursion pseudo one
time pads, please!)

b) Be interesting to the crypies out there

c) Give the smaller shops, without all the lawyers and capital, a chance to
compete on a intellectual plane, rather than a legal one.  Especially here,
in what is basically an intellectual environment.

I refuse to accept that you have to be a big player to get anywhere.  Too
much has been built in this country by people who started small.  (One of
them just ran for President... oh... he lost... not a good sign... maybe it
can't be done... I'm not going to give up, anyways! :-)

As always, thanks for the feedback.


Stubornly,
Dane Butzer
butzerd@ee.eng.ohio-state.edu
