Path: msuinfo!caen!spool.mu.edu!wupost!cs.utexas.edu!sun-barr!news2me.EBay.Sun.COM!cronkite.Central.Sun.COM!texsun!wb9rxw!kf5iw!rwsys!sneaky!gordon
From: gordon@sneaky.lonestar.org (Gordon Burditt)
Newsgroups: sci.crypt
Subject: Re: A Copper Balloon
Message-ID: <BxKLDM.Mss@sneaky.lonestar.org>
Date: 11 Nov 92 21:08:05 GMT
References: <1992Nov7.142220.1683@guvax.acc.georgetown.edu>
Organization: Gordon Burditt
Lines: 92

>1.  Caller activates call.  All 3 parties generate a random x and
>exchange their values y = a^x mod p for some a and p.  All 3 parties
>generate the key k in the style of DH but with 3 exponents instead
>of 2.

You're proposing enough telephone-company equipment to be involved in
EVERY telephone call in progress at once.  This is VERY expensive.  If 
the caller has to indicate that the call is encrypted, then he's not 
going to do it.  But then how does one make unencrypted voice or modem
calls?  And who says they're unencrypted?  (I believe the US military used
some ancient American-Indian language occasionally during World War II
as encryption.  Granted, this was for sending battlefield information
whose value decreased a lot in a few hours or days.  Then again, information
on a terrorist plot to blow up a commercial plane decreases in value
a lot after the plane blows up.)

As far as I know, there are no modems for the switched telephone
network in popular use that allow a 3-way conversation.  (Half-duplex
switched-carrier modems like the Bell 202, 201, 208, and 209 are
ancient.)  Anyone wanting to send encrypted traffic has to get new 
equipment (expensive) or break the law.  But the existing equipment can 
still be used to send encrypted traffic.

Also, this prohibits (or doesn't handle) bulk, non-interactive encryption,
where the encryption is done well before the transmission.  This sort
of thing is done with UUCP mail, and often with Internet mail when the
mail has to go through intermediate hops, the destination host is
down, or otherwise the mail gets queued.  Encryption on the fly takes
up link time, and reduces the strength of encryption that can be used
without costing a lot in idle time.  This proposal works for
link-by-link encryption, which is probably sufficient for encrypted
voice, unless it goes through a voice mail system or other store-and-forward
device.  It does not work for end-to-end encryption.  If you're going to 
go to the trouble of encrypting email, you want end-to-end encryption.

>2.  If a tap has not been activated, the 3rd party would be a bit
>bucket.  The key would not be saved or distributed elsewhere.  Indeed 
>the third party might even play a slightly different game and issue
>a random y without even having generated an x.  

>3.  If a tap has been activated, the key would be delivered to the 
>government monitoring facilty along with the communications stream.
...
>Third, someone (Carl Ellison?) suggested that it might be better to
>just record session keys rather than permanent keys.  Since the 
>session keys are what is ultimately needed, this sounds good to me.
>
>Obviously this would not work with PGP or any form of RSA encryption
>which uses permanent keys.  So if such a strategy were used, it would
>constrain what protocols & methods could be used.

PGP does have session keys.  The session key is encrypted by RSA, and
all the encryption (with IDEA) is done before any transmission.  I believe 
RPEM works the same way, but using DES.  One way of sabotaging PGP
would be to have it include the session key encrypted in the government's
(which government?) public key, in addition to the standard packets.
But how do you check that someone didn't substitute another key for
the government's public key in the PGP executable?

>Like key registration, I expect it would be much harder to enforce on 
>computer nets that run software than telephone systems where you could 
>require that hardware products meet the basic requirements.

Hardware products can be modified.  Look at radio scanners.  Look
at cable descrambler boxes.  Of course, it's harder if the equipment
is at the phone company central office.  But in your proposal, 
part of the equipment required for the protocol to ensure tappability
is at the customer ends.

>Assuming that the 3rd party devices were reliably constructed, this 
>would at least superficially provide more protection since no keys 
>would be kept unless a court order were issued.

Would you care to suggest a cryptographic protocol for activating
the devices only if there is a VALID warrant?  Assume that the government
is going to attempt to get invalid warrants by such techniques as breakins
into judges' homes and offices, armed attacks on courthouses, and
kidnapping (er, arrest on trumped-up charges) of judges' families, in 
addition to the usual forgery and lying.  This protocol also needs to 
prevent the government from rigging elections, say, by shooting all the 
other candidates or miscounting the vote.

It would also appear that the 3rd party devices could be used to perform
a traffic analysis of all encrypted traffic, possibly without a warrant.

This proposal STILL doesn't deal with the possibility of encrypted
"plaintext", the possibility that the sender doesn't USE the agreed-on
session key, but uses a different one, and that you have to decrypt
the transmission to catch someone doing this.

					Gordon L. Burditt
					sneaky.lonestar.org!gordon
