Xref: msuinfo sci.crypt:11312 sci.math:35621 comp.theory:5863
Path: msuinfo!netnews.upenn.edu!cs.widener.edu!eff!sol.ctr.columbia.edu!destroyer!cs.ubc.ca!fornax!jamie
From: jamie@cs.sfu.ca (Jamie Andrews)
Newsgroups: sci.crypt,sci.math,comp.theory
Subject: Re: Cryptography and P=NP
Message-ID: <1992Nov20.174549.25343@cs.sfu.ca>
Date: 20 Nov 92 17:45:49 GMT
References: <1992Nov19.172719.1540@fid.morgan.com> <1992Nov19.193036.26711@rchland.ibm.com> <722206613@pike.cs.duke.edu>
Organization: CSS, Simon Fraser University, Burnaby, B.C., Canada
Lines: 20

In article <722206613@pike.cs.duke.edu> srt@duke.cs.duke.edu (Stephen R. Tate) writes:
>Huh?  I can think of very, very few algorithms (programs) that can not
>be counted on to halt.  The only simply stated one has the halting problem:
>given a program, decide whether or not it will ever halt.

     What about: any interpreter for a non-trivial programming
language?  This includes "sh", "csh", "perl", Emacs, and any
Lisp, Prolog, Smalltalk, or Basic interpreter...

> To re-iterate:  programs that cannot
>be counted on to halt are very, very, very rare.  Most people will never
>see one.

     Well, I work with them every day, and I would bet that you
do too.  I even write such programs sometimes, which is more
rare but certainly not uncommon.

--Jamie.
  jamie@cs.sfu.ca
"The Tao's net encompasses the whole universe."  - tao te ching
