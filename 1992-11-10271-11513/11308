Path: msuinfo!caen!sdd.hp.com!zaphod.mps.ohio-state.edu!sample.eng.ohio-state.edu!purdue!mentor.cc.purdue.edu!noose.ecn.purdue.edu!samsung!transfer.stratus.com!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: sci.crypt
Subject: Re: Alternatives to RSA for public key cryptography
Message-ID: <1f0deoINN6vo@transfer.stratus.com>
Date: 25 Nov 92 17:34:16 GMT
References: <PC123.92Nov25122044@grus.cus.cam.ac.uk>
Organization: Stratus Computer, Software Engineering
Lines: 26
NNTP-Posting-Host: ellisun.sw.stratus.com

In article <PC123.92Nov25122044@grus.cus.cam.ac.uk> pc123@cus.cam.ac.uk (Pete Chown) writes:
>So my idea was this.  Everyone wishing to take part in the scheme
>agrees a single prime modulus P and a generator g.  Then each person
>chooses, secretly, an exponent e.  They then publish g^e mod P.
>
>Now each pair of entities share a common secret.  If the exponents
>chosen by the two entities are e1 and e2, then (g^e1)^e2 mod P is
>known to both.

I think it works.

I posted the equivalent idea here a week or two ago.  My point was then
that the performance penalty of DH can be avoided by pipelining the
offering of g^e -- offering it before it was asked for.  This allows e-mail
to be decrypted by DH-protected keys without an exchange after receipt of
the e-mail.  However, I was suggesting that the key be destroyed after use.
I think you're suggesting that you keep the key active.  That makes sense.

I would use it as a key-encrypting-key rather than as a key, however.  You
don't want to use the same key twice -- except maybe as a KEK.

-- 
-- <<Disclaimer: All opinions expressed are my own, of course.>>
-- Carl Ellison						cme@sw.stratus.com
-- Stratus Computer Inc.	M3-2-BKW		TEL: (508)460-2783
-- 55 Fairbanks Boulevard ; Marlborough MA 01752-1298	FAX: (508)624-7488
