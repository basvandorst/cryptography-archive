Newsgroups: sci.crypt
Path: msuinfo!caen!destroyer!cs.ubc.ca!uw-beaver!uw-coco!nwnexus!ken
From: ken@halcyon.com (Ken Pizzini)
Subject: Re: Encrypted phones, keys, taps, ...
Message-ID: <1992Nov7.150423.26670@nwnexus.WA.COM>
Sender: sso@nwnexus.WA.COM (System Security Officer)
Organization: The 23:00 News and Mail Service
References: <1992Nov6.012330.4470@shearson.com> <1992Nov7.045122.15675@netcom.com>
Date: Sat, 7 Nov 1992 15:04:23 GMT
Lines: 46

In article <1992Nov7.045122.15675@netcom.com> rcain@netcom.com (Robert Cain) writes:
>pmetzger@snark.shearson.com (Perry E. Metzger) writes:
>: 
>: If "standard" means analog, well, analog phone scramblers are almost
>: all easily broken, and are pretty poor in general. Why use one when
>: digital techniques that are virtually unbreakable are available?
>
>How is this done in the case of randomly hopping variable split band
>spectrum inverters?  Current technology allows hopping between any of
>32 frequency split points at a 60 hz hopping rate.  From 16.67 ms
>fragments how on earth does one gather any information as to its
>content or split point?

Well, first the disclaimer: Metzger did say "almost all" and "in general".

>                         According to Micheal Washvill a voice and
>data security specialist with a "federal agency":
>
>	VSB scrambling can be broken but not in real time. The only
>	practical attack is through trial and error.  The scrambled
>	speech must first be recorded, then divided into finite time
>	segments according to the hop rate.  Each segment is processed
>	through a variety of split points until clear speech results."
>
>He claims a 60 to one decode time.  Gimme a break!  Who decides when
>clear speech results?  Automatic speech recognition is nowhere near
>capable of this which leaves a human to determine what is clear
>speech.  Think of the combinatorics here to decide on a second!  Does
>it actually seem reasonable that this could be done in finite human
>time or is this guy blowing self serving smoke to discourage its use?
>
>Or are there more sophisticated methods?  I have some experience in
>signal processing and in speech recognition and certainly can't think
>of one.  I've seen the statement that it is easy but I'd sure like to
>see that backed up with an algorithm.

If indeed "the only practical attack is through trial and error", then
I agree that this is a pretty secure method.  But what is the random
number generator chosing the splits?  If this is not cryptographically
strong then there is a nice weakness to exploit.  And keep in mind that
to crypto folk a scheme is usually considered insecure if there is a
way to break the code (or protocol, or whatever) that is cheaper than
brute-force trial-and-error; "finite human time" isn't usually the metric
used.

		--Ken Pizzini
