Xref: msuinfo alt.security.pgp:357 sci.crypt:11348
Newsgroups: alt.security.pgp,sci.crypt
Path: msuinfo!caen!uwm.edu!linac!uchinews!lucpum.it.luc.edu!lucpul.it.luc.edu!hmiller
From: hmiller@lucpul.it.luc.edu (Hugh Miller)
Subject: PGP vs. RIPEM
Message-ID: <hmiller.722756685@lucpul.it.luc.edu>
Summary: Forwarded message from Zhahai Stewart on PGP vs. PEM
Keywords: PGP RIPEM public-key encryption
Sender: root@lucpum.it.luc.edu (System PRIVILEGED Account)
Organization: Loyola University Chicago
Date: Thu, 26 Nov 1992 05:44:45 GMT
Lines: 133

    I'm forwarding the following for Zhahai Stewart:

Date: Mon, 23 Nov 92 17:14:36 PDT
From: Zhahai.Stewart@f93.n104.z1.FIDONET.ORG (Zhahai Stewart)
Subject: Some conceptual differences: PGP/PEM 

 There seems to be some discussion regarding the relative merits of 
 RIPEM and PGP; perhaps it would be worthwhile to explain why the two 
 have different niches, and neither is likely to fill the other's niche 
 well.

 RIPEM is compliant with the PEM standard (draft RFC).  Its whole 
 purpose in life is enhancing Internet email.  The PEM standard is 
 designed to be highly integrated into the Internet; this means that 
 it is relatively more limited, and by being so limited it can do a 
 good job at the one task it takes on.

 PGP is a very portable privacy system with many more features and a 
 much broader scope.  It could be used with many different forms of 
 email, as well as for totally non mail oriented applications.  As 
 such, it does not integrate as well with Internet mail.

 Some examples of how this influences their conceptual design follow. 
 PEM integrates much of the cryptographic information into Internet 
 style headers; PGP uses a more compact and efficient system-independent 
 binary packet data structure.  PEM's email-plus design exposes more 
 information for traffic analysis than does PGP's standalone design.

 A major point is that PEM has a quite different concept of "identity" 
 than does pgp.  A major concept in PEM is that an identity is a mailbox 
 in the internet heirarchical form; keys are then certified (through a 
 similar heirarchy of organizations propagating trust from on high) as 
 being connected to this "mailbox identity".  This design makes a lot 
 of sense from the Internet sense (domain heirarchies being already 
 integral to the Internet conceptual model).

 PGP follows a different drummer, with different strengths and 
 weaknesses. The fundamental concept of identity is the keypair itself.  
 This is sufficiently different to deserve some background.

 Consider that one could correspond securely for years with some "entity" 
 (generally another human being) without ever knowing "who" they were.  
 What you do know is that the same "entity" read and wrote those many 
 messages you have exchanged; nobody else can pretend to be them (or 
 you), and nobody else can eavestap on your interchanges.  Their public 
 key is in effect an unforgeable "handle" by which you know them.  Over 
 the years,you might use various mailboxes, usernames, networks, and 
 even different media, yet you know it's still the same person.  This 
 is as solid a thread of "identity continuity" as you can get in the 
 electronic world, and so it forms the basis of the concept of 
 "identity" for PGP.

 We don't like to refer to each other by 1000 bit numbers, tho, so PGP 
 allows you to associate a key with a textual "userid".  This could be 
 a full legal name as it appears on a passport.  It could be a nickname 
 or "handle".  It could be a login or user name on a given system 
 (including an Internet mailbox address).  It could be all the 
 information on your drivers license, complete with number.  It could 
 be your postal address.  The point is that the "identity" core is the 
 key itself, and each userid is an independent secondary association 
 with the key.  And you can have many such secondary associations (for 
 example, one or more of each of the above), each used in different 
 contexts.  Use the drivers license one to prove your age, assuming 
 it is signed as visually verified by someone that the recipient trusts; 
 use whichever email address is appropriate for the network on which 
 you are communicating; etc.  They can also vary over time; addresses 
 change, drivers license numbers change, even names change, especially 
 with marriage.  Yet your identity remains the same; whoever possesses 
 the secret key "is" the entity associated with it.

 Of course, the linkage or association of a key with a given userid 
 string is only as meaningful as the signatures on that association.  
 For a nickname, a self-signature is sufficient (if the keyholder signed 
 it themselves, then you at least know "that's what they call themselves").  
 In general, you should always look for a self-signature, perhaps in 
 addition to others, depending on context.  For a legal name, as with 
 a contract, a stronger outside signature may be needed; that is, the 
 key to userid association should be signed by someone or some 
 institution YOU know and trust.  PGP has pretty powerful key management 
 to support this type of decentralized trust decision making.

 Of course, the same person can have multiple keys if they wish; the 
 choice of tying together various "userid strings" to a single key, or 
 to separate keys, is up to the individual.  If you want a 
 nom-de-phosphor, with a separate key, you can easily manage that.

 These "userid" strings can be used for many purposes beside email 
 addresses.  Some were given above.  Other examples could be certifying 
 that the given person (whoever owns that key) is an employee of XYZ 
 Corp., with an expiration date, and signed with the company key. This 
 person could keep that signed userid on their keychain, and give out 
 copies only when they wish to prove their association with XYZ corp.  

 So PEM's fundamental concept of identity is the volatile one of 
 "internet mailbox"; and a top down chain of official certification is 
 used to verify the association between the (primary) mailbox and a 
 (secondary) key.  PGP's fundamental concept of identity is the key 
 itself (which one may keep for many years), and the association with 
 one or many email addresses, postal addresses, job associations, 
 usernames, legal names, passpord or drivers license numbers, etc. 
 are secondary, multiple, indepenent, extensible, and flexible.  This 
 permits a much wider range of application; individual control of 
 which "aspects" of one's identity one wishes to disclose (by choosing 
 which of one's multiple userids, and which signatures thereof, one 
 gives to each person; and decentralized trust systems.

 This is a very important difference, much more than whether IDEA or 
 DES is used for encryption (as these will change).  PGP would lose a 
 great deal if it were limited to Internet mail applications 
 (conceptually).  On the other hand, it loses some "application 
 specific targeting" by not being limited to Internet mail.  Each 
 approach has its tradeoffs. PGP may nevertheless become more 
 integrated with given mail software over time; it's not impossible to 
 make it easier to use from within a given mail package, as easy as 
 RIPEM even.  Certainly, it will be much easier to migrate PGP into 
 RIPEM's limited application scope than vice versa!  Just don't ask 
 for a "PEM compatible" form of PGP - it was designed for a different 
 and larger scope; if you want PEM compatibility, use RIPEM or some 
 other implementation.  

 Implementing IDEA in RIPEM, or DES in PGP, wouldn't scratch the 
 surface towards making them "compatible"; those are just details.  The 
 serious incompatibility is that they address different needs, and 
 were both designed differently from the ground up so as to meet 
 those needs.
--  
Zhahai Stewart - via ParaNet node 1:104/422
UUCP: !scicom!paranet!User_Name
INTERNET: Zhahai.Stewart@f93.n104.z1.FIDONET.ORG

-- 
Hugh Miller         | Dept. of Philosophy | Loyola University of Chicago
Voice: 312-508-2727 |  FAX: 312-508-2292  |    hmiller@lucpul.it.luc.edu
