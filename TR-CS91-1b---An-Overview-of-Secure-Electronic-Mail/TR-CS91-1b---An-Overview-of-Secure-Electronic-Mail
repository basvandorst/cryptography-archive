
                   An Overview of Secure Electronic Mail


                              Babak Sadeghiyan


                      Department of Computer Science
                              University College
                       University of New South Wales
                     Australian Defence Force Academy
                             Canberra, ACT 2600
                                   Australia


                                 June 21, 1992
1   Introduction


There is a growing interest in the security of electronic mail in the
commercial world, with an emphasis on authentication and content
integrity services. For many vendors of communication services, it is
important to adopt a standard with variant and trusted capabilities.
This paper gives an overview of the present secure e-mail protocols and
standards, together with some analysis and mentioning some limitations
and shortcomings. First Electronic  Mail is described and its location
in the OSI model is defined. The security threats involved are reviewed.
Next a brief overview of cryptographic mechanisms is presented as a
background for understanding the functions of the elements involved
followed by an overview of the protocols of CCITT for secure message
handling. This gives a description of the basic security elements and
some salient features of security services together with the indication of
some shortcomings and limitations. Next a similar overview of Internet
secure e-mail protocols proposed in related RFCs (Request  For
Comments) is presented. Finally some information on some current
secure e-mail products are provided.


2   Electronic  Mail


Electronic Mail is the term used to describe the electronic transmission
of information in the form of a message via a computer-based message
system. It has arisen from widespread application of computer networks,
permitting the creation and distribution of messages to individuals and

                                        1


groups through the computer, while recipients can access the message by
"opening" their electronic mailboxes.
In the OSI Reference Model, Electronic Mail is implemented as an
application program which would fit into the 7th layer. Electronic Mail
can be considered as a special file transfer system, but there are many
differences between the two. Firstly, the ultimate sender and receiver of
mail messages are nearly always people. Secondly, mail messages have a
large number of fields in addition to their contents, which makes them
highly structured documents.
Electronic Mail systems include two related parts: one for providing
interface to the user, and another one for transporting mail. These parts
should provide the basic services of Electronic Mail which include:


   1.  Composition of messages and answers,

   2.  Transferance of messages from the originator to the recipients,

   3.  Reporting to the originator about the outcome of transmission,

   4.  Conversion of the message to make it suitable for the receiver
       terminal,

   5.  Formatting to construct the form of the displayed message,

   6.  Disposition of the message after receiving it.


In the CCITT X.400 series of Recommendations, the User  Agent (UA)
is the program that provides the interface to the mail system and
enables the user to compose, submit and receive the mail and to
manipulate the mailbox. The Message  Transfer  Agent (MTA) is a
process which accepts the mail from a UA and interacts with the
underlying presentation layer to relay messages to other MTAs and
deliver messages to the intended recipient's User Agent. The function of
the MTA in an Electronic Mail system is identical with the function of a
post office in postal mail systems. The collection of all MTAs is called
the Message  Transfer  System (MTS) (see [4 ], [5 ], [40 ]).
In Unix, the ``Mail'' application program serves as the UA, and is an
intelligent mail processing system. The ``Sendmail'' process is the
other facility that serves as the MTA. It sends a message to one or more
recipients, routing the message over whatever networks are necessary.
The UA and MTA may be implemented in the same host computer. The
future trend is to run the UA on a personal computer at home or work
and to run the MTA on a mainframe, which would be operated by the
post office or some other organisation. Since personal computers have a
limited storage capacity, the Message  Store (MS) can also be provided

                                        2




                                 ______________________________
                   oe____________-||                          oe____________-||@
               ____|_            |_____________________________|Other telem|___*
 *_@atic services
            _|__ _ _ _ __ _ _ _ __ _ _ _ __ _ _ 6||_____ _ _ __ _ _ _ __ _ _ _ *
 *__ _ _|

            ||MHS                          _____|?___                          *
 *     ||
            |                              |  AU      |                        *
 *     |
            |                              |_________ |                        *
 *     |
            |                                   |                              *
 *     |
            |                                   6|                             *
 *     |
            |             _|_ __ _ _ _ __ _ _ _ |___ _ _ _ __ _ _ _ __ |       *
 *     |
            |             |MHS                  |                      |       *
 *     |
            |             |                _____|?__                   |       *
 *     |
            |             |                |        |                  |       *
 *     |
 User       ||   _____    ||               |________|MTA               ||      *
 *     ||
       |oe_______-||  PPiP||    _________`          "ZZ"________       _____|  *
 *_____|      User
   ____|_   |    |____U|A | P qP| MTA    |             |MTA    oe_______-|||oe_*
 *_-|| oe_____-|||@
            |             ||  * |________|             |________|      |____|||*
 *|____||UAMS |____@
User        ||   _____    |              IR________+jj3_               |       *
 *     ||
       |oe________-||ss|  |                | MTA    |                  |       *
 *     |
   _____|   ||   |____U|A ||               |____|___|                  ||      *
 *     ||

            |             |                     6|                     |       *
 *     |
            |             _|_ __ _ _ _ __ _ _ _ |___ _ _ _ __ _ _ _ __ |       *
 *     |
            |                                   |                              *
 *     |
            |                               ____|?____                         *
 *     |
            |                               |          |                       *
 *     |
            |                               |PDAU      |                       *
 *     |
            |                               __________                         *
 *     |
            |                                   6|                             *
 *     |
            _|__ _ _ _ __ _ _ _ __ _ _ _ __ _ _ |__ __ _ _ _ __ _ _ _ __ _ _ _ *
 *__ _ _|
                                ________________|?_______________
           User     oe___________-||                             oe___________-*
 *||@User
               _____|           |________________________________P|hysical del|*
 *____@ivery services

                      Figure 1: MHS Functional Model
(Adapted from [4 ].)

                                        3


by the organisation to store received messages until the user logs in and
manipulates them.
Three types of information objects are provided in CCITT
Recommendations on Message  Handling  Systems (MHS):


1.   User  Message    : contains information sent from one user to another.

2.   Probe   : is a test message to determine deliverability of a message.

3.   Report    : is generated by the MTS to report the outcome of a
       transmittal.


A message is made up of an envelope and a content. The envelope
encapsulates the content and contains information needed for
transferring the message within a Message Transfer System (See Figure
1). This information is provided in envelope arguments which are
divided into four rough groups in [38 ]:


   1.  addressing arguments;

   2.  delivery arguments;

   3.  conversion arguments;

   4.  security arguments.


The content comprises 5 arguments. The MTS neither modifies nor
examines the content, except for conversion (See Figure 2).
In a typical message, security arguments of an envelope may include:


    o  Encryption identification,

    o  Content integrity check,

    o  Originator's signature,

    o  Message security label,

    o  Proof of delivery request.


These arguments provide security services. In order to understand the
reason for the existence of these arguments we must first examine the
threats they are designed to counter.
                                        4



                                             |                                |
                                             |                                |
                                             |                                |
______________________________________________________________________________||
||                           |      | || 6|| ||Name: Mr Daniel Dumkopf        ||
|Mr Daniel Dumkopf           |______| |  |   |Address: 18 Willow Lane         |
|                                     |E |   |                                |
|18 Willow Lane                       |  |   |          White Plains NY       |
||                                   ||  |   |Priority: Urgent                |
||___________________________________||Wh|ite|Plains, NY 10604                |
_________________________________________|?__|________________________________|*
 *||||Encryption: None
|                United Widget       |
|                                    |   6|| |                                |
|                180 Main St         |   |   |To: Mr Daniel Dumkopf           |
|                                    |   |   |                                |
|                Boston, MA 02120    |   |   |                                |
|                                    |H  |   |From: United Widget             |
|               Sept. 1, 1988        |   |   |                                |
|                                    |   |   |Subject: Invoice 1081           |
|                                    |   |   |                                |
|                                    |   |   |                                |
|                                    |   |   ||Cc: United Widget              ||
||                                   ||  ||  |                                |
|Subject: Invoice 1081               ____||?_|_______________________________||
|                                    |   6|| ||                               ||
||                                   ||  |   |                                |
|                                    |   |   |Dear Mr Dumkopf,                |
|Dear Mr Dumkopf,                    |B  |   |                                |
|                                    |   |   |                                |
|Our computer records show           |   |   |Our computer records show       |
|                                    |   |   |                                |
|that you still have not             |   |   |that you still have not         |
|                                    |   |   |                                |
|                                    |   |   |                                |
|paid the above invoice of           |   |   |paid the above invoice of       |
|                                    |   |   |                                |
|$0.00. Please send us a             |   |   |$0.00. Please send us a         |
|                                    |   |   |                                |
|                                    |   |   |check for $0.00 promptly.       |
|check for $0.00 promptly.           |   |   |                                |
|                                    |   |   |                                |
|                                    |   |   |                                |
|                                    |   |   |                                |
|                                    |   |   |                                |
|                                    |   |   |                                |
|          Yours truly,              |   |   |        Yours truly,            |
|                                    |   |   |                                |
|                                    |   |   |                                |
|________________________________________|?_||________________________________|*
 *UnitedUWidgetnited Widget
  E _ Envelope                 H _ Header                 B _ Body

 Figure 2: Envelopes and messages. (a) Postal mail. (b) Electronic mail.
(Adapted from [38 ].)
                                        5


3   Security  Threats


Any system can be compromised in many ways, so before designing a
secure system one should identify the possible threats against it. Attacks
to the Message Handling System security may occur accidentally or
intentionally and may be active or passive. Section 15.1 of
Recommendation X.400 gives an overview of these threats which can be
divided into four groups (see [4 ], [30 ]):


1.   Access  threats:     occur when an invalid user gets access into the
       MHS.

2.   Inter-message  threats:        arise from those that are external to the
       message communication, i.e., unauthorised agents, and are
       classified as: Masquerade; Message modification; Message replay;
       and Leakage of information.


         1. Masquerade occurs when an entity pretends to be another
            entity within the MHS and includes:

            (a)  impersonation to gain unauthorised access to the MTS
                 and misuse its facilities;

            (b)  pretending to originate a message;

            (c)  impersonation of an MTA to an MTA user i.e., UA or MS;

            (d)  impersonation of an MTA to another MTA;

            (e)  false acknowledgement of receipt of a message.

         2. Message modification occurs when the integrity of a message
            is compromised. This could happen to any part of a message,
            such as its addressing, content, or labelling.

         3. Replay of messages occurs when a part or all of a genuine
            message is repeated in order to exploit more information.

         4. Leakage of information results by monitoring transmission,
            and includes:

            (a)  loss of confidentiality;

            (b)  traffic analysis;

            (c)  loss of anonymity.


3.   Intra-message  threats:        arise from the communicating parties
       themselves and can occur as Repudiation of Messages or Security
       Context Violation.


         1. Repudiation occurs when either the MTS user or the MTS
            denies involvement in the communication, and includes:



                                        6


            (a)  denial of origin;

            (b)  denial of submission;

            (c)  denial of delivery.

         2. Security context violation occurs when within a multi-level
            security policy system an MHS entity submits, delivers or
            transfers a labelled message in breach of the security policy in
            force, and includes:

            (a)  originator not being cleared for message label;

            (b)  MTA or MTS user not being cleared for context;

            (c)  differing labelling policies.


4.   Data  store  threats:      As a MHS has a number of data stores,
       another kind of attack may arise by unauthorised modification or
       access to them.


         1. Modification of routing information occurs when a directory's
            content is corrupted.

         2. Preplay of message occurs when a copy of a deferred delivery
            message is sent to the recipient while the original is in the
            MTA in order to mislead the recipient.

         3. Corruption of information occurs when the integrity of a
            message at a message store is compromised. This threat could
            be an unauthorized deletion, modification, reordering or delay
            of messages.


Generally speaking, Electronic Mail has the security threats of
communication systems and computers combined and we have yet to
recognize all of them.
Another threat that should be considered is Denial of Service, which
occurs when an entity fails to perform its function or prevents other
entities from performing their function. This may be:


    o  denial of access;

    o  denial of communication;

    o  deliberate suppression to a particular recipient;

    o  fabrication of extra traffic;

    o  causing an MTA to fail;

    o  flooding an MTA with messages by filling up its storage space or
       overloading its switching capacity.



                                        7


4   Cryptographic  mechanisms


In this section, three major security mechanisms are described as a
background for describing and analysing security services.


4.1    Encryption

In order to prevent an eavesdropper from learning the content of a
message, encryption or scrambling of the data prior to communication
can be applied. Encryption may be applied in different layers of the OSI
model. Commonly, stream ciphers are used for link encryption, where
they run continuously to prevent the analysis of traffic flow. In upper
levels, other methods of encryption are usually used, such as block
ciphers and cipher feedback systems [32 ]. Either symmetric or
asymmetric algorithms may be applied but the originator must be sure
that the recipient can use the algorithm, and must also inform him of
the applied algorithm. If a symmetric algorithm is used, then the key
must be conveyed over a secure channel to the recipient. If an
asymmetric algorithm is used, then the originator must apply the public
key of the intended recipient.


4.2    Integrity

In order to permit the recipient to verify the integrity of a message, the
originator should provide a means of verification. The check value is
computed as a digest of the message content with a hash function. The
function applied must also be identified to the recipient. If a key is
necessary to verify the check value, then this must also be conveyed to
the recipient. The hash function should have two basic properties. First,
if two different texts are hashed, the probability that two digests will be
equal should be a uniformly distributed random variable with an average
value of 2-k , where k is the number of bits in the digest. Second, the
hash function used must not be invertible, nor subject to decomposition
into separate and independent elements.
The integrity check can also provide security of sequencing, assuring that
data is not intentionally or accidentally modified, lost, replayed,
preplayed, re-ordered or delayed.


4.3    Authentication

The originator should provide a means by which the origin of a message
may be verified. If a message is highly redundant, as in texts, or has an
identifiable structure, authentication can be performed by only applying
encryption. The recipient decrypts the received message. If the result is

                                        8


meaningful or has the known structure, it is accepted as an
authenticated message.
Authentication can also be performed by appending a separate
authenticator to the message. The authenticator is computed by
applying an authentication scheme, of the message and some known
keys. This scheme usually multiples the length of the message. A better
way is to apply the authentication function to a digest of the message. If
the key used to generate the authenticator is known only to the
originator, then not only is the authentication met, but the
authenticator can also be used as the digital signature of the originator,
so non-repudiation of origin can also be implemented.
It should be noted that in the commercial world, origin authentication
and content integrity are often more important than encryption, which
provides confidentiality of messages [14 ].


5   Security  Services  of  1988  CCITT  X.400  Recommendation
    Series


In order to counter the threats mentioned previously, the X.400 series
recommend security services which are provided to MTS user on an
optional basis.


Confidentiality  services:        the content confidentiality service
       counters the leakage of information threat and protects a message
       from unauthorised disclosure. This service is provided on a
       per-message basis.

       The message flow confidentiality service protects information which
       may be gained from the observation of the rate of message flow
       (traffic analysis). This service is supported by the use of double
       envelope capability, which permits a message to become the
       content of another message.

Integrity  services:      the content integrity service permits the
       recipient of the message to verify that the content of the message
       has not been modified.

       The message sequence integrity service permits the recipient to
       detect the replay of a message, or the re-ordering of a message
       sequence from the originator to that recipient.

Authentication  services:        the data (i.e., message, probe, report)
       origin authentication service permits the originator to provide
       authentication of the origin of the data to the recipient and to any
       Message Transfer Agent (MTA) through which the data passes.
       These services counter the threat of masquerade.



                                        9


       Proof of submission service enables the originator to obtain a
       verification that the message has been received by the Message
       Transfer System. Proof of delivery service enables the originator to
       obtain verification that the message has been delivered unaltered
       to the correct recipient. This service may be provided on
       per-recipient basis.

Non-repudiation  services:        the non-repudiation of origin service
       provides the recipient with irrevocable proof of origin. The
       non-repudiation of submission service and the non-repudiation of
       delivery service provide the originator with proof of submission and
       delivery respectively. These services counter the threat of
       repudiation.

Security  management  services:         these services enable one entity in
       the MHS to change the credentials concerning it held by another
       entity in the MHS.

Secure  access  management  services:         these services provide
       protection for resources against their unauthorised use to counter
       masquerade and security context violation threats. The peer entity
       authentication service provides the Message Handling System
       entities with a means of authenticating the identity of an adjacent
       MHS entity. The security context service limits the scope of
       passage of messages between entities by reference to the security
       labels associated with messages.

Message  security  labelling  services:          the originator can associate
       with a message an indication of the sensitivity of the message, i.e.,
       a security label, which may be used by the MHS to control the way
       the message is handled. This service allows security labels to be
       associated with all entities in the MHS, e.g., MTAs.


In order to implement the security services, the X.400 series take
advantage of two sorts of signed data structures, namely certificates and
tokens.


5.1    Certificates

If an asymmetric algorithm is used by the security mechanisms, then
each MHS entity should have a key pair. One is kept secret and the
other is made public throughout the MHS. A user must be confident
that the public key of another user really belongs to him. A Certificate
permits MHS entities to verify the association between a MHS entity
and its public key. A Certificate is generated by an off-line entity called
a Certification Authority (CA). Certificates are stored in the directory



                                       10


and also passed to the users. The Certification Authority must be
trusted by the users. A Certification Authority produces the certificate
of a user by signing a collection of information, including the user's name
and public key. The signed data consists of the data and its digest. The
digest is encrypted under the secret key of the Certification Authority.
The certificate of a user A, produced by the certification authority CA is
shown as CA   A   according to X.509 notation [8 ], and has the
following form:


                  CA   A  = CA{SN; AI; CA; A; Ap; T }

which is equal to the set of (SN; AI; CA; A; Ap; T ), plus the appended
signature notated by CAs[hash(SN; AI; CA; A; Ap; T )].
Here, SN is the serial number of the certificate, AI identifies the
algorithm used to sign the certificate, Ap is A's public key, and T
indicates the period of validity of the certificate. The signature is the
encryption of the hash value under the secret key of the CA.
The certificate can be checked by hashing the data of the certificate,
decrypting the signature with the public key of CA, and comparing the
results. If both results are the same, then the association between the
user name and their public key may be accepted.
Within a small domain, the same CA can be appointed for generating
certificates for public key of all users, and each can use the CA's public
key to verify the certificates of others. Different domains may choose
different CAs. In order to get the public key of other CA's, cross
certificates are provided. A cross certificate is a certificate generated by
one CA for the public key of another CA, and is held in the directory as
well. Anyone knows the public key of CA0 can verify the public key of
CAn by checking the certificate of each authority in the path. A
certification path from CA0 to CAn would then be a sequence which
took the following form:


           CA0   CA1  ; CA1   CA2  ; :::; CAn-1    CAn

Anybody with access to the directory may generate certification paths
by examining the entries in the directory (See Figure 3).


5.2    Tokens

A token is a signed data structure which is used to convey security
relevant information from the originator to a specific recipient. A token
may be formed by the use of either a symmetric algorithm or an
asymmetric algorithm. In the current 1988 X.400 series, the asymmetric
token has been defined. It consists of a series of data fields, with a
digital signature appended which is a digest of the data fields encrypted



                                       11


                                           U   h

                   __________||
                   |UV       |

                   ||VU     ______-__ohe||V           __________||
                   |_________|         @              |VY        |
            __________                   @          ` ||         ||
            |VW       |                                YV
            |        oe____-h|              @  h      |_________ |
            ||________||WV    W            Y    @                      ________*
 *__
__________                                         @                   |       *
 *  |
|          |                                                           |YZ     *
 *  |
|WX        |                                         @ @               |       *
 *  |
||XW      oe____-h||                                       hoe_________-||ZY   *
 *  ||
|          |       X                                   Z  |            |ZX     *
 *  |
|XZ        |     A                                        |            |_______*
 *__|
|_________ |       A                                      |
                    A                                     |
                     A                                    |
                      A                                   |
      C   h         A  h                               B   h
          6|           6|                                 6||
          |            |                                  |
          |            |                                  |
     _____|?___   _____|?___                          ____|?____
     |XC       |  |         |                         |ZB       |
     |_________|  |_________|XA                       |_________|

              Figure 3: CA hierarchy: a hypothetical example
a certification path from X to Z would be the sequence X   W  ; W
V  ; V   Y  ; Y   Z   (Adapted from [8 ].)

                                       12


under the secret key of the sender. If A and B are the originator and the
recipient respectively, then the precise form of a token is as follows:


                 A{AI; t; B; sgnData; encAlg; Bp[encData]}

which is equal to the set of (AI; t; B; sgnData; encAlg; Bp[encData]),
plus the appended signature notated by


             As[hash(AI; t; B; sgnData; encAlg; Bp[encData])]:

Here AI identifies the algorithm used by the originator to compute the
appended signature, t is a time stamp, sgnData is a collection of public
security relevant data, encData is a collection of secret security-relevant
data, Bp[encData] is the encryption of encData under the public key of
recipient, encAlg identifies the asymmetric algorithm to compute
Bp[encData].
The token can provide three security features. First, only the recipient
can derive the encData since only they have the secret key. Second, the
integrity of the token can be verified by checking the signature. Third,
the authentication of the origin of token is provided since the signature is
computed with the originator's secret key.
Two types of token, namely the bind token and the message token, are
defined in the X.400 series. Bind tokens are used for peer entity
authentication. Message tokens are used for end-to-end security services.
The sgnData of a message token may include the
content-confidentiality-algorithm-identifier; the content-integrity-check;
the message-security-label; the proof-of-delivery-request; and the
message-sequence-number.
The encData of a message token may include a
content-confidentiality-key; the content-integrity-check; the
message-security-label; a content-integrity-key; and a
message-sequence-number.
The sgnData of a bind token contains a random number and its
encData may convey information to be used by lower layers to provide
connection confidentiality [6 ].
Note that, although the recommendations do not explicitly specify the
asymmetric algorithm used, but require that both public and secret keys
can be used for encryption. The RSA cryptosystem is the only one that
can satisfy this requirement.
Security services are provided by using parameters in message
submission, message transfer and delivery operations. Some of them are
end-to-end services and only use the MTS for transferring the
parameters, but some involve interaction with the MTS.
In a message submission operation, security arguments of envelope may
include:



                                       13


    o  Originator certificate,

    o  Message token,

    o  Content confidentiality algorithm identifier,

    o  Content integrity check,

    o  Message origin authentication check,

    o  Message security label,

    o  Proof of submission request,

    o  Proof of delivery request.


A detailed description of how the security arguments can counter the
threats is beyond the scope of this paper. Instead, major security
mechanisms are described and a short analysis of each is 
