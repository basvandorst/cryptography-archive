Path: msuinfo!agate!howland.reston.ans.net!pipex!uknet!EU.net!uunet!mnemosyne.cs.du.edu!nyx10.cs.du.edu!not-for-mail
From: colin@nyx10.cs.du.edu (Colin Plumb)
Newsgroups: sci.crypt
Subject: Re: MDC
Date: 30 May 1994 20:42:48 -0600
Organization: /usr/lib/news/organi[sz]ation
Lines: 38
Message-ID: <2se878$1dv@nyx10.cs.du.edu>
References: <1994May25.233906.1050269@magic-bbs.corp.apple.com> <2s79oj$4r6@ccu2.auckland.ac.nz>

In article <2s79oj$4r6@ccu2.auckland.ac.nz>,
Peter Gutmann <pgut1@cs.aukuni.ac.nz> wrote:
>R._Braithwaite-Lee@magic-bbs.corp.apple.com writes:
>
>>Thanks for the pointer. Yes, I've examined MDC and discarded it. I'm uneasy
>>about the vulnerability to chosen-plaintext attacks. I'm currently looking
>>at variant approaches which conceal the input to the hash functions from an
>>attacker.
>
>What vulnerability is there?  It's no more (or less) vulnerable than any 
>block cipher.  Specifically, if the hash function truly has the properties 
>it's claimed to have, there's no problem.

Um... here's an example of a vulnerability in MDC that doesn't affect a
hash function (I'll use MD5 as an example, but it applies to SHA, HAVAL,
etc.):

Suppose that knowing a 128-bit input-hash/output-hash pair provides
a fraction of a bit of information about the 512-bit block of data
being hashed.  Say a quarter of a bit.  This lets you search 2^127.75
data blocks to find another that causes the given input-output transformation
and thus find a second message with the same hash.

This is not a significant hole in MD5 as a cryptographic hash.  It means
you only have to search 84% of the space you would have to without the
information, which is 2^128 possibilities.

But when used as a cipher, suppose those quarter bits can be put together.
After 2048 blocks (32 KB) of known plaintext, you have enough information to
compute the key.  This is because yyou have multiple input-output
pairs for a given data block, and each one puts more constraints on the
data block, until eventually you have it.

If a hash is actually perfect (no such information is leaked), it does
serve as a strong cipher, but a serious weakness in the cipher is not 
necessarily a serious weakness in the hash.
-- 
	-Colin
