Newsgroups: sci.crypt
Path: msuinfo!agate!usenet.hana.nm.kr!ames!pacbell.com!amdahl!netcomsv!netcom.com!richardr
From: richardr@netcom.com (Richard L. Robertson)
Subject: Re: Cryptos with back doors
Message-ID: <richardrCqD511.FHC@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <9405241017212935@springsboard.org>
Date: Wed, 25 May 1994 14:46:13 GMT
Lines: 44

alex.lane@springsboard.org (ALEX LANE) writes:

>John Payson asks:

>JP>Alternatively, if one has a version of, say, PGP in object-only form, is
>JP>there any way to know that the "session-keys" have not been chosen so as
>JP>to specifically allow cryptotext-only attacks against the PRIVATE KEY?

>Assuming you have an object version that's compatible with 2.3a, for
>which source *is* available, you modify the source to display the
>session key, submit a suspect message for decryption, and then examine
>the message's key to see whether it's a weak key.

Unfortunately, that isn't the only way that the seesion-keys can be
gimmicked.  A compromised object version of PGP 2.3a (or any version, for
that matter) could choose its session keys from a restricted key space
in a totally random way that would not be detectable unless a very
large number of messages were encrypted and the statistical distribution
of the generated sessions keys was checked against the distribution of
keys from an known uncorrupted version of PGP.  (It is even conceivable
that there are clever enough restricted key space distributions that
would pass almost any scrutiny, but even a simplistic method would
require a lot of effort to detect).

If the keyspace were artificially restricted by a compromised version of
PGP to ~ 2**32, then it would be very trivial for an opponent to read
the encrypted message traffic by using a brute force check of possible
keys in a ciphertext-only attack.

It would seem imperative that any object version of PGP have a very
secure and controlled distribution that can be trusted.  I have no
good idea on how to accomplish this without some form of zero-knowledge
proof technique.  Any ideas ??

Richard Robertson          richardr@netcom.com
Precision Software Products


>Cheers...
>+----------------------------------------------------------------------+
>  alex.lane@springsboard.org     |  voice: (303) 264-2399; fax -2363
>  Pagosa Springs, Colorado, USA  |  "You *can* get here from there!"
>  VC PGP fingerprint: 7F DB 06 E2 47 84 79 B4  32 3C A9 48 65 AA 5B C2
>+----------------------------------------------------------------------+
