Path: msuinfo!uwm.edu!psuvax1!news.pop.psu.edu!news.cac.psu.edu!howland.reston.ans.net!news.intercon.com!news1.digex.net!digex.net!not-for-mail
From: unicorn@access1.digex.net (Black Unicorn)
Newsgroups: sci.crypt
Subject: Re: Announcement: Mac Crypto Interface Project
Date: 19 May 1994 04:42:11 -0400
Organization: Express Access Online Communications, Greenbelt, MD USA
Lines: 157
Message-ID: <2rf8p3$db@access1.digex.net>
References: <199405171903.OAA11254@indial1.io.com>
NNTP-Posting-Host: access1.digex.net

In article <199405171903.OAA11254@indial1.io.com>,
Terry Ritter <ritter@indial1.io.com> wrote:
> In <2r3r35$fi8@access2.digex.net> unicorn@access.digex.net (Black
> Unicorn) writes:
>
>
>>If a messages is signed by me, and the signature checks out, the public
>                                                              ^^^^^^^^^^
>>key having been verified by some physical exchange or a trusted key
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>>signature, validity is no longer a cryptographic question.  There is


[...]

>
>
> Verification *is* a cryptographic question:  Without verification,
> there is no cryptographic relationship, despite the use of public-
> key technology.

True, but verification and initial certification are two matters.

What you seem to want to do is have a protocol that just says "I'm a 
nice, trustworthy guy."  PGP does not attempt to do this.

>
> With regard to the "trusted key signature," note that even if we
> trust the final provider, there may be an informant who has
> inserted a false key somewhere up the line.  This would be a
> "single point failure" which I would call an unacceptable risk.

My definition of "Trusted key signature" is that the signature is from a 
party you trust to sign keys.  Note that if you can estlablish that the 
key belongs to who it SAYS it does, that is verification.  The discovery 
of an informant is really a non-protocol question when you're dealing in 
this context.

>
>>There is
>>little doubt that the message was:
>>
>>1> Signed by the public key in question.
>>2> Not altered since.
>>
>>The real question is does the key belong to who it claims to belong to,
>>and has it been compromised?  This is a social question, and makes key
>>signatures a shade and not a bit (on/off black/white) question.
>
> I disagree.
>
> I think the real question is:  "Could my messages be read by an
> intermediate spoofer as well as the intended recipient?"  If so,
> I would say that the cryptosystem has not done a very good job.

And if this is your question, you have a certification that the key 
belongs to who it does, you have a physical exchange of keys and all the 
protocol is done properly.

What is an attacker to do?

You seem to be most worried about a man in the middle problem.  If you 
have made sure that you have THE KEY that THE RECIPIENT gave you, then 
the man in the middle problem is gone.  The software helps this cause by 
allowing signing, but it is up to YOU to satisify yourself that the key 
REALLY does belong to who it claims.

If I have made a proper exchange of keys with joe blow, and he sends me a 
message signed with his key, or I send him a note encrypted with his key, 
there are only a few posibilited of compromise.

1>  joe blow's key is compromised.
2>  Public key crypto is broken.

If you want a bit of software that will solve these problems, I don't 
have an answer for you.

> Black and white.
>
>
>>Signatures should instead bear some qualifying information, like "know
>>personally" or "physical exchange of key information" or "life long
>>friend."  In addition I would like to see a reputation signature as
>>well, a signature that says "not only is this a person who I know
>>personally, but I respect this person's judgement and perspective in
>>intellectual matters."  This in conjunction with the strong
>>signature method would make the web-of-trust model much more effective.
>
> Clearly, an informant gets to be an effective informant to the
> extent s/he is trusted by the sheep.  All that is necessary is to
> be an "early," "well known" or "intimidated" personage, and you
> can sweep up vast numbers of believing users with your perfidy.

How is this a question of cryptography?
Even a one time pad system is vunerable to this problem.


> I find it hard to believe that any cryptosystem based on third-
> party human "trust" could possibly be called a cryptosystem.  Just
> how much money or intimidation would it take to "turn" a normal
> net-person?  How does this compare with the investment and time
> needed to attack a key?

Then by your definition, every cryptosystem is not a cryptosystem.

How do I know that the President is really on the other end of the phone?
How do I know that my life long friend is betraying me?

How can you possibly expect a cryptosystem to solve these problems?

You can have the strongest cryptosystem in the world, but if your sending 
to your friend who is forwarding to bob, then you are compromised.

I don't understand how this is a cryptographic problem.  You are blurring 
the questions of trust in persons, and crypto.

> On the other hand, the relationship between me and the intended
> recipient is not simply an empty "trust" if the cryptosystem is
> secure:  If secret information gets out, we will *both* know who
> is responsible.  This is about all we can expect from a secret,
> but can we even say this if we have a weak cryptosystem?

How is it that this cannot happen to a "secure system"
If messages are unreadable without the key, then anyone with the key can 
read it.  How can you make a key personal to every person and 
uncompromisable?

> I think that a public-key cryptosystem should have a true
> cryptographic protocol for key validation.  Absent that, it should
> force at least a minimal manual validation before using any public
> key, or state that it only becomes a serious cryptosystem when used
> by crypto-trained operators.

It's a serious crypto system whatever is done.
Your confusing the trust in the data with the trust of the source of that 
data.  If a key is signed, and RSA/MD5/IDEA is not broken, then the only 
question to ask is "how much to I trust the PERSON who made the signature?"

I would never want to use a cryptosystem that insists on certain methods 
to certify keys.

You want the program to do all the work for you.
I don't see how it can.


> ---
> My postings to sci.crypt take over two days to arrive at io.com.
> For contemporaneous discussion, please copy any posted response
> directly to me by email.   Terry Ritter   ritter@io.com
>
>

-uni- (Dark)

-- 
073BB885A786F666 nemo repente fuit turpissimus - potestas scientiae in usu est
6E6D4506F6EDBC17 quaere verum ad infinitum, loquitur sub rosa    -    wichtig!
