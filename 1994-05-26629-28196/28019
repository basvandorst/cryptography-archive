Path: msuinfo!caen!newsxfer.itd.umich.edu!europa.eng.gtefsd.com!howland.reston.ans.net!usc!bloom-beacon.mit.edu!ai-lab!life!tk
From: tk@ai.mit.edu (Tom Knight)
Newsgroups: sci.crypt
Subject: Re: New Factoring Method via Quantum Computation
Date: 25 May 1994 17:51:15 GMT
Organization: MIT Artificial Intelligence Laboratory
Lines: 26
Message-ID: <TK.94May25135115@entropy.ai.mit.edu>
References: <2rin4n$73l@zip.eecs.umich.edu> <jktaberCq49xn.Dun@netcom.com>
	<2ru21o$fa0@sundog.tiac.net> <CqCwp4.GGL@dcs.ed.ac.uk>
	<2rvs6k$po8@nntp.ucs.ubc.ca>
NNTP-Posting-Host: entropy.ai.mit.edu
In-reply-to: unruh@physics.ubc.ca's message of 25 May 1994 15:51:48 GMT

>>> "-" == William Unruh <unruh@physics.ubc.ca> writes:

-> Thus a quantum computer could well be able to
-> solve only some subset of NP problems in polynomial time (or even
-> some subset of NPComplete). The notion of quantum NP and classical
-> NP are just very different.  -- Bill Unruh unruh@physics.ubc.ca

NP complete problems are NP complete because any such problem is
transformable in polynomial time to another in the class... So if we
solve one such problem in polynomial time, all such problems will be
solved in polynomial time.

But the factoring/discrete log problems solved by the Shor technique
are not known to be NP complete problems, so this is a moot point.

Rivest pointed out that there are, however, some superficially very
similar sounding problems, such as this one, which are NP complete:

Decide for given integers a,b,c if the equation x**2 mod a = b for
some integer 0 < x < c has a solution.  This is NP complete even if we
give you the factors of a,b,c.

We don't (yet) know if such problems can be formulated in a Shor-like
way for solution on a quantum computer.


