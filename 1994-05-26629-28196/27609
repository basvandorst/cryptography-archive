Path: msuinfo!agate!howland.reston.ans.net!pipex!lyra.csx.cam.ac.uk!mrr
From: mrr@cl.cam.ac.uk (Michael Roe)
Newsgroups: sci.crypt
Subject: Re: Vulnerability of ENIGMA and SZ 40/42
Date: 17 May 1994 12:05:02 GMT
Organization: U of Cambridge Computer Lab, UK
Lines: 51
Distribution: world
Message-ID: <2rabte$7aq@lyra.csx.cam.ac.uk>
References: <2r90ll$21b@search01.news.aol.com>
NNTP-Posting-Host: smew.cl.cam.ac.uk


> Has anyone analysed ENIGMA and/or SZ 40/42 in terms of absolute security?  How
> useable are they today?  Are they useable as the starting point for a new(er)
> cryptographic system?


During WWII, the Lorenz SZ-40 was cryptanalysed with a combination of 
cipher-text only and known-plaintext attacks. The 'Collosus' machine was used
to recover the initial rotor positions using a ciphertext-only correlation attack.

The determination of the switch settings was initially carried out by hand, but
later this was also performed automatically by Collosus. (It's another
ciphertext-only correlation attack). If the settings of the two clock-control
rotors (Mu) are known, the settings of the phi rotors can be recovered in a
similar way.

A possible way to attack the SZ-40 is to recover the settings of the Chi
rotors, then determine the setings of the Mu rotors using a small amount of
known plaintext (this would probably be done by hand with '40s technology)
and then recover the Psi rotors.

References: 
(1)``Codebreakers'' by F.H Hinsley and Alan Strip, chapters 19 and 20.
(2) The two examples of 'Fish' class machines in the Bletchley Park Museum
(3) Collosus wiring diagrams, also on display at Bletchley Park.

So no, I wouldn't recommend the use of the SZ-40/42 algorithms in modern designs.

If I wanted to improve the security of this algorithm, I wouldn't bother with
the Chi rotors and would instead use more clock-control rotors (assuming
I'm building an electromechanical machine and hence there's a physical
limit on the number of rotors). In particular, I'd use a separate clocking
sequence for each of the Phi rotors.

If you make the clocking sequence dependent on the plaintext, the security
of the design is subtantially improved (remember, recovering the switch settings
on the clock control rotors is the hard part). Unfortunately, modifications
of this type mean that any error in transmission will scramble the rest of the
message. In WWII, a modification of this type was briefly used: The fifth bit
of the plaintext from two characters back was used to ``modify'' the clocking
sequence. (I'm not sure if it was an ``and'' or an ``exclusive or''). [See
Codebreakers, chapter 21, p.181]

I've tried to see if it's possible to have feedback and yet make the machine
resynchronise after a transmission error. This seems to be fundemantally
difficult with clock-controlled rotor machines. It's easy with block ciphers ---
DES in CBC mode has exactly this property.

Michael Roe
Computer Security Group
Cambridge University Computer Laboratory
