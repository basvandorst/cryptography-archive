Path: msuinfo!agate!headwall.Stanford.EDU!Xenon.Stanford.EDU!kaufman
From: kaufman@Xenon.Stanford.EDU (Marc T. Kaufman)
Newsgroups: sci.crypt
Subject: Re: Bit Endian (was Re: DES Implementation Question)
Date: 5 May 1994 21:03:48 GMT
Organization: Computer Science Department, Stanford University.
Lines: 35
Message-ID: <2qbmvk$svf@Times.Stanford.EDU>
References: <2pve6o$dta@mojo.eng.umd.edu> <1994May2.053858.22202@mnemosyne.cs.du.edu> <2q4g1m$fm3@locutus.rchland.ibm.com>
NNTP-Posting-Host: xenon.stanford.edu
Keywords: DES

In article <2q4g1m$fm3@locutus.rchland.ibm.com>,
Larry Loen <lwloen@rchland.vnet.ibm.com> wrote:

>Just a usefully pendantic note.  There is no such thing as "big endian
>bit order".  I have had cause to study byte order endian lately and it is
>one of the biggest mares nests I have ever been involved in.

>...

>To underscore the point, there apparently are texts around that show
>the Intel 80x86 architecture numbered with the bits right to left or left
>to right.  Since no instruction whatever references things by bit
>number, there is no harm whatever from either approach and, unlike real
>endian, either notation may be adopted by a given application and even
>different orderings by different applications that pass bit strings to each
>other.  Likewise, different C compilers can have their int  x : 3 kind of
>stuff set up any way they like (interoperability is hell, but you were
>warned by ANSI C) and within itself, it all works just fine.  None of 
>this is possible with real endian.

BSF/BSR - Bit Scan
Scans an operand to find the first set bit.  If a set bit is found, the zero
flag is set and the destination operand is loaded with the bit index of the
first set bit encountered.  If no set bit is found, the zero flag is cleared.
BSF (Bit Scan Forward) scans from bit 0 to the most significant bit.
BSR (Bit Scan Reverse) scans from the most significant bit of an operand
to bit 0.

BT/BTC/BTR/BTS - Bit Tests
Copies the value of a specified bit into the carry flag....
[The bit index can be a full word, so that the bit string can span bytes]

On the 80x86, bits are numbered from 0 in the least significant (arithmetic)
position.

