Path: msuinfo!agate!howland.reston.ans.net!wupost!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Re: flaws, please...
Date: Thu, 26 May 94 20:43:25 CDT
Organization: University of Missouri, Columbia
Lines: 56
Message-ID: <16FC21236FS86.C445585@mizzou1.missouri.edu>
References: <2041@complex.complex.is>
NNTP-Posting-Host: mizzou1.missouri.edu

In article <2041@complex.complex.is>
frisk@complex.is (Fridrik Skulason) writes:
 
>Basically the idea is that the key is the seed in a pseudo-random number
>benerator, which outputs a string of bits, guaranteed not to repeat
>for a much longer period than the maximum size of messages that can be
>encrypted.   The message is then just XORed with this string.  He also says
>he can get 2^64 different bit streams, depending on the initial key.
 
   Hmmm.  This could describe using a 64-bit counter, 64 bits at a time,
as your keystream.  It takes a lot more than a long period to make a strong
stream cipher.
 
   Have you looked at output bit statistics?  Are there ever correlations
between bit i and bit j where i <> j?  Are there internal generator states
that can happen occasionally and that lead to a distinctive output pattern?
What kind of linear complexity profile does the output stream have?  Can
you dramatically decrease the linear complexity by flipping an occasional
bit in the keystream?  There are dozens of questions like this to ask....
 
>Now, as far as I can see...if the same key is used only once, this basically
>boils down to the problem of securely transporting the key, right ?  Even if
>somebody had the algorithm and an encrypted message, there is no feasible way
>to attempt decryption....
 
   I don't think this is likely to be the case, though many attacks on
stream ciphers are likely to depend on lots and lots of keystream to
analyze.  Some attacks may work best with lots of starts and stops (ie,
re-synching) in the keystream.
 
>However, the major problem that I see is that he doen't agree with me that it
>would be necessary to use each key only once.   Now, assuming one got two
>messages, which had been XORed with the same key, knowing something like that
>both contained ASCII text, it seems to me (if the messages are long enough)
>that it should be possible to break this...xoring the two messages together
>would eliminate the key, and frequency analysis of the result might go a long
>way towards retrieving the original messages.....or am I missing something ?
>
 
   Basically, you have two considerations:
 
1.  No matter how strong the stream cipher, you can't afford to allow any
part of the keystream to be used more than once.  If you are encrypting
10-byte messages at a time, and your keystream has a period of 2**64
bytes, then you're going to be safe encrypting quite a few messages under
the same key, but in different "starting-points" of the keystream.
It may be that the cipher you're looking at can start in only one place
in its keystream, as designed.  In that case, you need a different key
each time to ensure no repeated keystream.
 
2.  The more keystream you give an attacker, the more likely she is to
be able to use some attack against your stream cipher.
 
>-frisk
 
   --John Kelsey, c445585@mizzou1.missouri.edu
