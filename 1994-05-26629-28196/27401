Path: msuinfo!agate!howland.reston.ans.net!pipex!uknet!lsl!marcusd
From: marcusd@lsl.co.uk
Newsgroups: sci.crypt
Subject: RSA-xxxx, would DSPs be any use?
Message-ID: <1994May12.165356.4500@lsl.co.uk>
Date: 12 May 94 16:53:56 +0100
Organization: Laser-Scan Ltd., Cambridge
Lines: 46

DISCLAIMER :- I'm no expert on cryptanalysis, and no expert mathmatician.
I'm just an undergraduate on a real-time systems course, with 6 years
professional exeperience in Datacomms. So please dont flame, I'm trying to
learn.

Having said that, after reading the postings about the breaking of RSA129, it 
appears to me that the hardware used was based on 'standard' CPUs. Would there
be any advantage, or would it be possible, to use DSPs or VLSI solutions?
It appears to me that DSP chips are more suited to some math functions
than the general purpose CPUs, but not knowing exactly what functions were
applied in the factoring of RSA129, I'm unsure whether DSPs would  be capable.
The other advantage DSPs have is I/O, as they are designed to process,
typically large amounts of data, in as close to real-time as possible.
Two relatively new DSPs, the Sharp LH9124 and Texas Instruments TMS320C80 both
appear to outperform standard CPUs typically found in workstations.
TMS320C80 comprises of 4x64bit DSPs and a 32bit RISC cpu (plus video+DMA
controllers). Its constructed from 0.5 micron CMOS, and around 4M transistors.
Its quoted as being able to execute 2 billion instructions per second, and an
I/O bandwith of 400MBps. With that in mind, and assuming that those
instructions can be applied to factoring problems, it would appear to
 comfortably out-perform the SUN/ALPHA/INTEL CPUs. (I dont know what the exact
 instruction set of the TMS320C80 is, I'm awaiting the tech info from TI).
Sharp's LH9124 has quoted speeds of 15us for 10x10 matrix multiplies, 25ns for
a complex integer multiply. It supports Vector, Matrix, Logical and Arithmetic
operations. (Exact functions available if anyones interested - from Sharp's
data sheet). The Sharp also has the LH9320 which is an address generator, so if
the address patterns that it can generate are compatible with the problems of
factoring, then again there would be a substantial performance increase over
general CPUs. The 9320 can also hold a user-defined 32 word algorithm that may
beuseful. (address patterns supported available as well, if interested).

So, any comments?

I'm also after advice on good Crypto textbooks. Nothing too heavy, and
preferably based on using computers. For some reason I find algorithms
described in a machine-readable form (like C or Assembly language) easier to
understand than purely mathmatical representations (maybe I'm mutating from
a carbon based life-form to silicon. Must be them damned viruses I read about).


Marcus Daley,
Cambridge,
UK

marcusd@lsl.co.uk
sert92md@uk.ac.anglia.va
