Newsgroups: sci.crypt
Path: msuinfo!netnews.upenn.edu!dsinc!newsfeed.pitt.edu!gatech!howland.reston.ans.net!pipex!uknet!EU.net!uunet!wang!fitz
From: fitz@wang.com (Tom Fitzgerald)
Subject: Re: RSA weakness--chosen ciphertext attack
Organization: Wang Labs, Lowell MA, USA
Date: Fri, 13 May 1994 07:39:50 GMT
Message-ID: <CpqDAE.1rJ@wang.com>
References: <44050@mindlink.bc.ca> <2qdr5m$6ft@acoma.math.arizona.edu> 	<CpHyIy.HpC.3@cs.cmu.edu> <768512951Stu.stu@nemesis.wimsey.com> 	<2qn35bINN4og@flop.ENGR.ORST.EDU> 	<16FB411C8FS86.C445585@mizzou1.missouri.edu> <2qv70k$i0l@hemuli.tik.vtt.fi>
Sender: news@wang.com
Nntp-Posting-Host: fnord.wang.com
Lines: 39

Jan.Lucenius@tel.vtt.fi (Jan Lucenius) writes:

> If RSA (or actually any algorithm) is used for authentication in
> a simple challenge - response configuration, ie. one partner (A) sends
> a challenge that the other (B) encrypts using his private key; how can
> B know that the challenge really is a random number and not for example
> the hash of some document that A wants B to sign without B knowing it?

He can't.  A good rule of thumb is, never sign something you can't read or
haven't generated yourself.  (There are some exceptions to this, for things
like digital cash and notary public stuff, but in these cases the private
key is a special one used for nothing except signing blind messages, so
these attacks don't get you anything.)

There are other attacks, too.  Since signing is kinda the opposite of
encryption, you can trick someone into decrypting a message if you can get
him to sign random text.  Suppose C has sent a message to B in your example
above, encrypted with B's public key so only B can read it, and A
intercepts it.  'A' can transform the encrypted message into a different
message that B won't recognize, politely ask B to sign it (i.e. encrypt it
with his private key) and give it back.  Then A can un-transform it and
read the cleartext original C had sent.

> Of course this can be resolved with proper agreement and/or precisely
> defined algorithms. Any knowledge about how this is done in existing
> systems?

A good workaround is, if you do want to encrypt a random number (for
example your challenge-response idea), append to it a lot of random bits
and the string "THIS SIGNATURE IS FOR CHALLENGE-RESPONSE VALIDATION ONLY,
AND IS NOT A BINDING CONTRACT", sign the result, then give THAT to the
partner.  You can even add a timestamp or something.

Even better, don't use the same private key for signing contracts that
you use in challenge-response handshakes.....

-- 
Tom Fitzgerald   Wang Labs   Lowell MA, USA   1-508-967-5278   fitz@wang.com
Pardon me, I'm lost, can you direct me to the information superhighway?
