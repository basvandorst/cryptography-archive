Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!news.unt.edu!sol!fc14
From: fc14@sol.acs.unt.edu (Steve Tate)
Newsgroups: sci.math,sci.crypt,alt.security,alt.security.pgp,alt.security.ripem,comp.security.misc,alt.privacy
Subject: Re: Sieve Blocking for MPQS to improve mem-hier locality & performance
Followup-To: sci.math,sci.crypt,alt.security,alt.security.pgp,alt.security.ripem,comp.security.misc,alt.privacy
Date: 17 May 1994 14:34:22 GMT
Organization: University of North Texas
Lines: 20
Message-ID: <2rakle$67e@hermes.unt.edu>
References: <2q3hjp$pqc@linus.mitre.org> <2q40pkINN6vr@life.ai.mit.edu> <Cp7FpE.C7t@cwi.nl> <2q5mfpINNbvp@life.ai.mit.edu> <1994May1618.43.30.14234@silverton.berkeley.edu>
NNTP-Posting-Host: sol.acs.unt.edu
X-Newsreader: TIN [version 1.2 PL2]
Xref: msuinfo sci.math:72216 sci.crypt:27618 alt.security:16696 alt.security.pgp:13634 alt.security.ripem:961 comp.security.misc:9995 alt.privacy:15549

D. J. Bernstein (djb@silverton.berkeley.edu) wrote:
> QS and NFS can be run off disks or even tapes. For each p, as usual, you
> generate a list of x with p hitting x. Then you sort the pairs (p,x) by
> x. All you need to do this is fast sequential I/O.

Actually, if the factor base is small enough to be kept in cache or RAM
(depending on which level of the memory hierarchy you want to look at),
you don't need to actually store the sieve at all!  Just keep track
of the "next time" you will hit a multiple of p (for all p) in a priority
queue and go to town...

Unfortunately, while I know the basic ideas and mathematics behind the
quadratic sieve algorithms, I don't know a lot of the details.  For instance,
how big is the factor base for reasonable-sized (say, 129 digits...) numbers?

--
Steve Tate  ---  srt@cs.unt.edu   |  "Nationalism is an infantile sickness.
Dept. of Computer Sciences        |   It is the measles of the human race."
University of North Texas         |                     -- A. Einstein
Denton, TX  76201                 |
