Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Newsgroups: sci.crypt
Subject: Re: REQUEST FOR INPUT ON ONE TIME PAD SPECIFICATION
Date: 11 May 1994 21:25:57 GMT
Organization: University of Maryland, Baltimore County
Lines: 38
Message-ID: <2qrih5$7tn@news.umbc.edu>
References: <CpGJr7.Kw@freenet.carleton.ca>
NNTP-Posting-Host: umbc7.umbc.edu
X-Newsreader: TIN [version 1.2 PL2]

Ted Reinhardt (ab606@FreeNet.Carleton.CA) wrote:


: ONE TIME MESSAGE PAD SOFTWARE
: REQUEST FOR INPUT: REQUIREMENTS DEFINITION
: ------------------------------------------
:  

Don't provide for re-using the key.

We've had many threads on how to generate true random
numbers and the importance of NOT re-using any part of the
key.  The other tricky part of OTP implementation is keeping
the two parties, say Bob and Alice, synchronized in the key
streams.

Don't make the mistake of having each end use the same key
stream for sending and receiving.  You need both a Bob to
Alice stream and an Alice to Bob stream on each end.

There are lots of ways to get out of synch.  Provide some
way for both sides to settle on the first bit of the stream
that hasn't been used or destroyed by either.  Make this
happen automatically, and of course it must not reveal any
information about the values of key bits.

Although is easy to guard against, don't forget that an
adversary may modify these communications in an attempt to
force re-use of part of the key.


Also, the one-time pad allows an adversary to change
ciphertext corresponding to known plaintext into ciphertext
which will decrypt to a plaintext of the adversary's
choosing.  Either guard against this, or specify in the
requirements that you don't guard against such attacks.

--Bryan
