Path: msuinfo!agate!howland.reston.ans.net!pipex!sunic!EU.net!uunet!nwnexus!chinook!ken
From: ken@chinook.halcyon.com (Ken Pizzini)
Newsgroups: sci.crypt
Subject: Re: authentification over a network
Date: 12 May 1994 09:01:28 GMT
Organization: Northwest Nexus Inc.
Lines: 31
Message-ID: <2qsr98$t93@nwfocus.wa.com>
References: <wpp.768728108@marie>
NNTP-Posting-Host: chinook.halcyon.com
Keywords: authentification, server, client, network, DES, password, encryption

In article <wpp.768728108@marie>,
Kai Petzke <wpp@marie.physik.tu-berlin.de> wrote:
>I am looking for a good scheme to do login authentification
>over a network.  I want to use it with the database Postgres,
>but if I have to write new code for it, I will put it into
>an library, which should be of use with other STREAM type
>connections as well.

The S/Key package is pretty good for the requirements you listed,
except perhaps (c), depending on how strongly it is ment:
>	a) Withstands the packet sniffer.
>	b) Does not store the plaintext passwords in a database.
>	c) Does not require additional servers.

Quoting from the S/Key README:
  The S/KEY one-time password system provides authentication over networks
  that are subject to eavesdropping/reply attacks. This system has several
  advantages compared with other one-time or multi-use authentication
  systems.  The user's plain text password never crosses the network during
  login, or when executing other commands requiring authentication such as
  the UNIX passwd or su commands.  No secret information is stored anywhere,
  including the host being protected, and the underlying algorithm may be
  (and it fact, is) public knowledge. The remote end of this system can run
  on any locally available computer.  The host end could be integrated into
  any application requiring authentication.

S/Key can be obtained from:
    crimelab.com [198.64.127.1]          Directory: /pub/skey
    thumper.bellcore.com [128.96.41.1]   Directory: /pub/nmh

		--Ken Pizzini
