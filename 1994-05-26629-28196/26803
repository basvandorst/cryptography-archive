Path: msuinfo!news.mtu.edu!sol.ctr.columbia.edu!howland.reston.ans.net!usc!bloom-beacon.mit.edu!ai-lab!kiwi!lethin
From: lethin@kiwi.ai.mit.edu (Rich Lethin)
Newsgroups: sci.math,sci.crypt,alt.security,alt.security.pgp,alt.security.ripem,comp.security.misc,alt.privacy
Subject: Access patterns in MPQS for RSA129
Date: 2 May 1994 22:54:25 GMT
Organization: MIT Artificial Intelligence Lab
Lines: 15
Message-ID: <2q40b1INN6q2@life.ai.mit.edu>
References: <WARLORD.94Apr27000625@incommunicado.mit.edu> <strnlghtCoxF2o.DLA@netcom.com> <2pova8$mf3@fido.asd.sgi.com> <2pp12d$he6@hermes.unt.edu> <2prdckINNbge@early-bird.think.com> <1994Apr23.210009.5796@muvms6> <2pp0f0$mf3@fido.asd.sgi.com> <2pu8bn$dpe@linus.mitre.org> <strnlghtCp3zu5.5C7@netcom.com> <strnlghtCp40CK.684@netcom.com> <Cp598L.Fy9@cwi.nl> <2q3hjp$pqc@linus.mitre.org>
NNTP-Posting-Host: kiwi.ai.mit.edu
Xref: msuinfo sci.math:71082 sci.crypt:26803 alt.security:16296 alt.security.pgp:12359 alt.security.ripem:812 comp.security.misc:9661 alt.privacy:14888

The mpqs (sieve) access pattern appears to be irregular stride accessing
single words in a large array, eg. very little spatial or temporal
locality, rendering the data cache useless, and also, to some extent, the
TLB if it can't map the whole data set, and certainly any kind of swapping
or VM, rendering numbers like SPECmarks particularly meaningless.

Of course, there's tons of concurrency, so high-bandwidth interleaved main
memory systems (like those on a vector processor) are ideal, and smart
memory machines (high P/M ratios with lots of distributed floating point)
may be even more ideal.  Both these architectural features provide
bandwidth.  Of course, a much cheaper way to get bandwidth is to just
organize lots of workstations by email.  Which is just what it appears that
they did.

-- Rich
