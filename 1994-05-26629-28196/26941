Path: msuinfo!agate!dog.ee.lbl.gov!ihnp4.ucsd.edu!news.cerf.net!mvb.saic.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Newsgroups: sci.crypt,sci.math
Subject: Re: breaking RSA ==> factoring? (Was: RSA-129)
Followup-To: sci.crypt,sci.math
Date: 4 May 94 14:59:02
Organization: The Mitre Corp., Bedford, MA.
Lines: 31
Distribution: world
Message-ID: <EACHUS.94May4145902@spectre.mitre.org>
References: <WARLORD.94Apr27000625@incommunicado.mit.edu>
	<PCL.94Apr29160238@foo.oucs.ox.ac.uk> <strnlghtCp1Hrw.Fsz@netcom.com>
	<2ps4r5$daq@gap.cco.caltech.edu> <2psmk8$g6p@lace.Colorado.EDU>
	<2psslu$odo@gap.cco.caltech.edu> <2ptrpq$2p1@tuba.cit.cornell.edu>
	<767739299snz@kalva.demon.co.uk>
	<2q358c$o1i@fbi-news.informatik.uni-dortmund.de>
	<2q3gv4$sk5@hermes.unt.edu>
NNTP-Posting-Host: spectre.mitre.org
In-reply-to: fc14@sol.acs.unt.edu's message of 2 May 1994 18:32:04 GMT
Xref: msuinfo sci.crypt:26941 sci.math:71259

In article <2q3gv4$sk5@hermes.unt.edu> fc14@sol.acs.unt.edu (Steve Tate) writes:

   So my real question for any experts out there:  is there any work out there
   giving rigorous proofs that address the hardness of such number-theoretic
   problems?  Or is RSA, Inc.'s opinion that RSA is secure just biasing their
   statement here?

   The Blum, Blum, and Shub* paper is probably worth reading in this
context.  In particular it proves that for composite integers of a
certain form, finding roots is exactly as hard as factoring.  I
personally use Blum Integers when I use RSA.  It is possible that
knowing that a number is a Blum Integer would allow for faster
factoring, but a large enough fraction of products of two primes are
of this form to make that unlikely.

*A Simple Unpredictable Pseudo-Random Number Generator, by L. Blum, M.
Blum, and M. Shub, SIAM Journal of Computing, Vol 15, No. 2, May 1986.


					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
