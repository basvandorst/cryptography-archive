Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!news.kei.com!ub!csn!carbon!mercury.cair.du.edu!mnemosyne.cs.du.edu!nyx10!colin
From: colin@nyx10.cs.du.edu (Colin Plumb)
Subject: Re: DES Implementation Question
Message-ID: <1994May2.053858.22202@mnemosyne.cs.du.edu>
X-Disclaimer: Nyx is a public access Unix system run by the University
 	of Denver for the Denver community.  The University has neither
 	control over nor responsibility for the opinions of users.
Keywords: DES
Sender: usenet@mnemosyne.cs.du.edu (netnews admin account)
Organization: Nyx, Public Access Unix at U. of Denver Math/CS dept.
References: <2pve6o$dta@mojo.eng.umd.edu>
Date: Mon, 2 May 94 05:38:58 GMT
Lines: 23

In article <2pve6o$dta@mojo.eng.umd.edu>,
Christopher R. Bowman <crb@glue.umd.edu> wrote:
> I wrote some DES code myself, and I am having problems verifing its
> correct functioning.  I verified all the subroutines to the best
> of my abilities but I am still not getting the same output from
> my routines as I get from the SUN routines.  I am guessing that
> this is due to a difference in how I define the bit numbers.
> So here is my question.  Given say 8 bytes in memory, starting at
> say location 0 and ending at location 7 is there a prefered way
> to define where bit 1 is and so on?

Yes.  DES numbers its bits in big-endian order.  The most significant
bit of the irst byte is bit 1, and the least significant bit of the
last byte is bit 64.  The least significant bits of each byte are
the key partiy bytes (unlike every other use of parity in the world)

> Can someone give me, say a dozen key, input, output
> triplets for DES so that I can check my implementation?

There are some around, which someone will probably post or mail, but
I haven't get any handy.
-- 
	-Colin
