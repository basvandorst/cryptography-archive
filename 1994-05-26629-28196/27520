Path: msuinfo!agate!doc.ic.ac.uk!warwick!pipex!sunic!trane.uninett.no!eunet.no!nuug!EU.net!uunet!mnemosyne.cs.du.edu!nyx10.cs.du.edu!not-for-mail
From: colin@nyx10.cs.du.edu (Colin Plumb)
Newsgroups: sci.crypt
Subject: Re: Generating Primes from Passphrases...
Date: 15 May 1994 11:50:57 -0600
Organization: /usr/lib/news/organi[sz]ation
Lines: 19
Message-ID: <2r5ne1$grf@nyx10.cs.du.edu>
References: <2qm1hf$90m@agate.berkeley.edu>

In article <2qm1hf$90m@agate.berkeley.edu>,
Nicholas C. Weaver <nweaver@boojum.CS.Berkeley.EDU> wrote:
>
>	What is a good way to take something like a 150+ character
>passphrase and hash it to a large prime number?
>	Article references would be appreciated.

Try pgp2.5, randpool.c.  That might do what you want.  (And genprime.c,
although that's harder to read.)  That's a deterministic random number
generator which can be fed from anything.  (WARNING: in its current
state, it has byte-order dependencies.  For PGP, this doesn't matter,
but you may want to change that.)

There are some techniques (originated at the NSA, actually) for
deterministically generating large primes using a one-way hash,
so people can be assured you haven't cooked them.  This can be
useful for DSS.
-- 
	-Colin
