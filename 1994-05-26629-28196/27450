Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!decwrl!murky.apple.com!mumbo.apple.com!R._Braithwaite-Lee@magic-bbs.corp.apple.com
Message-ID: <1994May13.110422.967266@magic-bbs.corp.apple.com>
Newsgroups: sci.crypt
From: R._Braithwaite-Lee@magic-bbs.corp.apple.com
Distribution: world
Organization: M A G I C
Date: Fri, 13 May 1994 11:04:22 EST
Subject: Re: PGP and RSA implementation
Lines: 48

Steve:

>  > RSA is resistent to known plaintext.  To see this, I suggest that you
>  >fetch my PGP public key from a keyserver.  Then, encrypt as much
>  >plaintext as you wish with it.
> 
>   Errr... PGP encrypts the text proper with IDEA, and encrypts the
> randomly selected IDEA key with RSA.

Perhaps the original poster was suggesting that you use her(his?) key to
encrypt plaintext directly, without using PGP. You'd have to write your own
application to do it.

>   A pure-RSA encryption, in addition to being terribly slow, would be
> vulnerable to known-plaintext attacks, since anybody can encrypt the
> guessed plaintext with the recipient's public key -- if the guess is
> correct, the result will match the cyphertext.

Errr... Everything is vulnerable according to your description. Take PGP
for example. A random 128 bit session key is encrypted with RSA for each
message. So by your description, a cryptanalyst can guess 128 bit keys and
encrypt them repeatedly until one matches the encrypted version.

This is also true of encrypting less random subjects like plain text.
There's no avoiding the simple truth that for protocols which provide a way
of checking the validity of the result, the difficulty of cryptanalyzing
the message will never exceed the difficulty of guessing the plaintext.

If you use RSA for a large message, I presume you will use some sort of
protocol like CBC to deny the cryptanalyst a codebook attack.

Which leaves one question: Even if the cryptanalyst uses her (very large)
computer to store an extensive codebook for your RSA cipher, how can she
recover your private key from her gigabyte collection of
plaintext-ciphertext pairs?

The current conjecture is that any tractable algorithm to recover the
private key is as difficult as factoring.

Regards,
Reginald !:-)

73114.2055@compuserve.com (temporary)
Public Key Fingerprint: D8 B8 C1 D0 DD 56 20 B4  06 A2 81 83 87 E8 8B 64
(Send message with subject "HELP" to pgp-public-keys@pgp.ox.ac.uk)



