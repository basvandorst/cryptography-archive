Path: msuinfo!caen!spool.mu.edu!agate!rollins.EECS.Berkeley.EDU!not-for-mail
From: cs61a-eq@rollins.EECS.Berkeley.EDU (Sam Trenholme)
Newsgroups: sci.crypt,alt.security.pgp
Subject: HOw to have REALLY BIG keys in pgp
Date: 22 May 1994 00:37:21 -0700
Organization: University of California, Berkeley
Lines: 65
Message-ID: <2rn23h$1q2@rollins.EECS.Berkeley.EDU>
References: <Cq3F1t.13q2@yuma.acns.colostate.edu> <2rk107$10r@powell.eecs.berkeley.edu>
NNTP-Posting-Host: rollins.eecs.berkeley.edu
Xref: msuinfo sci.crypt:27841 alt.security.pgp:14217

I wrote:
>It is fairly easy to hack all three versions of PGP to accept larger keys,
>email me for more information, but hacking that RSAREF library violates the 
>contract you agreed to when you got PGP2.5.

I got many email requests for this information (alas, I lost the address
of the people requesting this info), so I have decided to post it. Please
note this this may violate your agreement with rsa.com in PGP2.5.

Here is how to increase the bits:

Pleasenote that these larger keys are NOT backwards-compatable with earlier
versions of PGP :(

in "mpilib.h" ("pgp25/src/mpilib.h" in PGP2.5), change line 317 from:

#define MAX_BIT_PRECISION (1280+(2*UNITSIZE))

to:

#define MAX_BIT_PRECISION (32000+(2*UNITSIZE))

and line 319 from:

#define MAX_BIT_PRECISION 1280

to:

#define MAX_BIT_PRECISION 32000

The above is the ony change you have to make to make pgp23a have bigger keys.
To get pgp25 to accept bigger keys, do the following:

in "rsaref2/source/rsaref.h" change line 34 from:

#define MAX_RSA_MODULUS_BITS 1024

to:

#define MAX_RSA_MODULUS_BITS 32000

(you might also want to change line 33 from:

#define MIN_RSA_MODULUS_BITS 508

to:

#define MIN_RSA_MODULUS_BITS 300

to make pgp2.5 100% backwards-compatable with previous versions of PGP.)

Please note that this may violate your agreement with RSAREF. 
All of the other changes do not violate this agreement, however, only
the changes to "rsaref.h".

in "pgp25/src/keymgmt.c", change line 2621 from:

        if (keybits > 1024)

to:

        if (keybits > 32000)

These changes will let you have REALLY BIG keys in PGP.

