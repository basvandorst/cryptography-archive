Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!news.umbc.edu!haven.umd.edu!cs.umd.edu!not-for-mail
From: harwood@umiacs.umd.edu (David Harwood)
Newsgroups: sci.math,sci.crypt,alt.security,alt.security.pgp,alt.security.ripem,comp.security.misc,alt.privacy
Subject: Re: RSA-129
Date: 2 May 1994 19:25:26 -0400
Organization: UMIACS, University of Maryland, College Park, MD 20742
Lines: 30
Message-ID: <2q4256$ahr@earendel.umiacs.umd.edu>
References: <WARLORD.94Apr27000625@incommunicado.mit.edu> <JET.94Apr28170538@boxer.nas.nasa.gov> <2q3huh$a99@sol.tis.com> <strnlghtCp73J9.G8B@netcom.com>
NNTP-Posting-Host: earendel.umiacs.umd.edu
Xref: msuinfo sci.math:71087 sci.crypt:26806 alt.security:16299 alt.security.pgp:12362 alt.security.ripem:815 comp.security.misc:9664 alt.privacy:14891

In article <strnlghtCp73J9.G8B@netcom.com>,
David Sternlight <david@sternlight.com> wrote:
[...]
|No. My point is to get qualified experts here to state specific and
|up-to-date security properties of RSA keys of length 512 and 1024, in terms
|of time to crack by organizations with the presumed power, money,
|computation power, and motivation of the NSA as a surrogate for its foreign
|opposite numbers. It is also to get some similar measure on how long the
|IPRA key should be.
\\\\\\
I think you already have enough information in several postings
to make as good a guess as anyone - something like 50-200 years
to factor a 1024 bit RSA number using best feasible technology and
algorithms - say 10,000 processors of custom design (for the particular
factoring algorithm). Only significantly more efficient algorithms
are going to improve the situation. There has been no analysis of
parallel computational complexity since no one has tried to specify
a feasible model of a custom processor (eg circuit complexity, parallel
memory access, or. say. constant-time evaluation of polynomials of
certain "size".) No one can know how long it would take to factor
a long number unless they specify a certain hypothetical processor
(with its very large cache) and a multiprocessor model for the problem.
The great difficulties would be in designing and manfacturing and
maintaining the special purpose machine - which would be instantly 
obsolete, since it would be unavailing against 2048 bit RSA numbers,
and perhaps even useless if a new factoring algorithm was discovered.
Despite my remarks about custom processors, I think it would be foolish
to build a custom parallel computer for factoring numbers. You need
better algorithms far more than better computers. (This is, of course,
an inexpert opinion.)
