Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!news.bu.edu!dartvax.dartmouth.edu!usenet
From: Benjamin.J.Tilly@dartmouth.edu (Benjamin J. Tilly)
Newsgroups: sci.math,sci.crypt,alt.security,alt.security.pgp,comp.security.misc,alt.privacy
Subject: Re: RSA-129
Date: 6 May 1994 16:29:16 GMT
Organization: Dartmouth College, Hanover, NH
Lines: 85
Message-ID: <2qdr8s$2u9@dartvax.dartmouth.edu>
References: <WARLORD.94Apr27000625@incommunicado.mit.edu> 
 <2q3huh$a99@sol.tis.com> <strnlghtCp73J9.G8B@netcom.com> 
 <lou.768028166@cadence.com>  <strnlghtCpBLsn.A67@netcom.com>
NNTP-Posting-Host: at-sn-362.dartmouth.edu
X-Posted-From: InterNews 1.0.1b8@dartmouth.edu
Xref: msuinfo sci.math:71426 sci.crypt:27100 alt.security:16462 alt.security.pgp:12656 comp.security.misc:9826 alt.privacy:15110

In article <strnlghtCpBLsn.A67@netcom.com>
strnlght@netcom.com (David Sternlight) writes:

> Lou Scheffer posts a messsage in which, after taking me to task for asking
> the question the way I did, answers it in my terms.
> 
> Unfortunately, with his assumptions it takes just under 4 months to break a
> 1024 bit key, and another expert message recently posted has such keys
> lasting for 20 to 40 years.
> 
Louis made two assumptions of improvements of 10 in speed, then he
assumed 10 times as much money as you did. Most other posters have also
picked improvements like this out of their hats. Their uniform
conclusions are that the keys are not, with present algorithms or
anything like present technology, going to be able to be broken fast
enough for the government to break more than a few peoples keys.

> Is it any wonder I find the kind of impressionistic "off the top of one's
> head" analysis I'm seeing here a trial, and suggest a careful and detailed
> analysis is needed. I have to say as one looking for a practical answer that
> seems reliable, that so far the various experts here have not distinguished
> themselves.
> 
One of the advantages of doing the calculations for yourself is that
you pick up an appreciation for the limitations of doing these
estimates. As Bob said the estimates that you get are highly dependent
on economic assumptions of a variety of sorts. But the relevant answer
is that breaking 1024 bit keys sequentially is not reasonable.

> I have to add that given the discrepancies in the answers of those who did
> take the trouble (thanks) to do the problem in the terms I suggested, any
> remarks calling the rationality of my own concerns and questions into doubt
> are singularly unpersuasive.

I suggest that you need to do some back-of-the-envelope calculations on
a variety of topics. There was a good thread on sci.physics a while ago
about this. The answers are not perfect, but you can get a useful
answer. However you have to expect a variation of an order of magnitude
depending on what assumptions you make. If one of your assumptions is
order of magnitude improvements in algorithms/hardware/money spent then
you get estimates that can vary wildly. For this question people
assumed improvements that were more than they expect, and then came up
with figures that said that solving these problems serially is not
going to be fast enough to be a real problem. That conclusion is not in
doubt.

To really critique the analysis you have to critique the assumptions,
not just say that slightly different assumptions give different
answers. Philip Brown claims that cracking multiple keys could probably
be done faster than doing them sequentially. How much faster? If I took
a million random keys could I find a group of perhaps a few hundred
which would relate to each other nicely so that in the process of
solving each I get information about the others and then solve the
final problem for all of them a lot faster? Could an expert comment on
that possibility for me?

And if you want what I consider a *rea*l concern, think about this. For
any public key in use the answer is known. In fact the answer is known
to a computer program running on a computer used by an individual whom
you know. Furthermore you know that this computer program is likely to
be one of a limited list of programs. Is it feasible to write a program
to go to that computer and steal the answer from there? How about a
virus that would steal random keys and then send them discreetly back
to you? IMO this is a far more viable way to crack large numbers of
keys than solving the math problem...

Think about it. The moral is that your crypto is only as good as the
information needed to decrypt it is secret. And at present the
mathematical algorithm is probably more secure than the program that
you keep the information in.

Ben Tilly

BTW I found out why David does not like hearing that the CPSR petition
is a hoax. Apparently when initial reports came out that they had
30,000 or more signatures he was convinced that this was a hoax, said
so, and then put for a detailed analysis "proving" that someone was
deluding them with fake signatures. He was extremely adamant about this
fact, and was quite sure that he had demonstrated it beyond a
reasonable doubt. Well the petition ended up being 47,000 signatures
and they had a pretty good procedure for confirming the signatures. I
just thought that I would let people know for those who (like me) do
not follow comp.org.eff.talk or comp.org.cpsr.talk. I think that it
might not be a bad thing if this story followed David for a while. Just
goes to show how much his "expertise" can be trusted. (NOT!)
