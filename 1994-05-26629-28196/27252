Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!panix!zip.eecs.umich.edu!newsxfer.itd.umich.edu!nntp.cs.ubc.ca!unixg.ubc.ca!unruh
From: unruh@physics.ubc.ca (William Unruh)
Newsgroups: sci.math,sci.crypt,alt.security,alt.security.pgp,alt.security.ripem,comp.security.misc,alt.privacy
Subject: Re: RSA-129
Date: 9 May 1994 20:18:12 GMT
Organization: The University of British Columbia
Lines: 43
Distribution: world
Message-ID: <2qm5q4$9jf@nntp.ucs.ubc.ca>
References: <strnlghtCpBLsn.A67@netcom.com> <CpIHCt.7wE@cwi.nl> <2qk7fv$5b3@nntp.ucs.ubc.ca> <2ql3p9$k5k@linus.mitre.org>
NNTP-Posting-Host: physics.ubc.ca
Xref: msuinfo sci.math:71634 sci.crypt:27252 alt.security:16547 alt.security.pgp:12827 alt.security.ripem:922 comp.security.misc:9885 alt.privacy:15220

bs@gauss.mitre.org (Robert D. Silverman) writes:

> 
......
>(1) RSA_129 could have been done faster than it was (by using GNFS).

>(2) GNFS runs in time  exp((c+o(1)) (log N)^(1/3) (loglog N)^(2/3))

>The best known value for c is ~ 1.91

>If one (naiively) ignores o(1) and puts in 2^512, then 2^1024, one
>gets a ratio of 6.7 x 10^6.  This ignores the fact that o(1) decreases
>as N increases.  I have a (partial) estimate of how fast o(1) goes to
>zero for the special number field sieve. If I naiively assume o(1)
>behaves similarly for GNFS, I get a ratio of 10^4 to 10^5, depending
>upon whether I want to be pessimistic or optimistic... (i.e. the current
>data I have does not give a perfectly smooth curve for o(1). There are
>bumps owing to statistical variation in the numbers I have done with SNFS)
>If you want to see how o(1) behaves for QS, see the following:

>A Practical Analysis of the Elliptic Curve Factoring Algorithm
>R. Silverman & S.S. Wagstaff Jr.  Math Comp.  July 1993


>Any analysis Rivest did in 1990 is obsolete. GNFS was not known in 1990.

 OK, but they used the quadratic sieve, not GNFS.
 If one solves the equation 
 6*10^4 MIPS years = exp(C*(ln(n)^1/3 * (ln(ln(n))^2/3)
 for C with n=10^129 one gets C= 1.87. Ie, they did the job in a better
 time than any possible GNFS according to you. Ie, your o(1) would
 have to be negative  or that the technique they used was far
 supperior to GNFS for the number they were factoring.
  So let us say that the QS
 is better for smaller numbers but for larger numbers ( 2^1024) the
 GNFS is better  and that for n=2^1024 we have c=1.91 This would give the number of
 operations needed  for the GNFS on 10^1024 as 
 8*10^26 vs the 2*10^17(=6GIPS years) which is what they spent on 10^129.
They differ by 10^9 not 10^4.  Again I do not understand.

--
Bill Unruh
unruh@physics.ubc.ca
