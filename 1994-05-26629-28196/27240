Path: msuinfo!agate!howland.reston.ans.net!usc!nic-nac.CSU.net!news.Cerritos.edu!news.Arizona.EDU!math.arizona.edu!math.arizona.edu!not-for-mail
From: uurtamo@math.arizona.edu (Steve Uurtamo)
Newsgroups: sci.crypt
Subject: Re: prime generation and testing
Date: 9 May 1994 09:49:48 -0700
Organization: Mathematics Department, University of Arizona
Lines: 58
Message-ID: <2qlpjc$chr@ame2.math.arizona.edu>
References: <2ql5k8$h83$1@perth.dialix.oz.au>
NNTP-Posting-Host: ame2.math.arizona.edu

In article <2ql5k8$h83$1@perth.dialix.oz.au>,
Phil Sutherland <philsuth@perth.DIALix.oz.au> wrote:
>Gentle folk,
>
>I'm currently performing a code review of some RSA key generation
>software. The prime number generation algorithm works as follows:-
>
>1. A random, odd number of the appropriate size is generated.
>2. Trial divisions are performed by small primes (up to 2069).
>3. Four iterations of the Lehmann test are performed if the number
>   passes step 2.
>4. If the number passes step3 it is assumed to be prime.

1. Is good, but read on:
2. You might think about increasing the number of primes that you trial
   divide by.  Maybe up to like 100,000.  I can give you faster methods
   if you're running on a very slow machine.
3. Do you mean the Lucas-Lehmer test?  You might want to try only four bases.
   It can't hurt to try a few more.
4. Okay.

Make SURE (absolutely sure) that p+1 and p-1 and q+1 and q-1 do not 
divide into lots of little factors.  Same thing with pq-1 and pq+1.

Just increase the amount of testing that you do until you start to tax your
machine.  If you're really ambitious, and have a good machine, you might want
to PROVE that these numbers are prime.  It doesn't take a ridiculous amount 
of work, but definitely a lot more.

>
>My questions are:-
>
>a. Should more iterations be performed of the Lehmann test? My
>understanding is that this test is only passed with a probability
>of a little over 50%. If this is so, then a composite number will
>be chosen in about 1 case in 10000 on average.

This number is not accurate.  Since no-one knows what the distribution
of primes is, any probabilities that you see need to be taken with a
VERY large grain of salt.  The probability that it will pass as many
tests as you give it will be 100% if it's a Carmichael number.  You can't
just notice that 1/2 of the numbers will fail/pass on the first try and
then say that for any number that is also the case.  This probably isn't
as important to you, but just try a bunch of bases just to make sure.

>b. If a composite number is inadvertently chosen by the algorithm,
>will a trial RSA encryption and decryption using keys built from this
>number and another prime definitely fail? If so, this could be
>regarded as a final test.

All that will happen is that you might recieve a very unpleasant surprise
when someone tries to decrypt your messages.  It might be that they are
able to with VERY little effort.  Since it boils down to factoring pq, if
p is actualy abcdef, where a-f are all easy to find, then factoring pq is
made that much easier.


steve
