Path: msuinfo!news.mtu.edu!sol.ctr.columbia.edu!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Newsgroups: sci.crypt
Subject: Re: Certifying keys, web-of-trust, etc
Date: 24 May 94 18:55:58
Organization: The Mitre Corp., Bedford, MA.
Lines: 32
Message-ID: <EACHUS.94May24185558@spectre.mitre.org>
References: <199405231650.LAA03462@indial1.io.com>
NNTP-Posting-Host: spectre.mitre.org
In-reply-to: ritter@indial1.io.com's message of 23 May 1994 11:52:53 -0500

In article <199405231650.LAA03462@indial1.io.com> ritter@indial1.io.com (Terry Ritter) writes:

  > People should be doing this now!  Anyone using PGP other than as
  > a novel toy should get each key directly from the owner *by second
  > channel* (not email), or "certify" each key with the owner *through
  > a second channel*.  This is the certification on which PGP relies.
  > It is why the human-readable key-hash exists.

    I tend to see solutions, not problems.  There is a simple,
straightfoward solution here.  Print you public key on your business
card, on QSL and QSO cards (if you don't know what they are ignore
it), on the foot of your letterhead, etc.  In fact, I hope soon you
can not only sign journal articles in preprints and e-mail versions,
but in the magazines too.  With modern printing processes, you don't
have to worry about the printer getting it wrong six times, etc.

    This way the "public" web of trust--people you meet in person,
people who buy your products, etc. will have a copy of your key sans
authenticating authority, and without a need for one.  If everyone
does this, then spoofing keyservers will be found out quickly, and in
many cases no central authority will be needed.  Of course, no one is
going to enter your key from the card unless necessary, but I assume
they will do some comparisions if they want to be sure they are not
being spoofed.

--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
