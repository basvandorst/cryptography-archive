Newsgroups: sci.crypt
Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!decwrl!murky.apple.com!mumbo.apple.com!gallant.apple.com!NewsWatcher!user
From: pwd@apple.com (Patrick W. P. Dirks)
Subject: Re: Scrambling Algorithm
Sender: news@gallant.apple.com
Message-ID: <pwd-160594183658@17.130.21.25>
Date: Tue, 17 May 1994 02:36:58 GMT
References: <2ql5q8$f42@raffles.technet.sg> <CpqE3x.Lpx@cbnewsh.cb.att.com>
Organization: Apple Computer, Inc.
Followup-To: sci.crypt
Lines: 57

In article <CpqE3x.Lpx@cbnewsh.cb.att.com>, wcs@anchor.ho.att.com (Bill
Stewart +1-510-484-6204) wrote:

> In article <2ql5q8$f42@raffles.technet.sg> scornd5@solomon.technet.sg (ng wee teck) writes:
> 
>    I am currently working on building a security API for a desktop 
>    videoconferencing system. The target platform is a 486DX66. As there is a
>    need to protect the contents of the video from intruders and tapping, I need
>    to scramble or encrypt the video. Which is more feasible? Could anyone help
>    me by suggesting a FTP site from which I can get a free copy of scrambling
>    software to try. Better still if source is available.
> 
> You have two basic choices in digital systems:
> - get something with known high-quality strong cryptography,
>   which your government might object to even more strongly than mine :-), 
>   and which will require some computing capacity
>   (not very expensive by computer standards, though perhaps a bit
>   expensive for inexpensive mass-market products), or
> - do something fast, inexpensive, and easily broken,
>   which won't provide any real security and may still upset some governments.
> 
> - (Analog systems also let you do weak analog scrambling, but that's
>   mainly useful if you aren't converting the signal to digital where you
>   can use strong crypto.)
> 
> Please choose strong cryptographic techniques.  If you want a good
> book on practical cryptography, I recommend Bruce Schneier's book
> "Applied Cryptography", ISBN 0-471-59756-2.
>

[snip]

Note that the bandwidth requirements of video usually rule out software
encryption using something like DES or triple-DES of the full signal.  I
understand it's not uncommon to encrypt just the AUDIO portion using strong
encryption; I believe that's what VideoCypher II does.

The video signal can be protected using a combination of hardware and
software methods, using an encrypted signal to instruct the analog hardware
how to reconstruct the signal.  Alternatively, simple scrambling operations
in software could be controlled using an encrypted signal as a guide.  You
could swap each video line at a random point, for instance, and send a list
of the cut points under a DES or triple-DES key associated with each frame
(you can transmit a little data during the blanking interval, typically). 
The determination of the key is a completely separate system: you could
have both sides pre-agree (and type in the same password on each end, for
instance) or use Diffie-Hellman key exchange to agree on a session key, as
Bill Stewart suggested.

The time-value of video information might well be low enough that even one
frame later it doesn't help much to be able to reconstruct the signal, so
even relatively weak scrambling might suffice.  I don't know if you're
worried about an interceptor who can store the entire transmission on-line
and slowly un-do the encryption frame-by-frame, line-by-line.

Hope this helps,
-Patrick Penzias Dirks.
