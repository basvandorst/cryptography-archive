Path: msuinfo!agate!ihnp4.ucsd.edu!usc!nic-nac.CSU.net!charnel.ecst.csuchico.edu!psgrain!reuter.cse.ogi.edu!flop.ENGR.ORST.EDU!watson.ece.orst.edu!johnsos
From: johnsos@watson.ece.orst.edu (scott johnson)
Newsgroups: sci.crypt
Subject: Re: Newbe Question about RSA
Date: 9 May 1994 04:29:43 GMT
Organization: Electrical and Computer Engineering Department, Oregon State University
Lines: 33
Message-ID: <2qke7nINNsfo@flop.ENGR.ORST.EDU>
References: <2qkb4a$5vm@gaia.internex.net>
NNTP-Posting-Host: watson.ece.orst.edu

In article <2qkb4a$5vm@gaia.internex.net>,
Rick H. Wesson <wessorh@ar.com> wrote:
>I've read that factoring N to aquire p and q to get d. Why is it not a good idea to 
>multiply all known primes together into a table, and check if N is in it, and then 
>look up p and q? Seems as though It would take ther same amount of time and each
>time you worked the problem it would get easyer for more searches as your database grew.
>
>-Rick
>
>
>

Nice idea, but.....

The number of primes less than a given number n is O(n/log n).  The
number of PRODUCTS of primes less than n is therefore O((n/log n)^2).

Assuming n is a 512-bit number in binary, this means it is approximately a
153-154 digit number in decimal, or approximately 10^153.  
The natural log of 10^153 is somewhere  in the 400-500 range (wild 
guess).   To construct such a table, it would require approximately 
10^300 entries.  That's a googol cubed.

This is, of course, complicated by the fact that there are only 10^80 or
so particles in the universe.

The long and short of it is, what you suggest is impossible.



/sj/


