Path: msuinfo!uwm.edu!spool.mu.edu!howland.reston.ans.net!europa.eng.gtefsd.com!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Newsgroups: sci.crypt
Subject: Re: 2 practical cryptography questions about a secure-drive type system
Date: 11 May 1994 20:57:02 GMT
Organization: University of Maryland, Baltimore County
Lines: 46
Message-ID: <2qrgqu$7tn@news.umbc.edu>
References: <2qiu5f$9bj@vixen.cso.uiuc.edu> <2qpaln$fge@msuinfo.cl.msu.edu> <2qr5bg$m9e@agate.berkeley.edu>
NNTP-Posting-Host: umbc7.umbc.edu
X-Newsreader: TIN [version 1.2 PL2]

Steve Pope (spp@bob.eecs.berkeley.edu) wrote:
: mrr@scss3.cl.msu.edu (Anonymous) writes:

: >Nicolas S Dade (nd8067@ehsn4.cen.uiuc.edu) wrote:
: >
: >: I am fooling around with encrypting a small partition on my harddrive. I
: >: have written a device driver that decrypts and encrypts sectors ...
: >: In an effort to improve the security of my device driver, I would like to
: >: salt the encryption of each sector with a sector dependant salt.
: >
: >I would suggest using the cipher with a single key in CBC mode,
: >with a new initializing vector for each sector.  The vector
: >could be an encrypted form of the key+sector number or some such info.

: Seems we had a discussion here a few weeks ago with the conclusion
: that a random, secret IV does not increase security in 
: CBC mode (only the first cipher block in the sector would
: be made more difficult to decrypt by this method).

I'm not sure which discussion you mean.  A random IV does not provide
protection against exhaustive search, but it does hide evidence of
modification.  

In another discussion of crypto-disks, we concluded that a new, random
IV for each disk page provides the best security, but it's annoying to
implement because you have to store the IVs.  You need to either start
each page with an IV, so logical pages no longer line up with physical
pages; or keep a table of IV's, which has other disadvantages.  Random
IVs do allow you to re-encrypt a page at any time with a new IV, so if
someone has copies of the ciphertext at different times, they still
can't tell what has changed.

The next most secure source of IV's is a system like SFS uses.  You
compute the IV from the sector number, perhaps some volume-wide salt,
and a hash of all blocks of the page _except_ the first.  In CBC or
CFB mode you can decrypt all the blocks except the first, (since a
block depends on itself and the previous ciphertext block) then
recompute the IV to recover the first block.  (This isn't exactly what
SFS does as I understand.)  Using this technique any change in a the
page's plaintext will effect all the ciphertext.  The exact same
plaintext in the same place, however, will result in the same
ciphertext.

Nicolas--Good luck with the project.  Don't use FEAL.

--Bryan
