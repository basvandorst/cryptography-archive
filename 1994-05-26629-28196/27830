Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!zombie.ncsc.mil!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Certifying keys, web-of-trust, etc
Date: Sat, 21 May 94 17:42:31 CDT
Organization: University of Missouri, Columbia
Lines: 35
Message-ID: <16FBDF908S86.C445585@mizzou1.missouri.edu>
References: <199405211944.OAA02097@indial1.io.com>
NNTP-Posting-Host: mizzou1.missouri.edu

In article <199405211944.OAA02097@indial1.io.com>
ritter@indial1.io.com (Terry Ritter) writes:
 
[Much deleted....]
> No.  I want a cryptographic system to provide what it can, and
> clearly disclaim what it does not provide.  A public-key system
> without a strong cryptographic protocol for key-certification
> cannot be relied upon as a secure link.  Such a system is only
> secure to the extent that there is a competent crypto operator
> who will not use the system without certifying the key.  To what
> extent do you suppose this is done today?
 
   Maybe one solution would be a feature in PGP to allow two mutually-
trustful users to run a comparison of the hash of all the keys they
had in common, and to flag any public keys for which they didn't have
the same value.  This wouldn't eliminate the problem entirely, but it
*would* make it easy to ensure that a small number of peoples' keys
weren't being compromised, so long as they ran this kind of check.
 
 
   Of course, making sure these weren't being altered on the fly might
be difficult.  Maybe the people would need to take some extra pre-
cautions, such as reading the hash of their respective keys over the
phone.
 
   Are there any ways of automating this kind of checking?  This should
be done for *any* PK-based system, to ensure meet-in-the-middle attacks
are extremely likely to be caught.
 
   --John Kelsey, c445585@mizzou1.missouri.edu
 
> ---
> Terry Ritter   ritter@io.com
>
>
