Path: msuinfo!agate!howland.reston.ans.net!EU.net!ieunet!ieunet!vax1.dcu.ie!75001969
From: 75001969@vax1.dcu.ie
Newsgroups: sci.crypt
Subject: Re: Random Number Analysis Code.
Message-ID: <1994May16.121032.1222@vax1.dcu.ie>
Date: 16 May 94 12:10:32 GMT
References: <1994May11.211423.13674@ns.network.com> <16FB51441FS86.C445585@mizzou1.missouri.edu> <2r2n8v$45j@la-jiao.aktis.com>
Lines: 26

In article <2r2n8v$45j@la-jiao.aktis.com>, don@cam.ov.com (Donald T. Davis) writes:
>>hughes@network.com (James P. Hughes) writes:
>>>
>>>I am looking to find code for analyzing a true random number stream.
>>>
> john kelsey responded:
>> 
>>   Maurer wrote an article in the procedings of either Eurocrypt 90 or
>>Eurocrypt 91 that outlined an algorithm to analyse the statistics of a
>>random bit stream.
> 
> the citation is: ueli maurer, "a universal statistical test for
> random bit generators," crypto '90 conf. proc., springer-verlag
> lecture notes in computer science #537, 1991. pp. 408-420.
> 

Also : Maurer, U. "A Universal Statistical test for random bit generators"
Journal of Cryptology, Vol. 5, 1992, pp89-105

Having implemented it and tested it against various generators, I can highly
recommend it. Fun can be had checking out your C compiler's useless rand()
function. While not good enough to test for Crypto strength RNGs, it
is a good necessary (but not sufficient) condition that any such proposed 
generator should pass this test.

Mike Scott
