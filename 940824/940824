From jefft@netcom.com  Wed Aug 24 01:13:06 1994
Received: from netcom16.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA02143; Wed, 24 Aug 94 01:13:06 EDT
Received: by netcom16.netcom.com (8.6.8.1/Netcom)
	id WAA16615; Tue, 23 Aug 1994 22:13:27 -0700
Date: Tue, 23 Aug 1994 22:13:27 -0700
From: jefft@netcom.com (Jeff Thompson)
Message-Id: <199408240513.WAA16615@netcom16.netcom.com>
To: ripem-dev@ripem.msu.edu
Subject: RIPEM 2.0 Beta 1 release


Hi all.

I have sent the RIPEM 2.0 Beta 1 files to Mark for placing on the ftp site.

It has the same files as RIPEM 1.3a3, so the old makefiles should work
when bulding the ripem executable.  There is also a new executable
called RCERTS which is built by using rcerts.c instead of ripemcmd.c
and rcertsms.c instead of usagemsg.c.

The file changes.txt lists the code changes. It is pretty detailed,
but you should read it anyway if you want to track how the API has
changed and what robustness features have been added.  My next task is
to revise the RIPEM documentation.  But in brief, here are the major
features of RIPEM 2.0:

* RIPEM 2.0 has a library API which applications like RIPEM command
line and RCERTS call.  It is expected that applications like mail
agents would integrate the RIPEM library directly rather than shelling
out to an executable.  Windows and Mac applications should also be
able to integrate into the library.

* The RIPEM API keeps its state in a RIPEMInfo struct which is set up
when the RIPEM user is "logged in".

* The RIPEM API uses an Init/Update/Final structure to encipher and
decipher the message "by parts".  The message is passed by parts in
memory buffers rather than relying on (FILE *).  Therefor, the message
does not have to be in a file, but can be on the clipboard, sent
through a port, etc.

* RIPEM 2.0 supports certificate chains.  This is done by directly
validating a user such as the Low Assurance Certification Authority,
and then setting that user's "chain length allowed" greater than zero.
Chains up to that length issued by that user will be trusted.

* RIPEM 2.0 has full CRL support.  A user's certificate status may be
REVOKED, CRL EXPIRED, or REVOCATION UNKNOWN as well as the usual
VALID, PENDING or EXPIRED.  There is also another possible status
called CRL OUT OF SEQUENCE which will be explained in upcoming
documentation.

* RIPEM comes with a command line utility called RCERTS which allows
you to check a user's certificate chain in detail, revoke users you
have validated, renew the CRL issued by you, enable standard issuers
such as the Low Assurance Certification Authority, set a user's chain
length allowed to activate certificate chains, create a
CRL-RETRIEVAL-REQUEST, and more.

* RIPEM 2.0 automatically includes Issuer-Certificates in outgoing
messages for any chains which certify your public key.

* Enciphering a message with the "-M pem" option produces an RFC
1421-compliant message.  This can be read by RIPEM Mac.  It omits
RIPEM 1.x -specific fields and uses only the issuer/serial based
Recipient-ID-Asymmetric identifiers for ENCRYPTED messages.

* Enciphering a message with the "-M ripem1" option produces a message
compliant with previous versions of RIPEM.  This is the default, so it
doesn't really need to be specified.  This format still outputs
Issuer-Certificate fields which are ignored by earlier versions of
RIPEM. This format uses the public key based Recipient-Key-Asymmetric
identifiers for ENCRYPTED messages, as in RIPEM 1.2.

Hopefully, RIPEM 2.0 Beta 1 will port without problems.  I look
forward to feedback.

- Jeff

From jefft@netcom.com  Wed Aug 24 09:01:49 1994
Received: from netcom8.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA02643; Wed, 24 Aug 94 09:01:49 EDT
Received: by netcom8.netcom.com (8.6.8.1/Netcom)
	id GAA07736; Wed, 24 Aug 1994 06:02:04 -0700
Date: Wed, 24 Aug 1994 06:02:04 -0700
From: jefft@netcom.com (Jeff Thompson)
Message-Id: <199408241302.GAA07736@netcom8.netcom.com>
To: ripem-dev@ripem.msu.edu
Subject: RIPEM home dir



RIPEM 2.0 uses two new database files, one to hold CRLs and one to
hold the "preferences" which specify the chain length allowed infos
and other info.  Instead of adding yet more command line arguments, I
put these files in the RIPEM home directory, so the -H option is
needed to find these.

The RIPEM library itself currently has no concept of the RIPEM home
directory.  This is implemented only on the side of the command line
applications.  This is because RIPEM did not previously require the
use of a home dir.

So, one question I'd ask you to keep in mind when looking at RIPEM 2.0
is the extent to which we should encourage migration to using a home
dir.  If it were required, people could still add extra -p and maybe
-s to find public and private keys for read, but the files where new
info is written would always be in the home dir.  Requiring the home
dir would also make the database handling code vastly simpler, since
an API routine could handle the work...

- Jeff
