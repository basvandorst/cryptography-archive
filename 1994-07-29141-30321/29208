Path: msuinfo!agate!ihnp4.ucsd.edu!usc!nic-nac.CSU.net!charnel.ecst.csuchico.edu!yeshua.marcam.com!news.kei.com!ddsw1!not-for-mail
From: supercat@MCS.COM (John Payson)
Newsgroups: sci.crypt
Subject: Re: Hiding data in sound
Date: 2 Jul 1994 00:26:37 -0500
Organization: /usr/lib/news/organi[sz]ation
Lines: 25
Message-ID: <2v2tqd$7jj@Mercury.mcs.com>
References: <Cs5J9M.L5z@news.Hawaii.Edu> <1994Jun30.032019.5064@ohstpy.mps.ohio-state.edu> <1994Jun30.141516.676@cs.nott.ac.uk>
NNTP-Posting-Host: mercury.mcs.com

In article <1994Jun30.141516.676@cs.nott.ac.uk>,
Andrew Brown <asb@cs.nott.ac.uk> wrote:
>In article <1994Jun30.032019.5064@ohstpy.mps.ohio-state.edu>,
> <vancleef@ohstpy.mps.ohio-state.edu> wrote:
>
>>> 2. How hard is it to tell if the lowest bits of a sound are just
>>>    sound, or are really encrypted data?
>
>Quite simple. Encrypted data looks truly random. Truly random data
>does not occur in natural sources such as sound and pictures. s-tools
>takes steps to avoid this by using a cryptographically strong random
>number generator to choose the positions of the bits that it will use
>to hide the information. This means that each LSB in the sound/picture
>has a probability of being changed, not a certainty. Whilst this is by
>no means perfect, it does go some way to solving the problem.

How does this compare with making sure that there is adequate forced-air
noise on the original recording?  If the forced-air noise fills up the
lower 3 bits, the bottom bit is going to be pretty well random even in
the original sample.  If it fills up the lower 5 bits then you could
squeeze in 2 bits pretty safely, etc.
-- 
-------------------------------------------------------------------------------
 supercat@mcs.com    |  "Je crois que je ne vais jamais voir...  |   J\_/L
 John Payson         |   Un animal si beau qu'un chat."          |  ( o o )
