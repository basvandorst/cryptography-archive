Newsgroups: sci.crypt
Path: msuinfo!netnews.upenn.edu!rutgers!njitgw.njit.edu!funcity!aaron
From: aaron@funcity.njit.edu (Aaron Watters)
Subject: Modified one-time pad: explain why I'm dumb.
Message-ID: <1994Jul20.170507.28864@njitgw.njit.edu>
Sender: news@njit.edu
Nntp-Posting-Host: funcity.njit.edu
Organization: New Jersey Institute of Technology
Date: Wed, 20 Jul 1994 17:05:07 GMT
Lines: 63

Please consider for a moment my silly encryption idea,
that you experts can probably can kill in a moment.  I
know nothing about encryption and would like to know why
this proposal is as dumb as it probably is.

I've been thinking about the problem of developing a very simple
protocol that at once serves as

  1) a secure transmission between two points (private key
  -- sender and receiver have the key, unauthorized folks don't).

  2) a method of charging for an information service that is
  friendly and resistant to abuse.

What I describe below, if it can't be easily broken, fits the bill
(why it does is beyond the scope of this article).

The idea is to take advantage of the fact that disks are getting
really cheap, and hence use a moderately big key.

The inspiration is the simple ``one-time pad'' protocol (where
messages are encoded and encoded using a infinite random bit stream)
except that the ``pad'' is generated from a smaller key by ``hopping
around'' the key xor-ing random blocks of the key together, using the
key itself to generate block indices.

key: 2^16 of random bytes such that no two bytes in sequence
  are ever equal, addressable by byte as byte[0..2^16-1] or 
  by 256byte blocks as block[0...255].

each transmitted block is given a number in sequence starting at 0.

encoding algorithm:
  transmitted block CLEAR number n is transmitted as
      CODE= CLEAR xor block[byte[2n]] xor block[byte[2n+1]

decoding algorithm:
  recieved block CODE number n is decoded as
      CLEAR= CODE xor block[byte[2n]] xor block[byte[2n+1]

after block number 2^15-1 the key is replaced by a new key.

Example suppose byte[] begins 12 145 186 92.
Then the first block B0 would be encoded as
      CodedB0 = B0 xor block[12] xor block[145] with decode
      B0 = CodedB0 xor block[12] xor block[145]
The second block B1 as
      CodedB1 = B1 xor block[186] xor block[92] with decode
      B1 = CodedB1 xor block[186] xor block[92]

[There are lots other of possible variations on this theme.]
I could babble on about why I think this idea is neat, but
enough for one message.  Is there a simple way to break this
without using tremendous resources?
        Aaron Watters
        Department of Computer and Information Sciences
        New Jersey Institute of Technology
        University Heights
        Newark, NJ 07102
                phone (201)596-2666
		fax (201)596-5777
		home phone (908)545-3367
		email: aaron@vienna.njit.edu
