Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uhog.mit.edu!news.kei.com!ddsw1!not-for-mail
From: supercat@MCS.COM (John Payson)
Newsgroups: sci.crypt
Subject: Re: Software Based Key Escrow Without PK - How?
Date: 30 Jul 1994 20:30:04 -0500
Organization: /usr/lib/news/organi[sz]ation
Lines: 31
Message-ID: <31euqs$9en@Mercury.mcs.com>
References: <319lk2$q4u@usenet.rpi.edu> <mpjCtpJ89.1vs@netcom.com> <31c0b2$6af@senator-bedfellow.mit.edu>
NNTP-Posting-Host: mercury.mcs.com

In article <31c0b2$6af@senator-bedfellow.mit.edu>,
Jason W Solinsky <solman@athena.mit.edu> wrote:
>I think that a, perhaps more interesting, question would be:
>
>Can you do EES without both public key and dependence security by obscurity?
>
>If you can't, is it provable?

It depends on how you define "EES" and "security by obscurity".  In particular,
do you wish do give people code such that they cannot use its underlying
algorithm without escrowing the key, or merely ensure that messages sent
without a duly escrowed key could be easily detected?  Is it necessary that
people understand how the thing works, or just be able to see the underlying
operations?

A couple of approaches (one PK, one not) would be:

-1- A symmetric algorithm in which the vast majority of keys are "weak".  The
    government would know how to construct strong keys, but such construction
    would not be apparent from the algorithm (e.g. if the algorithm used
    S-boxes, the knowlege of HOW the S-boxes were computed (rather than just
    what they contained) would be needed to use them securely.

-2- A public-key algorithm in which those without an inside understanding of
    the algorithm could not in reasonable time generate useable key pairs.

    
-- 
-------------------------------------------------------------------------------
 supercat@mcs.com    |  "Je crois que je ne vais jamais voir...  |   J\_/L
 John Payson         |   Un animal si beau qu'un chat."          |  ( o o )
