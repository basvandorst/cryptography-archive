Path: msuinfo!agate!howland.reston.ans.net!newsserver.jvnc.net!netnews.upenn.edu!netaxs.com!unix1.netaxs.com!soneill
From: soneill@unix1.netaxs.com (Steve O'Neill)
Newsgroups: sci.crypt
Subject: Re: Hiding Ciphertext in Ciphertext
Date: 3 Jul 1994 12:07:40 GMT
Organization: Netaxs BBS and shell accounts!
Lines: 28
Distribution: world
Message-ID: <2v69mc$ecr@netaxs.com>
References: <CrqAxu.660@chinet.chinet.com>
NNTP-Posting-Host: unix1.netaxs.com


Bruce's discussion of using XOR to create more than one possible 
decryption of an encrypted message harks back to a question I posted here 
several months back. I wanted to know if there were any known encryption 
method, other than XOR, that would do the same thing. The answers I got 
ranged from "No, it would violate information theory" to "Maybe, but I've 
never seen anything that would do it". 

My main objection to using XOR with one-time pads to encrypt the same 
message in such a way that it decrypts to more than one possible 
plaintext is not so much that the secret police will come for me, as it 
is that using this a defense in a perfectly straightforward trial won't work.
As soon as you make it known that you encrypted the message by XORing it 
with a one-time pad, the prosecution will put an expert witness on the 
stand to testify that you could conceivably generate ANY plaintext you 
want by XORing it with the one-time pad of your choice. Therefore, your 
claim that the message is innocuous would look doubtful to a jury. 

Of course, this doesn't necessarily strengthen the prosecution's case, 
but it definitely weakens the defense, so why use it if it's not necessary?
Which brings me back to my original question: is there a more 
sophisticated set of methods that will allow you to encrypt an 
incriminating message using one algorithm, but allows you to use an 
entirely different algorithm to decrypt it into an innocuous message of 
your choosing?

Steve O'Neill

