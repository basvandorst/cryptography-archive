Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Newsgroups: sci.crypt
Subject: Re: Non-RSA Public Key Algorithms Wanted
Date: 20 Jul 94 19:01:36
Organization: The Mitre Corp., Bedford, MA.
Lines: 31
Message-ID: <EACHUS.94Jul20190136@spectre.mitre.org>
References: <199407190027.TAA10095@pentagon.io.com> <30jhmh$b7s@gap.cco.caltech.edu>
NNTP-Posting-Host: spectre.mitre.org
In-reply-to: hal@alumni.caltech.edu's message of 20 Jul 1994 16:00:17 GMT


In article <30jhmh$b7s@gap.cco.caltech.edu> hal@alumni.caltech.edu (Hal Finney) writes:

  > Isn't it the case that if we can find random elements with short
  > cycles, we can factor n?  A short cycle has a 50-50 chance of
  > revealing two different square roots of a number (the one which
  > preceded the cycle, and the one which looped back) which lets us
  > factor n.  So short cycles aren't a problem?

   Any short cycle (except for the three trivial cases of X = 0, X =
1, and X = N-1) directly reveals at least one factor of N.  Also, as
you point out, such a cycle can lead to complete factoring of N.
However, the BBS algorithm if used correctly has exactly two
non-trivial roots of unity.  If you happen upon one of these by
accident, you can immediately and completely factor N.  (You have
discovered a non-trivial solution to X^2 = 1 mod N.)  There is also
one cycle of length two, and for both members of this cycle, GCD(X,N)
is one of the factors of N.  That is four "dangerous" values out of N.

   These are a negligible risks--your opponent is many orders of
magnitude better off guessing factors and dividing, and algorithms
like the GNFS are many orders of magnitude better than that.  (But
still infeasible for large N.)

--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
