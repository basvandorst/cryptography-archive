Path: msuinfo!netnews.upenn.edu!news.amherst.edu!news.mtholyoke.edu!uhog.mit.edu!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!swrinde!news.dell.com!tadpole.com!uunet!nwnexus!chinook!ken
From: ken@chinook.halcyon.com (Ken Pizzini)
Newsgroups: sci.crypt
Subject: Re: transposition cryptanalysis
Date: 25 Jul 1994 21:09:27 GMT
Organization: Northwest Nexus Inc.
Lines: 66
Message-ID: <3119m7$qvi@nwfocus.wa.com>
References: <30qh60$22dq@locutus.rchland.ibm.com> <30rmtr$13e@nwfocus.wa.com> <30sj83$18jv@locutus.rchland.ibm.com>
NNTP-Posting-Host: chinook.halcyon.com

In article <30sj83$18jv@locutus.rchland.ibm.com>,
Larry Loen <lwloen@rchland.vnet.ibm.com> wrote:
>OK, then how about something like this:
>
>Phase II:  Exhaustively try all possible K2 keys (how many were there, I don't
>remember.  Hopefully, over 15 so that this is infeasible, at least done
>crudely).

In my illustrative example the K2 permutation was for blocks of 11,
but for the overall described system this was a security parameter
(N2).  For the illustration I deliberatly chose N1, N2 smaller than
I would for a "real" implementation.

>For each K2 attempt, set up the block for each _period_ and perform
>something called the "vowel test" (it may be hard under your system
>to do, but that would be what mattered; some way of running a vowel
>test).  If the test is promising enough, then perform:

This sounds promising; could you describe the "vowel test" in a
little more detail?

>Phase I:  For the setups that look promising, exhaustively try all
>K1 keys.

Depending on how much information the vowel test gives, it may
be feasible to apply principles of columnar transposition solution
to the result.


>I seem to recall that double transposition was regarded as a pretty
>good cipher in the pencil and paper era, provided MA was not available.

My addled memory claimed that there was a means of solution to
double columnar transposition which did not involve MA, but
as I look in my Friedman it turns out that this is only true
in certain special cases.  So I should be a lot less suprised
that I have found a different double transposition that might
avoid non-MA solutions.

>Now, maybe you described it, but it seems to me that three really important
>areas are:
>
>1)  How the "session keys" are established and distributed.  Using your
>  method based on a master key seems vulnerable to MA not to mention
>  potentially reducing the number of keys to try drastically.
>
>2)  How to deal with multiple messages (which might revive multiple
>  anagramming).
>
>3)  How to deal with "short" messages that are smaller than the key
>  length.
>
>Of course, one presumes you aren't trying to defend against the
>chosen plaintext attack, here nor the "replay old ciphertext" attacks.

I glossed over this; I basically envision using "one-time keys";
each message is encrypted in an independently generated K1, K2
chosen uniformly at random from the keyspace.  Key distribution is
presumed secure by hypothesis, and it is left unspecified as to how
this is accomplished (basically key distribution is its own
problem, and for any symmetric key system the solutions are the
same).  Short messages are definetly a problem.  Due to the
presumed one-time nature of the keys the other points above don't
seem to be relevant to this system (please correct my if I'm wrong).

		--Ken Pizzini
