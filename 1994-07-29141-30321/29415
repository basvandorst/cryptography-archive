Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!csulb.edu!csus.edu!netcom.com!farid
From: farid@netcom.com (Farid F. El-Wailly)
Subject: Re: Hiding Ciphertext in Ciphertext
Message-ID: <faridCsIwG4.BGD@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <CrqAxu.660@chinet.chinet.com>
Date: Wed, 6 Jul 1994 14:33:40 GMT
Lines: 31

One idea I heard earlier this year in this group was
to modify one of the standard encryption tools, such
as PGP, to ALWAYS produce twice the required output when
encrypting. Call the primary encrypted data "channel A"
and the extra stuff "channel B".  Channel B is stuffed
with random bits out to the length of the channel A file
that is being encrypted.

Up to this point the new PGP behaves exactly the same as
the old version, except that the encrypted files are
twice as long. Note, this needs to become the standard
product everyone uses.  You can't get rid of the extra
junk even if you wanted to.

Now, what you can do is use channel B to pass a hidden
encrypted message to a friend. You encrypt an inocent
message that is longer than your hidden message onto
channel A. Then encrypt the hidden massage with a second
key on channel B. It will look random and the software
will pad it out to the length of channel A.

You now have perfect deniability. "I never even knew PGP
had a second channel".  "There is no key for the second
channel. It's just garbage bits that PGP throws in there
no matter what I do".

What do you think?


-- 
Farid F. El-Wailly                 farid@netcom.com
