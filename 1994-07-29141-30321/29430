Path: msuinfo!agate!ihnp4.ucsd.edu!swrinde!cs.utexas.edu!utnut!torn!uunet.ca!uunet.ca!geac!herboid!cattnts!ncrcan!coutts!wwg
From: wwg@coutts.UUCP (Warren Gay)
Newsgroups: sci.crypt
Subject: Re: Hiding Ciphertext in Ciphertext
Message-ID: <185@coutts.UUCP>
Date: 6 Jul 94 21:18:46 GMT
References: <CrqAxu.660@chinet.chinet.com> <2v69mc$ecr@netaxs.com>
Distribution: world
Organization: Coutts Library Services
Lines: 53

In article <2v69mc$ecr@netaxs.com> soneill@unix1.netaxs.com (Steve O'Neill) writes:
>
>Bruce's discussion of using XOR to create more than one possible 
>decryption of an encrypted message harks back to a question I posted here 
>several months back. I wanted to know if there were any known encryption 
>method, other than XOR, that would do the same thing. [snip]

>My main objection to using XOR with one-time pads to encrypt the same 
>message in such a way that it decrypts to more than one possible 
>plaintext is not so much that the secret police will come for me, as it 
>is that using this a defense in a perfectly straightforward trial won't work.
>As soon as you make it known that you encrypted the message by XORing it 
>with a one-time pad, the prosecution will put an expert witness on the 
>stand to testify that you could conceivably generate ANY plaintext you 
>want by XORing it with the one-time pad of your choice. Therefore, your 
>claim that the message is innocuous would look doubtful to a jury. 
	[snip]
>Which brings me back to my original question: is there a more 
>sophisticated set of methods that will allow you to encrypt an 
>incriminating message using one algorithm, but allows you to use an 
>entirely different algorithm to decrypt it into an innocuous message of 
>your choosing?

>Steve O'Neill

Well, I don't know if you'd call this "sophisticated", but one way that
you can achieve this end is by "word stuffing" instead of "bit stuffing".

( I really don't think this idea flies in a practical setting, but you
asked; an idea follows: )

By intermingling words from 2+ alternative messages, with some additional
control info that indicates how to unthread the desired message(s), then
it becomes a matter of deciding which/any/all of the alternative messages
were the intended message and which/any/all of them were bogus.

Assuming the court has the decoded form of these n messages, with the
"traditional" key, which message, or are all of these decoded messages
valid? Are any valid?

Now in reality, the KEY also includes some indicator to specify which
of these n messages are the real one(s).  However, if you were to
keep this fact separate from the "key" and were also able to keep
this fact secret, then the true message is still not known (assuming
that all messages appear plausible).  However, this scheme will not
guarantee safety if the other party is tortured or otherwise willing
to 'fess up.  Alternatively, if both parties testify differently on
the "which message" issue, this too presents a problem!  Just my $0.02.

--------------------
Warren W. Gay VE3WWG		John Coutts Library Services Limited		
wwg@coutts.UUCP			Niagara Falls, Ontario, Canada
(or wwg%coutts@uunet.ca, wwg%coutts@uunet.uu.net)
