Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!convex!seas.smu.edu!rwsys!hammy!gordon
From: gordon@sneaky.lonestar.org (Gordon Burditt)
Subject: Re: Detecting Encryption
References: <CrqAz6.67n@chinet.chinet.com> <PCL.94Jul6094747@foo.oucs.ox.ac.uk> <jktaberCsp9F5.E8w@netcom.com> <2vsbp5$p34@locutus.rchland.ibm.com>
Organization: /usr/lib/news/organi[sz]ation
Date: Wed, 20 Jul 1994 01:58:53 GMT
Message-ID: <Ct7uup.Dr3@sneaky.lonestar.org>
Lines: 49

>Um, what about uuencoded stuff?  I read statistics that show that
>some pretty high percentages of the raw, uncensored bit stream are
>uuencodings of alt.pictures.younameit.

The UNIX file(1) program does a pretty good job of identifying 
different file types.  I'm not sure whether it detects uuencoded data,
but it wouldn't be that hard to add.  You would, however, have to use 
multiple steps in identifying the file.  It's uuencoded.  Decode it.
Now look again.  It's compressed.  Uncompress it.  Now look again.  
It's a tar file.  Untar it, now look at the pieces in turn.  Hmm, I see 
a FreeBSD executable, some text files that look like C source (des.c, 
crypt.c, and des.h), 2 text files that look like English text (named 
README and des.1), a strange-looking short text file (Makefile) and a 
uuencoded file named README.ciphertext.uu.  Uudecode that file.  Hmm, the 
distribution seems suspiciously flat.  Crank up the decrypter.  It 
might help, though, if you went through the README file first, which 
tells you that if you encrypt the README file with a given key and your 
program is working, it will match the README.ciphertext file.


>If there is so much uuencoded stuff running around the net, how would
>Big Brother know my uuencoded stuff was a GIF file, an EXE file or
>how to build a bomb under DES encrypt, and then uuencoded for passing
>around internet?  

Easy.  He'd uudecode it, then look at it again.  Newsreaders can do 
this fairly automatically, even putting several parts together properly.  
Newbies on the net learn how to do this fairly quickly.  Big Brother 
isn't stupid.  Something like this is easy to automate.  He might 
need to modify the tools somewhat, so untarring a tar file of 
"/etc/passwd" doesn't clobber the system password file, but generates 
data files in the current directory.  He'd have to have the
usual collection of file archivers and encoders:  tar, compress, gzip,
zip, arc, arj, pgp, uuencode, pack, rot13, and lots more, which he can 
get at many archive sites.

>The question is not just "could we detect" it, but "how many false
>hits and how many MB a day of false hits are there?"

True.  But uudecoding is easy to detect, easy to undo, and now we're 
back to examining an unknown file to see what type it is.

Now, for a real challenge:  write a filter that takes GIFs (unencrypted
and no stego) and identifies which ones contain "X-rated" pictures of 
nude females.  No, you can't reliably use any descriptive text that
goes with the picture; too many of them exaggerate or lie.

						Gordon L. Burditt
						sneaky.lonestar.org!gordon
