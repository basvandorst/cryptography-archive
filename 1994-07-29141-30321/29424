Path: msuinfo!agate!bob.eecs.berkeley.edu!spp
From: spp@bob.eecs.berkeley.edu (Steve Pope)
Newsgroups: sci.crypt
Subject: (again) stream ciphers from hash functions
Date: 7 Jul 1994 00:23:22 GMT
Organization: U.C. Berkeley -- ERL
Lines: 24
Distribution: world
Message-ID: <2vfhtq$r6v@agate.berkeley.edu>
References: <s5hGuAbJBh107h@bronze.apana.org.au> <1994Jul6.162529.4416@vms.huji.ac.il>
NNTP-Posting-Host: bob.eecs.berkeley.edu

A while back there was a discussion on whether 
constructing stream ciphers from secure hash functions
is cryptographically reasonable.

Was a general conclusion reached on this question?

The confguration I am contemplating is as follows:

To generate 2**m bits (or bytes) of keystream from a
k-bit key and a hash function, concatenate the k-bit key
with an m-bit value i, hash it, and puncture the 
output of the hash function down to one bit (or byte)
to give the i-th value in the keystream.

The rationale for using such a scheme, if it's secure
enough, is that the hash function exists as a well-defined
standard, therefore it takes realatively little
added description to produce an unambiguous definition
for the encryption operation; and further, it is quite 
simple to choose large values of k.

Opinions welcome.  Thanks.

Steve
