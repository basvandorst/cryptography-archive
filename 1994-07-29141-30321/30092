Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!csulb.edu!csus.edu!netcom.com!straits
From: straits@netcom.com (Stewart C. Strait)
Subject: Re: transposition cryptanalysis
Message-ID: <straitsCtJDMH.CoI@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
X-Newsreader: TIN [version 1.2 PL1]
References: <30qh60$22dq@locutus.rchland.ibm.com> <30rmtr$13e@nwfocus.wa.com> <jktaberCtGMss.37K@netcom.com> <30vmpg$44f@nwfocus.wa.com> <jktaberCtIIpv.G0n@netcom.com>
Date: Tue, 26 Jul 1994 07:18:17 GMT
Lines: 80

John K. Taber (jktaber@netcom.com) wrote:
: No, Ken, what I learned to my chagrin is that anagramming *can* be
: done without multiple anagramming.  I don't want to do it (anagramming
: happens to be a weak point for me), but it can be done.  It requires
: a lot of skill.  Try to get hold of the Ol' Cajun's (Courville) booklet.
...

: Now, how short the message must be before single anagramming is possible,
: I cannot say.  

I would like to offer a rough estimate of <<200 letters, which I will
outline below.

: In the short run, we don't care which anagram is the "correct" one because
: we are retrieving the plaintext, not the key.  There are many false keys,
: but they do yield the correct plaintext.  I think it is an important
: point.

True, but the number of possible plaintexts, while smaller than the
number of keys, also grows too fast.

: I would add, perhaps the skilled anagrammist won't solve all messages.
: Indeed he may only solve a percentage.  But that still makes the security
: of the double transposition unreliable.

I disagree. I claim that the double transposition is insecure because
it seems too likely that the anagramming phase can be directed by
knowing that it is a double transposition.  If the messages are
long, even a skilled anagrammist will find the 'anagram, then verify'
approach infeasible. He needs to find the right plaintext in say
10^3 to 10^12 tries (The latter if he has the whole of China helping him.
:-)  ). For a long message he won't. This also means that a sufficiently
complex transposition could be very secure. In fact, a long message
encrypted with a completely random, one-time transposition won't
leak much information and is nearly as good as the one-time pad.

The estimate:

If the information content of the plaintext is bounded below
by some fixed number of bits per letter then I claim that
single anagramming must give multiple solutions for sufficiently
long message lengths n.  For example, suppose the plaintext
is in a 26 letter alphabet but has one bit per letter of information.
[The other log2(26)-1=~3.7 bits per letter are redundancy.]

Then there must be at least 2^n messages of length n that 
'make sense'. The only information we have in a true case
of single anagramming is that the message makes sense and that
A ... Z occur respectively f[A]...f[Z] times in the plaintext.
We can assume without loss of generality that the ciphertext
letters appear in alphabetical order. 
It is my assumption that we don't know what kind of transposition
was used or we can't solve the computational problems associated
with using any additional information

But for each i, 0<=f[i]<=n, so there are less than
(n+1)^26 possible frequency
count vectors but 2^n or more plaintexts.  Since 2^n ultimately
grows faster, there must be multiple plaintexts with the same
frequency count and thus multiple solutions possible with single
anagramming. In fact, 2^n is greater for n>200. The actual
unicity point where the multiple solutions must appear is at
a considerably smaller n, since I disregarded the facts that
the f[i] must sum to n and that the 'sensible' messages tend
to have rather normal frequency counts.

My conclusion is that single anagramming won't work for long
messages without a _very_ low information content or a lot
of help during the anagramming process from knowledge of the
particular transposition system being used.

Incidentally, if one is trying to multiple-anagram k messages
of length n, the same argument holds for fixed k with
the '26' replaced by (26^k). However, this now means that
the multiple solutions don't become likely until n>>26^k>=676,
so historical examples of this situation are confined to low-
redundancy patches of messages, rather than whole messages.
-- 
Stewart C. Strait
straits@netcom.com
