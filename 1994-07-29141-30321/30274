Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!usc!nic-nac.CSU.net!charnel.ecst.csuchico.edu!csusac!csus.edu!netcom.com!mpj
From: mpj@netcom.com (Michael Paul Johnson)
Subject: Re: Software Based Key Escrow Without PK - How?
Message-ID: <mpjCtpypt.4EI@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <319lk2$q4u@usenet.rpi.edu> <mpjCtpJ89.1vs@netcom.com>
Date: Fri, 29 Jul 1994 20:39:27 GMT
Lines: 68

mpj@netcom.com (Michael Paul Johnson) writes:

>smythw@alum01.its.rpi.edu (William Smythe) writes:

>>I read a post to comp.org.eff.talk a couple days ago stating that the feds have
>>come up with a way to impliment software based EES without using public key
>>crypto (posted by TC May). He said that Whit Diffie had attended a conference
>>in Europe on the subject and asserted that they presented the conceptual frame-
>>work of a system that would impliment software based EES without using PK
>>methods. The post mentioned something about negotiation with a remote host and
>>asserted that given the details of the system shown to the author that he 
>>believed that the system would actually be somewhat secure (secure from what
>>he didnt say). Unfortunatly he didnt mention any details so my qhestion is HOW --WHAT ARE THE DETAILS. Does anyone out there know more on this subject. 
>>Whitfield Diffie are you listening. Anyone else out there privy to the details?

>Public Key makes it much easier and more secure to implement software 
>EES.  On the other hand, it is possible to do without it, if you have to 
>for economic reasons.  You could hide a fixed "family key" in an 
>executable only program (no source code provided) that was used to 
>encrypt some "Law Enforcement Access Field (LEAF)" that contained all but 
>40 bits (or some other number chosed to balance security with cost of 
>spying) of the session key.  The authorized wire tapper would have a 
>straight forward brute force attack to perform, but the unauthorized wire 
>tapper would have to also figure out the family key and LEAF format from 
>reverse engineering the object code.  This may be adequate protection for 
>some messages, but not for others.  It doesn't have quite the difference 
>in effort that PK provides between authorized & unauthorized spying, but 
>it is something...

Having been rightfully accused of promoting "security by obscurity," I 
rethink the problem:

A more secure approach not using public key technology (but with more
database management problems for the escrow agents) would be to have every
single user have a pair of secret keys.  Key A would be shared only with
trusted escrow agent A.  Key B would be shared only with trusted escrow
agent B.  Each message would contain a LEAF the shows the serial number of
the user (in the clear) and two session key parts, one encrypted with key
A, and one encrypted with key B.  To crack an escrowed message, the wire
tapper presents the intercepted LEAF to both of the trusted escrow agents
(with a search warrant, of course).  Each agent verifies the warrant and
decrypts their half of the session key and returns it to the wire tapper. 
The wire tapper xor's the key parts together to get the session key, then
decrypts the message.  Although this clearly is more secure than the
"security by obscurity" approach above, and doesn't required the wire
tapper to spend as much money doing a brute force search, it does require
a registry of secret keys that each user would volunteer to use.  I think
this method would actually work in cases where the communicating parties
WANTED to have the keys to their messages escrowed AND they trusted the
escrow agents.

This would obviously be easy to spoof, but I think any software key 
escrow system is.  The advantage of public key, of course, is that all 
users could share the same two escrow agent public keys, and there is no 
need to hide them under the door mat (or in the executable code, as the 
case may be).  Of course, having only two escrow agents on the planet 
Earth would be a mistake (like the hardware EES), but you could pick any 
two of a multitude of escrow agent keys to use.

                  ___________________________________________________________
 |\  /| |        |                                                           |
 | \/ |o|        | Michael Paul Johnson  Colorado Catacombs BBS 303-772-1062 |
 |    | | /  _   | mpj@csn.org aka mpj@netcom.com m.p.johnson@ieee.org       |
 |    |||/  /_\  | ftp://ftp.csn.net/mpj/README.MPJ          CIS: 71331,2332 |
 |    |||\  (    | ftp://ftp.netcom.com/pub/mpj/README.MPJ  -. --- ----- ....|
 |    ||| \ \_/  |___________________________________________________________|


