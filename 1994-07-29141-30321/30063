Path: msuinfo!agate!howland.reston.ans.net!pipex!doc.ic.ac.uk!aixssc.uk.ibm.com!watnews.watson.ibm.com!locutus.rchland.ibm.com!wo0z.rchland.ibm.com!lwloen
From: lwloen@wo0z.rchland.ibm.com (Larry Loen)
Newsgroups: sci.crypt
Subject: Re: transposition cryptanalysis
Date: 24 Jul 1994 02:21:55 GMT
Organization: IBM Rochester MN
Lines: 42
Distribution: world
Message-ID: <30sj83$18jv@locutus.rchland.ibm.com>
References: <30qh60$22dq@locutus.rchland.ibm.com> <30rmtr$13e@nwfocus.wa.com>
Reply-To: lwloen@rchland.vnet.ibm.com
NNTP-Posting-Host: wo0z.rchland.ibm.com

OK, then how about something like this:

Phase II:  Exhaustively try all possible K2 keys (how many were there, I don't
remember.  Hopefully, over 15 so that this is infeasible, at least done
crudely).

For each K2 attempt, set up the block for each _period_ and perform
something called the "vowel test" (it may be hard under your system
to do, but that would be what mattered; some way of running a vowel
test).  If the test is promising enough, then perform:

Phase I:  For the setups that look promising, exhaustively try all
K1 keys.

What would matter, in the end, was the size of K1 and K2 (if much over
15, exhaustion becomes infeasible) and how effective/descriminatory
any statistical attempt after the K1 undo is.

I seem to recall that double transposition was regarded as a pretty
good cipher in the pencil and paper era, provided MA was not available.

Now, maybe you described it, but it seems to me that three really important
areas are:

1)  How the "session keys" are established and distributed.  Using your
  method based on a master key seems vulnerable to MA not to mention
  potentially reducing the number of keys to try drastically.

2)  How to deal with multiple messages (which might revive multiple
  anagramming).

3)  How to deal with "short" messages that are smaller than the key
  length.

Of course, one presumes you aren't trying to defend against the
chosen plaintext attack, here nor the "replay old ciphertext" attacks.

-- 
   Larry W. Loen        |  My Opinions are decidedly my own, so please
                        |  do not attribute them to my employer

   email to:  lwloen@rchland.vnet.ibm.com
