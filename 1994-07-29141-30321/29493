Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!convex!news.duke.edu!godot.cc.duq.edu!toads.pgh.pa.us!newsfeed.pitt.edu!dsinc!netnews.upenn.edu!netaxs.com!unix1.netaxs.com!soneill
From: soneill@unix1.netaxs.com (Steve O'Neill)
Newsgroups: sci.crypt
Subject: Re: Hiding Ciphertext in Ciphertext
Date: 8 Jul 1994 22:22:38 GMT
Organization: Netaxs BBS and shell accounts!
Lines: 29
Message-ID: <2vkjje$2c3@netaxs.com>
References: <CrqAxu.660@chinet.chinet.com> <2v69mc$ecr@netaxs.com> <2vijno$mie@Venus.mcs.com>
NNTP-Posting-Host: unix1.netaxs.com

In article <2vijno$mie@Venus.mcs.com> supercat@MCS.COM (John Payson) writes:

	...(stuff deleted)

>
>What if you use OTP, sending the two data streams over channels which are
>deliberately kept seperate (or at least looking as if that's what you're
>doing), with the innocuous message being the sum of the two data streams,
>but with the real message being the IDEA-coded output of some orthagonal
>function on the datastreams (difference div 2 would work okay).  For a
>secure OTP, the two streams should both appear random (and they would).
>The fact that this "random" was not generated by a true generator but was
>instead the result of encryption would be quite impossible to prove unless
>one had the IDEA key.


This wouldn't be a bad idea. However, it would seem to me that one of the 
channels has a data stream that is completely dependent on the content of 
the real message and the innocuous message that you want to generate. 
That would, in general, make the content of that channel essentially 
noise, I think. If you have to use both channels to create the innocouous 
message, how do you keep the existence of the noise channel from the 
authorities? If they know of its existence, they'll insist that you 
decrypt it as well, and you're back where you were in the beginning: 
trying to prove that the bit stream from you in a channel is really an 
innocuous message. Or am I misunderstanding what you're proposing?

Steve O'Neill

