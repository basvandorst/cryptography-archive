Path: msuinfo!agate!howland.reston.ans.net!gatech!ncar!asuvax!pitstop.mcd.mot.com!mcdphx!schbbs!mothost!delphinium.cig.mot.com!mac-an-48.cig.mot.com!user
From: slansky_doug@macmail1.cig.mot.com (Doug Slansky)
Newsgroups: sci.crypt
Subject: Clipper LEAF Attack - Details?
Followup-To: sci.crypt
Date: 6 Jul 1994 22:33:25 GMT
Organization: Motorola CIG APD
Lines: 54
Message-ID: <slansky_doug-060794172212@mac-an-48.cig.mot.com>
NNTP-Posting-Host: mac-an-48.cig.mot.com

Has Blaze's LEAF checksum attack paper been published yet?  After reading a
bit about the LEAF in another publication, I have some questions:

The LEAF is composed of the following information:

1.  The unit ID of the chip (UID) - this allows the gov't to find your keys
in the escrow databases
?2.  Information regarding the chip Unique Key (KU) - maybe a hash
function?
3.  The session key (KS) which is 80 bits - maybe another hash?
4.  A 16 bit checksum.
5.  Probably more information...

OK, so given that the Feds can intercept the LEAF determine several things
from it, namely:

1.  Your chip ID (UID) to look up your two 40-bit Escrowed keys
2.  The session key (KS)

How does the session key fit into this?  I am envisioning a public key-like
system.  Say, each Clipper Chip uses the session key to encrypt the data,
and the session key has been chosen such that only the two chips with the
proper unique keys (KU) can decode the data.  Is this on target?  

Assume that chip#1 could come up with a falsified LEAF that had the
appropriate checksum.  Chip #2 (being legal or not) sees the correct LEAF
checksum, assumes everything is hunky-dory, and continues the conversation.
 Since it is presumable that the Feds wouldn't want each chip to be able to
interpret the entire LEAF, they only check the checksum bits to match their
own. But wait, if the LEAF has information about the KU, the checksums
wouldn't match. Hmm - maybe my #2 above is incorrect.

This obviously implies a large number of pre-computed LEAFs with all
possible checksums - for a 16 bit word, not an insurmountable task.  Since
this all takes place in hardware, the LEAF will have to be identified and
stripped off, then replaced with the falsified LEAF with the matching
checksum.  Of course, the search for the matching checksum only has to be
done once at the beginning - will this introduce detectable delay in the
system?

As you can see, I'm pretty confused.  So, if there are other sources of
information out there, I'd appreciate the pointers...

thanks,

doug

-- 
Doug Slansky
Motorola Cellular Infrastructure Group
Advanced Products Division
AKA: slvrsrf178@aol.com

"Yeah, Right"
