Path: msuinfo!agate!usenet.ins.cwru.edu!gatech!newsxfer.itd.umich.edu!newsrelay.iastate.edu!news.iastate.edu!eng3.iastate.edu!sehari
From: sehari@iastate.edu (Babak Sehari)
Newsgroups: sci.crypt
Subject: Re: **** Decrypting challange stage 2 ******
Date: 1 Jul 94 01:56:52 GMT
Organization: Iowa State University of Science and Technology, Ames, Iowa.
Lines: 68
Message-ID: <sehari.773027812@eng3.iastate.edu>
References: <eillihca.94063013120728625@drizzle.Stanford.EDU>
NNTP-Posting-Host: eng3.iastate.edu
Originator: sehari@eng3.iastate.edu

----

That was really good, you were on the right track.  You restored my faith
to Stanford University once again.

As you suggested.  I just used a pkzip to zip the article, then used this
encoding:

#include <stdio.h>
#include <stdlib.h>
#include <dos.h>
main(int argc, char *argv[])
{
	unsigned char temp,in_char;
	FILE *in_file,*out_file;
	struct time current_time;

	in_file=fopen(argv[1],"rb");
	out_file=fopen(argv[2],"w+b");
	fread(&in_char,1,1,in_file);
        while(!feof(in_file))
	 {
	    gettime(&current_time);
	    temp=current_time.ti_hund+temp;
/* Note that I do not have faith to software generated random #
   because of their spectrom    */
	    in_char=in_char+temp;
	    fwrite(&temp,1,1,out_file);
	    fwrite(&in_char,1,1,out_file);
	    fread(&in_char,1,1,in_file);
          }
        fclose(in_file);
	fclose(out_file);

}


Following file was used to decode:

#include <stdio.h>
#include <stdlib.h>
#include <dos.h>
main(int argc, char *argv[])
{
	unsigned char temp,in_char;
	FILE *in_file,*out_file;
	struct time current_time;

	in_file=fopen(argv[1],"rb");
	out_file=fopen(argv[2],"w+b");
	fread(&temp,1,1,in_file);
        while(!feof(in_file))
	 {
	    fread(&in_char,1,1,in_file);
            in_char=in_char-temp;
	    fwrite(&in_char,1,1,out_file);
            fread(&temp,1,1,in_file);
          }
        fclose(in_file);
	fclose(out_file);

}

Then was left to unzip the file.

                   With highest regards,
                        Babak   Sehari.
-- 
