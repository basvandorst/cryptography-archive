Path: msuinfo!netnews.upenn.edu!newsserver.jvnc.net!yale.edu!yale!yale!gumby!newsxfer.itd.umich.edu!europa.eng.gtefsd.com!MathWorks.Com!news.duke.edu!godot.cc.duq.edu!newsfeed.pitt.edu!uunet!nwnexus!coho!ken
From: ken@coho.halcyon.com (Ken Pizzini)
Newsgroups: sci.crypt
Subject: Re: Backwards use of PGP?
Date: 18 Jul 1994 20:14:23 GMT
Organization: Northwest Nexus Inc.
Lines: 69
Message-ID: <30enqv$cvk@nwfocus.wa.com>
References: <302d5e$786@falcon.bgsu.edu> <Csxuq5.45D.3@cs.cmu.edu> <j.w.richards.11.0008359A@az05.bull.com> <Ct1vK1.55o.3@cs.cmu.edu>
NNTP-Posting-Host: coho.halcyon.com

In article <Ct1vK1.55o.3@cs.cmu.edu>,
Rujith S DeSilva <rudis+@cs.cmu.edu> wrote:
>To do this, A generates a PGP key pair: a public key PK, and a secret key
>SK.  SK has an associated pass-phrase, SKphrase, chosen by A.  A keeps PK
>secret, and securely communicates SK and SKphrase to Bi (the reverse of the
>normal usage of PGP).

The distintion between PK and SK is made when you choose one to
keep Secret and the other to make Public.  Until you reveal
one of the two keys to some other entity they are completely
equivalent.  The SKphrase is only used to allow the beyond-normal-
human-ability-to-memorize SK to be stored securely; it doesn't
care which of the two keys is considered to be the SK.

You don't want to transmit SKphrase to Bi at all.

(On rereading the quoted text, it sounds like you're treating the
entire file with key-related information as "SK"; I'm just
referring to the "Secret Key" component of the RSA key pair.)

>I asserted that the scheme was flawed because given SK and SKphrase, Bi can
>derive PK, and hence can spoof messages.

Given SKphrase, anyone can read your SK, and whatever other information
PGP may store with SK to make life easier.  Given N and only one of
SK or PK the other half of the key-pair is secure. (*)

(*) being pedantic, this is true only if the RSA assumption holds.

>Mr. Richards asserted that the secret components d, p, q and u (what's `u',
>by the way?) are stored encrypted using the IDEA cipher, and hence not
>available to Bi to derive PK.

Unless you give out the SKphrase, which is used to derive the key
for the IDEA cipher.

>My question is: what is meant by `stored encrypted using the IDEA cipher'?

PGP stores various secrets on the disk in encrypted form.  It uses
the IDEA cipher to do this, and used a cryptographic hash of your
SKphrase as the key.

>Does it mean that an IDEA key is derived from SKphrase (the PGP
>pass-phrase), and used to encrypt d, p, q & u?  In that case, Bi can
>decrypt these values, as they know SKphrase, and use them to derive PK.
>Note that, to be able to decrypt messages encrypted using PK, Bi must have
>access to d, and if d, p, q & u are encrypted together (as Mr.  Richards
>seems to imply), a person able to obtain the value of d would be able to
>obtain the values of p and q as well.

Now why are you giving out your SKphrase?  It is precisely to keep
your private key-related information secure that it exists.  If
a random 300 digit number was something that your typical human could
memorize easily then the SKphrase wouldn't be used; it just exists
to allow one to memorize something memorable and still keep your
private key secure.

...

The start of this thread has expired on my machine, so I'll speculate
here as to your intent.  You want to multicast a message to a set
of recipients in such a manner that the recipients can verify that
you were the sender.  This can be done with PGP; you just have PGP
sign your message and address it to the recipient list.  Your message
will grow a little -- the signature block plus one key-block per
recipient (with 1000 bit keys this is approximately 170 bytes,
plus headers, per recipient).

		--Ken Pizzini
