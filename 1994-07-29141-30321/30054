Path: msuinfo!agate!spool.mu.edu!mnemosyne.cs.du.edu!nyx10.cs.du.edu!not-for-mail
From: colin@nyx10.cs.du.edu (Colin Plumb)
Newsgroups: sci.crypt
Subject: Re: Compiling IDEA from Applied Cryptography by B. Schneier
Date: 25 Jul 1994 02:06:43 -0600
Organization: University of Denver, Dept. of Math & Comp. Sci.
Lines: 59
Message-ID: <30vrqj$qok@nyx10.cs.du.edu>
References: <30pdib$j5b@hebron.connected.com>
NNTP-Posting-Host: nyx10.cs.du.edu
Keywords: idea applied c

In article <30pdib$j5b@hebron.connected.com>,
Jay Summet <jay@connected.com> wrote:
>	I have been trying to compile the IDEA source code from Bruce 
>Schneier's book, _Applied Cryptography_ but I have ran into a problem.
>The idea.h file has a line which says:
>#include "usuals.h" /* typedefs for byte, word16, boolean,etc. */
>
>I can not find the usuals.h file in the source code examples in the book, 
>and it does not come with GCC or my compiler, Power C. (It is a user 
>include file)  

Bruce didn't do a terribly good job of excising that code from PGP;
since my name is on it, it's a trifle embarassing.  I tried to make
up for it by writing some excessively clean code which is on his
source disks.  Since I'm in North America, I'm a bit reluctant to
post it to the world, but maybe someone outside has the AC disks up
for FTP?

You can also find similar code (although with a few more extraneous
frills) in PGP 2.6.  idea.c there is *much* cleaner than the junk from
the AC book.

Oh, while you're at it:

#include <limits.h>

#if UCGAR_MAX == 0xff
typedef unsigned char byte;
#else
#error This machine has no 8-bit type
#endif

#if USHRT_MAX == 0xffff
typedef unsigned short word16;
#else
#error this machine has no 16-bit type
#endif

#if UINT_MAX == 0xffffffff
typedef unsigned word32;
#elif ULONG_MAX == 0xffffffff
typedef unsigned long word32;
#else
#error This machine has no 32-bit type
#endif

I think that will do for the IDEA code.  There's more junk in the
PGP header of that name, but I don't recall it being necessary.
-- 
	-Colin
>
>I have never had to define variable types, and I am unsure how to do this.
>If anyone has the actual usuals.h file, or knows how I should make my 
>own, please reply.
>Thanks
>     Jay
>


