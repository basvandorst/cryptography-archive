Path: msuinfo!agate!howland.reston.ans.net!swrinde!ihnp4.ucsd.edu!usc!nic-nac.CSU.net!ctp.org!not-for-mail
From: wmoyes@eis.calstate.edu (William A Moyes)
Newsgroups: sci.crypt
Subject: Re: Cracking a scheme..
Date: 30 Jun 1994 22:48:21 -0700
Organization: California Technology Project of The Calif State Univ
Lines: 20
Message-ID: <2v0an5$ahv@eis.calstate.edu>
References: <hE4So96.padrote@delphi.com>
NNTP-Posting-Host: eis.calstate.edu

	An easy way to make a secure registeration system would be to 
hash the users name, address, and home phone number, and encrypt the hash 
code using your secret key. In the users software it would compute the 
hash, then compare it the to result of unencrypting the code using your 
public key. If the key lenght was sufficent, it would be very unprobable 
that a hacker could create fake codes. Your biggest problem would be a 
hacker patching you program so that it would not perform the verfiycation 
checks. Patching a single branch instruction is much simpler than 
disassembling a program. One of the most difficult things to patch is 
compressed code (providing a 'uncompressor' is unavailable). If you are 
releasing a Public Domain program, and a code is used to register it, you 
might include as part of the code a key that is used to decrypt the 
registered functions. This would require a hacker to at least register 
the program before it can be hacked.

		-William Moyes
		wmoyes@eis.calstate.edu


--
