Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!jussieu.fr!univ-lyon1.fr!swidir.switch.ch!newsfeed.ACO.net!fstgds15.tu-graz.ac.at!iaik!plipp
From: plipp@iaik (Peter Lipp)
Newsgroups: sci.crypt
Subject: Re: Breaking trivial ciphers
Date: 13 Jul 1994 12:28:18 GMT
Organization: Graz University of Technology, Austria
Lines: 38
Message-ID: <300ml2INNem7@fstgds15.tu-graz.ac.at>
References: <300imb$4iu@rzsun02.rrz.uni-hamburg.de>
NNTP-Posting-Host: fiaikss04.tu-graz.ac.at
X-Newsreader: TIN [version 1.1 PL9]

Bodo Moeller (3moeller@rzdspc5.informatik.uni-hamburg.de) wrote:
: {cipher,plain}text.  So this library "crypt" routine could be a DES
: OFB implementation (in theory; most probably, it is not).
No, its not. Definitely.

: However, if the same key (and initialisation vector) is used for two
: plaintexts P1, P2, it is possible to XOR the two ciphertexts C1 and
: C2, and thus to obtain (if R is the pseudorandom sequence)

: C1 XOR C2 = (P1 XOR R) XOR (P2 XOR R)
:           = (P1 XOR P2) XOR (R XOR R)
:           = P1 XOR P2.

: So breaking the cipher is trivial with a chosen plaintext attack when
: a key/initialisation vector pair is used twice.
But what Info have I gained? I know that, and thus I can easily recover
the sequence of bytes for a certain key that then would be XORed with the
Plaintext by choosing say C1 as all zeros. Done so. But it only works if
I know the key. I now I have to find out how this sequence is generated
(and this might be complicated). My guesses are that some simple random-number
generator might be in use. I do not know if that helps a lot. I do not want to
look at the program itself (disassemble or so) for that purpose. I just thought
there might be some method that I could apply to help me or do I have to rely on
my intuition?

Or might it be that if I have two or more unknown Plaintexts which are 
encrypted with the same key, that I could gain some info out of xoring the
Ci? I'll have to check that...

Peter Lipp
P.S. NewsConfig will be dealt with....



--
Dipl.Ing. Dr. Peter Lipp - Institute for Applied Information Processing
Technische Universitaet Graz, Austria (University of Technology, Graz, Austria)
plipp@iaik.tu-graz.ac.at
