Path: msuinfo!netnews.upenn.edu!dsinc!newsfeed.pitt.edu!gatech!howland.reston.ans.net!math.ohio-state.edu!cs.utexas.edu!not-for-mail
From: ritter@io.com (Terry Ritter)
Newsgroups: sci.crypt
Subject: Re: Non-RSA Public Key Algorithms Wanted
Date: 27 Jul 1994 17:28:04 -0500
Organization: UTexas Mail-to-News Gateway
Lines: 95
Sender: nobody@cs.utexas.edu
Message-ID: <199407272228.RAA28809@pentagon.io.com>

 In <315eoj$52f@bambi.zdv.uni-mainz.de>
 pom@katrin.imsd.uni-mainz.DE (Prof. Dr. Klaus Pommerening):


>In article <199407261621.LAA15944@pentagon.io.com> ritter@io.com (Terry
>Ritter) writes:
>#  Without the result on cycle lengths, there is no way to know how
>#  large N must be to become "unpredictable" in practice.  It is the
>#  cycle length results which support a guarantee of the claimed
>#  properties of the RNG, and without those properties, we would not
>#  use it.
>
>Do you really use it - after all your critics? :-)

 Well, perhaps I *have* presumed unreasonably.  For "we" read
 "anybody with any sense."  :-)

 Actually, if "we" would rather wait for "ideal" cryptography, "we"
 may have a long wait.  There are many different approaches, each
 with advantages and disadvantages.  If BB&S were all it would take
 to convince someone to buy my stuff, I would soon have a BB&S
 implementation to offer.  If the customer is willing to put up
 with performance delays in order to reap the advantages, why
 would I care?

 But I would consider it a slimy business practice to implement
 X**2 mod N and call it BB&S--thus trading on the reputation of
 the BB&S math--without implementing the special-primes
 construction, or X0 validation.  Let those producers write their
 own paper, or advertise "unpredictable under the QRA," rather
 than cloaking themselves in something they do not have.

 If somebody knows what they are doing and really wants X**2 mod N
 without the special-primes construction or X0 validation, I will
 implement it and sell it.  But I will not call it BB&S.


># ...
>#  Defining when the parameters are "big enough" is exactly what the
>#  cycle-length math does.
>#
>
>The result on cycle lengths doesn't say much how large N must be to make
>the output stream of BBS unpredictable for practical purposes; at most it
>gives a weak lower bound. More useful hints on the size of N are given by
>the results on factoring large numbers.

 OK then Klaus, drop the other shoe:  In exactly what situation
 would BBS be predictable in practice, given a cycle length
 which is impossible to traverse?


>And, unfortunately, BB&S's result is on the cycle length of the sequence
>of quadratic residues x_i that is only kept as internal state of the
>generator. The result doesn't say anything about the cycle length of the
>output bitsream (except, of course, giving an upper bound). (See `open
>question' in BB&S's paper.)

 Well, let me use the sort of BB&S argument which occurred earlier:
 I can prove that there must be no such subsequences, for if there
 were, we could predict the RNG results, and we have proven that
 the results are unpredictable.  QED.

 :-)

 One might well be concerned that a particular cycle would have lsb
 values which produce multiple identical subsequences within the
 cycle, and, thus, an apparently short cycle.  However, unless one
 could rely upon this occurring more often than it should by chance,
 it does not help The Opponent.  It is probably not possible to
 prove that this never happens, because this *must* happen, albeit
 infrequently, even in a really random sequence.  In fact, if we
 could prove that this does not happen, we also prove that the
 sequence is flawed.

 It would be nice if every RNG scheme had a great deal more math
 on the produced values.  Even work on the simple LCG has been
 forced into the exhaustive analysis of the final system, which
 is, therefore (under this analysis), relatively small.  BB&S
 does not give us the option of creating a small "unpredictable"
 generator.  A LFSR gives us a good understanding of the sequence
 and subsequence, but the exact permutation of subsequence values--
 and, thus, the lsb values of each--still must be *explored* for
 a particular feedback polynomial.  I am aware of no RNG which
 has a general analysis which would answer this question, or a
 construction which would guarantee an answer.  So why would we
 expect it of BB&S?

 This is the just sort of thing which could drive one into working
 with *block* ciphers.  :-)

 ---
 Terry Ritter   ritter@io.com


