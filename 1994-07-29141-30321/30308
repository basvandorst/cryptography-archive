Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!not-for-mail
From: ritter@io.com (Terry Ritter)
Newsgroups: sci.crypt
Subject: Re: weak encryption+compression+strong encryption=???
Date: 30 Jul 1994 14:10:01 -0500
Organization: UTexas Mail-to-News Gateway
Lines: 95
Sender: nobody@cs.utexas.edu
Message-ID: <199407301910.OAA21411@pentagon.io.com>
NNTP-Posting-Host: news.cs.utexas.edu

 In <31c02s$6af@senator-bedfellow.MIT.EDU>
 solman@athena.mit.edu (Jason W Solinsky) writes:

>In article <199407290442.XAA21056@pentagon.io.com>, ritter@io.com (Terry Ritter)
> writes:
>
>|>  Any cipher which produces network-transportable text (e.g, PGP),
>|>  will produce compressable output.
>
>I'm not sure what you mean by this. By network transportable, do you mean
>that only some character codes are used? If such a limitation is required
>by the encryption, shouldn't it also be required from the compression?

 Yes.  And No.

 Yes, I mean that any cipher which produces 64-symbol ciphertext
 will produce compressable ciphertext.

 No, one cannot assume that if the ciphertext is 64-symbol the
 compression should be as well.  Your statement (elided from the
 message you quoted) was:

>[>]>Lets be a little stronger than that. If your compression algorithm works
>[>]>at all after encryption, stay clear of that encryption algorithm.

 To which I responded:

>>>Well, no.

 Which was, and is, an appropriate comment.


>|>  My Penknife cipher certainly is a substitution cipher, it just
>|>  happens to be a *Dynamic* Substitution cipher.  I believe Penknife
>|>  offers serious "protection," and am willing to discuss the design
>|>  in detail if you have doubts.
>
>Well I am interested in this, particularly if it is a strong cipher that can
>easily be compressed (ignoring, for the moment the natural redundancy that
>compes from transporting things in undesireable character sets).

 I have been discussing Dynamic Substitution on sci.crypt since
 shortly after I filed the patent application for it in 1989.  In
 1990, Cryptologia published my article on it.  If you are unaware
 of this technology, we have to ask: "Why?"

 I have released a substantial design description of the Penknife
 email cipher several times on sci.crypt.  (Penknife 1.0 for DOS was
 completed around the first of the year.)   If anyone would like
 to discuss the design in detail I would of course be glad to post
 the design document again.  New usage documentation has become
 available since the first release and is available to users or
 potential users.

 Perhaps the defining aspect of the Penknife cipher is that it is
 a re-originating stream cipher: each and every ciphertext "line"
 is ciphered independently.  There are both positive and negative
 consequences to this, but one of the most significant is that
 ciphertext messages can be concatenated--as ciphertext--and yet
 properly deciphered.  This makes it easy to add keys to an
 enciphered key file *without* even transiently exposing the old
 keys.  It also makes it easy to accumulate messages into a
 ciphertext archive, which could be examined at a later date.
 (Each contiguous block of ciphertext represents a single message,
 each of which has its own CRC on the plaintext data.)

 Other aspects of the Penknife cipher represent my own biases and
 conclusions:  The ciphertext contains absolutely no ---begin---
 ---end--- bracketing at all, no identification of the cipher,
 no statement that cipher is in use.  Each message is just lines
 of 64-symbol ASCII text.  Also, the Penknife cipher is a private-
 key cipher.  First of all, I don't trust PGP-style key-validation,
 and next, I assume that most people actually occasionally meet
 people they really trust, making key-delivery a minor annoyance.
 And, within a corporation, key management pretty well must be
 centralized anyway, and keys can largely be distributed through
 existing hierarchical paper-distribution channels.

 Any cipher intended to be used for email on an arbitrary network
 had better use a restricted ASCII symbol-set.  Moreover, having
 just one ciphertext form (instead of, say, ASCII and binary) means
 that users do not have to *choose* the appropriate form, either for
 enciphering or deciphering.  And it is possible to examine--and
 sometimes even edit--the resulting ciphertext in an ordinary text
 editor.

 A cipher is more than a cipher algorithm, but the cipher algorithm
 inherently influences the overall system.  New classes of algorithm
 can help make system-level features available which are difficult
 under the classical forms.

 ---
 Terry Ritter   ritter@io.com


