Path: msuinfo!agate!ames!hookup!yeshua.marcam.com!MathWorks.Com!news.duke.edu!godot.cc.duq.edu!newsfeed.pitt.edu!uunet!news2.sprintlink.net!news.sprintlink.net!nwnexus!coho!ken
From: ken@coho.halcyon.com (Ken Pizzini)
Newsgroups: sci.math,sci.crypt
Subject: Re: Help: computing Jacobi symbols
Date: 18 Jul 1994 18:57:38 GMT
Organization: Northwest Nexus Inc.
Lines: 43
Distribution: usa
Message-ID: <30ejb2$7t6@nwfocus.wa.com>
References: <1994Jul17.044652.9003@midway.uchicago.edu>
NNTP-Posting-Host: coho.halcyon.com
Xref: msuinfo sci.math:76175 sci.crypt:29794

In article <1994Jul17.044652.9003@midway.uchicago.edu>,
Andrew Chen <achen@uhuru.uchicago.edu> wrote:
>As part of a project on cryptography, I'm trying to find a way to
>compute the Jacobi symbol of a large composite number, without knowing
>its factors.  I would greatly appreciate any pointers to information
>(or even better, source code) on this topic. 

Here is some C code; it has two glaring drawbacks: it assumes that the
numbers of interest fit in "int", and it is not written for speed.  In
its defense, it was written to be illustartative and understandable by
one with a mininimal understanding of C.  It should serve as a useful
starting point at least.

		--Ken Pizzini

int
jacobi(int a, int b)
{
	int g;

	if (a >= b)
		a %= b;
	if (a == 0)
		return 0;
	if (a == 1)
		return 1;

	if (a % 2 == 0)	/* a is even */
		if (((b*b-1) / 8) % 2 == 0)
			return +jacobi(a/2, b);
		else
			return -jacobi(a/2, b);

	g = gcd(a, b);
	if (g == a)
		return jacobi(a, g) * jacobi(a, b/g);
	else if (g != 1)
		return jacobi(g, b) * jacobi(a/g, b);
	else if (((a-1)*(b-1)/4) % 2 == 0)
		return +jacobi(b, a);
	else
		return -jacobi(b, a);
}
