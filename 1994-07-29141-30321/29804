Path: msuinfo!agate!ihnp4.ucsd.edu!usc!cs.utexas.edu!not-for-mail
From: ritter@io.com (Terry Ritter)
Newsgroups: sci.crypt
Subject: Re: Non-RSA Public Key Algorithms Wanted
Date: 18 Jul 1994 19:27:32 -0500
Organization: UTexas Mail-to-News Gateway
Lines: 84
Sender: nobody@cs.utexas.edu
Message-ID: <199407190027.TAA10095@pentagon.io.com>
NNTP-Posting-Host: news.cs.utexas.edu

 In <30egvj$fse@senator-bedfellow.MIT.EDU> solman@athena.mit.edu
 (Jason W Solinsky) writes:

>In article <grinch-180794121015@grinch.tor.hookup.net>, grinch@hookup.net
(Reginald Braithwaite-Lee) writes:
>|> In article <305i63$gsg@senator-bedfellow.MIT.EDU>, solman@athena.mit.edu
>|> (Jason W Solinsky) wrote:
>|>
>|> > If for some reason you HAD to use a public key system for encryption
>|> > I would suggest probabilistic encryption using a Blum Blum Shub
      Pseudorandom
>|> > generator as mentioned in applied cryptography. Its faster. Its
      possible
>[...]
>|> I wasn't able to figure out how to construct a public key system from
>|> Bruce's descriptions of either the BBS generator or probabalistic
>|> encryption. Is there a paper available (pref. online) or can you/someone
>[...]


>Choose two large primes, p and q that are congruent to 3 modulo 4
>(i.e. p mod 4 = 3; q mod 4 = 3). Choose a random seed x.

 Does anybody actually read these papers?

 No, this is not the Blum, Blum and Shub "unpredictable" RNG [1].
 It might be profitable for those who trumpet the use of BB&S to
 actually study the original reference.  In my experience, a casual
 reader often skips the entire latter part of the paper, under the
 belief that it is unrelated to application.  It is not.

 First, the BB&S X**2 mod N generator differs from the usual "maximal
 length" RNG in that it creates a system with many cycles of various
 lengths.  We will use that generator in the usual stream cipher with
 the usual additive combiner, and must assume some amount of "known
 plaintext."  This means that The Opponent can recover some part of
 the sequence produced by the RNG.  Obviously, if the RNG produces a
 short cycle, and if known plaintext covers that cycle, there is
 nothing "unpredictable" about the generator at all.

 Thus, BB&S requires that the random seed X0 be chosen on a long
 cycle (see Theorem 7, p. 377).  Because actually measuring cycle
 length is a difficult problem, BB&S instead constructs N in such
 a way that supports the proof of existence of a cycle of a known
 length (Theorems 6 and 7, p. 377), and gives a "fast" algorithm to
 check for that length, given X0 and N [Theorem 9, p. 379].
 Moreover, to guarantee that cycle length, it is necessary that the
 construction use "special" primes p and q, S.T. P = 2 P1 + 1 and
 P1 = 2 P2 + 1 (see the discussion on p. 378).


>That is BBS number generation.

 Where does this come from?

 If N is not properly constructed, or if X0 is not properly selected,
 the system is not BB&S.  That would mean that the BB&S proofs would
 not hold, and that the RNG would not be "provably unpredictable."
 Since X is in general a multi-precision value, and the RNG requires
 both a multi-precision multiplication and a multi-precision division
 for each value produced, it is slow, slow, slow.  (Compare to a 992-
 bit Additive RNG which uses a single integer addition, some pointer
 operations, a count and exclusive-OR.)  The only reason to use it
 is if it is provably secure.  Void that and there is no point in
 using it at all (at least as a stream-cipher RNG).

 While I have been told that unpublished math supports an easier
 method of X0 selection, until that math is published we cannot
 evaluate the argument.  And even if eventually math is published
 to make X**2 mod N practical, it will *still* not be BB&S.

 Don't trust hearsay!  Read the reference!


 Reference

 [1]   Blum, L., M. Blum and M. Shub.  1986.  A Simple Unpredictable
       Pseudo-Random Number Generator.  SIAM Journal on Computing.
       15(2): 364-383.

 ---
 Terry Ritter   ritter@io.com


