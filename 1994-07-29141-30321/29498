Path: msuinfo!agate!spool.mu.edu!torn!nott!cunews!revcan!rubicon!uuisis!tanda!marc
From: marc@tanda.on.ca (Marc Thibault)
Newsgroups: sci.crypt
Subject: Re: Solution to public-key exchange?
Message-ID: <c154oc5w165w@tanda.on.ca>
Date: Thu, 07 Jul 94 17:46:35 EDT
References: <2vauaf$m9e@hearst.cac.psu.edu>
Distribution: world
Organization: Tanda and Associates
Lines: 48

D6B@ECL.PSU.EDU (Dan E Babcock) writes:

> 1. Two people exchange public keys via email.
> 
> 2. The initiator sends a plaintext (or encrypted) message,
>    "Please send me file X".
> 
> 3. The target reads his email (whenever he gets around to it) and fires off
>    part 1 of file X (encrypted with the initiator's public key).
> 
> 4. After a fixed time intervl, the target sends part 2 of file X.

        Not bad, except that you are using file X as an authentication
        key. If it is known to the spoofer, she can continue the
        spoof. If it is obscure and unknown to the spoofer but known
        to initiator and target, one has to assume some form of
        pre-arrangement via a different channel, which you declared
        out of bounds. An out-of-band message to be prepared to send
        file X is no less difficult than an out-of-band message
        containing your public key.

        To my mind, the best approach I can think of is to publish
        your key on Usenet and then check that it gets there properly
        by accessing the net in an unpredictable way (eg.
        public-access terminal to a FreeNet) and validating the
        message. This checks for spoofing without alerting the
        spoofer that she has been discovered. If you find the message
        is there but the key has been changed, you know that someone
        with significant resources is after you.

        Cheers,
                Marc

---
 Marc Thibault                 | Design, Development, Project Management
 Automation Architect          | Privacy and Trust
 Oxford Mills, Ontario, Canada | End-User Powered Systems

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: 2.3a

mQA9AiyT2YcAAAEBgKVboQejsR2t2U70HoWOXTIqlWUCRGkTht8Yn/4kuzWby/e3
Z9tT8RHJbAx9us7QZwAFEbQdVGFuZGEgTWFpbCA8bWFyY0B0YW5kYS5vbi5jYT4=
=aFhG
-----END PGP PUBLIC KEY BLOCK-----

        

