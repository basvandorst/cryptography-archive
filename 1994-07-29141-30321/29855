Path: msuinfo!agate!ihnp4.ucsd.edu!usc!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!athena.mit.edu!solman
From: solman@athena.mit.edu (Jason W Solinsky)
Newsgroups: sci.crypt
Subject: Re: Variants of DES
Date: 20 Jul 1994 10:25:24 GMT
Organization: Massachusetts Institute of Technology
Lines: 42
Distribution: world
Message-ID: <30iu2k$gqi@senator-bedfellow.MIT.EDU>
References: <30grch$580@amhux3.amherst.edu> <30h1m8$bt0@senator-bedfellow.MIT.EDU> <30iqba$apb@zeus.london.micrognosis.com>
NNTP-Posting-Host: e51-007-3.mit.edu

In article <30iqba$apb@zeus.london.micrognosis.com>, rparratt@london.micrognosis.com (Richard Parratt) writes:
|> In article <30h1m8$bt0@senator-bedfellow.MIT.EDU>, solman@athena.mit.edu (Jason W Solinsky) wrote much about double encryption etc.
|> 
|> I have remarkably little knowledge of the maths behind crypto, and it
|> doesn't help that I rather flunked first year number theory but:
|> 
|> Any system is more likely to have bugs the more complicated it gets.
|> 
|> The *mainstream* algorithms such as DES, IDEA, etc. have been extensively
|> analysed, considered, tested and used. This doesn't in any way prove that
|> there isn't a *short cut* algorithm to cracking them, but a lot of people
|> are looking and if one exists, it will get found one day.
|> 
|> You may believe that using two passes of IDEA, three of DES, and several
|> translations makes for improved security. This *may* be true. Alternatively,
|> you may have created a hole, either through the algorithms or their
|> implementation that makes the system *more* vulnerable.
|> 
|> Because the *improved* system is a minority interest, and not the subject of
|> research, testing and use, it is unlikely that the hole will be found rapidly.
|> That isn't to say that there isn't one, and a determined and wealthy
|> opponent is likely to be the first to find out and keep the fact to
|> themselves.

I'm not sure I agree with this. I think that as long as you resign yourself
to permuting known secure algorithms sequentially, its pretty unlikely that
you will wind up with an algorithm that is less secure than the most secure
of the well known algorithms that you permute. In general, to do this with an
existing code library requires a VERY small amount of additional coding
in which bugs can appear.

I would claim that the most important reason why a combination of known secure
attacks is a good idea is that it provides a little obscurity without forcing
you to use an untested algorithm. If the NSA is all set up in its basement with
its anti-DES machine, and you throw in a little key-based twist before or after
the encryption, their hardware is going to require serious hacking to make it
work on your new key.

BTW, what is the best current DES attack. To my knowledge it was 2^47, but I've
seen the numbers 2^45 and 2^37 thrown out recently.

JWS
