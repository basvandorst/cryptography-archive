Path: msuinfo!netnews.upenn.edu!newsserver.jvnc.net!howland.reston.ans.net!usc!rand.org!mycroft.rand.org!not-for-mail
From: jim@acm.org (Jim Gillogly)
Newsgroups: sci.crypt
Subject: Re: Modified one-time pad: explain why I'm dumb.
Date: 20 Jul 1994 12:05:09 -0700
Organization: Banzai Institute
Lines: 27
Sender: jim@mycroft.rand.org
Message-ID: <30jsh5$6p9@mycroft.rand.org>
References: <1994Jul20.170507.28864@njitgw.njit.edu>
Reply-To: jim@acm.org
NNTP-Posting-Host: mycroft.rand.org

I quickly pass over the "one-time pad" reference in the subject, waving
dramatically, and off-handedly mentioning that there's only One True 1-Time
Pad and that all else is in a state of sin.  And that's a FAQ, Jack.

In article <1994Jul20.170507.28864@njitgw.njit.edu>,
Aaron Watters <aaron@funcity.njit.edu> wrote:
>key: 2^16 of random bytes such that no two bytes in sequence
>  are ever equal, addressable by byte as byte[0..2^16-1] or 
>  by 256byte blocks as block[0...255].

>encoding algorithm:
>  transmitted block CLEAR number n is transmitted as
>      CODE= CLEAR xor block[byte[2n]] xor block[byte[2n+1]
...
>enough for one message.  Is there a simple way to break this
>without using tremendous resources?

Yup. 256 blocks of known plaintext and you're 0xDEADBEEF.  The cryptanalyst
doesn't need to reconstruct your original key block, but only what it's
getting transformed into for each block.  So for each block n for which we
have a known pt/ct pair, construct foo[n] = plain[n] ^ cipher[n].  The
fact that it's equal to the xor of a couple of other things is something
you never need to know, since they're only a function of n and will thus be
same other things each time.
-- 
	Jim Gillogly
	Highday, 27 Afterlithe S.R. 1994, 19:05
