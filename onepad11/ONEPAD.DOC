ONEPAD.DOC -- Documentation for ONEPAD.EXE version 1.10

WHAT IS THIS?

ONEPAD is a program that performs the classic "one time pad" encryption and/or
decryption operation on any file, given a randomly generated binary key file. 
It takes every byte of the input file and exclusive-ors it (adds each bit
modulo 2) to a byte from the key file, and writes that byte out to the output
file.

This program was intended primarily for academic use, although it is perfectly
well suited for use in protecting sensitive data IF each key is used only once.

Unlike the other encryption programs I have written, this one does not encrypt
or decrypt "in place," so it is less secure from the standpoint of having your
data discovered, but more secure from loss of your data in case there is an
error condition or power failure.  To be really sure the plain text data is
dead, use a utility that overwrites the file before erasing it.


HOW DO I USE THIS?

1.  Generate or select a key file.  This is the hard part.  The key file must
be at least as large as the file you intend to encrypt, and must be as
"random" as possible.  You could flip a coin once for each bit needed, and get
a very good key, but then that would take too long for any reasonable sized
file.  I recommend my FASTKEY or RANDKEY programs.  FASTKEY uses a combination
of the Turbo Pascal pseudorandom number generator (based on a 16 bit seed),
the system clock, and the time and contents of user keystrokes to generate a
sequence that is actually a random sequence of pseudorandom sequences.  The
real randomness comes from the keyboard input.  RANDKEY is like FASTKEY,
except that it uses the DES algorithm (based on a 56 bit seed) for its
pseudorandom number generator, and is therefore "more random."

2.  Run ONEPAD.EXE on the file to be encrypted.  The command line syntax is:

[d:][path]ONEPAD infile keyfile outfile [offset]

[d:] is the optional drive designation where ONEPAD.EXE resides.

[path] is the optional path designation where ONEPAD.EXE resides.

Infile is the input file (plain text if you are encrypting, cipher text if you
are decrypting.

Keyfile is the key file generated in step 1.

Outfile is the output file (cipher text if you are decrypting, plain text if
you are encrypting).

[offset] is the optional number of bytes from the beginning of the key file
that you want to start the encryption process.  The offset given must be the
same for both encryption and decryption.  The default offset is 0.  The offset
number must be a positive integer, and may be expressed in decimal (don't
start the number with 0), hexadecimal (start number with 0x), or octal (start
the number with 0).

For example to encrypt SECRET.DOC with the key file A:ONE.KEY, with the
encrypted file named SECRET.ENC from the DOS command line, type:

ONEPAD SECRET.DOC A:ONE.KEY SECRET.ENC

To get a help message, as well as to display copyright and version
information, enter ONEPAD with no parameters on the DOS command line.


3.  IF ONEPAD runs without errors, you can now wipe out the plain text file
with Norton's WIPEFILE or PC Magazine's DELZ or some similar utility, and
remove the disk from drive A: with your key file on it and lock it up.

4.  To decrypt, just do the same thing in reverse:

ONEPAD SECRET.ENC A:ONEKEY SECRET.DOC


STRENGTHS OF ONE TIME PAD

1.  IF you use each key only once, and IF you keep the key secure, and IF you
keep all copies of your plain text files secure, and IF your key is random,
THEN there is no known way to break this kind of encryption.  It is provably
secure.  This type of encryption is used for the most sensitive diplomatic
correspondence.

2.  It is simple, fast, and the fact that the algorithm is well known does not
reduce the security of the encryption.


WEAKNESSES OF ONE TIME PAD

1.  If you violate any one of the conditions in the use of this method of
encryption, then you make it possible for unintended receivers to decrypt your
data.

2.  The volume of keying material has to be as great as the volume of the
material being protected.  Since the keying material has to be protected like
the most sensitive data it protects, the bulk of keying material required can
make this more difficult.


LEGALITIES

ONEPAD.EXE, ONEPAD.CPP and this file are Copyright (C) 1990-1991 Mike Johnson.
All rights reserved.  Although this program is believed to be reliable when
used as intended, no warranty is made to that effect.  In fact, no warranty is
made at all.  It is up to the user to determine the suitability of this
software for their own use.  This software is distributed as share ware.  This
means that you may copy it and distribute unmodified copies of it for free (or
for just enough to cover your costs in doing so), but if you use it regularly,
you must register it by sending $20 and the name of this program to the
author:

		Mike Johnson
		P. O. Box 1151
		Longmont, CO 80502-1151
		USA

Registered users get a disk with a copy of the program, as well as a license
to use the source code in derivative works.

SUPPORT

Support is available by Mail and on the Rainbow Missions BBS (303-678-9939) to
registered users.


SOURCE CODE

This program was compiled with Borland C++ and compressed with PKLite.  The
source code is included in the file ONEPAD.CPP.

******************************************************************************
