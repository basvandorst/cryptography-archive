F	md5.c	/^#define F(x, y, z) (((x) & (y)) | ((~x) & (z)))$/
FF	md5.c	/^#define FF(a, b, c, d, x, s, ac) \\$/
G	md5.c	/^#define G(x, y, z) (((x) & (z)) | ((y) & (~z)))$/
GG	md5.c	/^#define GG(a, b, c, d, x, s, ac) \\$/
H	md5.c	/^#define H(x, y, z) ((x) ^ (y) ^ (z))$/
HH	md5.c	/^#define HH(a, b, c, d, x, s, ac) \\$/
I	md5.c	/^#define I(x, y, z) ((y) ^ ((x) | (~z)))$/
II	md5.c	/^#define II(a, b, c, d, x, s, ac) \\$/
MD5Final	md5.c	/^void MD5Final (mdContext)$/
MD5Init	md5.c	/^void MD5Init (mdContext)$/
MD5Update	md5.c	/^void MD5Update (mdContext, inBuf, inLen)$/
MDbegin	md4.c	/^MDbegin(MDp)$/
MDblock	md4.c	/^MDblock(MDp,X)$/
MDprint	md4.c	/^MDprint(MDp)$/
MDreverse	md4.c	/^MDreverse(X)$/
MDupdate	md4.c	/^MDupdate(MDp,X,count)$/
Mc	c.c	/^main(argc, argv)$/
Mlogin	login.c	/^main(argc, argv)$/
Mskey	skey.c	/^main(argc,argv)$/
Mskeyd	skeyd.c	/^main(argc, argv)$/
Mskeyinit	skeyinit.c	/^main(argc,argv)$/
Msu	su.c	/^main(argc,argv)$/
ROTATE_LEFT	md5.c	/^#define ROTATE_LEFT(x, n) (((x) << (n)) | ((x) >> /
SCMPN	login.c	/^#define	SCMPN(a, b)	strncmp(a, b, sizeof(a))$/
SCPYN	login.c	/^#define	SCPYN(a, b)	strncpy(a, b, sizeof(a))$/
TTYGID	login.c	/^#define TTYGID(gid)	tty_gid(gid)	\/* gid that owns /
Transform	md5.c	/^static void Transform (buf, in)$/
__ARGS	md4.h	/^#define	__ARGS(X) X	\/* For ANSI C *\/$/
_findenv	getenv.c	/^_findenv(name, offset)$/
atob8	skeylogin.c	/^atob8(out,in)$/
aton	login.c	/^aton(s)$/
authfile	login.c	/^authfile(host)$/
backspace	skeysubr.c	/^backspace(buf)$/
btoa8	skeylogin.c	/^btoa8(out,in)$/
btoc	put.c	/^btoc(cp)$/
btoe	put.c	/^btoe(engout,c)$/
catch	login.c	/^catch()$/
deskeycrunch	deskeyc.c	/^deskeycrunch(result,seed,passwd)$/
doremotelogin	login.c	/^doremotelogin(host)$/
doremoteterm	login.c	/^doremoteterm(term, tp)$/
etob	put.c	/^etob(out, e)$/
extract	put.c	/^extract(s, start, length)$/
f	md4.c	/^#define	f(X,Y,Z)             ((X&Y) | ((~X)&Z))$/
ff	md4.c	/^#define ff(A,B,C,D,i,s)      A = rot((A + f(B,C,D)/
fff	skeysubr.c	/^fff(x)$/
g	md4.c	/^#define	g(X,Y,Z)             ((X&Y) | (X&Z) | (Y&Z/
getenv	getenv.c	/^getenv(name)$/
getloginname	login.c	/^getloginname(up)$/
getskeyfield	skeyd.c	/^getskeyfield(username)$/
getskeyprompt	getskeyprompt.c	/^getskeyprompt(mp,name,prompt)$/
getstr	login.c	/^getstr(buf, cnt, err)$/
gg	md4.c	/^#define gg(A,B,C,D,i,s)      A = rot((A + g(B,C,D)/
h	md4.c	/^#define h(X,Y,Z)             (X^Y^Z)$/
hh	md4.c	/^#define hh(A,B,C,D,i,s)      A = rot((A + h(B,C,D)/
htoi	skeylogin.c	/^htoi(c)$/
insert	put.c	/^insert(s, x, start, length)$/
isaddr	login.c	/^isaddr(s)$/
keycrunch	skeysubr.c	/^keycrunch(result,seed,passwd)$/
lock	skeyd.c	/^lock(lockfile)$/
put8	put.c	/^put8(out,s)$/
rdnets	login.c	/^rdnets(host)$/
read_data	skeylogin.c	/^int		read_data(s, buf, n)$/
readpass	skeysubr.c	/^readpass(buf,n)$/
readskeydconf	skeylogin.c	/^readskeydconf()$/
rip	skeysubr.c	/^rip(buf)$/
rootterm	login.c	/^rootterm(tty)$/
rot	md4.c	/^#define rot(X,S)             (tmp=X,(tmp<<S) | (tm/
setenv	setenv.c	/^setenv(name, value, rewrite)$/
sevenbit	skeysubr.c	/^sevenbit(s)$/
showmotd	login.c	/^showmotd()$/
skeychallenge	skeylogin.c	/^skeychallenge(mp,name, ss)$/
skeydoall	c.c	/^skeydoall(skeyuser)$/
skeylookup	skeylogin.c	/^skeylookup(mp,name)$/
skeytalk	skeylogin.c	/^skeytalk(flag, input, answer)$/
skeyverify	skeylogin.c	/^skeyverify(mp,response)$/
skipspace	skeylogin.c	/^skipspace(cp)$/
standard	put.c	/^standard(word)$/
stypeof	login.c	/^stypeof(ttyid)$/
talkdecode	skeylogin.c	/^talkdecode(talk)$/
talkencode	skeylogin.c	/^talkencode(talk)$/
timedout	login.c	/^timedout()$/
timeout	skeyd.c	/^timeout(s)$/
tty_gid	login.c	/^tty_gid(default_gid)$/
unlock	skeyd.c	/^unlock()$/
unsetenv	setenv.c	/^unsetenv(name)$/
updatekeys	skeyd.c	/^updatekeys(newline)$/
usage	skey.c	/^usage(s)$/
write_data	skeylogin.c	/^int		write_data(s, buf, n)$/
wsrch	put.c	/^wsrch(w,low,high)$/
