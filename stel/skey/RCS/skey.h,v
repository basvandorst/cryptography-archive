head	1.17;
access;
symbols;
locks
	vince:1.17; strict;
comment	@ * @;


1.17
date	96.03.30.14.58.22;	author vince;	state Exp;
branches;
next	1.16;

1.16
date	96.03.28.10.13.17;	author vince;	state Exp;
branches;
next	1.15;

1.15
date	95.11.27.15.52.56;	author vince;	state Exp;
branches;
next	1.14;

1.14
date	95.11.27.14.18.32;	author vince;	state Exp;
branches;
next	1.13;

1.13
date	95.11.27.13.43.34;	author vince;	state Exp;
branches;
next	1.12;

1.12
date	95.07.14.16.06.28;	author vince;	state Exp;
branches;
next	1.11;

1.11
date	95.04.18.12.08.40;	author vince;	state Exp;
branches;
next	1.10;

1.10
date	95.04.14.16.51.41;	author vince;	state Exp;
branches;
next	1.9;

1.9
date	95.01.24.15.23.58;	author vince;	state Exp;
branches;
next	1.8;

1.8
date	95.01.24.12.50.43;	author vince;	state Exp;
branches;
next	1.7;

1.7
date	94.12.10.12.59.47;	author vince;	state Exp;
branches;
next	1.6;

1.6
date	94.12.10.10.43.44;	author vince;	state Exp;
branches;
next	1.5;

1.5
date	94.12.10.08.44.21;	author vince;	state Exp;
branches;
next	1.4;

1.4
date	94.12.09.17.54.20;	author vince;	state Exp;
branches;
next	1.3;

1.3
date	94.12.09.16.33.17;	author vince;	state Exp;
branches;
next	1.2;

1.2
date	94.12.09.14.25.05;	author vince;	state Exp;
branches;
next	1.1;

1.1
date	94.12.08.18.00.45;	author vince;	state Exp;
branches;
next	;


desc
@k.
@


1.17
log
@automatic
@
text
@#if	defined(__TURBOC__) || defined(__STDC__) || defined(LATTICE)
#define	ANSIPROTO	1
#endif

#ifndef	__ARGS
#ifdef	ANSIPROTO
#define	__ARGS(x)	x
#else
#define	__ARGS(x)	()
#endif
#endif

#define	KEYFILE		"/etc/skeykeys"
#ifdef SKEYD
#define PTMPKEYFILE	"/etc/skeyptmp"
#endif

/* Server-side data structure for reading keys file during login */
struct skey {
	FILE *keyfile;
	char buf[256];
	char *logname;
	int n;
	char *seed;
	char *val;
	long	recstart; /*needed so reread of buffer is efficient*/


};

/* Client-side structure for scanning data stream for challenge */
struct mc {
	char buf[256];
	int skip;
	int cnt;
};

#ifdef SKEYD
#define SKEYDCONF "/etc/skeydconf"

#define GIVEMEINFO	0x01	/* orders to skey daemon */
#define UPDATEKEYS	0x02	/* critical */
#define SKEYDOK		0x04	/* ok */
#define SKEYDFAILED	0x08	/* something is wrong */
#ifdef SKEYINITINSECURE
#define FORCEKEYUPDATE	0x0f	/* _force_ updates */
#endif

#define BUFLEN		256
#define SEPARATOR	" \t\r\n"
#define SKEYTALKTIMEOUT	60
#define SKEYDTIMEOUT	30

struct skeymessage {
	unsigned char	iv[8];
	int		flag;
	char		buf[256];
	unsigned char	checksum[16];
	/* char		padding[8]; /* unused */
};
#endif

void f __ARGS((char *x));
int keycrunch __ARGS((char *result,char *seed,char *passwd));
char *btoe __ARGS((char *engout,char *c));
char *put8 __ARGS((char *out,char *s));
int etob __ARGS((char *out,char *e));
void rip __ARGS((char *buf));
int skeychallenge __ARGS((struct skey *mp,char *name,char *promt));
#ifdef SKEYD
int skeylookup __ARGS((struct skey *mp,char *name, int staylocal));
#else
int skeylookup __ARGS((struct skey *mp,char *name));
#endif
int skeyverify __ARGS((struct skey *mp,char *response));

#ifdef SOLARIS24
#define bzero(x, y)	memset(x, 0, y)
#endif
@


1.16
log
@automatic
@
text
@d76 4
@


1.15
log
@automatic
@
text
@a38 1
/*
a39 2
*/
#define SKEYDCONF "/res/usr/vince/src/skey/skeydconf"
@


1.14
log
@automatic
@
text
@d54 1
a54 1
#define SKEYTALKTIMEOUT	10
@


1.13
log
@automatic
@
text
@d62 1
a62 1
	char		padding[8]; /* unused */
@


1.12
log
@automatic
@
text
@d39 1
d41 2
@


1.11
log
@automatic
@
text
@d39 2
@


1.10
log
@automatic
@
text
@d68 3
d72 1
@


1.9
log
@automatic
@
text
@d43 3
a45 1
#define FORCEKEYUPDATE	0x0f	/* *force* updates -- fix */
@


1.8
log
@automatic
@
text
@d47 2
@


1.7
log
@automatic
@
text
@d43 1
@


1.6
log
@automatic
@
text
@d45 1
@


1.5
log
@automatic
@
text
@d47 1
a47 1
	char		iv[8];
@


1.4
log
@automatic
@
text
@d40 3
a42 2
#define UPDATEKEYS	0x02
#define SKEYDREPLY	0x04
d44 2
a45 2
#define SKEYDOK		"okay"	/* responses from skey daemon */
#define SKEYDFAILED	"failed"
d47 2
a48 2
	char		random[8];
	int		querytype;
a63 5
char *skeytalk();




@


1.3
log
@automatic
@
text
@d46 5
a50 5
	char	random[8];
	int	querytype;
	char	buf[256];
	char	checksum[16];
	char	padding[8]; /* unused */
@


1.2
log
@automatic
@
text
@a38 6
struct skeydconf {
	char	skeypwd[8 + 1]; /* DES key */
	char	skeyserver[64];
	int	skeyport;
};

d41 1
d46 1
d50 1
@


1.1
log
@auto
@
text
@d13 5
d45 1
a45 1
#define GIVEMEINFO	0x01
d47 3
@
