













                            Analysis of the DES
         and Its Implications for the Design of an Extended DES[1]

                         Technical Report CS88/32

                                    by

                              Lawrence Brown,

                      Department of Computer Science,
                         University College, UNSW,
                     Australian Defence Force Academy,
                            Canberra ACT 2600.
                                Australia.


                                 9/6/1993





                                 Abstract


                 The  Data  Encryption   standard   (DES)   has
            achieved wide utilization, especially in the finan-
            cial industry. Whilst DES is a standard, the design
            criteria  used in its development have been classi-
            fied by the US government.  This paper reviews what
            is known about the design criteria for the S-boxes,
            P-boxes, and key scheduling in the current DES.  It
            then  indicates  how this information could be used
            to design an extended scheme with a  double  length
            key.   There are two main objectives in doing this.
            One is because of increasing doubts about the abil-
            ity  of DES to withstand an attack based on exhaus-
            tive   key-space   searches,   using    specialized
    ____________________

       [1] this technical report is expanded version of, and supersedes
    an  earlier report, TR CS87/8 which also appears in the Proceedings
    of IFIP Sec'88 [Bro89].  It reflects the material presented at that
    conference.









    TR CS88/32      DES Analysis and Extension   Lawrence Brown


            hardware.  The other is to  develop  an  encryption
            scheme  for  which the design rules used are known,
            and hence open to analysis and criticism.























































                                   - 1 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    1.  Introduction

         With  the  advent  of  computers,  data   encryption   schemes
    underwent a revolutionary change.  The use of computers enabled the
    cracking of hitherto secure schemes, but also enabled the implemen-
    tation  of  schemes  which until then were too complex for use by a
    manual cipherclerk. Based on the work of  Shannon  [Sha49],  a  new
    family of cryptosystems, known as Substitution-Permutation networks
    were developed.  These led to the development of a system known  as
    Lucifer  at the IBM Research Laboratories [Fei73], and subsequently
    to the  Data  Encryption  Standard  (DES)  [NBS77].  It  has  since
    achieved  wide  utilization,  particularly in the banking and elec-
    tronic funds transfer areas, where it is now an Australian standard
    [ASA85].

         However, there was a considerable amount of controversy at the
    time of its introduction, primarily with the choice of a 56-bit key
    [DiH77], [Hel79].  This was on the grounds that such a  key  length
    was  small  enough  to  be  exhaustively searched on machines which
    could be constructed in the foreseeable future.  With the march  of
    computer  technology,  this  risk appears to be rising. However, on
    all other accounts DES appears to be an excellent cryptosystem.  No
    short-cuts have been found to aid in the cryptanalysis of DES other
    than by exhaustive key-space search. With the  current  significant
    use  of DES (especially in banking), there is interest in designing
    and building a DES-type cryptosystem with an extended  key  length,
    for several reasons. These include:

    o+    Doubts about the ability of DES to withstand an  attack  based
         on  exhaustive key-space searches on specialized hardware (cf.
         the decision of the US NBS to withdraw  certification  of  DES
         for  all  but  banking applications).  This may be overcome by
         increasing the key length.

    o+    The difficulty in obtaining DES systems outside the US, due to
         export restrictions.

    o+    The desire to develop a scheme for which all the  design  cri-
         teria used are known, and hence open to criticism.

    This paper will discuss the design criteria used in the  DES,  both
    those  reported  in  the literature, and those noted by the author,
    and will illustrate  how  they  will  be  applied  in  building  an
    extended scheme.

    2.  Description of the DES

    2.1.  Fundamental Concepts

         There are two basic cryptographic primitives: substitution and
    transposition  (or  permutation).  In a substitution function, each
    character is replaced by some other character  (see  Fig  1).   The
    particular substitution used is selected by some key.   If  charac-
    ters  are represented by a small number of bits, then such a scheme
    may be defeated by enumerating all possible cases to find the  sub-
    stitution  used.  If made sufficiently large and a suitably complex


                                   - 2 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown














            Fig 1 - Sample S-box


    function is used, such a scheme is in practice  unbreakable,  since
    it  would  require  the enumeration of all n! cases (where n is the
    number of possible characters).  Unfortunately it is  also  unwork-
    able,  since  the  number of permutations, and hence keys, would be
    equally large.

         In a transposition function, traditionally, a set  of  charac-
    ters  were  permuted  (rearranged) into a new order, again with the
    particular rearrangement selected by some key.  In modern implemen-
    tations, this becomes a permutation of bits or a wire-crossing (see
    Fig 2).  Since the complexity of such an operation is  only  linear
    in the number of bits used, it may be easily broken by testing each
    bit in turn to find its new location.  It also implies that  it  is
    easy  to  build such a function for large numbers of bits.  Because
    of this, the concept of product ciphers arose, whereby a series  of
    substitution  and  transposition  functions  are combined to form a
    function which is much more secure  than  any  of  its  components.
    Prior  to  the  introduction of rotor machines, only simple product
    ciphers were possible.  The development of rotor machines, and sub-
    sequently computers, changed this significantly.
















            Fig 2 - Sample P-box






                                   - 3 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown





















            Fig 3 - Sample S-P Network, with Avalanche Characteristic


         Shannon [Sha49], in a key paper, described a particular  class
    of  product  ciphers which used a number of small (and hence imple-
    mentable) substitution boxes, termed S-boxes,  connected  by  large
    permutation  boxes,  termed  P-boxes  (see Fig 3).  He termed these
    mixing transformations, whereby the S-boxes provided  confusion  of
    the  input,  and the P-boxes provide diffusion of the S-box outputs
    across the inputs to the next stage.  Such schemes are  now  termed
    Substitution-Permutation  (S-P)  networks.   Two  key properties of
    such S-P networks are the avalanche property, identified by Feistel
    [Fei73];  and  the  completeness  property,  identified  by Kam and
    Davida [KaD79].  The avalanche property states  that  changing  one
    input  bit  should  result in approximately half of the output bits
    changing.  The completeness property states that  each  output  bit
    must  be  a  complex  function of every input bit. These properties
    appear  to  be  important  criteria  for  providing   cryptographic
    strength  in  the  resultant  system.   More formally, these may be
    defined (see [WeT86]) as follows. A function f is said  to  have  a
    good avalanche effect if:
                                                   m
        for eachm-b1it i, 0<_i<m, one can divide the 2  plaintext  vectors
        into  2     pairs  X and Xi suchm-t1hat each pair differs only in
        bit i; and when forming  the  2     exclusive-or  sums,  termed
        avalanche vectors

                                    Vi = f(X)O+f(Xi)

        find that about half of these sums are 1.

    A function f is complete if:

        for each bit j, 0<_j<m in the ciphertext output vector, there is
        at  least  one pair of plaintext vectors X and Xi, which differ
        only in bit i, for which f(X) and f(Xi) differ in bit j



                                   - 4 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


         For a practical scheme however, it is obviously necessary  for
    the  recipient  to  be  able to decipher the message.  This implies
    that one must be able to compute the  inverse  of  the  enciphering
    function.  For  the  simple  S-P  network  shown above, it would be
    necessary to provide a separate decryption stage incorporating  the
    inverses  of  the  substitutions  and  permutations  used.  This is
    expensive in terms of both hardware and software.  It is preferable
    to be able to use the same hardware for both encryption and decryp-
    tion. This may be done by an elegant scheme  which  partitions  the
    input  and  output  blocks  into two halves, L(i-1) and R(i-1), and
    uses only R(i-1) at each round i (see Fig 4).   This  half  R(i-1),
    along  with a key K(i), is used as input to the encryption function
    g (which incorporates one stage of the S-P network), and R(i-1)  is
    also  copied  to  L(i)  for  the  next round.  The output from g is
    exclusive or'd (XOR'd) with L(i-1) to form R(i) for the next round.
    Thus  when  decrypting, L(i) is copied back into R(i-1) where it is
    used as input to g in order to recover L(i-1).  Thus it can be used
    to recover the other half of the input upon decryption.

    2.2.  Description of DES

         The basic DES enciphering chain is shown in Fig 5.  In  brief,
    the  input  block is permuted by an initial permutation IP, is then
    subjected to a complex key-dependent computation,  and  is  finally
    permuted  by IP-1, the inverse of the initial permutation. On deci-
    phering, the same process is used, except  that  the  complex  com-
    ponent  is  run  backwards,  using  keys  in reverse order, via the
    method shown above.  In more detail, the input block X of  64  bits
    is  first  permuted  by  the  initial  permutation[2]  IP, and then
    divided into two halves L(0) and R(0).  The  complex  key-dependent
    function  consists  of  sixteen  rounds in which the left component
    L(i-1) is exclusive-or'd (XOR'd) with the output  of  a  non-linear
    function  g whose input is both the right component R(i-1) and part
    of the key K(i). The halves are then interchanged to form the input
    for the next round (with the exception of the final round). Finally
    the output is permuted by IP-1 (the inverse of the  input  permuta-
    tion IP) to yield the output ciphertext Y.










            Fig 4 - Invertible DES transform

    ____________________

       [2] for details of the actual permutation used in  IP  (and  all
    the  other  functions in the DES) see [ASA85], or any of the modern
    textbooks on cryptography (eg [SeP89], [Den82]).




                                   - 5 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown





































            Fig 5 - DES Enciphering


         The cryptographic security of DES rests, in the main,  on  the
    complex function g. It is shown in more detail in Fig 6.  Its  pur-
    pose  is  to ensure that the final DES output vector Y (see Fig 5.)
    is a complex nonlinear function of the input, such that there is no
    easy  way  of  deriving the input knowing only the output, short of
    enumerating all possible keys.  In detail, in round i, 1<_i<_16,  the
    right  component of the message input R(i-1) is first expanded from
    32 to 48 bits via an expansion function E(R(i-1)).  These are  then
    XOR'd  with  a 48-bit component extracted from the key K(i) to form
    vector A.  This vector is partitioned into eight 6-bit blocks which
    are used as input to eight substitution boxes (S-boxes). Each S-box
    produces a 4-bit output, all of which are concatenated to form  the
    vector  B.   This  vector  is permuted by P and then XOR'd with the
    left component L(i-1) of the message. In more  detail,  each  S-box
    may  be  regarded  as being composed of four substitution functions
    (row functions or rows).  The two (outer or selector) bits  of  the
    6-bit input selects one of these four functions, which then operate
    on the four (inner or substitution) bits to give  a  4-bit  output.


                                   - 6 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown























            Fig 6 - DES Function g


    This output is then permuted by P. Together these form one stage of
    an  S-P  network.  The  repetition  of this procedure sixteen times
    forms the full S-P network.

         The other critical component in the DES algorithm is  the  key
    scheduling  stage. It is responsible for forming the sixteen 48-bit
    sub-keys used in the rounds of  the  encryption  procedure.  It  is
    shown in Fig 7.  This function is important since if the  same  key
    is  used  on  successive  rounds, it can weaken the resulting algo-
    rithm. This trap is mostly avoided with the specified key  schedul-
    ing  algorithm,  except for a small number of keys known as weak or
    semi-weak  keys  (see  [GrT78],  [MeM82],  [MoS86],  [MoS86],   and
    [ASA85]).   In detail, the 64-bit key is permuted by PC1. This per-
    mutation performs two functions, first it strips the  eight  parity
    bits  out,  and then distributes the remaining 56 bits over two 28-
    bit halves C(0) and D(0).  Subsequently  these  form  two  distinct
    paths.  At  each round, each 28-bit register is rotated left either
    one or two places according to the following schedule:

    ____________________________________________________
   |_ _ _ _ _ _ _ _ _ _ _T_a_b_l_e_ _1_ _-_ _K_e_y_ _S_c_h_e_d_u_l_e_ _f_o_r_ _D_E_S_ _ _ _ _ _ _ _ _ _ _ |_
   | Round|  1 2 3 4 5 6  7  8  9  10 11 12 13 14 15 16|
   |      |                                            |
   |_S_h_i_f_t |__1__1__2__2__2__2___2___2___1___2___2___2___2___2___2___1  |
   | Total|  1 2 4 6 8 10 12 14 15 17 19 21 23 25 27 28|
   |      |                                            |

    After the shift, the resultant 28-bit vectors are permuted  by  PC2
    (which  in fact consists of two 28-bit permutations, not one 56-bit
    permutation), and are concatenated together to form the sub-key for
    that  round.  Note  that  the  total  number of shifts is 28; hence



                                   - 7 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown























            Fig 7 - DES Key Scheduling


    C(16) = C(0), and D(16) = D(0). When decrypting, it is necessary to
    generate the keys in reverse order. Because the final vector is the
    same as the initial vector, this can be  done  by  rotating  right,
    reading  the  table in reverse order (and with no shift before gen-
    erating the first key). Thus, with minor changes, the same hardware
    is used for both encryption and decryption.

    3.  Known DES Design Criteria

         All the functions used in the DES  are  specified  in  tabular
    form. No description is provided on why they are chosen. In fact it
    is stated that the design  criteria  are  classified.  Nonetheless,
    some  of the criteria have been released, and others may be deduced
    by examining the tables as given. The search for  the  design  cri-
    teria  is  motivated  by  two  reasons,  first  to aid in the cryp-
    tanalysis of the DES, and second in designing new and extended  DES
    style  schemes. The S-boxes and P-boxes, being the major components
    of the function g, will be examined independently.

    3.1.  S-box Design Criteria

         The S-boxes in DES are the prime source of complexity  in  the
    algorithm,  and  are  largely  responsible  for the security of the
    scheme.  Consequently, considerable time has been spent on  analys-
    ing them, and hence more is known about them than the P-boxes.  The
    actual criteria used are classified secret. It has  been  stated[3]
    ____________________

       [3] by Alan G. Konheim at a Seminar series  on  Cryptography  in
    Amsterdam, 1986 [Kon86]




                                   - 8 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    that there were 12 (possibly 13) criteria used, which  resulted  in
    about  1000  suitable  S-boxes,  of which the implementors chose 8.
    Some of the criteria used were reported to an NBS workshop on cryp-
    tography [BGK77], and are:

    o+ 1  Each row function in an S-box is a permutation of the integers
         0 to 15

    o+ 2  No S-box is a linear or affine function of the input.

    o+ 3  Changing 1 input bit to an S-box results in changing at  least
         2 output bits

    o+ 4  S(x) and S(xO+001100 ) must differ in at least  2  bits  (where
         S(x) is the output 2of an S-box given input vector x).

    The following rules were labelled (see [BGK77]) as  resulting  from
    design criteria:

    o+ 5  S(x) =/ S(xO+11ef00 ) for any choice of e or f.
                          2
    o+ 6  The S-boxes were chosen to minimize the difference between the
         number  of  1's  and  0's  in any S-box output when any single
         input bit is held constant.

         These criteria and rules were  analysed  by  Brickell  et  al.
    [BMP87].   Criterion  1 states, in effect, that each row of each S-
    box is a 1-1 function.  If this were  not  true,  then  information
    would  be lost, and recovery of the input would be impossible. Cri-
    terion 2 ensures that the DES algorithm as a whole is not linear or
    affine.  If  it were, it would substantially reduce the security of
    the scheme, and enable reasonably easy recovery of a key with a set
    of  plaintext/ciphertext pairs. The next two criteria 3 and 4, seem
    to incorporate the concept of the  avalanche  effect,  in  that  it
    ensures  that  small  changes to one or two bits of input result in
    large changes in the output. Rule 5, reduces the  probability  that
    two  different  inputs  would  be  mapped onto the same output (nb:
    function g is neither 1-1 nor onto, it must only generate the  same
    output  from the same input and key); and that the image space (ie:
    the range of possible values generated by g) is as large as  possi-
    ble.  Criteria 1, 3, and 4 seem to imply rule 6 (which accords with
    the original statement that it is a consequence of the design  cri-
    teria), and is related to the S-boxes being permutation functions.

    Another consequence of design  criteria  was  noted  by  Meyer  and
    Matyas in their book [MeM82], namely that:

    o+ 7  the S-boxes chosen required significantly  more  logical  min-
         terms[4] to implement than a random choice would require.
    ____________________

       [4] a minterm is a logical AND (boolean product) of  input  bits
    (and  their negations), which form a necessary (but not sufficient)
    condition for a particular output bit to be asserted. An output bit
    may  have its value completely described by the logical OR (boolean
    sum) of all its minterms.  The number of minterms in  such  an  ex-


                                   - 9 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


         A random choice of S-box would lead to a distribution  with  a
    mean around 32.  However Meyer and Matyas stated that as they added
    more design rules, the average number of minterms rose from  around
    46  in the early stages, to around 56 in the final design (with the
    distribution mostly ranging from 52 to 59).  The final choice of  8
    boxes was taken from the low end of this range (52 and 53) in order
    to make hardware implementation easier. This  rule  would  indicate
    that the S-boxes are considerably more complex than a random choice
    would provide. It also implies that cryptanalysis of DES via formal
    coding  techniques  is  extremely  difficult, as was illustrated by
    Schaumuller-Bichl [Sch82].

    3.2.  P-box Design Criteria

         There are a number of permutation networks in the DES  design,
    IP,  IP-1, E, P, PC1, and PC2. They appear to be performing various
    functions. No design criteria for them have been released.  However
    by  examination  of  the  various networks, certain features can be
    deduced. In general  these  all  appear  to  be  motivated  by  the
    avalanche  and  completeness  criteria,  in  that  there  is a wide
    dispersion of outputs across the inputs to the next stage.  We will
    examine these networks in turn.

    3.2.1.  IP and IP-1

         These two  permutations  form  the  initial  and  final  steps
    respectively  in  the enciphering chain for DES. It has been argued
    [DDF83] that these permutations have no cryptographic significance,
    since  exhaustive  plaintext  searches can be conducted on messages
    after these transformations have been applied. This argument  prob-
    ably  does  not hold when DES is used in one of its chaining modes.
    Other reasons put forward for their  inclusion  are  that  hardware
    implementations  would benefit, and that it might help thwart other
    forms of attack.   Further  evidence  for  this  may  be  found  in
    Schaumuller-Bichl  [Sch82]  who  show's  that the complexity of DES
    depends mainly on the S-boxes, key scheduling and number of rounds,
    rather  than  the  permutations.   It  was  also  noted  that IP is
    extremely regular.  As is shown in [HGD84], if the input  block  is
    broken into 8-bit bytes, then it may be implemented as eight itera-
    tions of an 8-bit permutation {2,4,6,8,1,3,5,7}  into  eight  shift
    registers:  a  much  more compact hardware realization, than a true
    64-bit permutation would imply. Its functionality seems  to  be  to
    distribute  bits  from  each input byte over all eight bytes in the
    input block.  Also it sends all even numbered bits to the left hand
    vector, and odd numbered bits to the right hand vector.




    ____________________

    pression  (after simplification) isna measure of its complexity. In
    the worst case, for n input bits, 2   minterms  may  be  needed  to
    describe each output bit.




                                  - 10 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    3.2.2.  PC1

         This transformation performs a very similar  function  to  IP,
    and  additionally  strips  off the parity bits to reduce the 64-bit
    key value entered down to the 56-bit  key  actually  used.   It  is
    nearly  as  regular  as  IP, except for an asymmetry around the two
    28-bit halves. As with IP, it may be implemented with eight  itera-
    tions of a 7-bit permutation {0,1,2,3,4,5,6,7} (the parity bit 8 is
    discarded).  However now the permuted value is read out by shifting
    two  28-bit halves toward the centre, rather than to one end, as in
    IP (see [HGD84]).

    3.2.3.  P and E

         It has been noted by Davies [Dav82] and Davio et  al  [DDF83],
    that  P and E need to be analysed together as the functional compo-
    sition P.E.  In fact S.P.E should be analysed thus, being one round
    in an S-P network, since

                  R(i) = L(i-1) O+ P(S(E(R(i-1)) O+ K(i))).


         The expansion function E is very regular. If the 32-bit  input
    block  is  broken  into  eight  4-bit blocks, then the 6-bit output
    block is formed by concatenating the adjacent bit from  the  neigh-
    bouring  blocks.  If  the  6  input  bits  to an S-box are labelled
    abcdef, then

    o+    bits ab and ef are replicated in the neighbouring  blocks  and
         include  the  S-box selector bits for both the current (bits a
         and f), previous (bit b), and next (bit e) S-boxes,

    o+    bits cd are substituted in the current S-box only.

    Thus E serves to provide some diffusion by spreading the input bits
    at each round into adjacent S-boxes.

         Now consider the composition P.E. The input of  P  is  divided
    into 4-bit outputs from the eight S-boxes, and the output from E is
    divided into 6-bit inputs to the eight S-boxes at the  next  stage.
    Provided  the  S-boxes  fulfil their design requirements, it may be
    assumed that all S-box outputs are equivalent, and that the  inputs
    may  be  considered in the three pairs indicated above.  Instead of
    expressing this permutation in terms of bit positions,  it  may  be
    written  in terms of which S-box output is connected by P.E to each
    input bit at the next stage (see Table 2).












                                  - 11 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


               _____________________________________________
              |_ _ _ _ _ _ _ _ _ _T_a_b_l_e_ _2_ _-_ _P_._E_ _P_e_r_m_u_t_a_t_i_o_n_ _ _ _ _ _ _ _ _ _ |_
              | S-box|       Inputs from     |  missing box|
              |      |  a   b   c   d   e   f|             |
              |      |                       |             |
              |   1  |  7   4   2   5   6   8|       3     |
              |   2  |  6   8   3   7   5   1|       4     |
              |   3  |  5   1   4   6   7   2|       8     |
              |   4  |  7   2   5   8   3   1|       6     |
              |   5  |  3   1   2   6   4   8|       7     |
              |   6  |  4   8   7   1   3   5|       2     |
              |   7  |  3   5   4   8   2   6|       1     |
              ||___8   |__2____6____3____1____7____4 |_______5      ||

    From this form, the author notes that:

    o+ 1  each S-box input bit comes from the output of a  different  S-
         box

    o+ 2  no input bit to a given S-box comes from  the  output  of  the
         same S-box

    o+ 3  an output from S(i-1) goes to one of  the  ef  input  bits  of
         S(i), and hence via E an output from S(i-2) goes to one of the
         ab input bits.

    o+ 4  an output from S(i+1) goes to one of  the  cd  input  bits  of
         S(i).

    o+ 5  for each S-box output, two bits go to ab or ef input bits, the
         other  two  go  to  cd  input  bits.  This was noted in Davies
         [Dav82].

         These rules all appear consistent with the  implementation  of
    the  avalanche  and  completeness  effects.  They ensure that every
    output bit becomes a function of each input bit in as few rounds as
    possible.  Meyer  [Mey78] (also in [MeM82]) has shown that with the
    networks specified in DES, then after 5 rounds, every output bit is
    a  function  of  all  input  bits.   This  analysis  is repeated an
    extended in the next section.  This result would appear  to  be  an
    important consequence of the design criteria.

         Permutations satisfying these criteria were generated.   First
    rules  1  and  2 imply that each S-box takes inputs from 6 S-boxes.
    Hence one S-box apart from itself must have been missed. There  are
    264  ways possible to do this, which I termed exclusion sets.  Then
    rules 3, 4 and 5 were used to generate classes of possible permuta-
    tions[5]. A total of 178 such classes were found from 96 of the 264
    exclusion  sets (the others generated no valid permutations, due to
    the missing S-box being one of those required by  rules  3  or  4).
    ____________________

       [5] the mandatory wirings required by rules 3 and 4  were  arbi-
    trarily assigned to bits c and e/a respectively.




                                  - 12 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    Each of these classes could generate a number of possible  permuta-
    tions  by  swapping  the order of bits in each of the pairs ab, cd,
    and ef; or by rearranging the order of the four  output  bits  from
    each S-box.

         It is worth noting that both Davies [Dav82] and  Davio  et  al
    [DDF83]  have  commented  that the actual order of output bits from
    each S-box is irrelevant. This is because a  functionly  equivalent
    S.P.E combination can be formed by rearranging the order of bits in
    each S-box (by rearranging columns), and then altering  permutation
    P to compensate. As Hoornaert et al [HGD84] show, this is desirable
    in order to  design  an  efficient  hardware  implementation  which
    minimizes  the  number  of wire crossings (and hence area) in P. It
    certainly illustrates that any analysis of these  components  needs
    to be performed on them as a whole.

    3.2.4.  PC2

         The permutation PC2 is responsible for selecting 48 of the  56
    key  bits  available  on each round. The output of this permutation
    can be analysed in terms of the eight 6-bit blocks which become  S-
    box  inputs  after  being XOR'd with the expanded message block. As
    with the other components in the key scheduling stage,  it  can  be
    regarded  as two distinct 28 to 24-bit selections and permutations,
    with no interaction between the two halves.  Again, like the permu-
    tation  P,  PC2  needs to be analysed in conjunction with the other
    components of function f, and the key scheduling  function  KS.  We
    have

              R(i) = L(i-1) O+ P(S(E(R(i-1)) O+ PC2(KS(U, i))))


                                     where U = PC1(K)

    The author has noted that in each 6-bit output block  corresponding
    to  an  S-box input, if the bits are sorted into ascending order of
    their input bits, then:

    o+ 1  bits permuted to the same S-box input are  no  closer  than  3
         bits apart

    o+ 2  bits permuted to an S-box input must have a span  from  lowest
         to  highest  input bit number of at least 22 of the 28 bits in
         each key half (alternatively, the average spacing must  be  at
         least 3 2/3)

    o+ 3  bits permuted to the selector bits a, f on a given S-box  must
         not be adjacent in the sorted list of input bits

    o+ 4  bits not selected by PC2 must be at least 3 places apart

         Rule 1 implies that the same bit of the key will not  be  used
    as  input  to the same S-box on successive rounds (since in the key
    schedule, bits are shifted only 1 or 2 places). Rule 2 results from
    application  of  the  avalanche  and completeness effects to ensure
    that the output depends on  all  key  bits  in  as  few  rounds  as


                                  - 13 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    possible,  again  as  confirmed by Meyer [Mey78] (also in [MeM82]).
    Rule 3 ensures that the same bit is not used as a selector  bit  on
    successive  permutations  to an S-box. Rule 4 ensures that the same
    bit will not be missed on successive rounds (ie: that all keys bits
    are used as soon as possible).

    3.3.  Key Scheduling

         Aside from the S-boxes and P-boxes, the other component criti-
    cal  to  the  security  of DES is the key scheduling algorithm (see
    Schaumuller-Bichl  [Sch82]).   Several  authors  [Ber82],  [Dav82],
    [QDD86] have noted that DES in fact uses a 768-bit key (formed from
    a 48-bit key to each of 16 stages), which  is  generated  from  the
    56-bit key supplied.  If either the key scheduling is poor [GrT78],
    or a bad choice of key is made [Dav82], then the same subkey  might
    be repeated for more than one round, leading to insecurities in the
    scheme.  No  design  rules  have  been  published  for  the  scheme
    currently  in  use.   The  design of the key scheduling function is
    obviously related to the design of PC2  by  rules  1  and  4  given
    above.   The  author notes that the key scheduling function ensures
    that:

    o+ 1  each bit is used as input to each S-box

    o+ 2  no bit is used as input to the same S-box on successive rounds

    o+ 3  the total number of bits rotated is  56  (which  implies  that
         K(0)  =  K(16), enabling the decryption operation to use right
         shifts in reverse order).

         Suggestions for alternate forms of key  scheduling  have  been
    made in [Ber82] and [QDD86].

    4.  Ciphertext Dependency Analysis

         One technique to provide a measure of the ability of  a  given
    S-P  design  to  fulfil the completeness effect, is to analysis how
    rapidly the output bits become dependent on  every  input  and  key
    bit.  This  analysis  was first performed by Meyer [Mey78] (also in
    [MeM82]).  A basic assumption in this analysis is that each S-boxes
    ensures  that  every  output  bit was a complex function of all its
    input bits.

    4.1.  Ciphertext Dependence of Plaintext Bits

         To provide a measure of this dependency, a 64*64 array G    is
    formed.  Each  element G   (i,j) of which specifies a dependean,cby of
    output bit X(j) on inputa,bbit X(i), between rounds  a  and  b.   The
    number  of  marked  elements  in G    indicates the degree to which
    complete dependence was  achieved 0,bry  round  r.   Details  of  the
    derivation  of this matrix, and the means by which entries are pro-
    pagated, may  be  found  in  [MeM82].   The  author  repeated  this
    analysis  for the current DES, and extended it by analysing each of
    the 178 candidates for permutation P, as well as for a worst case P
    (see Table 3).



                                  - 14 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


                       ____________________________
                      |_T_a_b_l_e_ _3_ _-_ _W_o_r_s_t_ _C_a_s_e_ _D_E_S_ _P_ |_
                      | 1     1       1        1  |
                      | 2     2       2        2  |
                      | 3     3       3        3  |
                      | 4     4       4        4  |
                      | 5     5       5        5  |
                      | 6     6       6        6  |
                      | 7     7       7        7  |
                      | 8     8       8        8  |
                      |                           |
                      |                           |


         The results are summarized in Table 4, and lead to the follow-
    ing conclusions:

    o+    the current DES P  results  in  complete  ciphertext-plaintext
         dependence after 5 rounds.

    o+    all 178 candidate permutations P result in complete dependence
         after 5 rounds.

    o+    the worst case permutation P results  in  complete  dependence
         after  7 rounds. Here E alone is relied upon to provide diffu-
         sion.
                   __________________________________________
                  | Table 4 - Dependency of Ciphertext bits |
                  |         on Plaintext bits in DES        |
                  |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |_
                  |_R_o_u_n_d |___S_t_d__P  |__C_a_n_d_i_d_a_t_e__P  |_W_o_r_s_t__P  |
                  |   1  |   6.25  |     6.25     |   6.25  |
                  |   2  |   32.06 |  32.03-32.10 |  21.09  |
                  |   3  |   73.49 |  73.44-73.58 |  43.75  |
                  |   4  |   96.90 |  96.87-96.95 |  68.75  |
                  |   5  |  100.00 |    100.00    |  89.06  |
                  |   6  |  100.00 |    100.00    |  98.44  |
                  |   7  |  100.00 |    100.00    |  100.00 |
                  |   8  |  100.00 |    100.00    |  100.00 |
                  |      |         |              |         |
                  |      |         |              |         |


         The P-box used in the current DES has  a  propagation  profile
    that  falls fairly close to to the median of the 178 classes I have
    identified.  It thus appears to be a fairly representative  example
    of them.  In conjunction with the substantially inferior profile of
    the worst case P-box, this also provides a strong  indication  that
    the  design  rules identified are comprehensive, at least as far as
    this aspect of the P-box design is concerned.

    4.2.  Ciphertext Dependence on Key Bits

         This analysis is  substantially  more  complex,  since  it  is
    dependent  on  the choices of permutations P and PC2 as well as the



                                  - 15 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    KS the key schedule.  To date, this dependency  has  been  analysed
    for  each  of  the  P permutations used above, with the current key
    schedule, and with the current, worst case, and  a  sample  regular
    PC2.   To  quantify  this dependency, a 64*56 array F    is formed,
    each element of which specifies a dependency of outpuat,bbit X(j)  on
    key bit U(i).  The vector U is that formed after PC1 is applied, ie
    U = PC1(K).  The number of marked elements in G    will be examined
    to  provide a profile of the degree of dependen0c,erachieved by round
    r.  Details of the derivation of this  matrix,  and  the  means  by
    which  entries  are propagated, as before, may be found in [MeM82].
    The author repeated this analysis for the current DES, and extended
    it  as  indicated before. The results are summarized in Table 5 for
    the current PC2, Table 6 for a worst case PC2, and Table  7  for  a
    sample  PC2.  The  sample  PC2  was designed to satisfy the current
    rules known, and to use a regular wiring.  It is listed in Table 8.

         These results have led to the following conclusions:

    o+    there are two errors in Meyers analysis. Firstly  in  his  key
         schedule  implementation  he  appears  to have shifted, rather
         than rotated key bits.  This alters the "type" of  dependence,
         but not the number of dependent bits.  Secondly, he appears to
         have miscalculated the dependence percentage.  This same error
         was  made  in  his cipher-plaintext dependence analysis in his
         original paper, but was corrected in his book.  This  did  not
         occur  in  this  analysis,  and  I suspect the same systematic
         error was at fault.

    o+    the current DES PC2 results in complete ciphertext-key  depen-
         dence after 5 rounds for current candidate permutations P, and
         in 7 rounds for the worst case permutation P.

    o+    the worst case DES  PC2  results  in  complete  ciphertext-key
         dependence  after  7 rounds for current candidate permutations
         P, and in 9 rounds for the worst case permutation P.   Here  E
         along  with the key schedule are relied upon to provide diffu-
         sion.

    o+    the sample DES PC2 results in complete  ciphertext-key  depen-
         dence after 5 rounds for current candidate permutations P, and
         in 6 rounds for the worst case permutation  P.  Interestingly,
         the  profile  is  slightly worse for the current and candidate
         permutations P, but significantly better for the worst case.















                                  - 16 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


                   _________________________________________
                  | Table 5 - Dependency of Ciphertext bits|
                  |_ _ _o_n_ _K_e_y_ _b_i_t_s_ _i_n_ _D_E_S_ _w_i_t_h_ _C_u_r_r_e_n_t_ _P_C_2_ _ _ |_
                  | Round|  Std P  | Candidate P |  Worst P|
                  |      |         |             |         |
                  |   1  |   5.36  |     5.36    |   5.36  |
                  |   2  |  39.17  | 38.39-39.29 |   24.67 |
                  |   3  |  82.25  | 81.25-82.48 |   53.12 |
                  |   4  |  98.44  | 98.21-98.55 |   79.69 |
                  |   5  |  100.00 |    100.00   |   95.65 |
                  |   6  |  100.00 |    100.00   |   99.78 |
                  |   7  |  100.00 |    100.00   |  100.00 |
                  |   8  |  100.00 |    100.00   |  100.00 |
                  ||      |         |             |         ||



                  ____________________________________________
                 | Table 6 - Dependency of Ciphertext bits on|
                 |_ _ _ _K_e_y_ _b_i_t_s_ _i_n_ _D_E_S_ _w_i_t_h_ _W_o_r_s_t_ _C_a_s_e_ _P_C_2_ _ _ _ _ |_
                 | Round|   Std P  |  Candidate P |  Worst P |
                 |      |          |              |          |
                 |   1  |   5.36   |     5.36     |    5.36  |
                 |   2  |   42.19  |     42.19    |   21.65  |
                 |   3  |   81.47  |     81.47    |   43.97  |
                 |   4  |   91.29  |     91.29    |   67.41  |
                 |   5  |   96.21  |     96.21    |   86.61  |
                 |   6  |   99.55  |     99.55    |   95.31  |
                 |   7  |  100.00  |    100.00    |   97.99  |
                 |   8  |  100.00  |    100.00    |   99.55  |
                 ||      |          |              |          ||



                  ____________________________________________
                 | Table 7 - Dependency of Ciphertext bits on|
                 |_ _ _ _ _ _K_e_y_ _b_i_t_s_ _i_n_ _D_E_S_ _w_i_t_h_ _S_a_m_p_l_e_ _P_C_2_ _ _ _ _ _ _ |_
                 | Round|   Std P  |  Candidate P |  Worst P |
                 |      |          |              |          |
                 |   1  |   5.36   |     5.36     |    5.36  |
                 |   2  |   38.62  |  38.39-38.84 |   22.77  |
                 |   3  |   81.47  |  81.25-81.70 |   48.66  |
                 |   4  |   98.21  |     98.21    |   75.45  |
                 |   5  |  100.00  |    100.00    |   94.20  |
                 |   6  |  100.00  |    100.00    |   100.00 |
                 |   7  |  100.00  |    100.00    |   100.00 |
                 |   8  |  100.00  |    100.00    |   100.00 |
                 ||      |          |              |          ||










                                  - 17 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


                         _____________________________
                        |_ _T_a_b_l_e_ _8_ _-_ _S_a_m_p_l_e_ _D_E_S_ _P_C_2_ _ _ |_
                        | 1    5    10   15   20   25|
                        | 2    6    11   16   21   26|
                        | 3    7    12   17   22   27|
                        | 4    8    13   18   23   28|
                        | 29   33   38   43   48   53|
                        | 30   34   39   44   49   54|
                        | 31   35   40   45   50   55|
                        | 32   36   41   46   51   56|
                        |                            |
                        |                            |


    5.  An Extended DES

         Having analysed the existing DES, and determined  as  many  of
    the  design rules as possible, a proposed design of an extended DES
    style scheme may be outlined.  In doing  this  it  is  proposed  to
    extend  the  work of Morris-Yates [Mor86], who used a subset of the
    criteria detailed previously. It involves  widening  all  the  data
    paths  to twice the current width, and extending or redesigning all
    the S-boxes, P-boxes, and key scheduling.  The  initial  motivation
    for  doing this was to overcome the doubts about the ability of DES
    to withstand an attack based on exhaustive  key-space  searches  b5y5
    doubling  th1e11 key  length.  This raises the effort needed from 2
    trials to 2     trials[6],  an  impossibility  in  the  foreseeable
    future.  It will also result in a scheme for which all  the  design
    criteria  used are known, and hence open to criticism; and which is
    not bound by foreign government restrictions.

    5.1.  S-box Redesign

         Since sixteen S-boxes will be required in the extended scheme,
    an additional eight boxes will be required. One possibility is sim-
    ply to reuse the existing eight boxes, either by using them  twice,
    or  by  designing  an  additional  eight  only.  These options were
    rejected both for copyright reasons, and because  of  doubts  about
    the cryptological security of the current S-box 4 [BMP87], [Sha86].
    Hence it was decided that sixteen new S-boxes  will  be  generated.
    Ideally  all  possible  6*4  bit  functions  would be generated and
    evaluated against Both the known design rules, and additional  cri-
    teria based on non-linearity criteria suggested by Pieprzyk [PiF89]
    and Carroll[7].  A subset will then be selected  from  those  which
    satisfy these criteria.  Because of the time this would take, it is
    envisioned that a random selection  of  boxes  based  on  the  non-
    linearity  requirement  will  be  generated  and tested against the
    remaining criteria. This will be done  both  to  generate  suitable
    boxes  for the proposed design, and to extend work (see [BMP87]) on
    the analysis of the design rules, identifying both redundant  rules
    ____________________
       [6] there is a saving of hal_f res_u_l_t_i_n_g from the well known sym-
    metry in DES, namely that DES(X) = DES(X)
       [7] in personal communications.




                                  - 18 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    and possibly new rules.

    5.2.  P-box Redesign

         The use of double width data paths implies a complete redesign
    of  all  the permutations. IP, IP-1, and PC1 may be easily extended
    because of their regular design,  if  they  are  included  at  all.
    Morris-Yates  [Mor86] has argued that because of doubts about their
    cryptological usefulness, they need not be provided  at  all  (with
    the  exception  of the parity stripping component of PC1), saving a
    significant portion of silicon real-estate. If  they  are  provided
    then  the  efficient  implementation  suggested  by Hoornaert et al
    [HGD84] should be used.  Initially, I will not be using these func-
    tions in the extended scheme.

         The expansion function E may also be easily  extended  because
    of its regular design. This leaves the important permutations P and
    PC2.  Because these are central components of the S-P network,  and
    key  scheduling  respectively, they are critical to the security of
    the new scheme. As with the S-boxes, a sample will be randomly gen-
    erated  and tested against the known rules, in an effort to isolate
    any further design criteria, and to identify S.P combinations which
    are  functionally identical. It is here that this work differs most
    from Morris-Yates, who chose purely random permutations.  Initially
    these will be specified as follows:

    o+ P  will use the existing design rules, but will  have  a  regular
         wiring  array.  eg  one  proposal  has  inputs  for  S(i) from
         S(i-2), S(i+1), S(i+8), S(i+5) (see Table 9).  Such a  regular
         array  leads  to efficient implementation in both hardware and
         software.

                       _________________________________
                      |_T_a_b_l_e_ _9_ _-_ _S_a_m_p_l_e_ _E_x_t_e_n_d_e_d_ _D_E_S_ _P_ |_
                      | 15      2        9         6   |
                      | 16      3        10        7   |
                      | 1       4        11        8   |
                      | 2       5        12        9   |
                      | 3       6        13       10   |
                      | 4       7        14       11   |
                      | 5       8        15       12   |
                      | 6       9        16       13   |
                      | 7      10        1        14   |
                      | 8      11        2        15   |
                      | 9      12        3        16   |
                      | 10     13        4         1   |
                      | 11     14        5         2   |
                      | 12     15        6         3   |
                      | 13     16        7         4   |
                      | 14      1        8         5   |
                      |                                |
                      |                                |






                                  - 19 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    o+ PC2
         will use the existing rules modified to suit the larger shifts
         of 3 or 4 places needed in the Key Schedule. This implies that
         the constant 3 in rules R1 and R4 will become 5 in the initial
         design.  Again  as  in the case of P, a regular wiring will be
         used, though it is complicated by the need to select a  subset
         of  the  bits.  One example distributes a bit to each S-box in
         turn, skipping every 7th bit (see Table 10).

                      ____________________________________
                     |_T_a_b_l_e_ _1_0_ _-_ _S_a_m_p_l_e_ _E_x_t_e_n_d_e_d_ _D_E_S_ _P_C_2_ |_
                     | 1    10    20    29     38     48 |
                     | 2    12    21    30     40     49 |
                     | 3    13    22    31     41     50 |
                     | 5    14    23    33     42     51 |
                     | 6    15    24    34     43     52 |
                     | 7    16    26    35     44     54 |
                     | 8    17    27    36     45     55 |
                     | 9    19    28    37     47     56 |
                     | 57   66    76    85     94    104 |
                     | 58   68    77    86     96    105 |
                     | 59   69    78    87     97    106 |
                     | 61   70    79    89     98    107 |
                     | 62   71    80    90     99    108 |
                     | 63   72    82    91    100    110 |
                     | 64   73    83    92    101    111 |
                     | 65   75    84    93    103    112 |
                     |                                   |
                     |                                   |


    5.3.  Key Scheduling Extension

         In the extended algorithm, the same style of shift and  select
    key  scheduling will be used. A new shift schedule will be designed
    to satisfy the known  design  criteria,  which  will  involve  some
    interaction  with  the  design  of PC2, as indicated before.  Since
    sixteen rounds are planned in the extended  design  (provided  ana-
    lyses  of  the  dependence  of  output  bits on input and key prove
    satisfactory), this implies rotations greater than 2 bits in  order
    to  have  a  total  rotation  of  112  bits in sixteen rounds. This
    impacts on the minimum spacing requirement between bits selected in
    PC2. One such Key Schedule proposed is given in Table 11.
    ______________________________________________________
   |     Table 11 - Key Schedule for an Extended DES     |
   |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |_
   |_R_o_u_n_d |__1__2__3__4___5___6___7___8___9___1_0__1_1__1_2__1_3__1_4__1_5__1_6 |
   | Shift|  3 3 3 4  4  4  4  3  3  3  4  4  4  4  3  3 |
   |      |                                              |
   |_T_o_t_a_l ||__3__6__9__1_3__1_7__2_1__2_5__2_8__3_1__3_4__3_8__4_2__4_6__5_0__5_3__5_6 |








                                  - 20 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    5.4.  Dependency Analysis of An Extended DES

         To provide an indication of the suitability  of  the  extended
    rules, Meyer's dependency analysis was applied to the sample permu-
    tations developed, as well as to the worst case permutations P  and
    PC2 (given in Tables 15 and 16).  The results are given in Table 12
    for Ciphertext-Plaintext dependence, Table  13  for  Ciphertext-Key
    dependence  with  a worst case PC2, and in Table 14 for Ciphertext-
    Key dependence with the sample PC2.  These results show  that  with
    the  sample  permutations, the dependency profile is only one round
    worse than in the current case (consistent with a doubling  of  the
    data  lengths).  With the worst case permutations however, the pro-
    file worsens significantly.

    _____________________________________________
   | Table 12 - Dependency of Ciphertext bits on|
   |_ _P_l_a_i_n_t_e_x_t_ _b_i_t_s_ _i_n_ _E_x_t_e_n_d_e_d_ _(_1_2_8_-_b_i_t_)_ _D_E_S_ _ _ |_
   | Round|   Sample XDES P   |   Worst XDES P  |
   |      |                   |                 |
   |   1  |       3.125       |      3.125      |
   |   2  |       17.68       |      10.55      |
   |   3  |       50.98       |      21.88      |
   |   4  |       84.47       |      34.38      |
   |   5  |       98.44       |      46.88      |
   |   6  |       100.00      |      59.38      |
   |   7  |       100.00      |      71.88      |
   |   8  |       100.00      |      84.38      |
   |   9  |       100.00      |      94.53      |
   |  10  |       100.00      |      99.21      |
   |  11  |       100.00      |      100.00     |
   |  12  |       100.00      |      100.00     |
   ||      |                   |                 ||



    _____________________________________________
     Table 13 - Dependency of Ciphertext bits on
         Key bits in Extended (128-bit) DES
    _ _ _ _ _ _ _ _ _ _ _ _w_i_t_h_ _a_ _W_o_r_s_t_ _C_a_s_e_ _P_C_2_ _ _ _ _ _ _ _ _ _ _ _ _
     Round    Sample XDES P       Worst XDES P
    _____________________________________________
       1           2.68               2.68
       2          19.08              11.05
       3          57.37              22.94
       4          89.51              35.71
       5          98.44              49.33
       6          99.89              63.28
       7          100.00             76.12
       8          100.00             87.44
       9          100.00             95.76
      10          100.00             99.22
      11          100.00             99.89
      12          100.00             100.00





                                  - 21 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    _____________________________________________
   |      ||                   ||                 |
   |      |                   |                 |
   |______|____________________|__________________|_
   || Table|14 - Dependency of |Ciphertext bits on||
   ||     K|ey bits in Extended |(128-bit) DES     ||
   ||      |   with a Sample Re|gular PC2         ||
   ||_ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _||_
   ||_R_o_u_n_d_||____S_a_m_p_l_e__X_D_E_S__P____||____W_o_r_s_t__X_D_E_S__P___||_
   ||   1  ||        2.68       ||       2.68      ||
   ||   2  ||       20.54       ||      13.39      ||
   ||   3  ||       61.16       ||      31.36      ||
   ||   4  ||       92.86       ||      48.77      ||
   ||   5  ||       99.55       ||      62.95      ||
   ||   6  ||       100.00      ||      76.00      ||
   ||   7  ||       100.00      ||      87.61      ||
   ||   8  ||       100.00      ||      95.65      ||
   ||   9  ||       100.00      ||      99.22      ||
   ||  10  ||       100.00      ||      100.00     ||
   ||  11  ||       100.00      ||      100.00     ||
   ||  12  ||       100.00      ||      100.00     ||
   ||      ||                   ||                 ||
   ||______||____________________||__________________||_
   |      |                   |                 |
   |      |                   |                 |
   |______|____________________|____________      |
   || Table|15 - Worst Case Ext|ended DES P|      |
   ||_ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ |_      |
   || 1    |  1           1    |     1    |      |
   || 2    |  2           2    |     2    |      |
   || 3    |  3           3    |     3    |      |
   || 4    |  4           4    |     4    |      |
   || 5    |  5           5    |     5    |      |
   || 6    |  6           6    |     6    |      |
   || 7    |  7           7    |     7    |      |
   || 8    |  8           8    |     8    |      |
   | 9    |  9           9    |     9    |
   | 10   |  10         10    |     10   |
   | 11   |  11         11    |     11   |
   | 12      12         12          12   |
   | 13      13         13          13   |
   | 14      14         14          14   |
   | 15      15         15          15   |
   | 16      16         16          16   |
   |                                     |













                                  - 22 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    ________________________________________
   |_T_a_b_l_e_ _1_6_ _-_ _W_o_r_s_t_ _C_a_s_e_ _E_x_t_e_n_d_e_d_ _D_E_S_ _P_C_2_ |_
   | 1     2      3      4       5      6  |
   | 7     8      9      10     11      12 |
   | 13    14     15     16     17      18 |
   | 19    20     21     22     23      24 |
   | 25    26     27     28     29      30 |
   | 31    32     33     34     35      36 |
   | 37    38     39     40     41      42 |
   | 43    44     45     46     47      48 |
   | 57    58     59     60     61      62 |
   | 63    64     65     66     67      68 |
   | 69    70     71     72     73      74 |
   | 75    76     77     78     79      80 |
   | 81    82     83     84     85      86 |
   | 87    88     89     90     91      92 |
   | 93    94     95     96     97      98 |
   | 99   100    101    102     103    104 |
   |                                       |
   |                                       |


    6.  Conclusion

         In this paper, all the known design criteria for the  S-boxes,
    P-boxes,  and  key  scheduling in the Data Encryption Standard have
    been identified.  These all appear to be related to  the  avalanche
    and completeness effects.  The paper concludes with a discussion on
    how these criteria will be used to design an extended DES, as  well
    as aiding in identifying further design criteria.

    Acknowledgements

         To my supervisors: Dr. Jennifer  Seberry,  and  Dr.  Ah  Chung
    Tsoi;  the  members of the Crypto group: Leisa Condie, Thomas Hard-
    jono, Arthur Lagos, Mike Newberry, and Dr. Josef Pieprzyk; and  to:
    Dr.  George  Gerrity, Dr. Andrez Goscinski, Dr. Charles Newton, and
    Dr. Michael Wagner, for their comments on, suggestions  about,  and
    critiques of this paper. Thankyou.

    References


    [ASA85]   ASA,  "Electronics  Funds  Transfer  -  Requirements  for
              Interfaces,   Part   5,   Data  Encryption  Algorithm,"
              AS2805.5-1985,  Standards   Association   of   Australia,
              Sydney, Australia, 1985.

    [Ber82]   T. A. Berson, "Long Key Variants of DES,"  in Advances in
              Cryptology - |Proc.| of Crypto 82, D. Chaum, R. L. Rivest
              and A. T. Sherman (editors), pp. 311-313,  Plenum  Press,
              New York, |August.| 23-25, 1982.

    [BGK77]   D. K. Branstead, J. Gait and S. Katzke,  "Report  of  the
              Workshop   on   Cryptography   in   Support  of  Computer



                                  - 23 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


              Security,"  NBSIR 77-1291, National Bureau of  Standards,
              |September.| 1977.

    [BMP87]   E. F. Brickell, J. H. Moore and M. R.  Purtill,  Advances
              in  Cryptology  -  |Proc.| of CRYPTO'86, Lecture Notes in
              Computer Science, no. 263, pp.  3-8,  |Springer  Verlag|,
              Berlin, 1987.

    [Bro89]   L. Brown, "A Proposed Design for an Extended  DES,"    in
              Computer Security in the Age of Information, W. J. Caelli
              (editor), North-Holland, Amsterdam, 1989.

    [Dav82]   D. W.  Davies,  "Some  Regular  Properties  of  the  Data
              Encryption  Standard,"    in  Advances  in  Cryptology  -
              |Proc.| of Crypto 82, D. Chaum, R. L. Rivest  and  A.  T.
              Sherman  (editors),  pp.  89-96,  Plenum Press, New York,
              |August.| 23-25, 1982.

    [DDF83]   M. Davio, Y.  Desmedt,  M.  Fosseprez,  R.  Govaerts,  J.
              Hulsbosch,  P.  Neutjens,  P.  Piret,  J.  Quisquater, J.
              Vanderwalle and P. Wouters,  "Analytical  Characteristics
              of  the  DES,"    in  Advances in Cryptology - |Proc.| of
              Crypto 83, D. Chaum, R.  L.  Rivest  and  A.  T.  Sherman
              (editors), pp. 171-202, Plenum Press, New York, |August.|
              22-24, 1983.

    [Den82]   D. E. Denning, Cryptography and Data  Security,  Addison-
              Wesley, 1982.

    [DiH77]   W. Diffie and M. E. Hellman, "Exhaustive Cryptanalysis of
              the  NBS  Data  Encryption Standard,"  Computer, vol. 10,
              no. 6, pp. 74-84, |June| 1977.

    [Fei73]   H.  Feistel,  "Cryptography  and  Computer   Privacy,"
              Scientific  American,  vol.  228, no. 5, pp. 15-23, |May|
              1973.

    [GrT78]   E. K. Grossman and B. Tuckerman, "Analysis of a  Weakened
              Feistel-Like  Cipher,"    in |Proc.| 1978 IEEE |Conf.| On
              Communications, pp. 46.3.1-5, IEEE, 1978.

    [Hel79]   M. E. Hellman, "DES will be totally insecure  within  ten
              years,"    SPECTRUM,  vol.  16,  no. 7, pp. 31-41, |July|
              1979.  With  rebuttals  from  George  I.  Davida,  Walter
              Tuchman, and Dennis Branstad.

    [HGD84]   F. Hoornaert,  J.  Goubert  and  Y.  Desmedt,  "Efficient
              Hardware  Implementation  of  the  DES,"   in Advances in
              Cryptology:  |Proc.|  of  Crypto  84,  Lecture  Notes  in
              Computer  Science,  no.  196,  G. R. Blakley and D. Chaum
              (editors),  pp.  147-173,  |Springer   Verlag|,   Berlin,
              |August.| 1984.

    [KaD79]   J. B.  Kam  and  G.  I.  Davida,  "Structured  Design  of
              Substitution-Permutation  Encryption  Networks,"    |IEEE
              Trans. on Computers|, vol. C-28,  no.  10,  pp.  747-753,


                                  - 24 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


              |October.| 1979.

    [Kon86]   A. G.  Konheim,  Cryptography,  Seminars  of  Excellence,
              ORSYS  Institute,  Amsterdam,  |June|  9-11, 1986.  notes
              from a seminar series.

    [Mey78]   C. H.  Meyer,  "Ciphertext/plaintext  and  ciphertext/key
              dependence  vs  number  of rounds for the data encryption
              standard,"  in AFIPS |Conf.| |Proc.| 47,  pp.  1119-1126,
              AFIPS Press, Montvale NJ, USA, |June| 1978.

    [MeM82]   C. H.  Meyer  and  S.  M.  Matyas,  Cryptography:  A  New
              Dimension in Data Security, |John Wiley & Sons, New York,
              1982.

    [MoS86]   J. H. Moore and G. J. Simmons, "Cycle  Structure  of  the
              Weak  and  Semi-Weak DES Keys,"  Eurocrypt 86 - Abstracts
              of Papers , p. 2.1, Linkoping, Sweden, 20-22 |May| 1986.

    [Mor86]   T. M. Morris-Yates, "An nMOS  VLSI  Implementation  of  a
              Data  Encryption Algorithm,"  BEng Honours Thesis, School
              of Electrical Engineering, Uni. Sydney, |November.| 1986.

    [NBS77]   NBS, "Data Encryption Standard (DES),"  FIPS PUB  46,  US
              National  Bureau of Standards, Washington, DC, |January.|
              1977.

    [PiF89]   J.  Pieprzyk  and  G.  Finkelstein,  "Permutations   that
              Maximize    Non-Linearity    and    Their   Cryptographic
              Significance,"   in  Computer  Security  in  the  Age  of
              Information,   W.   J.  Caelli  (editor),  North-Holland,
              Amsterdam, 1989.

    [QDD86]   J. Quisquater, Y. Desmedt and M. Davio,  "The  Importance
              of  Good Key Scheduling Schemes (How to make a Secure DES
              scheme with <= 48 bit keys),"  in Advances in  Cryptology
              -  Crypto 85, Lecture Notes in Computer Science, no. 218,
              H. C. Williams (editor), pp. 537-542, |Springer  Verlag|,
              Berlin, 1986.

    [Sch82]   I.  Schaumuller-Bichl,   "Cryptanalysis   of   the   Data
              Encryption  Standard by the Method of Formal Coding,"  in
              Cryptography: |Proc.| of  the  workshop  on  Cryptography
              (Eurocrypt  82),  Lecture  Notes in Computer Science, no.
              149, T. Beth (editor), pp.  235-255,  |Springer  Verlag|,
              Berlin, |March.| 29 - |April.| 2, 1982.

    [SeP89]   J. Seberry and J. Pieprzyk, Cryptography: An Introduction
              to  Computer  Security, |Prentice Hall, Englewood Cliffs,
              NJ|, 1989.

    [Sha86]   A. Shamir, "On the Security of  DES,"    in  Advances  in
              Cryptology   -  Crypto  85,  Lecture  Notes  in  Computer
              Science, no. 218, H. C. Williams (editor),  pp.  280-281,
              |Springer Verlag|, Berlin, 1986.



                                  - 25 -                         9/6/93




    TR CS88/32          DES Analysis and Extension       Lawrence Brown


    [Sha49]   C. E. Shannon, "Communication Theory of Secrecy Systems,"
                Bell  System  Technical  Journal,  vol. 28, no. 10, pp.
              656-715, |October.| 1949.

    [WeT86]   A. F. Webster and S. E. Tavares, "On  the  design  of  S-
              Boxes,"    in Advances in Cryptology - Crypto 85, Lecture
              Notes in  Computer  Science,  no.  218,  H.  C.  Williams
              (editor), pp. 523-534, |Springer Verlag|, Berlin, 1986.


















































                                  - 26 -                         9/6/93



