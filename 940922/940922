From strnlght@netcom.com  Thu Sep 22 02:49:45 1994
Received: from netcom17.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA16170; Thu, 22 Sep 94 02:49:45 EDT
Received: by netcom17.netcom.com (8.6.9/Netcom)
	id XAA08061; Wed, 21 Sep 1994 23:47:34 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199409220647.XAA08061@netcom17.netcom.com>
Subject: Re: Certificates/formats
To: ripem-dev@ripem.msu.edu
Date: Wed, 21 Sep 1994 23:47:33 -0700 (PDT)
In-Reply-To: <199409202226.PAA03862@netcom11.netcom.com> from "Jeff Thompson" at Sep 20, 94 06:59:29 pm
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 804       

> 
> 
> > It would seem that the format of entries in the public key file needs to be
> > standardized as between Ripem Mac and Ripem (UNIX).
> 
> The certificate database formats between RIPEM Mac and RIPEM were
> never compatible.  The right way to get certificates into a RIPEM
> applications from RIPEM Mac is for the RIPEM Mac applications to send
> a message and for RIPEM to receive it.  RIPEM will extract the
> certificates from the Originator-Certificate and Issuer-Certificate
> fields and insert into its database.
> 
> - Jeff
> 

This is not a very useful response, since sending a PEM message with the
complete certificate chain from Ripem Mac to the latest Ripem beta still has
the beta refusing to decrypt the message, claiming "you are not listed as a
recipient of this message."

David
From jefft@netcom.com  Thu Sep 22 09:01:00 1994
Received: from netcom7.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA16499; Thu, 22 Sep 94 09:01:00 EDT
Received: by netcom7.netcom.com (8.6.9/Netcom)
	id FAA03602; Thu, 22 Sep 1994 05:58:43 -0700
Date: Thu, 22 Sep 1994 05:58:43 -0700
From: jefft@netcom.com (Jeff Thompson)
Message-Id: <199409221258.FAA03602@netcom7.netcom.com>
To: ripem-dev@ripem.msu.edu
In-Reply-To: <199409220647.XAA08061@netcom17.netcom.com> (strnlght@netcom.com)
Subject: Re: Certificates/formats


> This is not a very useful response, since sending a PEM message with the
> complete certificate chain from Ripem Mac to the latest Ripem beta still has
> the beta refusing to decrypt the message, claiming "you are not listed as a
> recipient of this message."

If you are using RIPEM Mac to encrypt a message for a RIPEM 2.0 Beta
user, how did RIPEM Mac get the RIPEM 2.0 user's public
key/certificate ?

- Jeff
From strnlght@netcom.com  Thu Sep 22 12:15:34 1994
Received: from netcom3.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA16806; Thu, 22 Sep 94 12:15:34 EDT
Received: by netcom3.netcom.com (8.6.9/Netcom)
	id JAA27457; Thu, 22 Sep 1994 09:13:22 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199409221613.JAA27457@netcom3.netcom.com>
Subject: Re: Certificates/formats
To: ripem-dev@ripem.msu.edu
Date: Thu, 22 Sep 1994 09:13:22 -0700 (PDT)
In-Reply-To: <199409221258.FAA03602@netcom7.netcom.com> from "Jeff Thompson" at Sep 22, 94 09:01:11 am
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 1035      

> 
> 
> > This is not a very useful response, since sending a PEM message with the
> > complete certificate chain from Ripem Mac to the latest Ripem beta still has
> > the beta refusing to decrypt the message, claiming "you are not listed as a
> > recipient of this message."
> 
> If you are using RIPEM Mac to encrypt a message for a RIPEM 2.0 Beta
> user, how did RIPEM Mac get the RIPEM 2.0 user's public
> key/certificate ?
> 
> - Jeff
> 

I encrypted a message to myself using Ripem Mac, which already had my public
key and certificate, since it was generated in Ripem Mac, and moved via an
editor to my Ripem Unix key files some time ago. The problem is that RIPEM
beta won't read the message from Ripem Mac. I have not tried going from
Ripem Unix to Ripem Mac--the problem I've reported comes from trying to go
from Ripem Mac to Ripem Unix.

It works fine if I encrypt in Ripem Mac using Ripem mode, not PEM mode. The
problem comes if I use PEM mode in order to get the certificates across as
you originally suggested.

David


From strnlght@netcom.com  Thu Sep 22 13:54:57 1994
Received: from netcom3.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA17009; Thu, 22 Sep 94 13:54:57 EDT
Received: by netcom3.netcom.com (8.6.9/Netcom)
	id KAA08965; Thu, 22 Sep 1994 10:52:41 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199409221752.KAA08965@netcom3.netcom.com>
Subject: Re: Certificates/formats (fwd)
To: ripem-dev@ripem.msu.edu
Date: Thu, 22 Sep 1994 10:52:41 -0700 (PDT)
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 2083      

Subsequent to sending the message below, I tried the reverse process. I
encrypted a message with the Unix Ripem beta, using PEM mode, and copied it
onto my Mac and attempted to decrypt it with Ripem Mac.. Although Ripem Mac
saw and displayed the Persona Certificate and gave me the opportunity to add
it to my files, it also displayed the same error message I reported earlier
from Ripem Unix--this time from Ripem Mac: "You are not listed as a
recipient of this message."

The message was encrypted to me with -r "strnlght@netcom.com".

David

Forwarded message:
> From strnlght Thu Sep 22 09:13:22 1994
> Subject: Re: Certificates/formats
> To: ripem-dev@ripem.msu.edu
> Date: Thu, 22 Sep 1994 09:13:22 -0700 (PDT)
> In-Reply-To: <199409221258.FAA03602@netcom7.netcom.com> from "Jeff Thompson" at Sep 22, 94 09:01:11 am
> X-Mailer: ELM [version 2.4 PL23]
> MIME-Version: 1.0
> Content-Type: text/plain; charset=US-ASCII
> Content-Transfer-Encoding: 7bit
> Content-Length: 1036      
> 
> > 
> > 
> > > This is not a very useful response, since sending a PEM message with the
> > > complete certificate chain from Ripem Mac to the latest Ripem beta still has
> > > the beta refusing to decrypt the message, claiming "you are not listed as a
> > > recipient of this message."
> > 
> > If you are using RIPEM Mac to encrypt a message for a RIPEM 2.0 Beta
> > user, how did RIPEM Mac get the RIPEM 2.0 user's public
> > key/certificate ?
> > 
> > - Jeff
> > 
> 
> I encrypted a message to myself using Ripem Mac, which already had my public
> key and certificate, since it was generated in Ripem Mac, and moved via an
> editor to my Ripem Unix key files some time ago. The problem is that RIPEM
> beta won't read the message from Ripem Mac. I have not tried going from
> Ripem Unix to Ripem Mac--the problem I've reported comes from trying to go
> from Ripem Mac to Ripem Unix.
> 
> It works fine if I encrypt in Ripem Mac using Ripem mode, not PEM mode. The
> problem comes if I use PEM mode in order to get the certificates across as
> you originally suggested.
> 
> David
> 
> 
> 

From strnlght@netcom.com  Thu Sep 22 16:43:24 1994
Received: from netcom3.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA17297; Thu, 22 Sep 94 16:43:24 EDT
Received: by netcom3.netcom.com (8.6.9/Netcom)
	id NAA28687; Thu, 22 Sep 1994 13:41:12 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199409222041.NAA28687@netcom3.netcom.com>
Subject: Comments on rcerts; RIPEM key management
To: ripem-dev@ripem.msu.edu
Date: Thu, 22 Sep 1994 13:41:12 -0700 (PDT)
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 5653      

1. rcerts does not display any certificates for your own userid. It just shows
it to be self-signed and valid. It would be good if it displayed any
certificates from others, with their validity, etc., just as it does for
userids other than your own, with the "V" command.

2. Ripem's certificate management seems to use the userid as the sole
identifier. But Ripem Mac, RSADSI certificates, and PEM also use a "common
name" which may be different. For example, I have a PEM certificate and
Ripem Mac public/private key for strnlght@netcom.com, with CN strnlght.
Actually, in getting a certificate, you can ask for any CN you wish--David
Sternlight, Jack the Ripper, etc. This seems to be the source of some
confusion between Ripem and Ripem Mac, and it would appear that Ripem Mac is
handling this properly and Ripem is not.

3. Ripem throws away a lot of important information (or carries it only in
the Certificate, dunno) which PEM messages and RIPEM Mac's public key files
retain in human-readable form. This includes the certificate serial number,
the information on PEM certificate heirarchy (CN, OU, O, C etc.).

4. There is no way to get a private key from Ripem Mac into Ripem except by
cut and paste. This exacerbates the problems above.

5. Public key formats include both the Public Key, the MD50 public key, and
the Certificate. Ripem appears to carry the Public Key only in the
certificate, unlike Ripem Mac. This is another source of both confusion and
incompatibility. It is exacerbated by the form of of public keys in either
mrr's existing key server or when transmitted in a Ripem Mac message from
another user, which seems to contain information which Ripem seems to throw
away.

6. There are a lot of keys without certificates. rcerts won't let
you get to them--it complains it can't find any valid certificate chain.
This prevents one from validating (certifying?) such keys.

7. I read the IPRA CRL message in, and Ripem acknowledged that it received a
CRL Message. But the IPRA public key information was added neither to the
crls file or to the Public Key File. What's going on?

----

As a general remark, Ripem and Ripem Mac should be compatible both at the
level of message management, key management, and certificates. Users should
not have to use a different private key for each. Users should be able to
pass public keys and CRLs back and forth (I don't think Ripem Mac yet
handles CRLs, but I'm not sure.)

Note also (for the future, perhaps) that Ripem is still very fussy and the
user interface leaves a lot to be desired. It appears to the user to be a
set of pieces instead of an integrated system. The need to go from ripem to
rcerts to perform certain functions, and the extensive command line
interface, which one must speak exactly right to get most results, is not
encouraging to novice users. If Ripem is to be successful it must be
designed for such novice users and not a small expert priesthood.

I've said this before, but I'll say it again, as an illustrative comment,
not an invidious comparison. One of PGP's great attractions is that for many
common functions all you have to do is say "PGP <filename>" and it figures
out the rest for itself. Arguments are for the less common functions, not
the standard stuff. Ripem should work the same way. Most of what Ripem needs
to know to perform the most common operations desired by users is already in
the input file, the preferences, and the defaults. This is so for
encryption, decryption, certificate and CRL reading and handling, etc. If
Ripem REALLY doesn't have the right info, it should ask, accept the
response, and move on, and not stick the user with speaking exactly the way
the arguments require or getting tossed out and having to start again.
Frankly, using Ripem so far has been something like the Chinese water
torture. Each time some argument is missing or wrong, you have to start all
over again, and it takes many passes to get it exactly right.

Things that "should" work, such as that my userid is strnlght@netcom.com,
and my PEM Common Name is strnlght, and do work correctly in Ripem Mac
because it is smart enough to keep userid, common name, and certificate as
one entry in the public key file, seem to give Ripem 17 ulcers and a bad
case of Rimshinsky's Blight. 

Unlike developers (and perhaps beta testers) users don't live Ripem. They
may come to it only from time to time, with a variable time between uses, as
needed. To force them to memorize the relevant arguments, or laboriously
translate the help display and figure it out, or reread some instructional
quick guide each time, or read the manual each time is a guarantee that
Ripem will not come remotely close to its potential.

In that context, the menu in rcerts is definitely a step in the right
direction. But even there, if a user makes a mistake in, or doesn't remember
the exact userid he is out of luck. In fact, he can't do much more to help
himself than print out the public key file and look, and then have to type
the name of the desired entry after re-invoking rcerts. Not a pretty
sight. That this is the "same as" the way Ripem handles this is a criticism
of Ripem, not a justification of rcerts.

More is needed, and the menu and question and answer approach could be used
in main Ripem with profit for cases that, as suggested above, aren't
resolvable directly from "ripem <filename>" plus collateral info in the
input file, the preferences, and logical defaults.

Nothing in this message should be taken as lack of appreciation for the hard
work of the developers so far. But as Jean Louis Gassee used to say at
Apple, it could be "even better".

David


From strnlght@netcom.com  Thu Sep 22 20:23:56 1994
Received: from netcom9.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA17625; Thu, 22 Sep 94 20:23:56 EDT
Received: by netcom9.netcom.com (8.6.9/Netcom)
	id RAA24766; Thu, 22 Sep 1994 17:21:45 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199409230021.RAA24766@netcom9.netcom.com>
Subject: Details of key files for previous mailing(s)
To: ripem-dev@ripem.msu.edu
Date: Thu, 22 Sep 1994 17:21:44 -0700 (PDT)
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 1740      

Private key file in Ripem (Unix):

-----BEGIN PRIVATE KEY-----
User: strnlght@netcom.com
EncryptedPrivateKeyInfo:
.....
-----END PRIVATE KEY-----

and from my Ripem (Unix) public key file:

User: strnlght@netcom.com
MD5OfPublicKey: 3ECDBBB76366823238A57C6D8133BD68
CertificateInfo:
..........

and 

User: strnlght
MD5OfPublicKey: 3ECDBBB76366823238A57C6D8133BD68
CertificateInfo:
............


But in my Ripem Mac key files:

User: strnlght@netcom.com
PublicKeyInfo:
 MIGcMAoGBFUIAQECAgQAA4GNADCBiQKBgQDO/pTGBDe6FOsJrXMx4knMCnUjQEyy
 pP13urWQeBFtcxaniPW9cit+vi8DUKD+MaL83M24sySNLmfhzze7wMikZinOa1SG
 Th+oG8okGeuAVO1DDGlKGuqY+dbeHd5bt76ePx2uE4PZujnymwmckBPlMVvAH2fr
 0ORfFkP3rHxSqwIDAQAB
MD5OfPublicKey: 3ECDBBB76366823238A57C6D8133BD68
SubjectInfo: CN=strnlght, OU=Persona Certificate, O=RSA Data Security, Inc., 
C=US
IssuerInfo: OU=Persona Certificate, O=RSA Data Security, Inc., C=US
SerialNumberInfo: 0xB7
CertificateInfo:
.......


NOTE THAT MY RIPEM MAC KEY FILE CORRECTLY SHOWS THAT MY USERID (MY NET
ADDRESS) IS strnlght@netcom.com, AND MY COMMON NAME (as I entered it in my
certificate request form to RSADSI) is strnlght.

To make the difference clearer, I have another entirely different (Ripem
Mac) key with userid of david@sternlight.com and common name of David
Sternlight.

Ripem Mac seems to handle this kind of situation (a standard case with PEM, 
since the CN need not be the same as the userid) with no difficulty; Ripem 
(Unix) seems to mess up.

As I said in my last message, if I sound confused, it's because I am. And
Ripem (UNIX) behavior has exacerbated that confusion. In fact, in using
Ripem Mac, everything has worked fine so I didn't need to realize (if it is
in fact true) that I was confused.  :-)

David.
From strnlght@netcom.com  Thu Sep 22 20:43:48 1994
Received: from netcom9.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA17652; Thu, 22 Sep 94 20:43:48 EDT
Received: by netcom9.netcom.com (8.6.9/Netcom)
	id QAA22356; Thu, 22 Sep 1994 16:59:28 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199409222359.QAA22356@netcom9.netcom.com>
Subject: A few more thought
To: ripem-dev@ripem.msu.edu
Date: Thu, 22 Sep 1994 16:59:27 -0700 (PDT)
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 3344      

A few more thoughts on my last message. I think the core of my concern is
that if Ripem were a person, I'd say it had a bad attitude. That is, the
design fundamentally (except for the recent rcerts menu in part) expects the
user to satisfy the program rather than the program to satisfy the use.

I can illustrate this with my comment on the questionable validity messages
I got from Ripem when I tried to use it with my own key. What I got back in
this newsgroup is that what I should do is go into a separate program
(rcerts), and issue a crl. Surely Ripem should be smart enough to recognize
my own key (it is, after all, in my secret key file also), and at least see
the validity problem and offer me some alternatives right then and there.
Instead, I have to suddenly invoke another program and set of concepts to
create a CRL.

Ripem Mac never made me do that, and recognized my self-signed, RSA
certified keys as valid.

Because my Ripem Mac Persona Certificate from RSADSI certifies my common
name as strnlght (since that's the one I used in sending RSADSI a
certificate request for strnlght@netcom.com), Ripem carries that as a
separate user with CN strnlght, than the way it carries my "base" public key
derived by changing the password to my key file from what it was to the same
thing. This caused Ripem to create a public key with CN strnlght@netcom.com,
which seems to have come from the userid, perhaps in the private
key--dunno.

The result is that rcerts shows two different "users":

The selected user is:
  CN = strnlght, OU = Persona Certificate, O = RSA Data Security, Inc., C =
US
This user has overall certificate chain status of CRL EXPIRED.
This user has a certificate with status CRL EXPIRED issued by:
  OU = Persona Certificate, O = RSA Data Security, Inc., C = US
  with a validity period from 04/12/94 to 04/11/96 GMT.
And this issuer has a certificate with status REVOCATION UNKNOWN issued by:
  OU = Low Assurance Certification Authority, O = RSA Data Security, Inc., C
= 
US
  with a validity period from 01/07/94 to 01/07/96 GMT.
And this issuer has a certificate with status VALID issued by you
  with a validity period from 09/22/94 to 09/21/96 GMT.

and incorrectly reports CRL EXPIRED for the Persona Certificate on that key,
and says "REVOCATION UNKNOWN" on the Low Assurance Certification Authority
Certificate on that key. Both are valid certificates.

The other flavor of the same public key is shown as:

The selected user is:
  CN = strnlght@netcom.com, OU = Persona Certificate, O = RSA Data Security, 
Inc., C = US
S - Select user...
V - View detail for the selected user
C - request CRLs for the selected user...
M - Modify chain length allowed for the selected user...
R - Revoke the selected user...
E - Enable standard issuers...
N - reNew the CRL issued by you...
P - Publish the CRL issued by you in a CRL message...
Q - Quit
  Enter choice:
v
The selected user is:
  CN = strnlght@netcom.com, OU = Persona Certificate, O = RSA Data Security, 
Inc., C = US
This is your own self-signed certificate.
It has a certificate status of VALID
  with a validity period from 09/22/94 to 09/21/96 GMT.
self-signed certificate digest: D6 95 E1 E7 8F F7 A9 02 69 A3 D7 00 4B 28 86
4F

As you can see, that does not show any of the other certificates.

If I sound confused it is because I am. :-)

David

From mrr  Thu Sep 22 21:50:40 1994
Received: by scss3.cl.msu.edu (4.1/4.7)  id AA17839; Thu, 22 Sep 94 21:50:40 EDT
Message-Id: <9409230150.AA17839@scss3.cl.msu.edu>
From: mrr@scss3.cl.msu.edu (Mark Riordan)
Date: Thu, 22 Sep 1994 21:50:40 -0400
X-Mailer: Mail User's Shell (7.2.5 10/14/92)
To: ripem-dev@ripem.msu.edu
Subject: Re: Comments on rcerts; RIPEM key management

David,
Your comments are well-taken.
To be honest, I probably won't get around to doing
anything about them any time soon, being involved
in another project.  I believe that Jeff is planning
on a Windows version, which would certainly be more like
RIPEM Mac.

/mrr
From strnlght@netcom.com  Thu Sep 22 22:23:54 1994
Received: from netcom5.netcom.com by scss3.cl.msu.edu (4.1/4.7)  id AA17938; Thu, 22 Sep 94 22:23:54 EDT
Received: by netcom5.netcom.com (8.6.9/Netcom)
	id TAA22658; Thu, 22 Sep 1994 19:21:37 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199409230221.TAA22658@netcom5.netcom.com>
Subject: Re: Comments on rcerts; RIPEM key management
To: ripem-dev@ripem.msu.edu
Date: Thu, 22 Sep 1994 19:21:36 -0700 (PDT)
In-Reply-To: <9409230150.AA17839@scss3.cl.msu.edu> from "Mark Riordan" at Sep 22, 94 09:50:46 pm
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 1224      

> 
> David,
> Your comments are well-taken.
> To be honest, I probably won't get around to doing
> anything about them any time soon, being involved
> in another project.  I believe that Jeff is planning
> on a Windows version, which would certainly be more like
> RIPEM Mac.

I'll be equally honest. I use Ripem Mac, both because it is much more user
friendly and does things more the PEM way, and because it's a lot more
secure than doing crypto on a multi-user machine.

It's very unfortunate that Ray Lau has stopped supporting it, but he has
made the right choice--his first priority is to graduate.

The reason I have Ripem Unix up is to help out with debugging and feature
suggestions. I don't mind.

I hope Richard Outerbridge finishes adding CRL support to Ripem Mac. That,
and maybe some more convenient links to a SLIP-based mailer would put the
last pieces in place to fit in with PKCS/PEM, since Techmail-PEM doesn't
seem to have had any work done on the beta in about a year, and Jeff
Schiller is apparently working on other priorities.

Maybe "our" Jeff will finish taking account of some of my comments in the
Unix version as well. There are, after all, many users who rely on Unix
rather than a Mac or PC.

