Newsgroups: sci.crypt
Path: msuinfo!agate!doc.ic.ac.uk!uknet!pipex!sunic!trane.uninett.no!nntp.uio.no!nuug!kth.se!hemul.nada.kth.se!md85-epi
From: md85-epi@hemul.nada.kth.se (Urban Koistinen)
Subject: Re: Security of RSA
Message-ID: <1993Jun11.081413.19983@kth.se>
Sender: usenet@kth.se (Usenet)
Nntp-Posting-Host: hemul.nada.kth.se
Organization: Royal Institute of Technology, Stockholm, Sweden
Date: Fri, 11 Jun 1993 08:14:13 GMT
Lines: 40

In article <1v8jlg$8t4@vanbc.wimsey.com> markh@vanbc.wimsey.com (Mark C. Henderson) writes:
:In article <1v6gb2$ahg@vanbc.wimsey.com> markh@vanbc.wimsey.com (Mark C. Henderson) writes:
:>In article <1993Jun9.184557.19364@kth.se> md85-epi@hemul.nada.kth.se (Urban Koistinen) writes:
:>>Brassard state that while RSA has not been proved to be as hard as factoring,
:>>the Blum-Goldwasser probabilistic encryption scheme has been.
:>>"Even should factoring be genuinely hard, breaking RSA is not known to
:>>be equally hard." pg 30.
:>However, note that a efficient algorithm for computing d (the RSA secret
:>exponent) can be used to give an efficient probabilistic algorithm
:>for factoring the modulus n. (see Salomaa's book, _Public Key
:>Cryptography_, Springer Verlag, 1990, Theorem 4.1 on pages 143-5)
:
:In fact, I'll take this a little further. Here's some code which
:will factor n given 
:e,d and n in the RSA setup (e is the public exponent, d the private 
:exponent and n the modulus)
[code omitted]
This does not prove that going from c,e,n -> m is as hard as factoring.
c :encrypted text
e :encryption key
n :public key
m :clear text

With BG it has been proved.

With RSA, if you can guess the message you can confirm your guess.
This can be helped by doing as in PGP (maybe RIPEM too): encrypting
a random key that is then used to encrypt the message using
a conventional crypto.

Maybe there are other weaknesses I don't know.

To conclude:
It is possible for RSA to be broken without solving the problem
of factoring.
There exist a system which can be broken only by solving the
problem of factoring (BG).
-- 
Urban Koistinen - md85-epi@nada.kth.se
Stop software patents, interface copyrights:  contact lpf@uunet.uu.net
