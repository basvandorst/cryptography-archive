Newsgroups: sci.crypt
From: pla@sktb.demon.co.uk ("Paul L. Allen")
Path: msuinfo!agate!doc.ic.ac.uk!uknet!bnr.co.uk!demon!sktb.demon.co.uk!pla
Subject: Re: The impending PGP key distribution logjam
References: <PCL.93Jun4150854@rhodium.ox.ac.uk>
Reply-To: pla@sktb.demon.co.uk
Organization: Chaos
Lines: 96
X-Newsreader: Archimedes ReadNews
Date: Sat, 5 Jun 1993 14:00:57 +0000
Message-ID: <8m4Pzfj024n@sktb.demon.co.uk>
Sender: usenet@demon.co.uk

-----BEGIN PGP SIGNED MESSAGE-----

In article <PCL.93Jun4150854@rhodium.ox.ac.uk> pcl@ox.ac.uk (Paul C Leyland) writes:

> I can see a very large problem looming in the near future.  That
> problem is coming because of the success of PGP in spreading to users
> around the world.  Put simply, unless we get a distributed public key
> service, we are going to be swamped by the sheer number of keys in
> existence.

Very true.  I think the reason that PGP has been slow to take off is that
people tend to stumble upon it by accident - this will change as PGP-signed
messages appear on groups other than a.s.p and sci.crypt (and readers of
those groups ask what the gibberish at the bottom of the posting means).
Don't forget, there are over a million internet hosts out there, so the
potential number of keys is huge.

However, your basic premise that users should rely on key-servers rather than
a personally-held keyring seems to me to be fundamentally flawed.  This
scheme is wide-open to spoofing - without having your key on my ring I
would have no way of spotting that the key I obtain from the server today
is not the same one that I obtained last week.  I also have no way of
assigning my personal trust factors to keys held on servers.  In my opinion
it would be a retrograde step to rely solely upon distributed servers.

Many people refuse to use servers on the grounds that some (or even all) keys
held on servers may be bogus - a viewpoint which confounds your proposal,
though it too is flawed.  IMHO, one should obtain every key available so as
to increase the chance of PGP finding one or more chains of trust between
oneself and ones intended recipient.  Even if no such chain is found, the
key may still be valid.  And even in the worst case, when it is a bogus
key inserted by some evil government agency (in which case they also have
to be able to intercept communications destined for the recipient), at least
that's one more encrypted message to tax the evil agencies of other
governments.

It seems to me that the solution to these problems has already been found,
and then discarded - alt.security.keydist.  Unfortunately, after some initial
traffic this group seems to have ground to a halt because of a common
misconception.  A number of people pointed out that news expires after
a around a week (your mileage may vary), and incorrectly concluded that
everyone would therefore have to post their keys to a.s.k once a week.
Nothing could be further from the truth - all that is necessary is for
people to post their keys only when they are modified (new user id, new sig).

A PGP newbie, or someone who's been away from the nets for a while, would
obtain a full keyring from a server, then simply collect new/modified keys
as they appear on a.s.k.  This minimises the traffic from keyservers without
significant overload on a.s.k.  I assume that servers already automatically
scan a.s.k, but a useful extension would be for one master server to post
modified keys to a.s.k (note, it would have to check that keys have
actually been modified both to minimise traffic when someone uploads their
full keyring and also to eliminate loops).

We *could* dispense with a.s.k if key-servers implemented a command to
fetch all keys which had been modified since a certain date, but as the
number of PGP users grow a.s.k will be more efficient in net bandwidth.
Even so, a server command for keys modified since <date> would still be
useful for people who go on holiday for longer than their site's news-
expiration period - they wouldn't then have to get a full keyring on their
return.

The only drawback I can see is PGP's own key-handling system.  This will
become unacceptably slow as the number of keys increases - I suspect
that a new keyring structure will be required.  My tentative thoughts
in this direction are to make keyrings indexed files (rather than compute
the index on the fly at the start of the session), and separating the
user id into separately-indexed fields of (say):

   name1  name2  name3  email_address  comments

along with appropriate changes to the method of requesting a particular
key.  I appreciate that it is more of a pain to say "-n paul -n allen" or
"-x pla@sktb" and have to specify the first n characters of a field rather
than any consecutive characters in the user-id as at present, but so is
waiting 10 minutes for pgp to scan your keyring.  Still, perhaps someone
can come up with a better scheme for speeding keyring access.

> In my opinion, the problem of distribution of PGP keys needs to be
> addressed seriously and in the quite near future.

We both agree here.  The original mechanisms became unwieldy when the number
of keys grew from tens to hundreds.  The new mechanism will probably not
survive past the thousands.

- --Paul

-----BEGIN PGP SIGNATURE-----
Version: 2.2

iQCVAgUBLBCZAGv14aSAK9PNAQHTugP/RV58YpSWjO8OGoQawsH++wE8CuahRqC9
ZjNdt5qPgaNdCuh8zQrPRFybXtn5sF0tkPmxTzuAn6iWVziMqdLdOb26mpnWJSZH
dJVZJjnMsccZk0m1xdScgSU79HO5o8a0QAcP9OW5QnzkwYDMjCVfegqFjjmEzRXE
hqtw9HyAmYI=
=1YqB
-----END PGP SIGNATURE-----

