Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!mont!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu (John Kelsey)
Subject: Re: Product cyphers, cypher block chaining and pipelining
Message-ID: <16BFD13972.C445585@mizzou1.missouri.edu>
Sender: news@mont.cs.missouri.edu
Nntp-Posting-Host: mizzou1.missouri.edu
Organization: University of Missouri
References:  <C9G47A.3LI@dcs.ed.ac.uk>
Date: Wed, 30 Jun 93 22:17:20 CDT
Lines: 43

In article <C9G47A.3LI@dcs.ed.ac.uk>
pdc@dcs.ed.ac.uk (Paul Crowley) writes:
 
>Why widen the input to the confusion function from 32
>bits to 48 using bit-selection table E before XORing with the key?
>Why permute with P afterwards?
>Why is the key scheduling so complex?  Are
 
The expansion allows the mixing of adjacent S-boxes.  Also,
intuitively, there should be more than 32 bits of key per round,
because there are more than 2**32 possible ways to substitute 32 bits
for 32-bits.  The way the expansion works, though, makes some input
bits more important than others.  This was exploited in an attack
(not practical) against DES by (I think) Kam and Davida.
 
>Are there any wide-state cyphers, ie cyphers which, in encrypting a
>stream of blocks, carry a great deal of state from one block to the
>next?
 
   Hmmm.  I think part of the intention of the DES was to be a block cipher,
which means a cipher which has no internal state beyond a single block.
DES in CBC or CFB or OFB mode is a stream cipher.  The difference is, in a
block cipher, the way an input unit is transformed into an output unit is
the same every time.  With a stream cipher, it's not the same each time.
 
   It's easy enough to build a stream cipher with an arbitrarily large state.
Simply maintain a buffer of arbitrary size N blocks (one block encrypted at
a time).  Then, for each block to encrypt, calculate some complex key-
dependent function on the buffer, for the next ciphertext block by XORing
that value against the plaintext block, and then add the cipehrtext block to
the next spot in the buffer.
 
>Also, why do block cyphers work on such small blocks?  It's no extra
>computational cost to work on kilobyte-sized blocks, and I would have
>expected it to make analysis considerably more difficult.  Does it give
>too much scope to a chosen-plaintext attack?
 
   Hmmm.  I think the main reason for the desirability of small blocks and
small internal state size is that transmission errors often occur.  If a
transmission error occurs on data from a 64-bit block cipher, you lose 64
bits of data.  If it occurs on data from a 1024-bit block cipher, you lose
1024 bits.
   --John Kelsey
