Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!howland.reston.ans.net!ux1.cso.uiuc.edu!moe.ksu.ksu.edu!hobbes.physics.uiowa.edu!news.uiowa.edu!news
From: jones@pyrite (Douglas W. Jones,201H MLH,3193350740,3193382879)
Subject: Re: ROT-13
Sender: news@news.uiowa.edu (News)
Message-ID: <1993Jun7.140800.13274@news.uiowa.edu>
Date: Mon, 7 Jun 1993 14:08:00 GMT
References: <1uue87$4hj@DIALix.oz.au>
Nntp-Posting-Host: pyrite.cs.uiowa.edu
Organization: University of Iowa, Iowa City, IA, USA
Lines: 73

From article <1uue87$4hj@DIALix.oz.au>,
by shogun@DIALix.oz.au (Matthew Fitzgerald):
> 
> I am looking for the theory behind ROT-13 de/encryption so I can code ...

I used ROT13 as an assignment last spring in an introductory programming
course.  Here's the handout that went with the assignment.  This contains
technical information about a widely distributed cryptographic program,
so if you're a non US national, please cover your eyes so I won't get
arrested for violating the US export control laws.

					Doug Jones
					jones@cs.uiowa.edu


22C:16/106                                                  D. W. Jones
Spring 1992                                                          14
                 Introduction to Programming with Pascal

			   Machine Problem II
		      Due Tuesday, Feb. 23, 7:00 AM

Julius Caesar is supposed to have used secret codes known today as
Caesar cyphers.  There are 26 such cyphers over the English alphabet.
In the simplest, A is replaced with B, B is replaced with C, and so on,
up to Z, which is replaced with A.  This is called a rotate-one Caesar
cypher because it rotates the alphabet one place.  A rotate-two cypher
replaces A with C, B with D, and so on up to Z which is replaced by B.

The following line is this line encrypted with a rotate one cypher.
Uif gpmmpxjoh mjof jt uijt mjof fodszqufe xjui b spubuf pof dzqifs.

Note that the letters in the above have been changed, but spaces and
punctuation marks have not.  Also, capitalization has been preserved.

For most Caesar cyphers, decryption and encryption require different
algorithms, but not for the rotate-13 cypher; here, the same algorithm
will both encrypt and decrypt.  This is because there are 26 letters in
our alphabet, so doing rot13 twice brings each letter back to itself.

Assignment:  Write a non-interactive program that reads a message and
writes the rot13 encrypted form as output.  This program must replace
every letter in the message by the rot13 equivalent, while leaving
digits, spaces, punctuation, and anything else unchanged.  Your program
must include and use the Boolean functions isupper(ch) and islower(ch)
to detect upper and lower case letters.  Your program must include a
procedure, rot13(ch), that takes ch (a character variable), and if ch
is a letter, changes ch to its rot13 equivalent.

The file ~jones/public/rot13 contains English text, in rot13 encrypted
form.  Once you compile your program, the following command should
decrypt this file and list it on your screen:

  % a.out < ~jones/public/rot13

To see what your program does when you give it to itself as input, try
the following (this puts the result in a file called mp2.rot13):

  % a.out < mp2.p > mp2.rot13

Finally, try the following to decrypt mp2.rot13 and page through it:

  % a.out < mp2.rot13 | more

Instructions for submitting your work:  When you have a working program
that you feel is good enough to submit, put it in a file named mp2.p,
then type the command "submit mp2" during the week before the due date.

===========

Grading criteria:  This problem is worth 5% of your grade.  If you get
your assignment to work perfectly, you will earn only half of credit.
The other half will depend on the style of your code and commentary.
