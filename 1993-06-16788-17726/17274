Path: msuinfo!agate!howland.reston.ans.net!noc.near.net!news.centerline.com!franl
From: franl@centerline.com (Fran Litterio)
Newsgroups: sci.crypt
Subject: Re: secure two way communication
Date: 17 Jun 93 11:27:16
Organization: CenterLine Software R&D
Lines: 65
Message-ID: <FRANL.93Jun17112716@draco.centerline.com>
References: <C8qr86.5tz@news.otago.ac.nz>
NNTP-Posting-Host: 140.239.3.116
In-reply-to: cosc304@piglet's message of Thu, 17 Jun 1993 01:09:42 GMT
To: cosc304@piglet.otago.ac.nz

cosc304@piglet (Grant Anderson) writes:

> The system to be used is one cuurently being worked on by myself and
> others, and is a hybrid combination of the RSA public key, and
> one-time pad cryptosystems.
> 
> The secret communication between A and B would function as follows:
> 
> 1. A would retrieve B's RSA public key from a globally readable file 
> (for example existing on a network file server).

Obtaining B's public key over an insecure channel allows me to spoof
it with one of my own construction.  Then I can decrypt your message.

> 2. A's computer would then randomly generate the required seeding
> information for the one-time pad (otp) part of the cryptosystem. The
> message or file that A is sending would then be encrypted using a
> otp seeded with these random keys using a forwards/backwards
> ciphering method as outlined by Ron Rivest in Cryptologia, Vol. 4,
> No.1 Jan 1980. The message/file would contain a header, which would
> be the seeds for the otp encrypted with B's public key.
>
> 3. The file/message could then be sent over insecure channels as the
> start of it would be encrypted with RSA, and the message/file body
> would be encrypted using a otp.
>
> 4. At the other end, B would use his/her RSA private key to decrypt the
> message/file header and retrieve the otp seeds to be able to decrypt the
> rest of the message.

> - Messages/files could be signed using either an MD5 type message-digest
> system, DSS, or even RSA encryption using A's private key (*if* the
> system was implemented in hardware!).

Why the hardware restriction?  Does the system require the use of
signatures?  Without required signatures, I can spoof B's public key,
intercept your message, decrypt it, remove the signature, re-encrypt
the message using B's public key, and send it along to B.

> - All users private RSA keys are stored only locally on their own
> machines and are encrypted using the otp and a secret master key
> which hashes to the required seeding information for the
> psuedo-random number function used for the otp running key.

How is the secret master key generated?  If it is a human-generated
(like a computer password), this is insecure.  It allows an exhaustive
search of the master key space.  If the master key is hundreds of bits
long, how does a human store it outside of the computer that stores
the RSA private keys (since storing it on the same computer is
insecure)?

> - The system could be generalised to a hardware based one, where once
> a user connects with, say a network server, they establish a secure link
> (using the above general method), and then all following communication 
> between the two systems is otp encrypted.

To "establish a secure link" using this system, you must at some point
trust a public key sent to you over an insecure channel.  To me, it
doesn't seem right to secure the system's data flow by using the same
system to first establish a secure channel for that data.
--
franl@centerline.com              Fran Litterio
uunet!centerline!franl            CenterLine Software
617-498-3255                      Cambridge, MA 02138-1110
PGP 2.0 public key available      USA
