Path: msuinfo!agate!howland.reston.ans.net!usc!elroy.jpl.nasa.gov!gomez!sean
From: sean@gomez.Jpl.Nasa.Gov (Sean Barrett)
Newsgroups: sci.crypt,alt.security.pgp
Subject: AMIGA: Pretty Good Privacy (PGP) version 2.3 patches
Date: 18 Jun 1993 15:20:16 GMT
Organization: Earth Observation Data Systems Grp, JPL
Lines: 228
Message-ID: <1vsmfg$8ph@elroy.jpl.nasa.gov>
References: <m0o6QXA-0001R4C@web.apc.org> <PCL.93Jun18111911@rhodium.ox.ac.uk>
NNTP-Posting-Host: gomez.jpl.nasa.gov
Summary: Amiga and PGP -- together again!
Keywords: PGP Amiga patch
Xref: msuinfo sci.crypt:17335 alt.security.pgp:3315

Here are some patches to the PGP 2.3 code and a Smakefile to work on
Amigas with SAS C compiler.  These changes include the excellent work
of Risto Paasivirta, (paasivir@jyu.fi).  Thank you, Risto!

Note that the Smakefile is set up for my system -- an A3000 with
a 68030/68882.  If yours is different, you will have to change a
couple of the CFLAGS.

---CUT HERE---changes to fileio.c---
917a
                        goto again;
                }
#endif
#ifdef AMIGA
                else if (tmpdir[0] == '\0')
                {        strcpy(tmpdir, "t:");
.
901c
#if defined(UNIX) || defined(VMS) || defined(__SASC)
.
631c
#if defined(VMS) || defined(__SASC)
.
367a
#ifdef AMIGA
                 if (result[strlen(result)-1] != '/' /* RP */
                         && result[strlen(result)-1] != ':')
                         strcat(result,"/");
#else
.
79c
#if defined(UNIX) || defined(VMS) || defined(__SASC)
.
32c
#if defined(UNIX) || defined(__SASC)
.
24a

        Mdified 11-Mar-93 - RP
        buildfilename() now understands ':' with AMIGA

        9-May-93 - SB - further changes for Amiga SAS C 
                sys/types.h, sys/stat.h and fcntl.h exist
                access() is now in library
                rename on Amiga works like VMS - this fixes the 
                   "disappearing files" bug
                open() with those options works on Amiga
.
---CUT HERE---changes to fileio.h---
35a
#endif /* __SASC */
.
30a
#define FOPRTXT         "ra"
#define FOPWBIN         "wb"
#define FOPWTXT         "wa"
#define FOPRWBIN        "rb+"
#define FOPWPBIN        "wb+"
#else /* !UNIX && !VMS && !__SASC */
#define FOPRBIN         "rb"
.
29c
#else
#ifdef __SASC
.
---CUT HERE---changes to pgp.c---
189c
static char *compressExt[] =  { ".jpg",
        ".zip",  ".zoo",  ".gif",  ".arj",
.
186c
static char *compressName[] = { "JPEG",
        "PKZIP",   "Zoo",  "GIF",  "Arj",
.
183c
static char *compressSig[] =  { "\377\330\377\340",
        "PK\03\04", "ZOO ", "GIF8", "\352\140",
.
107,109c
#include <signal.h> /* RP should work with Amiga too */ 
.
102a

        Modified: 11-Mar-93 RP
        Amiga ^C handling, now use signals, call ttynorm() in exitPGP()
.
---CUT HERE---changes to system.c---
1631a

#if !defined (__SASC)
.
1607c
#if defined (LATTICE) || defined (__SASC)
.
1594c
  return((int) buf[0]); /* RP: (int) added */
.
1586c
  unsigned char buf[128]; /* RP: was char, now unsigned char */
.
1584c
int getch(void) /* RP: was char, now int, for SAS compatibility */
.
1528c
  struct MsgPort *rp; /* RP correction: was struct msgPort */
.
1515c
#endif /* LATTICE or SASC */
.
1512c
#if defined (LATTICE) || defined (__SASC)
.
16a

.
15a
 *
 * Modified: 10-Mar-93 Risto Paasivirta
 * Porting to Amiga+SAS/C 6.2
 *
.
---CUT HERE---Smakefile---
# makefile for PGP 2.2
# This Makefile is meant for the Amiga, SAS/C 6.2 compiler and pdmake
# 11-Mar-93 Risto Paasivirta, paasivir@jyu.fi
# 18 Jun 1993 Sean Barrett (sbar@genie.geis.com)
# CFLAGS options:

# -DHIGHFIRST if building PGP on a big-endian system
# -DMPORTABLE if there is no assembly version of the mp_smul	function
# -DDEBUG     to include debugging information
# -DNOTERMIO  if your system has no termios
# -DDYN_ALLOC if your compiler does not support large static arrays
# -DSMALL_MEM if your machine has a small memory (required for MSDOS)

# Define one of:
# -DMERRITT    Merritt's modmult (fast on risc machines)
# -DPEASANT    Russian peasant modulo multiply algorithm
# -DUPTON     default: use Upton's modmult algorithm */

# To define the OS we are compiling under, define one of:
# -DMSDOS, -DUNIX, -DVMS, -DATARI, -DAMIGA

#
# You may want to change these for your system----+-------+
#                                                 V       V
CFLAGS= OPTIMIZE NOWVRET NOSTKCHK DATA=FAR CPU=68030 MATH=coprocessor \
        DEFINE=UNIT32 DEFINE=AMIGA DEFINE=MPORTABLE DEFINE=HIGHFIRST \
        DEFINE=mc68000
CC	= sc
ASM	= asm

OBJS_EXT= 68000.o # ASM obj. files

PROJ	= pgp

ZIPOBJS= zbits.o zdeflate.o zfile_io.o zglobals.o \
	zinflate.o zip.o zipup.o ztrees.o zunzip.o

OBJ1 =	pgp.o crypto.o keymgmt.o fileio.o idea.o \
	mdfile.o more.o armor.o mpilib.o mpiio.o \
	genprime.o rsagen.o random.o passwd.o \
	md5.o system.o language.o getopt.o keyadd.o \
	config.o keymaint.o charset.o rsaglue.o

OBJS =	$(OBJ1) $(ZIPOBJS) $(OBJS_EXT)

.c.o:
	$(CC) $(CFLAGS) $*.c
.s.o:
	$(ASM) $*.s

$(PROJ):	$(OBJS)
	$(CC) LINK $(CFLAGS) $(OBJS) TO $(PROJ)

## Dependencies ##
armor.o : armor.c mpilib.h usuals.h platform.h fileio.h mpiio.h language.h \
  pgp.h more.h armor.h crypto.h 
charset.o : charset.c usuals.h language.h charset.h system.h 
config.o : config.c usuals.h fileio.h pgp.h more.h armor.h config.h \
  charset.h 
crypto.o : crypto.c mpilib.h usuals.h platform.h mpiio.h random.h idea.h \
  crypto.h keymgmt.h keymaint.h mdfile.h md5.h fileio.h charset.h language.h \
  pgp.h more.h armor.h exitpgp.h zipup.h 
fileio.o : fileio.c random.h usuals.h mpilib.h platform.h mpiio.h fileio.h \
  language.h pgp.h more.h armor.h exitpgp.h charset.h system.h 
genprime.o : genprime.c mpilib.h usuals.h platform.h genprime.h random.h 
getopt.o : getopt.c getopt.h 
idea.o : idea.c idea.h usuals.h 
keyadd.o : keyadd.c mpilib.h usuals.h platform.h crypto.h fileio.h \
  keymgmt.h charset.h language.h pgp.h more.h armor.h exitpgp.h keyadd.h \
  keymaint.h 
keymaint.o : keymaint.c mpilib.h usuals.h platform.h random.h crypto.h \
  fileio.h keymgmt.h keymaint.h mpiio.h charset.h language.h pgp.h more.h \
  armor.h 
keymgmt.o : keymgmt.c system.h mpilib.h usuals.h platform.h idea.h random.h \
  crypto.h fileio.h keymgmt.h rsagen.h mpiio.h language.h pgp.h more.h \
  armor.h md5.h charset.h keymaint.h 
language.o : language.c usuals.h fileio.h language.h pgp.h more.h armor.h \
  charset.h 
md5.o : md5.c md5.h 
mdfile.o : mdfile.c mpilib.h usuals.h platform.h mdfile.h md5.h fileio.h \
  language.h pgp.h more.h armor.h 
more.o : more.c system.h mpilib.h usuals.h platform.h language.h fileio.h \
  pgp.h more.h armor.h charset.h 
mpiio.o : mpiio.c mpilib.h usuals.h platform.h mpiio.h pgp.h more.h armor.h 
mpilib.o : mpilib.c mpilib.h usuals.h platform.h 
passwd.o : passwd.c random.h usuals.h md5.h language.h pgp.h more.h armor.h 
pgp.o : pgp.c system.h mpilib.h usuals.h platform.h random.h crypto.h \
  fileio.h keymgmt.h language.h pgp.h more.h armor.h exitpgp.h charset.h \
  getopt.h config.h keymaint.h keyadd.h 
random.o : random.c system.h random.h usuals.h language.h 
rsagen.o : rsagen.c mpilib.h usuals.h platform.h genprime.h rsagen.h \
  random.h 
system.o : system.c exitpgp.h system.h charset.h 
zbits.o : zbits.c zip.h ztailor.h ziperr.h 
zdeflate.o : zdeflate.c zunzip.h usuals.h system.h zip.h ztailor.h ziperr.h 
zfile_io.o : zfile_io.c zunzip.h usuals.h system.h 
zglobals.o : zglobals.c zip.h ztailor.h ziperr.h 
zinflate.o : zinflate.c zunzip.h usuals.h system.h exitpgp.h 
zip.o : zip.c usuals.h fileio.h language.h pgp.h more.h armor.h exitpgp.h 
zipup.o : zipup.c zip.h ztailor.h ziperr.h zrevisio.h 
ztrees.o : ztrees.c zip.h ztailor.h ziperr.h 
zunzip.o : zunzip.c zunzip.h usuals.h system.h 
--
 Sean Barrett                       "Ho!  Haha!  Guard!  Turn!  Parry!
 sean@pugsley.jpl.nasa.gov (fast)    Dodge!  Spin!  Ha!  Thrust!"  <THWAP!>
 sbar@genie.geis.com (reliable)     PGP key by finger or from key servers.
