Newsgroups: alt.security,sci.crypt,comp.security.misc,alt.security.pgp,alt.security.keydist
Path: msuinfo!agate!howland.reston.ans.net!gatech!swrinde!cs.utexas.edu!utnut!torn!nott!bnrgate!bnr.co.uk!uknet!comlab.ox.ac.uk!pcl
From: pcl@ox.ac.uk (Paul C Leyland)
Subject: The impending PGP key distribution logjam
Message-ID: <PCL.93Jun4150854@rhodium.ox.ac.uk>
Followup-To: sci.crypt
Organization: Oxford University Computing Services, 13 Banbury Rd Oxford OX2
	6NN
Date: 4 Jun 93 15:08:54
Lines: 98
Xref: msuinfo alt.security:10760 sci.crypt:16852 comp.security.misc:4083 alt.security.pgp:3223 alt.security.keydist:97


I can see a very large problem looming in the near future.  That
problem is coming because of the success of PGP in spreading to users
around the world.  Put simply, unless we get a distributed public key
service, we are going to be swamped by the sheer number of keys in
existence.

Comments and criticism of the proposal described below is welcome, as
are volunteers who wish to implement it.  Please post your comments
for public consideration, rather than sending personal email.

=============================================================================

The manner by which a PGP user has obtained the public key of another
has closely paralleled the way in which an internet hosts has found
the IP address of another host whose name is known.

On a very small network, a simple list local to each machine,
/etc/hosts, is adequate.  For a very small number of PGP users, a
simple personal public key ring is adequate.

In both contexts, very small means fewer than a hundred or so.

On a moderate sized network, it is feasible to maintain a single hosts
file and have it copied around, by rdist, or ftp, or NFS, or whatever,
and keep only that master list up to date.  For a moderate number of
PGP users, it is feasible to keep a master public keyring and have it
copied around by email as is done by the present network of
keyservers.  It is also feasible to make small-scale interrogations
and updates (small scale meaning one or a few keys in a single
transaction).

In both contexts, moderate means up to a couple of thousand or so.

In a very large network, it is quite infeasible to maintain a complete
list, on any one machine, of every host on the network.  If nothing
else, the turnover of additions, removals and modifications is too
rapid.  As is well known, the Domain Name Service has addressed this
problem by setting up a heirarchy of name spaces, with separate
organizations being responsible for their part of the space.  Those
spaces may themselves be split up and responsibility for them devolved
to organizations capable of managing them properly.  To the best of my
knowledge, PGP users do not have the analogous facilities available to
them.

In this context, very large ranges from a thousand to millions.

In my opinion, the problem of distribution of PGP keys needs to be
addressed seriously and in the quite near future.  Again, IMO, there
*must* be set up a heirarchy of co-operating but autonomous servers.
The heirarchy *must* be connected through its members communicating
with, at the very least, their immediate superior and all their
immediate subordinates.  For resilience, a member should also
communicate with several of its peers and several of the peers of its
superior.  Also for resilience, it is necessary that peers be able to
(but not necessarily required to) carry the same set of keys.  For
efficiency reasons, a member of the heirarchy should hold not only the
public keys for which it has direct responsibility, but also a cache
of recently requested keys.  The size of this cache should be
site-dependent and may be zero if required.

Access to the distributed key service must be possible by electronic
mail in a manner similar to that used by the present key servers.  Not
all machines requiring PGP keys are capable of using other forms of
access.

It may be appropriate, and further investigation is needed here, for
other access methods to be introduced.  If it is possible for a
program to interrogate a server in real time, as is possible for host
name/address lookups to be performed, it would then be possible for a
PGP implementation to fetch the public key as required.  Per-user
public key rings would become unnecessary in this context, apart from
their possibly greater efficiency of access or to override temporarily
the global information.

To forestall certain attacks, it must be possible to create
ex-directory public keys, with the ex-directory flag protected by the
corresponding secret key to prevent unauthorized modification.  Such
public keys would never be stored in a key server which adheres to the
standard behaviour.

For use on the Internet, there should be at least two RFC's describing
PGP, in my opinion.  The first should describe the PGP protocol and
externally visible data structures to the extent that a competent
programmer can write a utility which interfaces to PGP keyrings and
PGP encrypted and/or signed data.  The second should describe the key
distribution mechanism to an extent that a similarly competent author
can write a key server which interoperates with other servers.


Paul Leyland (pcl@ox.ac.uk) 4 June 1993
==============================================================================
--
Paul Leyland <pcl@oxford.ac.uk>          | Hanging on in quiet desperation is
Oxford University Computing Service      |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is come, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
