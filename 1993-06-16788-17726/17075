Newsgroups: sci.crypt
Path: msuinfo!agate!linus!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Subject: Re: Security of RSA
In-Reply-To: srt@duke.cs.duke.edu's message of 10 Jun 93 15:12:24 GMT
Message-ID: <EACHUS.93Jun11132843@spectre.mitre.org>
Sender: news@linus.mitre.org (News Service)
Nntp-Posting-Host: spectre.mitre.org
Organization: The Mitre Corp., Bedford, MA.
References: <82999@cup.portal.com> <strnlghtC8C736.A6@netcom.com>
	<EACHUS.93Jun9114201@spectre.mitre.org> <739725143@pike.cs.duke.edu>
Date: Fri, 11 Jun 1993 18:28:43 GMT
Lines: 115


In article <739725143@pike.cs.duke.edu> srt@duke.cs.duke.edu (Stephen R. Tate) writes:

   > While I'm usually one talking about the complexity theory
   > implications in cryptography, and how this can be useful (and
   > some others have consistently argued against this position), it
   > is important to really understand what you are saying when you
   > talk about complexity results.  Let me point out some of the
   > larger misconceptions of the following posting.

   > Here's the first clue that the poster really doesn't know
   > anything about complexity theory.  NP does not stand for
   > "non-polynomial", and the very thought that someone has this
   > misconception makes me shiver.  NP stands for "nondeterministic
   > polynomial time".  If it were "non-polynomial" you would know
   > that P != NP.

   There is a huge difference between knowing nothing about a subject
and your head getting ahead of your fingers when posting.  

   I said:

   > > Problems in this set are called NP-complete.  Note that, if any
   > > NP-complete problem is in P, P = NP, and all cryptosystems can be
   > > easily cracked by anyone who has the algorithm.

   Stephan said:

   > "P=NP" would certainly not be the end of cryptography.  The time hierarchy
   > says that for all c there are problems solvable in time n^c, but not any 
   > faster (loosely speaking).  So in other words, even if P=NP, there might
   > be functions computable in linear time whose inverse takes n^100 time.
   > That would be as secure as anything based on P vs. NP that you could
   > come up with.

   Talk about strawmen!  If Stephan can come up with even one (set of)
problems in P where the complexity is known to be greater than n to
the fourth, tell me about it.  Mathematical cryptography would not
only require such a problem, but one that can be solved quickly with
hidden information.

   But I think your loosely speaking above is a little loose.  The
various speed-up and gap theorems say precisely the opposite, that
there are only a few populated complexity levels.

   > >    About 20 years ago there were many problems thought to be in
   > > NP but not NP-complete.  The only problem that has "stood the
   > > test of time" on this list and not shown either to be in P or
   > > NP-complete is factoring.

   > Actually, there are quite a few problems that have "stood the
   > test of time", and that are not known to be NP-complete or in P.
   > Graph isomorphism comes to mind immediately, as well as any
   > language in the low hierarchy.

   I'm not sure that we disagree, but you have to read what I said.
There was a list twenty years ago (in one of the first survey books on
NP-completeness) of ten or twelve problems which had not been proved
to be NP-complete, but also not known to be in P.  Most fell rapidly,
one way or the other. (I particularly remember the excitement when
linear programming fell.)  Proof of primality was also on the list, as
was factoring of numbers.  Factoring, as I said is the only one from
that list which survives.

   > >    Therefore most experts in the field of complexity suspect
   > > that, if factoring falls, P=NP, and all mathematical
   > > cryptosystems fall.

   >   I don't know of anyone who "suspects this".

   I'll take your word for it, but I know of a lot of people who do.

   > I don't want to flame someone who posts honest mistakes, but the tone
   > of your posting made you sound like you were giving expert advice.  You
   > clearly aren't an expert (it's questionable whether you've even had a
   > good undergraduate course in complexity), and should not post misleading
   > information such as this.

   Actually, I didn't have a good undergraduate course in complexity.
However, I did take several graudate courses from Robert McNaughton.
I do not consider myself an expert in computability theory, but I do
consider myself an expert in several related areas, such as
algorithmic complexity.  Details...

   However NOT a detail: In what way do you consider what I posted to
be misleading?  Do you have a proof that P=NP that you are waiting to
publish, or an improved factoring algorithm that you haven't got space
to write down?  Others have both challenged (politely) my assertion
that RSA is at least as hard as factoring* and RSA is at least as
secure as other alternative algorithmic cryptosystems. But those
arguments/disagreements have been about theoretic issues, not the
conclusions of interest to people in the Cripple/Capstone debate.

    The question I was answering was raised by David Sternlight.  Is
it possible that NSA can crack RSA but not Cripple?  The mathematical
complexity of Skipjack is not (publicly) known.  And in any case, the
theoretical strength of any known system depends on theorems not
currently known to be true (P ?= NP).  But I don't know anyone willing
to say that it is even likely that Skipkjack is significantly more
secure than RSA.  However, your attack on me could lead people to
believe otherwise.  THAT is misleading.



   *This issue was neatly rendered moot by markh@vanbc.wimsey.com
(Mark C. Henderson).  Great work Mark!  A useable algorithm is to me a
much more convincing proof than anything which is formally correct but
non-constructive.
--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
