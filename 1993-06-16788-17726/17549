Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!gatech!news-feed-1.peachnet.edu!umn.edu!news.cs.indiana.edu!mvanheyn@cs.indiana.edu
From: Marc VanHeyningen <mvanheyn@cs.indiana.edu>
Subject: Re: The impending PGP key distribution logjam
Message-ID: <22569.741006677@moose.cs.indiana.edu>
Sender: mvanheyn@cs.indiana.edu
Organization: Computer Science Dept, Indiana University
References: <3484.Jun1719.39.5293@silverton.berkeley.edu> <24424.740367748@moose.cs.indiana.edu> <1010.Jun2201.14.0293@silverton.berkeley.edu>
Date: Fri, 25 Jun 1993 06:11:17 -0500
Lines: 52

Thus said djb@silverton.berkeley.edu (D. J. Bernstein):
>In article <24424.740367748@moose.cs.indiana.edu> Marc VanHeyningen <mvanheyn@cs.indiana.edu> writes:
>> How exactly could Jim Bidzos destroy the entire PEM communications
>> system?
>
>Here's the simplest way.
>
>The RSAREF license is unenforceable under California law, because it
>contains no consideration for RSADSI. (It is also unenforceable by
>virtue of being a shrinkwrap license. It will also not be accepted as
>evidence in most courts, as it's electronic. Other than that it's fine.
>[grin])
>
>Jim Bidzos can simply send a ``cease and desist'' letter to every 
>registered user of RSAREF and follow up a few days later with patent
>infringement lawsuits. Unless his patents are struck down by the Supreme 
>Court, there's no reason he wouldn't succeed.

I find it difficult to take you seriously.  Not all PEM
implementations use RSAREF, for one thing.  I also am unaware there
was such a thing as a "registered user" of RSAREF; how does one
register?  And since when does the Supreme Court normally handle such
mundane things as patent cases?

Even if this were possible, and successful, this would at worst make
the legal status of some implementations of PEM the same as the legal
status of PGP.  The fact that the algorithms in question are patented
has nothing to do with PEM per se; any public key cryptosystem has the
same weakness.  Unless you are arguing that we must abandon public key
systems entirely, I don't follow you at all.

>> While you're at it, you might want to suggest an alternative
>> mechanism.
>
>The simplest mechanism is also the most secure, reliable, and obvious:
>_Don't ask who owns a key_. If a message is signed with a key, it was 
>sent _from_ that key. If a message is encrypted under a key, it was sent 
>_to_ that key. If you must use names, treat them the way the French do:
>instead of ``my name is'' (``mon nom est''---ugh) say ``I call myself''
>(``je m'appelle''). If two people call themselves by the same name, who
>cares? Duplicated names are a fact of life. All that's important for 
>cryptography is that _keys_ are distinct.

Depends on the application.  The key certification mechanism you are
describing is "none", which both PEM and PGP handle fine.  PEM also
explicitly allows for "persona" keys, tied to some pseudonym but not
to some specific real person or organization.  RTFRFC.
--
Marc VanHeyningen   mvanheyn@cs.indiana.edu   MIME & RIPEM accepted


Disclaimer:  IU thinks I use their computers to do research.
