Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!wupost!mont!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu (John Kelsey)
Subject: Garbling the seed of a PRNG
Message-ID: <16BF813A5C.C445585@mizzou1.missouri.edu>
Sender: news@mont.cs.missouri.edu
Nntp-Posting-Host: mizzou1.missouri.edu
Organization: University of Missouri
References: <16BF7146FD.C445585@mizzou1.missouri.edu> <C96IB4.D49@mentor.cc.purdue.edu>
Date: Fri, 25 Jun 93 22:21:14 CDT
Lines: 28

In article <C96IB4.D49@mentor.cc.purdue.edu>
hrubin@pop.stat.purdue.edu (Herman Rubin) writes:
 
>Polynomial in  the size of the seed?  And for a given size problem, a
>polynomial with large coefficients can be worse than an exponential with
>small coefficients.
 
   True.  The general way of looking at complexity isn't always useful for
a given application.  However, you can always choose a seed length that's
stronger for a given PRNG against which attacks are O(2**N) than for one
against which attacks are (say) O(N**1,000,000,000,000,000).  Anyway, it's
a nice way of framing the theory....  (And it's pretty much all we've got.)
 
>Also, there is a problem with really long seeds.  Remember that to use
>a one-time pad, both parties must have exactly the same one.
 [...some text deleted...]
>Thousand-bit secret seeds are quite fraught with danger; with a multi-
>megabyte OTP, if a few bits are garbled, the encoding and decoding can
>still be carried out, but if a few bits of the seed are garbled, the
>next block can be hopeless.
 
   This is exactly the case when you're dealing with any cryptographic key.
Encrypt a block of binary zeros with a randomly selected IDEA key, and then
flip one key bit and see what the decryption looks like.
 
 
>Herman Rubin, Dept. of Statistics, Purdue Univ., West Lafayette IN47907-1399
   --John Kelsey, c445585@mizzou1.missouri.edu (For 3 more days)
