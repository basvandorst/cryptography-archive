Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!spool.mu.edu!uunet!pipex!uknet!pavo.csi.cam.ac.uk!mrr
From: mrr@cl.cam.ac.uk (Michael Roe)
Subject: Re: Certification Hierarchies (was Re: The impending PGP key distribution logjam)
Message-ID: <1993Jun24.124711.18317@infodev.cam.ac.uk>
Sender: news@infodev.cam.ac.uk (USENET news)
Nntp-Posting-Host: smew.cl.cam.ac.uk
Organization: U of Cambridge Computer Lab, UK
References: <1vrrtv$bkk@lucy.ee.und.ac.za> <1vte63$iss@news.intercon.com> <WARLORD.93Jun23215054@toxicwaste.mit.edu>
Date: Thu, 24 Jun 1993 12:47:11 GMT
Lines: 71

Derek Atkins writes:
> No, this is not true, since the PEM certificates specifically statewho can sign whose certificate, and you can only have a single
> signature on your certificate, whereas PGP allows you to have any
> number of signatures on your certificate.  

The PEM model is much more flexible that you think. True, there can only be one
signature on any given certificate, but a user can have as many certificates as
she likes for the same key.

Once you've generated your public key, you can go to as many different people as
you like and get each of them to sign a PEM certificate saying that they believe
it's your key.

Anyone is *permitted* to sign a certificate for anyone else's public key. However,
not every certificate is equally likely to be *believed*.  A certificate will
only be believed if the recipient trusts the issuer to sign certificates for
that particular subject.

Note that it is who the recipient trusts that matters.

In the PEM model a ``policy CA'' is someone who you trust very much, to the extent
that you trust them to supply you with public keys for everyone. An
``organisational CA'' is someone you trust, but not as much: you trust them to
supply you with the public keys of the members of a particular group or 
organization, but you don't trust them for all keys.

So far, this is all fine, and completely consistent with the way PGP does things.

So, who gets to be a ``policy CA''?

Well, I think ``Who do I trust to give me keys?'', and put a line in my personal
PEM configuration file saying ``These guys are PCAs -- build my key ring from
them'' [Actual syntax slightly less user friendly :-) ]

I can either include or exclude anyone I like at this stage, and it's still just
like PGP (only easier to use).

However, when I do this, I am deviating slightly from RFC 1422. For some strange
reason, the completely separate notions of

a) How do I trust
b) Who has paid money to Jim Bidzos

have become slightly confused. RFC 1422 has the notion of the Internet Policy
Registration Authority (IPRA), which charges lots of dollars to sign certificates
for Policy CAs.

In my opinion, this is irrelevant. If I trust someone to provide me with keys,
I couldn't care less whether they've paid some large sum of money to the IPRA.
Similarly, knowing that someone's paid the fee does not make me blindly trust
them!

For this reason, the European PEM infrastructure is probably going to
be as described in RFC 1422, but without the IPRA  requirement. (The fact that 
none of Public Key Partner's patents are valid in Europe has a substantial
effect on the system requirements!)


Michael Roe
Cambridge University Computer Laboratory

[Opinions expressed above are my own, and should not be taken as the official
 view of any organisation]

If you're interested in gory details, take a look at ``R2.5: Certification
Authority Requirements'', produced by the European Community funded PASSWORD
project. Available by anonymous FTP in the following places:

ftp.cl.cam.ac.uk: /reports/mrr-passwords.dvi.Z [compressed DVI file]
cs.ucl.ac.uk: password/r25.ps                  [postscript]

