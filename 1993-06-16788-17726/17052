Path: msuinfo!agate!howland.reston.ans.net!wupost!udel!news.intercon.com!psinntp!sbcs.sunysb.edu!max.physics.sunysb.edu!hanche
From: hanche@ams.sunysb.edu (Harald Hanche-Olsen)
Newsgroups: sci.crypt
Subject: Re: Security of RSA
Date: 11 Jun 1993 14:18:39 GMT
Organization: University at Stony Brook, NY
Lines: 23
Message-ID: <HANCHE.93Jun11101839@ptolemy.ams.sunysb.edu>
References: <82999@cup.portal.com> <strnlghtC8C736.A6@netcom.com>
	<EACHUS.93Jun9114201@spectre.mitre.org>
	<2976.Jun919.00.3293@silverton.berkeley.edu>
	<1993Jun10.180949.17860@ast.saic.com> <C8FLG4.DKp@metaflow.com>
NNTP-Posting-Host: ptolemy.ams.sunysb.edu
In-reply-to: rschnapp@metaflow.com's message of Fri, 11 Jun 1993 00:31:16 GMT

>>>>> On Fri, 11 Jun 1993 00:31:16 GMT, rschnapp@metaflow.com (Russ Schnapp) said:

rschnapp> This lovely machine, which I
rschnapp> wouldn't mind having on my desk, clones itself at each decision point
rschnapp> and processes all paths.  Think of it as being able to sweep down the
rschnapp> breadth of a decision tree, no matter how wide it gets.

rschnapp> I used to know why it is called *nondeterministic*, but I have
rschnapp> forgotten, and my dusty textbook is at home.  Sorry, Dr. Ullman!

It's because another way of describing the machine is to say that at
every decision point, rather than cloning itself, it has a choice of
where to go next.  Then you say a problem belongs to NP if there is a
polynomial p so that, for every instance of your problem of size < n,
there is an allowed computation of your machine that solves the
problem in < p(n) steps.

It's not hard to see that you can put all the choices up front,
i.e. the machine guesses the right answer and then performs a
deterministic computation.  E.g. for the factoring problem, guess the
factors (hard) and then check the answer (easy).

- Harald
