Path: msuinfo!uwm.edu!ux1.cso.uiuc.edu!sdd.hp.com!caen!batcomputer!munnari.oz.au!ariel.ucs.unimelb.EDU.AU!werple.apana.org.au!zikzak.apana.org.au!elvis!proff
From: proff@elvis.apana.org.au (Julian Assange)
Newsgroups: sci.crypt
Subject: Re: ROT-13
Date: 10 Jun 1993 18:51:07 +1000
Organization: ADSO
Lines: 51
Distribution: world
Message-ID: <proff.037v@elvis.apana.org.au>
References: <1uue87$4hj@DIALix.oz.au>
NNTP-Posting-Host: zikzak.apana.org.au

In article <1uue87$4hj@DIALix.oz.au> shogun@DIALix.oz.au (Matthew Fitzgerald) writes:
>Hi,
>
>I am looking for the theory behind ROT-13 de/encryption so I can code a program
>on my _own_ computer that will do the job.  If anyone knows how it works, I'd
>be very happy if you could let me know!
>
>Kindest Regards,
>Matt Fitzgerald
>

Let x be an element of A={a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z}

then rot13(x)=A_
               (x+13)mod 26

i.e add 13 to the ascii value of x and if x>26 x=x-26

decryption is the same as encryption.

Q. Anyone know where/when ROT13 originated?

---CUT---

main()
{
  unsigned char buf[1024];
  int cc;
    while((cc=read(0, buf, sizeof(buf)))>0)
    {
      register int t;
        for (t=0; t<cc; t++) {
            if ((buf[t]>='a' && buf[t]<='z') || (buf[t]>='A' && buf[t]<='Z')) {
                buf[t]+=13;
                if ((buf[t]>'z' && buf[t]<'z'+14) || (buf[t]>'Z' && buf[t]<'Z'+14)) buf[t]-=26;
            }
        }
        if(write(1, buf, cc)!=cc) exit(1);
    }
    exit(0);
}

---CUT---

-----------------------------------------------------------------------------
        .    | Julian Assange, Computer Security Consultant.
    _--_|\   | Australian Data Security Organization. Tel: (+61 3) 752 2883
   / ADSO \  | 26a Franics Crescent Frentree Gully,   FAX: (+61 3) 752 3432
   \_,--._/  | Victoria 3156, Australia.  PGP: key-server@elvis.apana.org.au
         v   | RFC822: proff@elvis.apana.org.au, security@elvis.apana.org.au
-----------------------------------------------------------------------------
