Path: msuinfo!agate!spool.mu.edu!uunet!haven.umd.edu!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Newsgroups: alt.privacy.clipper,sci.crypt,sci.skeptic
Subject: Re: CDs as one time pads
Date: 20 Jun 1993 16:03:51 -0400
Organization: University of Maryland, Baltimore County Campus
Lines: 75
Sender: olson@umbc.edu (Mr. Bryan G. Olson; CMSC (G))
Distribution: world
Message-ID: <202fr7INN1eo@umbc7.umbc.edu>
References: <1vi6kb$p0p@news.intercon.com> <strnlghtC8q6Hr.82E@netcom.com>  <WCS.93Jun16193549@rainier.ATT.COM> <pooka.740280314@access>  <1volbcINNcae@twain.ucs.umass.edu> <TK.93Jun17105006@entropy.ai.mit.edu>
NNTP-Posting-Host: umbc7.umbc.edu
Xref: msuinfo alt.privacy.clipper:926 sci.crypt:17400 sci.skeptic:46814


In article <TK.93Jun17105006@entropy.ai.mit.edu>, tk@ai.mit.edu (Tom Knight) writes:
|> 
|> Arrrgh.  Once more with feeling.  You need not use ONE CD as the one
|> time pad -- you can XOR *many* CDs and use the result as a one time pad.
[...]
|> If you use the least significant bits of the data, the entropy, after
|> XORs will be acceptably high
[...]
|> Of course, you don't really have a one time pad when you are done with
|> this, but you do have a very secure encryption system, and one which
[...]

Tom Knight has already posted that this is not a true one-time-pad, 
and is nowhere near as secure.  He is right about both, and here is 
how to break the proposed cipher.

As I understand this system, it takes, around 10,000 C.D.'s and extracts 
the low order bit of each sample to form bit strings like:

CD1= 1,1,0,0,0,...
CD2= 1,0,0,1,1,...
 .
 .
 .
CD10000= 0,0,1,0,1,1,...

The key will be a 10,000 bit vector K= K1,K2,...K10000, and we would
encrypt the plaintext as:

Cyphertext = Plaintext XOR (CD1*K1) XOR (CD2*K2)...XOR (CD10000*K10000).

Each bit of K tells whether to include the corresponding CD in the pad.
There are 2^10000 possible keys, plenty for a secure cipher, but:  

We can find CD1,CD2...CD10000 in record stores.  
Next, suppose the cryptanalyst can guess a little more than 100000 bits 
of corresponding plaintext for some ciphertext.

Now each bit becomes a matrix entry in:

      -           - 
     | CD1         |
     | CD2         |
     | .           |
 K * | .           | = Plaintext XOR Ciphertext 
     | .           |
     | CD10000     |
      _           _ 

Where the CD's and the texts are truncated after the known portion.
This can be solved by Gausean Elimination, under mod 2 arithmetic.  We
would generally need a little more than 10000 bits to get a unique 
solution.  ( Exercise: how many ? )

The guessed Plaintext does not need to be continuous.  For example, if
we know that the high order bit of each byte is 0 (as in ASCII text), we
could use these bits and the corresponding bits from the CD's.


Conclusions: 
This system is weak.  
Be careful designing ciphers.
Linear=Death. (with very rare exceptions)
Don't write "Arrrgh.  Once more..." unless very sure of one's self.

Finally, we need precise terminology for the ideally secure OTP.  I
would like to reserve the term one-time-pad for this, but as pooka
argued in another post, any pad used once could be given this name.  
Perhaps we should call the real thing the "Truely Random OTP".

Bryan Olson
olson@umbc.edu
Outlaw Cryptology and only outlaws will XTTE RPTA ZCRD DV.
Can anyone tell me the source of this quote ^ ?
