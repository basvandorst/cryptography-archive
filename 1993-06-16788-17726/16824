Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!linac!att!att-out!walter!qualcom.qualcomm.com!unix.ka9q.ampr.org!karn
From: karn@unix.ka9q.ampr.org (Phil Karn)
Subject: Re: pgp
Message-ID: <1993Jun3.065929.1120@qualcomm.com>
Sender: news@qualcomm.com
Nntp-Posting-Host: unix.ka9q.ampr.org
Reply-To: karn@servo.qualcomm.com
Organization: Qualcomm, Inc
References: <3m1a5B5w165w@sizone.jaywon.pci.on.ca> <neuhaus.738920674@vier>
Date: Thu, 3 Jun 1993 06:59:29 GMT
Lines: 59

In article <neuhaus.738920674@vier>, neuhaus@vier.informatik.uni-kl.de (Stephan Neuhaus (HiWi Mattern)) writes:
|> Nevertheless, I think that you should never, never make your private
|> key accessible, encrypted or not.  The problem I see is that if
|> anybody gets hold of the encrypted key, and if they subsequently crack
|> the pass phrase, they can read *all* your encrypted communications.

Some thoughts:

Many people agree that it's a good idea to encrypt as much of your
traffic as possible, even when it's non-sensitive, to help make
encryption on the networks the rule rather than the exception.  After
all, when hiding your needles it's always good to make the haystack as
big as possible.

This is one of the nice things about public key cryptography.  Even on
a not-fully-trusted machine (e.g., a public-use workstation), it never
hurts me to encrypt my outgoing messages (though it may not help if
the machine is in fact compromised).  The machine has my plaintext
anyway, and the key it encrypts with is already public.

But every time I *sign* an outgoing message or *decrypt* an incoming
message on such a machine, I take a far greater risk. If I were to
type my pass phrase into a machine that were in fact compromised, I'd
effectively disclose not only one particular message (which may not be
all that sensitive) but every other message that ever was or will be
encrypted with that key pair, regardless of where it was encrypted.

This is not acceptable.

One idea that occurred to me a while back is to move all RSA secret
key operations out of PGP to a palmtop computer (e.g., HP-95) that
communicates with the host computer via a local serial link. Most of
PGP, including IDEA encryption/decryption, MD5 hashing, RSA public key
operations and public key database maintenance would remain on the
host computer.  But the secret key and operations that use it (signing
MD-5 hashes or decrypting incoming IDEA keys) would reside solely on
the palmtop, which you could carry with you and safeguard when not in
use.

The palmtop would effectively emulate a RSA "smartcard". You might
type your passphrase directly into it once at startup to decrypt the
stored secret key, retaining the plaintext key in RAM so it could
respond automatically to each subsequent request from the host.  This
could make decryption and signing completely automatic and transparent
to the user on the host.  The palmtop *should* beep and/or display a
counter to alert the user whenever it is being used to guard against a
network-based attack through the host computer.  Various "zeroize"
features could be built in to destroy the plaintext key.  Powering off
the unit would do it automatically, but there could also be timeout or
"panic key" features similar to those in Norton's DISKREET utility for
DOS.

The only drawback I can see to this idea is that RSA secret key
operations are notoriously compute-intensive, and palmtops are
notoriously slow. But I think it's worth a shot. Comments?

Phil


