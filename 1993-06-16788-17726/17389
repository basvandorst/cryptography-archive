Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!ux1.cso.uiuc.edu!newsrelay.iastate.edu!news.iastate.edu!tbird.cc.iastate.edu!explorer
From: explorer@iastate.edu (Michael Graff)
Subject: Re: The impending PGP key distribution logjam
Message-ID: <explorer.740519852@tbird.cc.iastate.edu>
Sender: news@news.iastate.edu (USENET News System)
Organization: Iowa State University, Ames IA
References: <PCL.93Jun4150854@rhodium.ox.ac.uk> <8m4Pzfj024n@sktb.demon.co.uk>
Date: Sat, 19 Jun 1993 19:57:32 GMT
Lines: 60

pla@sktb.demon.co.uk ("Paul L. Allen") writes:

>It seems to me that the solution to these problems has already been found,
>and then discarded - alt.security.keydist.  Unfortunately, after some initial
>traffic this group seems to have ground to a halt because of a common
>misconception.

The problem with a.s.k is that it sent out keys to LOADS of sites, most of
which cared little for the keys contained.  Also, there is no guarantee that
any given site will carry it, so all downstream sites loose.

> ... This minimises the traffic from keyservers without
>significant overload on a.s.k.  I assume that servers already automatically
>scan a.s.k, but a useful extension would be for one master server to post
>modified keys to a.s.k (note, it would have to check that keys have
>actually been modified both to minimise traffic when someone uploads their
>full keyring and also to eliminate loops).

The server do not scan a.s.k, and do not post there.  Also, there is no real
``master server''  -- they are mostly peers although if drawn in a tree it
tends to have a central cluster with a few ``leaves'' on it.

>We *could* dispense with a.s.k if key-servers implemented a command to
>fetch all keys which had been modified since a certain date, but as the
>number of PGP users grow a.s.k will be more efficient in net bandwidth.
>Even so, a server command for keys modified since <date> would still be
>useful for people who go on holiday for longer than their site's news-
>expiration period - they wouldn't then have to get a full keyring on their
>return.

Done.  See the latest help file from pgp-public-keys@pgp.iastate.edu -- it has
a ``last n'' where n is in days.

>The only drawback I can see is PGP's own key-handling system.  This will
>become unacceptably slow as the number of keys increases - I suspect
>that a new keyring structure will be required.  My tentative thoughts
>in this direction are to make keyrings indexed files (rather than compute
>the index on the fly at the start of the session), and separating the
>user id into separately-indexed fields of (say):

Me too.  There was some talk of using gdbm, but it will not work as is since
it is internally dependant of the writing hosts byte order.  In other words,
if I write a pgpkeys.db file on a NFS server's drive, I want to be able to
read it from a Sun, SGI, PC, DECstation, etc.

>We both agree here.  The original mechanisms became unwieldy when the number
>of keys grew from tens to hundreds.  The new mechanism will probably not
>survive past the thousands.

Spoofing is possible in any environment.  A system admin can stick a key into
your ring or remove one from it.  DNS is not a good choice for a key server,
and I personally see no real solution for some time.  It would be very easy to
set up a UDP based server for the folk on the Internet, or for those who wish
to run such a creature internally.

-- 
Michael Graff                 <explorer@iastate.edu>   Speaking for myself, not
Project Vincent               Voice: (515)294-4994     for ISU or the ISUCC
Iowa State Univ Comp Center   Fax:   (515)294-1717
Ames, IA  50011          -=*> PGP key on pgp-public-keys@pgp.iastate.edu <*=-
