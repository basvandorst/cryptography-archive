Path: msuinfo!uwm.edu!caen!batcomputer!not-for-mail
From: newman@TC.Cornell.EDU (Bill Newman)
Newsgroups: sci.crypt
Subject: a bit of cryptological hubris in _Computer Shopper_?
Date: 23 Jun 1993 14:28:36 -0400
Organization: Cornell Theory Center
Lines: 46
Message-ID: <20a7ck$g5o@theory.TC.Cornell.EDU>
NNTP-Posting-Host: theory.tc.cornell.edu
Summary: "Tech Section" gives trivial algorithm, claims it's secure

I was distracted from my search for cheap SIMMs in 
the July 1993 _Computer_Shopper_ by David Stafford's
"Tech Section" column.  He implements a cipher based on XOR-ing
your text with the lower 8 bits of the output of a 32-bit
congruential pseudorandom number generator, and asserts
that using two passes (encrypting first with one PRNG seed value,
then another, without changing the PRNG modulus or multiplier)
will make the encrypted output "resistant to
all but the most determined code-breaker" (see context below)
even with a known-plaintext attack, since he assumes a brute-force
attack.

If the cryptographer spent a few days in the 
library -- less work than intercepting the message
and getting some known plaintext? -- he might find Lagarias'
article in _Cryptology and Computational Number Theory_,
edited by Carl Pomerance (1990).  Lagarias references Knuth (1985)
"Deciphering a linear congruential encryption", IEEE Trans.
Inform. Theory IT-31, 49-52, for the problem of finding
the seed from the more-cryptographically-secure high bits of
a linear congruential RNG
when the modulus is known to be 2^N.  I haven't read
the Knuth article, so I actually don't know how the algorithm
would generalize to double encryption; however, it doesn't look to me 
like it would take "the most determined code-breaker" to defeat this
system..

  Bill Newman
  newman@theory.tc.cornell.edu

PS. Here's the context for the quote above: 
		While it isn't entirely unbreakable (in theory, any
	scheme short of a one-time pad can be broken), using
	a 64-bit key makes it resistant to all but the most
	determined code-breaker.  It is more than good enough
	for casual use.  If any cryptographers out there can spot
	a weakness in this approach, I would like to hear from
	you. [I'm just a chemist, but I wrote him a letter.:-)]
		Another advantage is that this method can be
	easily applied to a continuous data stream.  For example,
	one company might send continuous stock bids to a branch
	office via modem.  These could be encoded and decoded on
	the fly.  Even if the messages were intercepted, the time
	required to break the code (if it could be broken at all)
	and decrypt the message, would be so long that the bids
	would be out of date and worthless.
