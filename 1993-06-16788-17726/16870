Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!sdd.hp.com!ncr-sd!npg-sd!claborne
From: claborne@npg-sd.SanDiegoCA.NCR.COM (Chris Claborne)
Newsgroups: sci.crypt
Subject: Re: The impending PGP key distribution logjam
Message-ID: <6185@npg-sd.SanDiegoCA.NCR.COM>
Date: 5 Jun 93 20:05:15 GMT
References: <PCL.93Jun4150854@rhodium.ox.ac.uk>
Organization: NCR Corp., Network Products - San Diego
Lines: 151

In <PCL.93Jun4150854@rhodium.ox.ac.uk> pcl@ox.ac.uk (Paul C Leyland) writes:


>I can see a very large problem looming in the near future.  That
>problem is coming because of the success of PGP in spreading to users
>around the world.  Put simply, unless we get a distributed public key
>service, we are going to be swamped by the sheer number of keys in
>existence.

>Comments and criticism of the proposal described below is welcome, as
>are volunteers who wish to implement it.  Please post your comments
>for public consideration, rather than sending personal email.

>=============================================================================

   I would love to volunteer but there is a problem that needs to be
solved in my country (USA) first.  The small matter of copyright needs to 
be address for RSA before a large scale effort can be made to standardize 
and grow the PGP support infrastructure.  I am not so sure that the 
"real" owner of the RSA copyright isn't NSA.  Why would Public 
Key Partners (PKP) refuse to license RSA?   

   I propose an effort to first get NSA to release RSA and to relax the
laws on crypto.  Why should they do this???  It's easy, they work for us!
We are the customer of government!  They arn't an entity unto themselves!
The Clinton administration is pushing EFT, and an electronic superhighway
for data.  This can't evolve without secure communications inside AND
outside the US.  I like the explanation "encryption is nothing more 
than putting an electronic envelope around your message".  This
technology has to be freed up so we can get on with it.  I'm not a criminal,
I just want to know that the message that I receive from my business
partners, customers, and other stakeholders are private and that the
signatures are their signatures.  One more comment and then I will get 
on with the rest of my reply.  The City wanted to put a school next to 
my friends house, the owner of the property and local citizens fought it
but all the government had to do was go in, pay the appraised value and 
take it.  I'm not asking for a revolution... Or am I?


>The manner by which a PGP user has obtained the public key of another
>has closely paralleled the way in which an internet hosts has found
>the IP address of another host whose name is known.

   You state some good points about moving public keys around. One 
of the pieces that should be added to the list is a secure 
infrastructure.  Currently, keys received by the public key servers
is ok if it has "known" trusted signatures.  I propose the concept
of automated "notary" servers.  These servers would keep a list of
trusted signatures to decide if it should add it's signature to the 
list of signatures on a public key certificate.  Each company, 
university, etc, should have a "notary server".  All one would 
have to do is work through a trusted notry in order to verify public
keys.  

   In this scenario I would go to a person trusted by my company's
notary server and have her sign my public key and then forward that key
to our notary and others as needed.  I like the decentralized grassroots 
"guerrilla style" key distribution method as apposed to PEM which is 
quite a bit more structured.  The key will be to enhance this style 
with automation and "human notaries".

>On a very small network, a simple list local to each machine,
>/etc/hosts, is adequate.  For a very small number of PGP users, a
>simple personal public key ring is adequate.

>In both contexts, very small means fewer than a hundred or so.

>On a moderate sized network, it is feasible to maintain a single hosts
>file and have it copied around, by rdist, or ftp, or NFS, or whatever,
>and keep only that master list up to date.  For a moderate number of
>PGP users, it is feasible to keep a master public keyring and have it
>copied around by email as is done by the present network of
>keyservers.  It is also feasible to make small-scale interrogations
>and updates (small scale meaning one or a few keys in a single
>transaction).

>In both contexts, moderate means up to a couple of thousand or so.

>In a very large network, it is quite infeasible to maintain a complete
>list, on any one machine, of every host on the network.  If nothing
>else, the turnover of additions, removals and modifications is too
>rapid.  As is well known, the Domain Name Service has addressed this
>problem by setting up a heirarchy of name spaces, with separate
>organizations being responsible for their part of the space.  Those
>spaces may themselves be split up and responsibility for them devolved
>to organizations capable of managing them properly.  To the best of my
>knowledge, PGP users do not have the analogous facilities available to
>them.

>In this context, very large ranges from a thousand to millions.

>In my opinion, the problem of distribution of PGP keys needs to be
>addressed seriously and in the quite near future.  Again, IMO, there
>*must* be set up a heirarchy of co-operating but autonomous servers.
>The heirarchy *must* be connected through its members communicating
>with, at the very least, their immediate superior and all their
>immediate subordinates.  For resilience, a member should also
>communicate with several of its peers and several of the peers of its
>superior.  Also for resilience, it is necessary that peers be able to
>(but not necessarily required to) carry the same set of keys.  For
>efficiency reasons, a member of the heirarchy should hold not only the
>public keys for which it has direct responsibility, but also a cache
>of recently requested keys.  The size of this cache should be
>site-dependent and may be zero if required.

>Access to the distributed key service must be possible by electronic
>mail in a manner similar to that used by the present key servers.  Not
>all machines requiring PGP keys are capable of using other forms of
>access.

>It may be appropriate, and further investigation is needed here, for
>other access methods to be introduced.  If it is possible for a
>program to interrogate a server in real time, as is possible for host
>name/address lookups to be performed, it would then be possible for a
>PGP implementation to fetch the public key as required.  Per-user
>public key rings would become unnecessary in this context, apart from
>their possibly greater efficiency of access or to override temporarily
>the global information.

>To forestall certain attacks, it must be possible to create
>ex-directory public keys, with the ex-directory flag protected by the
>corresponding secret key to prevent unauthorized modification.  Such
>public keys would never be stored in a key server which adheres to the
>standard behaviour.

>For use on the Internet, there should be at least two RFC's describing
>PGP, in my opinion.  The first should describe the PGP protocol and
>externally visible data structures to the extent that a competent
>programmer can write a utility which interfaces to PGP keyrings and
>PGP encrypted and/or signed data.  The second should describe the key
>distribution mechanism to an extent that a similarly competent author
>can write a key server which interoperates with other servers.

   If nothing else, a standard needs to be written so that it can be 
used to provide "interface hooks" allowing th end user to plug in the
prefered crypto program into a mail program.

   I would like my Compuserve mail program to allow me (in an options box) 
to enter the program name of my crypto program, syntax needed for encryption, 
decryption, signature, etc. This would be a step in the right direction
and wouldn't be dependant on just PGP and wouldn't require that we first
get permission to use RSA and other programs since it is only an open
hook for "legal" schemes.


                                    ...  __o
                                   ..  _`\<,_
chris.claborne@sandiegoca.ncr.com  ...(*)/ (*).                 CI$: 76340.2422
PGP Pub Key fingerprint =  A8 FA 55 92 23 20 72 69  52 AB 64 CC C7 D9 4F CA
Brought to you by your favorite public key server.

