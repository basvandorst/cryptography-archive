From jefft@netcom.com  Sat Jun  4 19:29:49 1994
Received: from netcom.com (netcom7.netcom.com) by scss3.cl.msu.edu (4.1/4.7)  id AA27617; Sat, 4 Jun 94 19:29:49 EDT
Received: by netcom.com (8.6.8.1/SMI-4.1/Netcom)
	id QAA06157; Sat, 4 Jun 1994 16:29:56 -0700
Date: Sat, 4 Jun 1994 16:29:56 -0700
From: jefft@netcom.com (Jeff Thompson)
Message-Id: <199406042329.QAA06157@netcom.com>
To: ripem-dev@ripem.msu.edu
In-Reply-To: <9406032148.AA01486@MIT.EDU> (raylau@MIT.EDU)
Subject: Re: Patch to multiply routine problem?


> > > Warning: problem encountered with public key of "test":
> > >   Public key of 'test' is garbled--digest does not match.
> 
> My recollection is a bit vague, but the digest does not depend
> on the multiply routine, no?
> 
>  -Ray

I tried compiling the 1.3a2 I got and saw this too when it ran the 
test.  I removed the -y keyserver option and it worked.  I don't
know if this is related.

- Jeff
From jefft@netcom.com  Sat Jun  4 19:37:10 1994
Received: from netcom.com (netcom7.netcom.com) by scss3.cl.msu.edu (4.1/4.7)  id AA27654; Sat, 4 Jun 94 19:37:10 EDT
Received: by netcom.com (8.6.8.1/SMI-4.1/Netcom)
	id QAA07272; Sat, 4 Jun 1994 16:37:24 -0700
Date: Sat, 4 Jun 1994 16:37:24 -0700
From: jefft@netcom.com (Jeff Thompson)
Message-Id: <199406042337.QAA07272@netcom.com>
To: ripem-dev@ripem.msu.edu
Subject: RIPEM 1.3a3


I have mailed what I call RIPEM 1.3a3 to Mark Riordan.  The release has
a changes.txt which details what's new.  In summary:

Split DoEncipher into RIPEMEncipherInit, RIPEMEncipherDigestUpdate,
RIPEMEncipherUpdate and RIPEMEncipherFinal to allow processing arbitrary
input by parts.  RIPEMEncipherDigestUpdate is used used for the first
pass to digest the input for writing the signature in the header, then
the input is rewound and RIPEMEncipherUpdate is used to actually encipher.

Split DoDecipher into RIPEMDecipherInit, RIPEMDecipherUpdate and 
RIPEMDecipherFinal to allow processing arbitrary input by parts.

This means the RIPEM library no longer relies on FILE * for input
and output.  We can pass memory buffers, clipboard text, etc.  Also,
this gives the caller better control on passing input from multiple
sources at different times, such as email headers and multipart text.

Since we are now processing by parts, the size limit on input files
has been removed.  However, if stdin is used during enhance, RIPEM
still reads it into memory since it has to do 2 passes, so this is
limited by available memory.

Removed prencode since R_EncodePEMBlock and R_DecodePEMBlock are now
exported from RSAREF.

RIPEMDecipherFinal now returns the enhanced message mode, such as
ENCRYPTED or MIC-ONLY so the application can inform the user.

Next for me is to start documentation on the RIPEM API since I have
heard no major objections to its design.  I also can have an easier
go at RIPEM for Windows since I can now pass input directly from an
edit window without having to write it to a temp file.

- Jeff
