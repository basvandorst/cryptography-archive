Path: msuinfo!agate!howland.reston.ans.net!pipex!sunic!trane.uninett.no!nntp.uio.no!ifi.uio.no!thork
From: thork@ifi.uio.no (Thor Oddleif Kristoffersen)
Newsgroups: sci.crypt
Subject: Re: thought experiment on weak IDEA keys
Date: 12 Nov 1993 18:43:39 +0100
Organization: Dept. of Informatics, University of Oslo, Norway
Lines: 32
Message-ID: <2c0i0b$ne8@hymir.ifi.uio.no>
References: <TOM.93Nov9082617@amber.ssd.csd.harris.com> <CGDz4r.EEn@chinet.chinet.com>
NNTP-Posting-Host: hymir.ifi.uio.no


In article <CGDz4r.EEn@chinet.chinet.com>, schneier@chinet.chinet.com (Bruce Schneier) writes:
> In article <TOM.93Nov9082617@amber.ssd.csd.harris.com>,
> Tom Horsley <tom@ssd.csd.harris.com> wrote:
> >
> >At some other time, my random key generator might create "plugh" as the
> >random key. When I fix it with the xor pattern, I will wind up with "xyzzy"
> >as the fixed key, which, by the original hypothesis, is weak.
> >
> >I know it is dangerous to work from memory on something like this. Did I
> >perhaps miss something? Was the original article about a specific key
> >generation technique which would never randomly produce "plugh"?
> 
> Yes, the constant was specially-chosen as to not produce any weak keys.
> Remember, it is all right to have a 0 factor through one of the iterations;
> you just don't want a zero factor throguh multiple iterations.

I think the point that Tom missed is that the mask is applied
to the subkeys, not the user key, in which case he would have
been right.

The ADD and MUL operations are vulnerable to subkeys of 0 and 1
respectively. If the user key has lots of 0s and a few 1s, many
weak subkeys will be derived. But the mask makes the operations
vulnerable to other numbers that the key schedule cannot make
many of, regardless of the user key.

> 
> Bruce

-- 
Thor Kristoffersen   -   Oslo, Norway   -   thork@ifi.uio.no
