Path: msuinfo!uwm.edu!cs.utexas.edu!usc!news.service.uci.edu!cerritos.edu!arizona.edu!Violet.CCIT.Arizona.EDU!HEMMINGS
Newsgroups: sci.crypt
Subject: dongles - really a waste of resources
Message-ID: <00974D7A.3C91AF3C@Violet.CCIT.Arizona.EDU>
From: hemmings@Violet.CCIT.Arizona.EDU (bill hemmings)
Date: Sun, 31 Oct 1993 20:28:08 GMT
Reply-To: hemmings@Violet.CCIT.Arizona.EDU
Distribution: usa,local
Organization: University of Arizona
Nntp-Posting-Host: violet.ccit.arizona.edu
Lines: 47

> Subject: Re: Dongles                                                     
> From: nagle@netcom.com (John Nagle)
> Date: Sat, 30 Oct 1993 19:10:44 GMT
> Organization: NETCOM On-line Communication Services (408 241-9760 guest)

>  bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev) writes:
>> You are correct that every such protection can be defeated, if one
>> tries hard enough.

>    Depends on how much work the "dongle" does.  If you actually put
> part of the algorithm inside the "dongle", replacing it without rewriting
> the program can be difficult.  For example, if you encrypt the program's
> data files, and do all the encryption/decryption in the "dongle" itself,
> doing without the "dongle" will not be possible unless you can crack

This statement is patently ridiculous! You load a TSR BEFORE running the
program, that occasionally checks to see that the REPLACEMENT interrupts
it installed are still in place. As an example: you make a replacement
"dongle" that merely causes an "ACK" interrupt, when the port is written
to (you don't really care if the port is accessed through BIOS or written
directly - you only want to know the program went there). The ACK
interrupt is vectored to your TSR, where you perform whatever function(s)
the dongle did. You can build this replacement for < $10, and use it
on ANY "dongled" program. Only the TSR has to change.

By the way, just how much POWER do you imagine is available through the
printer port? Maybe 10mw? On that, you're forced to use CMOS, and that
means SLOW! You really want to wait all day for a file to decrypt?

> the encryption algorithm, or are willing to rewrite the program to use
> an incompatible file format.

You DO NOT need to modify the program or data files IN ANY WAY.

You DO NOT need to "reverse engineer or decompile the program in any way".
You merely observe it running. Pretty hard to prevent THAT.

>  The ultimate dongle is requiring a proprietary computer, like
> Intergraph used to do, but that approach is out of favor.
>
>                                        John Nagle

Dongles are stupid and wasteful for the majority of honest users. They
are trivially easy to defeat. If you think you have an unbreakable one
tell me how much you are willing to gamble on it!

             Bill Hemmings       hemmings@ccit.arizona.edu
