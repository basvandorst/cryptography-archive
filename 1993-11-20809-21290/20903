Newsgroups: comp.security.unix,comp.sys.sun.admin,alt.security,comp.security.misc,sci.crypt
Path: msuinfo!agate!ames!pacbell.com!amdahl!netcomsv!netcom.com!bbosen
From: bbosen@netcom.com (Bob Bosen)
Subject: Re: crypto calculators (Was: Re: Security Incident)
Message-ID: <bbosenCG1nKs.86q@netcom.com>
Organization: NETCOM On-line Communication Services (408 241-9760 guest)
References: <bbosenCFM4Cu.2q9@netcom.com> <CFMsyD.D6z@calcite.rhyolite.com> <bbosenCFz5nF.IEt@netcom.com> <2bdsil$q3h@sol.TIS.COM>
Date: Sat, 6 Nov 1993 00:19:39 GMT
Lines: 29
Xref: msuinfo comp.security.unix:820 comp.sys.sun.admin:24056 alt.security:12793 comp.security.misc:6019 sci.crypt:20903

mjr@tis.com (Marcus J. Ranum) writes:

>>The real point is that user accountability is lost due to the POSSIBILITY
>>of replay during the window of validity. It's called "plausible
>>denyability". Making up for this vulnerabily is near impossible if you
>>are relying on time-dependent authenticators on a large network.

>	Agreed. To get strong user authentication, you need to:

>Combine something the user HAS with something the user KNOWS
>------------------------------------------------------------

>	That way, if the doo-dad is lost, risk is minimized (and
>the user can't claim that they dropped their card and someone
>else made the withdrawal). If the user gives away their "secret"
>be it a PIN or password or whatever, then they haven't been
>compromised unless they give up their card as well.

>	The newer versions of the SecurID card have a PIN stripe,
>which permutes the changing number (presumably with another encryption)
>that can be mirrored at the server.

Right. I think you have to use a different PIN in order to get a different
permutation of the changing number. So, unforunately, users still end up
memorizing multiple secrets if they need to avoid replay on multiple
servers.....

-Bob Bosen-

