Newsgroups: sci.math,sci.math.symbolic,sci.crypt
Path: msuinfo!uwm.edu!news.moneng.mei.com!howland.reston.ans.net!pipex!uknet!pavo.csi.cam.ac.uk!emu.pmms.cam.ac.uk!rgep
From: rgep@emu.pmms.cam.ac.uk (Richard Pinch)
Subject: Primality testing: AMS Notices article
Message-ID: <1993Nov4.105108.14447@infodev.cam.ac.uk>
Followup-To: sci.math
Summary: An uncorrected version was printed: sorry
Keywords: Primality testing; American Mathematical Society Notices
Sender: news@infodev.cam.ac.uk (USENET news)
Nntp-Posting-Host: emu.pmms.cam.ac.uk
Organization: DPMMS University of Cambridge
Date: Thu, 4 Nov 1993 10:51:08 GMT
Lines: 72
Xref: msuinfo sci.math:56608 sci.math.symbolic:9713 sci.crypt:20876

I'm sorry to have to announce that, for reasons which are not yet clear
to me, my article ``Some primality testing algorithms'' appeared in the 
most recent issue of the Notices of the American Mathematical Society
in its draft form, without corrections suggested by those who read the
original version, and without my having approved the printed text.

A corrected version can be obtained by anonymous FTP from emu.pmms.cam.ac.uk
(131.111.24.1) as /pub/rgep/ptest.tex in AMS-TeX form.

I apologise to those who took the trouble to read the original and suggest
improvements or request corrections.

Richard Pinch

Two important changes are:

Under Mathematica, the final paragraph should read:

|Jerry Keiper has stated on behalf of Mathematica Inc.{} that revised code for
|{\tt PrimeQ} using a strong form of the norm-one Lucas test,
|which deals correctly with the two counter-examples to the
|present version, will be incorporated in version 2.3.
|``Likewise the anomalies in ProvablePrimeQ are being looked into
|(the one has been fixed already).''

The Conclusions section should read:

|All of the tests reviewed fall short, to some extent, of what I would look for.
|Among the features I regard as desirable are:
|
|\medskip
|
|\item{$\bullet$} Predictability.  If a ``random'' choice of bases is to be used,
|there should be an option to reset the random number generator to a consistent
|initial state.
|
|\medskip
|
|\item{$\bullet$} Consistency.  The same tests should be used in all routines in
|the package.
|
|\medskip
|
|\item{$\bullet$} Speed versus certainty.  The user should be able to specify
|the use of a fast test with possibility of error or a slower test with ``proof''
|status.
|
|\medskip
|
|\item{$\bullet$} Documentation.
|Whatever the method used, the documentation should make it clear
|what the algorithm is, what the known classes of exception (if any) are, and
|an indication of the probability of an incorrect answer.  No test which may
|accept composite numbers should be described as a test for primality.
|Axiom, Maple and Mathematica all make this claim.
|\item{} Primality certificates, where provided, should be described in sufficient
|detail for the user, at least in principle, to check it independently.
|
|\medskip
|
|\item{$\bullet$} Nomenclature.
|I strongly suggest that tests for probable primality should be called by names
|which reflect their status, such as {\tt IsProbPrime}.
|
|\medskip
|
|\item{$\bullet$} Power.
|Routines which use the strong test only should use as many bases as decimal
|digits in the input.
|\item{} On the basis of present knowledge, the best test would appear to be some
|combination of Miller--Rabin and Lucas tests.

