Path: msuinfo!uwm.edu!cs.utexas.edu!howland.reston.ans.net!spool.mu.edu!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!athena.mit.edu!fuellen
From: fuellen@athena.mit.edu (Georg Fuellen)
Newsgroups: sci.crypt
Subject: Re: Strong random number generators?
Followup-To: alt.flame
Date: 17 Nov 1993 01:30:16 GMT
Organization: Massachusetts Institute of Technology
Lines: 52
Distribution: world
Message-ID: <2cburc$rjg@senator-bedfellow.MIT.EDU>
References: <1993Nov5.183248.29604@cs.tcd.ie> <1993Nov8.010817.1@mcclb0> <EACHUS.93Nov15201920@spectre.mitre.org>
NNTP-Posting-Host: milanese.mit.edu

In article <EACHUS.93Nov15201920@spectre.mitre.org>, eachus@spectre.mitre.org (Robert I. Eachus) writes:
|> In article <2brum4$3rd@senator-bedfellow.MIT.EDU> fuellen@athena.mit.edu (Georg Fuellen) writes:
|> 
|>    > It should be stressed that one has to do the trick for a couple of
|>    > messages ("polynomially often"). Still, recovering the messages
|>    > will really impress those guys who devote their lives to factoring
|>    > large integers...
|> 
|>    No, the original Blum, Blum, Shub paper uses a proof by Goldwasser
|> and Micali to "amplify" any guessing strategy.  Once you can predict
|> anything about the next number in the sequence, say predict its parity
|> with a 51% chance of being correct, this can be used as a crowbar to
|> get a 99.99999...% reliable predictor of quadraticresiduacity.  And if
         ~~~~~~~~~~~~
|> you can predict quadratic residuacity, you can use that to factor N
|> (Rabin 1979).  Of course if you have the factors of N, you can
|> deterimine whether or not a value is a quadratic residue mod N, so any
|> successful guessing strategy is equivalent to factoring.

No. Every good mathematician knows that 99.99999...% equals exactly 100% :-)


georg
fuellen@mit.edu
The convex hull of all disclaimers made on usenet last year applies to this mess
age






P.S.
For those who want to understand the joke/flame, I replied to a  
slightly misleading statement from Robert, as given below. (Genetic-Algorithm 
folks thought that one single message-recovery is sufficient for factoring.)
But I guess I wasnt clear either, and insofar Robert is right. 

|> [...] Now for BBS, say I give you the modulus N, and the
|> number of bits used from each iteration*, and just for grins the first
|> few words of the plaintext.  If you can recover the message, you have
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
|> enough information to find the prime factors of N!  So if factoring is
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
|> hard, the BBS generator is cryptographically secure.  Similarly, any
|> test which shows that the ouput of the generator is not random can be
|> used to factor N.
|>
|>     * This number is usually less than log2(log2(modulus)) for BBS.
|> For example using 8 bits from a 512-bit modulus.

followups default to alt.flame
