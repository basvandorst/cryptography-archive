Path: msuinfo!netnews.upenn.edu!newsserver.jvnc.net!gmd.de!xlink.net!howland.reston.ans.net!europa.eng.gtefsd.com!gatech!swrinde!elroy.jpl.nasa.gov!ames!skates.gsfc.nasa.gov!militch.gsfc.nasa.gov!user
From: militch@strfleet.gsfc.nasa.gov (Peter Militch)
Newsgroups: sci.crypt
Subject: Key Length Question
Followup-To: sci.crypt
Date: 5 Nov 1993 16:08:22 GMT
Organization: NASA Goddard Space Flight Center -- InterNetNews site
Lines: 19
Message-ID: <militch-051193111951@militch.gsfc.nasa.gov>
NNTP-Posting-Host: militch.gsfc.nasa.gov
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

Hi, this is a question I have asked a few people in the past, but have not
been able to get a verifiable answer to:

If I have a message (lets say its a 1,000 characters long) and encrypt it
using a 56 bit key (K1), it seems to me that I can represent the original
message as a single vector V1, in a 1,000 dimension space and the new,
encrypted message, as another vector V2 pointing somewhere else in either
that same or a different 1,000 dimension space.  In effect, I would have
achieved some kind of non-linear cross product.

If this is a valid description, then re-encrypting V2 with a second 56 bit
key (K2) gives me yet another 1,000 dimension new vector V3.  Accordingly,
if I try a brute force approach to decrypting the message, there may be a
single 56 bit key (K3) somewhere in the universe that will get V3 back to
V1. This would mean of course that, from the brute force point of view,
double encrypting adds no additional security.

Since I know that double encryption is used and presumably only because it
does add value, my "model" must be wrong.  Can some-one explain to me why?
