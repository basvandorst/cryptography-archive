Path: msuinfo!agate!usenet.ins.cwru.edu!howland.reston.ans.net!cs.utexas.edu!uunet!math.fu-berlin.de!news.rrz.uni-hamburg.de!fbihh.informatik.uni-hamburg.de!bontchev
From: bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Newsgroups: sci.crypt
Subject: Re: Norton's InDiskreet
Date: 13 Nov 1993 20:27:20 GMT
Organization: University of Hamburg -- Germany
Lines: 82
Message-ID: <2c3fv8$8hm@rzsun02.rrz.uni-hamburg.de>
References: <1993Nov11.123743.1701@cs.aukuni.ac.nz>
NNTP-Posting-Host: fbihh.informatik.uni-hamburg.de
X-Newsreader: TIN [version 1.2 PL2]

Peter Gutmann (pgut1@cs.aukuni.ac.nz) writes:

[an excellent cryptanalysis of Diskreet]

> The DES routines themselves seem to be taken from a DES library rather than
> being written by Symantec/Norton.  Symantec provide the front-end, and Peter
> Norton provides the picture of himself wearing a pastel shirt and silly smir
> for the cover of the box.  This seemed to be a good indication - perhaps the
> DES implementation was by someone vaguely competent, which meant Symantec wo
> have little chance of screwing it up.

If you look inside DISKREET.SYS with a file browser, you can see:

"Portions of this software are provided under license
to Symantec Corporation by Maverick Software Inc.
Copyright 1990 Maverick Software Inc.
All Rights Reserved."

> it to the DES library.  The DES library then takes the password and reduces 
> to 64 bits by cyclically xor-ing in the full-length password into an 8-byte
> buffer initially set to all zeroes, ie:
>  
>     for( index = 0; *password; index++ )
>         buffer[ index % 8 ] = *password++;

How nice! So, if the password is a 8-character word repeated (e.g.,
"MISTAKESMISTAKES"), that would be equivalent to the null password,
huh?

And shouldn't the above be "^=", instead of "="?

> it's security.  Usually I check DES implementations against the NBS test dat

What is this can where can it be obtained from?

> The encryption itself uses DES in CBC mode with a fixed IV.  This means that

What is the value used for that?

> in combination with the tiny key space, it's possible to create a precompute
> collection of plaintext/ciphertext pairs and "break" most encrypted files by

Hm, no, I don't think so. The keyspace is still large enough. A more
practical attack would be brute force or a dictionary attack.

> reading the results out of a table.  Since the whole-disk encryption always
> begins with a fixed DOS FAT (file allocation table), this instant decryption

Doesn't it begin with a bogus boot sector? Should, IMHO, otherwise DOS
will go bananas when trying to access the volume...

> entirely feasible.  When encrypting files, [In]Diskreet stores the file name
> date, and various other pieces of information at the start of the data and a
> key check sequence at the end, allowing a quick and easy check for correct
> passwords.

How is the key check computed? Could you post the algorithm?

> In summary, there may be a possibly-correct DES implementation in there
> somewhere, but it doesn't help much.  [In]Diskreet will stop a casual browse
> but won't give you any protection at all against any serious attack.

The ultimate proof would be to write a Diskreet cracker. You can't
believe how many people still think that the -AV codes in PKZIP are
secure. No amount of argumentation will convice them, but quickly
producing a short ZIP archive "authenticated" to their own name -
which makes them just emit a short "Oh!" and shut up quickly... :-)

So, any takers to write a Diskreet cracker?

>              -- DOS 6 - Double your disk space: delete Windoze --

I've heard it in a different way - Double your troubles with
DoubleTrouble, er, DoubleDisk. :-)

Regards,
Vesselin
--
Vesselin Vladimirov Bontchev          Virus Test Center, University of Hamburg
Tel.:+49-40-54715-224, Fax: +49-40-54715-226      Fachbereich Informatik - AGN
< PGP 2.3 public key available on request. > Vogt-Koelln-Strasse 30, rm. 107 C
e-mail: bontchev@fbihh.informatik.uni-hamburg.de        22527 Hamburg, Germany
