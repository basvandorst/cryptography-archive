Newsgroups: sci.crypt
From: oml@eloka.demon.co.uk (Owen Lewis)
Path: msuinfo!agate!howland.reston.ans.net!pipex!demon!eloka.demon.co.uk!oml
Subject: Re: PGP is most secure) 
References: <1993Nov11.123743.1701@cs.aukuni.ac.nz> <gradyCGC77B.G5L@netcom.com> <mab.753257865@merckx>
Organization: Eloka Consultancy & Project Management
Reply-To: oml@eloka.demon.co.uk
X-Newsreader: Simple NEWS 2.0 (ka9q DIS 1.24)
Lines: 67
Date: Fri, 19 Nov 1993 20:42:47 +0000
Message-ID: <753302956snz@eloka.demon.co.uk>
Sender: usenet@demon.co.uk

In article <mab.753257865@merckx> mab@research.att.com writes:

>grady@netcom.com (Grady Ward) writes:
>....
>>Peter Gutmann (pgut1@cs.aukuni.ac.nz) wrote:
>>: People have mentioned Norton's [In]Diskreet here recently and I thought I'd
>>: have a look at it to see how good (or bad) its DES implementation really is
> (I
>>: didn't bother with the "fast, proprietary method", by all indications it's
>>: worthless).As the summary line in the header says, don't throw away your
> copy
>>: of PGP yet.  For those of you who have a copy and would like a quick look at
>
>>At a short talk to a user's group meeting on Wednesday, I reiterated the
>>claim that PGP is the most secure encryption program available for
>>users of pc that exists. I would love to have someone seriously dispute
>>this claim, but continuing evidence such as Peter's keeps strengthening it.
>....
>
>While you might be able to claim that the cipher used by PGP is "stronger"
>than the cipher used by Diskreet (based on things like the size
>of the keyspace, etc), the concept of "most secure" goes well beyond
>the underlying cipher.  Things like PGP encrypt individual files (and,
>I assume, data streams) on demand, while things like Diskreet present
>a file system interface that includes encryption as a basic feature.
>If you're concerned with the security of data files that you're sending
>over an insecure network to another machine, then you might be able to make
>the case the strength of the cipher itself is the most important aspect of
>the security of the system.  On the other hand, if you're interested in
>protecting data in a whole system against compromise e.g., in the event a
>disk is stolen, then the strength of the cipher is secondary to the question
>of what parts of the system are encrypted and what are left in the clear.
>PGP does not attempt to protect things like the cleartext of files before
>they get encrypted (how can it? it hasn't even been run yet), cleartext of
>deleted but not yet overwritten disk blocks, etc.  Then there are questions
>of key management (can a bad guy learn the key easily?), user interface (is
>it easy enough to use routinely? is it easy to inadvertently leave a file
>in the clear?), etc.  Only after you fully understand the answers to these
>issues is it appropriate to discuss the cryptographic properties of the
>underlying ciphers.  So a claim of "most secure" depends a lot on context,
>and can't be made without a lot of qualification.  It's all too easy to
>get lost in the cryptanalysis.
>
>Don't get me wrong, by the way - I'm not trying to say anything about 
>the relative merits of these two particular systems.  Indeed, I've never
>actually used Diskreet myself, and have no idea how well it does on any of
>these points.
>
>Ross Anderson had an excellent paper in this month's ACM Computer and
>Communications Security conference in which he gave numerous examples
>(mostly in the financial industry) of security systems in which the
>cryptography may have been strong but the non-cryptographic aspects of
>the system were so weak that it didn't matter.  I think this paper should
>be required reading for anyone who's responsible for designing or
>implementing a secure system, especially one over which he or she will
>not exert complete control once it's deployed.
>
>-matt
>

-- 

                               -= Owen Lewis =-
                                      @
      Tele/fax  +44-(0)794-301731   ELOKA   Consultancy & Project Management
                            oml@eloka.demon.co.uk
                        pgp 2.x public key on request
