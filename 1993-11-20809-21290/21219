Path: msuinfo!agate!doc.ic.ac.uk!uknet!pipex!howland.reston.ans.net!europa.eng.gtefsd.com!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson)
Newsgroups: sci.crypt
Subject: Re: QS - A New Cryptosystem
Date: 17 Nov 1993 19:33:40 -0500
Organization: University of Maryland, Baltimore County Campus
Lines: 173
Sender: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Distribution: world
Message-ID: <2ceft4INN7va@umbc7.umbc.edu>
References: <931116144136@oxted.demon.co.uk>
NNTP-Posting-Host: umbc7.umbc.edu
Keywords: QS



I'd like to thank George Foot for posting the desciption of
his QS cryptosystem.  Althogh the following comments are
mostly negative, this is an interesting idea, and better
than most systems which get posted here.

In article <931116144136@oxted.demon.co.uk>, 
georgefoot@oxted.demon.co.uk (George Foot) writes:
|>  
|>              A NEW AND IMPROVED PUBLIC KEY CRYPTOSYSTEM         
[...]
|> Moreover, theorems can be stated and proved which establish a 
|> precise relationship between the security of QS and that of RSA. 
|>

I'll show some problems with the proofs of security offered,
and a form of chosen plaintext attack on this system.

[...]
|> Each block of the message in turn is transformed into a block of ciphertext 
|> by calculating the Exclusive-OR of that message block with a block of 
|> "cryption", the block of cryption itself having been calculated in two 
|> operations as follows:
|>  
|> The FIRST OPERATION calculates the Exclusive-OR of the Instantial Key with 
|> the preceding block of ciphertext -- with the assumption for the first 
|> block of cryption that the preceding block of ciphertext was zero.
|>  
|> The SECOND OPERATION raises the result of the first operation to a low 
|> power (for example, to a power chosen arbitrarily to be three) modulo the 
|> bulk modulus -- thus producing a block of cryption.
|>  
|> The bulk modulus is a further modulus chosen for the property that it's 
|> factorization is unknown to both receiver and enemy  -- it may, for 
|> example, be the modulus of the Sender.
|>  

Note that the "bulk modulus" can not be the receiver's RSA modulus.

In the proof of theorem 1 (and 3) they assume the bulk modulus
is the receivers RSA modulus.

[...]
|> COMMENT 1.
|>  
|> The following theorem shows that an attack which can guarantee to decrypt 
|> any QS message that uses a given receiver's keys can (if a minor 
|> coprimality condition is fulfilled) also guarantee to break RSA that uses 
|> those same keys. 
|>  
|>  
|> THEOREM 1:
|>  
|> If there exists a small exponent J, an attack A, and a set of (public) 
|> keys Mr,Br with Br coprime to J, such that for all bulk moduli Mb,  
|> A can decrypt all QS ciphertexts constructed using the said  keys,  
|>  
|> Then A can decrypt any RSA message constructed using Mr,Br.
|>  
|>  
|> Proof:
|>  
|> Let H be an arbitrary block of an arbitrary such RSA  ciphertext. 
|>  
|> Consider H followed by a zero block to be a QS ciphertext formed using 
|> Mr, Br, Mr and J as recipient's modulus and public exponent and  as  bulk 
|> modulus and small exponent respectively  (and  an unknown  session   key).  
|>
|> This message may be decrypted  using  A, yielding a single block of QS 
|> plaintext S with the property  that S=((K MOD Mr)^J) MOD Mr for some 
|> session key K such that H=(K^Br) MOD Mr.  
|> 
|> Note that K<Mr since K is an RSA plaintext block.  Hence we know 
|> (K^J) MOD Mr and we know (K^Br) MOD Mr,  and since J  and Br  are coprime  
|> we  can deduce  K  by  the  extended  Euclidean Algorithm.
 
Attack A may be able to decrypt any QS message without being able to
decrypt the message used in the proof.  The proof depends on the 
special case where the two moduli are the same, a case which QS,
as described, does not allow.

Furthermore, this is a bogus type of security proof.  I could 
describe a system which reduces to simple substitution 99.99% 
of the time, but for certain keys uses RSA.  I could then show 
that an attack which can break any message in my system can 
also break RSA.

Finally, how the ciphertext is divided into blocks is critical
for the proof.  Since RSA moduli are not powers of 2, usually
the block is one bit (or more) shorter than the modulus, so 
that all binary blocks can be represented.  This means that S
will not be K^J mod Mr, but ( K^J mod Mr ) mod 2^blocksize.
They could argue that the two will be the same with high 
probabillity.

Can anyone show that any attack A which, with non-negligable
probabillity, decrypts a QS cyphertext in polynomial time implies 
an algorithm to break RSA in probabalistic polynomial time ? 


Theorem 2 proves a property which is not clearly desirable.

[...]
|>  
|> THEOREM 2:                  
|>  
|> Let H1,H2,...,Hm be a QS ciphertext (less its initial block) formed using  
|> Mb as bulk modulus and J as the  small exponent.   
|>  
|> Suppose  that T1,T2,...,Tm  is the corresponding plaintext, and is known 
|> to an attack A; moreover that this attack A  can  provide corresponding
|> plaintext  extension  Tm+1,Tm+2,... given  any ciphertext extension 
|> Hm+1,Hm+2,...  etc.  
|>  
|> Then A can deduce the session key K used in the message.
|>  
|> Proof:
|>  
|> This will be given for the case  J=3,  as it is readily generalisable 
|> for larger J, although computational requirements increase as J gets larger.
|>  
|> Consider three different two-block extensions of the ciphertext, and the 
|> corresponding plaintexts available from them using A. 
|>  
|> Let the first extension have Hm+1=0, Hm+2=0, the second have 
|> Hm+1=1, Hm+2=0, and the third have Hm+1=2, Hm+2=0.
|>   
|> Let Q0, Q1,and Q2 be the second block of the first, second, and third 
|> plaintext extensions respectively. 
|>  
|> Then Q0=(K^J) MOD Mb, Q1=((K+a)^J) MOD Mb, Q2=((K+b)^J) MOD Mb, where 
|> a may be either +1 or -1 and b may be either +2 or -2.  
|>  
|> Then since J=3, Q1=(K^3+3aK^2+3Ka^2+a^3) MOD Mb, and similarly for Q2.  
|>  
|> If temporarily we suppose a and b known, we may consider the three 
|> linearly-independent modular linear equations:
|>  
|> Q0=(R) MOD Mb
|> Q1=(R+3Sa+3Ta^2+a^3) MOD Mb
|> Q2=(R+3Sb+3Tb^2+b^3) MOD Mb
|>  
|> and solve them for R, S, and T. We then remark that if we had the 
|> correct values for a and b, and since J=3, 
|>  
|> R=(K^3) MOD Mb
|> S=(K^2) MOD Mb
|> T=K 
|>  
|> Since there are only four possible pairs of values for a and  b, we can 
|> simply solve all four sets of equations and see which give this 
|> relationship between R, S, and T. Hence we have found K.
|>  

The same sort of proof shows that if an adversary can insert
a few chosen blocks into the message, she can find the session
key K.  She inserts blocks with 0, 1, 2, 4 ect.  Then with the 
ciphertext she can find k^3, (K+1)^3 or (K-1)^3, (K+2)^3 or 
(K-2)^2, ect.  By trying all the ( + or - ) combinations she can
solve the sets of equations for candidate K's and test them.


Theorem 3, which I won't bother quoting, is like theorem 1.  
It assumes an attack which can decrypt any QS message, and then 
assumes it also works on an illegal message.


The idea of using low-exponent RSA in some form of block
chaining mode seems resonable.  Can anyone design one for
which they can offer better proofs of security ?

--Bryan Olson
