Path: msuinfo!uwm.edu!spool.mu.edu!umn.edu!csus.edu!netcom.com!netcomsv!wet!wet.COM
From: naga@wet.COM (Peter Davidson)
Newsgroups: sci.crypt
Subject: Re: Computer Shopper Challenge
Message-ID: <5828@wet.UUCP>
Date: 1 Nov 93 00:57:29 GMT
Sender: naga@wet.UUCP
Distribution: usa
Organization: Wetware Diversions, San Francisco
Lines: 39


 
In <1993Oct30.033130.1576@integrity.uucp>
edr@mpd.tandem.com (Ed Rupp) writes:
 
>Gee, the first thing I did with this was a frequency count.
>
>For SECRT1 we have:
>sp   e  t  i  n  o  h  a  r  2  $  w d0 cc \n  s  l e4 ae  u  * c
>119 92 83 79 68 67 66 65 59 58 57 56 54 54 54 53 53 52 52 52 52 51 ...
>
>And for SECRT2 we have:
>sp   t  e  o  a  r  n  i  s \n  p cb  c \0 b4 96  h \r d0 ^T 87  u  l  g
>154 91 86 79 77 71 70 70 67 62 62 60 60 59 58 58 57 56 55 55 55 55 55 55 ...
>
>Sure looks like a normal ASCII text file character distribution to me.
>So this implies an incredibly poor RNG, or possibly a broken
>implementation that causes the RNG to produce way too many zeroes?
 
I can confirm these frequency counts.  However, I also compiled the
CIPHER.C program which was posted, and encrypted a 11,447-byte file
of English text using "123" as the key.  The resulting frequency
count was (for the 15 most-frequent byte values):
 
0xE0 0xB6 0xD6 0xD1 0x39 0x94 0xE2 0x1E 0x2D 0xA0 0x13 0xE1 0x68 0xA9 0xAF
  63   62   62   61   60   60   60   59   59   59   57   57   56   56   56
 
In fact, the ciphertext seems fairly random (rather more so than
SECRT1 and SECRT2).
 
Conclusion:  SECRT1 and SECRT2 were not produced by the encryption
algorithm given in CIPHER.C.
 
Perhaps these two instances of ciphertext were produced by the
previous version of the program.  Has the author provided new
instances of ciphertext to crack which were actually produced
by the revised version?
 

