Path: msuinfo!uwm.edu!spool.mu.edu!sol.ctr.columbia.edu!usenet.ucs.indiana.edu!news.cs.indiana.edu!arizona.edu!Violet.CCIT.Arizona.EDU!HEMMINGS
Newsgroups: sci.crypt
Subject: frontal assault on the DES
Message-ID: <0097562B.09280114@Violet.CCIT.Arizona.EDU>
From: hemmings@Violet.CCIT.Arizona.EDU (bill hemmings)
Date: Thu, 11 Nov 1993 21:53:52 GMT
Reply-To: hemmings@Violet.CCIT.Arizona.EDU
Distribution: usa,local
Organization: University of Arizona
Nntp-Posting-Host: violet.ccit.arizona.edu
Lines: 29

Suppose we had millions of cipher-pairs of DES encrypted
data. Given all these inputs and outputs, any ONE pair
of which DEFINES the encryption key, how could they be used
to drastically reduce the time-to-solution of that key?

I've read many messages about "testing" encryption algorithms
for "random-ness" of output.  But here,  the problem IS NOT
input-to-output, but rather input/output-to-key. Is there not
anything on which to hang a solution, involving all this data?

Would it be useful to have the ability to generate a look-up
table, say on a CD-ROM,  containing several hundred million
partial products? Has anyone given this approach (combining 
some look-up, some calculation) serious thought regarding DES?

Regarding the alleged chip, costing around $13 or whatever, in
some proposed $1 million dollar machine taking 3.5 or 7 hours:

From what I know about the hardware it takes to emulate s-boxes,
plus about programmable logic arrays, I think I can say for pretty
damn certain THAT is what is being proposed - PALs, GALs, etc.

And, I don't think it would be anywhere near as cost-effective as
combing SOME look-up with the calculating. And it DOES NOT involve
designing/fabricating any chips, only PROGRAMMING them.

  Your comments?

           Bill Hemmings       hemmings@ccit.arizona.edu
