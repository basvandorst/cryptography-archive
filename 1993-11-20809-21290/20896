Path: msuinfo!agate!usenet.ins.cwru.edu!howland.reston.ans.net!math.ohio-state.edu!cyber2.cyberstore.ca!nntp.cs.ubc.ca!unixg.ubc.ca!unruh
From: unruh@physics.ubc.ca (William Unruh)
Newsgroups: sci.crypt
Subject: Re: Key Length Question
Date: 5 Nov 1993 17:11:48 GMT
Organization: The University of British Columbia
Lines: 24
Distribution: world
Message-ID: <2be1gk$2ld@nntp.ucs.ubc.ca>
References: <militch-051193111951@militch.gsfc.nasa.gov>
NNTP-Posting-Host: physics.ubc.ca

militch@strfleet.gsfc.nasa.gov (Peter Militch) writes:


>If this is a valid description, then re-encrypting V2 with a second 56 bit
>key (K2) gives me yet another 1,000 dimension new vector V3.  Accordingly,
>if I try a brute force approach to decrypting the message, there may be a
>single 56 bit key (K3) somewhere in the universe that will get V3 back to
>V1. This would mean of course that, from the brute force point of view,
>double encrypting adds no additional security.

>Since I know that double encryption is used and presumably only because it
>does add value, my "model" must be wrong.  Can some-one explain to me why?

No, in general there is not another 56 bit key.- Remember that there are
something like (2^1000)! maps of a 1000 bit vector to 1000 bit vector
and only 2^56 different keys. So not every map is the same as a 56 bit
crypt. To see that the system need not be commutative, take a 1 bit key
in a 2 bit text. The crypto with key=0 maps 1>2 2>1 0>3 3>0 ( the four
possible 2 bit messages are 0 1 2 3) while if key=1, it maps 1>2 2>3 3>0
0>3 (> means "to") Now applying key 1 twice does not give either of the
two maps, nor does applying any of the two keys in a row give a map with
one of the two keys.
Even if you ask for single vectors, there is no key that takes message
0 to message 2 for example.
