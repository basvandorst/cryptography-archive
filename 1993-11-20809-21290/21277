Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!olivea!apple.com!guest.apple.com!apple!mumbo.apple.com!gallant.apple.com!thunder.apple.com!user
From: pwd@apple.com (Patrick W. P. Dirks)
Subject: DH Key exchange and MD5 bit distribution?
Sender: news@gallant.apple.com
Message-ID: <pwd-191193161943@thunder.apple.com>
Date: Sat, 20 Nov 1993 00:19:43 GMT
Organization: Apple Computer, Inc.
Followup-To: sci.crypt
Lines: 31

Hi,

I'm considering a system to set up session keys between two parties
communicating over an open network using the Diffie-Hellman key exchange
method where the two sides A and B, having previously agreed to a modulo N
and a generator g, each pick a random number, say a and b, and send g**a
mod N and g**b mod N to the other side, respectively.  A then computes
[g**b]**a mod N (since A knows a) and B computes [g**a]**b mod N (since B
knows b), each one arriving at the session key K = g**a**b mod N without
ever sending K, a, or b over the net.

Two questions:

(a) Are there any new weaknesses known about this scheme [i.e. are there
any known approaches that don't require the computation of log base g of
g**a]?

(b) Does anyone know how large a and b need to be to ensure reasonably
security given today's processors [i.e. for how many bits does the discrete
logarithm problem become sufficiently difficult], and

(d) given this multi-hundred bit K, what's a good way to distill this into
a smaller session key, like a 56-bit DES key?  I was thinking of using MD5
on K first and then picking some part of the digest.  Is there any reason
to favor any part of the digest result?  The first 56 bits?  The last? 
Roughly every other bit?  Is any part of the digest likely to be more or
less well suited as a random session key, given that the digest is probably
going to be created from only a few hundred bits of data to begin with?

Thanks for any insights,
-Pat Dirks.
