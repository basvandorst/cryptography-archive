Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!europa.eng.gtefsd.com!uunet!pipex!warwick!pavo.csi.cam.ac.uk!nmm
From: nmm@cl.cam.ac.uk (Nick Maclaren)
Subject: Re: Strong random number generators?
Message-ID: <1993Nov7.120316.13374@infodev.cam.ac.uk>
Sender: news@infodev.cam.ac.uk (USENET news)
Nntp-Posting-Host: ely.cl.cam.ac.uk
Organization: U of Cambridge Computer Lab, UK
References: <1993Nov5.183248.29604@cs.tcd.ie> <1993Nov6.172242.1@admin.mcc.mass.edu>
Date: Sun, 7 Nov 1993 12:03:16 GMT
Lines: 42

In article <1993Nov6.172242.1@admin.mcc.mass.edu> palmer@admin.mcc.mass.edu (Chris Palmer) writes:
>rwallace@cs.tcd.ie (Russell Wallace) writes:
>> Could someone explain just what test a 'cryptographically strong' random
>> number generator (e.g. Blum-Blum-Shub) passes, that an LCG fails?
>
>The least significant byte of consecutive values taken from LCGs cycle
>through all values from 0..255 in a particular order ad infinitum.
>Needless to say, this is a bad thing. As for tests, there are several
>described in Knuth's "Semi-numerical Algorithms" volume. I recommend
>spectral analysis - the plotting of consecutive bytes as coordinate
>pairs on a 256*256 grid. Non-randomness shows up as diagonal stripes and
>lattice patterns. If you have a color or greyscale monitor you can plot
>frequency of coordinates as different colors or shades of grey, this
>makes the test much more sensitive. A good RNG should gradually fill the
>grid with snow. Hope this helps,

Hang on a minute.  You are describing an incompetently programmed LCG.
Equally well, I can write an efficient, cryptographically strong generator
that is no use whatsoever on any simulation that has ever been performed!
All I have to do is fiddle the scalings and say "well, it is asymptotically
good - pity about the results for numbers of less than 10**(10**10)".

A competently programmed LCG will have full-period uniformity for single
characters, pairs and so on up to at least 8-fold.  While it has never been
proven that this leads to small sample randomness, there is an immense
amount of empirical evidence to show that it does.  Yes, you can pick up the
excessive uniformity, but you need samples comparable with the square
root of the period (at the very least).

I have not run Peter Boucher's test, but intend to do so, and would regard
any generator that fails it for less than 10**12 characters as being
obsolete except for hand-held calculator work.  That is, assuming that
the test does just what the comments say and does not have any extra
subtleties.

Nick Maclaren
University of Cambridge Computer Laboratory,
New Museums Site, Pembroke Street,
Cambridge CB2 3QG, England.
Email:  nmm@cl.cam.ac.uk
Tel.:   +44 223 334761
Fax:    +44 223 334679
