Path: msuinfo!agate!howland.reston.ans.net!usc!elroy.jpl.nasa.gov!nntp-server.caltech.edu!mwmaier
From: mwmaier@cco.caltech.edu (Mark W. Maier)
Newsgroups: sci.crypt
Subject: Involutions: Pro/Con
Date: 1 Nov 1993 15:54:29 GMT
Organization: California Institute of Technology, Pasadena
Lines: 26
Sender: mwmaier@alumni.caltech.edu (Mark Maier)
Message-ID: <2b3bfl$mi4@gap.cco.caltech.edu>
NNTP-Posting-Host: alumni.caltech.edu
Summary: Why use involutions in product ciphers?
Keywords: DES, Product Ciphers

I have been reading the book "Cryptograhpy: A Primer" by Konheim, and a few 
other papers and am wondering about the use of involutions in DES and other
ciphers. While DES is usually refered to as a product cipher, it is really a
little more restricted. It is actually a product of involutions. An involution
is a self inverting transformation. This gives DES the property that its 
inverse is the forward algorithm with the keyed transformation run in
reverse order.

There is one obvious reason for using involutions, it saves silicon in a 
hardware implementation. It allows the transformation circuitry to do double
duty. Moreover, it apparently doesn't cost very much security, at least in a
theoretical sense, since the alternating group can be generated by sequences
of involutions. But why have virtually all other cipher designers adopted the
same structure, even those who explicitly target their algorithms to software
only? If the algorithm is to run only in software there is no reason to 
require self-inversion. Making silicon do double duty is a clear economy but
making code do double duty is unnecessary.

A cipher could be composed of a product of invertible, but not involutionary
transformations. Is anybody aware of well founded reasons that involutions are
particularly good for such transformations? 

E-mail replies can be sent to maier@ebs330.eb.uah.edu

Mark Maier

