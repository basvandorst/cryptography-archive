Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!sol.ctr.columbia.edu!news.kei.com!ddsw1!chinet!schneier
From: schneier@chinet.chinet.com (Bruce Schneier)
Subject: Re: thought experiment on weak IDEA keys
Message-ID: <CGDz4r.EEn@chinet.chinet.com>
Organization: Chinet - Public Access UNIX
References: <TOM.93Nov9082617@amber.ssd.csd.harris.com>
Date: Fri, 12 Nov 1993 16:00:26 GMT
Lines: 26

In article <TOM.93Nov9082617@amber.ssd.csd.harris.com>,
Tom Horsley <tom@ssd.csd.harris.com> wrote:
>A few days ago there was an article about the possibility of generating weak
>IDEA keys, and (if I remember it correctly, unfortunately the article has
>expired and I didn't save it) it said one way to insure the key was not
>suffering from this particular weakness was to xor it with some specific
>bit pattern.
>
>It didn't occur to me at the time, but that doesn't seem reasonable. If I
>happen to randomly select the weak key: "xyzzy" and then "fix" it by xoring
>it with the magic pattern, that will (just as an example) result in the new
>(strong) key "plugh".
>
>At some other time, my random key generator might create "plugh" as the
>random key. When I fix it with the xor pattern, I will wind up with "xyzzy"
>as the fixed key, which, by the original hypothesis, is weak.
>
>I know it is dangerous to work from memory on something like this. Did I
>perhaps miss something? Was the original article about a specific key
>generation technique which would never randomly produce "plugh"?

Yes, the constant was specially-chosen as to not produce any weak keys.
Remember, it is all right to have a 0 factor through one of the iterations;
you just don't want a zero factor throguh multiple iterations.

Bruce
