Newsgroups: sci.crypt
Path: msuinfo!agate!usenet.ins.cwru.edu!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!mnemosyne.cs.du.edu!nyx10!colin
From: colin@nyx10.cs.du.edu (Colin Plumb)
Subject: Fairness in crypto [Was: more computer shopper challenge]
Message-ID: <1993Nov15.101315.20355@mnemosyne.cs.du.edu>
X-Disclaimer: Nyx is a public access Unix system run by the University
 	of Denver for the Denver community.  The University has neither
 	control over nor responsibility for the opinions of users.
Sender: usenet@mnemosyne.cs.du.edu (netnews admin account)
Organization: Nyx, Public Access Unix at U. of Denver Math/CS dept.
References: <752376077snx@netacsys.com> <2bgtnv$mpm@aja.rand.org> <1993Nov8.172303.18937@convex.com> <1864.Nov1507.27.2493@silverton.berkeley.edu>
Date: Mon, 15 Nov 93 10:13:15 GMT
Lines: 28

20K of ciphertext-only with two different keys is a *lot* less than it
takes to break any half-decent cryptosystem.

For example, here's a challenge with IDEA.

For a fixed but unknown 128-bit user key, you are given all 2^64
plaintext/ciphertext pairs, except that for some two of them, you are
not told which plaintext corresponds to which ciphertext.

Find which plaintext corresponds with which ciphertext in a way that
gives you a probability of >=1/2+2^-64 of being correct, at a cost less
than that of searching the entire key space.

If it helps, reduce IDEA to 4 rounds instead of 8 and assume you are
given half of the key bits.

I can't do it; if you can, I think it's publishable as a new attack on IDEA.
(Admittedly not a terribly practical one, but it might generalize.)

If you can think of an advantage that hasn't been given to you, please
suggest it.  A related-key attack (you can get arbitrary plaintext/
ciphertext pairs for keys in any desired non-identity relation to the
unknown key) might get you somewhere.  That's also publishable.

In brief, keeping the algorithm secret is NOT necessary for strong
encryption.
-- 
	-Colin
