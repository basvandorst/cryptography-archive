Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!csulb.edu!csus.edu!netcom.com!jktaber
From: jktaber@netcom.com (John K. Taber)
Subject: Re: Pencil and paper encryption revisited (long)
Message-ID: <jktaberCGFnJv.7qr@netcom.com>
Organization: NETCOM On-line Communication Services (408 241-9760 guest)
X-Newsreader: TIN [version 1.1 PL8]
References: <2btn37$g59@garnet.msen.com>
Date: Sat, 13 Nov 1993 13:45:31 GMT
Lines: 63

Applied Computer Solutions (vsagen@garnet.msen.com) wrote:
: [...]
: >D:   Key Management
: [...]

: I am confused about the exact procedure at this point....

: In light of there being 2 calculations of R, when I do the first one,
: R <- 3.99 + (K[n]/100), do I immediately start using that R in the
: confusor formulae before I procede to calculate X?

: For that matter, do I plug in the just calculated X before I calc Y?
: And then the new Y before calculating R the 2nd time,
: R <- 3,99 + (K'(n+3)/100)?

: Other than this small procedural ambiguity, I find this encryption
: technique quite interesting.

: Thanks in advance.

: Ron Wilson
I'm also a bit confused.  I'm testing your suggested crypt, but using 
APL.  Since APL has 15-16 digits of precision, and your programmable 
calculators have (10?), am I going to get the same key stream that you do?

I think I can force ten digits, but that brings up the next question.  
Suppose you use a Radio Shack calculator and I use a Casio :  will we get 
the same key stream.  I have fooled with a calculator cipher before, and 
the problems were 2
1. No guarantee of compatible rounding and precision
2. Unacceptable expansion of text for real number keys

wrt 2 above, I'm sure it was just the crypto-system I was playing with, 
but far more digits had to be kept in encryption to ensure reliable 
decryption due to rounding and precision.  In fact, double the original 
plaintext.

Because of these problems, I had thought that crypto arithmetic was 
limited pretty much to integer arithmetic.  So your cipher will be really 
interesting if it can use real numbers successfully.

A suggestion:  to avoid message expansion, either use mod 26 so that the 
resulting ciphertext can be translated back into the alphabet, or use the 
clever Russian method for converting letters to numbers alluded to 
several weeks ago in this forum, and described by Kahn in _The 
Codebreakers_ pg 636.  It translates the highest frequency letters to 1 
digit, and the less frequent digits to 2.  The result is only a slight 
expansion of ciphertext.  I solve puzzle ciphers for fun, and I *hate* 
Polluxes because of all the digits I have to hand-enter.  Same goes for 
ACA homophonous.

The Russian transliteration (from Kahn):
            0 1 2 3 4 5 6 7 8 9
            -------------------
            e t a o n i r s 		(some permutation of this)
         8| b c d f g h j k l m 
         9| p q u v w x y z
The 1st row gets a single digit, while any 8 or 9 must be a 2 digit 
transliteration.  You can throw in any other symbol, like a period, in 
the last 2 columns of the last row.

-- 
John K. Taber                        jktaber@netcom.com
