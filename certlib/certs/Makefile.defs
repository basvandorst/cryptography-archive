
# pragma ident "@(#)Makefile.defs	1.22 96/01/29 Sun Microsystems"
#
# SKIP build environment
#

# Debugging flags
# 
# for user space programs
#U_DEBUG= -g
U_DEBUG=
#
# for kernel drivers
K_DEBUG= 

#
# Compiler selection (set to sunpro for SunPro compilers or gnu for GNU)
#
# SunOS 4.x compiler
COMP_OS4=gnu
#
# SunOS 5.x compiler
COMP_OS5=gnu
#
# ANSI-C Compiler names for sunpro or gnu
#
CC_SUNOS4_sunpro=acc
CC_SUNOS5_sunpro=cc
CC_SUNOS4_gnu=gcc
CC_SUNOS5_gnu=gcc
#
# C++ Compiler names for sunpro or gnu
#
C++_SUNOS4_sunpro=CC
C++_SUNOS5_sunpro=CC
C++_SUNOS4_gnu=g++
C++_SUNOS5_gnu=g++
#
# C compiler optimization flags
#
OPTIM_gnu	= -O6
OPTIM_sunpro	= -xO4
 
# ranlib...
#
RANLIB4 = ranlib
RANLIB5 = @echo ranlib
AR	= ar

# Static linking options
#
STATIC_SUNOS5_sunpro	= -nolib -lsunmath -lm -Bstatic -lC \
						-Bdynamic -lc $(OS_LIB)
STATIC_SUNOS4_sunpro	= -nolib -lsunmath -lm -Bstatic -lC -lansi -lcx \
						-Bdynamic -lc $(OS_LIB)
STATIC_SUNOS5_gnu = $(OS_LIB)
STATIC_SUNOS4_gnu = -static

#
# Install utility
#
INSTALL_OS4=/bin/install
INSTALL_OS5=/usr/ucb/install


# OS Platform defines
#
OPTS_SUNOS5	= -DSYSV -DSOLARIS2 
OPTS_SUNOS4	= -DSUNOS

# Kernel compilation flags
#
K_FLAGS_SUNOS5_sunpro	= -D_KERNEL -DSYSV
K_FLAGS_SUNOS5_gnu	= -D_KERNEL -DSYSV
K_FLAGS_SUNOS4_sunpro	= -DKERNEL -DSUNOS
K_FLAGS_SUNOS4_gnu	= -DKERNEL -DSUNOS

# OS Libraries
#
LIB_SUNOS5=-lsocket -lnsl
LIB_SUNOS4=

#
# Authentication usage
#
#AHOBJS		= MD5OBJ

# C++ Class Libraries 
#
CLASS_LIB_RW	= -lrwtool
CLASS_LIB_G	=

CLASS_sunpro	= RW
CLASS_gnu	= LIBG

# Libraries needed for optional posix calls
#
POSIX_SUNOS4	=
POSIX_SUNOS5	= -lposix4

# Templates Database Path
# 
D_TEMPLATES_sunpro	= -ptr$(SKIP_ROOT)/certs/lib/$(U_DIR)
D_TEMPLATES_gnu		=

# C++ archive librarian
#
AR_CC_sunpro	= $(C++) $(CFLAGS) -xar -o
#AR_CC_sunpro	= ar rv
AR_CC_gnu	= ar rv


# From here on you shouldn't need to change anything...
#
# Useful locations
#
SKIP_LIB=$(U_DIR)/skip_lib.a

#
# SKIP root directory
#
SKIP_ROOT:sh=                                   \
(                                               \
	for i in /etc/*;			\
	do if [ -f Makefile.defs ];		\
	then skip_root=`pwd`;			\
		break;				\
	fi;					\
	cd ..;					\
	done;					\
	echo $skip_root				\
)

MAJOR_OS:sh=				\
(					\
	os=`/bin/uname -r 2>/dev/null`;	\
	major_os=`expr $os : '\(.\)'`;	\
	echo $major_os			\
)

MINOR_OS:sh=					\
(						\
	os=`uname -r |sed -e "s/[0-9].//"`;	\
	echo $os				\
)


M_ARCH:sh=							\
(								\
	set `/bin/uname  -m 2>&-`; 				\
	march=`/bin/expr $1 : '\(sun[0-9]*\)' \| $1`;		\
	echo $march						\
)

K_ARCH:sh=			\
(				\
	kname=`arch -k`;	\
	echo $kname		\
)

# Derived Variables
#
CC		= $(CC_SUNOS$(MAJOR_OS)_$(COMP_OS$(MAJOR_OS)))
C++		= $(C++_SUNOS$(MAJOR_OS)_$(COMP_OS$(MAJOR_OS)))

OS		= $(OPTS_SUNOS$(MAJOR_OS))
OS_LIB		= $(LIB_SUNOS$(MAJOR_OS))
ARCH		= $(ARCH_SUNOS$(MAJOR_OS))
K_FLAGS		= $(K_FLAGS_SUNOS$(MAJOR_OS)_$(COMP_OS$(MAJOR_OS))) $(OPTIM)
AR_CC		= $(AR_CC_$(COMP_OS$(MAJOR_OS)))
D_TEMPLATES	= $(D_TEMPLATES_$(COMP_OS$(MAJOR_OS)))
OS_STATIC	= $(STATIC_SUNOS$(MAJOR_OS)_$(COMP_OS$(MAJOR_OS)))
POSIX		= $(POSIX_SUNOS$(MAJOR_OS))
RANLIB		= $(RANLIB$(MAJOR_OS))
INSTALL		= $(INSTALL_OS$(MAJOR_OS))

KARCH_OS5	= $(M_ARCH)
KARCH_OS4	= $(K_ARCH)

K_DIR		= $(MAJOR_OS)bin.$(KARCH_OS$(MAJOR_OS))
U_DIR		= $(MAJOR_OS)bin.$(M_ARCH)

OPTIM		= $(OPTIM_$(COMP_OS$(MAJOR_OS)))

CLASS		= $(CLASS_$(COMP_OS$(MAJOR_OS)))
CLASSLIB	= $(CLASS_LIB_$(CLASS))

COMM_INC	= $(SKIP_ROOT)/skip/include

SYSOS4		= $(COMM_INC)/skip_sunos.h
SYSOS5		= $(COMM_INC)/skip_sysv.h
SYSINC		= $(SYSOS$(MAJOR_OS))

# SCCS clean up utility
#
#SCCSCLEAN=[ -d SCCS ] && sccs clean

ARCH_SUNOS4:sh=echo "`arch`"
ARCH_SUNOS5=SYSV
