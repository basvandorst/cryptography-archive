MPJ2DEMO file encryption program version 1.00

WORDS TO THE WISE!

WARNING: I KNOW OF NO WAY TO RECOVER MPJ2DEMO ENCRYPTED DATA WITHOUT THE RIGHT
PASS PHRASE.  DON'T FORGET YOUR PASS PHRASE!  THERE IS NO BACK DOOR.

WARNING: ATTEMPTED DECRYPTION WITH THE WRONG KEY DESTROYS THE DATA.  If in
doubt, make a copy of the file and try the decryption on the copy, first.

WARNING: TEST THIS PROGRAM ON YOUR SYSTEM WITH NONCRITICAL DATA BEFORE USING
IT ON IMPORTANT DATA TO MAKE SURE THAT (1) IT WORKS CORRECTLY ON YOUR SYSTEM,
AND (2) YOU UNDERSTAND HOW IT WORKS.

This is a demonstration program that is intended to demonstrate the security
of the MPJ2 encryption algorithm. If you want to use it to protect your data
from unauthorized snooping, please use extreme caution. There is no code to
prevent damage to your data due to improper use or typos. A more user
friendly version is under development.

Syntax:
MPJ2DEMO [switches & filespecs...]
Switches start with / (not -), and are case insensitive.
  /? or /H Help: show this message
  /D Decrypt
  /E Encrypt (the default if /D not specified).
  /F Force: encrypt hidden, system, and read-only files also
  "/PPass phrase" Use Pass Phrase for encryption key (At least 4 characters).
  /N No compression -- must use with /D if used with /E.
  /Rn Use n rounds in encryption, where n is at least 5 but no more than 15.
  /S Recurse through subdirectories


If you use /N on encryption, you MUST use /N on decryption.
If you use /Rn on encryption, you MUST use /Rn on decryption with the same
value of n.

The pass phrase is case sensitive, and must EXACTLY match the one used for
encryption for decryption to work.  Although 4 character pass phrases are
accepted, these are not hard to guess.  At least 8 characters is recommended,
and longer and more random pass phrases are better.  Just don't forget the
pass phrase, or you won't be able to decrypt the files.

The encryption algorithm used is MPJ2, used in propagating cipher feedback
chaining mode (PCFC).  See MPJ2IEEE.TXT for technical details.  For source
code for the block cipher itself, see cryptmpj.h and cryptmpj.cpp.  MPJ2DEMO
creates or updates a file called RANDSEED.BIN every time it is run.  File
encryption/decryption is done to a temporary file first, then the temporary
file is copied over the original and the temporary file is erased. Therefore,
since a complete copy of the file exists at all times either fully encrypted
or fully decrypted, recovery from a power failure is usually possible unless
a write delay disk cache is in use.  The file name is not changed when a file
is encrypted or decrypted.  The file's date and time stamp is updated with
each operation.

Copyright (C) 1993 Michael Paul Johnson.  All rights reserved.  No warranty.
Any trademarks mentioned herein are the property of their respective owners.
For distribution and use only where the law allows.  Current regulations
restrict this strong cryptographic software to the USA and Canada.  To
register this shareware, please send $20 per copy and the name of this program
to:

	Mike Johnson
	PO BOX 1151
	LONGMONT CO 80502-1151
	USA

Support for registered users is available via Rainbow Missions BBS at
303-938-9654.  The author can be contacted at the above address and BBS, on
CompuServe at 71331,2332, or on the Internet at mpj@csn.org.


