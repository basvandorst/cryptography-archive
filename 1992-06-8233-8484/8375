Newsgroups: sci.crypt
Path: msuinfo!caen!hellgate.utah.edu!lanl!beta.lanl.gov!ttw
From: ttw@beta.lanl.gov (Tony Warnock)
Subject: Yet another Pseudo-Random bit stream
Message-ID: <1992Jun19.195438.4982@newshost.lanl.gov>
Sender: news@newshost.lanl.gov
Organization: Los Alamos National Laboratory
Date: Fri, 19 Jun 1992 19:54:38 GMT

   Here is a short Fortran function which will generate
   a long sequence of pseudo-random bits. There is a test
   driver with it. The bit stream may be modified in
   various ways as shown in the comments. The test program
   has no stop so it will run a long time.
 
   The generated sequence is k-distributed for all k; if the
   computer has long enough integers. The actual program
   breaks down after N*2^N bits where N is the largest integer
   that can be represented.
 
   Simple programs can generate rather complicated looking output.
   The sequence generated is not random (and is too slowly generated
   for real use) but it looks that way.
 
 
 
 
      PROGRAM ranbit
      INTEGER bit(64)
   10 CONTINUE
      DO 20 j=1,64
      bit(j)=iranbit()
   20 CONTINUE
      WRITE (*,'(5x,64i1)') bit
      GO TO 10
      END
      FUNCTION iranbit ()
      SAVE
      INTEGER i, j, k, l, m, n
      PARAMETER (n=3)
c     PARAMETER (n=5)
      DATA i, k, l, m /4*0/
      DATA j /0/
      i=i/2
      IF (i.EQ.0) THEN
c     IF (i.EQ.1) THEN
        j=j+1
        i=j
      ENDIF
      k=Mod(i,2)
      l=2*l+k
      IF (l.GE.n) THEN
        k=1
        l=l-n
      ELSE
        k=0
      ENDIF
      m=1-m
      IF (m.EQ.0) k=1-k
c     IF (m.NE.0) k=1-k
      iranbit=k
      END
