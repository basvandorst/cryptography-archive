Newsgroups: sci.crypt
Path: msuinfo!caen!sdd.hp.com!cs.utexas.edu!hermes.chpc.utexas.edu!jonathan
From: jonathan@chpc.utexas.edu (Jonathan Thornburg)
Subject: Re: DES Keysearch machines, explain
Message-ID: <1992Jun6.194147.7881@chpc.utexas.edu>
Followup-To: jonathan@einstein.ph.utexas.edu
Summary: use brute force
Keywords: DES break brute force exhaustive search Diffe Hellman
Sender: jonathan@einstein.ph.utexas.edu
Organization: U of Texas at Austin / Physics Dept / Center for Relativity
References: <1992Jun5.021256.7853@mont.cs.missouri.edu> <16774@ulysses.att.com>
Date: Sat, 6 Jun 92 19:41:47 GMT
Lines: 43

In article <1992Jun5.021256.7853@mont.cs.missouri.edu>,
UC445585@umcvmb.missouri.edu (John M. Kelsey) asked:
> 
>    Can someone explain to me how a keysearch machine is supposed to work?
> I'm assuming it's not just by trying every 56-bit DES key possible against
> the ciphertext, since even searching a million keys per second, you'd spend
> a couple thousand years searching before you'd exhausted the keyspace.

In article <16774@ulysses.att.com> smb@ulysses.att.com (Steven Bellovin)
replied:
>I suggest you look at the chapter on DES in Davies and Price's book
>``Security for Computer Networks''.  It explains all this in some detail.
>But the keysearch machine -- yes, it is brute force, using many processors.
>See the Diffie and Hellman paper ``Exhaustive Cryptanalysis of the NBS
>Data Encryption Standard'', Computer 10,6,74 (June 1977).  The NBS held
>a workshop to consider the question; it concluded that the machine was
>much more expensive than Diffie and Hellman said, and that it couldn't
>be built until 1990...  You might also want to look at Hellman's paper
>``DES will be totally insecure within ten years'', IEEE Spectrum 16,7,32
>(July 1979).

Just to give a synopsis, Diffie and Hellman argue as follows:

There are 2^56 = 7e16 possible DES keys.  Design a custom VLSI chip
that can do a single DES encryption (of a 64 bit data block) in
1 microsecond.  Build a machine using 1 million of these chips, at
an estimated 1977 cost of about 20 million dollars.  This will let
you try 10^12 keys/second, or all the keys in just under a day.

See the original Diffie & Hellman paper for details on how you know
when you have found the correct key, how to make the machine self-
checking for hardware problems, I/O considerations, and other details.

Note that so far as I know, the NBS responce to the Diffie/Hellman
attack disputed only the cost estimate -- the validity of the attack
itself, and of their design for doing so, don't seem to be in question,
rather just the question of just who could afford the chips.  This,
of course, is rather easier :-) today than in 1977...

- Jonathan Thornburg <jonathan@einstein.ph.utexas.edu>
  ***** temporary alternate addr <jonathan@hermes.chpc.utexas.edu> *****
  University of Texas at Austin / Physics Dept / Center for Relativity
  and (for a few more months) University of British Columbia / Astronomy
