Newsgroups: sci.crypt
Path: msuinfo!scss3.cl.msu.edu!mrr
From: mrr@scss3.cl.msu.edu (Mark Riordan)
Subject: Re: DES Keysearch machines, explain
Message-ID: <1992Jun8.180305.24998@msuinfo.cl.msu.edu>
Sender: news@msuinfo.cl.msu.edu
Organization: Michigan State University
X-Newsreader: Tin 1.1 PL3
References: <1992Jun8.100154.5417@gpu.utcs.utoronto.ca>
Distribution: na
Date: Mon, 8 Jun 92 18:03:05 GMT

mirage1@gpu.utcs.utoronto.ca (Robert Ames) writes:
: 
: I noticed this in some DES documentation:
: 
: >According to the DES standard, the low-order bit of
: >each  character in the key string is deleted.  Since
: >most ASCII representations set the high-order bit to 0,
: >simply deleting the low-order bit effectively reduces
: >
: >                                56     48
: >the size of the key space from 2   to 2  keys."
: 
: 2 to the 48th power is about 2.8E+14, and 2 to the 56th power is 7E+16.

I don't think that DES is often used that way.  For instance, Sun's
"des" program sets the high-order bit to give the byte odd-parity.
Thus, although the low-order bit of each byte of the key is ignored,
the information in it is retained.  I believe that schemes like 
this for ASCII DES keys are quite common.

Other schemes in use involve hashing the key, and presenting the
first 8 bytes of the hashed value to DES as the key.  (This approach
is much superior to the above.)

Either way, the number of possible keys is greater than 2^48.
With the simple-minded approaches to 8-character ASCII keys, of
course one may wish to take into account the fact that ASCII 
values less than 32 are almost never used.  
