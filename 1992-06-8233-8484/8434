Path: msuinfo!uchinews!ncar!zaphod.mps.ohio-state.edu!wupost!waikato.ac.nz!comp.vuw.ac.nz!cc-server4.massey.ac.nz!T.Drawneek
Newsgroups: sci.crypt
Subject: Re: IBM-PC random generator, source included
Message-ID: <1992Jun26.012015.20842@massey.ac.nz>
From: T.Drawneek@massey.ac.nz (Ted Drawneek)
Date: Fri, 26 Jun 92 01:20:15 GMT
Organization: Massey University, Palmerston North, New Zealand
X-Reader: NETNEWS/PC Version 2c
Lines: 29

Terry Ritter writes:

> Perhaps Mr. Drawneek would care to speculate on the magnitude of
> crystal oscillator nondeterministic phase shifts, and on the

Phase noise is a problem in communication receiver design, where you
want to mix (=multiply) the incoming signal with a local oscillator.
The perfect local oscillator has all its energy at one frequency.  Real
local oscillators show a spread of frequencies, due to phase noise.
This can and does degrade the performance of real receivers, which have
a bandwidth of typically 3kHz. Therefore if you took two of these
poorly designed oscillators and mixed their outputs,  you would get noise
out to at least 3kHz which you could digitize.

Of course these oscillators are designed to minimise noise.  From what I 
have read, phase noise seems to be more of a problem the more complex
the oscillator/synthesiser.  So to maximise phase noise - which is what
you would want to do with a random generator - I imagine you would
put together a complex assembly of crystals and mixers.  

I have no idea if this is the principle behind the devices Nico describes
however, and neither do I know how his program works.  How could such a
program be made to work using two oscillators?  The crucial thing would
be to find some function that depended on which oscillator "fires" first,
and to arrange for the two oscillators to "fire" simultaneously.  Phase
noise would make it uncertain which of the two did in fact fire first.

Ted Drawneek

