Path: msuinfo!caen!zaphod.mps.ohio-state.edu!samsung!uunet!mcsun!uknet!cam-cl!cam-cl!rja14
From: rja14@cl.cam.ac.uk (Ross Anderson)
Newsgroups: sci.crypt
Subject: Re: DES Keysearch machines, explain
Keywords: DES break brute force exhaustive search Diffe Hellman parallel engineering
Message-ID: <1992Jun9.155438.19130@cl.cam.ac.uk>
Date: 9 Jun 92 15:54:38 GMT
References: <16774@ulysses.att.com> <1992Jun6.194147.7881@chpc.utexas.edu> <1992Jun7.184408.8925@cs.cornell.edu> <1992Jun7.195721.29395@chpc.utexas.edu> <1992Jun7.215415.13075@cs.cornell.edu> <1992Jun8.145857.16906@cl.cam.ac.uk> <1992Jun8.192241.27599@cs.cornell.edu>
Sender: news@cl.cam.ac.uk (The news facility)
Reply-To: rja14@cl.cam.ac.uk (Ross Anderson)
Organization: U of Cambridge Computer Lab, UK
Lines: 110

In <1992Jun8.192241.27599@cs.cornell.edu>,  wayner@cs.cornell.edu (Peter 
Wayner) writes: 

> Garon and Outerbridge write in 1990 that they estimate that a one
> day long exhaustive attack would cost $100 million. They do not go
> into any of the details of designing the chip, but they estimate that
> it should be possible to construct one that can check 4 million keys
> per second and cost $25. (Cryptologia, July 1991).

Their actual figures are, for probability 1.0 of finding a key in a given
period of time:

1 day	$46,622,000
1 week	$ 6,664,000
1 month	$ 1,532,000
1 year	$   129,000

In fact if you're looking at using the machine more than once, the time
to watch is the average time, which is half the maximum time. So the
above $1.5m+ machine will take two weeks on average, which is what my
source claimed the government's machines need.

However, there's another issue here than the raw engineering; it's what
the customer wants, and that is peace of mind. Banks in particular are
the main users of DES outside the US government, and their main use for
crypto on retail networks is not to prevent fraud. Sophisticated fraud
teams would (and do) hit wholesale and international payment systems. 
Their main problem is trust.

Suppose you draw $100 from an ATM and then walk into the bank and deny 
that you made it?

Up to now, in the UK, banks have just maintained that their systems are
infallible. Until recently they got away with it too. Now however there
are hundreds of cases outstanding against them, where the claimants are
outraged at phantom withdrawals from their accounts.

This is really the banks' own fault as they got complacent and built 
some rotten systems which are easy to defraud. They may now take a long 
cold bath as lots of people chance it and deny withdrawals which they 
actually made.

It is clear that the banks' defence against such claims will be badly 
damaged by the Garon/Outerbidge article, especially as both of the 
authors work for the Canadian Imperial Bank of Commerce. The courts will 
no doubt assume that their article will if anything favour the banking
industry position and that construction of keysearch machines will 
therefore be even cheaper than they claim.

What should an engineer do in such a situation? I suggest that the best
way to approach the key length problem is as follows:

(1) Establish a security parameter.

	Ask the client what probability he will tolerate of an attack being
	successful. A financial institution will probably go for about 32
	bits or 4 billion to one.

(2) Establish a worst case opponent.

	Until recently we might have said a mafiosi with a $20m R+D budget.
	Since the breakup of the Soviet Union I would tend to say instead
	that the worst case is when the facilities of a major power are
	misused, whether for private gain or in an attempt to commit
	economic sabotage. So let's say the opponent has $1bn of kit and
	a year in which to use it.

(3) Establish a cover time.

	A bank may say that its systems will be replaced in 10-12 years
	at the outside. Double it. The ATM systems which were installed
	in the early 1970's are still with us; all the hardware and 
	software may have been replaced, but not at the same time, so the
	system design has not changed. So say 25 years, plus another 5
	years in which to resolve any outstanding lawsuits.

(4) Establish a discount rate.

	By how much do you believe the technology will get cheaper every
	year? 25%? 33%? 40%? We have to take the highest reasonable rate 
	here or the other side's lawyers will want to know why.

Taking all the above together, we get 32 bits from (1), a keyspace of 
12,000 times 2^56, or about 2^70, from (2), and 30 years at 40% or
about 2^21 from (3) and (4). 

This makes a total of 123 key bits which we will need on the Garon-
Outerbridge assumptions to provide a security parameter of 32 bits for 
30 years.

In other words, even IBM's shiny new systems (ICRF, 4753 etc) which
offer two-key, three-round encryption, are cutting it rather fine. With
112 key bits you can only offer a security parameter of 2^21 over 30
years on the above assumptions. There is very little margin for safety
against breakthroughs such as a quantum leap in switching speeds, or even
against a lawyer who can persuade a jury that to rely only on friendly
(Garon/Outerbridge) expert testimony during system design was negligent.

In much of commercial cryptography, the key issue is not security against
cryptanalysis but maintaining customer confidence. What many clients 
really want is peace of mind - not just that their systems will be secure, 
but that they won't get criticised, whether in the lawcourts or the press.

We can supply this peace of mind, at least as far as keysearch is 
concerned, by choosing a next generation cipher with at least 160 key 
bits. This will kill the keysearch argument dead. Leaving the argument 
open by sticking at 56 bits, or grudgingly going up to 80 or 96 or 
even 112 bits, will not deliver the goods,

Ross
