Path: msuinfo!caen!spool.mu.edu!uunet!mcsun!uknet!cam-cl!cam-cl!rja14
From: rja14@cl.cam.ac.uk (Ross Anderson)
Newsgroups: sci.crypt
Subject: Re: DES Keysearch machines, explain
Keywords: DES break brute force exhaustive search Diffe Hellman parallel engineering
Message-ID: <1992Jun8.145857.16906@cl.cam.ac.uk>
Date: 8 Jun 92 14:58:57 GMT
Article-I.D.: cl.1992Jun8.145857.16906
References: <16774@ulysses.att.com> <1992Jun6.194147.7881@chpc.utexas.edu> <1992Jun7.184408.8925@cs.cornell.edu> <1992Jun7.195721.29395@chpc.utexas.edu> <1992Jun7.215415.13075@cs.cornell.edu>
Sender: news@cl.cam.ac.uk (The news facility)
Reply-To: rja14@cl.cam.ac.uk (Ross Anderson)
Organization: U of Cambridge Computer Lab, UK
Lines: 82

In message <1992Jun7.215415.13075@cs.cornell.edu>, wayner@cs.cornell.edu
(Peter Wayner) writes:

> $20 million is nothing to a government defense agency, but ask
> yourself which would you rather have in _any_ sort of conflict: A DES
> machine or a F/18. Is there going to be anyone out there using DES? In
> Nicaragua? In Iraq? In the former East Germany? In Gus Hall's
> American Communist Party?

Fact: large numbers of DES chips were manufactured in the old Soviet empire.
East German computer company Robotron made them by the tens of thousands until
1989 and shipped them to Moscow, as has since been publicly admitted.

The public rationalisation for this was that the Soviet army used them in hard 
disk controllers for PC XT clones. If this was true, then NSA has a keysearch
machine with probability close to 1.

If on the other hand it was false, then it seems fair to suppose that the KGB
have a keysearch machine built from these chips.

Think how tempting the target is: with such a machine you can read a lot of US
government traffic, such as that encrypted with products conforming to Fed Std 
1027 for line encryptors.

You can also break the zone control master keys (interbank keys) on all
international eft networks which use the VISA/Mastercard protocols - these keys
are used daily in distinctive transactions to encrypt daily keys which
have odd 
parity, and so with about 8 such encrypted keys you can get the master
and unzip 
all the traffic between those two institutions.

I have also heard a salesman for a non-DES encryptor manufacturer claim
(a) that
he had been in a signals regiment and knew about such things and (b) keysearch
machines existed all right but the only problems were (c) that they were always
breaking down (d) that they took about two weeks to get a key out and (e) as a
result there's a big queue of user departments jostling for time.

The Diffie Hellman article predicted that _by 1990_ the cost of a keysearch 
machine would be about $20,000,000, and according to Garon and Outerbridge
they hit the nail on the head. Unfortunately, that prediction was for a machine
that could find one key per day, and not even NSA seems to build such machines.

However if you bear in mind that the average interbank key has never been
changed in over five years of use, it should be clear that a machine costing in
the low hundreds of thousands of dollars and solving a key in about a year
is threatening enough. It would be enough for you to decrypt people's PINs and
take millions from that bank's customers out of ATMs worldwide.

Undergraduates now make custom chips here as part of their projects and there's
no way I could assure you that none of these is a DES chip with an `increment
key, encryupt register A, AND register B, XOR register C, interrupt if zero'
instruction.

IBM salesmen have a habit of pouring scorn on people who raise the keysearch
issue. However one of IBM's biggest customers in the UK now has a problem -
they encrypt their customers' PINs and write them on their cards (no doubt
using DES, perhaps even triple DES). However the thieves just replace the
account number on the strip with one copied from a discarded ATM receipt, and
draw money from that account using the original PIN issued with the card. What
they should have done is add the account number to the PIN before encrypting,
but that's one of those things that are only obvious after the fact and which
inexperienced designers are quite likely to miss.

How could they be so stupid? Well, IBM's latest line of cryptographic products
(which took up a whole issue of the Systems Journal) are shipped to banks 
outside the USA without the control software. This means that the local SE's
have to design their own cryptographic protocols, typically after a one-week
course in crypto in the US.

Moral? Well, I wouldn't buy a system from someone who said his system was `good
enough'. Good security design comes from taking care and being cautious
about all
possible attacks; IBM's designs seem to come from a large number of business
compromises such as (a) needing something which was upward compatible from the 
3848 and (b) which could be made exportible by withholding a component
(software) 
which most prospective purchasers wouldn't miss but without which they are not
likely to come up with sound system designs.

Ross
