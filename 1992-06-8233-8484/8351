Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!cis.ohio-state.edu!daisy.learning.cs.cmu.edu!Marc.Ringuette
From: Marc.Ringuette@daisy.learning.cs.cmu.edu
Subject: Re: Trustworthy random number generation
Message-ID: <9206160242.AA11097@mail.cis.ohio-state.edu>
Sender: daemon@cis.ohio-state.edu
Organization: The Ohio State University Department of Computer and Information Science
Date: Tue, 16 Jun 1992 02:22:00 GMT
Lines: 24

> All you do is, have A and B each generate N random bits, exchange
> message digests of those bits, then exchange the actual bits, check
> the digests, and use the xor of them as the desired N random bits.

I earlier suggested using MD5 or any other message digest as a one-way
function for the purposes of this random-number exchange protocol.
However, I've been convinced that the security of this protocol
requires a "bit secure" function, which is more than is guaranteed by
most message digest functions.

Practically speaking, MD5 would still be a good choice, but you should
probably pad the message with some extra unused random bits to guard
against, for example, the message digest revealing the parity of your
random bit sequence.

A final nit:  our protocol should be modified to rule out the trivial
attack in which one of the parties echoes every message sent to it,
forcing the random number stream to be all zeroes.


[ Marc Ringuette | Cranberry Melon University, Cucumber Science Department  ]
[ mnr@cs.cmu.edu | 412-268-3728 |      ".surivorter erutangis a ma I"       ]


