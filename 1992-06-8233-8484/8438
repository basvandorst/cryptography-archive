Path: msuinfo!caen!sdd.hp.com!think.com!rpi!utcsri!eecg.toronto.edu!colin
Newsgroups: sci.crypt
From: colin@eecg.toronto.edu (Colin Plumb)
Subject: Re: IBM-PC random generator, source included
Message-ID: <1992Jun26.075957.20997@jarvis.csri.toronto.edu>
Organization: University of Toronto
References: <1992Jun24.184848.21881@cactus.org> <1992Jun25.033711.26770@massey.ac.nz> <2809@accucx.cc.ruu.nl> <1992Jun25.203230.6489@tamsun.tamu.edu>
Date: 26 Jun 92 11:59:57 GMT
Lines: 33

In article <1992Jun25.203230.6489@tamsun.tamu.edu> rdubbs@cs.tamu.edu (Roger B. Dubbs III) writes:
>Related question -- what possible attacks are there on a one-time pad?
>(Other than having a copy of the pad, that is...)

IF THE PAD IS TRULY RANDOM, then there are none.  It is flat-out not
possible to tell anything about the message except its length.

You can get a copy of the pad, bug one of the ends of the conversation,
or otherwise resort to subterfuge, but assuming unlimited access to
the channel only, you can't do a thing.

This is why one-time pads are interesting.

>Pardon my first post here, but -- Despite any possible shortcomings in Nico's
>RNG, are the random(?) numbers generated by it sufficiently random to
>work for a one-time pad?  It seems to me, that these numbers might not
>pass all statistical tests, and yet one couldn't reproduce them, which
>is the key to a one-time pad, is it not?

No, it's important that they be *completely* unpredictable for the
unconditional security promise to hold.  That is, if your message is n
bits long, each of the 2^n possible pads is equally likely and
uncorrelated with anything else in the world.  Otherwise, a cryptanalyst
might be able to say there's a 51% chance you said X and 49% you said
not-X.  This is not unconditional security.

The debate here is all about whether it's good enough, whether it's truly
random (or the randomness is shy by maybe 1 bit in a million, which is
good enough for practical purposes), or if it's actually probabilistically
predictible.  Finding a prediction of a non-random source is easy, proving
that there are none for a random one is hard.
-- 
	-Colin
