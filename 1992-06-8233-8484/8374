Path: msuinfo!caen!spool.mu.edu!agate!agate!phr
From: phr@soda.berkeley.edu (Paul Rubin)
Newsgroups: sci.crypt
Subject: Re: generating one-time pads
Message-ID: <PHR.92Jun19103354@soda.berkeley.edu>
Date: 19 Jun 92 15:33:54 GMT
Article-I.D.: soda.PHR.92Jun19103354
References: <em.708842732@topgun> <J7DkmB3w165w@hacktic.nl>
	<1992Jun19.074305.11826@qualcomm.com>
Organization: CSUA/UCB
Lines: 21
NNTP-Posting-Host: soda.berkeley.edu
In-reply-to: karn@chicago.qualcomm.com's message of Fri, 19 Jun 1992 07:43:05 GMT

In article <1992Jun19.074305.11826@qualcomm.com> karn@chicago.qualcomm.com (Phil Karn) writes:

   You know it's getting easier all the time to find off the shelf
   hardware to do these sorts of things. Recently I bought a Media Vision
   ProAudio 16 sound card for my PC. It includes stereo 44.1 Khz *16* bit
   (i.e., CD quality) A/D and D/A converters. I bought it at Fry's
   Electronics so I paid more than I should have, but it was still only
   about $270.

   Connect one of these things up to an FM receiver and digitize some
   noise and I'm sure you could extract some high quality random numbers
   from the low-order bits of the noise samples.

It's very, very hard to get good randomness from schemes like this.
See the RAND book "One Million Random Digits With 100,000 Normal Deviates"
(I may have the title slightly wrong) for details of a much more
elaborate scheme they used---and they *still* detected non-randomness.
I think there were some attempts at Bell Labs in the 80's to make a VLSI
random number generator using a noise diode and it also had
some non-randomess problems.  (One guy said jokingly that he
could improve the randomness by Huffman-compressing the "random" output).
