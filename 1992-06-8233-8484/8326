Path: msuinfo!uchinews!linac!att!pacbell.com!mips!zaphod.mps.ohio-state.edu!cs.utexas.edu!uunet!decwrl!waikato.ac.nz!aukuni.ac.nz!kcbbs!kc
Newsgroups: sci.crypt
Subject: Determining incorrect passwords  
Message-ID: <49907.1649228475@kcbbs.gen.nz>
From: Peter_Gutmann@kcbbs.gen.nz (Peter Gutmann)
Date: 13 Jun 92 13:51:47 GMT
Organization: Kappa Crucis Unix BBS, Auckland, New Zealand
Lines: 36

  
I've written an application which performs various types of encryption on,   
among other things, data blocks which contain all sorts of control   
information.  The problem is that when conventional-key encryption is used   
and a user enters an incorrect password, this control information is   
scrambled beyond all recognition.  It passes a CRC check (since it hasn't   
been corrupted in any way), but the control information itself, once it's   
passed through the decryption process, is just random garbage.  
  
The application takes the (valid, as far as it knows) control info, tries   
to use it, and (usually) grinds to a halt (there are various sanity checks   
built in which catch a lot of problems, but most of the data looks   
reasonable enough to get used).  
  
Now the question: Is there any way of handling this use of incorrect   
passwords without seriously compromising the security of the encryption?  A   
simple way would be to encrypt an 8- or 16-bit control value with the data,   
and exit if this value isn't recovered on decryption (or some variant of   
this, for example checksum the data after decryption).  The problem is that   
this makes it very easy to break, without any need for a fancy attack -   
just keep throwing passwords at it until the control value is recovered/   
checksum is valid, and you've got the password.  On the other hand having   
the program hang on the user isn't so hot either.  
  
Is there some way of ensuring a password is valid without making a the   
system a target for a high-speed password cracker?  Should the password   
check be made (and the security level lowered), or should users just have   
to grin and bear it if a wrong password is used?  
  
Thanks in advance for any comments/opinions...if there's enough demand I'll   
summarise replies...  
  
Peter.  
--  
    pgut1@cs.aukuni.ac.nz || peterg@kcbbs.gen.nz || peter@nacjack.gen.nz  
                           (In order of preference)  
