Path: msuinfo!caen!zaphod.mps.ohio-state.edu!cs.utexas.edu!bcm!jstevens
From: jstevens@crick.ssctr.bcm.tmc.edu (Jason Philip Stevens)
Newsgroups: sci.crypt
Subject: Re: DES Keysearch machines, explain
Keywords: DES break brute force exhaustive search Diffe Hellman parallel engineering
Message-ID: <12435@gazette.bcm.tmc.edu>
Date: 10 Jun 1992 22:13:30 GMT
References: <12357@gazette.bcm.tmc.edu> <16809@ulysses.att.com> <lt2726k@fido.asd.sgi.com> <3802@transfer.stratus.com>
Sender: usenet@bcm.tmc.edu
Reply-To: jstevens@crick.ssctr.bcm.tmc.edu (Jason Philip Stevens)
Distribution: na
Organization: Baylor College of Medicine, Houston, Tx
Lines: 20
Nntp-Posting-Host: crick.ssctr.bcm.tmc.edu
Originator: jstevens@crick.ssctr.bcm.tmc.edu


Two questions:

If you encrypt something with DES using password A, "decrypt" with password B, and then re-encrypt
with password C, where A != B != C, this is supposed to be more secure than the original encryption
(as I recall; I may be wrong).  My question is:  is it necessarily true that a single password D
exists that, when used to decrypt the resultant above, produces the original file?  If so, does
an algorith exist to produce D given A, B, and C?  If not, can one thereby defeat the keysearch
engine by using this scheme?

Secondly, this discussion, while interesting, has shown me the vastness of my ignorance on this
topic.  Any recommendations for novices on reading material?  [send e-mail and I will summarize if
there's any interest.]

-jps
-- 
Jason Stevens			Internet:  jstevens@bcm.tmc.edu
Network User Services		Voice:  (713) 798-7370
Baylor College of Medicine	Opinions expressed are mine alone.

