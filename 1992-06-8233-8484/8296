Xref: msuinfo alt.sex.bondage:28947 sci.crypt:8296 alt.comp.acad-freedom.talk:4134
Path: msuinfo!caen!sdd.hp.com!samsung!transfer!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: alt.sex.bondage,sci.crypt,alt.comp.acad-freedom.talk
Subject: Re: [news.admin, et al.] Re: Anonymous Contact Service @ wizvax
Message-ID: <3740@transfer.stratus.com>
Date: 9 Jun 92 21:05:43 GMT
References: <9206031517.AA06988@herodotus.cs.uiuc.edu> <1992Jun7.210444.11685@ccu.umanitoba.ca> <1992Jun7.202842.29461@bronze.ucs.indiana.edu>
Sender: usenet@transfer.stratus.com
Followup-To: sci.crypt
Organization: Stratus Computer, Software Engineering
Lines: 46


Thanks to smb@ulysses.att.com for the reference:

David Chaum, "Untraceable Electronic Mail, Return Addresses, and Digital
Pseudonyms", CACM 24,2 (Feb 1981), pp 84-88.

Chaum has the return address problem solved as well -- so my plan to just
post those answers is needlessly wasteful.  By solving this for mail from
person to person, it's solved for postings as well.  In this sense, a
newsgroup is one more person on the net.



Of course, there's still the problem of someone who is able to monitor all
traffic (in particular, traffic volumes) in and out of every node on the
net -- even if that enemy can't break any of the messages.  From the
traffic patterns, it should be possible for the enemy to learn something
about who is sending to whom.  For example, if someone thinks I am talking
with John, they monitor traffic (sizes and times of messages in both
directions) around both of us.  If enough messages happen to show up at
John's machine a reasonable delivery time after messages leave my machine,
the inference is that I'm mailing to John.


To really thwart this, of course, the middlemen (which Chaum calls "mixes")
could carry on continuous chatter with all other middlemen -- so that the
network wires are constantly busy.  That defeats traffic analysis, or
should.  However, it also clogs up the network -- or slows real traffic.

For example, every machine could transmit to every mix exactly one message
of exactly X bytes at exactly the same time each hour.  The mix would
transmit exactly one message to each subscriber at the same time each hour.
If too many messages stack up for me, the mix holds them.  (Even this
feels like there's room for learning something about my traffic -- if the
mix nearest to me can be subverted.)


So, back to my original question: is there a way to do better than Chaum
and hide not only certain knowledge of who is talking to whom but also
prevent the enemy from learning anything at all about who might be talking
to whom with probability greater than random guess over all people
connected to the net?

If we can't hide *all* knowledge about traffic from the all powerful enemy,
how much can we hide?  How do we quantify the security of this mixing
process?  How much more security does another layer of mixes give you?
