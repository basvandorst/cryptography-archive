Path: msuinfo!caen!sol.ctr.columbia.edu!samsung!transfer!lectroid!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: sci.crypt
Subject: Inverting MZT sequences
Message-ID: <10713@lectroid.sw.stratus.com>
Date: 29 Jan 92 22:13:48 GMT
References: <1992Jan24.054440.22882rcain@netcom.COM> <10587@lectroid.sw.stratus.com> <752q02E=09oL01@JUTS.ccc.amdahl.com>
Sender: usenet@lectroid.sw.stratus.com
Distribution: na
Organization: Stratus Computer, Software Engineering
Lines: 39

In article <752q02E=09oL01@JUTS.ccc.amdahl.com> twl10@JUTS.ccc.amdahl.com (Tom Littauer) writes:
>In article <10587@lectroid.sw.stratus.com> cme@ellisun.sw.stratus.com (Carl Ellison) writes:

>>This means that the enemy will be able to reconstruct the contents of the
>>PRNG array as soon as he has received on the order of the number of bits
>>in the array.  Once the array is reconstructed, it can be run forward and
>>backward trivially -- so the entire message is broken.

>Does this still apply if we use only 8 of the bits of each of the words the
>PRNG returns? The "enemy" doesn't get the full state of the PRNG with a
>chosen plaintext then, unless (quite likely :-) I'm missing something.


Theoretically, as soon as the enemy has the same number of bits of output as
there is state in the PRNG, he can invert the PRNG to get the unique state.
When all that is used is a portion of each output, it takes more cycles to
get all those state bits.

In practice, you'll want more output bits than just the number in the state.
How many more depends on how good your inversion algrithm is.  I haven't
found a general solution for normal chain addition (or MZT yet), so I can't
say yet how many bits of output *I* need.


For those who want to play with it:

	(x[i+1],c[i+1])= x[i-a]+x[i-b]+c[i]
	y[i] = x[i] mod K

	0 <= x[j] <= (N-1)
	0 <= c[j] <= 1

	K << N

	(eg., N = 2^32, K = 2^8)

The problem is to recover x[i-a] through x[i] and c[i] from some sequence of
y[k].  You know a, b, K and N.  It's possible that K and N are relatively
prime -- eg., both primes.
