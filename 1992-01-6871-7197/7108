Path: msuinfo!caen!spool.mu.edu!munnari.oz.au!uunet!dtix!oasys!curt
From: curt@oasys.dt.navy.mil (Curt Welch)
Newsgroups: sci.crypt
Subject: Re: Basic idea of des
Message-ID: <14429@oasys.dt.navy.mil>
Date: 24 Jan 92 06:16:30 GMT
Article-I.D.: oasys.14429
References: <1992Jan23.213746.18081@cs.dal.ca>
Reply-To: curt@oasys.dt.navy.mil (Curt Welch)
Organization: Carderock Division, Naval Surface Warfare Center, Bethesda, MD
Lines: 48

In sci.crypt, gilgan@ug.cs.dal.ca (Tommy Gilgan) writes:
>I am a novice at this sort of thing, and don't have a very good background
>in math, but could someone send me a description of what the des encryption
>algorithm does?

Using a 56 bit key, the DES algorithm maps a 64 bit block of clear
text into 64 bits of encrypted text.  By running the same algorithm
backwards, with the same key, the clear text can be re-created from
the encrypted text. (I think I have these numbers correct)

The DES algorithm, when using the same key, will always map the same
clear text into the same encrypted text.

>I am also curious as to this: [UNIX passwords encrypt differently each time]

Try reading "man 3 crypt".

Yes UNIX password encryption is based on DES.

The trick is that the UNIX password encryption algorithm uses a "salt"
parameter.  The first two characters of your encrypted password is the
"salt".  These two characters are used by the crypt() routine to modify
the the standard DES algorithm.

Every time you set your password, the passwd program randomly picks a 2
character salt value for you.  The salt value then determines which
variation of the DES algorithm to use when encrypting you password.
You password will encrypt to a different value for every different
salt.

BTW, your password is used as the DES key - not as the data.  A block of
64 zeros bits is encrypted with the modified DES something like
16 times to produce your encrypted password.

To check a password, you also need the salt, that's why it's stored
as the first two characters of your encrypted password.

The salt is used to increase security.  With the salt, two people with
the same password most likely won't have the same encrypted password -
and creating dictionaries of pre-encrypted passwords is harder because
for each possible password, you need 4096 (the number of different
salts) encrypted passwords in your dictionary.

/-----------------------------------------------------------------------------\
| Curt Welch - KCW Consulting           By 1993, there will be just two kinds |
| kcwc!curt curt@oasys.dt.navy.mil      of professionals:  Those who use NeXT,|
| (703) 938-4152  FAX (703) 938-5756    and those without Jobs.               |
\-----------------------------------------------------------------------------/
