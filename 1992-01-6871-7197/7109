Xref: msuinfo sci.crypt:7109 alt.security:4909
Path: msuinfo!caen!spool.mu.edu!uunet!hoptoad!wet!wet.UUCP
From: naga@wet.UUCP (Peter Davidson)
Newsgroups: sci.crypt,alt.security
Subject: Reply to request for features of new encryption system.
Message-ID: <3258@wet.UUCP>
Date: 24 Jan 92 14:13:07 GMT
Article-I.D.: wet.3258
Sender: naga@wet.UUCP
Followup-To: sci.crypt
Distribution: usa
Organization: Wetware Diversions, San Francisco
Lines: 115

Apologies if this gets posted twice.  pnews handed it off to inews,
which said "short on space, I'll do it later", but apparently it never did.

 
Dan Bernstein writes:
 
> > |Dolphin Software publishes MS-DOS programming tools and data encryption   |
> > |software which is an alternative to DES.
>
> That's wonderful. Why don't you explain the features of your product,
> instead of putting down DES unnecessarily?
OK, I'll explain some of the features of Dolphin Encrypt (DE), using your
suggested list of features of a good encryption program.
 
>                                             snuffle 5.0, my latest
> private-key encryption/decryption suite, is available for free for
> United States recipients upon request.
This is commendable, but since the author and the publisher of DE refuse to
accept welfare from the government, and are temperamentally unsuited to
corporate life, they consider it reasonable to provide something useful and
carefully crafted in return for means of sustenance.
 
> It's two to three times faster than the des program ...
DE's speed is illustrated by encryption and decryption of a 100K file of
sci.crypt postings:  "]" indicates console I/O:
 
First we encrypt:
] DE "Some encryption key" E SCICRYPT.TXT SCICRYPT.ENC
] Now encrypting C:\SCICRYPT.TXT, 102,400 bytes, /r-/b12
] Encryption of  C:\SCICRYPT.TXT successful.
] Filesize decreased 38% to 63839 bytes.
] Time for encryption of file: 9 seconds (11.11 Kb/sec)
 
Then we decrypt:
] DE "Some encryption key" D SCICRYPT.ENC SCICRYPT.DEC
] Now decrypting C:\SCICRYPT.ENC, 63,839 bytes, /r-/b12
] Decryption of  C:\SCICRYPT.ENC successful.
] Time for decryption of file: 8 seconds (12.50 Kb/sec)
 
Then we compare the decryption with the original:
] COMPARE SCICRYPT.TXT SCICRYPT.DEC
] Files matching SCICRYPT.TXT: 1
]     SCICRYPT.TXT    SCICRYPT.DEC  Files are the same.
 
So encryption/decryption is about 12 Kb/sec in this case (performed on a
33 Mhz 386 PC AT).
 
> ... and supports a much larger key.
The DE key, as input by the user, can be up to 60 characters in length
(any 1-key-typeable character is admissible).  Lower case is converted to
uppercase and spaces are thrown away.  There are 68^60 possible keys.
 
>The encryption method ...
uses several different kinds of PRNG (all tested), and multiple versions of
some.  These are not simply combined to produce a single PRNG, but are used
at various stages during the encryption, in computationally complex ways.
Random garbage is added.  The key as input is converted into a longer key
which is itself modified and encrypted (in a way that depends on itself)
multiple times during the encryption process.  The encryption and decryption
of any particular byte in the plaintext or in the ciphertext depends not
only on the key but on the values of preceding bytes in the plaintext
(similar to DES in CBC mode).
 
> snuffle is zero-delay---it produces each byte of output
> before waiting for the next byte of input
DE encrypts data in varying-sized blocks of up to 10K.  It is designed for
file encryption but can be applied to encryption of blocks of data in RAM
which should generally be at least 2K in size.  A version of the encryption
method will soon be available in the form of a C function library which can
be licensed for application development to companies who wish to incorporate
encryption in their products.
 
> The code should compile and run out of the box on any UNIX machine.
> Oh, yes, and the method is fully documented. (Are proprietary schemes
> usually kept secret because they have weaknesses to hide, or are
> weaknesses inevitable in an encryption method not exposed to public
> review? Chicken and egg.)
At present DE runs only under MS-DOS (Unix version possible later). It is
provided only in executable form.  There is a 10-chapter, 4-appendix,
printed manual.  The full details of the method, and the actual C source
code, are currently not being made public, not because of doubt about the
security of the method, but because, in the opinion of the publisher, such
exposure can do nothing to enhance the security of the system. Cryptologists
would probably like to take a look, but users will feel safer knowing that
the details of the encryption method are not known to would-be attackers.
 
I have not mentioned all of DE's features, many of which are concerned not
with the encryption method per se but with ease-of-use, etc. (e.g. it has a
built-in script language).  Here I have simply commented on the points that
Dan raised.
 
I might, however, anticipate one possible criticism.  The method of
encryption implemented in DE is a computationally complex procedure which
cannot be represented in a diagram (as DES can) or in any formulae specifying
transformations and transpositions.  The system is believed by its author
to be secure, not simply because of its design, but also because the compu-
tationally intensive and complex nature of the encryption procedure is, in
his opinion, highly unlikely to yield to any attempt at rational analysis
(or cryptanalysis).  Cryptologists have, after much effort, arrived at a
body of formal knowledge regarding cryptographic methods. Some will thus
tend to disparage a method of encryption, such as that used in DE, which
cannot be expressed formally and in this way be amenable to formal theorems
concerning its degree of security. While formal proof is nice, the value of
an encryption method lies in its ability to hide data effectively from those
not intended to see it and to reveal it easily to others.  The author of
the software claims that this is the case for DE, and any who would refute
his claim (and not simply present arguments ad hominem) must demonstrate
insecurity by showing that cryptanalyis of DE-encrypted data is feasible.
 
------------------------------------------------------------------------------
| Dolphin Software publishes MS-DOS programming tools and data encryption    |
| software which is an alternative to DES.  Information about their products |
| may be obtained by writing to 48 Shattuck Square #147, Berkeley, CA 94704. |
------------------------------------------------------------------------------
 
