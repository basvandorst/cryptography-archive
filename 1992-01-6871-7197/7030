Xref: msuinfo sci.crypt:7030 alt.security:4780
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!mips!pacbell.com!att!ucbvax!virtualnews.nyu.edu!brnstnd
From: brnstnd@nyu.edu (Dan Bernstein)
Newsgroups: sci.crypt,alt.security
Subject: Re: Possible Insecurity of DES-Encrypted Text
Message-ID: <23061.Jan1820.57.5392@virtualnews.nyu.edu>
Date: 18 Jan 92 20:57:53 GMT
References: <3242@wet.UUCP>
Distribution: usa
Organization: IR
Lines: 65

In article <3242@wet.UUCP> naga@wet.UUCP (Peter Davidson) writes:
>                Possible Insecurity of DES Encryption of Text
>                       Copyright 1992 Dolphin Software
>                               18 January 1992

As Steve Bellovin and I pointed out in response to your previous
article, your tests apply only to DES in Electronic Code Book mode.
ECB mode treats a text as a bunch of independent 8-byte chunks. When two
of those 8-byte chunks are the same, ECB will encrypt them to the same
thing. Typical text files are so non-random that the distribution of
8-byte chunks will also be non-random---sufficiently non-random that
inexperienced observers can post articles in sci.crypt and alt.security
on their amazement that DES ECB doesn't produce ``random'' output.

Normal people use DES in CBC mode, because CBC makes each chunk of
output depend on all preceding chunks of input, and stops certain
attacks. The widely available ``des'' program for UNIX uses CBC by
default.

> Previously data was presented demonstrating non-randomness in the byte
> value distribution in textfiles encrypted using DES, but no explanation for
> this was given.

Hiding behind the passive voice, eh? *You* didn't explain your
observations, but Steve Bellovin and I did (and probably more people
will as your articles wend their way across USENET).

> encrypted using the same DES key as above (namely FB 19 9D 02 A4 83 2F 85).

That's not a DES key. A DES key has 56 bits.

  [ the utterly trivial observation that ECB applied to a billion spaces ]
  [ produces a whole bunch of repetitions of the 8 bytes that it produces ]
  [ when applied to a single chunk of 8 spaces ]
> Thus there appears to be strong grounds for doubting the security of DES as
> regards the encryption of files consisting of words separated by spaces -

No. There appear to be strong grounds for doubting your competence in
applying DES.

> There are 256^7 possible DES keys, i.e. approximately 7.2 x 10^16.  How
> long would it take to construct this table?

I.e., ``how long does a brute-force known-plaintext attack take?''
Longer than you have the money for. You're quite right that it would
only take a few decades on a CM-5 to break DES under these assumptions.
[yawn] DES was only recommended to be used for a decade or so anyway.

Your comments on DES remind me of Jim Bidzos' comments on NIST DSA. He
said (in effect) that if you use NIST DSA in the worst possible way (by
having users share large portions of their keys), then it will become
breakable on really big computers within our lifetimes. You've said that
if you use DES in the worst possible way (namely ECB, breaking up text
into lots of independent chunks all encrypted with the same key), then
it will become breakable on really big computers within our lifetimes.
My response: *So what*?

> |Dolphin Software publishes MS-DOS programming tools and data encryption   |
> |software which is an alternative to DES.  Information about their products|

Posting idiotic articles on DES is not the best way to advertise your
product---unless, of course, your product is so pitifully weak that you
can't think up anything *good* to say.

---Dan
