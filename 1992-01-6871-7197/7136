Path: msuinfo!netnews.upenn.edu!jvnc.net!yale.edu!think.com!zaphod.mps.ohio-state.edu!swrinde!news.dell.com!milano!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Newsgroups: sci.crypt
Subject: Re: Pretty Good (tm) Privacy
Message-ID: <10297@cactus.org>
Date: 25 Jan 92 06:22:59 GMT
References: <15015@ncar.ucar.edu> <10541@lectroid.sw.stratus.com> <10585@lectroid.sw.stratus.com>
Organization: Capital Area Central Texas Unix Society, Austin, TX
Lines: 86


 In <10585@lectroid.sw.stratus.com> cme@ellisun.sw.stratus.com
 (Carl Ellison) writes:


>With private key systems, the repeated use of a single key produces an
>immediate cryptanalytic weakness in the system.  If one uses per-message
>keys to counteract that weakness, then those keys have to be communicated
>and that, too, provides a possible point of cryptanalytic entry.

 Were this true, then only public key systems could possibly be
 considered strong cryptosystems.  But this is not true.

 Secret user keys can be re-used without danger provided that the
 cryptosystem is designed to support key re-use.  The usual approach
 is to generate a "really random" message key which is enciphered
 under the user key.  The unenciphered random message key is used
 as the key to encipher the real message.  The receiving end first
 deciphers the random message key with the secret user key, which
 reveals the key to be used to decipher the rest of the message.

 If the message key really is random, there can be no form of known
 plaintext or a statistical attack which would use the message key
 content to attack the user key.


>The security threat implied with public key systems is that of spoofing --
>quite real but of a different class from cryptanalysis because if a message
>is intercepted that way, the proper recipient knows immediately that
>something is wrong because he can no longer decrypt messages intended for
>him.  If a private key system is broken by cryptanalysis, neither proper
>party to the conversation knows that the break has occurred.

 Spoofing is part of the problem, but the real problem is in ascribing
 to public keys the same properties that only secret keys generally
 possess.  Since a secret key must be kept secret from creation through
 distribution, it consequently carries an assured integrity which a
 public key usually does not have.  The whole point of a public key is
 to allow distribution without tight security, but because it lacks such
 security, a public key carries no inherent integrity.

 If I broadcast my public key over a network, it is possible that my
 key may be deliberately modified in transit -- changed, in fact, to
 someone else's key.  Then any response to me which uses the changed key
 may be deciphered and then re-enciphered in my correct key before I see
 it.  And neither I nor my correspondent need be any the wiser.

 For this reason a central signature authority is needed.  But, frankly,
 I cannot imagine a more attractive place for a spy, or a business more
 likely to come under governmental pressure, employees who would be more
 at risk of serious intimidation and compromise, a network node more
 likely to be subverted, or computers more likely to be attacked by
 specially-tailored virus programs seeking keys or inserting bogus
 signatures.

 Note that normal employee turnover, and a reasonable desire to limit
 exposure requires periodic replacement of keys even in public key
 systems.  Use of an old -- potentially compromised -- key could be
 dangerous.  One cannot simply use an old key to transport a new key,
 because compromise means that the conversation may be monitored;
 indeed, one may not even be communicating with the intended party.
 And it may be difficult for users to know when they are using an
 outdated key.

 If cryptanalysis develops one of the secret keys, then the analyst
 can read the enciphered traffic at will.  Of course, public key
 conversations generally involve a different secret key for each
 direction; thus, one might say that cryptanalytic effort is doubled by
 public key systems.  But a secret key cipher could just as well use
 different keys in each direction.


 Even in public key systems there is a private key which must be kept
 secret for each public key which may be released.  The secret keys must
 be protected somehow.  If secret keys are stored in a computer, the
 computer could be attacked.  Keys should always be stored in enciphered
 form, but then there must exist some root key which must be kept secret.
 Since the keys used in public key systems are large and apparently random,
 they are not suited for memorization.  This means that the root key must
 be stored somewhere, which means that it has an inherent vulnerability
 to possible compromise.

 Public key systems are one cryptographic tool, and not always the best.

 ---
 Terry Ritter   cs.utexas.edu!cactus.org!ritter   (512) 892-0494
