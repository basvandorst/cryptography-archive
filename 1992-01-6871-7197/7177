Path: msuinfo!caen!zaphod.mps.ohio-state.edu!swrinde!network.ucsd.edu!pacbell.com!pacbell!osc!jgk
From: jgk@osc.COM (Joe Keane)
Newsgroups: sci.crypt
Subject: Re: 4 byte signature???
Summary: Use more bits.
Keywords: signature
Message-ID: <5361@osc.COM>
Date: 29 Jan 92 01:37:40 GMT
References: <1992Jan21.154853.249302@cs.cmu.edu> <871@zogwarg.etl.army.mil>
Organization: Versant Object Technology, Menlo Park, CA
Lines: 31

In article <1992Jan21.154853.249302@cs.cmu.edu> jmount+@cs.cmu.edu (John
Mount) writes:
>What???  4 byte signature- that is only 2^(4*8) = 4294967296 values....
>So unless your application changes authentication keys every couple
>of hours it can be spoofed.

I agree that having only a 32-bit signature is a bit lame.  Consider that if
you hash about 50000 messages, quite a reasonable number, then more likely
than not, two will have the same hash value.  That pretty much shoots down the
idea that the signatures are unique.  Whether that's a problem depends on your
application.  It also means that a brute-force attack is definitely possible.
It's downright easy if there are a lot of messages which could be replaced.

In article <871@zogwarg.etl.army.mil> hoey@zogwarg.etl.army.mil (Dan Hoey)
writes:
>If you want a longer signature, you should be able to get it by
>appending the short signature to the message and generating a new
>short signature.  Repeat to taste.

Sure, but you could also just write your own algorithm.  Re-scanning the
message also means that you can't implement your algorithm as a filter.  You
have to store the whole message somewhere.

A good, secure hash algorithm should have a lot of internal state, preferably
thousands of bits.  At the end, this gets smashed down into whatever the user
asked for.  It's not much difference if he wants a 32-bit signature or a
256-bit signature.  That's up to him.
--
Joe Keane, amateur mathematician
jgk@osc.com (uunet!amdcad!osc!jgk)
DBBC3A200087EC953EADF07A0E55FF8384FDCF780849FB29CE34CECA9DB087B8
