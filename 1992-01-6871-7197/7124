Path: msuinfo!caen!uakari.primate.wisc.edu!samsung!olivea!mintaka.lcs.mit.edu!bloom-picayune.mit.edu!news.mit.edu!jis
From: jis@MIT.EDU (Jeffrey I. Schiller)
Newsgroups: sci.crypt
Subject: Re: Reply to request for features of new encryption system.
Message-ID: <JIS.92Jan25193805@big-screw.MIT.EDU>
Date: 26 Jan 92 00:38:05 GMT
References: <3258@wet.UUCP> <1992Jan25.010506.1237@qualcomm.com>
Sender: news@athena.mit.edu (News system)
Distribution: usa
Organization: Massachusetts Institute of Technology
Lines: 39
In-Reply-To: karn@qualcom.qualcomm.com's message of Sat, 25 Jan 1992 01: 05:06 GMT
Nntp-Posting-Host: big-screw.mit.edu

In article <1992Jan25.010506.1237@qualcomm.com> karn@qualcom.qualcomm.com (Phil Karn) writes:

   In article <3258@wet.UUCP>, naga@wet.UUCP (Peter Davidson) writes:
   |> printed manual.  The full details of the method, and the actual C source
   |> code, are currently not being made public, not because of doubt about the
   |> security of the method, but because, in the opinion of the publisher, such
   |> exposure can do nothing to enhance the security of the system. Cryptologists
   |> would probably like to take a look, but users will feel safer knowing that
   |> the details of the encryption method are not known to would-be attackers.

   This is an utterly unbelievable statement!

I agree wholeheartedly.

Users who feel safe knowing that the details of the encryption method are
not known to would-be attackers are either fools or are being mislead.
By distributing object code (which you must!) you are giving away details
of the encryption method to the attackers. All they need to do is disassemble
and/or de-compile your object code. If you think this isn't possible, you
are wrong. A small group of us were able to disassemble the Internet worm
(back in '88) in under 48 hours. We could disassemble your program as
well, given sufficient motivation, and then analyze your algorithm for
weaknesses.

Failure to release your source code or algorithm description only
prevents the scrutiny of professional cryptologists (and amateurs as
well) for they will probably not bother to disassemble your code. It
also discourages the more naive attackers, for they won't know how to
disassemble your code or also won't bother. However these naive
attackers probably cannot break your algorithm even if they get its
description. However the truly sophisticated (or motivated) attackers will
just disassemble your code.

If you truly believe your algorithm is strong, you should be actively
challenging cryptologists to break it, given its description. If I were
you, I would put my money where my mouth is by offering a reward for
a successful attack.

			-Jeff
