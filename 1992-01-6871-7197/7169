Path: msuinfo!caen!spool.mu.edu!umn.edu!cs.umn.edu!lynx!triton.unm.edu!ee5391aa
From: ee5391aa@triton.unm.edu (Duke McMullan n5gax)
Newsgroups: sci.crypt
Subject: One-time keys & secure algorithms -- Was: Pretty Good (tm) Privacy
Message-ID: <5cygd5a@lynx.unm.edu>
Date: 29 Jan 92 17:12:59 GMT
Article-I.D.: lynx.5cygd5a
References: <10541@lectroid.sw.stratus.com> <10585@lectroid.sw.stratus.com> <10297@cactus.org>
Organization: University of New Mexico, Albuquerque
Lines: 59

In article <10297@cactus.org> ritter@cactus.org (Terry Ritter) writes:

> In <10585@lectroid.sw.stratus.com> cme@ellisun.sw.stratus.com
> (Carl Ellison) writes:

>>With private key systems, the repeated use of a single key produces an
>>immediate cryptanalytic weakness in the system.  If one uses per-message
>>keys to counteract that weakness, then those keys have to be communicated
>>and that, too, provides a possible point of cryptanalytic entry.

> Were this true, then only public key systems could possibly be
> considered strong cryptosystems.  But this is not true.

> Secret user keys can be re-used without danger provided that the
> cryptosystem is designed to support key re-use.  . . . . 

Ehhhhh . . . well, yes and no.

Repeated use of a single key _does_ produce, at least theoretically, an inc-
rease in the "leakage" information which a cryptanalyst can use to pry the
key out of the ciphertext.  In practice, strong cryptoalgorithms don't seem
to produce enough leakage to give a cryptanalyst any reasonable foothold as
long as the key is changed fairly often.  One-time keys are not necessary for
this sort of thing, and with a _really_ strong cryptoalgorithm, you might not
need a key change over your lifetime.  Still, cryptography isn't sitting still,
and neither is cryptanalysis.

For better or worse, the algorithms don't fall into a dichotomy of secure/inse-
cure.  Any algorithm can be penetrated, given unlimited time, unlimited compu-
ting resources and unlimited plaintext/ciphertext pairs.  Any, that is, except
one-time keys.

(Question:  is the security of a one-time key enhanced by using it in a highly
secure cryptographic transformation, as opposed to simple XOR?  I've heard ar-
guments in both directions, but have never seen a convincing analysis.)

In the Real World, neither computing resources nor time are unlimited, and by
changing the key "often enough", you keep the cryptanalyst from having enough
plain/cipher pairs to do any useful work at all.  Two hundred eight billion
nonlinear equations in twelve octillion unknowns is the sort of present which
the cryptographer wants to hand the cryptanalyst.  Both of them know that the
ratio of equations/unknowns is reduced by most reuses of the key.  So, if you
use it a hundred thousand times and switch keys, the cryptographer goes to bed
happy, and the cryptanalyst moves to the State Home for the Bewildered.

The trick is "simply" to use strong algorithms and change the key often enough
to keep the cryptanalyst sucking mud.  Unfortunately, "strong" is difficult to
prove and perhaps impossible to quantify (although the complexity-theory folks
are trying damn hard and I wish them well) and then you still have to decide
what you mean by "often enough".


					Isn't life wonderful?
							d


-- 
	    The very, very best hiking is found . . . underground!
  Duke McMullan n5gax nss13429r phon505-255-4642 ee5391aa@triton.cirt.unm.edu
