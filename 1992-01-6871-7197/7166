Path: msuinfo!caen!zaphod.mps.ohio-state.edu!samsung!transfer!lectroid!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: sci.crypt
Subject: Re: PRNG encryption
Message-ID: <10680@lectroid.sw.stratus.com>
Date: 29 Jan 92 15:10:37 GMT
References: <TYTSO.92Jan28232242@SOS.mit.edu> <1992Jan29.065216.25186rcain@netcom.COM>
Sender: usenet@lectroid.sw.stratus.com
Organization: Stratus Computer, Software Engineering
Lines: 15

In article <1992Jan29.065216.25186rcain@netcom.COM> rcain@netcom.COM (Robert Cain) writes:
>I'm confused.  I am assuming that myself and my recipient share the key
>(or PRGN seed) and no one else.  What does the attacker xor with the
>ciphertext to retrieve the PRNG's subsequence?  If he already knows 
>my plaintext the point is moot.

He XORs plaintext to get the key stream and the point is not moot at all.

If all you need is a short sequence of PRNG output (eg., the same number of
bits as the PRNG has of state), then all the enemy has to do is guess that
your plaintext *contains* some sequence of that length -- and he can try
each possible position for that sequence.  With enough PRNG output to
reconstruct the state of the PRNG, he can then run it forward to get the
rest of the message -- and in many cases (eg., MZT) he can run it backwards
just as easily to get the preceeding part of the message.
