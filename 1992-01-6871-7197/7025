Xref: msuinfo sci.crypt:7025 alt.security:4775
Path: msuinfo!caen!sdd.hp.com!cs.utexas.edu!uunet!hoptoad!wet!wet.UUCP
From: naga@wet.UUCP (Peter Davidson)
Newsgroups: sci.crypt,alt.security
Subject: Possible Insecurity of DES-Encrypted Text
Message-ID: <3242@wet.UUCP>
Date: 18 Jan 92 14:19:19 GMT
Sender: naga@wet.UUCP
Followup-To: sci.crypt
Distribution: usa
Organization: Wetware Diversions, San Francisco
Lines: 272


 
               Possible Insecurity of DES Encryption of Text
 
                      Copyright 1992 Dolphin Software
 
                              18 January 1992
 
Previously data was presented demonstrating non-randomness in the byte
value distribution in textfiles encrypted using DES, but no explanation for
this was given.  It can now be shown what the source of this non-randomness
is, and why this has grave implications for the security of DES.
 
To repeat what was given in a previous posting:
 
> MC1.GEN is a documentation file which consists mostly of standard English
> text.  It was written from Word Perfect as a generic text file, meaning
> that the Word Perfect header and all Word Perfect formatting was thrown
> away, and CR/LF byte pairs occur only at the ends of paragraphs (not at the
> ends of all the lines).
>
> When MOSTFREQ.EXE, a frequency analysis program, is run on MC1.GEN it
> produces the following results for the 24 most-frequent bytes:
>
>     File MC1.GEN contains 52882 bytes and 89 different byte values.
>       Rank     Byte      Frequency   ASCII value
>
>         1    32 = 0x20       12470      space
>         2   101 = 0x65        3882      e
>         3    97 = 0x61        3096      a
>         4   116 = 0x74        2721      t
>         5   111 = 0x6F        2400      o
>         6   110 = 0x6E        2341      n
>         7   115 = 0x73        2123      s
>         8   105 = 0x69        2050      i
>         9   114 = 0x72        1973      r
>        10   104 = 0x68        1612      h
>        11   100 = 0x64        1266      d
>        12   108 = 0x6C        1203      l
>        13    99 = 0x63        1070      c
>        14   117 = 0x75         994      u
>        15   121 = 0x79         906      y
>        16    46 = 0x2E         819      .
>        17   109 = 0x6D         759      m
>        18    10 = 0x0A         695      linefeed
>        19    13 = 0x0D         695      return
>        20   102 = 0x66         639      f
>        21    44 = 0x2C         629      ,
>        22    98 = 0x62         593      b
>        23    49 = 0x31         546      1
>        24   112 = 0x70         532      p
 
MC1.GEN, was encrypted using the software implementation of DES known as
The Private Line (version 6.03, in Electronic Code Book mode) using the
hexadecimal key FB 19 9D 02 A4 83 2F 85 to produce a file MC1.TPL.  The
frequency results obtained by MOSTFREQ were:
 
>     File MC1.TPL contains 52882 bytes and 256 different byte values.
>       Rank     Byte      Frequency   ASCII value
>
>         1   150 = 0x96         475
>         2     1 = 0x01         473
>         3   162 = 0xA2         464
>         4   225 = 0xE1         464
>         5    74 = 0x4A         462      J
>         6   124 = 0x7C         459      |
>         7   217 = 0xD9         453
>         8   197 = 0xC5         449
>
>         9    22 = 0x16         276
>        10   112 = 0x70         272      p
>        11    42 = 0x2A         256      *
>        12    47 = 0x2F         248      /
>        13   198 = 0xC6         240
>        14    75 = 0x4B         234      K
>        15   181 = 0xB5         234
>        16   141 = 0x8D         232
>        17   232 = 0xE8         231
>        18   189 = 0xBD         229
>        19   243 = 0xF3         229
>        20    26 = 0x1A         228
>        21    45 = 0x2D         227      -
>        22    76 = 0x4C         227      L
>        23   246 = 0xF6         225
>        24    29 = 0x1D         224
>
> It will be seen that in MC1.TPL there are again eight byte values which
> occur far more frequently than the rest.  The least-frequent of these byte
> values (C5, occurring 449 times) occurs over 62% more frequently than any
> of the other 248 byte values (the most frequent of which is 16, which
> occurs 276 times).
 
The investigation now moves in a different direction from before.
 
In order to test the hypothesis that the large number of spaces in MC1.GEN
(which often occur as strings of spaces) was affecting the distribution of
byte values, all spaces were eliminated from MC1.GEN to give a file MC2.GEN
of 40,412 bytes.  The byte distribution for this file was the same as for
MC1.GEN except that there were no spaces.
 
MC2.GEN was DES-encrypted using The Private Line and the same key as before
to produce a file called MC2.ENC.  The the byte distribution for this file
was found to be:
 
    File MC2.enc contains 40412 bytes and 256 different byte values.
      Rank     Byte      Frequency   ASCII value
        1   228 = 0xE4         203
        2   204 = 0xCC         195
        3   192 = 0xC0         193
        4   250 = 0xFA         189
        5    32 = 0x20         187      space
        6    81 = 0x51         185      Q
        7   146 = 0x92         185
        8    93 = 0x5D         184      ]
        9   117 = 0x75         184      u
       10     2 = 0x02         183
       11    25 = 0x19         183
       12    87 = 0x57         183      W
       13   140 = 0x8C         181
       14   141 = 0x8D         180
       15    24 = 0x18         179
       16   230 = 0xE6         179
       17   132 = 0x84         178
       18   142 = 0x8E         178
       19   208 = 0xD0         178
       20    84 = 0x54         177      T
       21   213 = 0xD5         177
       22   255 = 0xFF         177
       23    69 = 0x45         176      E
       24   133 = 0x85         175
 
Clearly there are no longer eight values which occur far more frequently
than the others, as there was in the byte distribution in MC1.ENC,
suggesting that this non-randomness is due either to the disproportionately
large number of spaces in MC1.ENC or to the presence in MC1.ENC of numerous
same-character sequences (of spaces).
 
In order to test this hypothesis further four files, of various sizes, were
created which consisted only of spaces (i.e. ASCII byte 32), and these were
encrypted using the same DES key as above (namely FB 19 9D 02 A4 83 2F 85).
The byte value distributions for these four files are as follows:
 
    File SPCFILE0.ENC contains 1024 bytes and 8 different byte values.
      Rank     Byte      Frequency   ASCII value
        1     1 = 0x01         128
        2    74 = 0x4A         128      J
        3   124 = 0x7C         128      |
        4   150 = 0x96         128
        5   162 = 0xA2         128
        6   197 = 0xC5         128
        7   217 = 0xD9         128
        8   225 = 0xE1         128
    Remaining byte values do not occur in this file.
 
    File SPCFILE1.ENC contains 26011 bytes and 16 different byte values.
      Rank     Byte      Frequency   ASCII value
        1   124 = 0x7C        3251      |
        2   162 = 0xA2        3251
        3   197 = 0xC5        3251
        4     1 = 0x01        3250
        5    74 = 0x4A        3250      J
        6   150 = 0x96        3250
        7   217 = 0xD9        3250
        8   225 = 0xE1        3250
        9    80 = 0x50           1      P
       10   115 = 0x73           1      s
       11   120 = 0x78           1      x
       12   137 = 0x89           1
       13   204 = 0xCC           1
       14   215 = 0xD7           1
       15   231 = 0xE7           1
       16   255 = 0xFF           1
    Remaining byte values do not occur in this file.
 
    File SPCFILE2.ENC contains 52882 bytes and 16 different byte values.
      Rank     Byte      Frequency   ASCII value
        1   162 = 0xA2        6610
        2   197 = 0xC5        6610
        3     1 = 0x01        6609
        4    74 = 0x4A        6609      J
        5   124 = 0x7C        6609      |
        6   150 = 0x96        6609
        7   217 = 0xD9        6609
        8   225 = 0xE1        6609
        9     3 = 0x03           1
       10    67 = 0x43           1      C
       11    94 = 0x5E           1      ^
       12   155 = 0x9B           1
       13   184 = 0xB8           1
       14   236 = 0xEC           1
       15   239 = 0xEF           1
       16   254 = 0xFE           1
    Remaining byte values do not occur in this file.
 
    File SPCFILE3.ENC contains 279123 bytes and 16 different byte values.
      Rank     Byte      Frequency   ASCII value
        1   124 = 0x7C       34890      |
        2   162 = 0xA2       34890
        3   197 = 0xC5       34890
        4     1 = 0x01       34889
        5    74 = 0x4A       34889      J
        6   150 = 0x96       34889
        7   217 = 0xD9       34889
        8   225 = 0xE1       34889
        9    80 = 0x50           1      P
       10   115 = 0x73           1      s
       11   120 = 0x78           1      x
       12   137 = 0x89           1
       13   204 = 0xCC           1
       14   215 = 0xD7           1
       15   231 = 0xE7           1
       16   255 = 0xFF           1
    Remaining byte values do not occur in this file.
 
We find that exactly the same eight byte values are the eight most-frequent
values in each of these four files, namely: 01 4A 7C 96 A2 C5 D9 E1.
Furthermore these are exactly the same eight most-frequent byte values as
occur in the text file MC1.GEN, 76% of whose bytes are not spaces.
 
Each 8-byte DES key maps onto a unique set of eight bytes, namely, the
bytes resulting from encrypting a file consisting of 1024 spaces.  This set
of eight bytes frequently occurs as the set of most-frequent bytes in text
files encrypted with that key, precisely because of the predominance of the
space character in text files.
 
Thus there appears to be strong grounds for doubting the security of DES as
regards the encryption of files consisting of words separated by spaces -
and more generally as regards the encryption of files, such as spreadsheet
and database files, in which the null byte predominates.  The most-frequent
bytes in a file consisting of DES ciphertext can easily be found, and if
(as is often the case) there are eight of them that occur much more frequent-
ly than others, the question is simply how those eight byte values relate
to the encrytion key.
 
It may well be possible to give an answer by analytical means, as a result
of theoretical study of the results of the DES algorithm when applied to a
set of 1024 bytes of value 32.  But if not, there is in principle the
possibilty of constructing a table relating DES key to the 8 most-frequent
bytes resulting from the encryption of 1024 spaces.  Actually 256 spaces
would be sufficient, since the same byte values result as from 1024.
 
There are 256^7 possible DES keys, i.e. approximately 7.2 x 10^16.  How
long would it take to construct this table?
 
In October 1991 Thinking Machines in Massachusetts unveiled a supercomputer
capable of 1,000,000,000,000 operations per second.  If we make the
rough, but not unreasonable, assumption that for each DES key 10,000
operations are required to encrypt 256 spaces and to store the resulting
eight byte values then this supercomputer can generate 100,000,000 entries
in our table per second.  Thus 7.2 x 10^16 / 10^8 seconds would be required
to construct the whole table, which is approximately 22.82 years.  With
improvements in computer speed and architecture, by the year 2000 this time
might well be decreased by an order of magnitude, allowing such a table to
be constructed in 2 or 3 years.
 
However, while awaiting such improvements we can consider the problem from
the analytical side.  Since the DES algorithm for converting 256 bytes of
value 32 each (i.e. spaces) to eight bytes (given some 8-byte key) is well
understood, it may well be possible to discover an inverse algorithm for
converting any given set of eight bytes to some 8-byte DES key such that
those eight bytes result from the encryption of 256 spaces using that key.
If this is the case any DES ciphertext whose byte distribution reveals that
eight values predominate could be cracked simply by applying the algorithm
to the set of eight byte values to obtain the encryption key.
 
----------------------------------------------------------------------------
|Dolphin Software publishes MS-DOS programming tools and data encryption   |
|software which is an alternative to DES.  Information about their products|
|may be obtained by writing to 48 Shattuck Square #147, Berkeley, CA 94704.|
----------------------------------------------------------------------------


