Path: msuinfo!agate!howland.reston.ans.net!vixen.cso.uiuc.edu!sdd.hp.com!svc.portal.com!shell.portal.com!hfinney
From: hfinney@shell.portal.com (Hal)
Newsgroups: sci.crypt
Subject: Re: PGP: Primality testing
Date: 5 Sep 1994 05:43:38 GMT
Organization: Portal Communications (shell)
Lines: 26
Message-ID: <34eb6a$fiu@news1.shell>
References: <34djpn$ca0@eis.calstate.edu> <34dpal$f5c@eis.calstate.edu>
NNTP-Posting-Host: jobe.shell.portal.com

First, I think it is great that you are working through these numbers to
check for weaknesses in the prime test used by PGP.  But I think there is
a fundamental mistake in your math.  Earlier you estimated something like one
chance in a million that a prime accepted by PGP is actually composite.
(I may be off by an order of magnitude, but in any case it was an extra-
ordinarily large fraction.)  This was with the p=2b+1, q=4b+1 formula.

Ignoring for the moment that PGP happens to use 2 as a base for its Fermat
test, and that happens to be a special value, I think your estimate was
far too high.  The chance that a random 512 bit value happens to be of
the form p*q, with p,q as above, is on the order of 1 in 2 to the 256th
power.  It would have to be 8b^2 + 6b + 1, so b is around 2^256 and
therefore there are only around 2^256 possible 512 bit values which
match this formula.

You only seemed to calculate the chance that both p and q would be
prime without also taking into consideration the special relationship
between p and q which must exist (q=2p-1) in order for the formula to
work.  So I think you have overestimated the chance of PGP passing a
composite by on the order of 2^200 or more.  I don't think you have
succeeded in showing that PGP is any more likely to pass composites due
to its use of the Fermat test than due to hardware errors in the
computer running the program.

Hal Finney
hfinney@shell.portal.com
