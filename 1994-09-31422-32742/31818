Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!usc!elroy.jpl.nasa.gov!decwrl!netcomsv!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: How are Unix passwords encrypted?
Message-ID: <phrCvxvpu.B3q@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <Cvq0n2.BKp@amd.com> <phrCvqoC9.GL5@netcom.com> <Cvvn6B.G1I@amd.com>
Date: Sun, 11 Sep 1994 00:22:42 GMT
Lines: 24

In article <Cvvn6B.G1I@amd.com>, Dave Roberts <roberts@angelo.amd.com> wrote:
>Just a followup to this.  Someone mailed me and said that HP-UX
>continues to use a rotor scheme to this day.  Appearantly they've kept
>the old version 6 code around.
>
>So, to summarize: yes, a rotor scheme was used but this changed to DES
>with version 7.  HP-UX appearantly kept the rotor scheme around which
>is how I ended up getting the correct, but not generalizable,
>impression that a rotor scheme is still used :-).
>
>Having said that, what does this say about HP-UX password security?
>Is a rotor scheme "enough" for this particular application?

Well it depends on how important those passwords are!

Seriously, is the exact HPUX rotor scheme available?

The orignal v6 Unix password hashing function was written in PDP-11
assembler.  It's possible that HP reimplemented it in C, but it's
also possible they did something different.

Weinberger and Reeds's BSTJ paper on breaking crypt(1) also talks about
how to make nonlinear rotor machines that are quite hard to break, if
I remember correctly.
