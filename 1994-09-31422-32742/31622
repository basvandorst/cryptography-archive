Path: msuinfo!uwm.edu!math.ohio-state.edu!howland.reston.ans.net!europa.eng.gtefsd.com!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Newsgroups: sci.crypt
Subject: Re: Security of Blowfish
Date: 5 Sep 1994 07:48:52 GMT
Organization: University of Maryland, Baltimore County
Lines: 75
Message-ID: <34eih4$sua@news.umbc.edu>
References: <rlcCvJG5B.45A@netcom.com> <349a8a$fra@news.umbc.edu> <CvKvIH.I3w@chinet.chinet.com>
NNTP-Posting-Host: umbc7.umbc.edu
X-Newsreader: TIN [version 1.2 PL2]

Bruce Schneier (schneier@chinet.chinet.com) wrote:
: In article <349a8a$fra@news.umbc.edu>,
: Bryan G. Olson; CMSC (G) <olson@umbc.edu> wrote:

: >The one change I would have recommended is not to combine the P-key in
: >the same was as the F-function output.  Both are now exclusive or'ed.
: >If the P-key were added instead, this would add a little complexity
: >due to the mix of operations, and it would take the same time.  Both
: >are linear, but over different fields.  Within the F function, Bruce
: >is careful to alternate addition and xor.  I don't know why he didn't
: >carry on the alternation and add the P-keys.

: This is a good idea.  I didn't do it because it made things reversible
: more easily.  But it's an easy change and it may very well help. 

I thought that might be why you did it, but I don't think there's
significant added difficulty.  In the Blowfish code you posted, you
have separate routines for encryption and decryption.  All you would
have to do is change a "+" in one to a "-" in the other.  In the code
I posted, I use the same routine for both, but I build both an
encryption P-key and decryption P-key.  A parameter chooses which one
gets used, which determines the direction.  All I would have to do is
replace each decryption sub-key with its additive inverse.

: The
: other thing I would do is to change one of the addition operations within
: the F function into a subtraction.

Can you explain why?  If you consider the contents of the s-boxes to
be random, this would not change the set of possible transformations,
since subtracting an element is the same as adding its inverse.  You
could make this modification by changing the each word in one s-box
(except S3) to its additive inverse, both initially and at the time of
each key-dependent replacement.  That doesn't seem like it should do
much of anything.

I suppose you could subtract the accumulated result from S4 instead of
subtracting S4.  But because of the correspondence of adding to
subtracting the inverse, I don't see that the interaction is any more
complex.

: >While I'm nit-picking, I would also like a _more_ complex setup
: >procedure.  Rather than randomize the P-key and S-box just once, I'd
: >go P-key, S-box, P-key, S-box, P-key.  I also don't like keeping the
: >running data block and replacing successive blocks with it, since this
: >means the input that generated a blocks contents is the contents of
: >the block right before it.  I'd replace each block with its own
: >encryption, especially if I were using the PSPSP pattern.

: Really?  I figured it was too complex as it is.

: I have had a few complaints that I am using the BLOWFISH algorithm to
: randomize the key scheduling in BLOWFISH, and that that may be a
: problem.

I think its especially a possible problem with the repeatedly
encrypted data block.  In the s-boxes, it seems you would usually be
replacing a block with one which was not dependent upon the contents
just before replacement.  If Blowfish starts being a bad randomizer,
it will probably stay that way.  If you replace each block by its
encryption, you have the initial (pseudo) randomness to help keep the
output random.

If you wanted to assure that replacement block was at least as
unpredictable as the pre-replacement block, you could compute the new
value by encrypting the pre-replacement block, but letting some
constant take its place during that one encryption.  This would make
the setup process reversible, which may not be a good idea.

: >I would not hesitate to trust the most secret data to Blowfish.
: Thanks.  I am not so convinced.
To be honest, I don't have any real big secrets.

--Bryan

