Newsgroups: sci.crypt
Path: msuinfo!caen!math.ohio-state.edu!usc!elroy.jpl.nasa.gov!decwrl!netcomsv!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: **VERY FAST 1024BIT RSA**
Message-ID: <phrCvEuw5.A29@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <33s2f2$3p3@lucy.ee.und.ac.za> <33uhkc$fck@vanbc.wimsey.com> <phrCvD1z4.7qD@netcom.com> <3412rv$h0v@news.umbc.edu>
Date: Wed, 31 Aug 1994 17:50:29 GMT
Lines: 41

In article <3412rv$h0v@news.umbc.edu>,
Bryan G. Olson; CMSC (G) <olson@umbc.edu> wrote:
>Maybe you can answer a couple questions.  
>
>Readers who need the background see:
>    Peter L. Montgomery, "Modular Multiplication Without Trial Division,"
>    Mathematics of Computation, Vol. 44, April 1985 pp.519-521
>or
>    Antoon Bosselaers, Rene Govaerts and Joos Vandewalle, "Comparison of 
>    Three Modular Reduction Functions," Crypto 93.
>
>I like the basic Montgomery reduction algorithm, but his
>multi-precision version seems worse than just doing multi-precision
>multiplication in the basic reduction.  The multi-precision version
>looks like it will always be Theta(n^2), while faster multiplies, like
>Karatsuba, can be used in the basic version.  Does the multi-precision
>version just have a better constant factor, or am I missing something
>else ?

There are various things you can do to reduce the constant factor.
See Mark Dusse and Burt Kaliski, "A Cryptographic Library for the
Motorola 56000", Crypto '90 (if I remember correctly).

>When you say it replaces a multiplication and division with two
>multiplications, which version are you talking about ?  The basic
>Montgomery reduction algorithm looks like it takes 2 multiplications
>besides the one to get the product to be reduced.  Is there some way
>to avoid one of these ?

Yes, I think so.  See the Dusse & Kaliski paper.

>There's a paper by Ernest F. Brickell, Daniel M. Gordon, Kevin S.
>McCurley and David B. Wilson, "Fast Exponentiation with
>Precomputation" which shows how to raise a constant base to different
>exponents quickly.  I got a pre-pub version and I'm not sure where or
>if the paper appeared.

It's in Eurocrypt '92.  See also "More Flexible Exponentiation with
Precomputation", Chae Hoon Lim and Pil Joong Lee, Crypto '94 which
gives methods for doing similar calculations with smaller tables
(good for limited-memory implementations such as smart cards).
