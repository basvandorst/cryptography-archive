Path: msuinfo!gmi!zombie.ncsc.mil!MathWorks.Com!news2.near.net!news.delphi.com!news.delphi.com!not-for-mail
From: jmkelsey@news.delphi.com (JMKELSEY@DELPHI.COM)
Newsgroups: sci.crypt
Subject: Re: Weakness with cipher key
Date: 21 Sep 1994 00:34:35 -0000
Organization: Delphi Internet Services Corporation
Lines: 28
Message-ID: <35nv2r$elv@news.delphi.com>
References: <sternCvKL4B.Hyy@netcom.com> <35lcs1$nmj@agate.berkeley.edu>
NNTP-Posting-Host: news.delphi.com

shirriff@sprite.cs.berkeley.edu (Ken Shirriff) writes:

>If you use two long (256 bytes or slightly less) keys with a certain stream
>cipher, and these keys differ only in the last byte (or so), then the
>output streams from these two keys will usually not diverge for many bytes,
>in some cases more than 100.

   Yes.  Clearly, a certain stream cipher that claims variable length 
keys shouldn't be used with keys anywhere near 256 bytes in 
length--indeed, probably, keys more than 128 bytes are questionable.
   
   Of course, if the passphrases are passed through a good hash function 
designed by the same cryptographer that designed said stream cipher, more 
than a 16 byte keywould probably be more keyspace than was really needed.
   
   I'm interested in the other side.  How does it affect the security of 
the cipher when it's fed a 16-bit key?  Or for that matter, a 40-bit 
key?  The ideal situation for the key setup would seem to be to expand a 
short key into 256 bytes of strongly key-dependent pseudorandom data, and 
use that to shuffle the internal state.  Is there a reason why that's not 
a 
good idea?  Or just why it's not needed?
   

>Ken Shirriff                            shirriff@cs.Berkeley.EDU

   --John Kelsey, jmkelsey@delphi.com

