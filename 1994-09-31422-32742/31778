Path: msuinfo!netnews.upenn.edu!dsinc!newsfeed.pitt.edu!gatech!newsxfer.itd.umich.edu!uunet!george.inhouse.compuserve.com!news.inhouse.compuserve.com!compuserve.com!news
From: Jim Demberger <74425.1642@CompuServe.COM>
Newsgroups: sci.crypt
Subject: Virtual One-Time-Pads
Date: 9 Sep 1994 17:29:38 GMT
Organization: none-set
Lines: 57
Message-ID: <34q622$ht$1@mhade.inhouse.compuserve.com>

Christian Murphy [r1938c@.tmc.edu] wrote:
 
>How are the sub-keys generated?  Are they derived from the output of the
>random number generator?  If so, they are only pseudo-random, and the
>virtual one time pad is also not random.
 
Everyone seems to have a hang-up on PRNGs and the fact that the long
keys used by the VOTP program are not "truly" random.  In the case of
the VOTP program, both Alice and Bob know three numbers ranging is
value from 00hex to FFhex, these three numbers are secret and known
only to A and B.  These three numbers are XORed with three O-T-P
counters that that are incremented for each file to be encrypt.  The
result of the XOR operations are added to an offset that ranging in
value from 00hex to 7Fhex.  These three values are used as seeds for
the BASIC RANDOMIZE function and the RND function is used to permutate
or shuffle three lists or arrays of the character codes from 00hex to
FFhex.  Once the three arrays with the character codes in random order
(sub-keys) have been created the program has no further need for a
PRNG.  A random long key character code (OTP) is created by XORing one
character code from each of the three random sub-keys; the OTP
character code is XORed with one character code from the plain text to
produce a cipher text character.  Repeat the operation with a cipher
text character instead of the plain text character and you get a clear
text character.
 
>The long "random" character string is not random.  Anyone who knows the
>5124 character key can recreate it easily.  Essentially the OTP appears
>to be a large lookup table for your real cipher, which is based on the
>random number generator.
>
>If this is not the case, please let us know why not.  Maybe you would like
>to post a sample of encrypted text of 500 words or so, as a challenge.
 
I don't have any idea of what you are referring to with respect to
"The long "random" character string" or the "the 5124 character key".
Since you haven't run the program against a file of a million or so
00hex character to create a physical OTP rather than a virtual OTP,
how did you determine that the OTP keys are not random?  Unless you
consider the three random character arrays to "tables" and an XOR
operation to be a look-up it "is not the case".  I hope this message
"let us (you) know why not." but you will have to run the program and
read the documentation file to really know how instead of why.
 
I have considered a "challenge" file but there is one problem - an
encrypt file may and probably will have character codes from 00hex
to FFhex.  Probably be best to convert it with UUENCODE rather than
BIN2HEX and to PKZIP the ASCII file prior to encoding.
 
I had hoped that I "could get someone to post it on alt.sources" or
any FTP site.  Maybe someone reading this message thread will decide
to be the "someone" that actually downloads the 46,778KB ZIP file and
crossposts it to a an FTP site.
-- 
Jim Demberger          Internet:  74425.1642@compuserve.com
 
 
 
