Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!gatech!newsxfer.itd.umich.edu!zip.eecs.umich.edu!panix!ddsw1!chinet!schneier
From: schneier@chinet.chinet.com (Bruce Schneier)
Subject: Re: Security of Blowfish
Message-ID: <CvKvIH.I3w@chinet.chinet.com>
Date: Sat, 3 Sep 1994 23:49:29 GMT
References: <rlcCvJG5B.45A@netcom.com> <349a8a$fra@news.umbc.edu>
Organization: Chinet - Public Access UNIX
Lines: 70

In article <349a8a$fra@news.umbc.edu>,
Bryan G. Olson; CMSC (G) <olson@umbc.edu> wrote:
>As a research contribution, BLOWfish isn't very interesting.  The
>cicpher has no really new ideas, and the paper has not a single
>theorem.  Schneier almost slavishly followed the conventional wisdom on
>how to design a cipher we can't even come close to breaking.  How
>boring.  :)

I assume the smiley indicates that you knew that was the point.  When I
was writing Applied Cryptography, I was worried about the lack of
"candidates."  Everything had a 64-bit key (too low) except for REDOC-III
and IDEA, and they were both patent protected.  If we are ever going to
have an algorithm that is widely trusted by the turn of the century, we
need candidates for evaluation today.  So I wrote BLOWFISH...boring,
but fast in software and unprotected by patent.

Now the field has changed.  There are lots of candidates:  CAST, SEAL,
WAKE, 3-WAY, GOST.  Were I starting now, I probably wouldn't feel the
need to write BLOWFISH.

>Actually, Schneier did an excellent job (IMHO) of choosing operations
>which add as much cryptographic complexity as possible in as little
>time as possible.  So far, there are not any good attacks on most of
>the ciphers which use key dependent S-boxes.  This may be because they
>have only recently been widely deployed, but I think keyed s-boxes add
>greatly to a cipher's complexity.

At Crypto 94 there was an attack against Khufu, the key-dependent S-box
cipher of Ralph Merkle.  It was successful against 16 rounds.  However,
it exploited the fact that only eight bits of the input choose the S-box,
whose 32-bit output is XORed with the input.  I thought this was week,
which is why I went with my four S-box cascade.

It's very hard to do linear or differential cryptanalysis on key-dependent
S-boxes (if they are large enough) because it is hard to get any meaningful
characteristics.  The debate is still out as to whether random key-dependent
or carefully-chosen fixed S-boxes are better.  I feel they are both secure.

>The one change I would have recommended is not to combine the P-key in
>the same was as the F-function output.  Both are now exclusive or'ed.
>If the P-key were added instead, this would add a little complexity
>due to the mix of operations, and it would take the same time.  Both
>are linear, but over different fields.  Within the F function, Bruce
>is careful to alternate addition and xor.  I don't know why he didn't
>carry on the alternation and add the P-keys.

This is a good idea.  I didn't do it because it made things reversible
more easily.  But it's an easy change and it may very well help.  The
other thing I would do is to change one of the addition operations within
the F function into a subtraction.

>While I'm nit-picking, I would also like a _more_ complex setup
>procedure.  Rather than randomize the P-key and S-box just once, I'd
>go P-key, S-box, P-key, S-box, P-key.  I also don't like keeping the
>running data block and replacing successive blocks with it, since this
>means the input that generated a blocks contents is the contents of
>the block right before it.  I'd replace each block with its own
>encryption, especially if I were using the PSPSP pattern.

Really?  I figured it was too complex as it is.

I have had a few complaints that I am using the BLOWFISH algorithm to
randomize the key scheduling in BLOWFISH, and that that may be a
problem.

>I would not hesitate to trust the most secret data to Blowfish.

Thanks.  I am not so convinced.

Bruce
