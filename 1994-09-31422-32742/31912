Newsgroups: sci.crypt
Path: msuinfo!uchinews!ncar!newsxfer.itd.umich.edu!europa.eng.gtefsd.com!emory!swrinde!sgiblab!pacbell.com!amdahl!netcomsv!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: Virtual One-Time-Pads
Message-ID: <phrCw3G57.2p8@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <phrCvxvBF.AIB@netcom.com> <34vfmf$stj@news.umbc.edu>
Date: Wed, 14 Sep 1994 00:31:54 GMT
Lines: 70

In article <34vfmf$stj@news.umbc.edu>,
Bryan G. Olson; CMSC (G) <olson@umbc.edu> wrote:
>Paul Rubin (phr@netcom.com) wrote:
>
>: Well them please post the program or a challenge encryption,
>: so people can take a crack at it.
>
>Well Paul, you took the bait.  Have fun.
>
>Maybe we need to be less adversarial the next time 
>someone suggests a variant of an old cipher.  If we 
>take a more helpful attitude, perhaps we could  avoid 
>getting to the "oh yeah, lets see you break it" point.

I looked at the source code and found that the cipher worked the way
the earlier postings described, i.e. the standard attack against
the Vernam cipher breaks it easily.

Maybe it wasn't nice to be so hard on the poor guy but he was so
arrogant about the whole thing.  Anyway, getting flamed on netnews for
believing in a weak cipher isn't fun, but getting killed in a war
because you (or the person giving you orders) believes in a weak
cipher is a lot worse and this has happened many times (see The
Codebreakers, etc.).

Despite using a weak cipher, the program and its documentation were
pretty well done (especially considering that the code is in BASIC).
The documentation shows that the author is fairly familiar with some
historical crypto schemes, plus he showed good sense in posting the
source code after it was requested.

I think the lesson to be learned is to never be too sure of a
new cryptosystem you have invented, no matter how knowledgeable you are.
I don't mean to discourage the guy who posted the VOTP stuff from
learning more cryptography, but be aware that lots of other people
have thought about these same problems before.  Phil Zimmermann
recently said something very wise, which is that he *knows* that he
(PRZ) is not a very good cryptographer, and knowing that fact makes
him a better cryptographer than many people who are more
cryptographically knowledgable than he.  (I.e. he chooses algorithms
that have withstood professional scrutiny rather than trusting his own
new inventions).

Anyway, don't get discouraged.  PGP got started in a sort of similar
way to VOTP, as the PGP manual explains.  From PGPDOC1.TXT:

    When I was in college in the early seventies, I devised what I
    believed was a brilliant encryption scheme.  A simple pseudorandom
    number stream was added to the plaintext stream to create
    ciphertext.  This would seemingly thwart any frequency analysis of
    the ciphertext, and would be uncrackable even to the most resourceful
    Government intelligence agencies.  I felt so smug about my
    achievement.  So cock-sure.  

    Years later, I discovered this same scheme in several introductory
    cryptography texts and tutorial papers.  How nice.  Other
    cryptographers had thought of the same scheme.  Unfortunately, the
    scheme was presented as a simple homework assignment on how to use
    elementary cryptanalytic techniques to trivially crack it.  So much
    for my brilliant scheme.

    From this humbling experience I learned how easy it is to fall into a
    false sense of security when devising an encryption algorithm.  Most
    people don't realize how fiendishly difficult it is to devise an
    encryption algorithm that can withstand a prolonged and determined
    attack by a resourceful opponent.  Many mainstream software engineers
    have developed equally naive encryption schemes (often even the very
    same encryption scheme), and some of them have been incorporated into
    commercial encryption software packages and sold for good money to
    thousands of unsuspecting users.   [goes on to give examples, etc.]
