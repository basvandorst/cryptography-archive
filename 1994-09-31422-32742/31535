Newsgroups: sci.crypt
Path: msuinfo!agate!spool.mu.edu!sdd.hp.com!hplabs!hplextra!hplb!news
From: dg@dgupta.hpl.hp.com (Dipankar Gupta)
Subject: Re: Zero - knowledge ...
Summary: zero knowledge protocol for 3-colouring a graph 
Sender: news@hplb.hpl.hp.com (Usenet News Administrator)
Message-ID: <DG.94Sep2130320@dgupta.hpl.hp.com>
In-Reply-To: ppearson@netcom.com's message of Thu, 1 Sep 1994 15:44:15 GMT
Date: Fri, 2 Sep 1994 12:03:20 GMT
Lines: 116
References: <CvE5z2.4uy@sk2eu.eunet.sk> <ppearsonCvGJpr.Cw8@netcom.com>
Nntp-Posting-Host: dgupta.hpl.hp.com
Organization: Hewlett-Packard Laboratories, Bristol, England
Keywords: Cryptographic protocols, NP, one-way functions, zero knowledge


In response to the query:
>   Exist any zero-knowledge proof system for any NP-complete language ?
>   If yes, which and where can I find it ?

Peter Pearson wrote:

 PP> There is a lovely protocol for demonstrating knowledge of a
 PP> Hamiltonian circuit for a published graph, using paper, pencil,
 PP> and lottery scratch-off paint. The prover draws a random
 PP> isomorphism of the graph, and paints over everything except the
 PP> (unlabelled) nodes with scratch-off paint. The verifier then
 PP> asks the prover to do one of two things: (1) scratch off all the
 PP> paint and demonstrate the isomorphism; or (2) scratch off the
 PP> paint over the edges in the Hamiltonian circuit. A prover who
 PP> can do both knows a Hamiltonian circuit in the original graph;
 PP> therefore an impostor would be unable to perform one or the
 PP> other, and would have a 50% chance of being unable to perform
 PP> the one that the verifier chose.

You haven't demonstrated that this protocol is zero knowledge. Apart
from that, I don't think this protocol is secure. Let's state it a bit
more formally to be able to analyse it. Please let me know if I've
misunderstood your description.

Given a graph G = <E, V>; |E| = n, |V| = m.

PROTOCOL

---------------------------------------------------------------------
1. Prover computes a random isomorphism of G, called H, induced by f
   which is a random 1-1 mapping of vertices, ie H = fG.

   It sends H to the verifier.

2. The verifier now tosses a coin c \in {0, 1} and sends it to the
   prover.

3. If c = 0, prover reveals f (the permutation of vertices leading to
   the isomorphism).

   If c = 1, prover reveals a Hamiltonian circuit in H.

4. The verifier can now verify the answer in either case in polytime,
   and reject in case of failure.
---------------------------------------------------------------------

Presumably, the intention is that the protocol can be repeated a
number of times to make the verifier check the veracity of the
Hamiltonian circuit with high probability.

PROBLEM
-------

A cheating prover can fool the verifier with probability 1. Consider a
cheating prover, which does the following:

In Step 1:
   Apart from computing H, it also generates a simple graph H' with
   the same number of vertices as H, but which has a Hamiltonian
   circuit. Clearly, this graph H' can be generated in time O(m). Note
   that H' is *not* isomorphic to G.

In Step 3:

   If c = 0, prover reveals the permutation of vertices f, as in
   original protocol.

   However, if c = 1, reveals a Hamiltonian circuit in H'.

---------------------------------------------------------------------

I would be *very* surprised if you could devise a zero knowledge
protocol for an NP-complete language without the use of one-way
functions.

Here's a reproduction of [GMW]'s construction of a ZK protocol for
graph 3 colourability (G3C), which is known to be NP-complete. It
assumes that a one-way function is available.

Let the colouring be indicated by the labels {1, 2, 3}, induced on the
vertices V of the graph G = <E, V>, |V| = m.

PROTOCOL ZK-G3C
--------------------------------------------------------------------
1. Prover generates a random mapping of the colours {1, 2, 3} into a
   set {R, G, B}. It then locks the {R, G, B} labels for all m
   vertices in m boxes using the one-way function.

2. Verifier chooses a random edge e, and asks for the colour of
   vertices u and v, where e = <u, v>.

3. Prover sends the keys to boxes corresponding to u and v.

4. Verifier decodes the labels in relevant boxes and check that they
   contain different elements of {R, G, B}. Else, it rejects.
--------------------------------------------------------------------

The protocol is repeated m^2 times, each time with a new random
mapping chosen by the prover, and a new random edge chosen by the
verifier.

The probability that a cheating prover will incorrectly convince the
verifier of 3-colourability of the graph G is: (1 - 1/m)^{m^2} which
is approximately exp(-m).

The border of this window is too narrow to contain a proof of the zero
knowledge property of protocol ZK-G3C (see pp 714--721 of [GMW]
instead).

Regards,
--Dipankar

[GMW] Oded Goldreich, Silvio Micali and Avi Widgerson
      ``Proofs that yield nothing but their validity''
      J. ACM 38(1) 691--729 (1991)
