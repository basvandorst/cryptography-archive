Newsgroups: sci.crypt,talk.politics.crypto,comp.security.misc,misc.legal.computing
Path: msuinfo!agate!howland.reston.ans.net!news.sprintlink.net!demon!giskard.demon.co.uk!dale
From: dale@giskard.demon.co.uk (Dale Shuttleworth)
Subject: Re: Legality of black-market R-C-4 code
Message-ID: <CwnAx5.EB@giskard.demon.co.uk>
Reply-To: dale@giskard.demon.co.uk
Organization: Dale's home Linux box.
Date: Sat, 24 Sep 1994 17:51:04 GMT
References: <Cw7H1x.8sC@chinet.chinet.com> <gradyCw8xv2.Hn9@netcom.com> <PERRY.94Sep17205006@snark.imsi.com> <strnlghtCwD3B8.Lzy@netcom.com> <35klsc$pmu@engr.orst.edu> <35l183$1rg@nntp.ucs.ubc.ca> <nagleCwK5nA.A2B@netcom.com>
X-Newsreader: TIN [version 1.2 PL2]
Followup-To: sci.crypt,talk.politics.crypto,comp.security.misc,misc.legal.computing
Lines: 82
Xref: msuinfo sci.crypt:32460 talk.politics.crypto:7545 comp.security.misc:11974 misc.legal.computing:9851

Hi,

As far as I can see, there are three forms of protection a piece of
software may have:

1) Patent (only in the USA as far as I know), this protects any algorithms
   used in your software.

2) Copyright (applicable everywhere the Berne convention applies), this
   protects the actual representation of the algorithm (as either source
   or executable code).

3) Contractual (enhanced by some trade secret laws in the USA), this
   protects the software through legal agreement.

In the case of the code in question, we need to look at the three possible
forms of protection and see if they apply:

1) If the algorithm was patented, the software may be protected in the USA,
   I understand that this was not the case.

2) Copyright.  I assume that the original code was copyright (I don't think
   that the code was dedicated to the public domain by its authors :-).
   Copyright law protects the code from people copying it, nothing more, if
   the reverse engineer obtained a copy legally, then this does not apply.
   If the copy was illegally obtained, I assume that compensation could be
   claimed, I do not know whether damages as a result of reverse engineering
   the code could be included in the claim, I doubt it.

   Copyright does not apply to the algorithm, so I can publish what I find
   as a result of reverse engineering the code.  The reverse engineered
   code itself *may* be subject to the original copyright however (it is
   after all a copy, or maybe a derivitive work).

3) Contractual.  This is the broadest form of protection and largely
   depends on the agreements with all parties involved.  If RSADSI insists
   that anyone who wants their code must agree not to reverse engineer it
   then they have protected themselves.  If for example, I license the
   code from RSADSI and then sell programs including it, depending on my
   agreement with RSADSI, I may have to add a clause in my agreement with
   my customers that they may not reverse engineer the code.  If I omit
   that clause, then my customers can quite legally reverse engineer
   the RSADSI code.  I may find however that my agreement with RSADSI
   means that I am responsible if they do, and may entitle RSADSI to
   compensation.  There is nothing RSADSI can do about the reverse
   engineered copies of its code however (except copyright considerations)
   since it has no contract with my customers.

   The contractual issues are futher complicated by various laws
   controlling what may or may not be permitted in a contract, for example
   the European laws concerning reverse engineering to allow compatability.

In a nutshell, if someone includes an algorithm in a piece of software and
makes it publically available, in order to protect it, they must:

1, Make everyone they give copies agree not to reverse engineer it, and
   ensure that they do the same (right down to the end user - IE if I give
   you my copy of Lotus Notes, I must ensure you sign an agreement not to
   reverse engineer it (otherwise, RSADSI sues Lotus, who sues me, who
   can't sue you cos I didn't say that you couldn't reverse engineer it).
   (The above argument may be moot due to other license restrictions about
   transfer of ownership, etc).

2, Make everyone they give copies agree that they will not transport
   copies to a location where reverse engineering is permitted
   irrespective of their agreement in (1) directly above.

In a nutshell, if you wish to keep an algorithm secret don't put it in a
piece of software you sell, unless you only sell it to people you trust
(and who can afford to pay a big compensation claim if they screw up).

I have no legal training and the above may be totally wrong, as in
everything, if you want advice that has a greater than 50% chance of
being right, consult a professional (in this case a lawyer).

		Dale.

-- 
******************************************************************************
*  Dale Shuttleworth                                                         *
*  Email: dale@giskard.demon.co.uk                                           *
******************************************************************************
