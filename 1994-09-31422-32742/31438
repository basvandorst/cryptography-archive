Newsgroups: sci.crypt,alt.security,alt.security.pgp,comp.security.unix,comp.security.misc
Path: msuinfo!agate!howland.reston.ans.net!gatech!newsxfer.itd.umich.edu!uunet!walter!faline!rubin
From: rubin@faline.bellcore.com (Avi Rubin)
Subject: Re: Betsi
Message-ID: <CvEG38.IzF@walter.bellcore.com>
Sender: rubin@faline (Avi Rubin)
Nntp-Posting-Host: faline.bellcore.com
Organization: Morristown Research and Engineering
References: <CvD2C7.2J7@walter.bellcore.com> <341p05$ae9@rzsun02.rrz.uni-hamburg.de>
Date: Wed, 31 Aug 1994 12:30:43 GMT
Lines: 111
Xref: msuinfo sci.crypt:31438 alt.security:18547 alt.security.pgp:19764 comp.security.unix:7993 comp.security.misc:11504

Thank you very  much for your comments. I will respond to
each point.

In article <341p05$ae9@rzsun02.rrz.uni-hamburg.de>, bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev) writes:
|> 
|> 1) Its main problem is that it relies on the fact that the users of
|> the software that is certified this way will (a) have PGP, (b) know
|> how to use it, (c) bother to use it to verify the authenticity of the
|> packages, (d) know about Betsi, and (e) trust Betsi. You certainly
|> know this; I'm just afraid that it is not emphasized well enough in
|> your paper. Only the condition (e) is relatively easy to fulfil;
|> hopefully the other conditions will be fulfilled in the future when
|> software certifications and PGP become more common among the average
|> users.

I totally agree. I am doing my best on d and e. The problems you 
mention, a-c are not easy problems. The solution I plan on working
on is integrating Betsi with mosaic so that when files are retreived,
there is a Betsi certificate that is automatically verified. Hopefully,
I will have a prototype of Betsi integrated with Mosaic soon.

|> 
|> 2) I don't like the format of the messages that Betsi certifies. In
|> particular, I don't see the need to put the name of the ftp site
|> there. The packages are usually uploaded to many ftp sites, some sites
|> mirror others, and so on, so it is very cumbersome to insist on a
|> separate certification for each ftp site. I would suggest that this
|> line is omitted from the message.

The ftp site is there for convenience. In Betsi's current form, 
the user is verifying the certificates himself, so he could choose
to ignore the ftp site or any other information. However, if it is
important that a file only be retreived from one site, this can
be achieved.

|> 
|> 3) By "file version number" you mean the version number of the
|> product, right?

Right, the version number of whatever file is being certified, not
the certificate.

|> 
|> 4) I don't like the fact that the current message format allows only a
|> signle *file* to be certified. Most products come in packages (usually
|> contained in an archive) and consist of multiple files, the integrity
|> of many of which is critical for the proper functioning of the
|> product. It would be too cumbersome to have a different certificate
|> for each of those files. Generating a certificate for the whole
|> archive is not good either, because many archive sites (e.g., Garbo)
|> re-package the archives, add archive comments, and otherwise modify
|> the original file. I would suggest that you allow more than one file
|> per certificate, i.e., that the section that lists the MD5 hashes can
|> contain several lines, each listing a combination of a file name and a
|> MD5 hash for that file.

This is a good suggestion, and I will consider this for the future
if Betsi is successful.

|> 
|> 5) I don't like the format of the output of the program MD5sum, which
|> you propose for computing the MD5 hashes. It is often useful to have
|> some additional information, like the file size and date of last
|> modification. Maybe you should create a modified version of MD5sum
|> that lists those data too on a single line, make sure that the program
|> is portable and works on many different platforms, create the proper
|> makefile (which is lacking in the PGP distribution that has MD5sum)
|> and make it available?

Another good suggestion, I'll add it to my list of things to do to
improve Betsi.

|> 
|> 6) I don't like the idea that the certification should be in a
|> separate file in the same directory at the ftp site where the
|> certified file is. Instead, the certification should be included in
|> the archive that contains the package - this way you'll make sure that
|> the user who downloads the package will get the certification.

Good point. This will have to take place when Betsi is modified
to certify multiple files, because the current impelmentation
requires Betsi to certify the entire archive.

|> 
|> 7) Since you'll go through some efforts to authenticate the people who
|> register their keys with Betsi, maybe you should also sign their
|> public keys with Betsi's key? This way they will be able to create
|> detached signatures and include their (signed by Betsi) key in their
|> packages.
|> 

I have been debating this point with some people. The problem is
that by signing others' public keys with Betsi, I am doing more
than just allowing them to sign their packages. When a user
registers with Betsi, the certificates issued by Betsi link that
user to his files. They say nothing about the trust in those files,
just that this person exists. If Betsi signs a key, then others
might trust that person's key in ways that were not originally
intended by Betsi. 

In addition, one long-term goal of Betsi is to be independent 
of any implementation, such as PGP. It is possible that at some
point in the future, a commercial version of Betsi will use DSS
or something else. The lawyers at Bellcore are very worried about
the possible implications of using a product commercially that
requires use of PGP. It was non-trivial to get them to agree to
this "experiment".

In the future, it is possible that Betsi might be extended to serve
as a key signing facility, but right now its functionality will be
limited to issuing certificates.
