Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!newsxfer.itd.umich.edu!uunet!psinntp!news.worldlink.com!usenet
From: "phil reed" <p01613@psilink.com>
Newsgroups: comp.compression,sci.crypt
Subject: Re: PKZIP encryption "contest" password recovered
Date: Tue, 13 Sep 94 10:36:43 -0400
Organization: black cat brewery
Lines: 151
Message-ID: <2988541388.0.p01613@psilink.com>
NNTP-Posting-Host: worldlink.com
In-Reply-To: <3534o5$h63@nntp.Stanford.EDU>
X-Mailer: PSILink-DOS (3.6.2)
Xref: msuinfo comp.compression:14477 sci.crypt:31894

>DATE:   13 Sep 1994 03:02:29 GMT
>FROM:   Paul Carl Kocher <kocherp@leland.Stanford.EDU>
>
>phil reed <p01613@psilink.com> wrote:
>>Paul Carl Kocher <kocherp@leland.Stanford.EDU> writes:
>>>
>>>I have just recovered the original password to the PKZIP 
>>>encryption contest file using the cryptanalysis of the PKZIP 
>>>encryption algorithm that I announced several days ago.  For 
>>>the attack I used the known plaintext of the contest file, which 
>>>was made available by PKWARE (thanks to Jean-loup Gailly and
>>>Douglas Quagliana for passing this along!)  Actual running 
>>>time for the attack was approximately 15 hours on a 
>>>50-mhz '486-50SLC computer.
>>>
>>> {deletia}
>>>
>>>Cheers,
>>>Paul Kocher
>>
>>You might be interested to know that when this information was posted
>>on Compuserve in the PKWare forum, the PKpeople reaction was
>>(paraphrased) "So what? He used known plaintext. Who is going to give 
>>away any text to their encrypted file?"
>
> {deletia, to save space}
>
>Still, PKWARE has a valid point -- if you use the technique they
>used in the "contest" and only use PKZIP to encrypt uncompressable
>files containing >99% random data with tiny, unguessable messages
>hidden in them, my attack does not work.  (Actually, if your
>summary of PKWARE's response is correct, I'm astounded as to how 
>they could possibly claim that the encryption algorithm is 
>adequate.)
>

Here is part of the public exchange between myself and PKpeople on Compuserve.

=

{this first message is from me to Douglas Hay of PKWare. I am quoting 
an earlier message of his. pcr}

"Kocher says if you have the first 100 bytes or so of the file, then 
you can find the password.  How realistic is that ?  If you forgot your 
password, it may help you, but if I were sending a encrypted file, I 
wouldn't give you any part of it unencrypted."

First, he doesn't say anything about being the FIRST 100 bytes, just 
100 bytes. Second, he said that he could work up an attack with just 40 
bytes. Third, how hard would it be to guess 100 bytes, or 40 bytes? A 
name and address would likely be enough plaintext to go on. Plus, 
suppose I were to sweep the drive the ZIP file lived on, checking 
deleted file fragments. All I'd have to do is recover one sector of the 
plaintext to have more than enough.

Later news: he broke the PKZIP challenge file with a plaintext attack
and recovered the password. He says it took 15 hours on a 386. {typo -
I meant 486. pcr} I don't have the message handy, but it should be in
this weekend's traffic on sci.crypt (GO USENET).

=

{msg from Douglas Hay to me}

We gave the text of the file that was in the contest file. Are you
telling me I can send you a encrypted file and you can break it ? How
will you get access to my hard disk to search for deleted files.

>> Third, how hard would it be to guess 100 bytes, or 40 bytes?

OK, I am thinking of a 40 byte string.  Please tell me the exact
sequence I am thinking of.  I don't think this is realistic.

Doug

=

{me to Doug}

Doug, you're making a bunch of assumptions about the circumstances in 
an attack on a zipped file, and these assumptions may or may not hold 
up. Let me give you some counterexamples.

Because PKZip will give me the file names in an encrypted archive 
without knowing the password, I can pretty easily find out what 
application the file was created by. Now sure, you can give me an 
arbitrary text file and I wouldn't be able to guess any of the text. 
However, suppose it was created by Excel or Visio or WordPerfect, or 
some other common program businesses use). All these programs have data 
blocks near the beginning of the file that are the same regardless of 
the content of the file. That gives me the 40 bytes or so of plaintext 
needed. The author of the file has no control over this data block. I 
believe you will find similar data blocks in most data files created by 
the current crop of business apps.

If the program happens to be a Windows application, then the compilers 
supply a standard binary library that can be used as plaintext. (When 
you try to run a Windows app in DOS, where does that "This program must 
be run under Microsoft Windows" string come from? That's over 40 bytes 
by itself, not including the code it takes to put the text on the screen.)

Also, as another correspondant pointed out, the inclusion of a standard 
file like VBRUN300.DLL would be an immediately obvious and huge block 
of plaintext.

If we assume an attack against a particular company (as opposed to a 
random attack which you appear to think of as the only possibility), 
then lots of plaintext can be guessed or otherwise obtained. Our 
company includes a graphics logo in lots of the printed documents. 
Somebody who snuck in and snagged an unencrypted memo file along with 
the zip files would have a large chunk of plaintext to work with. 
Address blocks can easily give 30-40 bytes of known text, even if you 
ignore the person's name.

=

{Doug to me}

If people aren't satisfied with the encryption, they can use PGP or
something else.  PKZIP is an archiving program, it just happens to have
encryption also. I would guess less than 1% of our users use the
encryption.  I don't know if PK plans on changing the encryption in the
future.

=

{me to Doug}

That's fine, as long as they understand the issues. The problem is 
those users that think the encryption is good because the compression 
is good. They don't know any different, because they aren't as well 
connected as you or I.

Trust is important.

=
{end of exchange, so far}

>Cheers,
>Paul Kocher
>
>P.S. Please feel free to forward this to CompuServe.
>
>__________ Paul C. Kocher _________ kocherp@leland.stanford.edu __________
>      Independent data security consultant/contractor.  415-323-7634
>--------------------------------------------------------------------------
>Disclaimer: The views presented in this message do not represent RSA Labs,
>Microsoft, or any other corporation I am affiliated with and/or work for.
>

