Path: msuinfo!gmi!usenet.eel.ufl.edu!MathWorks.Com!news2.near.net!news.delphi.com!news.delphi.com!not-for-mail
From: jmkelsey@news.delphi.com (JMKELSEY@DELPHI.COM)
Newsgroups: sci.crypt
Subject: Re: Stream Encryption using DES
Date: 16 Sep 1994 01:26:46 -0000
Organization: Delphi Internet Services Corporation
Lines: 31
Message-ID: <35as8m$oum@news.delphi.com>
References: <35ad2h$4mo@agate.berkeley.edu>
NNTP-Posting-Host: news.delphi.com

spp@bob.eecs.berkeley.edu (Steve Pope) writes:

>I am looking for suggestions on stream encryption
>methods using a DES block-encryption function 
>as the core component of the keystream generator.
>Criteria are:
>1. Security
>2. Efficient in terms of amount of keystream generated per
>   block-encryption operation

If you're not worried about keysearch attacks, you could run DES
in OFB mode, or encrypt a cheap PRNG's outputs in CBC or CFB mode.
 
If you're worried about keysearch attacks and can afford it, using
3DES in the above configurations is probably a reasonable idea.
 
I posted an idea a while back to use two copies of DES in OFB mode 
XORing their outputs together to get a keystream.  My main objective
was to figure out how to crack it with a keysearch attack.  I've never 
seen a way to do that, but I'm not all that certain that it can't be done.

There are lots of other possiblities, such as passing a subset of the DES
output bits (from DES-OFB) through a good stream cipher's nonlinear 
combiner.  I'd avoid using them for really important things unless you've 
spent some serious time looking for flaws.  (I posted on several ways to 
use DES that were susceptible to keysearch attack a while back....)

>Steve

   -John Kelsey, jmkelsey@delphi.com

