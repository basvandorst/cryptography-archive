Path: msuinfo!agate!library.ucla.edu!csulb.edu!nic-nac.CSU.net!ctp.org!not-for-mail
From: jomcgow@eis.calstate.edu (John S. McGowan)
Newsgroups: sci.crypt
Subject: PGP: Primality testing
Date: 3 Sep 1994 09:33:29 -0700
Organization: California Technology Project of The Calif State Univ
Lines: 141
Message-ID: <34a8gp$h0e@eis.calstate.edu>
NNTP-Posting-Host: eis.calstate.edu

                     Primality testing in PGP:
                     -------------------------

The following is for testing whether "n" is prime (one of the factors in
the PGP modulus) and I am taking n having 1024 bits (2048 bit modulus in
PGP)
=========================================================================

Someone had discussed primality testing in PGP (uses Fermat for 2,3,5,7)
(rather than Miller-Rabin which is just Fermat, but in raising a number
"a" to the power n-1, one first raises to the odd part of n-1 -factor
out all the two's one can- and then successively squares to get a^(n-1)
and also checks that one does not along the way get a trivial
factorization of n by getting a non-trivial square root of one, that
is... in the squaring, making sure that one does not see ...R,1 where
R<>+/-1) (if R^2=1 mod n, and R<>+/-1 then GCD(R-1,n) is a factor of n).

He/she had claimed that 1/256 (of the time) PGP would make a mistake on
primality testing (or more) if it used Fermat with four randomly chosen
a,b,c,d (instead of 2,3,5,7) and he/she is right and wrong (the 1/256
seems to have come from taking the Miller-Rabin bound of 1/4 and raising
to the fourth power).

Consider... suppose I could choose an input to the PGP primality tester
and it tests for primality.

I choose n=pq where p,q are primes, p=2b+1, q=4b+1 and b is odd. The
Miller-Rabin test will only notice that n is composite 3/4 of the time
(that is, choosing a random "a" to use in the test) (Fermat will only
find its composite nature in about half the cases) so that if we used
four randomly chosen test values, Miller-Rabin would have a chance
of 1/256 (well, better, since this is without replacement) (Fermat,
1/16) of missing the composite nature of n (if n=pqr is Carmichael with
p,q,r prime and each congruent to 3 mod 4, then Miller-Rabin will miss
the composite nature about 1/4 the time, while Fermat will almost never
notice the composite nature... only if one uses a multiple of p,q or r)
(I will not use the Carmichael number example, for it is much harder to
give any sort of estimate on the prob. that such occur).

That is correct... and the primality test is terrible, as a primality
tester.

But it is *not* a primality tester, but a primality tester of randomly
chosen n's! (that is important).

Consider the numbers that can be written as n=pq, p,q prime,
p=2A+1,q=4A+1, A odd (will drop some small factors as I go on)... to
pick A so that 2A+1 is prime... hmmm... 2A+1 is a randomly chosen odd
number... seems about 2/ln(2A+1) of the time... but q must be prime, and
if the distrubution were random and independent... that happens about
2/ln(4A+1) of the time... so the prob that such an n would show up is
like (if independent) 1/ln(A)^2 and A is on the order of SQR(n) and
ln(SQR(n))=.5*ln(n) so this is on the order of 1/ln(n)^2 while the prob.
of getting a prime is on the order of 1/ln(n).

Suppose n is about 1024 bits (again, I drop some small factors, so
ignore the difference between log_2 and ln)... the prob. of getting a
prime is 1/1024 and the prob. of getting one of the mentioned special
cases is like 1/(1024)^2 (note... here n is a putative prime, chosen as
a factor in the modulus of RSA... this indicates that the calculations
are for RSA with 2048 bit moduli).

Suppose these are the only two things that can occur (and pass the test
for primality) ... if one were to
randomly choose an n and know (testing for four randomly chosen a,b,c,d
using Fermat only) that one of the two possibilities occurred, then the
prob. that one has a prime is 1/1024/[1/1024+1/16/1024/1024] (again...
just on the order of... I have dropped some small factors]... that is
about 16384/16385=99.994% sure one has a prime (it is not this good, for
other cases can occur, but with lower prob. of failing Fermat for a
randomly chosen a,b,c,d for the primality test). Note that this is much
better than 15/16!

PGP uses a simple test, because it is NOT a primality tester, but a
primality tester to be used ONLY on randomly chosen n. It permits a
rather large chance of failing to note compositeness for some n, in the
knowledge (hope?) that these are so few compared to the number of primes
(that pass the test -all primes pass the test).

Assuming independence of the distribution of 2b+1,4b+1 (not true) (and
ignoring the small multiples needed in the above), it seems that when
using PGP one can be at most about 99.994% sure that one has prime
numbers in constructing the modulus, or thus (since it applies to each
factor of n separately) 99.988% sure that the modulus is the product of
two primes (this is for the two prime factors of 1024 bits... or a 2048
bit modulus in PGP... again, put in the corrections to the change from
log_2 to ln and the factor of .5 in ln(sqr(n))=.5*ln(n) if you want more
reasonable results... and drop to 128 from 1024 if you want info on what
happens if you use 256 bit moduli in PGP) (again... this is ONLY for
assumed independence of the two distributions I used).

The above is for using random a,b,c,d for Fermat tests (rather than
2,3,5,7).

The only way PGP can get by with so poor a primality tester is that it
is *not* a primality tester, but is a tester *only* to be used on
randomly chosen putative primes!

Addendum:
---------

Proof that Miller_Rabin will fail to notice the composite nature of n
about 25% of the time, and Fermat 50% of the time using a randomly
chosen "a" to test if n=pq, p,q primes... p=2b+1,q=4b+1

The multiplicative group of the numbers relatively prime to n (Z'(n)) is
isomorphic to Z(2)+Z(4)+Z(b)+Z(b) (written additively).

n-1=8b^2+6b and the odd part of (n-1)=4b^2+3b which is a multiple of b.

Raising a to the odd part of n-1 kills the terms in the Z(b)+Z(b) part,
so that successively squaring (once, as (n-1)/odd_part_(n-1) = 2) will
pass Miller-Rabin just if a^(odd_part_(n-1)) comes out as either (0,0)
or (1,2) (using the isomorphism from Z'(n)->Z'(p)xZ'(q) given by
[x_mod(n)]->[x_mod(p),x_mod(q)]). That is 2 of the 8 items in Z(2)+Z(4),
and raising to the odd part of n-1 is onto this part, with each element
coming up equally likely.

Thus, 25% (2/8) of the time, a randomly chosen "a" will pass the
Miller-Rabin test (that is, not indicate that n is composite)
(this 25% is really just 25% of the numbers relatively prime to n).

-----

For Fermat, the number of elements that pass the test is
GCD(2,n-1)xGCD(4,n-1)xGCD(b,n-1)xGCD(b,n-1)=2*2*b*b=4b^2 and the size of
n is about 8b^2, so half the numbers pass the test (that is, do not
indicate the composite nature of n) (again... this is just for the
numbers relatively prime to n)

=========================================================================

Yep... PGP needs a better primality tester, for otherwise the modulus
may have a smaller prime factor, making it more easily factored.

--
   John S. McGowan   |    jmcgowan@bigcat.missouri.edu [COIN] (preferred)
                     |    j.mcgowan15@genie.geis.com   [GEnie]
                     |    jomcgow@eis.calstate.edu     [CORE]
   ----------------------------------------------------------------------

