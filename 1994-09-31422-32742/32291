Path: msuinfo!agate!howland.reston.ans.net!vixen.cso.uiuc.edu!sdd.hp.com!svc.portal.com!shell.portal.com!hfinney
From: hfinney@shell.portal.com (Hal)
Newsgroups: sci.crypt
Subject: RC4 repetitions
Date: 21 Sep 1994 15:50:09 GMT
Organization: Portal Communications (shell)
Lines: 73
Message-ID: <35pknh$e1v@news1.shell>
NNTP-Posting-Host: jobe.shell.portal.com
Keywords: RC4

(I tried to post this to sci.crypt.research, but it didn't come through;
maybe I did it wrong or didn't wait long enough?  How much delay will the
moderation add?)

I have a result which may shed some light on the gap size results
reported earlier.  Let me re-write the main loop of the alleged RC4 code
as:

    repeat:
	a = s[++x]
	b = s[y += a]
	swap s[x] and s[y]
	output s[a+b]

where all arithmetic is mod 256 and we consider the loop as a PRNG.

Focus attention just before the swap.  Then I claim:

If a=0 then the output will (almost) never match the previous output.

Note that a=0 about 1/256 of the time.  The "almost" refers to a rare
case which happens about 1/2^24 of the time.

The reasoning is as follows.  On the iteration before a=0, we have
something like this:

	index	s array value

	x	a
	x+1	0
	...	...
	y	b

We output s[a+b].  On the next turn we have swapped a and b and advanced
x, but y doesn't move because s[x]=0:

	index	s array value

	x-1	b
	x	0
	...	...
	y	a

This time we will output s[0+a] or just s[a].  Since b != 0 we are
outputting a different result and it can't match what we output on the
previous time.

(Note that if y points at 0 in the first picture then x doesn't point at
0 in the 2nd picture because it was swapped away, so my claim's condition
is not met.  This does not change the statistical aspects of my claim.)

The one exception occurs if on the 2nd iteration s[a] does equal what
s[a+b] was on the first iteration, because of a fortuitous swap which
interchanged them.  The only swap we did was of a and b, so this can only
happen if (in the first picture) x=a and y=a+b, or vice versa.  This will
only happen 1/2^16 of the time that the other condition is met.

One question is whether this (near) impossibility of repetitions which
occurs about every 256 outputs translates into an overall dearth of
repetitions (1/256 fewer than we would expect), or whether there is some
countervailing effect which increases the likelihood of repetitions for
the case where s[x] != 0.  I am not sure how to interpret the posted gap
information to tell which is true.

Applying this to cryptanalysis, this tells you that for each repetition
in the output you know that s[x] is (almost certainly) not 0 on the 2nd
one.  This is not very much information but since you plausibly know x
(it is the number of bytes output so far) this actually gives you some
direct information about one of the elements in the permutation array,
so that is interesting.

Hal Finney
hfinney@shell.portal.com
