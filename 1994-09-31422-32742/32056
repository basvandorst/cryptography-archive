Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!charnel.ecst.csuchico.edu!yeshua.marcam.com!news.kei.com!eff!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Newsgroups: sci.crypt
Subject: Re: REAL virtual one time pads
Date: 17 Sep 1994 22:26:35 GMT
Organization: University of Maryland, Baltimore County
Lines: 58
Message-ID: <35fqer$3c1@news.umbc.edu>
References: <1994Sep16.085724.2055@bradford.ac.uk>
NNTP-Posting-Host: umbc7.umbc.edu
X-Newsreader: TIN [version 1.2 PL2]

SJ SHEPHERD (S.J.Shepherd@bradford.ac.uk) wrote:

: Further to the recent waffle about making one time pads from
: NON random numbers, there do exist genuine methods of "amplifying
: randomness".  One such is the Blum generator.  Take two large
: primes p amd q, both congruent to 3 mod 4 (for number theoretic
: reasons that are too long-winded to go into here) and form the
: product n = pq.  Choose any residue in the ring Zn as a starting
: "seed".  To generate the otp, successively square the residue
: mod n.  By taking the log n least significant bits of each residue,
: a binary sequence can be formed that is random in the strict sense
: that, given an unlimited amount of sequence (less than the period)
: there in no better way of predicting whether the next bit to the
: right (or left) is a 1 or a 0 than by tossing a fair coin.  Bearing
: in mind that the period of the Blum generator in lambda(lambda(n))
: where lambda is the number-theoretic Carmichael function, the
: periods are enormous.  For example, if n ~ 512 bits, then the period
: is of the order of 2^500.  Each squaring contributes 9 bits to the
: otp and generating 1 million residues per second will not exhaust
: the period within the projected lifetime of the universe.  The key
: is merely the 512-bit seed residue from which an unlimited amount
: of "randomness" can be generated.  The concept of a public-key
: cipher - the QRC (quadratic residue cipher) - that uses this
: principle AND exhibits NO leakage of partial information (unlike
: RSA which leaks like a sieve) is fully explained in my paper in
: Cryptologia (June or July last year).

At the risk of being rude, I don't the claims as stated.  I'd bet
money your claim that bits are unpredictable is only justified in
terms of computational intractability, and dependent upon some
unproven assumption.

Given the n~512 bits bound, you have only ~1024 bits of state which
determines the sequence.  Given more than 1024 bits of the sequence, I
can search for the state, and even if there is more than one solution,
I can predict subsequent bits better than by flipping a coin.  With
more bits I should be able to predict perfectly.  The system certainly
does not provide information theoretic security as the OTP does.

So maybe such predictions are intractable.  I can define a language L
which is the set of pairs of strings, the first being n' 0 bits, the
second being a substring produced by some such generator with n<n'.  L
is in NP, and I can use a recognizer for L to predict the next bit.
Thus if better than random prediction is super-polynomial, then P!=NP,
so I doubt you can prove it's intractable either.

I haven't looked up your paper, but I would guess you have some proof
of the form: if there exists some constant e>0 and a polynomial (in n)
time algorithm which predicts the next bit from a sequence of previous
bits with probability greater than (1/2)+e, then there exists an
algorithm to factor n or determine quadratic residue-osity mod n in
probabilistic polynomial time.

That would be a nice result, but a long way from what you claim above,
and a long way from a virtual OTP.

--Bryan

