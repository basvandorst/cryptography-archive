Newsgroups: sci.crypt,talk.politics.crypt,alt.security,alt.privacy
Path: msuinfo!gmi!usenet.eel.ufl.edu!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!usc!nic-nac.CSU.net!charnel.ecst.csuchico.edu!csusac!csus.edu!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: RC4 in the New York Times
Message-ID: <phrCwE5vG.3yD@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <CwA0K7.KMF@chinet.chinet.com> <strnlghtCwCLoD.CEL@netcom.com> <phrCwD9uC.5Mp@netcom.com> <strnlghtCwE0zy.Dwn@netcom.com>
Date: Mon, 19 Sep 1994 19:23:39 GMT
Lines: 40
Xref: msuinfo sci.crypt:32196 alt.security:18856 alt.privacy:19082

In article <strnlghtCwE0zy.Dwn@netcom.com>,
David Sternlight <strnlght@netcom.com> wrote:
>In article <phrCwD9uC.5Mp@netcom.com>, Paul Rubin <phr@netcom.com> wrote:
>>In article <strnlghtCwCLoD.CEL@netcom.com>,
>>David Sternlight <strnlght@netcom.com> wrote:
>>>Now, Bruce, surely I shouldn't have to remind you that if RC4 is published,
>>>then the export licenses for shorter key versions lose their protection of
>>>U.S. security interests since on the other end a recipient may drop in a
>>>longer-key version of RC4 while maintaining compatibility.
>>
>>How can the recipient do that?  The short-key export permissions
>>do not permit source code to be shipped.
>
>If you have been taught that the only way to modify a program is via
>modifying source code and recompiling or reassembling, your computer science
>educators have been derelict. If you have been taught that the only way to
>find out where the object code you wish to modify is located in the overall
>program is if you have the source code, your educators have been similarly
>derelict. (I blame your educators out of politeness to you unless, of
>course, you were self-educated.)

From the technical content of some of your other posts I hazard to
guess that I have more experience disassembling and patching binaries
than you do.

However, examining and patching binaries is generally not considered
within the capabilities of ordinary users.  In particular, if they
can "drop in a longer-key version of RC4 while maintaining compatibility"
(compatibility with what?), why can't they also drop in (triple DES,
IDEA, MDC, insert your favorite cipher)?  Also, how does the publication
of reverse-engineered RC4 source help them "drop in a longer-key
version of RC4"?  According to the posted code, RC4's key length is
a parameter passed into its initialization routine.  Someone wanting
to modify an application to use RC4 with longer keys would have
to change the part of the application that called RC4, not RC4 itself.

It is not evident that one could make such a change and "maintain
compatibility", i.e. have the resulting program still be able to
interoperate with an unmodified copy, but using longer keys.  It
depends on how the application is written, not just on how RC4 works.
