Path: msuinfo!gmi!zombie.ncsc.mil!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!vixen.cso.uiuc.edu!harbinger.mhc.uiuc.edu!jlicquia
From: jlicquia@mhc.uiuc.edu (Jeff Licquia)
Newsgroups: sci.crypt,talk.politics.crypt,alt.security,alt.privacy
Subject: Re: RC4 in the New York Times
Date: Mon, 19 Sep 1994 17:34:48
Organization: McKinley Health Center
Lines: 65
Message-ID: <jlicquia.81.00119505@mhc.uiuc.edu>
References: <CwA0K7.KMF@chinet.chinet.com> <phrCwD9uC.5Mp@netcom.com> <strnlghtCwE0zy.Dwn@netcom.com> <phrCwE5vG.3yD@netcom.com> <strnlghtCwEBIx.DFt@netcom.com>
NNTP-Posting-Host: harbinger.mhc.uiuc.edu
X-Newsreader: Trumpet for Windows [Version 1.0 Rev A]
Xref: msuinfo sci.crypt:32205 alt.security:18858 alt.privacy:19089

In article <strnlghtCwEBIx.DFt@netcom.com> strnlght@netcom.com (David Sternlight) writes:

>>From the technical content of some of your other posts I hazard to
>>guess that I have more experience disassembling and patching binaries
>>than you do.

>This is both an irrelevant ad hominem and factually incorrect. For details,
>e-mail me.

From the technical content of THIS post I hazard to guess that Paul is right.

>>However, examining and patching binaries is generally not considered
>>within the capabilities of ordinary users.  In particular, if they
>>can "drop in a longer-key version of RC4 while maintaining compatibility"
>>(compatibility with what?), why can't they also drop in (triple DES,
>>IDEA, MDC, insert your favorite cipher)?  Also, how does the publication
>>of reverse-engineered RC4 source help them "drop in a longer-key
>>version of RC4"?  According to the posted code, RC4's key length is
>>a parameter passed into its initialization routine.  Someone wanting
>>to modify an application to use RC4 with longer keys would have
>>to change the part of the application that called RC4, not RC4 itself.

>This is a farrago of speculation. It would be trivial, and has been done
>many times before, for a hacker to post a "patch" to, say, exported
>short-RC4-key Lotus Notes to maintain compatibility but permit longer keys.
>that patch would travel around the world in a matter of seconds. I am sure
>you are familiar with the extensive history of "pirate" bulleting boards
>filled with "patches" to commercial applications to disable copy protection,
>etc. In _those_ cases, the crackers didn't even have the benefit of source
>code  but had to do the whole job including disassembly. In the present case
>they apparently have the source code of RC4 to make the job even easier.
>Once such patches get out, my 5-year-old grandson can apply them.

I see.  And, of course, you determined this with your handy copy of the source 
code to Lotus Notes. :-)

Paul is right; patching Lotus Notes to use a different RC4 key length could be 
a MAJOR undertaking, requiring changes to the Notes code to allow space for 
the storage of the keys, extra space for function call parameters, etc.  Lotus 
could have written Notes to make such a patch trivial, but they would have had 
to have designed the software for the patch from the beginning.  It would be 
impossible to tell without a copy of the source.

Comparing this with something as simple as the old copy protection patches 
(which most of the time required simply NOPing out a jump or changing a few 
data values) with a job of this magnitude is a mistake.  It is also a mistake 
to assume that this source code does as much as you imply to help the cracker; 
it says nothing about the actual parameter order, byte ordering, etc. of RSA's 
RC4 code.

>>It is not evident that one could make such a change and "maintain
>>compatibility", i.e. have the resulting program still be able to
>>interoperate with an unmodified copy, but using longer keys.  It
>>depends on how the application is written, not just on how RC4 works.

>The above has no substantive refutational value.

What do you mean?  Paul just said that it was not evident, something I can 
verify, by the way.  It refutes everything you previously said unless you can 
produce evidence.

Describe to us how such a patch would work and how it would maintain 
compatibility with other versions.  I, for one, would be interested to see 
such an algorithm.

