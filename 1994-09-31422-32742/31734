Newsgroups: sci.crypt
Path: msuinfo!netnews.upenn.edu!dsinc!newsfeed.pitt.edu!godot.cc.duq.edu!news.duke.edu!MathWorks.Com!yeshua.marcam.com!charnel.ecst.csuchico.edu!csusac!csus.edu!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: Zimmermann on PGP 2.6 myths
Message-ID: <phrCvsvEn.ME1@netcom.com>
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
References: <EACHUS.94Sep6110725@spectre.mitre.org> <34is2f$fif@gatekeeper.esl.com> <EACHUS.94Sep7120606@spectre.mitre.org>
Date: Thu, 8 Sep 1994 07:27:59 GMT
Lines: 29

In article <EACHUS.94Sep7120606@spectre.mitre.org>,
Robert I. Eachus <eachus@spectre.mitre.org> wrote:
>
>   I said:
>
>   >    The two problems are equivalent in that, if you can factor in
>   > polynomial time, then you can find discrete logs in polynomial time
>   > and vice-versa.
>   > 
>
>In article <34is2f$fif@gatekeeper.esl.com> dwa@mirage.esl.com (Dana Albrecht) writes:
>
>   > Could you, or someone else, please provide a reference to a proof
>   > of this?  Thanks.
>
>   Sure.  Blum, Blum and Shub (SIAM J. Computing, Vol 15, No. 2, May
>1986 pp 364-383) proves that factoring N is necessary and sufficient
>for finding roots quickly, and W. Alexi, B. Chor, O.  Goldreich and C.
>P . Schnorr, "RSA/Rabin bits are (1/2) + (1/poly(log N)) secure", IEEE
>25th Symposium on Foundations of Computer Science, 1984, pp 449-457,
>shows the reverse.
>
>   But that is the hard way to prove the equivalence.  Since N can be
>factored trivially given a program that computes square roots mod N,
>and given the factors of N and the factors of lambda(N) you can
>compute square roots mod N in poly time, the problems are P-time
>equivalent.

Why is finding roots equivalent to discrete log?
