Path: msuinfo!agate!howland.reston.ans.net!usc!rand.org!mycroft.rand.org!not-for-mail
From: jim@mycroft.rand.org (Jim Gillogly)
Newsgroups: sci.crypt
Subject: Re: RC4: weakness?
Date: 22 Sep 1994 08:46:04 -0700
Organization: Banzai Institute
Lines: 34
Message-ID: <35s8rs$9je@mycroft.rand.org>
References: <35r3l6$a90@larry.rice.edu>
NNTP-Posting-Host: mycroft.rand.org

In article <35r3l6$a90@larry.rice.edu>, Doug Moore <dougm@cs.rice.edu>
suggests making the key set-up of Alleged-RC4 more uniform:

>I don't suggest that this is a huge weakness, but I marvel that the
>code was implemented this way, when a uniformly distributed random
>permutation is perfectly easy to generate.
>
>for (i = 0; i < 255; ++i)
>  {
>    int r = i + random() % (256-i);
>    swap(perm[r], perm[i]);
>  }

In the algorithm as it stands, random() is in the range 0-255, and falls
out of the algorithm naturally.  If we keep this same random() in your
modification, there is still some deviation from uniformity.  When i=249,
for example, the deviation is small:

	0: 43
	1: 43
	2: 43
	3: 43
	4: 42
	5: 42

However, for i=80, the likelihood of getting values in the range 0-80 is
twice as great as getting values in the range 81-174.

Changing random() into a 2- or 4-byte quantity by concatenating several
elements of perm[] would wash this effect out at the cost of making the
code less transparent.
-- 
	Jim Gillogly
	Sterday, 1 Winterfilth S.R. 1994, 15:46
