Newsgroups: sci.crypt,talk.politics.crypt,alt.security,alt.privacy
Path: msuinfo!gmi!zombie.ncsc.mil!MathWorks.Com!yeshua.marcam.com!charnel.ecst.csuchico.edu!csusac!csus.edu!netcom.com!strnlght
From: strnlght@netcom.com (David Sternlight)
Subject: Re: RC4 in the New York Times
Message-ID: <strnlghtCwEBIx.DFt@netcom.com>
Organization: DSI/USCRPAC
References: <CwA0K7.KMF@chinet.chinet.com> <phrCwD9uC.5Mp@netcom.com> <strnlghtCwE0zy.Dwn@netcom.com> <phrCwE5vG.3yD@netcom.com>
Date: Mon, 19 Sep 1994 21:25:44 GMT
Lines: 65
Xref: msuinfo sci.crypt:32202 alt.security:18857 alt.privacy:19087

In article <phrCwE5vG.3yD@netcom.com>, Paul Rubin <phr@netcom.com> wrote:
>In article <strnlghtCwE0zy.Dwn@netcom.com>,
>David Sternlight <strnlght@netcom.com> wrote:
>>In article <phrCwD9uC.5Mp@netcom.com>, Paul Rubin <phr@netcom.com> wrote:
>>>In article <strnlghtCwCLoD.CEL@netcom.com>,
>>>David Sternlight <strnlght@netcom.com> wrote:
>>>>Now, Bruce, surely I shouldn't have to remind you that if RC4 is published,
>>>>then the export licenses for shorter key versions lose their protection of
>>>>U.S. security interests since on the other end a recipient may drop in a
>>>>longer-key version of RC4 while maintaining compatibility.
>>>
>>>How can the recipient do that?  The short-key export permissions
>>>do not permit source code to be shipped.
>>
>>If you have been taught that the only way to modify a program is via
>>modifying source code and recompiling or reassembling, your computer science
>>educators have been derelict. If you have been taught that the only way to
>>find out where the object code you wish to modify is located in the overall
>>program is if you have the source code, your educators have been similarly
>>derelict. (I blame your educators out of politeness to you unless, of
>>course, you were self-educated.)
>
>From the technical content of some of your other posts I hazard to
>guess that I have more experience disassembling and patching binaries
>than you do.

This is both an irrelevant ad hominem and factually incorrect. For details,
e-mail me.

>
>However, examining and patching binaries is generally not considered
>within the capabilities of ordinary users.  In particular, if they
>can "drop in a longer-key version of RC4 while maintaining compatibility"
>(compatibility with what?), why can't they also drop in (triple DES,
>IDEA, MDC, insert your favorite cipher)?  Also, how does the publication
>of reverse-engineered RC4 source help them "drop in a longer-key
>version of RC4"?  According to the posted code, RC4's key length is
>a parameter passed into its initialization routine.  Someone wanting
>to modify an application to use RC4 with longer keys would have
>to change the part of the application that called RC4, not RC4 itself.

This is a farrago of speculation. It would be trivial, and has been done
many times before, for a hacker to post a "patch" to, say, exported
short-RC4-key Lotus Notes to maintain compatibility but permit longer keys.
that patch would travel around the world in a matter of seconds. I am sure
you are familiar with the extensive history of "pirate" bulleting boards
filled with "patches" to commercial applications to disable copy protection,
etc. In _those_ cases, the crackers didn't even have the benefit of source
code  but had to do the whole job including disassembly. In the present case
they apparently have the source code of RC4 to make the job even easier.
Once such patches get out, my 5-year-old grandson can apply them.

>
>It is not evident that one could make such a change and "maintain
>compatibility", i.e. have the resulting program still be able to
>interoperate with an unmodified copy, but using longer keys.  It
>depends on how the application is written, not just on how RC4 works.

The above has no substantive refutational value.

David
-- 
People who post newsgroup flames
Must have flammable gas for brains.
Burma Shave.
