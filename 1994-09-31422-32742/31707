Path: msuinfo!uwm.edu!spool.mu.edu!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Newsgroups: sci.crypt
Subject: Re: Zimmermann on PGP 2.6 myths
Date: 7 Sep 94 12:06:06
Organization: The Mitre Corp., Bedford, MA.
Lines: 36
Distribution: world
Message-ID: <EACHUS.94Sep7120606@spectre.mitre.org>
References: <EACHUS.94Sep6110725@spectre.mitre.org> <34is2f$fif@gatekeeper.esl.com>
NNTP-Posting-Host: spectre.mitre.org
In-reply-to: dwa@mirage.esl.com's message of 6 Sep 1994 22:56:15 GMT


   I said:

   >    The two problems are equivalent in that, if you can factor in
   > polynomial time, then you can find discrete logs in polynomial time
   > and vice-versa.
   > 

In article <34is2f$fif@gatekeeper.esl.com> dwa@mirage.esl.com (Dana Albrecht) writes:

   > Could you, or someone else, please provide a reference to a proof
   > of this?  Thanks.

   Sure.  Blum, Blum and Shub (SIAM J. Computing, Vol 15, No. 2, May
1986 pp 364-383) proves that factoring N is necessary and sufficient
for finding roots quickly, and W. Alexi, B. Chor, O.  Goldreich and C.
P . Schnorr, "RSA/Rabin bits are (1/2) + (1/poly(log N)) secure", IEEE
25th Symposium on Foundations of Computer Science, 1984, pp 449-457,
shows the reverse.

   But that is the hard way to prove the equivalence.  Since N can be
factored trivially given a program that computes square roots mod N,
and given the factors of N and the factors of lambda(N) you can
compute square roots mod N in poly time, the problems are P-time
equivalent.




--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
