Newsgroups: sci.crypt,talk.politics.crypto,alt.privacy
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!library.ucla.edu!csulb.edu!csus.edu!netcom.com!berliner
From: berliner@netcom.com (Guy Berliner)
Subject: Protocols for Ensuring Strictly Legal "Moneytapping"
Message-ID: <berlinerCwC7Ct.8BE@netcom.com>
Keywords: Digital Cash,moneytapping,protocols
Organization: NETCOM On-line Communication Services (408 261-4700 guest)
Date: Sun, 18 Sep 1994 18:00:29 GMT
Lines: 116
Xref: msuinfo sci.crypt:32088 talk.politics.crypto:7284 alt.privacy:19023

-----BEGIN PGP SIGNED MESSAGE-----

INTRO:

I have been puzzling lately over the question of how one might design 
a protocol to allow the tracing of digital cash certificates under court 
order, while maintaining the integrity of the process against abuse, 
governmental or otherwise. Ideally, one would like the authorities to
be able to trace digital cash only if rigorous legal requirements are met, 
and a court order is obtained. Whether such a scheme is desirable or not
has already been debated some on talk.politics.crypto and alt.privacy. 
The question of how one might design a protocol resistant to abuse is, 
I think, a subject most appropriate for sci.crypt, although of interest
to all three. Therefore, I have crossposted this to all three groups.
Forgive me if what follows has long been, unbeknownst to me, old hat among 
the crypto cognoscenti, or if it has been previously analyzed and rejected:


DEVISING A PROTOCOL FOR ENSURING ONLY AUTHORIZED TRACING OF DIGITAL CASH

Consider a digital cash certificate along the lines of those discussed in,
for example, Schneier's _Applied Cryptography_. Let the certificate have
within it a Law Enforcement Identifier Field (LEIF) (apologies to Clipper
fans ;-). This field is appended to the certificate at the bank and the 
whole certificate, appended LEIF and all, is signed by the bank. The LEIF
is legally permitted to contain a (possibly encrypted) case number 
associating it with an ongoing law enforcement investigation only if the
case number has been certified by court order. Only the persons named in 
the court order certifying the case number may be "moneytapped." The problem
is to ensure that only valid case numbers so certified can be used in LEIFs
by the authorities. Perhaps the best way to ensure this is to permit the 
certificate holder to scramble the LEIF according to some prescribed rule, 
such that the certificate remains valid, but:

a.) If the LEIF contains a valid case number (CN), it can be recovered.
b.) If not, then only gibberish is recovered.

Suppose, for example, that a set of random numbers is available every day
to use as the key to scramble the LEIF with. Everyone uses the same set of
numbers to scramble their LEIFs, so the bank knows how to unscramble them,
provided that the LEIF in question contains a valid case number. The random
number should be one that is based on some unpredictable event that can't
be rigged by anyone, whose result is readily observable and verifiable. It
might be derived from some atmospheric phenomenon. Anything would do so long
as the number could be measured and ascertained by anyone who cared to, and
determined in advance by no one. I will use R for this random number. 
Everyday, or at whatever regular intervals were deemed appropriate, such a 
random bit string would be obtained, recorded at all banks, in newspapers,
etc. Everyday, or at whatever intervals were required, all ongoing court
authorized case numbers would be noted, and some hash function, H, of them
would be calculated and made publicly available to individuals, banks, and
so on. The customer wishing to ensure his privacy would apply a scrambler
function (SC) to the LEIF to produce some gibberish, G1,

SC (CN, H, R) = G1

Again, CN is the case number contained in the LEIF, H the hash of all
authorized case numbers, and R the periodically issued random number. 
Any G1 not generated with the valid random number R for that period 
would invalidate the certificate.

When the bank receives the certificate for deposit, it performs some
recovery function (RC), which takes the arguments G1, H, and R:

RC (G1, H, R)

If the number CN really is a valid case number, then

RC (G1, H, R) = CN (or CN encrypted in some form known to authorities)

If not, then

RC (G1, H, R) = G2

i.e., still some random gibberish. In any case, the bank makes the 
database of deposited certificate G2s available to the Justice Department, 
along with whatever other information they require (e.g. when and where 
it was cashed). G2 will be quite useless to the authorities unless CN was a 
valid case number used in calculating H. The case numbers used in 
calculating H would be a matter of public record, available to anyone to 
confirm (and to confirm the validity of H). For example, it would be 
reasonable to make available the case numbers after the court order on them 
had expired. So, for instance, suppose you were issued a cash certificate 
signed by the bank on the first of September. Say a "moneytapping order" 
is good for only six months (or any other number of months you like that's 
comparable to other kinds of court orders). Then on the first of March of 
the next year all the case numbers used in calculating H on that day in 
September would be made available to you. If you were a civil libertarian, 
you could calculate the hash of those numbers, look up the hash for that 
day, and if they didn't match, you would file a class action suit against 
the Feds for invasion of privacy. Perhaps a delay until the court orders
had expired wouldn't even be necessary to ensure the security of ongoing
investigations if RC (G1, H, R) is an encrypted version of CN. In that
case, the CNs could be made available to everyone as soon as they 
were issued. (The numbers alone would be revealed immediately, but no 
further details until it was safe.)

If this scheme, or something like it, makes sense, then the problem is to 
determine if there could possibly be any  practical procedures for SC, H, 
and RC, as well as some good source of random numbers R. Such considerations 
I will leave in the far more knowledgable hands of number theory experts.

Guy Berliner
-----BEGIN PGP SIGNATURE-----
Version: 2.6.1

iQCVAwUBLnx+7osZvoZ68B9BAQExRwP+PzFTYvR/5DVdr99e5QUg04DLB/fAmdai
rrEhqrtNxqJQQnIk+cV5HNvxEwD5BfiObNMcCweULkGxdWfC/6A+EScNBWyFZpvP
2adJnPNTNcR67cBpnwT6HofflX9Uo8sBnZCVVUrDcmcVmYbyB56TCCzUBrcFyfYY
W0V92uMhyN0=
=idCy
-----END PGP SIGNATURE-----

-- 
Finger for pgp key. (It may take 1 or 2 minutes. It may be faster to use
netcomX.netcom.com, where X is an integer from 2 to 17.)
