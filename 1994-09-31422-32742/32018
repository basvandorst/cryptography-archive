Path: msuinfo!netnews.upenn.edu!news.cc.swarthmore.edu!psuvax1!news.pop.psu.edu!news.cac.psu.edu!howland.reston.ans.net!spool.mu.edu!sgiblab!gatekeeper.us.oracle.com!decwrl!svc.portal.com!shell.portal.com!hfinney
From: hfinney@shell.portal.com (Hal)
Newsgroups: sci.crypt
Subject: Re: Speedups in posted RC4 code
Date: 16 Sep 1994 20:52:10 GMT
Organization: Portal Communications (shell)
Lines: 24
Message-ID: <35d0hq$a49@news1.shell>
References: <35c4aa$l17@bcarh8ab.bnr.ca>
NNTP-Posting-Host: jobe.shell.portal.com

mleech@bnr.ca (Marcus Leech) writes:

>I replaced the swap_bytes() function call with a macro, and replaced
>  the '%' operations in rc4() with a table-lookup, and got a factor-of-three
>  performance improvement--3MBytes/sec.  Your mileage may vary.

You should say a little something about what kind of machine you are
running on to put this into context.

Some people have suggested that the "% 256" be replaced by "& 0xff",
although some compilers will do this for you already.  Also, since on
most machines the char variables are only 8 bits already, you can
leave the "% 256" off entirely on some lines (again, a smart compiler
will do this).

Perry Metzger on the cypherpunks list suggested a generalization
of the alleged RC4 to wider variables.  If 16 bits rather than 8
were used (with a 64k entry state array) then you could get twice
as many bytes per second out at the cost of somewhat longer setup
times.  I suspect from extrapolating Bob Jenkins' numbers that
such a version would show much less of the bias and irregularities
that he saw.

Hal
