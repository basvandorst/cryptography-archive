Path: msuinfo!agate!howland.reston.ans.net!news.cac.psu.edu!news.pop.psu.edu!psuvax1!news.cc.swarthmore.edu!netnews.upenn.edu!netaxs.com!grendel
From: grendel@netaxs.com (Michael Handler)
Newsgroups: sci.crypt,alt.security.pgp
Subject: Re: the theory behind pgp
Followup-To: alt.security.pgp
Date: 31 Aug 1994 07:59:11 GMT
Organization: ITAR Violators Anonymous
Lines: 27
Distribution: world
Message-ID: <341d8g$ksp@netaxs.com>
References: <SANJAI.94Aug29164647@eightman.ctd.comsat.com>
NNTP-Posting-Host: unix3
X-Newsreader: TIN [version 1.2 PL2]
Xref: msuinfo sci.crypt:31424 alt.security.pgp:19755

In article <SANJAI.94Aug29164647@eightman.ctd.comsat.com>, Sanjai Bhargava 
(sanjai@ctd.comsat.com) wrote:

> Could some please point me to the relevant documents describing, in
> detail, the algorithms used in pgp.  I am particularly interested in
> the technique used to encrypt a single message (producing only one
> encrypted text message) for multiple users. 

	Briefly: When PGP encrypts a message for a single recipient, it 
generates a random session key to use for the IDEA algorithm, encrypts 
the message with the session key, and then encrypts the session key with 
the recipient's public key, and appends the encrypted session key to the 
encrypted message.
	When PGP encrypts a message for n recipients, it generates 
one session key, encrypts the message with that session key, and then 
encrypts the session key n times, with each recipient's respective public 
key. Then, it appends all of the encrypted versions of the session key 
to the encrypted message. When one of the n recipients recieves the 
message, PGP scans all of the copies of the encrypted session key, 
determines which one the recipient has the private key to decrypt, 
decrypts the key, and then decrypts the message

	Followups => alt.security.pgp, as this discussion really belongs 
there.
------------------------------------------------------------------ ------
Michael Brandt Handler -- Philadelphia, PA -- <grendel@netaxs.com>  \bi/
PGP v2.6 public key available    --    1984: We're Behind Schedule   \/
