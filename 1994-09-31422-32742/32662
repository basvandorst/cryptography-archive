Newsgroups: sci.crypt
Path: msuinfo!gmi!zombie.ncsc.mil!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!EU.net!uknet!comlab.ox.ac.uk!pcl
From: pcl@foo.oucs.ox.ac.uk (Paul C Leyland)
Subject: Re: query about algorithm
Message-ID: <PCL.94Sep28155106@foo.oucs.ox.ac.uk>
In-reply-to: zhmhd@zh014.ubs.ubs.ch's message of Thu, 22 Sep 1994 15:59:14 GMT
References: <PCL.94Sep22094431@foo.oucs.ox.ac.uk> <1994Sep22.155914.12379@zh014.ubs.ubs.ch>
Date: 28 Sep 1994 14:51:06 GMT
Lines: 50

In article <1994Sep22.155914.12379@zh014.ubs.ubs.ch> zhmhd@zh014.ubs.ubs.ch (Mihailescu Preda) writes:

   In article 94Sep22094431@foo.oucs.ox.ac.uk, pcl@foo.oucs.ox.ac.uk (Paul C Leyland) writes:
   > In article <1994Sep19.212210.10962@sol.cs.wmich.edu> dodgson@sol.cs.wmich.edu (Harry Dodgson) writes:
   > 
   > 	   I came across some code recently that used:
   > 
   >    (input)^3 mod (constant)        as the decryption algorithm.
   > 
   >    Does anyone have any information as to the strength
   >    of this - what the encryption routine is - whether
   >    the constant is prime, product of primes, ... ????
   >    Basically, any information I can get would be
   >    appreciated.
   > 
   > Looks very much like RSA with private exponent equal to 3.  If I'm right,
   > the constant should be the product of two large primes.
   > 
   > Alternatively, rather than decryption, it might be signature checking
   > -- which is a special case of decryption I confess.  "3" is not a very
   > good choice for a private exponent, but a reasonable one for a public
   > exponent.
   > 

   Paul, 3 is not a very reasonable public exponent if you send the same message to three different public key peers, it is broken ... (see f.i. in Schneier). Something like at least 257 should be advized to peolpe!

I agree, *if* you send the *same* message to 3 or more public key
peers.  However, if I send "Hello world. <garbage 1>" to you, "Hello
world. <garbage 2>" to the NSA and "Hello world. <garbage 3>" to David
Sternlight, my claim is that all three of you could read my intended
message but that no-one in possession of all three messages could
(easily) find the plaintext without at least one of the secret keys.

Further, I would need to ensure that all my messages were larger than
cuberoot(N), but that's trivial (encode from the most significant end).


All half-way decent RSA implementations use random padding in order to
defeat the attack you've indicated.  In which case, cubing is cheap
and secure.


Paul

--
Paul Leyland <pcl@black.ox.ac.uk>        | Hanging on in quiet desperation is
Oxford University Computing Services     |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is gone, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
