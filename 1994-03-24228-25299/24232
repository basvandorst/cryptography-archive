Newsgroups: sci.crypt
Path: msuinfo!uchinews!att-out!cbnewsh!wcs
From: wcs@anchor.ho.att.com (Bill Stewart +1-510-484-6204)
Subject: Re: Net security
Organization: AT&T
Date: Mon, 28 Feb 1994 07:13:55 GMT
Message-ID: <CLxAr9.E4A@cbnewsh.cb.att.com>
In-Reply-To: aa932461@cranfield.ac.uk's message of 27 Feb 1994 20:15:02 GMT
References: <2kqv06$p29@xdm001.ccc.cranfield.ac.uk>
Sender: wcs@cbnewsh.cb.att.com (william.clare.stewart)
Lines: 69

In article <2kqv06$p29@xdm001.ccc.cranfield.ac.uk> aa932461@cranfield.ac.uk (N.J.DULLAWAY) writes:
   There has been (at least in the British Media) some fuss recently
   about the process whereby logons and passwords have been recorded
   by some 3rd party thus giving that 3rd party access to various
   machines across the net (particularly those that have a permanent
   connection).
   Can someone tell me more about this phenomenon and/or

It's been a fuss in the US media as well; the cynical among us have
suggested that it was timed to coincide with the Clipper Chip
announcement so the NSA could come in and save us from these evil hackers,
but that's a rant for alt.conspiracy :-) or at least talk.politics.crypto.

Basically many kinds of networks, especially Ethernet local area nets,
use broadcast protocols, so anybody on the net (or anyone with system
privileges on a machine in the net, anyway) can listen to everything
going by, including logins and passwords.  Once you've found the login
and password for an account, you can go log onto that machine and use
any security holes you find there to break root, listen for more
passwords, etc.  This is especially a problem where people from one
location are logging on to machines at distant locations, because lots
more sites become vulnerable.

   how difficult it would be to implement the
   following procedure:

   1) Machine 1 requests access to Machine 2.
   2) Machine 2 sends a public key and request for logon id and password.
   3) Machine 1 sends encrypted logon and password.

Not too hard, except that in the US, public-key techniques are patented,
and the relevant patents runout in either 1997 or 2000, so
manufacturers would have to pay royalties to use it.
You'd also have to upgrade your telnet to support it, or at least
build a utility that's easy to call from telnet, but that's not hard.

A variant on your procedure is to have Machine 2 store the user's
public key, and send a challenge string for the user to encrypt with
her private key.  (In all both of these systems, you have to be
somewhat careful to avoid replay attacks.)  You can also build
challenge-response systems using secret-key algorithms, if you don't
mind having the secret key stored on the machine or else kept in
little crypto-boxes (typically calculatoroids or smartcards.)

Diffie-Hellman key exchange is another secure approach.

S/Key is Phil Karn's system that uses a fast one-way function F;
to initialize the password on the host, you crank a user-chosen password
through F N times, and store on the host.
To log in, use the password cranked through F N-1 times; the host runs
this through F, compares with the stored value, and lets you on if it matches.
The next time, you send F(P,N-2), host compares with stored F(F(P,N-1)), etc.
I don't remember if Bellcore has this one patented?

A fairly complete approach is MIT's Kerberos, which uses secret-key
techniques and a lot of key distribution administration.  (If you're
interested in using it, but find it hard to use, Cygnus Support sells support
services to make this free software usable and affordable.
You foreigners are not supposed to be able to use it, since the US
government knows you can't implement DES yourself (:-),
but there have been several authorization-only versions exported,
and there's a "bones" release that has the crypto code removed
which you can update with the usual DES from nic.funet.fi.

-- 
#				Pray for peace;      Bill
# Bill.Stewart@pleasantonca.ncr.com 1-510-484-6204 fax-6399
# NCR Corporation, 6870 Koll Center Pkwy, Pleasanton CA 94566
# Please reply to this address rather than my news server.
