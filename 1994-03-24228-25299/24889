Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!wupost!csus.edu!netcom.com!mpd
From: mpd@netcom.com (Mike Duvos)
Subject: Re: RSA-129-near end
Message-ID: <mpdCMz5Kx.9p5@netcom.com>
Organization: NETCOM On-line Communication Services (408 241-9760 guest)
References: <2me0uc$5en@kaiwan.kaiwan.com> <9403201115591.davesparks.DLITE@delphi.com>
Date: Sun, 20 Mar 1994 17:50:57 GMT
Lines: 24

davesparks@delphi.com (Dave Sparks) writes:

>I remember someone posting here a couple of months ago who had "tweaked" PGP
>to generate and use longer key lengths, like 2048 bits.  If it's not too
>complicated, can someone explain how to do that?  Other than being
>"non-standard" and obviously slower, are there any know drawbacks to doing
>that?

Changing PGP to support 2048 bit keys is a trivial change.  There
are a few fixed sized buffers in MPILIB which need to be
increased, and this can be done by simply bumping the value of a
#define statement for the maximum allowable precision and
recompiling.

You will find that signing, decryption, and key generation are
sluggish even on fast machines for keys larger than 1024 bits,
and may very well be unacceptably slow on some processors.  A
tight rewrite of the modular exponentiation code in 32-bit
assembler would probably be helpful.

-- 
     Mike Duvos         $    PGP 2.3a Public Key available    $
     mpd@netcom.com     $    via Finger.                      $

