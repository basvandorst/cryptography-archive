Path: msuinfo!agate!howland.reston.ans.net!news.intercon.com!digex.net!digex.net!not-for-mail
From: lehimes@access3.digex.net (Larry Himes)
Newsgroups: sci.crypt
Subject: Re: Triple DES implementation
Date: 28 Feb 1994 23:02:14 -0500
Organization: Express Access Online Communications, Greenbelt, MD USA
Lines: 47
Message-ID: <2kueo6$rq1@access3.digex.net>
References: <9402192242593.davesparks.DLITE@delphi.com> <2k7qii$j8i@menja.ifi.uio.no> <2kq996$7sl@access1.digex.net> <2kqf9a$qrm@menja.ifi.uio.no>
NNTP-Posting-Host: access3.digex.net

thork@ifi.uio.no (Thor Oddleif Kristoffersen) writes:


>> >The backwards compatibility property of these schemes makes
>> >sense only in hardware, of course.
>> 
>> I would take issue with the above statement. The real reason for backward 
>> compatibility has nothing to do with whether DES is implemented in 
>> Hardware or software. It is really based more on key management issues 
>> and the desirability of being able to field "new" crypto applications 
>> while retaining the ability to be compatible "old" applications which can 
>> use only a single key. The banking industry, which has historically been 
>> the principal user and standard-setter for commercial crypto products, 
>> loves this feature because applications tend to be very long-lived in 
>> that business, for some reason. 

>My point was that if you're normally running triple-DES in
>software, and then want to switch to single-DES for compati-
>bility, you'll just encrypt once instead of three times.

Sorry, but I still don't see what you mean by "makes sense only in 
hardware". Do you mean that software is inherently "smarter" than 
hardware and will, due to the superior intelligence of the 
programmer, automatically be endowed with the ability to figure out 
whether one or 3 encryptions are needed for a given operation and 
automatically adjust itself accordingly? It has occurred to me that we 
may be having a nomenclature problem in this discussion, which is the 
basis of our mis-understanding. You see, when I say "in hardware" to 
refer to an encryption device, what I mean is a product which implements 
the algorithm using a hardware component (chip) controlled by software. I 
use "in software" to mean "pure" software implementations only. Maybe 
when you say "in hardware" you are refering to archaic devices which are 
primarily hardware with little or no intelligent control. In this 
context, I kind of understand what you are saying. But my initial 
argument is still valid. Just because something is implemented in 
software does not mean it can or will be easily modified. It is not 
uncommon in the American banking industry for successful applications to 
run unmodified for 20+ years before someone gets around to updating or 
replacing them. This is not an exageration, it's a fact, even with the 
advent of PC's, workstations, etc, taking over more work from the 
mainframes and minis. And while it seems strange, it is understandable 
given the amount of money that went into developing some of these 
applications and the large user base some of them have. When something 
expensive works well and does what you need, it can be hard to justify 
changing it..

Larry...   
