Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!math.ohio-state.edu!cs.utexas.edu!convex!news.utdallas.edu!corpgate!bnrgate!bnr.co.uk!uknet!festival!edcogsci!richard
From: richard@cogsci.ed.ac.uk (Richard Tobin)
Subject: Re: Better Keys
Message-ID: <CM5I5F.9nx@cogsci.ed.ac.uk>
Organization: HCRC, University of Edinburgh
References: <199403031815.SAA04958@an-teallach.com>
Date: Fri, 4 Mar 1994 17:34:26 GMT
Lines: 18

In article <199403031815.SAA04958@an-teallach.com> sci-crypt@demon.co.uk writes:
>Nice try but it doesn't help :-)  What you need is to *insert* the
>requisite number of random bits to start with, not pull more out; if
>you have a deterministic algorithm, making a second call to random()
>to get more data doesn't help.  Ideally you want an RNG with <n> bits
>of internal state, and you want to initialise those bits with as close
>to truly random bits as you can find from your system.

Well, the unix function random() *does* have more than 32 bits of
state (up to 2048), even though the value returned only has 31.  And
you *can* initialise all of them.  Whether using consecutively
generated numbers is a good idea I'm not sure.

-- Richard
-- 
Richard Tobin, HCRC, Edinburgh University                 R.Tobin@ed.ac.uk

"Your monkey has got it right, sir."  - HHGTTG
