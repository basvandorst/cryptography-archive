Path: msuinfo!agate!howland.reston.ans.net!pipex!uknet!demon!an-teallach.com!gtoal
Newsgroups: sci.crypt
From: gtoal@an-teallach.com (Graham Toal)
Subject: Re: Key-exchange
X-Phone: +44 31 662 0366
X-Fax: +44 31 662 4678
X-Organisation: An Teallach Limited
Date: Fri, 25 Mar 1994 20:17:42 +0000
Message-ID: <199403252017.UAA02859@an-teallach.com>
Sender: usenet@demon.co.uk
Lines: 36

:From: jfjr@mbunix.mitre.org (Freedman)

:   We are working with swIPe here at MITRE(security at the ip network
:layer). We got the basic code working and now we are including
:Diffie-Hellman key exchange. Key-exchange is a protocol in itself and
:before we get mired into design and implementation of a protocol from
:scratch we'd like to know if its been done before or written about or
:both. So here is the question:

:  Are there any existing key-exchange protocols or is there anybody
:out there working on key-exchange?


:  Note I am looking for implementation level detail type stuff ie
:given that we have datagram communication do we calculate first before we 
:a rekey to our partner? How do we determine who is the "master"
:and who is the "slave"? Do we use a two phase commit?

As far as I can tell from the RSAREF docs, Diffie-Hellman can be implemented
in a simple symmetrical exchange:  each side generates it's magic DH
numbers, sends its public part to the other side, and calculates the
shared secret from the local private part and the received other's public
part.

I'm working on a secure session program (sort of like telnet but cheaper
and nastier) and this is how I've coded it up to do rsaref.  Unfortunately
I can't actually use rsaref myself since they're not allowed to export
it, so I'm hoping I can find someone in the US to take my code and try
it out for me and let me know if it works...

Meanwhile, I guess I'd better add a mode that works with an externally
transferred shared secret and no D-H key-exchange, if I want to be able
to use this over the US boundary.

G

