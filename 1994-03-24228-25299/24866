Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!zombie.ncsc.mil!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Khufu, REDOC III, and patent issues
Date: Sat, 19 Mar 94 15:14:07 CST
Organization: University of Missouri, Columbia
Lines: 44
Message-ID: <16F7ED641S86.C445585@mizzou1.missouri.edu>
References: <1994Mar13.051515.27175@cactus.org> <1994Mar14.223702.6452@mnemosyne.cs.du.edu> <1994Mar15.065615.3895@cactus.org> <16F7D11487S86.C445585@mizzou1.missouri.edu>
NNTP-Posting-Host: mizzou1.missouri.edu

   I should add a couple of comments to my earlier post about using a
REDOC-III or Khufu-like scheme for block mixing.  First, the scheme I
described might infringe on someone's patent--my guess is that it would
come closer to infringing on Merkle's than Wood's, but I'm about as far
from being a legal expert as you can get.  The general idea of using
key-generated tables of possible keys, and then using the block being
processed by the cipher to select which key to XOR into the rest of
the block, seems kind-of broad to be patentable, but then, so do a lot
of current patents.
 
   Second, the general idea of this kind of operation could also be used
to strongly interrelate a large block, like the MD2-like operations of
DESX.  For example, with a given key table K() of 64-bit key blocks, first
pre-xor the block with something, maybe repetitions of a 63-bit value
or something.  Next:
 
   Let blocks be X(0) to X(7) (for a concrete example).  Let bytes be
b(0) to b(63).  Let K(i) be the ith key table entry:
 
   For i = 0 to 63 Do
      XOR K(b(i)) into b(i+1)..b(i+8)
   End
 
   If you repeat this twice, you probably have some pretty strongly
interrelated blocks.  You might wind up using several different variations
of the same key table, with 128-bit entries that are half 0's, for
speed.
 
   Again, I don't know whether this would infringe on anyone's patents.
 
   --John Kelsey, c445585@mizzou1.missouri.edu
 
Sideline note:
 
   Looking at REDOC-III's structure vs. 16-round Khufu's structure, they
looked pretty comparable in terms of security.  Merkle varied the s-boxes
after each 8 rounds, where Wood didn't vary the key table--but then, with
only 16 "rounds," it's not clear to me whether this is a major security
problem.  Wood XORs in 56 bits of key material each time, where Merkle
sticks with the standard Feistel-type scheme and XORs in only 32 bits
of key material at a time.  Any thoughts about how these differences
affect security?
 
   --John Kelsey, c445585@mizzou1.missouri.edu
