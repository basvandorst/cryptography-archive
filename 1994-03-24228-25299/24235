From: edward.rice@his.com (Edward Rice)
Sender: UUCP@Clone.his.com
Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!pipex!uunet!news.his.com!Clone!UUCP
Newsgroups: sci.crypt
Subject: some integer problem
Message-ID: <762429853.AA09473@Clone.his.com>
Date: Mon, 28 Feb 1994 00:10:35
Lines: 44

  SB> From: bandi@di.epfl.ch (Srikanth Bandi)

  SB> There are four integers a1,a2,b1,b2 with large values such that  a1 >=
  SB> a2 and b1 >= b2. I have to determine the relation between their
  SB> products. Namely whether
  SB> 
  SB> a1.a2 > b1.b2
  SB> 
  SB> without actually carrying out the multiplication of a1,a2 and b1,b2.
  SB> The multiplication gives integer overflow because of large values of
  SB> variables. Is there any way of doing this? (The problem arises in the
  SB> case: a1 > b1 and a2 < b2 or vice-versa)

This is what logarithms work best at.

If you absolutely can't compute logarithms of the numbers involved (and then
just compare magnitude of sum of logs), then consider doing a quick-and-dirty
form of the same thing -- compute how many significant bits are in a1 and a2,
and in b1 and b2.  I think all you have to do is then compare (a1+a2) with
(b1+b2) -- you may have to fudge by one or two bits, but that's easy enough to
work out with pencil and paper.  This will, at the very least, give you the
answers to MOST of the possible values correctly, and enough information to
determine for which other cases you will need to work out the answer precisely
using logarithms.

Sample: a1 has 16 bits, a2 has 12 bits; b1 has 14 bits, b2 has 20 bits. 
Without even the pencil and paper I mentioned above, a1's value must be less
than 2**17, and a2's value must be less than 2**13, but in neither case a
whole binary order of magnitude less.  So (a1*a2) produces a product that
requires 28 or 29 bits to express.  On the other side of the question, b1*b2
must be less than 34 bits, but not much less, so the product requires 32 or 33
bits.  On inspection, a number requiring 32 or 33 bits to express must be
larger than a number requiring only 28 or 29 bits to express, so (b1*b2) >
(a1*a2).

Comments: still without pencil in hand, 1-bit times 1-bit = 1-bit, and so
upwards, which is why multiplying 17 bits by 13 bits yields a product
requiring /less than/ 30 bits to express.  In other words, the most obvious
arithmetic in the preceding comments wasn't as obviously wrong as the most
casual observer might first think!  However, I don't stand behind the
specifics, only the approach.



