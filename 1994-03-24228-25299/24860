Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!sol.ctr.columbia.edu!CUNYVMS1.GC.CUNY.EDU!DLV
From: dlv@CUNYVMS1.GC.CUNY.EDU (Dimitri Vulis, CUNY GC Math)
Newsgroups: news.admin.misc,news.admin.policy,comp.bbs.waffle,sci.crypt
Subject: Re: CANCELS -- Comments and Solutions (was: WAFFLE BBS FORGES 78 CANCELS!
Date: 19 Mar 1994 16:48:53 GMT
Organization: Computer Center, CUNY Graduate School, New York NY 10036
Lines: 79
Message-ID: <2mfadl$81l@sol.ctr.columbia.edu>
References: <2lsklj$qf2@news.ysu.edu> <msbCMruqo.GJt@netcom.com> <msbCMuCpD.H4E@netcom.com> <2mc81f$5es@news.mantis.co.uk>,<msbCMwyDv.K6E@netcom.com>
Reply-To: dlv@CUNYVMS1.GC.CUNY.EDU
NNTP-Posting-Host: cunyvms1.gc.cuny.edu
Xref: msuinfo news.admin.misc:8566 news.admin.policy:11230 comp.bbs.waffle:17794 sci.crypt:24860

[adding sci.crypt to the newsgroups]

In article <msbCMwyDv.K6E@netcom.com>, msb@netcom.com (Mark S. Bilk) writes:
[public key cryptography discussion]
>There are also other cryptographic techniques, such as the one
>used for Unix passwords, that are (apparently) in the public
>domain.  I think there is an algorithm which takes the password
>and encrypts it to the string (call it the cryptword) that's kept
>in the /etc/passwd file (or at least it used to be kept there
>before security was tightened).  When the user enters his
>password, Unix encrypts it with the same algorithm and accepts
>the user if the result equals the cryptword.  The algorithm is
>non-invertible, which means it's impossible (in a reasonable
>amount of time) to compute the password from the cryptword.

You might be amused by the homework I gave my computer security class over
the spring break (those who claim ignorance of C are excused).  I gave
them an excerpt of my /etc/passwd file with passwords known to be dictionary
words, a dictionary, and a source to fast crypt (from  David Koontz).  Let's
see how many passwords they'll get after 2 weeks.  Most of the folks in class
are themselves sysadmins.  If they haven't been shadowing passwords before,
they sure will now...

>Suppose that for each article, the poster's software chooses a
>random password and places the corresponding cryptword in a
>header in the article.  The software then stores the password for
>a month or two.  If the poster decides to cancel the article, his
>software would include the password in the cancel message.  News
>software everywhere would compute the cryptword from the password
>in the cancel, and would perform the cancellation only if the
>result matched the cryptword in the article.  The poster's
>sysadmin could also issue a valid cancel, since he would own the
>file of passwords.  (Just to be clear, none of this would have
>any connection with the user's account password.)

Ahem.  Why not just use PGP, which is more or less standard already?
Somebody who has more time than I do should hook that to some common
newsreaders and Waffle to verify PGP digital signatures on control articles.
Of course, Waffle itself IGNORES control articles, although it
generates cancels for others.

>>2. What if the user in question *is* the system administrator?  You
>>   want me to implement a system to stop anyone cancelling Serdar Argic
>>   or John Palmer postings?  I think not.
>>
>>3. What if I forge an article from you, asking (say) for advice on molesting
>>   children?  Naturally, I substitute a bogus public key.  You can't
>>   cancel the article, and nor can anyone else.  Wow, what a great system.
>
>I think these are really both the same question.  The answer is
>that yes, anyone will be able to post articles which are not
>globally cancellable, about as easily as they can post a forged
>cancel message today.
>
>Of course, such articles could still be cancelled by each sysadmin 
>(on their own site only).

I doubt that this will ever be implemented in our lifetimes, but I suppose that
a site could have a list of people trusted to issue control messages, such
as cancel or rmgroup.  If newgroup comes from sysop or tale, fine, else it's
not executed.  If cancel comes from the poster or sysop or tale or some other
"trusted censor", fine.  That's where digital signatures would come in handy. 
Thus, a forged rmgroup/newgroup from tale will bite the bit bucket. No
mo' J.P.! :)  Ditto for the forged "approved:" lines in moderated newsgroups.

If a user from your cite posts something you'd like to see killed, you have
to ask a "trusted censor" to do it for you.

Heck, I'm willing to have Nick Sandru as my "trusted censor". 

>[lots more interesting suggestions skipped]

We'll get there eventually.
Dimitri Vulis
CUNY GC Math
DLV@CUNYVMS1.BITNET DLV@CUNYVMS1.GC.CUNY.EDU

Disclaimer: my Usenet postings don't necessarily represent anyone's views,
especially my own and/or CUNY's.
