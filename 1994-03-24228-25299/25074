Path: msuinfo!agate!set
From: set@ucsee.EECS.Berkeley.EDU (Sam E. Trenholme)
Newsgroups: sci.crypt
Subject: How to have large PGP keys.
Date: 25 Mar 1994 13:39:32 GMT
Organization: University of California Society of Electrical Engineers
Lines: 48
Message-ID: <2mupik$582@agate.berkeley.edu>
References: <2me0uc$5en@kaiwan.kaiwan.com> <1994Mar19.123320.20648@mnemosyne.cs.du.edu> <PCL.94Mar24121931@foo.oucs.ox.ac.uk>
NNTP-Posting-Host: ucsee.eecs.berkeley.edu

-----BEGIN PGP SIGNED MESSAGE-----

In article <PCL.94Mar24121931@foo.oucs.ox.ac.uk>,
Paul C Leyland <pcl@foo.oucs.ox.ac.uk> wrote:
>I'll leave it to you to decide whether 512-bit keys are secure enough
>for your needs.  One thing I am reasonably sure of is that kilobit
>keys are safe for quite a few years yet, unless there are remarkable
>breakthroughs in factoring abilities.  It is no coincidence that my
>PGP key is 1024 bits.

It is easy to hack PGP to accept arbitrary long keys, as long as you
don't use certin assembley routines to generate your key. Here is
how to modify PGP:

To modify PGP to accept keys with more than ~1280-bit keys, change
the following around line 317 of mpilib.h:

before your change:
#define MAX_BIT_PRECISION (1280+(2*UNITSIZE))
#else
#define MAX_BIT_PRECISION 1280
#endif

after your change:
#define MAX_BIT_PRECISION (32000+(2*UNITSIZE))
#else
#define MAX_BIT_PRECISION 32000
#endif

Note that keys longer than ~1280 bits will *not* be backwards compatable
with non-hacked versions of PGP.

These modifications were done with PGP 2.3a. I do not know if these 
modifications will work with other versions of PGP.

- --
Sam Trenholme: internet junkie, pgp key: finger set@ucsee.berkeley.edu
Key fingerprint =  F0 36 E3 B5 08 7E D1 E0  3B 5B EB 44 47 0F 6D 14

-----BEGIN PGP SIGNATURE-----
Version: 2.3a

iQCVAgUBLZLpfvQV1fqMEbK1AQH1wAP+NopDXT+y7e6G4g2LVrslvOvHjx4t+anJ
rcv4MsR3V1YMOA+wAMpS0Pk0NiliWx84R5Rbt7noMfSc1k6T/DmLJsukR6Zi2/Ac
CWe3KHsHUezoEJJMOAlqQSBzF0iHcKN162vF54Xl3CNZRcx5g+mDzce1fhUyNhxc
NZbW9jXdW0Q=
=Z/UJ
-----END PGP SIGNATURE-----
