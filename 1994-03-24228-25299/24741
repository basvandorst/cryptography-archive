Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!uunet!mnemosyne.cs.du.edu!nyx10!colin
From: colin@nyx10.cs.du.edu (Colin Plumb)
Subject: Re: S-box question
Message-ID: <1994Mar16.062933.29648@mnemosyne.cs.du.edu>
X-Disclaimer: Nyx is a public access Unix system run by the University
 	of Denver for the Denver community.  The University has neither
 	control over nor responsibility for the opinions of users.
Sender: usenet@mnemosyne.cs.du.edu (netnews admin account)
Organization: Nyx, Public Access Unix at U. of Denver Math/CS dept.
References: <wd6cmuCMqECs.K1J@netcom.com>
Date: Wed, 16 Mar 94 06:29:33 GMT
Lines: 26

In article <wd6cmuCMqECs.K1J@netcom.com>,
Eric Williams <wd6cmu@netcom.com> wrote:
>
>Please excuse a newbie question.  I was reading Bruce Schneier's
>"Applied Cryptography" of DES's S-box substitution, which states:
>
>  The input bits specify an entry in the S-box in a very particular
>  manner.  Consider an S-box input of 6 bits, labeled b1...b6.
>  Bits b1 and b6 are combined to form a 2-bit number, from 0 to
>  3, which corresponds to a row in the table.  The middle 4 bits,
>  b2 through b5, are combined to form a 4-bit number, from 0 to
>  16, which corresponds to a column in the table.
>
>As a programmer, this looks like BS to me.  A simple re-arranging
>of the S-box table should yield a linear array that is directly
>addressible by the 6 input bits.  Am I missing something here?

You are perfectly correct.  The designers of DES chose to print the
S-boxes in this unusual way, and it has become conventional to do it
that way, but it is equivalent to a 64-entry table.

It makes a bit more sense if you consider each S-box to have 4 input
bits which are "its own" and two bits which are "stolen" from the
inputs of adjacent S-boxes.  But not that much more sense.
-- 
	-Colin
