Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Newsgroups: sci.crypt,comp.org.eff.talk,alt.privacy
Subject: Re: EFFector Online 07.04 - FBI Digital Telephony Nightmare Recurs
Date: 22 Mar 94 18:03:17
Organization: The Mitre Corp., Bedford, MA.
Lines: 85
Distribution: inet
Message-ID: <EACHUS.94Mar22180317@spectre.mitre.org>
References: <2kj06o$pq7@eff.org> <2mj7la$53k@access1.digex.net>
	<strnlghtCn0376.64t@netcom.com> <Cn1L2t.9yu@rosebud.strinc.com>
	<strnlghtCn329o.2Cn@netcom.com>
NNTP-Posting-Host: spectre.mitre.org
In-reply-to: strnlght@netcom.com's message of Tue, 22 Mar 1994 20:29:47 GMT
Xref: msuinfo sci.crypt:24971 comp.org.eff.talk:30088 alt.privacy:13245

In article <strnlghtCn329o.2Cn@netcom.com> strnlght@netcom.com (David Sternlight) writes:

  > The limits to growth on the stakeholders are different. For the
  > user, the limit is some acceptable number of seconds to do the
  > encryption. For the cracker, the limit is the budget he has for
  > parallel proccessor machines.

  > Perhaps at some state of the art for personal computers, we will
  > reach a point where key lengths are everyday-practical (in the
  > above sense), while cracking budgets aren't within the means of
  > rich, smart cryptologic organizations working on targeted messages
  > with special-purpose very fast parallel processor machines. If the
  > race is between an exponential growth of cracker machine budgets
  > vs. a linear or polynomial growth of encryption machine limiting
  > times, there's some state of the art/state of readily available
  > PCs that will tilt the advantage sharply to the encryptor,
  > assuming brute force search by the cracker.

  > I don't know what that is, and there have been discussions of the
  > matter on sci.crypt. So far nobody has posted the table I
  > suggested, parameterizing the above calculation.

    There are a lot of parameters, and some are guestimates, but the
answer is of historical interest only.  First some parameters:

    1)  How far is the NSA, or some other such agency, ahead of
public state of the art?   This is a very tough question, but it
allows of two (different) easy answers:

      a) Technology of factoring and decryption:  We have several
instances in the last two decades where the delta is now known.  In
several cases, the public was ahead, especially in development of
factoring algorithms and public key cryptosystems.  In crypto attacks,
the NSA was well ahead 20 years ago.  Current status is unknown, but I
wouldn't use anything without a provable lower limit anyway.  (And
keep your eye on the assumptions in the lower limit.)

      b) Computer and electronic technology:  There isn't enough money
in the world for NSA to stay ahead of the state of the art, and state
of the practice only trails state of the art by months these days.
(For example you might get 3x rated performance from a chip by using
ingenous cooling systems, but it's not very cost competitive with a
commecial system with more procesors.  The only real advantage is to
use sampled parts, etc.)

  2) How much can money buy?  Right now there is close to a linear
relationship in the workstation market between price and performance
for CPUs. (Faster machines usually have bigger disks and memories
attached, and there is a basic cost for box, power supply, keyboard,
etc., but in this discussion that is a detail.)  Let's use $50 per
MIPS.  (Remember, we're buying bare boards here...)  Right now, the
average home user is around 5 MIPS, the power users around 20,
workstations are in the 50 to 200 range at the top.  The NSA can
easily afford a "cracker box" with a million MIPS, and a twenty-million
MIPS machine is not out of reach.  (In this discussion there is little
or no cost to parallelism.  Both factoring and brute force searches
are almost infinitely distributable with very little communication
required.)  So compared to our average office worker or home power
user, assume that the NSA has a 1,000,000x MIPS advantage.

  3) How much does the NSA need?  A factor of a million is a drop in
the bucket.  Let's take the IDEA example to brute force crack a
message, given known plaintext, will take the NSA 3.4028237E38 times
as long.

  So even if the NSA has a 1,000,000,000x advantage from better
algorithms, it will still take 340,000,000,000,000,000,000,000 times
as long to read the message as to write it.  The advantage goes to the
user, not the attacker, and this has been true since the mid to late
seventies.  I pick the seventies, because that is when the importance
of algorithmic complexity became generally known--it applies to many
fields not just cryptography.  Actually, I should probably tie it
directly to the cracking of the crypto schemes based on bin-packing,
and the RSA challenge that may soon fall.  The advice at about that
time was that RSA should be used with 200+ digit keys (= 664+ bits)
which is still good advice today.


--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
