Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!swrinde!menudo.uh.edu!hounix!synercom!uhura1!bill
From: bill@Stoner.COM (Bill R. Wade)
Subject: Re: Many-to-One Cryptosystem Question
Message-ID: <CMIKGM.oF@Stoner.COM>
Organization: Stoner Associates, Inc.
References: <2lldbu$7bv@netaxs.com>
Date: Fri, 11 Mar 1994 18:53:01 GMT
Lines: 35

In article <2lldbu$7bv@netaxs.com> soneill@access.netaxs.com (Steve O'Neill) writes:
>I've been following some of the discussions here over the past few weeks
>concerning ways of hiding the very fact that you're sending encrypted
>data(steganography). This got me to wondering if any crypto systems or
>algorithms exist which would allow two different data streams, encrypted
>with two different keys using two different transform methods, to produce
>the same encrypted output. This would let someone create two messages, one
>relatively innocuous and one possibly incriminating such that, when
>encrypted by the two different methods and keys would produce an encypted
>message whose true decryption could only be done by someone knowing the
>"real" key and "real" transform method.
>
>The advantage of such a system would lie in its ability to allow someone
>to show someone, a judge or jury, for instance, that, regardless of what
>some law enforcement official may say the encrypted message is hiding, its
>actual decryption will produce an innocuous message.
>
>I'm not aware of such a system, but then, I'm a relative novice when it
>comes to cryptography. Does anyone know if there is such a system, or if
>there is currently research being done to find such a system?

Message_1:  Let's conspire to do evil.XX   // Note: pad shorter message
Message_2:  Let's wish happiness to all.

Key_1: Taken from your one-time pad.
Ciphertext (1 and 2):  Message_1 XOR Key_1
Key_2: Ciphertext XOR Message_2

You will want to distribute both Key_1 and Message_2 in advance.  That way if
the police raid your partner's hard disk at the same time they raid yours, he
will have had time to generate Key_2.  Of course, since you're using a
one-time-pad anyway, you should be eating the keys as soon as they're used.
-- 
Any opinions above do not necessarily reflect the views of Stoner
Associates, Inc.
