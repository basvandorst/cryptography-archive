Path: msuinfo!agate!dog.ee.lbl.gov!ihnp4.ucsd.edu!usc!cs.utexas.edu!howland.reston.ans.net!pipex!uknet!demon!an-teallach.com!gtoal
Newsgroups: sci.crypt
From: gtoal@an-teallach.com (Graham Toal)
Subject: Re: Hard instances
X-Phone: +44 31 662 0366
X-Fax: +44 31 662 4678
X-Organisation: An Teallach Limited
Date: Wed, 30 Mar 1994 20:45:35 +0000
Message-ID: <199403302044.VAA23029@an-teallach.com>
Sender: usenet@demon.co.uk
Lines: 21

>From: bs@gauss.mitre.org (Robert D. Silverman)

>In article <CnGzvF.D5E@dcs.ed.ac.uk> pdc@dcs.ed.ac.uk (Paul Crowley) writes:
>:Quoting eachus@spectre.mitre.org (Robert I. Eachus) in article <EACHUS.94Mar29142111@spectre.mitre.org>:
>:>   A better statement might be that not all instances of the knapsack
>:>problem are hard (in fact most are easy)
>:
>:There's something that worries me.  Is there a theoretical basis by
>:which I might be able to rate *instances* of a problem as "easy" or
>:"hard"?  For every instance of a problem, there is a program that finds
>:the solution in polynomial time; it consists of a large printf()
>:statement.  Most instances of factorisation are easy, so even if we
>>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

>This is not true. It is far from the truth.

Erm... I wonder if you missed a leg-pull here?  *Most* numbers *are* easy
to factor - exactly half of them divide easily by 2, and a good pile of
those left over divide by 3 in seconds, and that's more than half already!

G :-)
