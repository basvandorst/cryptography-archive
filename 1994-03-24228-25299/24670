Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!zombie.ncsc.mil!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Re: Anonymous Remailing
Date: Sun, 13 Mar 94 18:05:42 CST
Organization: University of Missouri, Columbia
Lines: 48
Message-ID: <16F78FE77S86.C445585@mizzou1.missouri.edu>
References: <308@ephsa.sat.tx.us>
NNTP-Posting-Host: mizzou1.missouri.edu

In article <308@ephsa.sat.tx.us>
jburrell@ephsa.sat.tx.us writes:
 
>  Anonymous remailers A, B, C, and D are online. User 1 encrypts
>a message to user 2 and then places a header at the beginning of
>the message. So we have:
>  [Long description of mixing anon remailers deleted.]
 
   Why couldn't we take a page from the book of LAN architectures?
Set up an encrypted "token ring" between major anon remailers.  Each
anon remailer takes incoming messages, and maintains an outgoing and
incoming message queue.  Every so often, the token comes around from
the previous remailer on the system, and an encrypted token is sent
around from this remailer--whether it's encrypted random data, or
real encrypted data.  Even if this remailer has some outgoing data,
it may still choose (based on some pseudorandom choice) to send more
noise.  No trafic analysis should be possible except by other anon
remailers, at least as far as how busy the anon remailer goes.
 
   Now, let's assume we have 3 anon remailers, A,B,and C.  Through some
public-key protocol, they re-establish special session keys every so
often, so that there is a session key and a current state for AB, AC, and
BC.  (In practice, there would need to be many more, but the amount of
storage needed for each remailer goes up only linearly with the number of
remailers in the ring.)  This can be used for the first several bytes of
each encrypted packet, which is a flag for a given remailer.  if A wants C
to get a packet, it encrypts a signaling code, perhaps the most recent
packet A received from C, with key AC.  When B gets the token, it has no
way to know whether this is a token for C, or simply a randomly-generated
"filler" token sent from A to nobody.  When C gets it, if it's for C,
the header decrypts to something meaningful to C.  If it's not, then C
has no way of knowing that the packet wasn't something meaningful to B.
The only major requirement of the signaling here is that the code must
change each time in some way that makes it impossible for B to guess
at any time whether any previous packet was sent from A to C, without
breaking the encryption scheme used.
 
   This still doesn't answer problems with analysis of trafic between
anon remailer users, and if there are only 100 users on a system of 10
remailers, trafic analysis isn't likely to be a big problem.  But, this
sort of a scheme could certainly strengthen the "mixing" of anonymous
remail messages.
 
   Remailers dropping out of the network, synchronization problems,
transmission errors, etc., can all be dealt with using the techniques
currently used on token-ring networks.
 
   --John Kelsey, c445585@mizzou1.missouri.edu
