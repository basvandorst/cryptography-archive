Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!fs7.ece.cmu.edu!honeydew.srv.cs.cmu.edu!bb3.andrew.cmu.edu!andrew.cmu.edu!mg5n+
From: Matthew J Ghio <mg5n+@andrew.cmu.edu>
Newsgroups: sci.crypt
Subject: Re: Key-exchange help (or even better, sources) wanted...
Date: Tue,  8 Mar 1994 19:17:54 -0500
Organization: Freshman, MCS general, Carnegie Mellon, Pittsburgh, PA
Lines: 30
Message-ID: <ghTFKma00awJ4FSUVC@andrew.cmu.edu>
References: <199403072104.VAA11342@an-teallach.com>
NNTP-Posting-Host: andrew.cmu.edu
In-Reply-To: <199403072104.VAA11342@an-teallach.com>

Graham Toal <gtoal@an-teallach.com> wrote:

> I know that Diffie-Helman can be used to share a secret, and that
> would probably do fine, but before I try that method, does
> anyone know of any other methods that *aren't* patented by
> PKP or anyone else?  Or is all key-exchange everywhere patented?
> 
> This application is really just to stop kiddy hackers sniffing ether;
> if there's an alternative to D-H that's kiddy-proof but not
> NSA-proof, I'm quite happy to use it, if that makes it
> unencumbered.

I think all the good ones are patented, but they're not necessarily
patented in every country. :)

If all you want is a kiddy-proof algorithm, you could use the polynomial
thing I described on cypherpunks last year...  I wouldn't trust it
against the NSA, or anyone especially skilled at math, but it'd probably
be enough to make most kiddy-hacker ether-sniffers look for an easier
target, or it could just be a demonstration program.  (Just having the
program source code wouldn't let them crack it.)  Basically, you take
two polynomial functions f(x) and g(x) such that the outputs of f and g
mod some value, are one-to-one functions.  Compose f and g, then take
the modulus of each term, and send it to the recipient.  The recipient
encodes the session key with the composite function, and sends it to
you.  You then decode it by inverting each function seperately.  The
composite function can't be decomposed directly because the terms have
all been moduloed (although there are other things you can do to attack
it).  I can post the whole thing if anyone wants an interesting
cryptanalysis exercise...
