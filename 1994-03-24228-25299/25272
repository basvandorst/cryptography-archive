Path: msuinfo!agate!dog.ee.lbl.gov!ihnp4.ucsd.edu!swrinde!cs.utexas.edu!howland.reston.ans.net!pipex!uknet!demon!an-teallach.com!gtoal
Newsgroups: sci.crypt
From: gtoal@an-teallach.com (Graham Toal)
Subject: Re: Proposed index definition for standardized dictionaries
X-Phone: +44 31 662 0366
X-Fax: +44 31 662 4678
X-Organisation: An Teallach Limited
Date: Wed, 30 Mar 1994 20:24:58 +0000
Message-ID: <199403302019.VAA22334@an-teallach.com>
Sender: usenet@demon.co.uk
Lines: 26

:The data collection process has produced statistics indicating that
:the average word length is centered around 8 characters resulting in a
:1 M word dictionary approximately 8 MB in length.  Encoding common
:capitalization and endings will allow the storage requirements to
:remain manageable and within the capacity and capability of even low
:end computer systems in terms of resource utilization and performance.

This is the wrong way to do it.  Have a look at the 'dawg' data structure
in the old ACM article by Appel on "The Worlds fastest Scrabble Program".
It's not only the most useful structure for people to manipulate, it
also gives pretty good compression.  (Being a general acyclic graph that
promotes the sharing of arbitrary leading *and* trailing text)

However, for your purposes I question whether you should be doing
any compression/data structuring at all.  Maybe it would be better
for you to leave your data as a text file and allow the applications
writers to define their own more appropriate data structures.

Anyway, from what I've seen of your word list, it's not *really* of
any use in any field whatsoever except password cracking, though its
nice to pretend otherwise to get a little academic respectability ;-)
In which case a flat list of words is as good as anything.  (I say
that as someone who has done a *lot* of work in this area.  I expect if
Grady's listening, he'll agree.  He knows almost as much as I do ;-) )

G
