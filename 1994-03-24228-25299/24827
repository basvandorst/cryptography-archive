Path: msuinfo!agate!howland.reston.ans.net!gatech!swrinde!cs.utexas.edu!uunet!dziuxsolim.rutgers.edu!pilot.njin.net!csc
From: csc@pilot.njin.net (Sean Casey)
Newsgroups: sci.crypt,alt.security,alt.security.pgp
Subject: Re: Encrypting filesystem for DOS/Windows available
Message-ID: <Mar.18.14.52.05.1994.22344@pilot.njin.net>
Date: 18 Mar 94 19:52:07 GMT
References: <2m1hkqEgc1@uni-erlangen.de> <jktaberCMotIF.DGt@netcom.com> <2m64tjINNid@dns1.nmsu.edu> <1994Mar16.142440.20178@cs.nott.ac.uk> <2m7ei2$dmv@news.mantis.co.uk>
Followup-To: sci.crypt
Organization: Rutgers Univ., New Brunswick, N.J.
Lines: 29
Xref: msuinfo sci.crypt:24827 alt.security:15318 alt.security.pgp:10420

tony@mantis.co.uk (Tony Lezard) writes:

>Suppose the passphrase contains n characters chosen from an alphabet of
>size a. Trying all password lengths up to (but not including) n involves
>1 + a + a^2 + ... + a^(n-1) = (a^n - 1) / (a - 1) tests.  Trying only the
>length n passwords requires a^n tries.

>Hence trying all passwords <= n in length increases the work required
>by a factor of (a^n - 1)/(a^n(a - 1)). For a^n large this is approximately
>1/(a-1).

I don't know why otherwise clueful people (like a certain Wired
employee I know) will make this argument. People don't type random
characters in their passwords or passphrases. As "crack" so elegantly
shows, one can substantially reduce the keyspace searched, even more
so if any information can be gathered on the user.

If one wishes to present some really useful information, find the
average passphrase length, then take a good subset of english words
and proper nouns, and figure all gramatically correct permutations of
this with some punctuation and capitalization thrown in. There is the
keyspace that will contain most passphrases. Fortunately, it is still
profoundly large.

Sean
-- 
``Wind, waves, etc. are breakdowns in the face of the commitment to
getting from here to there. But they are conditions for sailing -- not
something to be gotten rid of, but something to be danced with.''
