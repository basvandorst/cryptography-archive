Path: msuinfo!agate!howland.reston.ans.net!news.intercon.com!panix!zip.eecs.umich.edu!yeshua.marcam.com!hookup!news.sprintlink.net!bga.com!bga.com!nobody
From: ritter@bga.com (Terry Ritter)
Newsgroups: sci.crypt
Subject: Re: H!E!L!P w/ PKZip Encr
Date: 19 Mar 1994 19:35:38 -0600
Organization: Real/Time Communications - Bob Gustwick and Associates
Lines: 146
Sender: ritter@bga.com (Terry Ritter)
Message-ID: <2mg99a$llo@ivy.bga.com>
References: <315@ephsa.sat.tx.us> <jktaberCMx089.1K3@netcom.com>
NNTP-Posting-Host: ivy.bga.com
Summary: Business Implications of Using Cryptography


 In <jktaberCMx089.1K3@netcom.com> jktaber@netcom.com (John K. Taber)
 writes:


>As an employee of Fudge Motors, Inc., I'm the custodian of Fudge Motors
>information (or subset) not the owner.  The owner is Fudge Motors.  As a
>dutiful employee I keep some information in my custody encrypted.  Now
>I leave Fudge Motors.  How does Fudge Motors retain access to its own
>data?
>
>I would like to see retention standards and mechanisms discussed with
>respect to crypto.


 I considered a number of these issues in my recent design of the
 advanced Penknife cipher.

 Note that I find the design of a cipher program which supports
 these sorts of issues to be complex and distinct from the design
 of the simple cipher-engines that we normally discuss on
 sci.crypt.


 I.  FILENAME MODE

 Advanced Penknife supports User-Key aliases which are kept in an
 enciphered file.  Each aliased User-Key can (and should) carry an
 "effective" date.  Now, by scanning the alias file, the program
 has access to multiple keys for a single alias depending on the
 desired date.  Normally the desired date is the "current" date
 from the OS, but the date can also be set from the command line.
 Of course, alias files also support the easy selection of one
 large User-Key among many by using a simple easy-to-remember
 alias.

 To select a particular key from an alias file, we need alias and
 date, which are both public quantities.  In advanced Penknife /f
 filename mode, both of these can be picked up from the OS, provided
 the user has put specific policies in place.  The alias can be
 picked up from the filename, and the desired date can be picked up
 from the file date.  The Penknife filename-to-alias conversion
 takes the first set of contiguous alphabetic characters in the
 filename as the alias.  (Some sort of conversion is necessary to
 allow one alias to be selected by multiple filenames which must
 be unique under the file system; typically the filename would be
 the alias and a number.)  The alias from the filename may be
 overruled from the command line, so completely different naming
 conventions are also possible while still using the file date
 from each selected file automatically.

 Thus, one Penknife alternative is for the user to name the incoming
 ciphertext files with the appropriate alias plus a sequence number.
 Those files could be accessed automatically because the alias and
 date would be developed from the file name and date.  Penknife
 wildcard name scanning and "append mode" operation could collect
 the plaintext from all such files with a single command, even if
 they were enciphered under many different keys.


 II.  MULTI-BLOCK ARCHIVES

 As another approach, Penknife also supports files containing
 multiple independent ciphertext blocks.  If these are all
 enciphered under the same key, they would all be available by
 deciphering that one file once.  In particular, simply concatenating
 the enciphered messages from one sender (headers, .sigs, and all)
 into a single file makes that file an overall ciphertext archive.

 Penknifsupports ciphertext archives which are maintained by
 simply appending each new ciphertext message to the existing
 archive *without* first deciphering the message.  This avoids the
 usual approach, whichwould:  1) decipher both the message and
 the archive file; 2) concatenate the plaintext; and 3) re-encipher
 the plaintext archive.  It would of course be necessary to start a
 new Penknife multi-block archive file after each key update.

 When multi-block Penknife files are deciphered, they can either
 skip or "pass through" each message header and .sig.


 III.  ADVANCED PENKNIFE BATCH FILES

 As yet another alternative, businesses could use advanced Penknife
 batch files.  These are enciphered lists of Penknife command lines,
 but can directly include User Keys (since Penknife batch files are
 enciphered).  Thus, Penknife batch files could be used to limit and
 simplify user options, or provide special circumstance features for
 particular projects or users.



 Business Implications of Cryptography

 Some major issues for business include the possibility that
 employees could damage or hide data, or that they may forget keys
 or hold them ransom.  These problems argue in favor of centralized
 key management.  It is important, though, to separate the aspects
 which cryptography really affects.  Employees can damage or hide
 data without cryptography.

 Many businesses may feel better about corporate cryptography if
 they require centralized key-management for all corporate files,
 and enforce this rule.  With Penknife, they can establish a
 corporate alias file, and by using dated User Keys, provide
 automatic, company-wide, virtually-painless key-updates.  That
 alias file can be extended as desired and distributed without
 havoc (provided the effective dates for new keys on existing
 aliases occur after distribution is complete).

 I'm not sure it is possible to prevent the arbitrary use of ciphers
 without real-time direct communication with a server.  If we assume
 that much business ciphering will take place in the field on
 laptops, that approach is not currently available.  Presumably a
 business would feel that they take less risk by empowering their
 own people than they would have by leaving their communications
 open to everyone.

 However, *key audits* of corporate files are possible and easy
 under Penknife, simply by trying the approved aliases on enciphered
 files.  The validity of the key is indicated by the resulting CRC.
 Finding enciphered files which fail such an audit would be a warning
 sign to any reasonable business.

 Of course, it is always possible for someone to encipher under
 one key, and then encipher again under the current corporate key.
 This could not be prevented unless there was exactly one corporate
 key for all time and the cipher supported only that one key, which
 is unrealistic.  However, an auditor could quickly examine
 deciphered files during audit to eliminate this possibility.
 (Ciphertext does not look like plaintext.)  A good CRC with
 recovered ciphertext would be a palpable alarm.

 To the extent that employees can create and modify files, they can
 damage files in all sorts of ways that don't require cryptography.
 (Indeed, the major problem may be accidental damage.)  If this is
 an issue, a corporate librarian may be needed to maintain fair
 copies of important files, and the need for this may well be
 completely independent of the use of cryptography.  But corporate
 cryptographic archives could function simply by retaining a
 duplicate of every corporate email transmission.

 ---
 Terry Ritter   ritter@bga.com  (probably)


