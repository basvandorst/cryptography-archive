Path: msuinfo!agate!ucbvax!hplabs!hp-cv!hp-pcd!hpcvsnz!ericb
From: ericb@lsid.hp.com (Eric Backus)
Newsgroups: sci.crypt
Subject: Re: Encryption from Hash Functions
Message-ID: <Cn14ry.HHG@hpcvsnz.cv.hp.com>
Date: 21 Mar 94 19:28:46 GMT
References: <CMvq7M.K38@hpcvsnz.cv.hp.com> <WCS.94Mar19043805@anchor.ATT.COM>
Sender: news@hpcvsnz.cv.hp.com (News )
Organization: Hewlett-Packard
Lines: 36
X-Newsreader: TIN [version 1.2 021193BETA PL3]

Bill Stewart +1-510-484-6204 (wcs@anchor.ho.att.com) wrote:
> ericb@lsid.hp.com (Eric Backus) writes:
>    Phil Karn's three-round MD5-based encryption scheme required three
>    rounds of MD5 to process half a block of input data.  The above method
>    requires only one round of hash function to process a full block of
>    input data.  Thus, this method should be six times faster than Phil's.
> 
> One problem with using MD5 is that it produces 128 bits of hash output
> for larger blocks of input, though you could take 128 bits
> of input and pad to the 448 bits or whatever it is in a 512-bit
> block.

MD5 (and any other hash function) can take an arbitrary-sized input.
I happen to choose an input size that is equal to the output size.
The fact that internally, MD5 pads things and works on 512-bit blocks,
should not matter to the encryption algorithm that I proposed.

> It's been a while since I've seen Phil's reasons for the details in
> his system, but there were some weaknesses that they addressed.

One fundamental difference between my proposed hash encryption and
Phil's is that Phil's does not rely on a unique initial block.  In
this sense, Phil's is closer to being like IDEA or DES, as it can
independantly encrypt blocks of data.  I believe that in Phil's
system, three-rounds were required to avoid weakness.

My system can't independantly encrypt blocks of data--it requires some
unique data as input for each output block.  The requirement for a
unique initial block is not present in any other encryption methods
that I know of.  I haven't thought of any way that this compromises
the encryption, but it is always possible that this requirement
introduces some new method of attack on the algorithm.
-- 
				Eric Backus
				ericb@lsid.hp.com
				(206) 335-2495
