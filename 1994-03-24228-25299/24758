Newsgroups: sci.crypt
Path: msuinfo!agate!ihnp4.ucsd.edu!library.ucla.edu!europa.eng.gtefsd.com!howland.reston.ans.net!wupost!psuvax1!eiffel.cse.psu.edu!so
From: so@eiffel.cse.psu.edu (Nicol C So)
Subject: Re: S-box question
Message-ID: <CMrLC7.9q5@cse.psu.edu>
Sender: news@cse.psu.edu (Usenet)
Nntp-Posting-Host: eiffel.cse.psu.edu
Organization: Computer Science and Engineering, Penn State University
References: <wd6cmuCMqECs.K1J@netcom.com>
Date: Wed, 16 Mar 1994 15:50:30 GMT
Lines: 24

In article <wd6cmuCMqECs.K1J@netcom.com> wd6cmu@netcom.com (Eric Williams) writes:
>                             ...  I was reading Bruce Schneier's
>"Applied Cryptography" of DES's S-box substitution, which states:
>
>  The input bits specify an entry in the S-box in a very particular
>  manner.  Consider an S-box input of 6 bits, labeled b1...b6.
>  Bits b1 and b6 are combined to form a 2-bit number, from 0 to
>  3, which corresponds to a row in the table.  The middle 4 bits,
>  b2 through b5, are combined to form a 4-bit number, from 0 to
>  16, which corresponds to a column in the table.
>
>As a programmer, this looks like BS to me.  A simple re-arranging
>of the S-box table should yield a linear array that is directly
>addressible by the 6 input bits.  Am I missing something here?

You are right in that the S-boxes can be implemented as 1-dimensional arrays.
However, Bruce Schneier's (and almost all other literature's) presentation
helps visualizing how the S-boxes work.  If you take a closer look, b1 and
b6 are different from b2-b5.  Each S-box can be viewed as a substitution
function on a _4-bit_ subblock.  If you look at it this way, b2-b5 are
the input to the substitution function, which yields a 4-bit output.
b1 and b6, on the other hand, are bits from _neighboring_ blocks that
selects 1 out of the 4 subsitution function available in the particular
S-box.
