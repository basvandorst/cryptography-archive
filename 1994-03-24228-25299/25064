Path: msuinfo!agate!howland.reston.ans.net!gatech!news-feed-1.peachnet.edu!concert!hearst.acc.Virginia.EDU!portal.gmu.edu!gravity.science.gmu.edu!tfs
From: tfs@gravity.science.gmu.edu (Tim Scanlon)
Newsgroups: comp.sys.next.misc,sci.crypt
Subject: Mail public key encryption & OS encryption
Followup-To: comp.sys.next.misc, sci.crypt
Date: 24 Mar 1994 23:57:11 GMT
Organization: George Mason University, Fairfax Va.
Lines: 45
Sender: tfs@gravity.science.gmu.edu
Distribution: world
Expires: 04/30/94
Message-ID: <2mt9cn$5n8@portal.gmu.edu>
NNTP-Posting-Host: gravity.science.gmu.edu
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Summary: things that make ya go hmm...
Xref: msuinfo comp.sys.next.misc:36925 sci.crypt:25064


	I was poking around my OS (as I am wont to do occasionaly)
and came across some pretty intersting stuff in the "Mail.app".
	There's a whole setup in it to do public key encryption...
I was pretty suprised to see it needless to say, & damned excited too.
The idea of being able to do on the fly, integrated, secure email is
a _damn_nice_ feature to say the least. I know it's easy enough to do
pgp mail from the command line & all that, but sending secure NeXTmail is
another thing entirely.
	There's also some stuff in the WorkspaceManager.app for it as
well.. Seems there's a missing "Encryption.tool" that plugs in there 
someplace that let's you encrypt & decrypt files on the fly.

	In any event it seems the stuff is disabled, at least in the
general release. I spoke to someone at NeXT, and it seems they had a whole
nice setup to do this stuff, and got all the way to the end of the approval
process for their encryption algorithm and got turned down & export 
restricted. Apperently at that point they decided not to use it in the
release so as to avoid having 2 source trees. From what I understand,
the stuff has been around since release 2.0 & is sceduled to be nuked or
some such...

	Needless to say, the infinate stupidity of ITAR restrictions 
struck again. One of these days mayhaps a clue will fall upon the US
government and they'll realize how ~utterly stupid~ doing stuff like that
is. I'm not going to hold my breath though. Maybye at soem point though
they'll figure out that all they're doing is screwing US software & hardware
producers, and incovinencing people. It certainly doesn't do much else...

	I'm not good enuf at Objective C to be able to really see 
what's up with this stuff, but if anyone out there knows any more about
what the deal is with the code, or what the story is on it, drop me 
some mail! God knows I wish it were usable, it'd make the product more
sellable & and would really be a decent feature to be able to use too.

	The easiest way to see where the stuff lives is this:

	cd /usr/lib/NextStep; lsbom BaseSystem.bom | grep ypt


		Anyhow, if ya know any more mail me please.

			Tim Scanlon

tfs@gravity.science.gmu.edu
