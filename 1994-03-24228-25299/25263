Path: msuinfo!agate!howland.reston.ans.net!pipex!demon!an-teallach.com!gtoal
Newsgroups: sci.crypt
From: gtoal@an-teallach.com (Graham Toal)
Subject: Re: An interesting article in comp.lsi
X-Phone: +44 31 662 0366
X-Fax: +44 31 662 4678
X-Organisation: An Teallach Limited
Date: Wed, 30 Mar 1994 17:30:02 +0000
Message-ID: <199403301726.SAA18001@an-teallach.com>
Sender: usenet@demon.co.uk
Lines: 50

:For those who are not familiar with them, FPGAs (field programmable gate
:arrays) are readily available and easily programmed.  You can think of them
:as the `poor man's custom digital chip'.  The Xilinx gate
:arrays are actually programmed with an external EPROM that the FPGA uploads
:to configure itself, so the programming itself doesn't use any custom
:hardware.

:Anyway, for those who are interested in how fast DES (or RSA) can be
:`cracked', take a look at the original article.

Oh damn, I'm sorry, it completely slipped my mind - I meant to tell
you guys about a newer technology when we were talking about DES-cracking
boxes and how custom hardware would be inapplicable to small changes
in a particular cypher; with programmable chips like this, you can
rewire it for any particular cypher at runtime.

The company I know about is Algotronix - they used to be in the
office next door to me and we shared the same ether segment until
about 3 months ago :-) [from which I can conclude that at that time
they certainly weren't selling this stuff to the US govt ;-)]

A couple of months back they were bought out by a large US firm,
immediately pulled their net connection, and had a sufficient capital
injection to take on lots of new programmers and move to larger
premises.  Draw your own conclusions :-)

Anyway, their system of EPLDs (Electronically Programmable Logic
Devices) are like gate arrays, except the network connections between
cells are downloaded at runtime.  Their board plugs into a PC, and
effectively makes it a custom computer, ideal for cracking cyphers
where the hardware implementation can be much much faster than
a software one; or it can be used to add what are effectively new
instructions to a CPU that doesn't have the necessary ops.

I'm still not exactly sure what the difference between Algotronix's
EPLDs, and Xylinx's FPGAs is, but they definitely push them as being
something vastly superior to Xylinx's FPGAs...  I quote "Existing chips,
like those of Xylinx, are designed for relatively small glue applications.
As a result, it's not easy to split an application over more than one
chip."  I think the explanation following this is saying that the
big point is that these are programmable in software and can be
made transparent to an application, whereas using FPLGs involves
physical hardware effort rather than something you ask your compiler
to do for you.

Anyway, there's a good write-up of it in Byte, Sept 1991, in the
International Feature section. (Algotronix are here in Edinburgh,
Scotland)

G
