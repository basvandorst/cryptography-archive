Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Newsgroups: sci.crypt
Subject: Re: Advisability of using standard crypto components
Date: 12 Mar 1994 23:37:55 GMT
Organization: University of Maryland, Baltimore County
Lines: 54
Distribution: World
Message-ID: <2ltjoj$dtn@news.umbc.edu>
References: <2lbvd3$1bg@indial1.io.com> <2lntsg$bs@news.umbc.edu> <rlglendeCMH98F.Au6@netcom.com>
NNTP-Posting-Host: umbc7.umbc.edu
X-Newsreader: TIN [version 1.2 PL2]

Robert Lewis Glendenning (rlglende@netcom.com) wrote:
: In article <2lntsg$bs@news.umbc.edu> olson@umbc.edu 
    (Bryan G. Olson; CMSC (G)) writes:
: >
: >My conclusion is that PEM 
I meant to say Penknife, not PEM
: >                       ...is not a serious commercial design.  I
: >would urge people who want to implement cryptographic systems to
: >work in the modern world of components and standards.  There's a
: >lot more benefit to be gained by using available modules to
: >implement PEM within a popular news reader than by building a
: >monolith like Penknife.
: >
: I disagree with the idea that we *should* use standards, based
: upon the fact that standards make attacking cyphers easier.
: If the entire world uses one standard, now matter how strong,
: the cryptoanalysts in the opposition can concentrate their
: attack on the single cypher (in the extreme of standardization).
: All examples prior to modern cyphers indicate that eventually
: they find finger-holds which allow extracting some kind of
: important information.
[...]
: I believe that a globally-secure crypto system, e.g. one which
: includes everybody on the Internet, should aim for diversity,

The other side is that there are fewer ciphers to validate, so
flaws are more likely to be discovered and reported.  I feel
safer with well-studied ciphers than with roll-your-own crypto.

Note that the argument for diversity applies only to the
cryptographic components of the system, things like ciphers,
signatures and hash functions which must resist attack by
adversaries.  An encryption system does not need custom methods
of error control and network encoding.

I agree that a system should support a variety of cryptographic
algorithms.  PEM does a much better job of this than Penknife.
PEM can easily add new ciphers, hashes and signatures, since
they're identified in the header lines and (pretty much)
independent of other components.  If you want to add a couple new
ciphers to PEM, you just have to define the header names and
implement the ciphers.  You don't have touch the network encoding
or add any error control.

: I am not paranoid. I believe that RSA, etc. are secure, today.
: However, I don't believe that any cypher will last forever...

My philosophy is different.  If someone found an efficient way to
break RSA, I would say that it never really was secure.  My hope
is that modern ciphers are not just secure because people have
not done enough analysis to break them, but because there is no
feasible way to break them.

--Bryan
