%!PS-Adobe-3.0
%%Title: (WaPf1_8\311)
%%Creator: (Microsoft Word: LaserWriter 8.0 8.0)
%%CreationDate: (11:58  Freitag, 30. September 1994)
%%For: (schunter)
%%Pages: 23
%%DocumentFonts: Times-Roman Symbol Times-Bold Times-BoldItalic Times-Italic AvantGarde-Demi Helvetica Helvetica-Bold
%%DocumentNeededFonts: Times-Roman Symbol Times-Bold Times-BoldItalic Times-Italic AvantGarde-Demi Helvetica Helvetica-Bold
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -12 -13 830 582
%ADO_ImageableArea: 0 0 818 568
%%EndComments
/md 209 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageSize A4

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
        setpagedevice
        2 dict
    dup /PageSize [595 842] put
    dup /ImagingBBox null put
    setpagedevice
%%EndFeature
}featurecleanup
(schunter)setjob
/pT[1 0 0 -1 13 830]def/mT[1 0 0 -1 13 830]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Symbol
%%IncludeFont: Times-Bold
%%IncludeFont: Times-BoldItalic
%%IncludeFont: Times-Italic
%%IncludeFont: AvantGarde-Demi
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Bold
/f0_1/Times-Roman :mre
/f0_18 f0_1 18 scf
/f0_14 f0_1 14 scf
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f1_1/Symbol :bsr
240/apple pd
:esr /f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f3_1/Times-Bold :mre
/f3_24 f3_1 24 scf
/f3_18 f3_1 18 scf
/f3_14 f3_1 14 scf
/f3_12 f3_1 12 scf
/f3_10 f3_1 10 scf
/f4_1 f1_1 def
/f4_18 f4_1 18 scf
/f4_14 f4_1 14 scf
/f4_12 f4_1 12 scf
/f4_10 f4_1 10 scf
/f6_1/Times-BoldItalic :mre
/f6_24 f6_1 24 scf
/f8_1/Times-Italic :mre
/f8_12 f8_1 12 scf
/f8_10 f8_1 10 scf
/f9_1 f1_1 :mi
/f9_12 f9_1 12 scf
/f9_10 f9_1 10 scf
/f10_1 f0_1 :ff :ms :ff def
/f10_12 f10_1 12 scf
/f11_1 f1_1 :ff :ms :ff def
/f11_12 f11_1 12 scf
/f12_1/AvantGarde-Book :mre
/f12_10 f12_1 10 scf
/f14_1/AvantGarde-Demi :mre
/f14_14 f14_1 14 scf
/f15_1/Helvetica :mre
/f15_10 f15_1 10 scf
/f16_1/Helvetica-Bold :mre
/f16_14 f16_1 14 scf
/f16_10 f16_1 10 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(schunter; page: 1 of 23)setjob
%%EndPageSetup
gS 0 0 568 818 rC
29 32 :M
f0_10 sf
-.047(Abstract appeared in: Proceedings of EUROCRYPT'89, LNCS, Springer-Verlag Heidelberg)A
82 62 :M
f3_24 sf
-.489(The Dining Cryptographers in the Disco:)A
31 89 :M
f6_24 sf
-.103(Unconditional Sender and Recipient Untraceability)A
261 113 :M
.105(with)A
93 137 :M
.25 .025(Computationally Secure Serviceability)J
183 170 :M
f0_14 sf
.119 .012(Michael Waidner, Birgit Pfitzmann)J
178 185 :M
.217 .022(Universit\212t Karlsruhe, Postfach 6980)J
181 200 :M
.225 .022(D-7500 Karlsruhe 1, F. R. Germany)J
252 235 :M
f3_18 sf
-.851(Abstract)A
29 260 :M
f0_12 sf
.225 .022(In Journal of Cryptology 1/1 \(1988\) 65-75 \(= [Chau_88]\), David Chaum describes a beautiful technique,)J
29 275 :M
.301 .03(the )J
f3_12 sf
.149(DC-net)A
f0_12 sf
.481 .048(, which should allow participants to send and receive messages anonymously in an arbitrary)J
29 290 :M
-.089(network. The untraceability of the senders is proved to be unconditional, but that of the recipients implicitly)A
29 305 :M
.941 .094(assumes a )J
f8_12 sf
.257(reliable)A
f0_12 sf
1.024 .102( broadcast network. This assumption is unrealistic in some networks, but it can be)J
29 320 :M
1.007 .101(removed completely by using the fail-stop key generation schemes by Waidner \(these proceedings, =)J
29 335 :M
.327 .033([Waid_89]\). In both cases, however, each participant can untraceably and permanently disrupt the entire)J
29 350 :M
-.053(DC-net.)A
46 365 :M
-.21(We present a protocol which guarantees )A
f3_12 sf
-.218(unconditional untraceability)A
f0_12 sf
-.2(, the original goal of the DC-net, on)A
29 380 :M
.824 .082(the )J
f3_12 sf
2.47 .247(inseparability assumption)J
f0_12 sf
1.193 .119( \(i.e. the attacker must be unable to prevent honest participants from)J
29 395 :M
1.879 .188(communicating, which is considerably less than reliable broadcast\), and )J
f3_12 sf
3.355 .335(computationally secure)J
29 410 :M
-.164(serviceability)A
f0_12 sf
-.167(: Computationally restricted disrupters can be identified and removed from the DC-net.)A
46 425 :M
.143 .014(On the one hand, our solution is based on the lovely idea by David Chaum [Chau_88 \244 2.5] of setting)J
29 440 :M
.233 .023(traps for disrupters. He suggests a scheme to guarantee unconditional untraceability and computationally)J
29 455 :M
-.014(secure serviceability, too, but on the reliable broadcast assumption. The same scheme seems to be used by)A
29 470 :M
.158 .016(Bos and den Boer \(these proceedings, = [BoBo_89]\). We show that this scheme needs some changes and)J
29 485 :M
-.088(refinements before being secure, even on the reliable broadcast assumption.)A
46 500 :M
1.08 .108(On the other hand, our solution is based on the idea of )J
f3_12 sf
1.62 .162(digital signatures whose forgery by an)J
29 515 :M
-.039(unexpectedly powerful attacker is provable)A
f0_12 sf
-.037(, which might be of independent interest. We propose such a)A
29 530 :M
-.091(\(one-time\) signature scheme based on claw-free permutation pairs; the forgery of signatures is equivalent to)A
29 545 :M
.316 .032(finding claws, thus in a special case to the factoring problem. In particular, with such signatures)J
f3_12 sf
.047 .005( )J
f0_12 sf
.392 .039(we can,)J
29 560 :M
.169 .017(for the first time, realize )J
f3_12 sf
.351 .035(fail-stop Byzantine Agreement)J
f0_12 sf
.131 .013(, and also )J
f3_12 sf
.363 .036(adaptive Byzantine Agreement)J
f0_12 sf
.152 .015(, i.e.)J
29 575 :M
1.139 .114(Byzantine Agreement which can only be disrupted by an attacker who controls at least a third of all)J
29 590 :M
-.073(participants )A
f8_12 sf
-.096(and)A
f0_12 sf
-.081( who can forge signatures.)A
46 605 :M
.681 .068(We also sketch applications of these signatures to a payment system, solving disputes about shared)J
29 620 :M
-.011(secrets, and signatures which cannot be shown round.)A
170 655 :M
f14_14 sf
.209 .021(Some younger cryptographers \311)J
57 677 :M
f12_10 sf
.363 .036(are spending the evening in a disco. They are feeling quite relaxed and decide to tell each)J
57 689 :M
.443 .044(other who they think are the most fascinating dancers and the best cryptographers among)J
57 701 :M
2.446 .245(them. However, they haven't lost all inhibitions yet and decide to say their opinions)J
57 713 :M
.688 .069(anonymously, remembering that their three bosses once invented a nice protocol for such)J
57 725 :M
.292 .029(purposes in a three-star restaurant [Chau_88].)J
74 737 :M
2.67 .267(They have some difficulties: The music is loud, and the darkness only broken by)J
57 749 :M
.77 .077(flashlights, hence their only way of communicating is to scream into each other's ears. But)J
57 761 :M
.958 .096(the admission to the disco was expensive, so they don't want to leave it for a more quiet)J
57 773 :M
.224 .022(conversation. They also fear that some of them, afraid that nobody will mention them, might)J
57 785 :M
.693 .069(disrupt the conversation. Luckily, their bosses also mentioned ideas of how disrupters could)J
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(schunter; page: 2 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
288 44 :M
f0_10 sf
.144 .014(- 2 -)J
70 65 :M
f12_10 sf
.456 .046(be excluded from the dinner-table.)J
87 77 :M
.333 .033(Now one cryptographer, who thought he was at least a good dancer and therefore did)J
70 89 :M
.421 .042(not disrupt the conversation, is excluded. He is so indignant that he leaves the disco and, in)J
70 101 :M
2.116 .212(the sudden silence outside, notices that the noise may have been the reason for his)J
70 113 :M
.886 .089(humiliation. Therefore, he invents a protocol which allows him to simulate the dinner-table)J
70 125 :M
.87 .087(broadcast in the disco, which will protect him from such experiences in the future, even if)J
70 137 :M
.383 .038(cryptography is wrong and any number of his colleagues are cheaters.)J
42 177 :M
f3_18 sf
(1)S
110 177 :M
-.817(Introduction)A
42 205 :M
f3_14 sf
.25(1.1)A
110 205 :M
-.424(Unconditional sender untraceability)A
42 228 :M
f0_12 sf
-.005(In [Chau_88], David Chaum describes a beautiful technique, the )A
f3_12 sf
(DC-net)S
f0_12 sf
-.005(, which should allow participants)A
42 243 :M
1.288 .129(to send and receive messages anonymously in an arbitrary network. \(This is the case of a three-star)J
42 258 :M
.897 .09(restaurant without disrupters.\) In the following, we use the same terms and notations as introduced in)J
42 273 :M
([Waid_89].)S
59 288 :M
.395 .04(The basic technique for sender untraceability is )J
f3_12 sf
.732 .073(superposed sending)J
f0_12 sf
.372 .037(, which realizes an)J
f3_12 sf
.056 .006( )J
f0_12 sf
.132(anonymous,)A
42 303 :M
.895 .089(additive multi-access channel: For each sending step, called a )J
f3_12 sf
.287(round)A
f0_12 sf
.526 .053(, each )J
f3_12 sf
.239(participant)A
f0_12 sf
.369 .037( P)J
f0_10 sf
0 3 rm
.127(i)A
0 -3 rm
f0_12 sf
.616 .062(, i = 1,\311,n,)J
42 318 :M
.121 .012(chooses a message character from an )J
f3_12 sf
.036(alphabet)A
f0_12 sf
.112 .011( \(a finite abelian group F\). Each pair of participants shares)J
42 333 :M
.08 .008(one secret )J
f3_12 sf
.029(key)A
f0_12 sf
.073 .007( \(from F, too\), which is used with sign "+" by one of them, with sign "-" by the other. Each)J
42 348 :M
.906 .091(participant adds his message and all his keys with the appropriate signs. The result is his )J
f3_12 sf
.303(output)A
f0_12 sf
.815 .082(. All)J
42 363 :M
(outputs are added, and the )S
f3_12 sf
(global sum)S
f0_12 sf
-.001( should be broadcasted to each participant. Since each key has been)A
42 378 :M
1.159 .116(both added and subtracted exactly once, the global sum is just the sum of all message characters. In)J
42 393 :M
-.057(particular, if only one of these is )A
cF f1_12 sf
-.057(\271)A
sf
-.057(0, the global sum is this character.)A
59 408 :M
1.202 .12(The untraceability of the senders of messages is proved to be unconditional [Cha3_85, Chau_88,)J
42 423 :M
-.008(Pfit_89, Waid_89], i.e. the )A
f3_12 sf
-.009(attacker)A
f0_12 sf
-.008( may be computationally unlimited, able to eavesdrop communication)A
42 438 :M
-.038(between any two of the participants, and control an arbitrary subset A of the set of participants P \(although)A
42 453 :M
.232 .023(at least two honest participants must exist if untraceability is to make sense\). However, for recipients the)J
42 468 :M
-.079(proof implicitly assumes a )A
f8_12 sf
-.077(reliable)A
f0_12 sf
-.081( broadcast network. This assumption is unrealistic in some networks, but)A
42 483 :M
-.074(it can be removed completely by using the fail-stop key generation schemes of [Waid_89]; the resulting net)A
42 498 :M
-.176(is called )A
f3_12 sf
-.357(DC)A
f3_10 sf
0 -4 rm
-.235(+)A
0 4 rm
f3_12 sf
-.206(-net)A
f0_12 sf
(.)S
59 513 :M
1.256 .126(Superposed sending also works if not all pairs of participants share a key. Those who do can be)J
42 528 :M
-.154(specified by a graph, called )A
f3_12 sf
-.19(key graph)A
f0_12 sf
(.)S
59 543 :M
1.37 .137(To use the multi-access channel which superposed sending offers, it is necessary to regulate the)J
42 558 :M
.299 .03(participants' access to the channel using an appropriate, i.e. efficient and anonymity preserving protocol.)J
42 573 :M
-.053(Such a regulation is particularly necessary if one wants to guarantee serviceability, because the easiest way)A
42 588 :M
.554 .055(of disturbing the DC- or DC)J
f0_10 sf
0 -4 rm
.177(+)A
0 4 rm
f0_12 sf
.61 .061(-net is permanent sending. Some protocols of this kind were suggested in)J
42 603 :M
.065 .006([Cha3_85, BoBo_89]; for an in depth discussion of possible protocols cf. [Pfit_89 \244 3.1.2].)J
59 618 :M
.11 .011(All our schemes to guarantee serviceability assume that a )J
f3_12 sf
.209 .021(reservation technique)J
f0_12 sf
.081 .008( is used as the multi-)J
42 633 :M
-.103(access protocol: A fixed number c of characters is combined into a )A
f3_12 sf
-.128(message)A
f0_12 sf
-.106(. Each message is transmitted in)A
42 648 :M
.79 .079(c consecutive rounds, called a )J
f3_12 sf
.196(slot)A
f0_12 sf
.756 .076(. A number of slots for real messages are preceded by a reservation)J
42 663 :M
.05 .005(frame, which is used to reserve them for specific participants. The most important reservation techniques,)J
42 678 :M
.211 .021(namely reservation map techniques and two techniques using superposed receiving, are also described in)J
42 693 :M
([Waid_89].)S
42 725 :M
f3_14 sf
.25(1.2)A
110 725 :M
-.58(Attacks and faults)A
42 748 :M
f0_12 sf
.151 .015(In both the DC- and the DC)J
f0_10 sf
0 -4 rm
.055(+)A
0 4 rm
f0_12 sf
.216 .022(-net, however, each participant can untraceably and permanently disrupt the)J
42 763 :M
.091 .009(entire net, e.g., by sending in other participants' slots.)J
59 778 :M
-.097(Although we will confine ourselves to intentional attacks, it should be noted that the same effects can be)A
42 793 :M
.156 .016(caused by physical )J
f3_12 sf
.039(faults)A
f0_12 sf
.147 .015(. Therefore, on the one hand, in practice a participant identified as an "attacker")J
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(schunter; page: 3 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
288 44 :M
f0_10 sf
.144 .014(- 3 -)J
42 68 :M
f0_12 sf
.502 .05(should not be removed from the net at once, as in the following protocols, but error recovery should be)J
42 83 :M
.589 .059(tried, and in every case he should at least have a second chance. On the other hand, although measures)J
42 98 :M
-.105(against active attacks also help against faults, most faults should be dealt with more efficiently, especially in)A
42 113 :M
-.007(layers "under" the DC-net \(cf. [Pfi1_85, WaPf_89]\).)A
42 145 :M
f3_14 sf
.25(1.3)A
110 145 :M
-.218(Overview)A
42 168 :M
f0_12 sf
.193 .019(In [Chau_88 \244 2.5], the problem of attacks is already discussed, and a scheme for solving it is suggested,)J
42 183 :M
1.372 .137(which should guarantee untraceability on the reliable broadcast assumption, and serviceability if, in)J
42 198 :M
.059 .006(addition, the attacker is computationally restricted. The same scheme seems to be used in [BoBo_89], but)J
42 213 :M
-.096(with a more efficient reservation technique. \(Note that the assumed attacker on serviceability is weaker than)A
42 228 :M
-.023(the attacker on untraceability, i.e. attackers are conceivable who could disrupt superposed sending without)A
42 243 :M
-.089(being able to trace messages\).)A
59 258 :M
-.015(In Chapter 2 we briefly review this scheme. We then show that it needs some changes and refinements)A
42 273 :M
-.027(before being secure \(even on the reliable broadcast assumption\). We discuss some of these and propose an)A
42 288 :M
-.026(improved protocol. It guarantees \(as the original protocol ought to\) untraceability on the reliable broadcast)A
42 303 :M
.386 .039(assumption, and serviceability if, in addition, the attacker is computationally restricted. In an alternative)J
42 318 :M
-.072(version, both untraceability and serviceability are guaranteed if the reliable broadcast assumption holds and)A
42 333 :M
-.092(the attacker consists of less than one third of the participants.)A
42 354 :M
.13 .013(In Chapter 3 we remove the reliable broadcast assumption in different ways, since the goal of the DC-net)J
42 369 :M
-.057(was unconditional untraceability. \(That is, whereas Chapter 2 solved the problem of disrupters in the three-)A
42 384 :M
-.054(star restaurant, the scene of Chapter 3 is the disco.\))A
59 399 :M
1.869 .187(In 3.1 we briefly show that if reliable broadcast is implemented by Byzantine Agreement, the)J
42 414 :M
-.052(appropriate protocol in Chapter 2 guarantees both untraceability and serviceability on the same assumption)A
42 429 :M
-.101(as the agreement.)A
59 444 :M
-.043(In 3.2 we introduce )A
f3_12 sf
-.048(fail-stop Byzantine Agreement)A
f0_12 sf
-.046(, i.e. computationally secure Byzantine Agreement)A
42 459 :M
-.001(with the additional property that, as soon as an unexpectedly powerful attacker forges signatures, all other)A
42 474 :M
.836 .084(participants will recognize this. By using it to implement reliable broadcast, the protocol in Chapter 2)J
42 489 :M
-.199(guarantees)A
f3_12 sf
-.2( unconditional untraceability on the inseparability assumption)A
f0_12 sf
-.171(, i.e. untraceability if the attacker)A
42 504 :M
-.087(cannot prevent the honest participants from communicating, and serviceability if, in addition, the attacker is)A
42 519 :M
-.139(computationally restricted.)A
42 540 :M
-.02(In Chapter 4 we sketch a solution based on a somewhat different scheme. It guarantees both untraceability)A
42 555 :M
-.106(and serviceability if the reliable broadcast assumption and 2 \245 |A| +1 < n hold.)A
42 576 :M
-.065(Our protocol for fail-stop Byzantine Agreement is based on )A
f3_12 sf
-.067(digital signatures whose forgery is provable)A
f0_12 sf
(.)S
42 591 :M
1.023 .102(We propose such a \(one-time\) signature scheme based on claw-free permutation pairs; the forgery of)J
42 606 :M
-.087(signatures is equivalent to finding claws, thus in a special case to the factoring problem.)A
59 621 :M
.191 .019(Such signatures might be of independent interest. They could be used in cases where it is desirable to)J
42 636 :M
.414 .041(shift the risk that the signature scheme is broken from the signers, who bear it in current applications of)J
42 651 :M
-.029(usual signature schemes, to the recipients of the signatures or a central authority who is responsible for the)A
42 666 :M
.009 .001(use of the scheme. In particular, with such signatures)J
f3_12 sf
( )S
f0_12 sf
(we can realize )S
f3_12 sf
.015 .001(adaptive Byzantine Agreement)J
f0_12 sf
(, i.e.)S
42 681 :M
1.139 .114(Byzantine Agreement which can only be disrupted by an attacker who controls at least a third of all)J
42 696 :M
.196 .02(participants )J
f8_12 sf
.046(and)A
f0_12 sf
.142 .014( who can forge signatures. This will briefly be described in 5.1. Also, fail-stop Byzantine)J
42 711 :M
-.127(Agreement can be used to implement fail-stop broadcast.)A
59 726 :M
-.008(Other possible applications are payment systems, solving disputes about shared secrets, and signatures)A
42 741 :M
.189 .019(which cannot be shown round \(5.2 - 5.4\).)J
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(schunter; page: 4 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
288 44 :M
f0_10 sf
.144 .014(- 4 -)J
42 73 :M
f3_18 sf
(2)S
110 73 :M
-.45(A protocol based on the reliable broadcast assumption)A
42 99 :M
f0_12 sf
.954 .095(It cannot be prevented that a dishonest participant P)J
f0_10 sf
0 3 rm
.142(i)A
0 -3 rm
f0_12 sf
.932 .093( disrupts the DC-net by choosing his outputs not)J
42 114 :M
.311 .031(according to the rules. Thus one can only try to discover and punish attackers, finally by removing them)J
42 129 :M
.213 .021(from the DC-net. In contrast to faults, attackers cannot be localized in a special localization phase after a)J
42 144 :M
.233 .023(disturbance has been detected, because a clever attacker would certainly not disturb during such a phase.)J
42 159 :M
.078 .008(Also, localization must not take place for a disturbed slot if someone else might legitimately have tried to)J
42 174 :M
-.093(send a message in it, because that could lead to this message being traced.)A
59 189 :M
.636 .064(Therefore, in [Chau_88 \244 2.5] a protocol for laying ")J
f3_12 sf
.192(traps)A
f0_12 sf
.793 .079(", i.e. meaningless messages whose only)J
42 204 :M
.917 .092(purpose is to be disturbed by an attacker, and prosecuting attackers who are caught in them is briefly)J
42 219 :M
1.081 .108(suggested. The protocol \(like the original DC-net\) depends on the assumption of a reliable broadcast)J
42 234 :M
-.016(network. It is briefly repeated in 2.1.)A
59 249 :M
.274 .027(The idea of traps forms the basis of all following protocols. Nevertheless, the protocol as sketched in)J
42 264 :M
.462 .046([Chau_88 \244 2.5] will be shown to be insecure in 2.2: even in refined versions, by a kamikaze attack the)J
42 279 :M
.019 .002(sender of a randomly selected message can always be identified. In 2.3, the protocol is improved in a way)J
42 294 :M
.863 .086(which preserves untraceability on the reliable broadcast assumption. For some protocol steps, we also)J
42 309 :M
.557 .056(present refinements which would be needed for the original protocol, too. Another conceivable variant,)J
42 324 :M
.004 0(based on a suggestion by Chaum, is briefly discussed in 2.4.)J
42 345 :M
-.07(Throughout this chapter, we assume the existence of a )A
f3_12 sf
-.077(reliable broadcast network)A
f0_12 sf
-.066(, i.e. the attacker cannot)A
42 360 :M
.231 .023(manipulate the consistency of broadcast. \(This is the case of the three-star restaurant\). Thus the achieved)J
42 375 :M
1.163 .116(untraceability is not really unconditional. Since the original DC-net guarantees untraceability on this)J
42 390 :M
.401 .04(assumption, there is no need for fail-stop key generation here \(cf. 1.1, [Waid_89]\). We also assume that)J
42 405 :M
-.079(the network allows each participant to determine the origin of each published message unambiguously. The)A
42 420 :M
-.011(term )A
f8_12 sf
("P)S
f8_10 sf
0 3 rm
(i)S
0 -3 rm
f8_12 sf
-.011( publishes message M" )A
f0_12 sf
-.011(means that P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.01( sends M to all other participants using the reliable broadcast)A
42 435 :M
.098(network.)A
59 450 :M
-.052(How realistic these assumptions are, or can be made, will be discussed in 3.1. As far as serviceability is)A
42 465 :M
-.123(concerned, the attacker is assumed to be computationally limited.)A
42 486 :M
1.365 .137(It is important to note that independent of any assumption on possible attacks on serviceability, for)J
42 501 :M
-.087(untraceability the attacker is only restricted by the assumption of reliable broadcast. In a certain sense, there)A
42 516 :M
-.232(are )A
f3_12 sf
-.266(two different attackers)A
f0_12 sf
-.265( to be considered simultaneously!)A
42 548 :M
f3_14 sf
.25(2.1)A
110 548 :M
-.357(The original trap protocol)A
42 571 :M
f0_12 sf
-.078(The original protocol [Chau_88] assumes that the reservation map techique with group GF\(2\) is used, but it)A
42 586 :M
.696 .07(can also work with other reservation techniques \(cf. 1.1, [BoBo_89]\). Each participant P)J
f0_10 sf
0 3 rm
.095(i)A
0 -3 rm
f0_12 sf
.682 .068( must reserve)J
42 601 :M
-.078(exactly one slot in each reservation phase. Before each reservation phase he decides whether to use this slot)A
42 616 :M
1.077 .108(to send a real message or to send a trap. If he has decided to send a trap and chosen index x for the)J
42 631 :M
1.118 .112(reservation, he announces this by publishing an encrypted version of the message )J
f8_12 sf
.842 .084("I will use the slot)J
42 646 :M
-.065(reserved by index x to send a trap y")A
f0_12 sf
-.065( . This message will be called "trap proof" in the following.)A
59 661 :M
1.942 .194(Each participant commits to his output for slot s before publishing it. This prevents attacking)J
42 676 :M
-.062(participants from choosing their outputs depending on other participants' outputs.)A
42 697 :M
.015 .001(If the trap set by P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.019 .002( is disturbed, P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.021 .002( publishes the trap proof in clear, together with the encryption key used)J
42 712 :M
-.105(\(and for probabilistic encryption the coin tosses used for encryption\). Now, the attacker is )A
f3_12 sf
-.126(prosecuted)A
f0_12 sf
(:)S
59 727 :M
.303 .03(Each honest participant P)J
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
.28 .028( publishes his message characters M)J
f0_10 sf
0 3 rm
(j)S
0 -3 rm
0 -4 rm
(t)S
0 4 rm
f0_12 sf
.179 .018( and all keys K)J
f0_10 sf
0 3 rm
.053(jk)A
0 -3 rm
0 -4 rm
(t)S
0 4 rm
f0_12 sf
.189 .019( used for rounds t of)J
42 742 :M
.407 .041(the slot s)J
f0_10 sf
0 3 rm
.143(x)A
0 -3 rm
f0_12 sf
.517 .052( which was reserved by index x. The sums can be compared with the publicly known outputs)J
42 757 :M
(O)S
f0_10 sf
0 3 rm
(j)S
0 -3 rm
0 -4 rm
(t)S
0 4 rm
f0_12 sf
.051 .005(. Hence at least one attacking participant P)J
f0_10 sf
0 3 rm
(a)S
0 -3 rm
f0_12 sf
.048 .005( \(or an inconsistent key pair\) can be detected: Either P)J
f0_10 sf
0 3 rm
(a)S
0 -3 rm
f0_12 sf
.042 .004( has)J
42 772 :M
-.064(correctly published the message character M)A
f0_10 sf
0 3 rm
-.057(a)A
0 -3 rm
0 -4 rm
(t)S
0 4 rm
f0_12 sf
-.062( )A
cF f1_12 sf
-.062(\271)A
sf
-.062( 0 he really used, although he was not allowed to, or he has)A
42 787 :M
-.094(modified at least one key K)A
f0_10 sf
0 3 rm
-.069(aj)A
0 -3 rm
0 -4 rm
-.053(t)A
0 4 rm
f0_12 sf
-.092( which he claims to share with an honest participant P)A
f0_10 sf
0 3 rm
-.053(j)A
0 -3 rm
f0_12 sf
-.095(, which will be detected)A
42 802 :M
.49 .049(from K)J
f0_10 sf
0 3 rm
.081(aj)A
0 -3 rm
0 -4 rm
.062(t)A
0 4 rm
f0_12 sf
.199 .02( )J
cF f1_12 sf
.02(\271)A
sf
.199 .02( K)J
f0_10 sf
0 3 rm
.081(ja)A
0 -3 rm
0 -4 rm
.062(t)A
0 4 rm
f0_12 sf
(.)S
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(schunter; page: 5 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
288 44 :M
f0_10 sf
.144 .014(- 5 -)J
59 68 :M
f0_12 sf
.415 .041(This procedure of publishing and comparing the secrets of a round t will be called ")J
f3_12 sf
.689 .069(investigation )J
f0_12 sf
.242(of)A
42 83 :M
-.081(round t". Disturbances during the reservation phase can be investigated in the same way.)A
59 98 :M
.589 .059(If a notoriously disputed key pair is found, this key pair will be eliminated from the key graph, and)J
42 113 :M
-.13(participants notorious for attacking will be eliminated from the DC-net. The latter will finally result in a DC-)A
42 128 :M
.477 .048(net with a partitioned key graph: one partition of the key graph consists of all attacking, the other of all)J
42 143 :M
-.14(attacked participants.)A
42 175 :M
f3_14 sf
.25(2.2)A
110 175 :M
-.713(An attack)A
42 198 :M
f0_12 sf
-.08(Unfortunately the trap protocol has a serious )A
f8_12 sf
-.096(weakness)A
f0_12 sf
-.083(: Even a computationally limited attacker can forge a)A
42 213 :M
-.069(trap proof for an arbitrary slot not reserved by him a priori.)A
59 228 :M
.141 .014(For this, the attacker publishes the required encrypted message )J
f8_12 sf
.11 .011("I will use the slot reserved by index x)J
42 243 :M
.331 .033(to send a trap y")J
f0_12 sf
.379 .038(, but without reserving that slot, i.e. he chooses an index other than x for sending his 1.)J
42 258 :M
1.035 .104(Now he hopes that some other participant will use index x. For reservation map techniques, this will)J
42 273 :M
.027 .003(happen with probability )J
cF f1_12 sf
.003(\273)A
sf
.027 .003(1/n, if the reservation frame length is r)J
cF f1_12 sf
.003(\273)A
sf
.027 .003(n)J
f0_10 sf
0 -4 rm
(2)S
0 4 rm
f0_12 sf
.023 .002(, as proposed, and because there are n)J
42 288 :M
-.087(reservations in each frame.)A
59 303 :M
-.06(If it does not happen, the attacker gives up for this time and waits for the next reservation frame. So far,)A
42 318 :M
-.065(the attack cannot be detected. The attacker can therefore keep trying for an arbitrary period. On average, he)A
42 333 :M
-.077(will have to wait n/2 reservation frames for success. This is acceptable for him.)A
59 348 :M
1.723 .172(If indeed another participant uses index x, the attacker sends the trap message y in the slot s)J
f0_10 sf
0 3 rm
(x)S
0 -3 rm
42 363 :M
f0_12 sf
1.268 .127(corresponding to index x, as announced. Note that the attacker can read the message y* sent by the)J
42 378 :M
-.063(legitimate user of slot s)A
f0_10 sf
0 3 rm
-.071(x)A
0 -3 rm
f0_12 sf
-.067( in spite of the superposed y.)A
59 393 :M
1.118 .112(The attacker then publishes his trap proof for slot s)J
f0_10 sf
0 3 rm
.327(x)A
0 -3 rm
f0_12 sf
1.237 .124( and thus causes the deanonymization of the)J
42 408 :M
-.025(legitimate user of slot s)A
f0_10 sf
0 3 rm
(x)S
0 -3 rm
f0_12 sf
-.025(. If this legitimate user has also published a trap proof for slot s)A
f0_10 sf
0 3 rm
(x)S
0 -3 rm
f0_12 sf
-.025(, it is obvious that)A
42 423 :M
.274 .027(one of the two proof publishers was an attacker, but it cannot be distinguished which one. Otherwise, all)J
42 438 :M
.213 .021(participants publish their secret keys used for slot s)J
f0_10 sf
0 3 rm
.058(x)A
0 -3 rm
f0_12 sf
.203 .02(, and the legitimate user will be identified during the)J
42 453 :M
.92 .092(prosecution. On the one hand he has thus been traced as the sender of message y*, on the other he is)J
42 468 :M
-.071(unjustly punished as an attacker.)A
59 483 :M
-.052(The attack can be made more complicated and more dangerous for the attacker by adding some rules to)A
42 498 :M
.152 .015(the prosecution protocol, which try to unmask the attacker by the fact that he has not reserved the slot. In)J
42 513 :M
-.125(the end, the attacker loses a key each time he attacks successfully \(the attack is therefore called "kamikaze"\),)A
42 528 :M
-.045(but he can choose the messages he traces \(cf. [WaPf_89]\).)A
42 549 :M
-.049(If a reservation technique based on superposed receiving \([Pfit_89, BoBo_89], see also [Waid_89]\) is used)A
42 564 :M
.572 .057(in the same protocol, the same attack is possible in principle. Nevertheless, the situation is much better)J
42 579 :M
1.803 .18(here: The probability that an honest participant reserves the slot an attacker has chosen decreases)J
42 594 :M
.207 .021(exponentially in the length of the reservation frame, in contrast to the reservation map techniques. It also)J
42 609 :M
1.563 .156(decreases exponentially in the expected amount of computation in the technique of [BoBo_89], cf.)J
42 624 :M
.831 .083([Rab1_80]. Therefore, once it has been noticed that such an attack is possible, the probability that the)J
42 639 :M
-.139(attacker succeeds can be made arbitrarily small.)A
42 660 :M
-.079(Most of this section is described in more detail in [WaPf_89]. Additional attacks, which are only successful)A
42 675 :M
-.069(if the reservation map protocol with group GF\(2\) is used, can also be found there. They exploit the fact that)A
42 690 :M
-.074(this protocol does not enable anybody to decide deterministically whether only one participant has reserved)A
42 705 :M
.507 .051(a slot \(although this is the case as long as there is no active attack, because in the original protocol it is)J
42 720 :M
.123 .012(checked that there are exactly n reservations in each frame\). An additional attack on serviceability can be)J
42 735 :M
-.014(avoided by using another reservation technique and dropping the requirement that reservation frames with)A
42 750 :M
-.097(collisions are investigated.)A
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(schunter; page: 6 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
288 44 :M
f0_10 sf
.144 .014(- 6 -)J
42 70 :M
f3_14 sf
.25(2.3)A
110 70 :M
-.41(An improved protocol, still based on the reliable broadcast assumption)A
42 93 :M
f0_12 sf
.301 .03(The following protocol can be seen as an extension of that of [Chau_88 \244 2.5]. In  particular, the idea of)J
42 108 :M
.288 .029(laying traps is maintained, but the trap announcements are linked with the traps in a better way. We also)J
42 123 :M
.711 .071(refine several other parts of the protocol. This would be needed for the original protocol, too \(e.g., the)J
42 138 :M
-.009("palaver phase"\). We start with a very short overview, before showing some of the details. Even more can)A
42 153 :M
(be found in [WaPf_89].)S
42 174 :M
.424 .042(Assume a reservation protocol is used, and that n' of all n participants have reserved a slot successfully.)J
42 189 :M
f8_12 sf
-.071(Each)A
f0_12 sf
-.052( participant P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.054( who has reserved a slot s)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.056( sends an encrypted )A
f3_12 sf
-.072(announcement)A
f0_12 sf
-.046( in slot s)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.05(, and in slot n'+s)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
42 204 :M
f0_12 sf
-.11(he sends a )A
f3_12 sf
-.127(trap)A
f0_12 sf
-.094( or a )A
f3_12 sf
-.131(non-trap)A
f0_12 sf
-.11(, i.e. a real message, according to his announcement \(see Fig. 1\).)A
59 219 :M
.399 .04(Thus trap announcements and traps are unambiguously linked by their slot numbers, i.e. the attacker)J
42 234 :M
-.053(cannot forge a trap proof a priori for a slot which will be used by another participant. If announcements are)A
42 249 :M
.46 .046(unequivocal, i.e. if there is no message which announces both a trap and a non-trap, the attacker cannot)J
42 264 :M
-.095(misuse non-trap announcements for initiating the prosecution protocol.)A
59 279 :M
-.087(Hence the problem of the original protocol is not posed here.)A
42 300 :M
.578 .058(Call these three phases of the protocol )J
f3_12 sf
1.143 .114(reservation phase)J
f0_12 sf
.171 .017(, )J
f3_12 sf
1.313 .131(announcement phase)J
f0_12 sf
.346 .035(, and )J
f3_12 sf
1.065 .106(sending phase)J
f0_12 sf
(,)S
42 315 :M
-.081(respectively.)A
1 G
59 341 474 216 rC
62 436 15 29 rF
0 G
62.5 436.5 14 28 rS
1 G
76 436 15 29 rF
0 G
76.5 436.5 14 28 rS
1 G
90 436 16 29 rF
0 G
90.5 436.5 15 28 rS
.5 G
105 436 15 29 rF
0 G
105.5 436.5 14 28 rS
1 G
119 436 15 29 rF
0 G
119.5 436.5 14 28 rS
1 G
133 436 15 29 rF
0 G
133.5 436.5 14 28 rS
1 G
147 436 15 29 rF
0 G
147.5 436.5 14 28 rS
1 G
161 436 15 29 rF
0 G
161.5 436.5 14 28 rS
79 485 :M
f15_10 sf
1.36 .136(reservation phase)J
10 194 242 240 436 @k
204 409 -1 1 234 431 1 204 408 @a
147 409 -1 1 205 408 1 147 408 @a
-1 -1 113 437 1 1 147 408 @b
1 G
190 436 15 29 rF
0 G
190.5 436.5 14 28 rS
1 G
204 436 15 29 rF
0 G
204.5 436.5 14 28 rS
1 G
218 436 15 29 rF
0 G
218.5 436.5 14 28 rS
.5 G
232 436 15 29 rF
0 G
232.5 436.5 14 28 rS
1 G
246 436 15 29 rF
0 G
246.5 436.5 14 28 rS
1 G
260 436 16 29 rF
0 G
260.5 436.5 15 28 rS
1 G
275 436 15 29 rF
0 G
275.5 436.5 14 28 rS
1 G
289 436 15 29 rF
0 G
289.5 436.5 14 28 rS
216 485 :M
.945 .094(trap / non-trap)J
197 497 :M
2.536 .254(announcement phase)J
1 G
416 372 16 30 rF
0 G
416.5 372.5 15 29 rS
1 G
431 372 15 30 rF
0 G
431.5 372.5 14 29 rS
1 G
445 372 15 30 rF
0 G
445.5 372.5 14 29 rS
.5 G
459 372 15 30 rF
0 G
459.5 372.5 14 29 rS
1 G
473 372 15 30 rF
0 G
473.5 372.5 14 29 rS
1 G
487 372 15 30 rF
0 G
487.5 372.5 14 29 rS
1 G
501 372 16 30 rF
0 G
501.5 372.5 15 29 rS
1 G
516 372 15 30 rF
0 G
516.5 372.5 14 29 rS
440 421 :M
1.805 .18(sending phase)J
327 485 :M
2.21 .221(nonanonymous )J
331 497 :M
1.038 .104(palaver phase )J
328 509 :M
.722 .072(whether to start )J
335 521 :M
1.139 .114(the sending )J
348 533 :M
.441(phase)A
1 G
317 436 86 29 rF
0 G
317.5 436.5 85 28 rS
-1 -1 325 465 1 1 324 436 @b
-1 -1 332 465 1 1 331 436 @b
-1 -1 339 465 1 1 338 436 @b
-1 -1 346 465 1 1 345 436 @b
-1 -1 354 465 1 1 353 436 @b
-1 -1 361 465 1 1 360 436 @b
-1 -1 368 465 1 1 367 436 @b
-1 -1 375 465 1 1 374 436 @b
-1 -1 382 465 1 1 381 436 @b
-1 -1 389 465 1 1 388 436 @b
-1 -1 396 465 1 1 395 436 @b
10 194 242 467 372 @k
431 345 -1 1 461 367 1 431 344 @a
374 345 -1 1 432 344 1 374 344 @a
-1 -1 240 437 1 1 374 344 @b
414 452 -4 4 532 448 4 414 448 @a
452 527 :M
1.478 .148(complete )J
430 539 :M
.972 .097(investigation of the )J
438 551 :M
.728 .073(first two phases)J
-1 -1 424 508 1 1 423 479 @b
-1 -1 432 508 1 1 431 479 @b
-1 -1 439 508 1 1 438 479 @b
-1 -1 446 508 1 1 445 479 @b
-1 -1 502 508 1 1 501 479 @b
-1 -1 509 508 1 1 508 479 @b
-1 -1 517 508 1 1 516 479 @b
-1 -1 524 508 1 1 523 479 @b
-90 0 15 28 445 493.5 @n
90 180 14 28 459.5 493.5 @n
-90 0 14 28 487.5 493.5 @n
90 180 14 28 501.5 493.5 @n
416 480 -1 1 446 479 1 416 479 @a
416 508 -1 1 460 507 1 416 507 @a
-1 -1 417 508 1 1 416 479 @b
487 480 -1 1 524 479 1 487 479 @a
501 508 -1 1 524 507 1 501 507 @a
463 490 4 @i
463 490 3.5 @e
9 8 473.5 490 @j
8 7 473.5 490 @f
484 490 4 @i
484 490 3.5 @e
415 446 :M
f16_14 sf
.378(either)A
428 464 :M
1.003(or)A
gR
gS 13 12 568 818 rC
42 575 :M
f16_10 sf
.653 .065(Figure 1)J
127 575 :M
f15_10 sf
1.106 .111(Phases of the improved protocol.)J
42 610 :M
f0_12 sf
.706 .071(As in the original protocol, the participants' reservation and announcement behaviour is assumed to be)J
42 625 :M
.2 .02(independent of their real sending wishes, so that the first two phases may be investigated. Of course, this)J
42 640 :M
-.066(holds no longer once the sending phase is entered. Hence the reservation and announcement phases and the)A
42 655 :M
.675 .067(sending phase must be separated by a non-anonymous )J
f3_12 sf
1.037 .104(palaver phase)J
f0_12 sf
.652 .065(, where each participant who has)J
42 670 :M
.197 .02(detected a disturbance during the first two phases can prevent all others from entering the sending phase.)J
42 685 :M
-.082(Disturbances during the sending phase are only investigated if the corresponding trap proof is given.)A
42 706 :M
-.112(Note that if an attacker succeeds in having an honest participant regarded as an attacker and eliminated from)A
42 721 :M
-.074(the DC-net, this is an attack against untraceability. \(One can argue that this participant, now unable to send,)A
42 736 :M
-.067(is perfectly untraceable. But at least the remaining honest participants are less untraceable than before.\) For)A
42 751 :M
.008 .001(this kind of attack, the attacker is therefore only restricted by the reliable broadcast assumption. The same)J
42 766 :M
-.094(holds for the elimination of a key between two honest participants.)A
42 787 :M
f3_12 sf
1.046 .105(1. Outputs and output commitment:)J
f0_12 sf
.823 .082( All outputs are published using the assumed reliable broadcast)J
42 802 :M
-.027(network. In all following situations, the number of outputs needed from each participant is known a priori.)A
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(schunter; page: 7 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
288 44 :M
f0_10 sf
.144 .014(- 7 -)J
42 68 :M
f0_12 sf
-.103(We can     therefore assume that it has also been decided a priori when each participant has to publish which)A
42 83 :M
-.028(output \(synchronism has to be assumed anyway\).)A
59 98 :M
-.049(As in the original protocol, for some slots it is necessary to prevent the attacker from choosing his local)A
42 113 :M
-.082(outputs depending on other participants' local outputs, i.e. each participant has to commit to his local output)A
42 128 :M
.455(O)A
0 3 rm
.175(i)A
0 -3 rm
0 -4 rm
.175(t)A
0 4 rm
1.036 .104( for several rounds before knowing other participants' outputs for any of these rounds. Otherwise,)J
42 143 :M
.487 .049(assume that the attacker is the first one who receives all local outputs, i.e. who can compute the correct)J
42 158 :M
1.015 .101(global sum. In this case, he can disturb the reservation phase by producing collisions, and during the)J
42 173 :M
.362 .036(sending phase he can disturb all obviously sensitive messages, e.g., all messages which are addressed to)J
42 188 :M
(himself.)S
59 203 :M
1.394 .139(This output commitment can be carried out using a computationally secure commitment scheme)J
42 218 :M
-.092([BrCC_88]. Each participant publishes his commitment in a first phase. In a second phase the commitments)A
42 233 :M
-.067(are opened, and thus the outputs O)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
0 -4 rm
(t)S
0 4 rm
f0_12 sf
-.069( published. Note that an attacker who can break the output commitment)A
42 248 :M
1.54 .154(scheme in either direction endangers serviceability only. Thus there is no special need to choose a)J
42 263 :M
-.11(commitment scheme which is unconditionally secure for the prover or the verifier.)A
59 278 :M
-.101(Some efficiency improvements are possible. For example, a participant can use a single commitment for)A
42 293 :M
-.024(all outputs of one slot together. Also, instead of a real commitment scheme, one could try to use the image)A
42 308 :M
-.076(\304\(O)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
0 -4 rm
(t)S
0 4 rm
f0_12 sf
-.057(\) of the output O)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
0 -4 rm
(t)S
0 4 rm
f0_12 sf
-.061( under a one-way function \304 as commitment, as in [Chau_88], but there are one-way)A
42 323 :M
-.076(functions for which this does not guarantee serviceability [WaPf_89].)A
42 344 :M
1.861 .186(A participant who does not output anything when he has to, or whose output does not match his)J
42 359 :M
-.103(commitment, is considered as an attacker and eliminated from the DC-net. Because of the reliable broadcast)A
42 374 :M
-.085(assumption, this cannot happen to him if he is honest. Also, the other participants can decide on elimination)A
42 389 :M
-.108(locally, and all honest participants will obtain the same result.)A
42 410 :M
f3_12 sf
2.189 .219(2. Reservation phase:)J
f0_12 sf
1.358 .136( Since it must be possible to investigate the first two phases without loss of)J
42 425 :M
.834 .083(untraceability \(before entering the sending phase\), no participant should use any sensitive information)J
42 440 :M
.22 .022(during the first two phases. Therefore, the reservation behaviour must be independent of the participants')J
42 455 :M
.202 .02(real sending wishes, i.e. some participants will reserve message slots without using them, and others will)J
42 470 :M
-.058(not be allowed to send all messages they wish.)A
59 485 :M
-.077(In [Chau_88], it is suggested that each participant reserves one slot in each reservation phase. To satisfy)A
42 500 :M
.308 .031(the independency requirement completely, the ratio of traps and non-traps used by P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.242 .024( must be fixed, too.)J
42 515 :M
1.232 .123(This does not, however, guarantee complete untraceability, because if an attacker disturbs a trap, he)J
42 530 :M
-.069(identifies its sender, and can thus exclude him as a sender of the sensitive messages of the same reservation)A
42 545 :M
.787 .079(phase. If this is considered unacceptable, one should use the somewhat less flexible solution that each)J
42 560 :M
-.075(participant reserves fixed numbers of traps and of non-traps in each reservation phase.)A
42 581 :M
-.047(This recommended reservation behavior does not necessarily imply in which situations a reservation phase)A
42 596 :M
-.01(is investigated, and when a participant is considered as an attacker. However, the easiest way of fixing the)A
42 611 :M
f8_12 sf
-.134(permitted behaviour)A
f0_12 sf
-.122( is to force each participant to reserve a fixed number u of slots each time.)A
59 626 :M
.831 .083(What happens to )J
f8_12 sf
1.134 .113(reservation collisions )J
f0_12 sf
1.029 .103(must also be regulated. All known anonymous reservation)J
42 641 :M
-.031(techniques \(cf. 1.1\) are probabilistic, i.e. with each one it can happen that two \(honest\) participants reserve)A
42 656 :M
.165 .016(the same slot. Thus a collision cannot be considered as an attack. To prevent the attacker from disturbing)J
42 671 :M
.515 .051(the reservation phase by causing such collisions with honest participants, the reservation phase must be)J
42 686 :M
.35 .035(protected by )J
f8_12 sf
.631 .063(output commitment)J
f0_12 sf
.392 .039(. Except for reservation by superposed receiving with tree-like collision)J
42 701 :M
-.096(resolution, one should protect a complete reservation frame together.)A
59 716 :M
-.077(Output commitment does not prevent attackers from causing collisions among themselves. To avoid the)A
42 731 :M
1.316 .132(problem of setting a limit for the number of collisions allowed, which always means that an honest)J
42 746 :M
.121 .012(participant could be considered as an attacker and eliminated, these should not be considered as an attack)J
42 761 :M
1.431 .143(either. Since they cannot be prevented either, they must be accepted, i.e. a reservation phase is not)J
42 776 :M
-.081(investigated just because of collisions. \(Thus these attackers only harm themselves\).)A
59 791 :M
.223 .022(This enables special attacks if the reservation map protocol with group GF\(2\) is used \(similar to 2.2\).)J
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(schunter; page: 8 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
288 44 :M
f0_10 sf
.144 .014(- 8 -)J
42 68 :M
f0_12 sf
-.055(Hence, if one demands that for unconditional untraceability there may not even be a very small chance that)A
42 83 :M
-.051(an honest participant is regarded as an attacker and eliminated, this reservation protocol should not be used)A
42 98 :M
.077([WaPf_89].)A
42 119 :M
1.209 .121(Reservation frames with an )J
f8_12 sf
1.82 .182(impossible result)J
f0_12 sf
1.114 .111( \(i.e. one which could not have occurred among honest)J
42 134 :M
1.796 .18(participants\) can be investigated, but not all possible checks need to be carried out. To guarantee)J
42 149 :M
-.141(serviceability, it suffices that each participant checks:)A
59 164 :M
(\245)S
76 164 :M
-.091(for the reservation map technique with a large group: the sum of all received reservation messages is)A
76 179 :M
-.117(equal to u \245 n)A
59 194 :M
(\245)S
76 194 :M
-.075(for superposed receiving: he has received his own reservation messages)A
59 209 :M
(\245)S
76 209 :M
1.228 .123(and in the version with tree-like collision resolution additionally: initially, there is a collision)J
76 224 :M
-.063(between exactly u \245 n reservation messages \(the version of [BoBo_89] enforces this anyway\).)A
42 239 :M
.533 .053(During the palaver phase, each honest participant who has seen that one of the tests is not fulfilled will)J
42 254 :M
-.069(demand an investigation of the first two phases.)A
59 269 :M
1.046 .105(All these tests are secure for the tester, i.e. if any of them indicates a fault to the participant who)J
42 284 :M
.659 .066(performs it, the investigation will find a protocol deviation. Thus if the investigation does not find any)J
42 299 :M
-.089(incorrectness, the tester can be assumed to be an attacker.)A
42 320 :M
-.032(For each reservation technique, each participant can determine the length of each reservation phase locally)A
42 335 :M
-.038(\(normally it is even constant\). Also, each participant knows the number of successful reservations after the)A
42 350 :M
1.505 .15(reservation phase, i.e. the number of slots of the following phases. Thus if the announcements and)J
42 365 :M
.173 .017(messages are of a fixed length, the exact durations of the following announcement and sending phase are)J
42 380 :M
.365 .037(determined. \(This, or at least some other method by which each participant can locally and information-)J
42 395 :M
-.1(theoretically unambiguously determine where each announcement and each message ends, is necessary\).)A
42 416 :M
f3_12 sf
-.145(3. Announcement phase:)A
f0_12 sf
-.137( Announcements are implemented by using a bit commitment scheme [BrCC_88],)A
42 431 :M
.008 .001(i.e. a participant must commit to one of the values "trap" or "non-trap". In contrast to output commitment,)J
42 446 :M
2.242 .224(the security of the bit commitment scheme used for the announcements has impact not only on)J
42 461 :M
1.289 .129(serviceability, but also on untraceability: If an attacker can open a non-trap announcement as a trap)J
42 476 :M
-.096(announcement, he can cause the sender of an arbitrary sensitive message to be identified.)A
59 491 :M
.065 .007(Computationally secure bit commitment schemes can be divided into two classes depending on which)J
42 506 :M
1.269 .127(part of their definition is unconditionally realized. In our case, one would use a scheme where each)J
42 521 :M
.983 .098(announcement can be opened unconditionally in just one way \(this is called secure for the )J
f8_12 sf
.24(verifier)A
f0_12 sf
.558 .056( in)J
42 536 :M
2.609 .261([BrCC_88]\). Consequently, the indistinguishability of trap and non-trap announcements is only)J
42 551 :M
-.119(computationally secure.)A
59 566 :M
-.106(The use of the opposite class of schemes could be accepted in practice, because if an attacker opened the)A
42 581 :M
.008 .001(announcement for a sensitive message as a trap announcement, the real sender would be identified, but he)J
42 596 :M
-.035(could show his non-trap proof, too, so it would be clear that the scheme is broken.)A
42 617 :M
-.099(It is not necessary to protect the sending of announcements by output commitment.)A
59 632 :M
-.049(Each honest participant P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.05( whose announcement was disrupted will demand an investigation of the first)A
42 647 :M
-.05(two phases during the palaver phase. Since P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.049( has reserved the corresponding slot, he can prove his right to)A
42 662 :M
-.077(use the slot during the investigation of the reservation phase. Thus the test is secure for the tester.)A
42 683 :M
f3_12 sf
.581 .058(4. Palaver phase:)J
f0_12 sf
.488 .049( Since broadcast inconsistencies are excluded by assumption, the decision to start the)J
42 698 :M
-.04(sending phase or to investigate the first two phases poses no problem: After the announcement phase, each)A
42 713 :M
.2 .02(participant publishes a vote. If at least one participant has detected something wrong and uses his vote to)J
42 728 :M
.203 .02(demand an "investigation", the first two phases are investigated completely, and the reservations become)J
42 743 :M
-.069(invalid. Otherwise the sending phase is entered.)A
59 758 :M
.207 .021( For voting \(as for other outputs\), there can be a fixed order among the participants. This ensures that)J
42 773 :M
.889 .089(each participant has a chance to vote, and that the origin of each vote is clear, so that somebody who)J
42 788 :M
.993 .099(disrupts serviceability by wrongly declaring reservation phases as invalid can be punished. The votes)J
42 803 :M
.441 .044(should consist of only one bit each. If one wants the participant who detected a disturbance to tell more)J
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(schunter; page: 9 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
288 44 :M
f0_10 sf
.144 .014(- 9 -)J
42 68 :M
f0_12 sf
.081 .008(precisely what it was, this should be postponed to the beginning of the investigation, because otherwise it)J
42 83 :M
-.103(would unnecessarily reduce the efficiency in the faultless case.)A
42 104 :M
f3_12 sf
-.201(5. Investigation of reservation and announcement phase:)A
f0_12 sf
-.186( If any participants demand an investigation, each)A
42 119 :M
.684 .068(honest participant P)J
f0_10 sf
0 3 rm
.08(i)A
0 -3 rm
f0_12 sf
.549 .055( publishes all his message characters M)J
f0_10 sf
0 3 rm
.08(i)A
0 -3 rm
0 -4 rm
.08(t)A
0 4 rm
f0_12 sf
.436 .044( and secret keys K)J
f0_10 sf
0 3 rm
.08(ij)A
0 -3 rm
0 -4 rm
.08(t)A
0 4 rm
f0_12 sf
.362 .036( for all rounds t of the)J
42 134 :M
-.081(reservation and announcement phase. The local outputs O)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
0 -4 rm
(t)S
0 4 rm
f0_12 sf
-.084( are already known.)A
59 149 :M
-.081(Using all these values, each participant can check the behaviour of each other participant and punish the)A
42 164 :M
2.27 .227(attacker locally. Because of the reliability of the broadcast, and because the check procedure is)J
42 179 :M
-.108(deterministic, all honest participants will obtain the same results.)A
59 194 :M
-.024(First, the rules of superposed sending, and then the rules of the reservation and announcement protocol)A
42 209 :M
.399 .04(are checked for each participant, just as in the original protocol. Again, each incorrectness found can be)J
42 224 :M
-.052(used to eliminate a participant or a key from the DC-net \(cf. 2.1, [Chau_88, WaPf_89]\).)A
59 239 :M
.917 .092(If no inconsistency is found, the participant P)J
f0_10 sf
0 3 rm
.137(i)A
0 -3 rm
f0_12 sf
.929 .093( who initiated the prosecution protocol is viewed as)J
42 254 :M
-.107(attacking and eliminated from the net. This is correct, since all the tests which allow a participant to demand)A
42 269 :M
-.102(an investigation during the palaver phase are secure for the tester.)A
42 290 :M
f3_12 sf
.223 .022(6. The sending phase and investigation of traps:)J
f0_12 sf
.181 .018( All slots of the sending phase are protected by output)J
42 305 :M
.484 .048(commitment. The commitment must always be made for a complete slot in advance, not for single bits,)J
42 320 :M
-.06(because an attacker might be able to distinguish traps and sensitive messages after a certain number of bits,)A
42 335 :M
-.082(e.g., if they are addressed to himself. Hence if an attacker is unable to break the commitment scheme and to)A
42 350 :M
.558 .056(distinguish trap and non-trap announcements, and if the ratio of traps to non-traps is fixed to )J
cF f1_12 sf
.056(m)A
sf
.558 .056(, he will)J
42 365 :M
-.041(disturb traps with probability )A
cF f1_12 sf
-.041(m)A
sf
-.041(/\(1+)A
cF f1_12 sf
-.041(m)A
sf
-.041(\).)A
59 380 :M
.904 .09(Slots are only checked if the corresponding trap proof is given, i.e. published an arbitrary \(but for)J
42 395 :M
.52 .052(practical reasons limited\) period of time after the trap was sent. Each participant must have a chance to)J
42 410 :M
.403 .04(publish trap proofs, hence some of the bandwidth of the reliable broadcast channel must be reserved for)J
42 425 :M
.463 .046(him and this purpose. For example, there can be trap-palaver phases every now and then; the trap proof)J
42 440 :M
-.108(itself can be given at the beginning of the following investigation.)A
42 461 :M
-.045(If a trap proof has been published, first the rules of superposed sending are checked.)A
59 476 :M
-.067(Then one has to distinguish between the trapper and the attacker. \(It is not clear that the participant who)A
42 491 :M
-.036(published the trap proof is the trapper: Otherwise, the computationally unlimited attacker on untraceability)A
42 506 :M
.844 .084(could decrypt the trap proofs of other participants and publish them first. In this case, the real trapper)J
42 521 :M
-.123(would be regarded as an attacker and eliminated from the DC-net.\))A
59 536 :M
.313 .031(This can be done most easily if a trapper is forced to send nothing \(i.e. zeros\) in his own trap. In this)J
42 551 :M
-.029(case, any participant who sent anything else is an attacker. Although this enables an attacker to distinguish)A
42 566 :M
-.014(traps and non-traps, it does not reduce serviceability because of the output commitment. Alternatively, the)A
42 581 :M
1.974 .197(corresponding reservation can be checked, but only if this is possible without investigating other)J
42 596 :M
.883 .088(reservations, too. Thus for superposed receiving, each reservation message would have to be repeated)J
42 611 :M
-.098(alone at the end of the reservation phase, or the announcement would have to be investigated instead.)A
42 632 :M
.014 .001(Our scheme can be modified to ensure both untraceability and serviceability on the assumption 3 \245 |A| < n)J
42 647 :M
.139 .014([WaPf_89]: For this, one has to replace output commitment by simultaneous broadcast [CGMA_85], and)J
42 662 :M
.268 .027(the computationally secure commitment scheme by an information-theoretically secure one. Both can be)J
42 677 :M
-.018(done by using the techniques of [BeGW_88, ChCD1_88]. Since an attacker with 3 \245 |A| )A
cF f1_12 sf
-.018(\263)A
sf
-.018( n can open non-)A
42 692 :M
-.114(trap announcements as trap announcements, this protocol cannot guarantee unconditional untraceability.)A
42 724 :M
f3_14 sf
.25(2.4)A
110 724 :M
-.485(Alternative: Opening all trap announcements)A
42 747 :M
f0_12 sf
1.588 .159(A measure different from that in 2.3 against the attack in 2.2, suggested by David Chaum himself)J
42 762 :M
.846 .085([Chau2_89], is to open all trap announcements. This must take place after the sending phase. Now an)J
42 777 :M
-.074(attacker who announced a trap for a slot, but did not reserve it, is caught if nobody else reserved it either.)A
59 792 :M
-.105(However, there is a certain probability that an honest participant does use the slot; in this case, the attack)A
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(schunter; page: 10 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 10 -)J
42 68 :M
f0_12 sf
-.047(is successful. Thus this measure should not be used with a reservation map technique, only with some kind)A
42 83 :M
-.093(of superposed receiving, so that this probability can be made exponentially small in log\(|F|\).)A
59 98 :M
-.056(This measure would make two other changes to the original protocol \(cf. 2.1\) necessary.)A
59 113 :M
-.061(Firstly, instead of reserving exactly one slot per reservation phase, each participant must reserve a fixed)A
42 128 :M
1.726 .173(number of slots for real messages, and slots for traps in addition, preferably also a fixed number.)J
42 143 :M
-.026(Otherwise, after each sending phase, when the trap announcements are opened, it is clear that the sensitive)A
42 158 :M
.56 .056(messages of this phase were not sent by the trappers. This reduces untraceability considerably, because)J
42 173 :M
2.574 .257(there must be traps in each reservation phase. \(Otherwise, an attacker could safely disrupt the)J
42 188 :M
-.017(corresponding sending phase, because he can see the number of traps in this protocol, in contrast to that in)A
42 203 :M
.752 .075(2.3\). In a long correspondence extending over several reservation phases, it would even be possible to)J
42 218 :M
-.117(identify a sender completely.)A
59 233 :M
.665 .067(Secondly, it is now essential for unconditional untraceability that the trap announcements are made)J
42 248 :M
-.045(using a commitment scheme where each announcement can unconditionally be opened in just one way \(cf.)A
42 263 :M
-.051(2.3\), in contrast to the one proposed in [Chau_88]. Otherwise, an attacker might be able to open all his trap)A
42 278 :M
.647 .065(announcements in such a way that they announce the trap for a slot an honest participant has reserved,)J
42 293 :M
-.094(because at the time of opening he has seen the reservations.)A
59 308 :M
.454 .045(With these changes and some of the refinements presented in 2.3, this protocol is about as good and)J
42 323 :M
-.102(efficient as that in 2.3, except that there is always a very small probability that a message is traced.)A
42 363 :M
f3_18 sf
(3)S
110 363 :M
-.486(Removing the reliable broadcast assumption)A
42 389 :M
f0_12 sf
-.052(Without the reliable broadcast assumption, the trap and prosecution protocol described in Chapter 2 cannot)A
42 404 :M
-.114(be applied without giving away )A
f8_12 sf
-.118(unconditional)A
f0_12 sf
-.109( untraceability \(this is what the young cryptographers forgot\):)A
59 419 :M
.146 .015(An unlimited attacker could forge an honest participant P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.135 .013('s output. He could then use the prosecution)J
42 434 :M
1.648 .165(protocol to oust P)J
f0_10 sf
0 3 rm
.259(i)A
0 -3 rm
f0_12 sf
1.369 .137( from the key graph, or at least to eliminate a key which P)J
f0_10 sf
0 3 rm
.259(i)A
0 -3 rm
f0_12 sf
1.829 .183( shares with another)J
42 449 :M
-.067(participant, who may be honest. Even an honest court \(which can be viewed as a very slow implementation)A
42 464 :M
1.515 .152(of a perfectly reliable broadcast network\) cannot distinguish between original and forged messages)J
42 479 :M
-.1(afterwards. Hence the unconditional untraceability \(at least of the other honest participants\) would be lost.)A
42 500 :M
.79 .079(In the following, some methods are discussed to combine untraceability and serviceability without the)J
42 515 :M
-.09(reliable broadcast assumption.)A
59 530 :M
1.327 .133(In 3.1, we discuss what can be achieved by known solutions, especially if the reliable broadcast)J
42 545 :M
1.053 .105(assumption is directly justified physically or by using Byzantine Agreement protocols.)J
f10_12 sf
/$o 1 def
.154 .015( )J
f0_12 sf
1.352 .135(Naturally, the)J
42 560 :M
-.131(untraceability remains "conditional".)A
59 575 :M
.313 .031(3.2 describes a new scheme, using fail-stop broadcast, which guarantees unconditional untraceability)J
42 590 :M
-.017(on the inseparability assumption \(i.e. untraceability if the attacker cannot prevent communication between)A
42 605 :M
-.119(two honest participants\) and computationally secure serviceability.)A
42 637 :M
f3_14 sf
.25(3.1)A
110 637 :M
-.517(What can be achieved with known techniques)A
42 660 :M
f0_12 sf
-.115(First one can try to implement a reliable broadcast network physically. This can be difficult to achieve at all:)A
42 675 :M
.092 .009(Since this network is needed for every output, not only in case of dispute, an electrical broadcast medium)J
42 690 :M
1.237 .124(might be chosen. \(If messages are actively forwarded by other stations, reliable broadcast cannot be)J
42 705 :M
.435 .043(guaranteed anyway; in particular, this holds for ring- or tree-shaped networks, cf. [Waid_89]\). Also, we)J
42 720 :M
1.989 .199(cannot expect each participant to control a satellite. Thus ground radio and busses are left. Still,)J
42 735 :M
-.033(disturbances would have to be localized by physical means, and it must be ensured that these, in their turn,)A
42 750 :M
-.071(cannot be abused to disrupt the broadcast property.)A
59 765 :M
-.08(Anyway, a DC-net should not depend on physical peculiarities of the underlying network.)A
42 786 :M
-.039(One can therefore try the second usual way of realizing reliable broadcast, Byzantine Agreement protocols)A
42 801 :M
.393 .039([PeSL_80]. The basic network is always assumed to be synchronous. The attacker is restricted either by)J
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(schunter; page: 11 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 11 -)J
42 68 :M
f0_12 sf
.259 .026(3 \245 |A| < n or by some computational limitations. Which of the two possible restrictions is assumed must)J
42 83 :M
.974 .097(usually be decided a priori. \(In 5.1, we present a new protocol where this is not necessary.\) It is also)J
42 98 :M
-.055(assumed that the attacker is unable to prevent communication between honest participants. The part that he)A
42 113 :M
-.053(cannot cut off communication completely must be realized physically. The part that messages which arrive)A
42 128 :M
-.099(are correct can be realized cryptographically, if one is willing to accept that, with very small probability, the)A
42 143 :M
-.033(assumed attacker can nevertheless be successful. In this case, one can use authentication codes [GiMS_74,)A
42 158 :M
1.331 .133(Sim3_88, WeCa_81]. For a survey of lower bounds for reliable broadcast and known solutions, see)J
42 173 :M
-.085([Reis_87]. An efficient randomized protocol can be found in [FeMi_88].)A
42 194 :M
1.776 .178(In this context, one should also mention the very general techniques for multi-party computations)J
42 209 :M
1.66 .166(introduced in [GMW_87]. In principle, they can also be used to implement a sender and recipient)J
42 224 :M
-.14(untraceability scheme.)A
59 239 :M
.392 .039(Instead of a channel with collisions like that of superposed sending, one can realize a channel which)J
42 254 :M
-.058(transmits all submitted characters M)A
f0_10 sf
0 3 rm
-.06(1)A
0 -3 rm
f0_12 sf
-.069(, \311, M)A
f0_10 sf
0 3 rm
-.06(n)A
0 -3 rm
f0_12 sf
-.057( in their numerical order. This also hides the relation between)A
42 269 :M
-.076(the senders and the characters sent. The input phase of such a net \(i.e. the subprotocol all participants use to)A
42 284 :M
.559 .056(share their secrets M)J
f0_10 sf
0 3 rm
.079(i)A
0 -3 rm
f0_12 sf
.533 .053( among the others\) can be made attacker and fault tolerant by standard techniques)J
42 299 :M
1.031 .103(without loss of untraceability. The transmission \(i.e. the computation phase\) itself is fault tolerant by)J
42 314 :M
.196 .02(construction. Hence most of the reliability problems of superposed sending would not be posed in such a)J
42 329 :M
.113(net.)A
59 344 :M
-.064(But they cannot guarantee )A
f8_12 sf
-.067(unconditional)A
f0_12 sf
-.063( untraceability: Since Byzantine Agreement is a special case of)A
42 359 :M
.589 .059(distributed computation, these techniques cannot be more secure than Byzantine Agreement. Thus they)J
42 374 :M
2.061 .206(cannot be more powerful than the above protocol together with Byzantine Agreement. There are)J
42 389 :M
2.646 .265(information-theoretically secure techniques, which assume 3 \245 |A| < n [BeGW_88, ChCD1_88,)J
42 404 :M
.903 .09(Chau1_89], and computationally secure techniques, which assume 2 \245 |A| < n, and that the attacker is)J
42 419 :M
.066 .007(computationally restricted \(e.g., see [GaHY_88, GMW_87]\). A forthcoming work only has to assume the)J
42 434 :M
.772 .077(disjunction of these two assumptions [Chau1_89]. In all cases, the attacker is assumed to be unable to)J
42 449 :M
-.114(prevent honest participants from communicating.)A
42 481 :M
f3_14 sf
.25(3.2)A
110 481 :M
-.385(Serviceability in spite of unconditional untraceability on the inseparability)A
110 498 :M
-.605(assumption)A
42 521 :M
f0_12 sf
.625 .062(Before describing the new protocol which guarantees unconditional untraceability on the inseparability)J
42 536 :M
1.344 .134(assumption \(in particular with no condition on the number of attackers\) and computationally secure)J
42 551 :M
.98 .098(serviceability, we first suggest an informal definition for guaranteeing serviceability while preserving)J
42 566 :M
.296 .03(untraceability. An implementation of the DC-net, together with a protocol to remove attackers, is said to)J
42 581 :M
-.136(guarantee untraceability in spite of an attacker who is limited by a predicate )A
f3_12 sf
-.254(A)A
f3_10 sf
0 3 rm
-.138(untr)A
0 -3 rm
f0_12 sf
-.135(, and serviceability in spite)A
42 596 :M
-.114(of an attacker who is limited by a stronger predicate )A
f3_12 sf
-.212(A)A
f3_10 sf
0 3 rm
-.109(serv)A
0 -3 rm
f0_12 sf
-.117(, if the following two conditions hold:)A
59 611 :M
.329(S1)A
93 611 :M
f8_12 sf
1.515 .152(Serviceability: )J
f0_12 sf
.758 .076(If A)J
f0_10 sf
0 3 rm
.225(serv)A
0 -3 rm
f0_12 sf
.82 .082( is satisfied \(thus A)J
f0_10 sf
0 3 rm
.217(untr)A
0 -3 rm
f0_12 sf
1.012 .101(, too\), the attacker cannot prevent any honest)J
93 626 :M
.149 .015(participant from sending a message successfully within a given period of time, without at least)J
93 641 :M
-.052(losing a key from the key graph.)A
59 656 :M
.329(S2)A
93 656 :M
f8_12 sf
-.132(Preservation of untraceability:)A
f0_12 sf
-.121( If the attacker satisfies A)A
f0_10 sf
0 3 rm
-.111(untr)A
0 -3 rm
f0_12 sf
-.132(, and if due to the protocol two honest)A
93 671 :M
1.133 .113(participants lose a common key from the key graph \(or an honest participant is eliminated)J
93 686 :M
-.077(altogether\), each honest participant definitely stops superposed sending.)A
42 707 :M
-.026(For example, the protocols in 2.3 guarantee untraceability for A)A
f0_10 sf
0 3 rm
-.022(untr)A
0 -3 rm
f0_12 sf
-.027( = "reliable broadcast assumption", and)A
42 722 :M
1.812 .181(one of the protocols guarantees serviceability for A)J
f0_10 sf
0 3 rm
.374(serv)A
0 -3 rm
f0_12 sf
.802 .08( = A)J
f0_10 sf
0 3 rm
.361(untr)A
0 -3 rm
f0_12 sf
.269(\312)A
f1_12 sf
.649(\331)A
f0_12 sf
2.252 .225(\312"the attacker is computationally)J
42 737 :M
.061 .006(restricted", and the other one for A)J
f0_10 sf
0 3 rm
.015(serv)A
0 -3 rm
f0_12 sf
.031 .003( = A)J
f0_10 sf
0 3 rm
.014(untr)A
0 -3 rm
f0_12 sf
(\312)S
f1_12 sf
(\331)S
f0_12 sf
.037 .004(\3123 \245 |A| < n.)J
59 752 :M
.359 .036(Condition S2 describes a )J
f8_12 sf
.41 .041(fail-stop )J
f0_12 sf
.391 .039(property. One may therefore consider it to be unnecessarily weak,)J
42 767 :M
-.04(since, e.g., the protocol in 2.3 satisfies the stronger and more natural condition)A
59 782 :M
.118(S2)A
f0_10 sf
0 -4 rm
(*)S
0 4 rm
93 782 :M
f0_12 sf
-.076(If the attacker satisfies A)A
f0_10 sf
0 3 rm
-.069(untr)A
0 -3 rm
f0_12 sf
-.085(, two honest participants will never lose a common key from the key)A
93 797 :M
-.125(graph \(nor will an honest participant be eliminated altogether\).)A
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(schunter; page: 12 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 12 -)J
42 68 :M
f0_12 sf
.964 .096(However, this makes no real difference: If A)J
f0_10 sf
0 3 rm
.206(untr)A
0 -3 rm
f0_12 sf
.722 .072( holds, but not A)J
f0_10 sf
0 3 rm
.213(serv)A
0 -3 rm
f0_12 sf
1.092 .109(, serviceability is not guaranteed)J
42 83 :M
.276 .028(anyway, thus another reason for the honest participants to stop participating is not harmful. If both A)J
f0_10 sf
0 3 rm
.083(serv)A
0 -3 rm
42 98 :M
f0_12 sf
-.017(and A)A
f0_10 sf
0 3 rm
(untr)S
0 -3 rm
f0_12 sf
-.014( hold, S2)A
f0_10 sf
0 -4 rm
(*)S
0 4 rm
f0_12 sf
-.015( is implied by S1 and S2 anyway.)A
42 119 :M
.096 .01(In 3.2.3, we will fulfil S1 and S2 by using a new kind of Byzantine Agreement together with the protocol)J
42 134 :M
.326 .033(in 2.3. For this, in 3.2.2 we present an idea which transforms each Byzantine Agreement protocol which)J
42 149 :M
-.058(works with any kind of signatures \(all computationally secure Byzantine Agreement protocols we know do)A
42 164 :M
-.108(this\) for tolerating up to n-2 attackers into a protocol which)A
59 179 :M
(\245)S
76 179 :M
-.102(guarantees agreement provided the attacker is not more powerful than assumed, and)A
59 194 :M
(\245)S
76 194 :M
-.038(guarantees unconditionally that all honest participants stop participating, once the signature scheme)A
76 209 :M
.358 .036(is broken.)J
42 224 :M
1.884 .188(This is achieved by a new signature scheme \(cf. 3.2.1\) which, with very high probability, allows)J
42 239 :M
.558 .056(participants whose signatures are broken to prove this to all other participants in an unconditional way.)J
42 254 :M
.476 .048(Hence, soon after the first signature of an honest participant's is broken, all honest participants can stop)J
42 269 :M
-.212(their participation with the same very high probability \()A
f3_12 sf
-.244(fail-stop Byzantine Agreement)A
f0_12 sf
-.318(\).)A
59 284 :M
.934 .093(For guaranteeing the fail-stop property, it is only necessary to assume the attacker to be unable to)J
42 299 :M
.433 .043(prevent communication between honest participants. This seems to be the weakest possible assumption,)J
42 314 :M
-.302(and is called )A
f3_12 sf
-.355(inseparability assumption)A
f0_12 sf
(.)S
59 329 :M
.407 .041(Parts of the following can be found in more detail in [WaPf_89], the rest is to be fully formalized in)J
42 344 :M
.068([Pfit1_89].)A
42 376 :M
f3_14 sf
.25(3.2.1)A
110 376 :M
-.376(A signature scheme where forgery can be proved)A
42 399 :M
f0_12 sf
-.07(Before describing our signature scheme and its properties, some remarks about the principal possibilities of)A
42 414 :M
-.144(such a scheme can be made:)A
59 437 :M
(\245)S
76 437 :M
-.062(The probability of unprovable forgery can never be zero: An honest participant \(Alice\) must be able)A
76 452 :M
.229 .023(to produce at least one signature for each message, thus if a forging attacker \(Felix\) finds just this)J
76 467 :M
-.087(signature, Alice must be unable to prove that it is not hers.)A
59 490 :M
(\245)S
76 490 :M
-.033(There must be more than one possible signature for each message, i.e. more than one value must be)A
76 505 :M
-.096(acceptable to the other participants \(Bob)A
f0_10 sf
0 3 rm
-.057(i)A
0 -3 rm
f0_12 sf
-.101(\). This must hold unconditionally.)A
93 520 :M
.183 .018(This is for the same reason as the previous point: Only a signature which Alice could not have)J
76 535 :M
-.072(produced herself may enable her to prove that it is not hers; and the computationally unlimited Felix)A
76 550 :M
-.078(must be unable to distinguish them.)A
59 573 :M
(\245)S
76 573 :M
.595 .06(It is not possible to prevent a dishonest, computationally unlimited participant from denying her)J
76 588 :M
1.633 .163(signatures, i.e. "proving" that they were broken, even though this is not true. But in all our)J
76 603 :M
-.104(applications this is entirely right.)A
42 624 :M
.494 .049(Thus one is looking for a signature scheme where most forged signatures enable the supposed signer to)J
42 639 :M
1.088 .109(compute something which, on the assumption of the signature scheme, she could not have computed)J
42 654 :M
.06(before.)A
59 669 :M
.127 .013(The idea of the following scheme is to use a function g where every image has several preimages, but)J
42 684 :M
.409 .041(which is collision-free in the computational sense. Signatures consist of preimages of previously known)J
42 699 :M
.444 .044(values. Forged signatures usually lead to a collision with the correct one. A collision serves as )J
f3_12 sf
.608 .061(proof of)J
42 714 :M
-.261(forgery)A
f0_12 sf
(.)S
59 729 :M
.063 .006(To ensure that a signer cannot produce "proofs of forgery" if no forgery has occurred, she must not be)J
42 744 :M
-.073(allowed to choose the function g herself. This is especially clear if g has a trap-door, but in every case, one-)A
42 759 :M
.246 .025(way properties are only guaranteed against people who only receive the description of the function used.)J
42 774 :M
-.033(More precisely, the easiest way of convincing Bob)A
f0_10 sf
0 3 rm
(i )S
0 -3 rm
f0_12 sf
-.031(that a collision is really the result of someone breaking)A
42 789 :M
-.078(the scheme is that he has chosen g himself.)A
59 804 :M
1.43 .143(Therefore we obtain a system very similar to one-time signatures, which are an easy, but rather)J
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(schunter; page: 13 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 13 -)J
42 68 :M
f0_12 sf
.018 .002(inefficient method for signing a limited number of bits using a one-way function, attributed to Lamport in)J
42 83 :M
-.021([DiHe_76, Merk_88]. \(The one-way function in our case is g.\) Also, some of the efficiency improvements)A
42 98 :M
-.102(to one-time signatures by Merkle can be adapted so that forgery can be proved.)A
59 113 :M
.716 .072(We will first sketch a possible choice of functions g, and then describe the overall scheme in more)J
42 128 :M
.454 .045(detail. An easier, but less efficient scheme based on modular squaring as the function g can be found in)J
42 143 :M
-.034([WaPf_89]. \(The efficiency improvements to that scheme, presented there in \244 4.4.3.1.3, are incorrect.\))A
42 178 :M
f3_14 sf
.25(3.2.1.1)A
110 178 :M
-.463(Hiding functions)A
42 201 :M
f0_12 sf
.023 .002(One \(not the only\) way of obtaining g's for which the probability that a forgery leads to a proof of forgery)J
42 216 :M
-.082(is at least 1-2)A
f0_10 sf
0 -4 rm
-.065(-)A
0 4 rm
f1_10 sf
0 -4 rm
-.117(s)A
0 4 rm
f0_12 sf
-.094( for some )A
f1_12 sf
-.14(s)A
f0_12 sf
-.09( chosen a priori, is to use a family of functions with the following characteristics:)A
42 231 :M
-.082(On input 1)A
f0_10 sf
0 -4 rm
-.08(k)A
0 4 rm
f0_12 sf
-.079(, a generator G outputs two polynomial-time algorithms d, g such that)A
59 246 :M
(\245)S
76 246 :M
-.088(d defines a uniform distribution over D := d\( \))A
59 261 :M
(\245)S
76 261 :M
(for each x )S
f1_12 sf
(\316)S
f0_12 sf
( {0,1})S
f1_10 sf
0 -4 rm
(s)S
0 4 rm
f0_12 sf
-.004(, g\(x, \245 \) is a permutation of D)A
59 276 :M
(\245)S
76 276 :M
-.01(for any probabilistic polynomial-time algorithm, the probability that it finds a collision \(in {0,1})A
f1_10 sf
0 -4 rm
(s)S
0 4 rm
f1_12 sf
(\264)S
76 291 :M
f0_12 sf
-.032(D\), if g is chosen by G\(1)A
f0_10 sf
0 -4 rm
(k)S
0 4 rm
f0_12 sf
-.032(\), decreases faster than 1/p\(k\) for any polynomial p.)A
42 306 :M
-.106(We call the g's )A
f3_12 sf
-.12(hiding functions)A
f0_12 sf
-.112( \(because they can be used to hide the first argument; e.g., as a commitment)A
42 321 :M
-.049(scheme unconditionally secure for the prover\). Similar functions have been used for other purposes before,)A
42 336 :M
-.02(and Bert den Boer is said to have proposed some whose security is reducible to factoring or to discrete log)A
42 351 :M
-.04([ChFN_88]. So we will just present a construction based on any family of claw-free permutation pairs \(not)A
42 366 :M
-.038(necessarily trap-door\), not caring whether efficiency can be improved. It is very similar to the construction)A
42 381 :M
-.024(in the GMR signature scheme [GoMR_88], where claw-free pairs are defined, and to the hash functions in)A
42 396 :M
.2 .02([Damg_88]: Just use the generator for claw-free pairs of permutations, and from each pair \(f)J
f0_10 sf
0 3 rm
.052(0)A
0 -3 rm
f0_12 sf
.081 .008(, f)J
f0_10 sf
0 3 rm
.052(1)A
0 -3 rm
f0_12 sf
.233 .023(\), derive)J
42 411 :M
-.109(the function g defined by)A
190 426 :M
.3 .03(g\(x,y\) := f)J
f0_10 sf
0 3 rm
.118 .012(x )J
0 -3 rm
f0_12 sf
.231 .023(\(y\) := f)J
f0_10 sf
0 3 rm
.095(x)A
0 -3 rm
f0_9 sf
0 5 rm
.085(1)A
0 -5 rm
f0_10 sf
0 3 rm
( )S
0 -3 rm
f0_12 sf
.218 .022(\( \311 \(f)J
f0_10 sf
0 3 rm
.095(x)A
0 -3 rm
f1_9 sf
0 5 rm
.103(s)A
0 -5 rm
f0_10 sf
0 3 rm
( )S
0 -3 rm
f0_12 sf
.117(\(y\)\)\311\).)A
42 445 :M
1.253 .125(The proof that these g's are collision-free is similar to those in [GoMR_88, Damg_88]; note that no)J
42 460 :M
-.037(additional prefix-free encoding is necessary, since the length of x is fixed. In particular, by using claw-free)A
42 475 :M
.305 .03(pairs of [GoMR_88, Damg_88], one can obtain g's whose collision-freeness is equivalent to factoring or)J
42 490 :M
-.081(the discrete log.)A
42 525 :M
f3_14 sf
.25(3.2.1.2)A
110 525 :M
-.267(Efficiency improvements)A
42 548 :M
f0_12 sf
.009 .001(If the functions g were to be used as in the one-time signature scheme, to sign )J
f1_12 sf
(L)S
f0_12 sf
.009 .001( bits, Alice would have to)J
42 563 :M
.639 .064(do the following: In advance, she chooses 2\245)J
f1_12 sf
.28(L)A
f0_12 sf
.461 .046( pairs \(x)J
f1_10 sf
0 3 rm
.187(l)A
0 -3 rm
f0_10 sf
0 3 rm
.128(,b)A
0 -3 rm
f0_12 sf
.153(,y)A
f1_10 sf
0 3 rm
.187(l)A
0 -3 rm
f0_10 sf
0 3 rm
.128(,b)A
0 -3 rm
f0_12 sf
.647 .065(\) randomly, where )J
f1_12 sf
.224(l)A
f0_12 sf
.209(=1,\311,)A
f1_12 sf
.28(L)A
f0_12 sf
.634 .063(, b=0,1. She)J
42 578 :M
.806 .081(publishes the images g\(x)J
f1_10 sf
0 3 rm
.201(l)A
0 -3 rm
f0_10 sf
0 3 rm
.137(,b)A
0 -3 rm
f0_12 sf
.165(,y)A
f1_10 sf
0 3 rm
.201(l)A
0 -3 rm
f0_10 sf
0 3 rm
.137(,b)A
0 -3 rm
f0_12 sf
.517 .052(\). Later, as a signature that the value of the )J
f1_12 sf
.241(l)A
f0_12 sf
.517 .052(-th bit is b, she shows the)J
42 593 :M
.66 .066(preimage \(x)J
f1_10 sf
0 3 rm
.132(l)A
0 -3 rm
f0_10 sf
0 3 rm
.09(,b)A
0 -3 rm
f0_12 sf
.108(,y)A
f1_10 sf
0 3 rm
.132(l)A
0 -3 rm
f0_10 sf
0 3 rm
.09(,b)A
0 -3 rm
f0_12 sf
.168(\).)A
42 608 :M
1(1.)A
59 608 :M
.218 .022(The main disadvantage of this scheme is that a large number of values must be published in advance.)J
59 623 :M
1.134 .113(This can be avoided by tree authentication like that by Merkle for publishing lists of public keys)J
59 638 :M
-.066([Merk_80]: Let h be a hash function. The values to be published are used as leaves of a binary tree. The)A
59 653 :M
.128 .013(value of each inner node is h\(left_child, right_child\). Only the value of the root is published. Later, to)J
59 668 :M
-.096(authenticate one of the leaf values, all its forefathers and the other child of each one must be shown.)A
76 683 :M
-.046(Again, a collision will serve as proof of forgery.)A
42 698 :M
1(2.)A
59 698 :M
.336 .034(For 1., the depth of the tree, and thus the number of bits which can be signed, must be fixed a priori.)J
59 713 :M
.328 .033(This can be avoided by using some of these bits as roots of new trees. Depending on the application,)J
59 728 :M
-.022(this can be done in two ways.)A
76 743 :M
.991 .099(One way is to form a global tree structure like that in [Merk_88]. To distinguish the trees and)J
59 758 :M
-.046(signatures used in 1. from this global structure, we will call them mini-trees and mini-signatures for the)A
59 773 :M
.332 .033(moment. The nodes of the global tree are the roots of the mini-trees. R)J
f0_10 sf
0 3 rm
.099(2)A
0 -3 rm
f0_12 sf
.21 .021( is a child of R)J
f0_10 sf
0 3 rm
.099(1)A
0 -3 rm
f0_12 sf
.289 .029( in the global)J
59 788 :M
.747 .075(tree iff R)J
f0_10 sf
0 3 rm
.259(2)A
0 -3 rm
f0_12 sf
.917 .092( is authenticated within the mini-tree of R)J
f0_10 sf
0 3 rm
.259(1)A
0 -3 rm
f0_12 sf
.968 .097(. Each global signature consists of one mini-)J
59 803 :M
.219 .022(signature of the message with respect to one mini-tree root R, and the mini-signatures of R and all its)J
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(schunter; page: 14 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 14 -)J
59 68 :M
f0_12 sf
.93 .093(forefathers in the global tree. However, here one would choose the mini-trees much larger than in)J
59 83 :M
-.034([Merk_88], where each one only serves to sign one message and two new roots.)A
76 98 :M
.387 .039(The second is to exchange the roots completely, broadcasting the new roots using the protocol in)J
59 113 :M
1.208 .121(3.2.2. In contrast to the first way, old mini-trees need not be stored, and the length of signatures)J
59 128 :M
.239 .024(remains constant. This is particularly suitable for applications where many signatures are needed, but)J
59 143 :M
-.031(need not be stored for a long time, e.g., reliable broadcast.)A
42 158 :M
1(3.)A
59 158 :M
1.05 .105(Like in [Merk1_82] \(according to [Merk_88]\), only bits with the value 1 need to be signed if the)J
59 173 :M
-.083(messages are first encoded by a code which detects all changes of 1 into 0.)A
42 188 :M
1(4.)A
59 188 :M
.163 .016(If the messages to be signed are long, they can be hashed first, and only the result is signed bit by bit.)J
59 203 :M
-.071(Again, a collision must be accepted as proof of forgery.)A
42 218 :M
-.026(Note that the hash functions used in 1. and 4. must, of course, be collision-free in the computational sense,)A
42 233 :M
.453 .045(but that no additional information-theoretical requirement, like for the functions g, is necessary, since it)J
42 248 :M
.844 .084(does not matter if the preimages are guessed. Therefore any hash functions can be used, e.g., those in)J
42 263 :M
1.67 .167([Damg_88]. These are particularly suitable here, because they are based on the same intractability)J
42 278 :M
-.037(assumptions as the hiding functions.)A
42 310 :M
f3_14 sf
.25(3.2.1.3)A
110 310 :M
-.416(The complete scheme)A
42 333 :M
f0_12 sf
-.014(The resulting signature scheme can best be presented in protocol form. One can first construct a two-party)A
42 348 :M
.081 .008(protocol for a signer Alice and a recipient Bob [WaPf_89], and any outsider Vera can later solve disputes)J
42 363 :M
.366 .037(between them. Here we will describe the full n-party protocol, where each party wants to sign messages)J
42 378 :M
-.068(and to verify all other signatures, at once.)A
59 393 :M
-.041(Assume that a generator G for hiding functions and a generator H for hash functions have been chosen.)A
42 408 :M
.034 .003(Let k be the )J
f3_12 sf
.088 .009(security parameter for collision-freeness)J
f0_12 sf
.048 .005(, i.e. the value for which it is assumed that finding)J
42 423 :M
-.097(collisions of g or h is infeasible for the attacker. A second security parameter )A
f1_12 sf
-.153(s)A
f0_12 sf
-.083(, the )A
f3_12 sf
-.117(security parameter for)A
42 438 :M
-.323(the probability of unprovable forgery)A
f0_12 sf
-.302(, is chosen.)A
59 453 :M
.204 .02(For simplicity, we assume that each participant wants to sign a fixed number N of messages, and that)J
42 468 :M
1.531 .153(either the length of each message is fixed a priori \(this might be the case in the reliable broadcast)J
42 483 :M
.193 .019(application\), or they are first hashed to a fixed length. Let C be the encoding function used for efficiency)J
42 498 :M
-.072(improvement 3, and L the length of the messages when they are encoded using C.)A
59 513 :M
-.1(The protocol needs one step more than explained so far: Since the recipients of signatures are allowed to)A
42 528 :M
-.084(choose the functions, it must be ensured that these functions have the properties which are necessary for the)A
42 543 :M
.168 .017(signers. In particular, g\(x, \245 \) must really be a permutation of D, and d must define a uniform distribution)J
42 558 :M
.491 .049(on D. This can be shown by a zero-knowledge proof that \(d, g\) is indeed a possible output of G\(1)J
f0_10 sf
0 -4 rm
.151(k)A
0 4 rm
f0_12 sf
.428 .043(\). \(It)J
42 573 :M
-.043(must be a proof in the unconditional sense, except perhaps with an exponentially small chance of cheating,)A
42 588 :M
.104 .01(whereas the zero-knowledge need not be perfect.\) If P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.061 .006( and P)J
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
.091 .009( disagree on the outcome of this proof, each)J
42 603 :M
1.021 .102(other honest participant P)J
f0_10 sf
0 3 rm
.362(m)A
0 -3 rm
f0_12 sf
.71 .071( must be able to decide which one is lying. \(This does not mean that P)J
f0_10 sf
0 3 rm
.362(m)A
0 -3 rm
f0_12 sf
.426 .043( is)J
42 618 :M
1.347 .135(convinced by the proof if P)J
f0_10 sf
0 3 rm
.22(i)A
0 -3 rm
f0_12 sf
.914 .091( and P)J
f0_10 sf
0 3 rm
.22(j)A
0 -3 rm
f0_12 sf
1.409 .141( agree on it.\) For example, the proofs in [GoM1_86] have these)J
42 633 :M
.153 .015(properties. If the hiding functions are based on the special claw-free pairs in [GoMR_88 \244 6.3], the proof)J
42 648 :M
-.028(in [GrPe_88] for Blum integers should suffice.)A
59 663 :M
.008 .001(During the key distribution phase, we must of course assume some non-cryptographic form of reliable)J
42 678 :M
(broadcast.)S
59 693 :M
-.088(The resulting protocol, not in a fully formalized form, looks like this:)A
59 723 :M
f3_12 sf
-.484(Key distribution phase:)A
70 749 :M
f0_12 sf
([1])S
112 749 :M
.784 .078(Each participant P)J
f0_10 sf
0 3 rm
.094(i)A
0 -3 rm
f0_12 sf
.529 .053( uses G\(1)J
f0_10 sf
0 -4 rm
.169(k)A
0 4 rm
f0_12 sf
.486 .049(\) to choose d)J
f0_10 sf
0 3 rm
.094(i)A
0 -3 rm
f0_12 sf
.382 .038( and g)J
f0_10 sf
0 3 rm
.094(i)A
0 -3 rm
f0_12 sf
.525 .053(, and H\(1)J
f0_10 sf
0 -4 rm
.169(k)A
0 4 rm
f0_12 sf
.486 .049(\) to choose h)J
f0_10 sf
0 3 rm
.094(i)A
0 -3 rm
f0_12 sf
.714 .071(, and publishes)J
112 764 :M
1.198 .12(them. \(If, e.g., G and H are based on the same family of claw-free pairs, one can also)J
112 779 :M
-.066(choose just one claw-free pair and construct both g)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.067( and h)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.065( from it.\))A
70 797 :M
([2])S
112 797 :M
.895 .089(For each pair P)J
f0_10 sf
0 3 rm
.153(i)A
0 -3 rm
f0_12 sf
.538 .054(, P)J
f0_10 sf
0 3 rm
.153(j)A
0 -3 rm
f0_12 sf
.953 .095( of participants, P)J
f0_10 sf
0 3 rm
.153(i)A
0 -3 rm
f0_12 sf
.943 .094( publicly gives P)J
f0_10 sf
0 3 rm
.153(j)A
0 -3 rm
f0_12 sf
1.018 .102( a zero-knowledge proof that g)J
f0_10 sf
0 3 rm
.153(i)A
0 -3 rm
f0_12 sf
(,)S
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(schunter; page: 15 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 15 -)J
112 68 :M
f0_12 sf
.319 .032(together with d)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.23 .023(, is a correct hiding function. If P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.298 .03( does not succeed, each other participant)J
112 83 :M
(P)S
f0_10 sf
0 3 rm
(m)S
0 -3 rm
f0_12 sf
-.016( considers P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.016( as an attacker.)A
70 101 :M
([3])S
112 101 :M
-.058(For each P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.051(, participant P)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.057( does the following:)A
112 119 :M
.794 .079(For )J
f1_12 sf
.391(m)A
f0_12 sf
.727 .073( = 1,\311,N, )J
f8_12 sf
.188(l)A
f0_12 sf
.782 .078( = 1,\311,L, P)J
f0_10 sf
0 3 rm
.157(j)A
0 -3 rm
f0_12 sf
.942 .094( chooses x)J
f0_10 sf
0 -4 rm
.166(\(i,j\))A
0 4 rm
f1_10 sf
0 3 rm
.325(m)A
0 -3 rm
f0_10 sf
0 3 rm
.141(,)A
0 -3 rm
f8_10 sf
0 3 rm
.157(l)A
0 -3 rm
f0_12 sf
.154 .015( )J
f1_12 sf
.483(\316)A
f0_12 sf
1.043 .104( {0,1})J
f1_10 sf
0 -4 rm
.341(s)A
0 4 rm
f0_12 sf
.999 .1( randomly, and y)J
f0_10 sf
0 -4 rm
.166(\(i,j\))A
0 4 rm
f1_10 sf
0 3 rm
.325(m)A
0 -3 rm
f0_10 sf
0 3 rm
.141(,)A
0 -3 rm
f8_10 sf
0 3 rm
.157(l)A
0 -3 rm
f0_12 sf
.767 .077( using d)J
f0_10 sf
0 3 rm
.157(i)A
0 -3 rm
f0_12 sf
(,)S
112 134 :M
-.02(and stores them.)A
112 152 :M
.786 .079(She forms the images g)J
f0_10 sf
0 3 rm
.12(i)A
0 -3 rm
f0_12 sf
.432 .043( \(x)J
f0_10 sf
0 -4 rm
.127(\(i,j\))A
0 4 rm
f1_10 sf
0 3 rm
.249(m)A
0 -3 rm
f0_10 sf
0 3 rm
.108(,)A
0 -3 rm
f8_10 sf
0 3 rm
.12(l)A
0 -3 rm
f0_12 sf
.399 .04(, y)J
f0_10 sf
0 -4 rm
.127(\(i,j\))A
0 4 rm
f1_10 sf
0 3 rm
.249(m)A
0 -3 rm
f0_10 sf
0 3 rm
.108(,)A
0 -3 rm
f8_10 sf
0 3 rm
.12(l)A
0 -3 rm
f0_12 sf
.627 .063(\), and uses them as leaves of a binary tree T)J
f0_10 sf
0 -4 rm
.127(\(i,j\))A
0 4 rm
f0_12 sf
(.)S
112 167 :M
-.091(The value of each inner node is computed by applying h)A
f0_10 sf
0 3 rm
-.051(i)A
0 -3 rm
f0_12 sf
-.085( to its two children.)A
112 185 :M
-.08(P)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.061( makes the value R)A
f0_10 sf
0 -4 rm
-.035(\(i,j\))A
0 4 rm
f0_12 sf
-.056( of the root public.)A
59 215 :M
f3_12 sf
-.666(Main phase:)A
70 241 :M
f0_12 sf
([4])S
112 241 :M
.138 .014(Assume that as her )J
f1_12 sf
.06(m)A
f0_12 sf
.176 .018(-th signature, P)J
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
.147 .015( wants to sign a message M. The signature consists of)J
112 256 :M
.129 .013(n parts S)J
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.055(,\311,S)A
f0_10 sf
0 3 rm
(n)S
0 -3 rm
f0_12 sf
.139 .014(, where S)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.137 .014( is meant to convince P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
(.)S
112 274 :M
.203 .02(To form S)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.14 .014(, let M)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.162 .016(* = C\(M\) or M)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.162 .016(* = C\(h)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.24 .024(\(M\)\), depending on whether the messages are of)J
112 289 :M
-.036(fixed length or must first be hashed. Let b)A
f0_10 sf
0 -4 rm
-.024(\(i\))A
0 4 rm
0 3 rm
(1)S
0 -3 rm
f0_12 sf
-.041(,\311, b)A
f0_10 sf
0 -4 rm
-.024(\(i\))A
0 4 rm
0 3 rm
(L)S
0 -3 rm
f0_12 sf
-.035( be the bits of M)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.069(*.)A
112 307 :M
(P)S
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.037( looks up the values)A
142 326 :M
.09(u)A
f0_10 sf
0 -4 rm
.047(\(i\))A
0 4 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
.118 .012(  := \(x)J
f0_10 sf
0 -4 rm
.044(\(i,j\))A
0 4 rm
f1_10 sf
0 3 rm
.086(m)A
0 -3 rm
f0_10 sf
0 3 rm
(,)S
0 -3 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
.139 .014(, y)J
f0_10 sf
0 -4 rm
.044(\(i,j\))A
0 4 rm
f1_10 sf
0 3 rm
.086(m)A
0 -3 rm
f0_10 sf
0 3 rm
(,)S
0 -3 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
.123 .012(\)  for all )J
f8_12 sf
.05(l)A
f0_12 sf
( )S
f1_12 sf
.128(\316)A
f0_12 sf
.264 .026( {1,\311,L} with b)J
f0_10 sf
0 -4 rm
.047(\(i\))A
0 4 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
.122 .012( = 1)J
112 345 :M
.098(S)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.204 .02( consists of the u)J
f0_10 sf
0 -4 rm
.046(\(i\))A
0 4 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
.266 .027('s, together with the values to check their authenticity with respect to)J
112 360 :M
.96(R)A
f0_10 sf
0 -4 rm
.353(\(i,j\))A
0 4 rm
f0_12 sf
1.785 .178(, i.e. the other children of all the forefathers of the g)J
f0_10 sf
0 3 rm
.333(i)A
0 -3 rm
f0_12 sf
1.199 .12( \(u)J
f0_10 sf
0 -4 rm
.377(\(i\))A
0 4 rm
f8_10 sf
0 3 rm
.333(l)A
0 -3 rm
f0_12 sf
1.434 .143(\)'s in T)J
f0_10 sf
0 -4 rm
.353(\(i,j\))A
0 4 rm
f0_12 sf
1.87 .187(, in some)J
112 375 :M
-.038(predefined order.)A
112 393 :M
.178(P)A
f0_10 sf
0 3 rm
.074(j)A
0 -3 rm
f0_12 sf
.444 .044( stores \(M,)J
f1_12 sf
.184(m)A
f0_12 sf
.186(\).)A
70 411 :M
([5])S
112 411 :M
(Each P)S
f0_10 sf
0 3 rm
(m)S
0 -3 rm
f0_12 sf
-.006( who receives a message M, the numbers j of the signer and )A
f1_12 sf
(m)S
f0_12 sf
-.006( of the signature, and)A
112 426 :M
.395 .039(such a signature \(S)J
f0_10 sf
0 3 rm
.106(1)A
0 -3 rm
f0_12 sf
.393 .039(,\311, S)J
f0_10 sf
0 3 rm
.106(n)A
0 -3 rm
f0_12 sf
.342 .034(\), must check each part S)J
f0_10 sf
0 3 rm
.059(i)A
0 -3 rm
f0_12 sf
.279 .028(. For that, P)J
f0_10 sf
0 3 rm
.166(m)A
0 -3 rm
f0_12 sf
.364 .036( first computes b)J
f0_10 sf
0 -4 rm
.067(\(i\))A
0 4 rm
0 3 rm
.106(1)A
0 -3 rm
f0_12 sf
.192(,\311,)A
112 441 :M
(b)S
f0_10 sf
0 -4 rm
(\(i\))S
0 4 rm
0 3 rm
(L)S
0 -3 rm
f0_12 sf
-.01( just as in [4].)A
112 459 :M
.09(P)A
f0_10 sf
0 3 rm
.106(m)A
0 -3 rm
f0_12 sf
.186 .019( now uses g)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.153 .015( and h)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.207 .021( to check whether the g)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.135 .014( \(u)J
f0_10 sf
0 -4 rm
.043(\(i\))A
0 4 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
.257 .026(\)'s and the remaining components of S)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
112 474 :M
f0_12 sf
-.084(form the correct branches of a tree with the root T)A
f0_10 sf
0 -4 rm
-.052(\(i,j\))A
0 4 rm
f0_12 sf
(.)S
59 504 :M
f3_12 sf
-.471(Forgery check phase:)A
70 530 :M
f0_12 sf
([6])S
112 530 :M
-.026(Each honest participant who receives a signature of P)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.023('s, sends it back to P)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
(.)S
70 548 :M
([7])S
112 548 :M
.735 .074(Assume that P)J
f0_10 sf
0 3 rm
.097(j)A
0 -3 rm
f0_12 sf
.629 .063( receives a forged signature \(S)J
f0_10 sf
0 3 rm
.175(1)A
0 -3 rm
f0_12 sf
.646 .065(,\311, S)J
f0_10 sf
0 3 rm
.175(n)A
0 -3 rm
f0_12 sf
.498 .05(\) for a message M and a number )J
f1_12 sf
.242(m)A
f0_12 sf
(.)S
112 563 :M
.36 .036(For each P)J
f0_10 sf
0 3 rm
.058(i)A
0 -3 rm
f0_12 sf
.205 .021(, P)J
f0_10 sf
0 3 rm
.058(j)A
0 -3 rm
f0_12 sf
.262 .026( tries to find either a g)J
f0_10 sf
0 3 rm
.058(i)A
0 -3 rm
f0_12 sf
.218 .022(- or an h)J
f0_10 sf
0 3 rm
.058(i)A
0 -3 rm
f0_12 sf
.424 .042(-collision. This is carried out by comparing)J
112 578 :M
-.039(the forged with the corresponding correct signature: First, if messages are hashed and P)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.051( has)A
112 593 :M
.12 .012(already used )J
f1_12 sf
(m)S
f0_12 sf
.086 .009( to sign a message M', P)J
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
.082 .008( checks if h)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.087 .009(\(M\) = h)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.091 .009(\(M'\). If not, P)J
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
.082 .008( checks if u)J
f0_10 sf
0 -4 rm
.02(\(i\))A
0 4 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
.036 .004(  =)J
112 608 :M
(\(x)S
f0_10 sf
0 -4 rm
-.011(\(i,j\))A
0 4 rm
f1_10 sf
0 3 rm
(m)S
0 -3 rm
f0_10 sf
0 3 rm
(,)S
0 -3 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
(, y)S
f0_10 sf
0 -4 rm
-.011(\(i,j\))A
0 4 rm
f1_10 sf
0 3 rm
(m)S
0 -3 rm
f0_10 sf
0 3 rm
(,)S
0 -3 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
-.018(\) for all components u)A
f0_10 sf
0 -4 rm
(\(i\))S
0 4 rm
f8_10 sf
0 3 rm
(l)S
0 -3 rm
f0_12 sf
-.017( of S)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.019(, and if all other components have the value of)A
112 623 :M
.333 .033(the corresponding node in T)J
f0_10 sf
0 -4 rm
.049(\(i,j\))A
0 4 rm
f0_12 sf
.271 .027(. If not, there must be a collision with the correct signature)J
112 638 :M
-.107(on the path from the incorrect node to the correct root.)A
112 656 :M
(P)S
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.015( publishes these collisions.)A
70 674 :M
([8])S
112 674 :M
-.096(Each honest participant P)A
f0_10 sf
0 3 rm
-.153(m)A
0 -3 rm
f0_12 sf
-.097( who receives a g)A
f0_10 sf
0 3 rm
-.055(i)A
0 -3 rm
f0_12 sf
-.085(- or h)A
f0_10 sf
0 3 rm
-.055(i)A
0 -3 rm
f0_12 sf
-.088(-collision accepts this as )A
f3_12 sf
-.108(proof of forgery)A
112 689 :M
.708 .071(for P)J
f3_10 sf
0 3 rm
.115(i)A
0 -3 rm
f0_12 sf
.541 .054(. If there is a proof of forgery for P)J
f0_10 sf
0 3 rm
.115(i)A
0 -3 rm
f0_12 sf
.331 .033( for )J
f8_12 sf
.175(all)A
f0_12 sf
.2(\312P)A
f0_10 sf
0 3 rm
.115(i)A
0 -3 rm
f0_12 sf
.404 .04(, P)J
f0_10 sf
0 3 rm
.322(m)A
0 -3 rm
f0_12 sf
.542 .054( accepts this as )J
f3_12 sf
.97 .097(proof of forgery)J
112 704 :M
f0_12 sf
-.098(\(more precisely: as proof that someone can break the signature scheme, not that someone has)A
112 719 :M
-.019(forged anything\).)A
42 740 :M
-.079(It is not yet obvious why we emphasized the fact that participant P)A
f0_10 sf
0 3 rm
-.129(m)A
0 -3 rm
f0_12 sf
-.079( waits to see a proof of forgery for each)A
42 755 :M
-.004(participant, and not just for himself, before he accepts it as proof of forgery. This will be needed when the)A
42 770 :M
-.095(scheme is used within Byzantine Agreement, because this fact serves to ensure agreement upon whether the)A
42 785 :M
.765 .076(scheme was broken or not. This also explains why P)J
f0_10 sf
0 3 rm
.118(j)A
0 -3 rm
f0_12 sf
.73 .073('s signatures must contain a part S)J
f0_10 sf
0 3 rm
.118(j)A
0 -3 rm
f0_12 sf
.515 .051(, at least if the)J
42 800 :M
-.045(function g)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.042( is not trap-door: A forged signature must, in particular, guarantee that P)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.042( finds a collision of her)A
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(schunter; page: 16 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 16 -)J
42 68 :M
f0_12 sf
.297 .03(own functions.)J
42 89 :M
-.097(Formalizing the reasons which were used as motivation for the scheme, one obtains the following lemma:)A
42 119 :M
f3_12 sf
-.719(Lemma 1)A
98 119 :M
f0_12 sf
-.059(Assume the basic protocol for n parties described above, and that no undiscovered cheating has)A
98 134 :M
-.024(occurred during phase [2].)A
76 152 :M
.666(i.)A
98 152 :M
1.281 .128(The problem of forging a signature which an honest participant will accept in step [5] is)J
98 167 :M
-.108(equivalent to breaking one of the families of collision-free functions.)A
76 185 :M
.166(ii.)A
98 185 :M
2.189 .219(Each forged signature enables the supposed signer P)J
f0_10 sf
0 3 rm
.292(j)A
0 -3 rm
f0_12 sf
1.596 .16( to form a proof of forgery, with)J
98 200 :M
-.11(probability not less than)A
257 222 :M
f0_18 sf
(\()S
f0_12 sf
(1 - )S
282 215 :M
(1)S
279 231 :M
(2)S
f1_10 sf
0 -4 rm
(s)S
0 4 rm
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
279 218.24 -.24 .24 291.24 218 .24 279 218 @a
291 222 :M
f0_18 sf
.356(\))A
f0_10 sf
0 -7 rm
.297(n)A
0 7 rm
f0_12 sf
.324 .032( .)J
76 249 :M
(iii.)S
98 249 :M
-.081(Conversely, forging a proof of forgery is equivalent to breaking one of the families of collision-)A
98 264 :M
-.021(free functions.)A
42 285 :M
.63 .063(A sketch of a proof of the previous simpler scheme can be found in [WaPf_89], a complete proof is to)J
42 300 :M
-.031(appear in [Pfit1_89].)A
42 321 :M
.203 .02(The length of the signatures can be reduced, if the participants agree upon one g and one h, instead of all)J
42 336 :M
(the g)S
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
(, h)S
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.038 .004(. This may be achieved by using a computationally secure protocol for multi-party computations:)J
42 351 :M
.698 .07(The random inputs q, r for G, H are chosen by all participants together, e.g. as the sum of values q)J
f0_10 sf
0 3 rm
.124(i)A
0 -3 rm
f0_12 sf
.342 .034(, r)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
42 366 :M
f0_12 sf
.202 .02(which are chosen by P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.194 .019( randomly. To execute the whole algorithm \(i.e. G, H, and the computation of q, r)J
42 381 :M
-.039(from q)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.024(, r)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.037(\), the multi-party protocol of [ChDG_88], with a bit commitment scheme unconditionally secure)A
42 396 :M
-.028(for the verifier, is used. Since the original generators G and H are errorless, i.e. for all inputs they compute)A
42 411 :M
1.962 .196(correct functions g and h, the output is unconditionally correct with an exponentially small error)J
42 426 :M
-.027(probability. If the attacker is unable to break the commitment scheme, he obtains no trap-door information)A
42 441 :M
.446 .045(about g, h.)J
59 456 :M
2.105 .21(Each participant who disrupts the computation by submitting wrong messages \(which will be)J
42 471 :M
.656 .066(recognized with an at most exponentially small error probability\) is assumed to be an attacker, and the)J
42 486 :M
1.178 .118(computation is repeated without him. \(Usually, e.g., in [GMW_87, GaHY_88], it is suggested that a)J
42 501 :M
.238 .024(disturbing participant is somehow simulated by the other participants, i.e. disturbances are )J
f8_12 sf
.056(tolerated)A
f0_12 sf
.188 .019(. For)J
42 516 :M
1.478 .148(this, each participant's secret must be shared among the others, thus one has to assume 2 \245 |A| < n)J
42 531 :M
-.083(additionally. In our case, there is nothing to gain from forcing a dishonest participant to take part.\))A
59 546 :M
1.407 .141(Anyway, these protocols are not very practical. The situation seems better if the \(otherwise less)J
42 561 :M
.412 .041(efficient\) collision-free pairs based on the discrete log of [Damg_88] are used, because in that case, any)J
42 576 :M
-.065(protocol for choosing mutually trusted random bits should suffice.)A
42 608 :M
f3_14 sf
.25(3.2.2)A
110 608 :M
-.306(A protocol for fail-stop Byzantine Agreement)A
42 631 :M
f0_12 sf
.769 .077(In [DoSt_83], Dolev and Strong describe \(and prove\) a computationally secure protocol for Byzantine)J
42 646 :M
.33 .033(Agreement, which can tolerate any number of attackers and where each honest participant needs to send)J
42 661 :M
-.041(two different messages at the most. If there is only one or no honest participant, there is no problem, hence)A
42 676 :M
-.061(we assume |A| < n-1 in the following.)A
59 691 :M
.699 .07(We derive a fail-stop Byzantine Agreement protocol from that specific protocol, although a similar)J
42 706 :M
1.263 .126(construction is possible from any Byzantine Agreement protocol which works with signatures. Each)J
42 721 :M
1.838 .184(message of the protocol consists of the value the sender has broadcasted, and a maximum of n-1)J
42 736 :M
.119 .012(signatures. Let s)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.088 .009(\(v\) denote the value v signed by P)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.089 .009(, and assume that from s)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.101 .01(\(v\) the signed message v can)J
42 751 :M
-.108(be extracted.)A
59 766 :M
1.182 .118(The original protocol uses iterated signatures \(like s)J
f0_10 sf
0 3 rm
.164(i)A
0 -3 rm
0 6 rm
.425(w)A
0 -6 rm
f0_12 sf
.255(\(s)A
f0_10 sf
0 3 rm
.164(i)A
0 -3 rm
0 6 rm
.305(w-1)A
0 -6 rm
f0_12 sf
.628 .063(\( \311 s)J
f0_10 sf
0 3 rm
.164(i)A
0 -3 rm
0 6 rm
.294(2)A
0 -6 rm
f0_12 sf
.255(\(s)A
f0_10 sf
0 3 rm
.164(i)A
0 -3 rm
0 6 rm
.294(1)A
0 -6 rm
f0_12 sf
1.133 .113(\(v\)\)\311\)\) \). In our signature)J
42 781 :M
.023 .002(scheme, signatures are much longer than messages. The computational expenditure of the signing process)J
42 796 :M
.115 .011(and, if the messages are so short that they need not be hashed, also the length of the signatures grow with)J
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(schunter; page: 17 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 17 -)J
42 68 :M
f0_12 sf
.048 .005(the length of the message. It is therefore preferable to use )J
f8_12 sf
.013(sets)A
f0_12 sf
.05 .005( of signatures instead \(like {s)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
0 6 rm
(w)S
0 -6 rm
f0_12 sf
.045 .004(\(v\), s)J
f0_10 sf
0 3 rm
(i)S
0 -3 rm
0 6 rm
(w-1)S
0 -6 rm
f0_12 sf
(\(v\),)S
42 83 :M
1.48 .148(\311, s)J
f0_10 sf
0 3 rm
.254(i)A
0 -3 rm
0 6 rm
.457(2)A
0 -6 rm
f0_12 sf
1.408 .141(\(v\), s)J
f0_10 sf
0 3 rm
.254(i)A
0 -3 rm
0 6 rm
.457(1)A
0 -6 rm
f0_12 sf
1.926 .193(\(v\)}\). \(For the signature scheme in [WaPf_89], iterated signatures would even grow)J
42 98 :M
-.071(exponentially with the number of signers.\))A
59 113 :M
.299 .03(Luckily, the Dolev/Strong protocol can also be implemented with sets of signatures. \(Because of this)J
42 128 :M
.259 .026(change, and since the protocol description given in [DoSt_83] is rather short anyway, we have presented)J
42 143 :M
-.05(the proof by Dolev and Strong for our scheme in [WaPf_89]\).)A
59 158 :M
.378 .038(From the Dolev/Strong protocol, we obtain an \(n+1\)-phase protocol for Byzantine Agreement where)J
42 173 :M
-.074(breaking can be proved, in the following way:)A
59 203 :M
f3_12 sf
-.451(Byzantine Agreement protocol where breaking can be proved, for up to n-2 attackers)A
59 226 :M
f0_12 sf
.329 .033(For )J
f1_12 sf
.146(f)A
f0_12 sf
.337 .034( = 1,\311, n-1:)J
70 244 :M
-.067([)A
f1_12 sf
-.105(f)A
f0_12 sf
(])S
112 244 :M
.038 .004(Perform the )J
f1_12 sf
(f)S
f0_12 sf
.038 .004(-th phase of the Dolev/Strong protocol, but using sets of signatures instead of)J
112 259 :M
-.032(iterated signatures, and using the signature scheme in 3.2.1.)A
70 277 :M
([n])S
112 277 :M
.711 .071(Each participant P)J
f0_10 sf
0 3 rm
.085(i)A
0 -3 rm
f0_12 sf
.571 .057( sends all signatures received during the previous phases back to their)J
112 292 :M
.466 .047(supposed signers, i.e. he sends s)J
f0_10 sf
0 3 rm
.07(j)A
0 -3 rm
f0_12 sf
.364 .036(\(v'\) back to P)J
f0_10 sf
0 3 rm
.07(j)A
0 -3 rm
f0_12 sf
(.)S
70 310 :M
.062([n+1])A
112 310 :M
.662 .066(If P)J
f0_10 sf
0 3 rm
.146(j)A
0 -3 rm
f0_12 sf
.893 .089( has received a forged signature s)J
f0_10 sf
0 3 rm
.146(j)A
0 -3 rm
f0_12 sf
.755 .075(\(v'\), she tries to form a proof of forgery. If she is)J
112 325 :M
-.052(successful, she sends it to all other participants.)A
70 343 :M
-.079([End])A
112 343 :M
-.033(If P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.035( has not found or received a proof of forgery, he decides as in the original Dolev/Strong)A
112 358 :M
-.047(protocol. Otherwise he decides "signatures broken".)A
42 388 :M
f3_12 sf
-.719(Lemma 2)A
98 388 :M
-.164(Byzantine Agreement where breaking can be proved.\312)A
f0_12 sf
-.153(Assume the above protocol is executed,)A
98 403 :M
-.12(|A| < n-1, and that the attacker is unable to prevent communication between honest participants.)A
76 421 :M
.666(i.)A
98 421 :M
1.134 .113(If the attacker is unable to forge signatures \(i.e. to break the collision-free functions\), the)J
98 436 :M
-.092(protocol finds the correct agreement after phase [n+1].)A
76 454 :M
.166(ii.)A
98 454 :M
-.102(Assume that no undetected cheating occurred during step [2] of the signature scheme.)A
98 472 :M
1.302 .13(If an honest participant decides to accept the value v after phase [n+1] \(according to the)J
98 487 :M
-.113(Dolev/Strong decision rule\), then with probability at least)A
258 509 :M
f0_18 sf
(\()S
f0_12 sf
(1 - )S
283 502 :M
(1)S
280 518 :M
(2)S
f1_10 sf
0 -4 rm
(s)S
0 4 rm
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
280 505.24 -.24 .24 292.24 505 .24 280 505 @a
292 509 :M
f0_18 sf
.433(\))A
f0_10 sf
0 -7 rm
.361(n)A
0 7 rm
f0_12 sf
(,)S
98 536 :M
.379 .038(v is the correct value \(i.e. the sender's value if the sender was honest\), and each other honest)J
98 551 :M
-.074(participant has either accepted value v, too, or has decided "signatures broken".)A
76 569 :M
(iii.)S
98 569 :M
.115 .012(If an honest participant decides "signatures broken", he can prove this to all other participants)J
98 584 :M
-.09(after the protocol.)A
98 602 :M
-.104(Each protocol which satisfies \(i\), \(ii\), and \(iii\), is called )A
f3_12 sf
-.14(Byzantine Agreement)A
f0_12 sf
-.072( )A
f3_12 sf
-.149(where breaking)A
98 617 :M
-.368(can be proved)A
f0_12 sf
(.)S
42 638 :M
f3_12 sf
.196(Proof.)A
f0_12 sf
.749 .075(\312\312i. Since the attacker cannot forge signatures, the protocol works like the original Dolev/Strong)J
42 653 :M
-.098(protocol. Agreement is therefore guaranteed.)A
42 674 :M
-.06(ii. Assume that the honest P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.062( has accepted v after phase [n+1].)A
59 689 :M
.311 .031(In contradiction to Lemma 2, assume that v is )J
f8_12 sf
.097(not)A
f0_12 sf
.386 .039( the correct value. Since the Dolev/Strong protocol)J
42 704 :M
.44 .044(always finds the correct value, provided signatures of honest participants are authentic, there must be at)J
42 719 :M
-.062(least one honest participant who has received a forged signature of an honest participant P)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.065('s. Thus in phase)A
42 734 :M
-.029([n], P)A
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
-.03( receives the forgery, and in phase [n+1], she sends the proof of forgery to all other participants with)A
42 749 :M
2.049 .205(probability \(1-2)J
f0_10 sf
0 -4 rm
.234(-)A
0 4 rm
f1_10 sf
0 -4 rm
.424(s)A
0 4 rm
f0_12 sf
.281(\))A
f0_10 sf
0 -4 rm
.352(n)A
0 4 rm
f0_12 sf
1.143 .114(. Hence in phase [n+1], P)J
f0_10 sf
0 3 rm
.196(i)A
0 -3 rm
f0_12 sf
1.356 .136( receives the proof of forgery and decides "signatures)J
42 764 :M
-.052(broken". This contradicts our assumption. Thus P)A
f0_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.051( has accepted the correct value v.)A
59 779 :M
1.062 .106(Since the same is true for all other honest participants, each one who has not decided "signatures)J
42 794 :M
-.094(broken" has accepted the same value v.)A
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(schunter; page: 18 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 18 -)J
42 68 :M
f0_12 sf
-.012(iii. If an honest participant decides "signatures broken", he knows a proof of forgery and can show it to all)A
42 83 :M
-.118(other participants later. )A
1 G
153 70 17 17 rC
156 73 12 12 rF
0 G
156.5 73.5 11 11 rS
gR
gS 13 12 568 818 rC
42 104 :M
f0_12 sf
.782 .078(This protocol can be described as realizing Byzantine Agreement if the signatures are not broken, and)J
42 119 :M
1.059 .106(Crusader Agreement [Dole_81] otherwise. Additionally, the participants who know that something is)J
42 134 :M
-.067(wrong can prove it later.)A
59 149 :M
.413 .041(Each participant has to send two messages at the most, and, in particular, to sign a maximum of two)J
42 164 :M
.058(values.)A
42 185 :M
.12 .012(Now assume that the above protocol is repeated ad infinitum, i.e. that after the last phase a new phase [1])J
42 200 :M
-.116(starts. Call each protocol execution a )A
f3_12 sf
-.142(broadcast)A
f0_12 sf
-.12(. For each broadcast, it is predetermined which participant is)A
42 215 :M
-.1(the sender. We add the following supplement to the protocol:)A
59 245 :M
f3_12 sf
-.487(Supplement to the Byzantine Agreement protocol)A
59 268 :M
f0_12 sf
-.085(For each phase [)A
f1_12 sf
-.108(f)A
f0_12 sf
-.081(], add the following rule to the protocol:)A
70 286 :M
-.067([)A
f1_12 sf
-.105(f)A
f0_12 sf
(])S
112 286 :M
.416 .042(If in phase [)J
f1_12 sf
.194(f)A
f0_12 sf
.517 .052(-1], P)J
f0_10 sf
0 3 rm
.086(i)A
0 -3 rm
f0_12 sf
.541 .054( receives a proof of forgery for the first time, he immediately decides)J
112 301 :M
.584 .058("signatures broken" for )J
f8_12 sf
.116(all)A
f0_12 sf
.507 .051( following \(and the current\) broadcasts, and sends the proof of)J
112 316 :M
.544 .054(forgery to all other participants. No participant who has decided "signatures broken" will)J
112 331 :M
-.031(ever send any further messages.)A
42 352 :M
.496 .05(This supplement guarantees that, if an honest participant decides "signatures broken" in phase [)J
f1_12 sf
.153(f)A
f0_12 sf
.49 .049(], each)J
42 367 :M
-.092(other honest participant does so in phase [)A
f1_12 sf
-.123(f)A
f0_12 sf
-.1(+1]. Hence we have realized fail-stop Byzantine Agreement.)A
42 397 :M
f3_12 sf
-.719(Lemma 3)A
98 397 :M
1.535 .153(Fail-stop Byzantine Agreement.\312\312)J
f0_12 sf
.946 .095(Assume that the above protocol with the supplement is)J
98 412 :M
1.219 .122(iterated ad infinitum, |A| < n-1, and that the attacker is unable to prevent communication)J
98 427 :M
-.084(between honest participants.)A
76 445 :M
.666(i.)A
98 445 :M
1.134 .113(If the attacker is unable to forge signatures \(i.e. to break the collision-free functions\), the)J
98 460 :M
-.127(protocol realizes reliable broadcast.)A
76 478 :M
.166(ii.)A
98 478 :M
-.102(Assume that no undetected cheating occurred during step [2] of the signature scheme.)A
98 496 :M
.353 .035(If an attacker, who can forge signatures, disturbs the )J
f1_12 sf
.106(t)A
f0_12 sf
.374 .037(-th broadcast during the first n phases,)J
98 511 :M
-.148(then with probability at least)A
258 533 :M
f0_18 sf
(\()S
f0_12 sf
(1 - )S
283 526 :M
(1)S
280 542 :M
(2)S
f1_10 sf
0 -4 rm
(s)S
0 4 rm
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
280 529.24 -.24 .24 292.24 529 .24 280 529 @a
292 533 :M
f0_18 sf
.433(\))A
f0_10 sf
0 -7 rm
.361(n)A
0 7 rm
f0_12 sf
(,)S
98 560 :M
.719 .072(all honest participants decide "signatures broken" at the end of the )J
f1_12 sf
.211(t)A
f0_12 sf
.838 .084(-th broadcast, and stop)J
98 575 :M
.096(sending.)A
76 593 :M
(iii.)S
98 593 :M
.31 .031(If an attacker, who can forge signatures, disturbs the )J
f1_12 sf
.093(t)A
f0_12 sf
.375 .037(-th broadcast during phase [n+1], each)J
98 608 :M
-.06(honest participant either decides "signatures broken" at the end of the )A
f1_12 sf
-.067(t)A
f0_12 sf
-.062(-th broadcast, or accepts)A
98 623 :M
-.07(the correct value at the end of the )A
f1_12 sf
-.081(t)A
f0_12 sf
-.072(-th broadcast and stops sending after phase [1] of the \()A
f1_12 sf
-.081(t)A
f0_12 sf
-.096(+1\)st)A
98 638 :M
(broadcast.)S
42 659 :M
f3_12 sf
.152(Proof.)A
f0_12 sf
.609 .061(\312\312i. Follows from Lemma 2\(i\).)J
42 680 :M
.043 .004(ii. The first two cases are that the attacker sends the forged signature of an honest participant P)J
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
.041 .004('s either to)J
42 695 :M
.219 .022(another honest participant in a phase )J
f1_12 sf
.075(f)A
f0_12 sf
.141 .014( < n, or directly to P)J
f0_10 sf
0 3 rm
(j)S
0 -3 rm
f0_12 sf
.232 .023( in phase [n]. Thus with the above-mentioned)J
42 710 :M
.708 .071(probability, each participant receives the proof of forgery from P)J
f0_10 sf
0 3 rm
.099(j)A
0 -3 rm
f0_12 sf
.454 .045( in phase [n+1] of the )J
f1_12 sf
.187(t)A
f0_12 sf
1.008 .101(-th broadcast,)J
42 725 :M
-.001(decides "signatures broken", and stops sending.)A
59 740 :M
.276 .028(The third case is that he sends a proof of forgery to an honest participant directly in a phase )J
f1_12 sf
.112(f)A
f0_12 sf
.229 .023( for the)J
42 755 :M
-.063(first time. Then in phase )A
f1_12 sf
-.085(f)A
f0_12 sf
-.064(+1 )A
cF f1_12 sf
-.064(\243)A
sf
-.064( n+1, all other honest participants receive it, decide "signatures broken", and)A
42 770 :M
.305 .031(stop sending.)J
42 791 :M
-.035(iii. In this case, the attacker sends a proof of forgery to an honest participant directly in phase [n+1] for the)A
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(schunter; page: 19 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 19 -)J
42 68 :M
f0_12 sf
.57 .057(first time. Thus the decisions according to the original Dolev/Strong protocol are still correct, and each)J
42 83 :M
-.086(honest participant receives the proof of forgery at the latest in phase [1] of the \()A
f1_12 sf
-.1(t)A
f0_12 sf
-.097(+1\)st broadcast.)A
1 G
496 70 17 17 rC
499 73 12 12 rF
0 G
499.5 73.5 11 11 rS
gR
gS 13 12 568 818 rC
42 115 :M
f3_14 sf
.25(3.2.3)A
110 115 :M
-.352(Using fail-stop Byzantine Agreement for untraceability and serviceability)A
42 138 :M
f0_12 sf
-.032(Together with the protocol in 2.3 \(i.e. used in all places where the reliable broadcast network was needed\),)A
42 153 :M
1.697 .17(fail-stop broadcast guarantees computationally secure serviceability while preserving unconditional)J
42 168 :M
.524 .052(untraceability on the inseparability assumption \(i.e. the attacker on untraceability is only assumed to be)J
42 183 :M
-.116(unable to prevent communication between honest participants\) in the sense of S2:)A
59 198 :M
-.066(The only way two honest participants can decide differently is that one has accepted a value v while the)A
42 213 :M
-.006(other has decided "signatures broken" \(Lemma 2 ii\). But in this case, all honest participants will stop after)A
42 228 :M
.444 .044(the first phase of the next broadcast \(Lemma 3 ii, iii\), and those who perform the first phase of the next)J
42 243 :M
-.09(broadcast have accepted the correct value. Thus the attacker cannot learn more than an additional output O)A
f0_10 sf
0 3 rm
-.052(i)A
0 -3 rm
0 -4 rm
(t)S
0 4 rm
42 258 :M
f0_12 sf
-.113(from a participant who has not received any incorrect value. This cannot give him additional information.)A
59 273 :M
-.063(Since this scheme is much less efficient than the schemes of [Waid_89], in practice one could try to use)A
42 288 :M
.263 .026(one of those, and only if that were disrupted continually, would one switch to the scheme described here)J
42 303 :M
-.058(\(by hand, because first the key distribution phase would have to be performed\).)A
42 343 :M
f3_18 sf
(4)S
110 343 :M
-.443(A protocol without commitment)A
42 369 :M
f0_12 sf
.371 .037(In the protocols described so far, the assumption that the attacker on serviceability must be restricted by)J
42 384 :M
.368 .037(3 \245 |A| < n or computationally limited \(in addition to the reliable broadcast assumption\) were needed for)J
42 399 :M
-.166(commitment.)A
59 414 :M
.26 .026(In this chapter we sketch a protocol without commitment, which only assumes reliable broadcast and)J
42 429 :M
-.006(2 \245 |A| + 1 < n. It has a similar phase structure as that in 2.3, although the non-traps are distinguished from)A
42 444 :M
-.031(traps in another way.)A
59 459 :M
.115 .012(The idea is that a commitment is not really necessary for trap/non-trap announcements \(because if the)J
42 474 :M
.567 .057(owner changes his mind about whether it is a trap or not, this does not harm anybody else, because the)J
42 489 :M
-.047(others are not allowed to disturb it anyway\). The problem that only the owner may be allowed to announce)A
42 504 :M
-.039(that it was a trap is solved by a password scheme: In the announcement phase, each other participant sends)A
42 519 :M
2.544 .254(the anonymous owner of a slot a password. The sending of passwords is protected by keyless)J
42 534 :M
2.482 .248(cryptography [AlSc_83, Pfit_89] and keyless authentication [Bura_88, WaPf_89], which can be)J
42 549 :M
-.086(implemented very efficiently using superposed sending.)A
59 564 :M
-.029(Output commitment is no longer possible on this assumption either. Instead, the participants must send)A
42 579 :M
-.111(in a different order in each protocol execution.)A
59 594 :M
-.074(A full description can be found in [WaPf_89].)A
42 634 :M
f3_18 sf
(5)S
110 634 :M
-.449(Other applications of the signature scheme)A
42 662 :M
f3_14 sf
.25(5.1)A
110 662 :M
-.421(Adaptive Byzantine Agreement)A
42 685 :M
f0_12 sf
.367 .037(The signature scheme in 3.2.1 can also be used for a Byzantine Agreement protocol where one need not)J
42 700 :M
.843 .084(decide between the two restrictions on the attacker \(computationally restricted or 3 \245 |A| < n\) a priori.)J
42 715 :M
.093 .009(Instead, it will always work if at least one of them is fulfilled. \(A similar protocol will appear as a special)J
42 730 :M
.911 .091(case of the protocol in [Chau1_89], but it seems to need the assumption 2 \245 |A| < n in addition to the)J
42 745 :M
-.135(computational restriction for fault tolerance.\))A
59 760 :M
.305 .03(The first idea is, of course, to start with a Byzantine Agreement protocol BA1 which works with any)J
42 775 :M
.666 .067(kind of signatures, implemented with the signature scheme where breaking can be proved, and to have)J
42 790 :M
-.112(another Byzantine Agreement protocol BA2 which works for 3 \245 |A| < n as an alternative.)A
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(schunter; page: 20 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 20 -)J
59 68 :M
f0_12 sf
.161 .016(Now, in contrast to the situation in 3.2, one needs a definite moment when everybody knows whether)J
42 83 :M
-.031(the signatures are assumed broken and BA2 must be used, or whether the results of BA1 are used. But in a)A
42 98 :M
.344 .034(suitable implementation, this doubtful situation can only arise if the signatures are broken. Thus luckily,)J
42 113 :M
.38 .038(here we can assume that the attacker is restricted by 3 \245 |A| < n \(also in contrast to 3.2, where we had to)J
42 128 :M
-.145(consider the unlimited attacker on untraceability\).)A
59 143 :M
.791 .079(This provides motivation for a simple protocol where, after the execution of BA1 and BA2 for the)J
42 158 :M
-.007(original value, each participant uses BA2 to broadcast whether he knows a proof of forgery. If he does, he)A
42 173 :M
.05 .005(must broadcast not just the value "yes", but the proof of forgery itself. This prevents the participants from)J
42 188 :M
-.077(disturbing the decision if 3 \245 |A| < n does not hold \(but, consequently, the computational restriction does\).)A
59 203 :M
.811 .081(The exact protocol and its proof can be found in [WaPf_89], together with some simple efficiency)J
42 218 :M
.326 .033(improvements, e.g., to )J
f1_12 sf
.072(\351)A
f0_12 sf
.183 .018(4/3 \245 n)J
f1_12 sf
.072(\371)A
f0_12 sf
.35 .035( phases.)J
42 250 :M
f3_14 sf
.25(5.2)A
110 250 :M
-.517(Payment systems)A
42 273 :M
f0_12 sf
.461 .046(Signatures where forgery can be proved can be used to shift the risk that the system is broken, which is)J
42 288 :M
-.035(usually borne by the signer, to the recipient of the signature. \(This, however, is not necessary; one can also)A
42 303 :M
-.069(leave the risk with the signer, but limit it by the fact that the system is no longer used once the first proof of)A
42 318 :M
.024 .002(forgery appears.\))J
59 333 :M
-.035(This could, e.g., be useful with the clients' signatures in a payment system. Since each client only signs)A
42 348 :M
.121 .012(messages for the bank, the basic two-party protocol \(cf. 3.2.1.3\) suffices. For example, in [ChFN_88 \244 2])J
42 363 :M
-.115(it was regretted that the scheme is not unconditionally secure for the clients. This can easily be achieved: the)A
42 378 :M
-.063(scheme already contains preimages of a hiding function as the clients' signatures. Only, the images must be)A
42 393 :M
.137 .014(authenticated using the tree authentication in 3.2.1.2, instead of a normal signature scheme. \(Since in this)J
42 408 :M
.546 .055(case the clients sign one-bit messages only, and only one pair g and h, chosen by the bank, needs to be)J
42 423 :M
-.078(used, the size of the signatures is comparable to that of normal signature schemes.\))A
42 455 :M
f3_14 sf
.25(5.3)A
110 455 :M
-.423(Solving disputes about secret keys)A
42 478 :M
f0_12 sf
1.055 .105(Another useful application, suggested by David Chaum [Chau3_89], is solving disputes about shared)J
42 493 :M
1.045 .104(secret keys, e.g., during an investigation into some rounds of the DC-net \(cf. [Chau_88] or 2.1\). The)J
42 508 :M
-.03(original protocol in [Chau_88 \244 2.6] is just that the two participants exchange signatures on the shared key)A
42 523 :M
.259 .026(bits or on "split bits", i.e. two values whose exclusive or is the key bit, and to use tree authentication \(cf.)J
42 538 :M
.702 .07([Merk_80] or 3.2.1.2\) as an efficiency improvement. This can easily be adapted to yield unconditional)J
42 553 :M
.297 .03(security, without losing too much efficiency, because only two parties are involved, and the values to be)J
42 568 :M
.107 .011(signed are already known during what corresponds to the key distribution phase. The basic addition is, of)J
42 583 :M
1.28 .128(course, that collisions of the hash function used in the authentication tree serve as proof of forgery.)J
42 598 :M
-.088(However, some change is also necessary in the authentication of the root R:)A
59 613 :M
-.008(The way with the smallest change is not to use split bits, and to add the rule that if the two participants)A
42 628 :M
.047 .005(show \(normal\) signatures of each other on different values for R, the conflict cannot be resolved \(because)J
42 643 :M
.116 .012(either both are attackers or one has forged the signature of the other\). Thus in the case of the DC-net, one)J
42 658 :M
.466 .047(would return to removing the key. \(In the case of split bits, there would be no way at all of recognizing)J
42 673 :M
(forged signatures.\))S
59 688 :M
.213 .021(A second way is to substitute the top level signature by one whose forgery can be proved. Now, if no)J
42 703 :M
-.026(split bits are used and the participants show signatures on different values for R, both can be considered as)A
42 718 :M
.019 .002(attackers \(since if only one were an attacker, one of the signatures would have to be forged, thus the other)J
42 733 :M
-.051(one could prove it\).)A
59 748 :M
.208 .021(A third way is to make R public. Of course, this must not undermine the unconditional secrecy of the)J
42 763 :M
-.002(key. For this, instead of R itself, a hiding function of it could be published, i.e. g\(R, y\) for a random y.)A
59 778 :M
.384 .038(If one wishes that in the course of solving a dispute about some bits, no information about other bits)J
42 793 :M
.781 .078(becomes public \(this is a scenario where not all attackers collude\), the intermediate hash values in the)J
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(schunter; page: 21 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 21 -)J
42 68 :M
f0_12 sf
-.017(authentication tree must not contain such information. Therefore one should apply a hiding function to the)A
42 83 :M
-.085(leaves of the authentication tree, i.e. to the blocks of bits which are always investigated together.)A
42 115 :M
f3_14 sf
.25(5.4)A
110 115 :M
-.491(Signatures which cannot be shown round)A
42 138 :M
f0_12 sf
1.787 .179(Finally, another property, which has just been noticed as desirable for signature schemes in some)J
42 153 :M
-.024(applications [ChAn_89], is somehow inherent in our scheme. This is that the recipient of a signature, Bob,)A
42 168 :M
.401 .04(cannot show it around without the help of the signer, Alice \(who would sometimes be forced to provide)J
42 183 :M
.131 .013(this help,  e.g., if asked to do so by a court\).)J
59 198 :M
.196 .02(For this, the two-party protocol must be used, where each signature uses just one g and one h, chosen)J
42 213 :M
.312 .031(by Bob. The hiding function g must be based on claw-free pairs with trap-doors, as in 3.2.1.1. Bob must)J
42 228 :M
-.06(be told the leaves of the authentication tree. Now, using the trap-door, he can form valid looking signatures)A
42 243 :M
-.111(himself. They only become authentic if Alice declares that she cannot find a proof of forgery against them.)A
59 258 :M
.179 .018(The difference to the scheme in [ChAn_89] is like that to usual signature schemes: that scheme is not)J
42 273 :M
-.078(unconditionally secure for the signer, but the signatures are usually much shorter there.)A
42 305 :M
f3_14 sf
(6)S
110 305 :M
-.683(Summary)A
42 328 :M
f0_12 sf
.899 .09(The goal of this paper was to investigate how, on the basis of superposed sending \(1.1\), a sender and)J
42 343 :M
.845 .084(recipient untraceability scheme can be realized which additionally guarantees serviceability on certain)J
42 358 :M
.061(assumptions.)A
59 373 :M
-.015(The protocol for solving this problem suggested in [Chau_88] can be misused for an easy active attack)A
42 388 :M
-.065(on untraceability \(2.2\), but its basic idea can be used for the secure solutions presented.)A
59 403 :M
.145 .014(The restrictions A)J
f0_10 sf
0 3 rm
.026(serv)A
0 -3 rm
f0_12 sf
.078 .008( and A)J
f0_10 sf
0 3 rm
.026(untr)A
0 -3 rm
f0_12 sf
.132 .013( on the attackers against serviceability and untraceability, resp., which)J
42 418 :M
.505 .05(are necessary for the different protocols, are summarized in Figure 2. For a comparison, we include the)J
42 433 :M
-.061(schemes of [Waid_89]. P is the set of participants, A the set of attackers.)A
42 462 :M
-.094(Protocol)A
155 462 :M
-.165(Section)A
303 462 :M
-.451(A)A
f0_10 sf
0 3 rm
-.289(serv)A
0 -3 rm
398 462 :M
f0_12 sf
-.269(A)A
f0_10 sf
0 3 rm
-.167(untr)A
0 -3 rm
472 462 :M
f0_12 sf
-.202(Untraceability)A
-1 -1 269 464 1 1 268 451 @b
-1 -1 363 464 1 1 362 451 @b
-1 -1 459 464 1 1 458 451 @b
476 475 :M
-.165(probabilistic)A
40 479 -1 2 552 477 1 40 477 @a
-1 -1 269 479 1 1 268 464 @b
-1 -1 363 479 1 1 362 464 @b
-1 -1 459 479 1 1 458 464 @b
42 495 :M
-.018(Superposed sending)A
155 495 :M
.732 .073(1.1, [Chau_88])J
299 495 :M
-.052(A = )A
f1_12 sf
(\306)S
393 495 :M
f0_12 sf
-.282(reliable)A
499 495 :M
(no)S
-1 -1 269 497 1 1 268 479 @b
-1 -1 363 497 1 1 362 479 @b
-1 -1 459 497 1 1 458 479 @b
387 508 :M
-.122(broadcast)A
40 511 -1 1 552 510 1 40 510 @a
-1 -1 269 511 1 1 268 497 @b
-1 -1 363 511 1 1 362 497 @b
-1 -1 459 511 1 1 458 497 @b
42 527 :M
-.091(Fail-stop broadcast)A
155 527 :M
1.121 .112([Waid_89, 3.2.2.1])J
299 527 :M
-.052(A = )A
f1_12 sf
(\306)S
378 527 :M
f0_12 sf
-.166(unconditional)A
499 527 :M
(no)S
-1 -1 269 529 1 1 268 511 @b
-1 -1 363 529 1 1 362 511 @b
-1 -1 459 529 1 1 458 511 @b
155 545 :M
1.046 .105([Waid_89, 3.2.2.2-3])J
299 545 :M
-.052(A = )A
f1_12 sf
(\306)S
378 545 :M
f0_12 sf
-.166(unconditional)A
497 545 :M
(yes)S
40 548 -1 1 552 547 1 40 547 @a
-1 -1 269 548 1 1 268 529 @b
-1 -1 363 548 1 1 362 529 @b
-1 -1 459 548 1 1 458 529 @b
297 564 :M
(r)S
-100 -100 :M
( )S
304 564 :M
(e)S
-100 -100 :M
( )S
312 564 :M
(l)S
-100 -100 :M
( )S
318 564 :M
(i)S
-100 -100 :M
( )S
324 564 :M
(a)S
-100 -100 :M
( )S
332 564 :M
(b)S
-100 -100 :M
( )S
341 564 :M
(l)S
-100 -100 :M
( )S
347 564 :M
(e)S
-100 -100 :M
( )S
355 564 :M
( )S
-100 -100 :M
( )S
361 564 :M
(b)S
-100 -100 :M
( )S
370 564 :M
(r)S
-100 -100 :M
( )S
377 564 :M
(o)S
-100 -100 :M
( )S
386 564 :M
(a)S
-100 -100 :M
( )S
394 564 :M
(d)S
-100 -100 :M
( )S
403 564 :M
(c)S
-100 -100 :M
( )S
411 564 :M
(a)S
-100 -100 :M
( )S
419 564 :M
(s)S
-100 -100 :M
( )S
427 564 :M
(t)S
-100 -100 :M
( )S
433 564 :M
( )S
-100 -100 :M
( )S
439 564 :M
(a)S
-100 -100 :M
( )S
447 564 :M
(s)S
-100 -100 :M
( )S
455 564 :M
(s)S
-100 -100 :M
( )S
463 564 :M
(u)S
-100 -100 :M
( )S
472 564 :M
(m)S
-100 -100 :M
( )S
484 564 :M
(p)S
-100 -100 :M
( )S
493 564 :M
(t)S
-100 -100 :M
( )S
499 564 :M
(i)S
-100 -100 :M
( )S
505 564 :M
(o)S
-100 -100 :M
( )S
514 564 :M
(n)S
-100 -100 :M
( )S
-1 -1 269 566 1 1 268 548 @b
155 582 :M
.5(2.3)A
281 582 :M
f1_12 sf
.085(\331)A
f0_12 sf
.221 .022( comp. restr.)J
396 582 :M
f1_12 sf
-.222(\331)A
f0_12 sf
-.166( true)A
499 582 :M
(no)S
-1 -1 269 584 1 1 268 566 @b
-1 -1 363 584 1 1 362 566 @b
-1 -1 459 584 1 1 458 566 @b
42 600 :M
-.174(Reliable broadcast)A
155 600 :M
.5(2.3)A
287 600 :M
f1_12 sf
-.265(\331)A
f0_12 sf
-.17( 3\245|A| < |P|)A
382 600 :M
f1_12 sf
-.265(\331)A
f0_12 sf
-.17( 3\245|A| < |P|)A
499 600 :M
(no)S
-1 -1 269 602 1 1 268 584 @b
-1 -1 363 602 1 1 362 584 @b
-1 -1 459 602 1 1 458 584 @b
155 618 :M
(4)S
280 618 :M
f1_12 sf
-.194(\331)A
f0_12 sf
-.131( 2\245|A|+1 < |P|)A
375 618 :M
f1_12 sf
-.194(\331)A
f0_12 sf
-.131( 2\245|A|+1 < |P|)A
497 618 :M
(yes)S
40 621 -1 1 552 620 1 40 620 @a
-1 -1 269 621 1 1 268 602 @b
-1 -1 363 621 1 1 362 602 @b
-1 -1 459 621 1 1 458 602 @b
300 637 :M
(a)S
-100 -100 :M
( )S
306 637 :M
(t)S
-100 -100 :M
( )S
310 637 :M
(t)S
-100 -100 :M
( )S
314 637 :M
(a)S
-100 -100 :M
( )S
320 637 :M
(c)S
-100 -100 :M
( )S
326 637 :M
(k)S
-100 -100 :M
( )S
333 637 :M
(e)S
-100 -100 :M
( )S
339 637 :M
(r)S
-100 -100 :M
( )S
344 637 :M
( )S
-100 -100 :M
( )S
348 637 :M
(c)S
-100 -100 :M
( )S
354 637 :M
(a)S
-100 -100 :M
( )S
360 637 :M
(n)S
-100 -100 :M
( )S
367 637 :M
(n)S
-100 -100 :M
( )S
374 637 :M
(o)S
-100 -100 :M
( )S
381 637 :M
(t)S
-100 -100 :M
( )S
385 637 :M
( )S
-100 -100 :M
( )S
389 637 :M
(p)S
-100 -100 :M
( )S
396 637 :M
(r)S
-100 -100 :M
( )S
401 637 :M
(e)S
-100 -100 :M
( )S
407 637 :M
(v)S
-100 -100 :M
( )S
414 637 :M
(e)S
-100 -100 :M
( )S
420 637 :M
(n)S
-100 -100 :M
( )S
427 637 :M
(t)S
-100 -100 :M
( )S
431 637 :M
( )S
-100 -100 :M
( )S
435 637 :M
(c)S
-100 -100 :M
( )S
441 637 :M
(o)S
-100 -100 :M
( )S
448 637 :M
(m)S
-100 -100 :M
( )S
458 637 :M
(m)S
-100 -100 :M
( )S
468 637 :M
(u)S
-100 -100 :M
( )S
475 637 :M
(n)S
-100 -100 :M
( )S
482 637 :M
(i)S
-100 -100 :M
( )S
486 637 :M
(c)S
-100 -100 :M
( )S
492 637 :M
(a)S
-100 -100 :M
( )S
498 637 :M
(t)S
-100 -100 :M
( )S
502 637 :M
(i)S
-100 -100 :M
( )S
506 637 :M
(o)S
-100 -100 :M
( )S
513 637 :M
(n)S
-100 -100 :M
( )S
-1 -1 269 639 1 1 268 621 @b
331 650 :M
(b)S
-100 -100 :M
( )S
338 650 :M
(e)S
-100 -100 :M
( )S
344 650 :M
(t)S
-100 -100 :M
( )S
348 650 :M
(w)S
-100 -100 :M
( )S
358 650 :M
(e)S
-100 -100 :M
( )S
364 650 :M
(e)S
-100 -100 :M
( )S
370 650 :M
(n)S
-100 -100 :M
( )S
377 650 :M
( )S
-100 -100 :M
( )S
381 650 :M
(h)S
-100 -100 :M
( )S
388 650 :M
(o)S
-100 -100 :M
( )S
395 650 :M
(n)S
-100 -100 :M
( )S
402 650 :M
(e)S
-100 -100 :M
( )S
408 650 :M
(s)S
-100 -100 :M
( )S
414 650 :M
(t)S
-100 -100 :M
( )S
418 650 :M
( )S
-100 -100 :M
( )S
422 650 :M
(p)S
-100 -100 :M
( )S
429 650 :M
(a)S
-100 -100 :M
( )S
435 650 :M
(r)S
-100 -100 :M
( )S
440 650 :M
(t)S
-100 -100 :M
( )S
444 650 :M
(i)S
-100 -100 :M
( )S
448 650 :M
(c)S
-100 -100 :M
( )S
454 650 :M
(i)S
-100 -100 :M
( )S
458 650 :M
(p)S
-100 -100 :M
( )S
465 650 :M
(a)S
-100 -100 :M
( )S
471 650 :M
(n)S
-100 -100 :M
( )S
478 650 :M
(t)S
-100 -100 :M
( )S
482 650 :M
(s)S
-100 -100 :M
( )S
-1 -1 269 652 1 1 268 639 @b
42 668 :M
-.201(Byzantine agreement)A
155 668 :M
.5(3.1)A
310 668 :M
f1_12 sf
-.247(\331)A
f0_12 sf
-.155( 3\245|A| < |P| \(Untraceability probabilistic if)A
-1 -1 269 670 1 1 268 652 @b
327 681 :M
-.134(authentication codes are necessary\))A
-1 -1 269 683 1 1 268 670 @b
155 699 :M
.5(3.1)A
291 699 :M
f1_12 sf
-.27(\331)A
f0_12 sf
-.187( A computationally restricted)A
497 699 :M
(yes)S
40 702 -1 1 552 701 1 40 701 @a
-1 -1 269 702 1 1 268 683 @b
-1 -1 459 702 1 1 458 683 @b
300 718 :M
(a)S
-100 -100 :M
( )S
306 718 :M
(t)S
-100 -100 :M
( )S
310 718 :M
(t)S
-100 -100 :M
( )S
314 718 :M
(a)S
-100 -100 :M
( )S
320 718 :M
(c)S
-100 -100 :M
( )S
326 718 :M
(k)S
-100 -100 :M
( )S
333 718 :M
(e)S
-100 -100 :M
( )S
339 718 :M
(r)S
-100 -100 :M
( )S
344 718 :M
( )S
-100 -100 :M
( )S
348 718 :M
(c)S
-100 -100 :M
( )S
354 718 :M
(a)S
-100 -100 :M
( )S
360 718 :M
(n)S
-100 -100 :M
( )S
367 718 :M
(n)S
-100 -100 :M
( )S
374 718 :M
(o)S
-100 -100 :M
( )S
381 718 :M
(t)S
-100 -100 :M
( )S
385 718 :M
( )S
-100 -100 :M
( )S
389 718 :M
(p)S
-100 -100 :M
( )S
396 718 :M
(r)S
-100 -100 :M
( )S
401 718 :M
(e)S
-100 -100 :M
( )S
407 718 :M
(v)S
-100 -100 :M
( )S
414 718 :M
(e)S
-100 -100 :M
( )S
420 718 :M
(n)S
-100 -100 :M
( )S
427 718 :M
(t)S
-100 -100 :M
( )S
431 718 :M
( )S
-100 -100 :M
( )S
435 718 :M
(c)S
-100 -100 :M
( )S
441 718 :M
(o)S
-100 -100 :M
( )S
448 718 :M
(m)S
-100 -100 :M
( )S
458 718 :M
(m)S
-100 -100 :M
( )S
468 718 :M
(u)S
-100 -100 :M
( )S
475 718 :M
(n)S
-100 -100 :M
( )S
482 718 :M
(i)S
-100 -100 :M
( )S
486 718 :M
(c)S
-100 -100 :M
( )S
492 718 :M
(a)S
-100 -100 :M
( )S
498 718 :M
(t)S
-100 -100 :M
( )S
502 718 :M
(i)S
-100 -100 :M
( )S
506 718 :M
(o)S
-100 -100 :M
( )S
513 718 :M
(n)S
-100 -100 :M
( )S
-1 -1 269 720 1 1 268 702 @b
331 731 :M
(b)S
-100 -100 :M
( )S
338 731 :M
(e)S
-100 -100 :M
( )S
344 731 :M
(t)S
-100 -100 :M
( )S
348 731 :M
(w)S
-100 -100 :M
( )S
358 731 :M
(e)S
-100 -100 :M
( )S
364 731 :M
(e)S
-100 -100 :M
( )S
370 731 :M
(n)S
-100 -100 :M
( )S
377 731 :M
( )S
-100 -100 :M
( )S
381 731 :M
(h)S
-100 -100 :M
( )S
388 731 :M
(o)S
-100 -100 :M
( )S
395 731 :M
(n)S
-100 -100 :M
( )S
402 731 :M
(e)S
-100 -100 :M
( )S
408 731 :M
(s)S
-100 -100 :M
( )S
414 731 :M
(t)S
-100 -100 :M
( )S
418 731 :M
( )S
-100 -100 :M
( )S
422 731 :M
(p)S
-100 -100 :M
( )S
429 731 :M
(a)S
-100 -100 :M
( )S
435 731 :M
(r)S
-100 -100 :M
( )S
440 731 :M
(t)S
-100 -100 :M
( )S
444 731 :M
(i)S
-100 -100 :M
( )S
448 731 :M
(c)S
-100 -100 :M
( )S
454 731 :M
(i)S
-100 -100 :M
( )S
458 731 :M
(p)S
-100 -100 :M
( )S
465 731 :M
(a)S
-100 -100 :M
( )S
471 731 :M
(n)S
-100 -100 :M
( )S
478 731 :M
(t)S
-100 -100 :M
( )S
482 731 :M
(s)S
-100 -100 :M
( )S
-1 -1 269 733 1 1 268 720 @b
42 749 :M
-.146(Fail-stop agreement)A
155 749 :M
.5(3.2)A
281 749 :M
f1_12 sf
.085(\331)A
f0_12 sf
.221 .022( comp. restr.)J
378 749 :M
-.153(unconditional )A
497 749 :M
(yes)S
40 752 -1 1 552 751 1 40 751 @a
-1 -1 269 752 1 1 268 733 @b
-1 -1 363 752 1 1 362 733 @b
-1 -1 459 752 1 1 458 733 @b
42 784 :M
f16_10 sf
.653 .065(Figure 2)J
127 784 :M
f15_10 sf
.371(Summary)A
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(schunter; page: 22 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 22 -)J
42 68 :M
f0_12 sf
.005 .001(Our solution described in 3.2 is based on )J
f3_12 sf
.011 .001(fail-stop Byzantine Agreement)J
f0_12 sf
.007 .001(, i.e. Byzantine Agreement with)J
42 83 :M
.241 .024(signatures and the additional property that as soon as the attacker forges signatures, all other participants)J
42 98 :M
-.126(will recognize this. This is realized by a provably secure \(one-time\) )A
f3_12 sf
-.151(signature scheme whose forgery by an)A
42 113 :M
-.429(unexpectedly powerful attacker is provable)A
f0_12 sf
(.)S
59 128 :M
.063 .006(The method can also be applied to realize )J
f3_12 sf
.125 .013(adaptive Byzantine Agreement)J
f0_12 sf
.089 .009(, i.e. Byzantine Agreement)J
42 143 :M
.506 .051(which can only be disrupted by an attacker who controls at least a third of all participants )J
f8_12 sf
.185(and)A
f0_12 sf
.494 .049( who can)J
42 158 :M
.807 .081(forge signatures \(5.1\). Other possible applications are payment systems, solving disputes about shared)J
42 173 :M
.089 .009(secrets, and signatures which cannot be shown round \(5.2 - 5.4\).)J
224 208 :M
f3_18 sf
-.397(Acknowledgements)A
42 233 :M
f0_12 sf
-.079(We are pleased to thank Andreas Pfitzmann for a vast amount of tricky ideas, and David Chaum for helpful)A
42 248 :M
1.32 .132(discussions the attack described in 2.2, which finally yields the protocol described in 2.4, about the)J
42 263 :M
.807 .081(signature scheme described in Section 3.2.1, and about the ideas in Chapter 5. We are also grateful to)J
42 278 :M
-.064(Birgit Baum-Waidner, Manfred B\232ttger, Axel Burandt, Klaus Echtle, and Tina Johnson for lots of valuable)A
42 293 :M
-.05(suggestions, and to the German Science Foundation \(DFG\) for financial support.)A
256 323 :M
f3_18 sf
-.436(References)A
42 346 :M
f0_12 sf
-.166(AlSc_83)A
104 346 :M
3.545 .354(Bowen Alpern, Fred B. Schneider: Key exchange Using 'Keyless Cryptography';)J
104 358 :M
-.011(Information Processing Letters 16 \(Feb. 1983\) 79-81.)A
42 373 :M
-.053(BeGW_88)A
104 373 :M
2.053 .205(Michael Ben-Or, Shafi Goldwasser, Avi Wigderson: Completeness theorems for non-)J
104 385 :M
.132 .013(cryptographic fault-tolerant distributed computation; 20th STOC, ACM, New York 1988, 1-)J
104 397 :M
.5(10.)A
42 412 :M
(BoBo_89)S
104 412 :M
1.782 .178(Jurjen Bos, Bert den Boer: Detection of Disrupters in the DC Protocol; Eurocrypt '89)J
104 424 :M
-.061(Abstracts; Houthalen, April 1989.)A
42 439 :M
(BrCC_88)S
104 439 :M
-.014(Gilles Brassard, David Chaum, Claude Cr\216peau: Minimum Disclosure Proofs of Knowledge;)A
104 451 :M
-.034(Journal of Computer and System Sciences 37 \(1988\) 156-189.)A
42 466 :M
-.054(Bura_88)A
104 466 :M
.684 .068(Axel Burandt: Informationstheoretisch unverkettbare Beglaubigung von Pseudonymen mit)J
104 478 :M
.24 .024(beliebigen Signatursystemen; Studienarbeit, Institut f\237r Rechnerentwurf und Fehlertoleranz,)J
104 490 :M
-.02(Universit\212t Karlsruhe, May 1988.)A
42 505 :M
-.166(CGMA_85)A
104 505 :M
.529 .053(Benny Chor, Shafi Goldwasser, Silvio Micali, Baruch Awerbuch: Verifiable secret sharing)J
104 517 :M
.569 .057(and achieving simultaneity in the presence of faults \(extended abstract\); 26th FOCS, IEEE)J
104 529 :M
.168 .017(Computer Society, 1985, 383-395.)J
42 544 :M
-.055(Cha3_85)A
104 544 :M
-.081(David Chaum: The Dining Cryptographers Problem. Unconditional Sender Anonymity; Draft,)A
104 556 :M
.289 .029(rec. May 13, 1985.)J
42 571 :M
-.111(ChAn_89)A
104 571 :M
1.578 .158(David Chaum, Hans van Antwerpen: Undeniable Signatures; Draft, rec. July 21, 1989,)J
104 583 :M
.359 .036(announced for Crypto'89.)J
42 598 :M
-.055(Chau_88)A
104 598 :M
.923 .092(David Chaum: The Dining Cryptographers Problem: Unconditional Sender and Recipient)J
104 610 :M
-.06(Untraceability; Journal of Cryptology 1/1 \(1988\) 65-75.)A
42 625 :M
-.047(Chau1_89)A
104 625 :M
.653 .065(David Chaum: The Spymasters Double-Agent Problem \320 Multiparty Computations Secure)J
104 637 :M
.236 .024(Unconditionally from Minorities and Cryptographically from Majorities; rec. July 21, 1989,)J
104 649 :M
.286 .029(announced for Crypto '89.)J
42 664 :M
-.047(Chau2_89)A
104 664 :M
-.112(David Chaum: Private communication; April 12, 1989.)A
42 679 :M
-.047(Chau3_89)A
104 679 :M
-.088(David Chaum: Private communication; July 21, 1989.)A
42 694 :M
-.096(ChCD1_88)A
104 694 :M
.564 .056(David Chaum, Claude Cr\216peau, Ivan Damg\214rd: Multiparty unconditional secure protocols;)J
104 706 :M
.142 .014(20th STOC, ACM, New York 1988, 11-19.)J
42 721 :M
-.055(ChDG_88)A
104 721 :M
.806 .081(David Chaum, Ivan B. Damg\214rd, Jeroen van de Graaf: Multiparty Computations ensuring)J
104 733 :M
.202 .02(privacy of each party\253s input and correctness of the result; Crypto '87, LNCS 293, Springer-)J
104 745 :M
.065 .007(Verlag, Berlin 1988, 87-119.)J
42 760 :M
.11(ChFN_88)A
104 760 :M
.617 .062(David Chaum, Amos Fiat, Moni Naor: Untraceable Electronic Cash; Crypto '88 Abstracts,)J
104 772 :M
.16 .016(August 1988.)J
42 787 :M
-.221(Damg_88)A
104 787 :M
1.649 .165(Ivan Bjerre Damg\214rd: Collision free hash functions and public key signature schemes;)J
104 799 :M
.217 .022(Eurocrypt '87, LNCS 304, Springer-Verlag, Heidelberg 1988, 203-216.)J
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(schunter; page: 23 of 23)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
285 44 :M
f0_10 sf
.138 .014(- 23 -)J
42 66 :M
f0_12 sf
-.164(DiHe_76)A
104 66 :M
-.04(Whitfield Diffie, Martin E. Hellman: New Directions in Cryptography; IEEE Transactions on)A
104 78 :M
-.014(Information Theory, IT-22/6 \(1976\) 644-654.)A
42 93 :M
-.221(Dole_81)A
104 93 :M
.959 .096(Danny Dolev: The Byzantine Generals Strike Again; Dep. of Comp. Sc., Stanford Univ.,)J
104 105 :M
-.053(Report STAN-CS-81-846, March 1981; appeared in: Journal of Algorithms 3/1 \(1982\) 14-30.)A
42 120 :M
-.111(DoSt_83)A
104 120 :M
1.164 .116(Danny Dolev, H. Raymond Strong: Authenticated Algorithms for Byzantine Agreement;)J
104 132 :M
.159 .016(SIAM J. Comput. 12/4 \(1983\) 656-666.)J
42 147 :M
-.166(FeMi_88)A
104 147 :M
-.075(Paul Feldman, Silvio Micali: Optimal algorithms for byzantine agreement; 20th STOC, ACM,)A
104 159 :M
.326 .033(New York 1988, 148-161.)J
42 174 :M
-.053(GaHY_88)A
104 174 :M
2.031 .203(Zvi Galil, Stuart Haber, Moti Yung: Cryptographic computation: secure fault-tolerant)J
104 186 :M
.592 .059(protocols and the public-key model; Crypto '87, LNCS 293, Springer-Verlag, Berlin 1988,)J
104 198 :M
.144(135-155.)A
42 213 :M
-.056(GiMS_74)A
104 213 :M
.393 .039(E. N. Gilbert, F. J. Mac Williams, N. J. A. Sloane: Codes which detect deception; The Bell)J
104 225 :M
-.04(System Technical Journal BSTJ 53/3 \(1974\) 405-424.)A
42 240 :M
-.131(GMW_87)A
104 240 :M
1.492 .149(Oded Goldreich, Silvio Micali, Avi Wigderson: How to play any mental game - or - a)J
104 252 :M
1.111 .111(completeness theorem for protocols with honest majority; 19th STOC, ACM, New York)J
104 264 :M
.872 .087(1987, 218-229.)J
42 279 :M
-.109(GMW1_87)A
104 279 :M
.613 .061(Oded Goldreich, Silvio Micali, Avi Wigderson: How to Prove All NP Statements in Zero-)J
104 291 :M
.569 .057(Knowledge and a Methodology of Cryptographic Protocol Design; Crypto '86, LNCS 263,)J
104 303 :M
.009 .001(Springer-Verlag, Berlin 1987, 171-185.)J
42 318 :M
-.055(GoM1_86)A
104 318 :M
.101 .01(Oded Goldreich, Silvio Micali, Avi Wigderson: Proofs that Yield Nothing But their Validity)J
104 330 :M
.056 .006(and a Methodology of Cryptographic Protocol Design; 27th FOCS, IEEE Computer Society,)J
104 342 :M
.872 .087(1986, 174-187.)J
42 357 :M
-.056(GoMR_88)A
104 357 :M
1.422 .142(Shafi Goldwasser, Silvio Micali, Ronald L. Rivest: A Digital Signature Scheme Secure)J
104 369 :M
-.065(Against Adaptive Chosen-Message Attacks; SIAM J. Comput. 17/2 \(1988\) 281-308.)A
42 384 :M
.058(GrPe_88)A
104 384 :M
.807 .081(Jeroen van de Graaf, Ren\216 Peralta: A simple and secure way to show the validity of your)J
104 396 :M
.14 .014(public key; Crypto '87, LNCS 293, Springer-Verlag, Berlin 1988, 128-134.)J
42 411 :M
-.164(Merk_80)A
104 411 :M
2.298 .23(Ralph C. Merkle: Protocols for Public Key Cryptosystems; Proceedings of the 1980)J
104 423 :M
-.039(Symposium on Security and Privacy, April 1980 Oakland, California, 122-134.)A
42 438 :M
-.141(Merk1_82)A
104 438 :M
.836 .084(Ralph C. Merkle: Secrecy, Authentication, and Public Key Systems; UMI Research Press)J
104 450 :M
.25(1982.)A
42 465 :M
-.164(Merk_88)A
104 465 :M
-.062(Ralph C. Merkle: A digital signature based on a conventional encryption function; Crypto '87,)A
104 477 :M
.144 .014(LNCS 293, Springer-Verlag, Berlin 1988, 369-378.)J
42 492 :M
(PeSL_80)S
104 492 :M
.885 .088(Marshall Pease, Robert Shostak, Leslie Lamport: Reaching Agreement in the Presence of)J
104 504 :M
-.05(Faults; Journal of the ACM 27/2 \(1980\) 228-234.)A
42 519 :M
(Pfi1_85)S
104 519 :M
.577 .058(Andreas Pfitzmann: How to implement ISDNs without user observability - Some remarks;)J
104 531 :M
-.055(Fakult\212t f\237r Informatik, Universit\212t Karlsruhe, Interner Bericht 14/85.)A
42 546 :M
-.055(Pfit_89)A
104 546 :M
4.394 .439(Andreas Pfitzmann: Diensteintegrierende Kommunikationsnetze mit Teilnehmer-)J
104 558 :M
-.044(\237berpr\237fbarem Datenschutz; Univ. Karlsruhe, Fakult\212t f\237r Informatik, Dissertation, 1989.)A
42 573 :M
-.047(Pfit1_89)A
104 573 :M
1.45 .145(Birgit Pfitzmann: F\237r den Unterzeichner unbedingt sichere digitale Signaturen und ihre)J
104 585 :M
-.032(Anwendung; Diplomarbeit am Institut f\237r Rechnerentwurf und Fehlertoleranz der Universit\212t)A
104 597 :M
-.014(Karlsruhe, September 1989, in preparation.)A
42 612 :M
-.055(Rab1_80)A
104 612 :M
.731 .073(Michael O. Rabin: Probabilistic Algorithms in Finite Fields; SIAM J. Comput. 9/2 \(1980\))J
104 624 :M
.144(273-280.)A
42 639 :M
-.055(Reis_87)A
104 639 :M
.16 .016(R\237diger Reischuk: Konsistenz und Fehlertoleranz in Verteilten Systemen - Das Problem der)J
104 651 :M
.454 .045(Byzantinischen Gener\212le; 17. GI Jahrestagung, IFB 156, Springer-Verlag, Berlin 1987, 65-)J
104 663 :M
.5(81.)A
42 678 :M
-.056(Sim3_88)A
104 678 :M
-.071(Gustavus J. Simmons: A Survey of Information Authentication; Proceedings of the IEEE 76/5)A
104 690 :M
.425 .043(\(1988\) 603-620.)J
42 705 :M
-.164(Waid_89)A
104 705 :M
1.313 .131(Michael Waidner: Unconditional Sender and Recipient Untraceability in spite of Active)J
104 717 :M
.364 .036(Attacks; Universit\212t Karlsruhe 1989; will be published in the Proceedings of Eurocrypt '89,)J
104 729 :M
.061 .006(LNCS, Springer-Verlag, Berlin 1989.)J
42 744 :M
-.053(WaPf_89)A
104 744 :M
.652 .065(Michael Waidner, Birgit Pfitzmann: Unconditional Sender and Recipient Untraceability in)J
104 756 :M
1.08 .108(spite of Active Attacks \320 Some Remarks; Fakult\212t f\237r Informatik, Universit\212t Karlsruhe,)J
104 768 :M
-.058(Interner Bericht 5/89, March 1989.)A
42 783 :M
-.164(WeCa_81)A
104 783 :M
-.029(Mark N. Wegman, J. Lawrence Carter: New Hash Functions and Their Use in Authentication)A
104 795 :M
-.061(and Set Equality; Journal of Computer and System Sciences 22 \(1981\) 265-279.)A
endp
%%Trailer
end		% md
%%EOF
