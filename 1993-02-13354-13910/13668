Path: msuinfo!uwm.edu!cs.utexas.edu!qt.cs.utexas.edu!news.Brown.EDU!noc.near.net!transfer.stratus.com!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: sci.crypt
Subject: Re: What's wrong with this picture?
Date: 17 Feb 1993 19:20:06 GMT
Organization: Stratus Computer, Software Engineering
Lines: 37
Message-ID: <1lu356$liv@transfer.stratus.com>
References: <1993Feb12.190649.1886@cactus.org> <1993Feb15.151943.1@zodiac.rutgers.edu> <C2K1vL.yq@jabba.ess.harris.com>
NNTP-Posting-Host: ellisun.sw.stratus.com

In article <C2K1vL.yq@jabba.ess.harris.com> mvm@epg.harris.com (Matt Mahoney) writes:
>I had proposed encryption of plaintext P into ciphertext C by XOR with 
>the PRNG sequence R based on a one-way hash function h(), (specifically 
>MD5):
>
>  R[i] = h(key + i)
>  C[i] = P[i] xor R[i]
>
>and it was pointed out that this might not be cryptographically secure.
>The computational infeasability of finding x from h(x) does not
>imply that it is infeasable to find x,y from h(x),h(y), when a
>relationship y=f(x) is known.

	[ . . . ]

>1. Is it possible to generate a cipher using h() so that it is 
>not subject to sequence based attacks?  


Check out an article by Ron Rivest in one of the early Cryptologias.

Translated into your terms, his idea was:

	have two PRNG functions h(i) and k(i), such that you can't
	learn h(i-1) from h(i) but you might learn h(i) from h(i-1) --
	ditto with k().

	Encrypt an N byte message, m(i), as:

	c(i) = m(i) xor h(i) xor k(N-i)

 - Carl
-- 
 - <<Disclaimer: All opinions expressed are my own, of course.>>
 - Carl Ellison                                        cme@sw.stratus.com
 - Stratus Computer Inc.       M3-2-BKW                TEL: (508)460-2783
 - 55 Fairbanks Boulevard ; Marlborough MA 01752-1298  FAX: (508)624-7488
