Newsgroups: sci.crypt
Path: msuinfo!caen!uunet!nntp.telebit.com!phr
From: phr@telebit.com (Paul Rubin)
Subject: Re: What's wrong with this picture?
In-Reply-To: cbbrowne@csi.uottawa.ca's message of Wed, 10 Feb 93 22:05:07 GMT
Message-ID: <PHR.93Feb11123607@napa.telebit.com>
Sender: news@telebit.com
Nntp-Posting-Host: napa
Organization: Telebit Corporation; Sunnyvale, CA, USA
References: <3598@blue.cis.pitt.edu> <1993Feb10.220507.17664@csi.uottawa.ca>
Date: Thu, 11 Feb 1993 20:36:07 GMT
Lines: 43

In article <1993Feb10.220507.17664@csi.uottawa.ca> cbbrowne@csi.uottawa.ca (Christopher Browne) writes:

   In article <3598@blue.cis.pitt.edu> wbdst+@pitt.edu (William B Dwinnell) writes:
   >
   >I have been thinking about an encryption system which seems simple enough
   >to implement, but I can' think of what might be wrong with it...
   >
   >Here's how it works (not that this is any great invention...) 
   >
   >First, we know that any stream CORxxx [sorry] XORed with a random stream
   >is a random stream.  Second, we have pseudorandom number generators 
   >which have fairly long cycles, and if they're not long enough, we can
   >make them longer, by XORing 2 or more random number strams streams
   >together, as long as they don't have the same cycle, ixx right? (This
   >may be a time performance problem.) So, all we need do is build this 
   >random number generator which is really powerful, in terms of the
   >size of its cycle, then XOR it with the clear text, and voila! it is
   >encrypted.  I know that one of th xxx strengths of the prime number
   >schemes is that searching for the numbers involves searching
   >trial-and-error (possibly with heuristics added) adds upoxxx up
   >to a lot of work, if you want to break the encryption system. 
   >I'm not saying that this is a good system, but what is wrong with it?

   What's wrong with the system is that there still is a cycle.  If one
   RNG has a cycle of 10000 and the other has a cycle of 20000, then it's
   POSSIBLE that the joint cycle is 10000x20000, or 20,000,000.  (On the
   other hand, there may be some cancelling, so that the joint cycle
   might be a lot less).

   The point is that the combined RNG function can probably be
   simplified, so that you essentially wind up with a "single" RNG.  

It's much worse than this.  Here's a method I thought up in about 2 minutes
last time someone asked this question (the question should go in the FAQ).
Maybe a better method is available.

Let x[i] be the output of the first generator, y[i] the second, and
let the periods be A and B respectively.  Say you encrypt a big
block of zeros so the output is z[i] = x[i] ^ y[i].  Now the first
A+B words of output give you a very sparse system of A+B linear
equations in A+B unknowns, since xor is just addition mod 2.
(Here the x[i] and y[i] are the unknowns and the z[i] are known).
Look in any numerical analysis book to learn how to solve such systems.
