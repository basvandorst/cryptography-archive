Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!darwin.sura.net!jhunix.hcf.jhu.edu!fmsrl7!ukma!jedwards
From: jedwards@ms.uky.edu (Jonathan Edwards)
Subject: Zero knowledge proofs again
Message-ID: <C2rpC4.CzE@ms.uky.edu>
Organization: University Of Kentucky, Dept. of Math Sciences
Date: Sat, 20 Feb 1993 22:04:51 GMT
Lines: 29


I am trying to figure out a zero-knowledge interactive proof that
demonstrates the prover knows a square root t of x modulo N.  The
protocol is as follows (note: if prover does not cheat, x = t^2 mod N):

Prover: Choose r randomly with 1<r<N, gcd(r,N) = 1.  Compute y = r^2 mod N.
        Send y to Verifier.

Verifier: Set b = 0 or b = 1 randomly.  Send b to Prover.

Prover: Compute z = t^b r mod N.  Send z to Verifier.

Verifier: If z^2 = x^b y mod N, Prover knows a square root of x with
          probability 1/2.  Repeat protocol k times to increase
          likelihood Prover actually knows a square root of x.

I am having the following difficulty:

If the verifier chooses b=0, the verifier receives no information about
t.  If the prover knew in advance that the verifier would never send b=1,
the prover could "prove" knowledge of a square root of x without actually
possessing that knowledge.  Therefore it is important that the verifier
run the protocol more than once and choose b=1 at least once.

Given this, I don't understand what deception the prover can perpetrate if
the verifier never sends b=0.  In other words, how can the prover cheat
if the prover knows in advance that the verifier will always send b=1?

Any help greatly appreciated.
