Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!cs.utexas.edu!asuvax!ukma!psuvax1!babel.cs.psu.edu!so
From: so@babel.cs.psu.edu (Nicol C So)
Subject: Re: Zero knowledge proofs again
Message-ID: <C2vD69.H1E@cs.psu.edu>
Sender: news@cs.psu.edu (Usenet)
Nntp-Posting-Host: babel.cs.psu.edu
Organization: Penn State Computer Science
References: <C2rpC4.CzE@ms.uky.edu>
Date: Mon, 22 Feb 1993 21:32:32 GMT
Lines: 29

In article <C2rpC4.CzE@ms.uky.edu> jedwards@ms.uky.edu (Jonathan Edwards) writes:
>
>I am trying to figure out a zero-knowledge interactive proof that
>demonstrates the prover knows a square root t of x modulo N.  The
>protocol is as follows (note: if prover does not cheat, x = t^2 mod N):
>
>Prover: Choose r randomly with 1<r<N, gcd(r,N) = 1.  Compute y = r^2 mod N.
>        Send y to Verifier.
>
>Verifier: Set b = 0 or b = 1 randomly.  Send b to Prover.
>
>Prover: Compute z = t^b r mod N.  Send z to Verifier.
>
>Verifier: If z^2 = x^b y mod N, Prover knows a square root of x with
>          probability 1/2.  Repeat protocol k times to increase
>          likelihood Prover actually knows a square root of x.
>
>I am having the following difficulty:
>
>...
>
>Given this, I don't understand what deception the prover can perpetrate if
>the verifier never sends b=0.  In other words, how can the prover cheat
>if the prover knows in advance that the verifier will always send b=1?

If b is always 1, there is no demonstration that y is a quadratic residue.
Remember that 2 nonresidues can multiply to a residue.

Is this a homework problem?
