Path: msuinfo!uwm.edu!cs.utexas.edu!sun-barr!rutgers!igor.rutgers.edu!zodiac.rutgers.edu!leichter
From: leichter@zodiac.rutgers.edu
Newsgroups: sci.crypt
Subject: Re: What's wrong with this picture?
Message-ID: <1993Feb15.151943.1@zodiac.rutgers.edu>
Date: 15 Feb 93 20:19:43 GMT
References: <3598@blue.cis.pitt.edu> <C2Ax51.Mo4@jabba.ess.harris.com> <C2CApq.197@jabba.ess.harris.com> <1993Feb12.190649.1886@cactus.org>
Sender: news@igor.rutgers.edu
Organization: Rutgers University Department of Computer Science
Lines: 51
Nntp-Posting-Host: pisces.rutgers.edu

In article <1993Feb12.190649.1886@cactus.org>, ritter@cactus.org
(Terry Ritter) writes:
|     3) Personally, I find something basically strange about saying
|     "well, the internal function is not secure if you go through
|     it once, but since we go through it <n| times, it must be
|     secure."  This is almost like saying that we could start with
|     any of our simple ciphers, and we only need iterate them enough
|     to make them secure.  Is there something special about
|     Substitution/Permutation functions which makes repeated
|     application work better than for other cipher functions?  I see
|     no reason to believe this, so I distrust the fundamental logic.

Actually, there IS a reason to believe that this approach works, described
in the article that originally suggested it:  Shannon's classic paper on
cryptography (the title of which escapes me, but he wrote it during WW II
and it remained classified until the early 1950's, when it appeared in the
Bell System Technical Journal).  Shannon started with a statistical notion
of a mixing function.  Essentially, a mixing function has the property that
it "spreads out" any regularities in its input.  For example, suppose you
divided your input space into two equal-sized regions, and colored the points
in one region red and those in the other green.  Now you apply the mixing
function, coloring the result points to new points with the same color.
Then essentially any subset you choose of the output space will have half
green points and half red points.  (Obviously, you could choose as a subset
"points that are the images of green points under the mixing function".  This
is a STATISTICAL result, and of course needs to be carefully defined.)

Shannon observed that any good cryptographic function had to be a mixing
function (in modern terms, this says that it keeps all partial information
secure), and also that, at least with respect to statistical attacks (in
essense all he was looking at), any mixing function would likely BE a good
cryptographic function.

So, how to find mixing functions?  Well, there's a theorem of Hopf, the
details of which I've never looked up, which says more or less that if you
repeatedly iterate a pair of functions that don't commute with each other,
you get a mixing function.  (Again, this isn't ALWAYS true.)  Hopf's result
is often described by saying that if you take a blob of dough and repeatedly
roll it out flat, then fold horizontally; roll it again, then fold vertically
(two operations that don't commute); then you'll "completely mix the dough".
Shannon suggested alternating substitutions and permutations - which don't,
in general, commute - provided a good way to create mixing functions over
finite domains.  Each of the individual functions does a poor job of mixing,
but if you repeat them enough times, you get good mixing (and cryptographic)
properties.  Until the recent work on differential cryptanalysis, little was
known publically about how many repetitions you needed; but that work makes
clear that there IS a "right" number of repetitions, in the sense that if you
use fewer, you are subject to differential cryptanalysis; and if you use more,
you are no more secure.  So Shannon's insight seems to have been born out in
practice.
							-- Jerry
