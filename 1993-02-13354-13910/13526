Path: msuinfo!caen!zaphod.mps.ohio-state.edu!usc!cs.utexas.edu!sun-barr!west.West.Sun.COM!news2me.EBay.Sun.COM!seven-up.East.Sun.COM!nemesis!hoppie
From: hoppie@nemesis.East.Sun.COM (Tom Hopkins)
Newsgroups: sci.crypt
Subject: Re: Decimals
Date: 10 Feb 1993 03:09:33 GMT
Organization: Sun Microsystems, Inc., Billerica, MA. 
Lines: 34
Distribution: world
Message-ID: <1l9rle$7os@seven-up.East.Sun.COM>
References: <65190022@hpl-opus.hpl.hp.com>
Reply-To: hoppie@nemesis.East.Sun.COM
NNTP-Posting-Host: nemesis.east.sun.com

In article 65190022@hpl-opus.hpl.hp.com, jewett@hpl-opus.hpl.hp.com (Bob Jewett) writes:
>Use "bc -l".  To get lots of places, multiply the original number by a large
>power of 10:
>
>For the square root of 2, input:
>x=2*10^2000;sqrt(x)
>output:
>141421356237309504880168872420969807856967187 (etc, for over 1000 places)

I got about 1000 places of sqrt(2) doing this.  Suppose I want more
than that, say a million?  More importantly, suppose I want to include
it in a piece of code where forking to bc would be more overhead than I
really want to deal with?  For example, there was a recent posting
somewhere on the net (I don't think here) describing a fast method of
computing pi which required a measurement of sqrt(2) accurate to
whatever length you wanted pi to.  It might be an interesting thing to
do with spare cycles.

>> Are there any algorhythms ...
>
>Surely you don't want to waste time with such things when it's already
>programmed in "bc".

I would.  I don't mean to flame, but if a person requests algorithms,
surely one should offer algorithms?  Certainly a pointer to bc is good
as well, but not as a whole response.

By the way, I would be interesting in seeing such an algorithm as well,
if anyone was thinking of sending one.

-Tom Hopkins <hoppie@turbo.east.sun.com>
I don't speak for my employer.  It's not my department.


