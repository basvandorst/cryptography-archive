Path: msuinfo!uwm.edu!cs.utexas.edu!usc!howland.reston.ans.net!gatech!rutgers!igor.rutgers.edu!zodiac.rutgers.edu!leichter
From: leichter@zodiac.rutgers.edu
Newsgroups: sci.crypt
Subject: Re: US Treasury to use digital signatures
Message-ID: <1993Feb25.105036.1@zodiac.rutgers.edu>
Date: 25 Feb 93 15:50:36 GMT
References: <C2vG8o.5Mv@panix.com> <1mdkmh$6kr@transfer.stratus.com>
Sender: news@igor.rutgers.edu
Organization: Rutgers University Department of Computer Science
Lines: 47
Nntp-Posting-Host: pisces.rutgers.edu

In article <1mdkmh$6kr@transfer.stratus.com>, cme@ellisun.sw.stratus.com
(Carl Ellison) writes:
||[Report that the US Treasury will start requiring many participants to 
||use electronic ... public-key signatures, the kind that make it impossible
||							  ^^^^^^^^^^^^^^^^^^
||for one to deny having signed something.
||^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| 
| Nice theory, but too simple.
| 
| I can always deny signing something by claiming that my private key was
| compromised.  I can even deliberately let it be known, if it's important
| enough to get out of a signature.
| 
| The trick, I now suspect, is to have the same signature tied to something
| (like my bank account) which I *really* want to keep private, so that the
| penalty for compromise is severe and key privacy is self-enforcing.
| 
| Any other ways to achieve this?

There's some very nice work by two people at Bell Labs (whose names I can't
recall, and I don't have the papers here) on how to efficiently produce
unforgeable digital timestamps.  This is a much trickier problem than it first
appears to be, but they have a nice solution.  Given timestamps, we can then
require that messages be not just signed but dated.  If my key becomes compro-
mised, I revoke all my signatures from some time on.  By looking at the
timestamp that goes with the signature, we can determine whether it was
created before or after the compromise, and discard it if "after".

An interesting and very useful side-effect is that it becomes possible for
someone to issue new signatures.  Consider the situation now:  I can certainly
announce, in a signed message, that my signature has been compromised, and
include a new signature key for later messages; but why should anyone believe
the message?  After all, if my signature was compromised, the announcement of
a new key may be coming from someone OTHER than me!  In fact, there is no way
at all, within the system, for me ever to re-establish myself.

With unforgeable timestamps, there's an easy solution.  I create TWO
signature keys, only one of which I will distribute.  I also create and
save a dated revokation message containing the new signature key.  Later, I
can send that message out, and a receiver can prove that it was created before
my original announcement of a signature key, hence presumably before anyone
could have compromised it.  (Of course, before I send this message out, I
create another "replacement" key and a new signed, dated revokation message,
so that I can repeat the process later if necessary.)

							-- Jerry
