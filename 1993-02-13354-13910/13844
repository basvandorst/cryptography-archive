Newsgroups: sci.crypt
Path: msuinfo!caen!sol.ctr.columbia.edu!jabba.ess.harris.com!caesun6!mvm
From: mvm@caesun6.epg.harris.com (Matt Mahoney)
Subject: Re: Is this CRC algorithm non-stupid?
Message-ID: <C30CvH.E0I@jabba.ess.harris.com>
Keywords: crc algorithm
Sender: usenet@jabba.ess.harris.com (Usenet News Feed Account)
Nntp-Posting-Host: su3f.ess.harris.com
Reply-To: mvm@epg.harris.com (Matt Mahoney)
Organization: Engineering Productivity Group, Harris Corp., Melbourne, FL
References: <2246@spam.maths.adelaide.edu.au>
Date: Thu, 25 Feb 1993 14:14:04 GMT
Expires: Thu, 25 Feb 1993 05:00:00 GMT
Lines: 22

ross@spam.maths.adelaide.edu.au (Ross Williams) writes:

>   checksum(m[    ]) = 0
>   checksum(m[1..n]) = (3*checksum(m[1..n-1]) + m[n] + 1) mod 65536
>
>(where m is the message, being a string of bytes each of which has a
> value in the range [0,255]).

The checksum could miss certain types of 3-bit errors, such as where a
byte is too large by 1 and the next byte is too small by 3.  A good
16 bit checksum should catch all errors of 15 or fewer bits, and all
larger errors with probability 1-2^16 (0.999984).

A good checksum might be CRC-16, where you divide modulo 2 (i.e. XOR 
instead of subtract) your message by 0x18005 (USA) or 0x11021 (CCITT) 
and use the remainder as your checksum.  A fast implementation 
processes a byte at a time using a 256 element lookup table.

--------------------------------        _\/_
Matt Mahoney, mvm@epg.harris.com       |(TV)|  Drug of the Nation
#include <disclaimer.h>                |____|

