Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!sdd.hp.com!saimiri.primate.wisc.edu!ames!agate!rsoft!mindlink!a42
From: Marc_North@mindlink.bc.ca (Marc North)
Subject: Re: The Challenge
Organization: MIND LINK! - British Columbia, Canada
Date: Thu, 18 Feb 1993 22:00:33 GMT
Message-ID: <21103@mindlink.bc.ca>
Sender: news@deep.rsoft.bc.ca (Usenet)
Lines: 88

> Peter Davidson writes:
>
> lwloen@rchland.vnet.ibm.com (Larry Loen)
> >I'm not up to that particular kind of challenge, but I do
> >have one or two practical suggestions:
> >
> >1)  That Mr. Davison be asked to name the "commercially-available
> >encryption algorithm".
>
> Certainly.  This algorithm is the one (whatever it is) implemented in a
> program called "Dolphin Encrypt".  It is an MS-DOS file (and floppy disk)
> encryption package.

Perhaps this is a naive question, but what is your motive behind wanting us
to crack this particular algorithm? I could understand wanting to test your
own software with your own algorithm, but why "Dolphin Encrypt"'s? Are you
just trying to get an idea of how secure it is or what? Please don't
misunderstand me, I'm not accusing you of anything suspicious, but I'm just
genuinely curious about what it is you hope to gain if someone cracks the
cryptogram you gave us.

> >2)  It might be worthwhile ... to ask Mr. Davidson
> >  to encrypt a couple of chosen texts (especially several files of
> >  binary zeroes of differing lengths) to see what you can see.  The
> >  key would, of course, be the same as the challenge cipher.
>
> Be happy to do so.  Specify your plaintext.  I can encrypt files
> of binary zeroes (how many?) if you wish.  (As to the key, see below.)

Yes, I'd love to have a file of >1024 binary zeroes encrypted with the same
key you used for this most recent message. If you could as well please use
UUENCODE on the binary ciphertext.

> The program gives you a choice of encryption to binary or to text.
> (The latter is for sending encrypted data as email, since apparently
> the publisher reckoned that not all users would have UUENCODE.)
> When you encrypt to text it comes out looking a lot like uuencoded
> data, as Mr North noted, but whether it really is uuencoded is
> not clear.  The binary-output ciphertext looks pretty random.  I
> could upload either uuencoded binary ciphertext (as below) or
> untouched text ciphertext, as you wish.

My rough estimation is the "Dolphin Encrypt" is using UUENCODE but may have
made some kind of modification to it. I really don't know. I'd have to
compare a UUENCODED ct with a "Dolphin Encrypt" text output on the same
binary ct.

>
> No tricks.  Appears to be genuine encryption.

Agreed, it does seem to be.

> This is the same passage as before (from "The Code Breakers") with the
> difference that (i) no information is given about the key and (ii) this is
> uuencoded binary ciphertext.
>
> [...]
>
> Since not all readers of sci.crypt are expert cryptanalysts
> I think that us amateurs would find it interesting to follow a
> case study of a chosen plaintext cryptanalytic attack, and such
> an opportunity presents itself here.


Being such an amateur, I hope to 'cut my teeth' on this challenge. ( God help
me but I think I've bit off more than I can chew )

Could I ask for one last bit of information? How many bytes was the
plaintext?

Many thank for the follow up Peter. I'll be doing my best to crack this.

Cheers all,

Marc


--
Marc North  --  The Lanceholder's Group

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: 2.1

mQBNAitOMA8AAAECALfoIFIfQ7FuuKgkR644+hU9JHmXNsN/ydLZ7YNivs+S4veP
nUY/bZD5ydTCDZWXJb67tJjdkK+m4D/fH7N5iBUABRG0KU1hcmMgVy4gTm9ydGgg
PE1hcmNfTm9ydGhAbWluZGxpbmsuYmMuY2E+
=vaZ0
-----END PGP PUBLIC KEY BLOCK-----
