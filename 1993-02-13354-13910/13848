Path: msuinfo!uwm.edu!caen!malgudi.oar.net!uoft02.utoledo.edu!anwsun.phya.utoledo.edu!jsteiner
Newsgroups: sci.crypt
Subject: Re: encryption
Message-ID: <1993Feb25.095221.2050@uoft02.utoledo.edu>
From: jsteiner@anwsun.phya.utoledo.edu (jason 'Think!' steiner)
Date: 25 Feb 93 09:52:20 EST
References: <1993Feb25.103557.11350@mnemosyne.cs.du.edu>
Nntp-Posting-Host: anwsun.phya.utoledo.edu
X-Newsreader: Tin 1.1 PL4
Lines: 31

mcodogno@nyx.cs.du.edu (Maurizio Codogno) writes:
> gtoal@gtoal.com (Graham Toal) writes:
> >Gosh, that's novel. Don't think anyone here has ever thought of 
> >using xor as a crypt function.  Maybe you should patent it.
> 
> I was told that when the key to be XORed is used once and is of the 
> same length of the text, the crypted message is unbreakable. So the 
> original poster is not so silly, after all...

well, you also have to make sure the key is random "enough". on that 
subject, how well do chaotic systems work as PRNGs? i remember 
someone a few months ago talking about hooking up a complex pendulum 
to some sort of measuring device & using the low bits from it as a 
random number stream. how well could such a thing be emulated in
software?

(i.e. take some chaotic function & make a key consisting of the initial
 conditions. since any slight variation in the initial conditions will
 result in large variations in output, it would seem you could get
 a decent random bit stream by just iterating it a bunch of times &
 taking the low bits.)

i have a feeling i'm talking about something about as basic as xoring
2 streams together, but feel free to enlighten me...

jason

--
`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`
`,`      "We are errant knaves, all; believe none of us." - Hamlet      `,`
`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,`,` jsteiner@anwsun.phya.utoledo.edu ,`,`,`
