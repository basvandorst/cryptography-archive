Newsgroups: sci.crypt
Path: msuinfo!caen!sdd.hp.com!cs.utexas.edu!milano!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: What's wrong with this picture?
Message-ID: <1993Feb12.082936.12957@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <3598@blue.cis.pitt.edu> <1993Feb10.220507.17664@csi.uottawa.ca> <PHR.93Feb11123607@napa.telebit.com>
Date: Fri, 12 Feb 1993 08:29:36 GMT
Lines: 43


 In <PHR.93Feb11123607@napa.telebit.com> phr@telebit.com (Paul Rubin)
 writes:

>   The point is that the combined RNG function can probably be
>   simplified, so that you essentially wind up with a "single" RNG.
>
>It's much worse than this.  Here's a method I thought up in about 2 minutes
>last time someone asked this question (the question should go in the FAQ).
>Maybe a better method is available.

 There is an excellent worked demonstration in [1].

 But if the point is "therefore, RNG-based stream ciphers are
 silly," it reminds me of the old joke about the doctor:  A man
 goes to see a doctor and says: "Doc, it hurts when I do this."
 The doctor says "Don't do that."

 Sure, a stream cipher with a simple linear generator and an
 additive combiner is going to be easy to attack.  So don't do
 that.

 Instead, make sure that the generator has a large internal state
 and initialize it arbitrarily from a large message key; somehow
 modify the sequence from the generator to make it "nonlinear";
 use a nonlinear (but balanced!) combiner; use multiple combiners.

 Once we have decent nonlinear combiners, we can use them in
 series, and also select from an array of such combiners in a
 "polyalphabetic" manner.  Both of these approaches would be silly
 for an additive combiner (in most cases), so a good nonlinear
 combiner can add vast new dimensions to stream cipher design.


 Reference:

 [1]  Pearson, P.  1988.  Cryptanalysis of the Ciarcia Circuit
      Cellar Data Encryptor.  Cryptologia.  12(1): 1-9.

 ---
 Terry Ritter   ritter@cactus.org


