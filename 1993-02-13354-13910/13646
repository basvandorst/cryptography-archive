Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!qt.cs.utexas.edu!yale.edu!newsserver.jvnc.net!darwin.sura.net!jabba.ess.harris.com!caesun6!mvm
From: mvm@caesun6.epg.harris.com (Matt Mahoney)
Subject: Re: What's wrong with this picture?
Message-ID: <C2K1vL.yq@jabba.ess.harris.com>
Sender: usenet@jabba.ess.harris.com (Usenet News Feed Account)
Nntp-Posting-Host: su3f.ess.harris.com
Reply-To: mvm@epg.harris.com (Matt Mahoney)
Organization: Engineering Productivity Group, Harris Corp., Melbourne, FL
References: <3598@blue.cis.pitt.edu> <C2Ax51.Mo4@jabba.ess.harris.com> <C2CApq.197@jabba.ess.harris.com> <1993Feb12.190649.1886@cactus.org> <1993Feb15.151943.1@zodiac.rutgers.edu>
Date: Tue, 16 Feb 1993 18:54:56 GMT
Expires: Tue, 16 Feb 1993 05:00:00 GMT
Lines: 37

I had proposed encryption of plaintext P into ciphertext C by XOR with 
the PRNG sequence R based on a one-way hash function h(), (specifically 
MD5):

  R[i] = h(key + i)
  C[i] = P[i] xor R[i]

and it was pointed out that this might not be cryptographically secure.
The computational infeasability of finding x from h(x) does not
imply that it is infeasable to find x,y from h(x),h(y), when a
relationship y=f(x) is known.  In other words, a sequence-based attack
need not break the one-wayness of h to find the key.

It now appears that another XOR with PRNG cipher I proposed earlier 
would have the same flaw:

  R[i] = h(R[i-1] + key)
  C[i] = P[i] xor R[i]

and so would cipher feedback:

  R[i] = h(C[i-1] + key)
  C[i] = P[i] xor R[i]

since an attacker (with known plaintext) would have lots of x,f(x+key) 
pairs to work with.  

1. Is it possible to generate a cipher using h() so that it is 
not subject to sequence based attacks?  

2. Is there such a thing as a one-way hash function that is also 
immune to sequence based attacks?

--------------------------------        _\/_
Matt Mahoney, mvm@epg.harris.com       |(TV)|  Drug of the Nation
#include <disclaimer.h>                |____|

