Path: msuinfo!uwm.edu!cs.utexas.edu!sdd.hp.com!network.ucsd.edu!usc!howland.reston.ans.net!gatech!purdue!mentor.cc.purdue.edu!noose.ecn.purdue.edu!sparkyfs.erg.sri.com!csl.sri.com!boucher
From: boucher@csl.sri.com (Peter K. Boucher)
Newsgroups: sci.crypt
Subject: Re: What's wrong with this picture?
Date: 18 Feb 1993 18:10:31 GMT
Organization: Computer Science Lab, SRI International
Lines: 51
Distribution: world
Message-ID: <1m0jenINNmb9@roche.csl.sri.com>
References: <3598@blue.cis.pitt.edu> <1993Feb10.220507.17664@csi.uottawa.ca> <1993Feb11.170918.342@netcom.com> <1993Feb11.220939.21992@cactus.org>
NNTP-Posting-Host: assault.csl.sri.com

What if you add a permutation between two RNG XOR steps?
For example, You fill up an 8K buffer with input XOR RNG_1,
you use RNG_2 to create a pseudo-random permutation of the
buffer, and your cipher-text is the buffer XOR RNG_3 (also
XOR RNG_4 with cipher-text feedback).

pseudo-code for encryption mode:
______________________________________________
   for i = 0 to 8K
      buff[i] = input[i] ^ rng_1();

   transpose(buff); /* uses rng_2() */

   for i = 0 to 8K
      output[i] = buff[i] ^ rng_3() ^ rng_4();
      re_seed_rng_4(output[i]);
______________________________________________

      
pseudo-code for decryption mode:
______________________________________________
   for i = 0 to 8K
      buff[i] = input[i] ^ rng_3() ^ rng_4();
      re_seed_rng_4(input[i]);

   transpose(buff); /* uses rng_2() */

   for i = 0 to 8K
      output[i] = buff[i] ^ rng_1();
______________________________________________


There's no cycle (feedback to RNG_4 eliminates it).  Known
plaintext XOR ciphertext does not yield confusion stream.
There are 128 bits of key (4 32-bit initial seeds), so brute-
force is challenging.  An entire 8K block must be decrypted
together, so brute-force is even more challenging.  In actual 
use, only the first 8K need be slow, because you can pipe-
line and process three separate 8K buffers at once.

Now, what's the weakness?  Would it make any difference if
the transposition step also employed a dynamically-updated
substitution table?

How about a variation on Ellison's DES|tran|DES|tran|DES,
but replacing each DES step with a much faster RNG combiner?

-- 
Peter K. Boucher
--
RIPEM public key available upon request.
