Path: msuinfo!netnews.upenn.edu!cs.widener.edu!dsinc!spool.mu.edu!howland.reston.ans.net!usc!cs.utexas.edu!milano!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Newsgroups: sci.crypt
Subject: Re: What's wrong with this picture?
Message-ID: <1993Feb11.220702.21858@cactus.org>
Date: 11 Feb 93 22:07:02 GMT
References: <3598@blue.cis.pitt.edu>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
Lines: 76


 In <3598@blue.cis.pitt.edu> wbdst+@pitt.edu (William B Dwinnell)
 writes:

>I have been thinking about an encryption system which seems simple enough
>to implement, but I can' think of what might be wrong with it...
>
>Here's how it works (not that this is any great invention...)
>
>First, we know that any stream CORxxx [sorry] XORed with a random stream
>is a random stream.  Second, we have pseudorandom number generators
>which have fairly long cycles, and if they're not long enough, we can
>make them longer, by XORing 2 or more random number strams streams
>together, as long as they don't have the same cycle, ixx right? (This

 But it *is* a great invention, in fact one of the greatest
 inventions in cryptography.  With one RNG this is essentially the
 Vernam Stream cipher [5], or, with two RNG's, the improvements
 by Morehouse [3].

 This is the beginning of modern automatic cryptography.  But you
 would already have known this, had you read Kahn [2].


>I'm not saying that this is a good system, but what is wrong with it?

 In general, a stream cipher consists of two components:
 A confusion sequence generator, and a data and confusion
 combiner.

 The original Vernam stream cipher implementation used electro-
 mechanical relays to realize what we now call an exclusive-OR
 combiner.  Most stream cipher proposals still use exclusive-OR.

 Unfortunately, exclusive-OR is extremely weak in a certain sense:
 If some amount of the original plaintext and the corresponding
 ciphertext can be found, a simple exclusive-OR will recover the
 original confusion sequence.  In real life, some amount "known
 plaintext" is almost inevitable.

 Next, if the confusion generator consists simply of a Linear
 Feedback Shift Register (LFSR) of size n, only 2n bits of
 the confusion sequence are sufficient to fully define all
 succeeding bits and all previous bits.

 LFSR RNG's are now well understood, and produce a single "maximal
 length" cycle of length 2^n - 1 steps (plus the all-zeros
 degenerate cycle) when the feedback polynomial is a primitive mod 2
 polynomial.  Since large primitives are available, or readily found,
 there really is little reason to XOR RNG's to get longer cycles.
 (The length of the cycle produced by an ordinary degree 1279
 primitive is a binary value 1280 bits long.)

 In the early 70's, Geffe [1] made an attempt to hide LFSR's behind
 a non-linear combiner, but in this case the non-linearity itself
 facilitated Siegenthaler's eventual analysis [4].


 References:

 [1]  Geffe, P.  1973.  How to protect data with ciphers that
      are really hard to break.  Electronics.  January 4.  99-101.

 [2]  Kahn, D.  1967.  The Codebreakers.  Macmillan.

 [3]  Morehouse.  1920.  Ciphering System.  U.S. Patent 1,356,546.

 [4]  Siegenthaler, T.  1985.  Decrypting a Class of Stream
      Ciphers using Ciphertext Only.  IEEE Transactions on
      Computers.  C34: 81-85.

 [5]  Vernam, G.  1919.  Secret Signalling System.  U.S. Patent
      1,310,719.

 ---
 Terry Ritter   ritter@cactus.org
