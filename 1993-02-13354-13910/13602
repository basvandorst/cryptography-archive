Newsgroups: sci.crypt
Path: msuinfo!caen!uwm.edu!cs.utexas.edu!milano!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: What's wrong with this picture?
Message-ID: <1993Feb13.195953.284@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <3598@blue.cis.pitt.edu> <1993Feb10.220507.17664@csi.uottawa.ca> <1lglfoINN2hb@roche.csl.sri.com>
Date: Sat, 13 Feb 1993 19:59:53 GMT
Lines: 61


 Having seen no direct response, let me jump in here....

 In <1lglfoINN2hb@roche.csl.sri.com> boucher@csl.sri.com
 (Peter K. Boucher) writes:

>For example:
>
>        output = input ^ rnd1() ^ rnd2() ^ rnd3() ^ rnd4();
>        if (ENCRYPTING) {
>                feedback1 = output ^ rnd4();
>                feedback2 = input ^ rnd3();
>        } else /* DECRYPTING */ {
>                feedback1 = input ^ rnd4();
>                feedback2 = output ^ rnd3();
>        }
>        rnd3_seed(feedback1);
>        rnd4_seed(feedback2);
>
>With a 128-bit key (four 32-bit initial seeds), brute-force would be
>challenging.  1) I think the cycle is now gone, so, what's the
>weakness?

 The main weakness never was the existence of a cycle (for example,
 the structure of RSA inherently creates ciphering cycles), so
 eliminating the cycle solves the wrong problem.  The weakness was
 the linearity of the system.

 Assuming any linear combination of LFSR's containing 128 bits of
 state (such as CRC-32 on four 32-bit registers, but there could
 as well be four different deg 32 feedback polynomials or a single
 deg-128), I would expect to solve the system with exactly 128 bits
 of known-plaintext.  And these bits do not have to be contiguous;
 one bit per byte (say, the upper bit of 128 ASCII bytes) would do.
 Any total of 128 bits collected here and there would do.

 If the RNG's were instead Linear Congruential Generators, there
 could be some information lost in converting the known bit-values
 into some linear expression in the integers.  I am not clear on
 how this would be done.  Still, I expect that some form *could* be
 found in which the solution would be direct and almost immediate.
 The design is not secure.


>2) How would your analysis change if the RNGs were all
>extremely fast, but relatively weak (evenly distributed output, but
>cycles under 10,000)?

 Not at all.


>3) What if rnd3 and rnd4 were fast-but-weak,
>while rnd1 and rnd2 were strong?

 Irrelevant.


 ---
 Terry Ritter   ritter@cactus.org


