From: ericb@hplsla.hp.com (Eric Backus)
Date: Tue, 16 Feb 1993 00:44:36 GMT
Subject: Re: Decimals
Message-ID: <5830012@hplsla.hp.com>
Organization: HP Lake Stevens, WA
Path: msuinfo!uwm.edu!cs.utexas.edu!sdd.hp.com!hp-cv!hp-pcd!hplsla!ericb
Newsgroups: sci.crypt
References: <_b53qg=@rpi.edu>
Lines: 28

Vesselin Bontchev writes:

> mhcoffin@tolstoy.uwaterloo.ca (Michael Coffin) writes:
>
> > You might if you want the right answer.  Don't use bc for anything
> > important.  Some, if not all, versions of bc have a bug in the
> > division algorithm.  Here's an example, (on a SparcStation 2):
>
> >     % bc
> >     a = 512323978668400342662142456021339603384123963276263800698706
> >     b = 45862908082782345
> >     c = a/b
> >     a-(b*c)
> >     -267488614159371026654933884467539
>
> > The last line is obviously wrong since the answer should be in the
> > range [0..b-1].  The last line should be 31295982937361006.
>
> Hmm, is this a bug or just an overflow? Because I tried it on a VAX
> and got exactly the same (negative) result... If it is a bug, is there
> a fixed version of bc available?

I get the same bug on HP-UX 8.0.  It IS a bug, but fortunately GNU bc
version 1.02 does not have this bug.  So if you need a more reliable
and much faster bc, get GNU bc 1.02.
--
					Eric Backus
					ericb@lsid.hp.com
