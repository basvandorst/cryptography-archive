Newsgroups: alt.security.pgp,sci.crypt
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!darwin.sura.net!sgiblab!news.kpc.com!kpc!kevinc
From: kevinc@solman.kpc.com (Kevin Cameron)
Subject: Re: More on unrevoked keys.
Message-ID: <1993Feb19.195200.27209@kpc.com>
Keywords: PGP keys revoke
Sender: usenet@kpc.com
Organization: Kubota Pacific Computer
References: <C2LwHB.FnI@jpunix.com> <1993Feb18.182915.17629@kpc.com> <bontchev.730135352@fbihh>
Date: Fri, 19 Feb 1993 19:52:00 GMT
Lines: 50
Xref: msuinfo alt.security.pgp:1476 sci.crypt:13718

In article <bontchev.730135352@fbihh>, bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev) writes:
|> I composed the message that John posted, singed with without
|> encryption, but WITH ASCII ARMOR, and sent it to John. I didn't use
|> clearsig, because my intention was that this message should be
|> distributed widely and I wanted to prevent some mailers from mungling
|> it. Since the message is not encrypted, everybody who has PGP can read
|> and verify my signature. But those who do NOT have PGP, cannot read
|> the message.
|> 
|> Obviously, John has run PGP on that message and has obtained the clean
|> text. Then he has posted it to the net in human-redable form,
|> clearsigning it. Unfortunately, this way he has also destroyed my
|> signature, effectively replacing it with his own.

Part of the problem here is that John had no way to produce the
clear text while preserving the signature.

To help prevent this kind of confusion, I propose the following enhancement
to PGP:

Provide a mode wherein PGP will be forced to perform operations one step
at a time.  So when an armored message such as the one that Vesselin sent
to John is run through PGP, PGP will only remove the armoring and leave
the signature intact.

|> There's nothing bad in what John has done, except that the message he
|> posted has NO authentication value. More exactly, it is equivalent of

Agreed.  The basic problem is that the procedures have not been worked out
yet.

I propose the following enhancement to PGP to deal with the problem.

Provide what I will call a "Third Party Key Revokation Certificate".  This
certificate could be generated by anyone to request the revokation of anyone
else's public key.  This certificate could be sent out on a public channel
like alt.security.pgp or mailed privately as needed.  An important feature of
PGP when processing such a certificate would be to check the trust level
for the person issuing the certificate.  If the issuer is completely trusted,
then PGP would go ahead and revoke the key.  If not, then PGP would at least
ask the user if he wants to go ahead with the operation.  When a key is
revoked, appropriate information would be retained in the keyring about the
old key and how it was revoked (by a standard key revokation certificate or
by a third party).

-- 
Kevin Cameron

"Those who will trade essential liberty for promise of security will
 have neither" - Benjamin Franklin
