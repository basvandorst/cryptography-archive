Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!psuvax1!fortran.cs.psu.edu!so
From: so@fortran.cs.psu.edu (Nicol C So)
Subject: Re: Zero knowledge proofs again
Message-ID: <C2wy7D.G53@cs.psu.edu>
Sender: news@cs.psu.edu (Usenet)
Nntp-Posting-Host: fortran.cs.psu.edu
Organization: Penn State Computer Science
References: <C2rpC4.CzE@ms.uky.edu> <C2vD69.H1E@cs.psu.edu> <C2vwEr.J94.2@cs.cmu.edu>
Date: Tue, 23 Feb 1993 18:04:25 GMT
Lines: 48

In article <C2vwEr.J94.2@cs.cmu.edu> bsy+@cs.cmu.edu writes:
>In article <C2vD69.H1E@cs.psu.edu>, so@babel.cs.psu.edu (Nicol C So) writes:
>+In article <C2rpC4.CzE@ms.uky.edu> jedwards@ms.uky.edu (Jonathan Edwards) writes:
>+>
>+>I am trying to figure out a zero-knowledge interactive proof that
>+>demonstrates the prover knows a square root t of x modulo N.  The
>+>protocol is as follows (note: if prover does not cheat, x = t^2 mod N):
>+>
>+>Prover: Choose r randomly with 1<r<N, gcd(r,N) = 1.  Compute y = r^2 mod N.
>+>        Send y to Verifier.
>+>
>+>Verifier: Set b = 0 or b = 1 randomly.  Send b to Prover.
>+>
>+>Prover: Compute z = t^b r mod N.  Send z to Verifier.
>+>
>+>Verifier: If z^2 = x^b y mod N, Prover knows a square root of x with
>+>          probability 1/2.  Repeat protocol k times to increase
>+>          likelihood Prover actually knows a square root of x.
>+>
>+>I am having the following difficulty:
>+>...
>+>Given this, I don't understand what deception the prover can perpetrate if
>+>the verifier never sends b=0.  In other words, how can the prover cheat
>+>if the prover knows in advance that the verifier will always send b=1?
>+
>+If b is always 1, there is no demonstration that y is a quadratic residue.
>+Remember that 2 nonresidues can multiply to a residue.
>
>Your explanation isn't quite right.  It is possible for an attacker to
>successfully answer the queries and pretend to be a legitimate prover
>--- with a $y$ that {\em is} a quadratic residue --- and
>``authenticate'' if the verifier's source of random bits is stuck at
>$1$.  Since it is simple enough to be a homework problem, the proof is
>left as an exercise for the reader.  1/2 :)

I don't see how what you said differs from what I said.  The idea behind
the protocol is (roughly) to randomly reduce the QR question of x to the
QR question of xy.  It is essential that the reduction is done properly
i.e. y is a residue.  b is used to select one of these conditions to
verify (i.e. (i) xy is a residue & (ii) y is a residue).  A cheating
prover can pass one of these tests by choosing y, but it cannot succeed
all the time if it doesn't know which challenges will come up.

Yes, I know that in the above, "QR question of ..." should be replaced
by "knows a square root of ...", so no need to correct me on this.

My original explanation was terse, but it contained the critical point,
and I figured the original poster could understand it.
