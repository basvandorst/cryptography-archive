Path: msuinfo!caen!uakari.primate.wisc.edu!ames!elroy.jpl.nasa.gov!usc!cs.utexas.edu!convex!linac!att!ucbvax!virtualnews.nyu.edu!brnstnd
From: brnstnd@nyu.edu
Newsgroups: sci.crypt
Subject: Re: The idea of a flood cryptosystem
Message-ID: <9987.Apr1604.17.1592@virtualnews.nyu.edu>
Date: 16 Apr 92 04:17:15 GMT
References: <14871.Apr904.10.5392@virtualnews.nyu.edu> <2058@transfer.stratus.com>
Organization: IR
Lines: 24

In article <2058@transfer.stratus.com> cme@ellisun.sw.stratus.com (Carl Ellison) writes:
> So -- you end up with an algorithm labelled: "secure against IBM PC
> clones with less than 800 MB of hard disk storage", for example, and you
> can prove security without having to resort to complexity arguments.

Yep.

> Of course, all this depends on the shared function of the two streams
> being secret -- or the eavesdropper could compute the function on the
> fly just as the real recipients do.  If the function is secret and
> shared, is this not just another private key system?

It's different---the ``key'' is the initial shared information, but (1)
unlike normal keys it doesn't have to come from a very large space, (2)
it can be transmitted by a relatively weak cryptosystem, and (3) it can
be published immediately after the flooding.

Note on (1): If the initial shared information comes randomly from a
space of one million possibilities, then the attacker can, in principle,
compute all one million functions simultaneously, but in practice this
will be impossible---even though one million can't be considered a large
enough key space for most applications.

---Dan
