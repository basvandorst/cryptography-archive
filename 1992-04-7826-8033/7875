Xref: msuinfo sci.crypt:7875 sci.math.num-analysis:4166
Path: msuinfo!uchinews!linac!pacific.mps.ohio-state.edu!zaphod.mps.ohio-state.edu!sol.ctr.columbia.edu!spool.mu.edu!uunet!mcsun!corton!geocub!goofi!deudon
From: deudon@goofi.greco-prog.fr (DEUDON Guillaume.)
Newsgroups: sci.crypt,sci.math.num-analysis
Subject: WANTED: A fast search/hashcoding algorithm : SOME MORE DETAILS ????
Message-ID: <5913@geocub.UUCP>
Date: 1 Apr 92 18:11:24 GMT
Sender: lnews@geocub.UUCP
Organization: Computer Engineering,ENSERB,University Of Bordeaux,FRANCE.
Lines: 49
Originator: deudon@goofi

>Date: Wed, 1 Apr 92 12:00:22 EST
>From: cme@ellisun.sw.stratus.com (Carl Ellison)
>
>In article <5882@geocub.UUCP> you write:
>>
>>Keyword: Hashcoding / Search Algorithm / Optimization / C
>>
>>   I'm trying to solve a little problem ...
>>
>>
>>   Let a_k = < e_1k,e_2k, ..., e_nk > a n-uple of integers.
>>
>>   Foreach k, Foreach i in [1,n] 
>>        e_ik is in [ m_i, M_i ]   (property (1))
>>
>
>To me, this means that each e(i,k) can take on one of two values,
>(the two values being chosen only for that value of i).
>
>If this is true, why is a(k) not expressed as an n-bit binary number?
>
>--Carl

Saying that 

> Foreach k, Foreach i in [1,n]
>    e(i,k) is in [m_i,M_i]
means e(i,k) can be m_i,m_i+1, ... M_i-1,M_i .

Then, assuming we know m_i is a n1(i)-bit binary number,
 and,                  M_i is a n2(i)-bit binary number,

a(k) is a sum{i=1 to n}( n2(i) ) bit binary number,

wich can be reduced to a sum{i=1 to n} (n2(i)-n1(i)) bit binary number

(if we only keep the significant bits of e(k,i)).

Then, if m_i is a lot less than M_i, a(k) is a binary number with
a lot of bits, and searching such an a(k) in a set is still a problem for me !

Thanks for your interest.

Guillaume.
-- 
[g.d]

-----------------------------------------------------------------------------
              "These are a few of my favourite things ..." 
