Xref: msuinfo comp.arch:30486 sci.crypt:8033
Path: msuinfo!uchinews!linac!pacific.mps.ohio-state.edu!zaphod.mps.ohio-state.edu!mips!spool.mu.edu!olivea!uunet!kithrup!sef
From: sef@kithrup.COM (Sean Eric Fagan)
Newsgroups: comp.arch,sci.crypt
Subject: Re: The NSA Instruction
Message-ID: <1992Apr30.003348.6014@kithrup.COM>
Date: 30 Apr 92 00:33:48 GMT
References: <29354@hoptoad.uucp> <1992Apr29.214606.28406@dcc.uchile.cl>
Organization: Kithrup Enterprises, Ltd.
Lines: 35

In article <1992Apr29.214606.28406@dcc.uchile.cl> pchris@pehuen.dcc.uchile.cl (Chris Perleberg) writes:
>More than once I've needed this instruction (Population Count) for 
>text pattern matching algorithms.  But I've never encountered a machine 
>that supported it, and doing table lookup on parts of the word is too 
>costly....  

Every supercomputer I've seen had it, the Cyber being the one I'm most
familiar with.  The impression I have, however, is that the 6000 did not
have a pop count instruction (it didn't even have parity!), but that both it
and parity were added shortly (because 'farmers buy a lot of computers'
8-)).

>Then you have the problem of how to specify in C that you 
>want to use this instruction....

This is the easy part.  First, actual FORTRAN code to do a pop count on an
integer on a Cyber:

	COUNT = POP(I)

To do it in C, the obvious code would be

	count = pop(i);

(Oh, it might be ifdef'd in, and/or define'd, and/or something like
__builtin_pop, etc.  But the idea is about the same.)

I'm not aware of any compilers that will take code and replace it with a pop
count instruction.  (Might be interesting to ask in comp.compilers, though.)

-- 
Sean Eric Fagan  | "One form to rule them all, one form to find them, one
sef@kithrup.COM  |  form to bring them all and in the darkness rewrite the
-----------------+  hell out of them" -- sendmail ruleset 3 comment from DEC.
Any opinions expressed are my own, and generally unpopular with others.
