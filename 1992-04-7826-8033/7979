Path: msuinfo!netnews.upenn.edu!widener!iggy.GW.Vitalink.COM!pacbell.com!mips!swrinde!zaphod.mps.ohio-state.edu!qt.cs.utexas.edu!cs.utexas.edu!ut-emx!tivoli!todd
From: todd@palomar.tivoli.com
Newsgroups: sci.crypt
Subject: Re: Simple encryption(?)
Message-ID: <TODD.92Apr17141239@palomar.tivoli.com>
Date: 17 Apr 92 05:12:39 GMT
Sender: news@tivoli.UUCP
Distribution: sci
Organization: TIVOLI Systems, Inc.
Lines: 111


Brian Fairlane proposes a simple encryption technique in article
<1992Apr11.170301.4743@mnemosyne.cs.du.edu> bfairlan@isis.cs.du.edu.
The design of his crypto system has at least two notable features:
the use of combined transposition and substitution, making the system
harder to break, and the use of several keys that are combined in the
substitution step to obtain the effect of a much longer key.  I must
agree with previous postings that the resulting cipher is not very
strong, but Bian's ideas are a good starting point and he has
reinvented some important ideas from the past.

DES and many of the strongest paper and pencil ciphers use a
combination of transposition and substitution steps. The
transpositions in the "simple" encryption technique are too simple.
The regular permutation, repeated over and over can be detected and
untangled using conventional cryptanalysis.  By making this permutation
more irregular the cipher would be strengthened considerably.

The combination of multiple keys to get the effect of a much longer
key for polyalphabetic substitution is an inventive idea that has been
used in the past. By choosing keys that have lengths that are
relatively prime, say 17, 64, and 27, one ends up with a
polyalphabetic cipher that has a a very long key length (32832 in this
case).  Very long keys thwart the most common attacks on
polyalphabetic ciphers, making this an attractive technique. Alas,
there are well known techniques to break such ciphers without dealing
with the longer combined key (I seem to remember a 20 year old IBM
Research report on the subject that I've got stashed somewhere).

How would one attack Brian's system?  Well, not being an expert
cryptanalyst I can't say what would work best, but I would first
recognize that during the substitution step a plaintext letter, say
p[i], is being xor'd with the corresponding letters from a number of
keys.  Ignoring the permutations for the time being, and letting the
keys be k1, k2, and k3 of length len(k1), len(k2), and len(k3), the
ciphertext c is

    c[i] = p[i] ^ k1[i % len(k1)] ^ k2[i % len(k2)] ^ k3[i % len(k3)]  

There are only 256 different values that the term 

    k1[i % len(k1)] ^ k2[i % len(k2)] ^ k3[i % len(k3)]  

can take, hence there are only 256 different substitution functions
that can be applied to any character.

A Kappa test can be used to determine the period (lcm of the key
lengths) of the polyalphabetic substitution.  Consider a period of 18,
if a frequency distribution is counted by taking every 18th letter,
one ends up with 18 different frequency distributions.  If 18 is the
period, each of these 18 different distributions will "look like" a
proper freq. distribution.  There is a mathematical way to do this,
but in short, a true freq. distribution will have some frequent
characters (the one that maps to plaintext space or "e") and some
infrequent characters (the one that maps to plaintext "z").  If 18
isn't the true period, the counts will be comming from different
substitutions and the resulting distribution will be much flatter than
they should be.  By simply trying every possible period (it could be
hundreds but the test is easy), a set of most probable periods is
determined.  Other test can also be used to detect the period, but
this is an easy one to program.

Since there are only 256 substitution keys (as explained above) each
can be tried (there will be a different one for each of the 18
series).  One will look right, because the result will match the
expected distribution of characters (many spaces, e's, t's etc., few
z's).  The cipher is now reduced to a set of plaintext letters that
have been permuted.

Again, simply try different periods.  Say the permutation period is
12.  Write out the cipher in lines of 12 chars. Now do multiple
anagraming of the columns.  Its actually very easy at this point if
one as adequate material.  One can simply try different periods, but
that's usually not necessary.  For example, a Q is almost always
followed by a U and then a vowel.  Finding a Q limits the characters
that can follow and helps narrow down the possible permuation period.
Every letter has others with which it has an affinity and this
information can be applied in a mathematical way to quickly determine
the permutation that was applied.

So as you can see, a computer will help in the attack on this cipher,
but the system is nowhere near as hard as the more difficult paper and
pencil ciphers that exist.  Combination of a fractional substitution
with a double columnar transposition, for example.

Some suggestions for amateur cyrto system designers: first, read H.
Gains book Cryptanalysis.  This book is old, it was old when I first
read it in 1963, but it is the best generally available book on paper
and pencil cryptanalysis.  Work the exercises, learn to break
polyalphabetics, tough transpositions, the Playfair.  This is fun, and
one learns that a cipher can be broken without inverting the steps
taken during encipherment.  This is important and often overlook by
amateur cipher designers; the decrypter can often take shortcuts or
otherwise avoid brute force.  Next study some of the newer systems
like DES or Lucifer.  Don't build up a system with layer after layer
of linear transformations.  Combinations of non-linear transformations
are much harder to invert.






--

Todd
-- 
Todd Smith                                     TIVOLI Systems, Inc.
todd@tivoli.com                                6034 West Courtyard Dr.
                                               Suite 210
(512) 794-9070 [794-0623 fax]                  Austin, TX   78730
