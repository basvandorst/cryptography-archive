Path: msuinfo!caen!zaphod.mps.ohio-state.edu!uwm.edu!ogicse!network.ucsd.edu!qualcom.qualcomm.com!chicago.qualcomm.com!karn
From: karn@chicago.qualcomm.com (Phil Karn)
Newsgroups: sci.crypt
Subject: Re: On Hardware Implementations of DES...
Message-ID: <1992Apr16.165945.23208@qualcomm.com>
Date: 16 Apr 92 16:59:45 GMT
Article-I.D.: qualcomm.1992Apr16.165945.23208
References: <1992Apr15.014849.16768@cs.cornell.edu> <1992Apr16.010949.24520@tfs.com> <1992Apr16.075856.1768@acsu.buffalo.edu>
Sender: news@qualcomm.com
Organization: Qualcomm, Inc
Lines: 25
Nntp-Posting-Host: chicago.qualcomm.com

In article <1992Apr16.075856.1768@acsu.buffalo.edu> opnsmurf@ubvmsb.cc.buffalo.edu (Da Smurf) writes:
>>BTW, hardware is the *only* way DES is
>>implemented.  At least according to the spec.

>hmm... atleast according to unix man-pages: the des command offers a
>switch to fall back to software implemented des, just incase you dont
>have to hardware installed.

I think point was that NIST does not recognize general purpose
software implementations of DES as meeting the *official* requirements
of the spec, even if they produce exactly the same results. The reason
has to do with the relative ease that a software DES could be
maliciously hacked, or its internal state (e.g., key vectors)
surreptitiously read out by exploiting holes in the host computer's
operating system. DES implemented as ROM firmware in a single-chip
micro *would* meet the test, as this would be much harder to subvert.

This certainly doesn't prevent anyone from using software DES (which
is more properly called "DEA", for Data Encryption Algorithm) if they
don't care what NIST says. But it's probably worth thinking about the
reasons why they have this policy, if only to be aware of the possible
threats in your own situation. E.g., how do you *know* that somebody
hasn't hacked the 'des' command on your workstation to record keys?

Phil
