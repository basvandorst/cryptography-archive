Path: msuinfo!uchinews!linac!uwm.edu!cs.utexas.edu!sun-barr!olivea!veritas!amdcad!netcomsv!mork!trone
From: trone@netcom.com (Trone Miller)
Newsgroups: sci.crypt
Subject: Re: Source for _real_ random numbers
Message-ID: <8qhjwqq.trone@netcom.com>
Date: 1 Apr 92 04:21:59 GMT
References: <a4#jg=rtrone@netcom.com> <=dcjc0crcain@netcom.com>
Distribution: usa
Organization: Netcom - Online Communication Services  (408 241-9760 guest)
Lines: 52

>Trone, I have read an unproven conjecture that *all* possible sequences
>actually exist in pi.  If this is true, than knowing any subseqence 
>whatever tells you nothing about where you are or what comes next.
 
>Bob Cain    rcain@netcom.com   408-358-2007
 
 
 
Bob, thanks for the reply. First I will address a specific point
contained in your reply, then I would like to suggest a thought
experiment which you might find interesting.
 
As to the subsequence issue; with a transcendental chain such as pi, 
knowledge of a subsequence allows one to pick points of entry in
the chain. These points of entry in turn effectively reduce the search 
space and overhead required to crack a pi based cipher. Once the correct 
point of entry is discovered, one can just keep grinding out the chain.
 
As to the thought experiment. Even if an algorithm meets the work
effort requirements in holding off an opponent, there is still the
issue of the implementation protocol. The protocol used, to implement the 
algorithm in a practical way is sometimes just as challenging to design as 
the algorithm. Many times a poor protocol is the way an algorithm is 
compromised.
 
I still maintain that pi only offers a reasonable level of security
for the most trivial (child like) applications. Even if pi could 
be used as a reasonably secure pseudo random number generator how
would a practical protocol work? The thought experiment is -- design
a practical and secure implementation protocol for a pi based
cryptographic system.
 
While this challenge isn't intended to be rhetorical, I hope it
doesn't generate a bunch of junk replies. I suggest this as a thought
experiment because I think that anyone who spends time on the problem 
will soon realize why conventional crypto algorithms require both keys 
and points of entry in order to offer practical and reasonable security. 
Pi only offers a point of entry to protect its sequence and therefore, a 
secure session initialization technique becomes a challenge.
 
I can already hear somebody complaining that a Vernam cipher doesn't
require a key, it only requires an agreed upon point of entry. Well
yes, but Vernam ciphers aren't practical for modern day high
volume computer environments because of the very protocol problem I have
outlined above. The Vernam protocol requires physical transportation of 
the random material to the intended receiver.
 
 
Thanks, 
 
Trone 
 
