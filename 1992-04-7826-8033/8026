Path: msuinfo!uchinews!linac!att!ucbvax!virtualnews.nyu.edu!brnstnd
From: brnstnd@nyu.edu (Dan Bernstein)
Newsgroups: sci.crypt
Subject: Re: full implementation of goppa codes
Message-ID: <21377.Apr2917.43.4092@virtualnews.nyu.edu>
Date: 29 Apr 92 17:43:40 GMT
References: <1@olympus.uucp> <1992Apr25.164601.12542@decuac.dec.com>
Organization: IR
Lines: 25

After a few false starts, MJR and I have managed to exchange messages
using the goppa program. Without a thorough code analysis we can't be
sure, but the program's behavior (correcting up through 37 bit errors,
apparently encrypting messages at a healthy clip) is consistent with
what I'd expect from an implementation of the McEliece-Goppa public-key
system with t=37 over the field of 1024 elements. If it does work then
Prometheus's estimate of 2^75 operations to break a single message is
roughly correct.

Neat stuff. Since this is pre-RSA technology it does seem to be safe
from patents; and RSADSI can't sue us all :-). Either way it's certainly
legal to engage in research/instructional use. We should go through this
code and figure out exactly what it's doing at every step. It would also
be nice to put together a wrapper which handles padding, key storage,
etc. (I've already written a ``noise'' program which adds exactly 37
bit errors to each 128-byte block, for the encryption step.)

I have an experimental public key (mfile) which hashes under MD5 to
50a8ecb6270f20d2c8def1c3588426bc. This is a key for brnstnd@nyu.edu,
which means that NYU administrators and anyone who breaks into this
account can, in principle, read messages sent to this key; don't use it
after 1 January 1993. If anyone wants to try exchanging some encrypted
messages, let me know. Remember: this is research.

---Dan
