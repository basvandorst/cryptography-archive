Path: oldmsuinfo!msuinfo!caen!zaphod.mps.ohio-state.edu!cs.utexas.edu!swrinde!emory!ogicse!mintaka.lcs.mit.edu!ai-lab!life.ai.mit.edu!friedman
From: friedman@gnu.ai.mit.edu (Noah Friedman)
Newsgroups: sci.crypt
Subject: RSA patent suit by PKP
Message-ID: <FRIEDMAN.92Dec21185527@nutrimat.gnu.ai.mit.edu>
Date: 22 Dec 92 02:55:27 GMT
Article-I.D.: nutrimat.FRIEDMAN.92Dec21185527
Organization: Free Software Foundation, 675 Mass Ave. Cambridge, MA 02139
Lines: 83
NNTP-Posting-Host: nutrimat.gnu.ai.mit.edu

Recently someone posted an article concerning a person who was sued by
RSADSI and suggested one way of going about testing the patent, which was
to file for re-examination (which costs $3K to start).  Below is an article
by the League for Programming Freedom which explains why this may be a bad
idea.  

[More info can be obtained about the LPF by writing to lpf@uunet.uu.net,
and various articles on miscellaneous LPF-related topics are available via
anonymous FTP from ftp.uu.net in /doc/lpf.]



		     Getting Rid of Bad Patents

Any software patent is more or less bad--for software developers.
Precisely how bad a particular patent is depends on how often
programmers want to do the things that are forbidden by the patent,
and whether other alternatives are likewise prohibited.

Some software patents are bad in another sense: they are patent office
mistakes which cover things that are obvious or were already well
known.  In some cases (but not all), the mistake can be proved with
published prior art.

If you know about a patent that the Patent Office has issued by
mistake, what should you do?  You can send information about prior art
to the Patent Office, and even pay them for reexamination of the
patent, but should you?  According to Jerry Cohen of Perkins, Smith
and Cohen, this is often a bad idea.

The first problem is that reexamination is handled by the same Patent
Office which made the mistakes in the first place.  Even worse, the
Patent Office invites the patent holder to rewrite the patent; the
rest of us are excluded from the process.

Naturally, the patent holder tries to gerrymander the borders of the
patent so that it excludes the known prior art while including what
programmers really want to do.  Unless what we want to do in today's
software is precisely the same as what is in the prior art (and this
is rarely the case), the patent holder can usually find a way to cover
what is useful today while excluding the prior art.  This makes the
patent more dangerous, because any prior art considered during
reexamination is no longer useful for overturning the patent in court.

This gerrymandering is all the easier because the US Patent Office
takes an almost mechanical approach to deciding what can be patented.
They have nearly abandoned the idea of judging whether an idea is
unobvious; if it is merely different, they issue the patent.  Right
now, there is much upset in the computer industry about a patent
covering--literally--hard disks 3.5 inches in diameter.  (Presumably
you can safely make disks 3.4 inches in diameter, or 3.6; but those
are not standard sizes everyone wants to use.)

Yet, should you go to court afterward, you will find that the court
presumes that the Patent Office did its job properly and is reluctant
to question how it dealt with a particular piece of prior art.

According to Cohen, your chances are much better if the Patent Office
did not consider the prior art that you have; then there is no Patent
Office judgement to command a presumption of correctness, and the
court must consider the prior art from a more neutral standpoint.

Cohen says that your best strategy in fighting a patent is to keep the
prior art away from the patent holder; to disclose as little as
possible of its details.  This hinders the patent holder's attempts to
gerrymander the patent.

For this reason, it can be a bad idea to send prior art to the Patent
Office for a patent's file.  The patent holder can see the file as
well as anyone else.

Another plan for informing the Patent Office about prior art is the
Software Patent Institute.  This organization aims to collect and
organize records of prior art to make it easier to reject patents that
are bad in the sense of mistakes.  This too can easily backfire by
making it easier to craft patents to cover what people want to do
today.  Not surprisingly, the SPI is supported by large companies such
as IBM that benefit from patents.

The best way to use prior art is to give it only to those who are
threatened with the patent.  One way you can do this is by sending a
copy to the League for Programming Freedom.  The League keeps files of
prior art to assist those threatened with software patents.
