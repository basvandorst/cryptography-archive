Newsgroups: sci.crypt
Path: msuinfo!caen!uunet!telebit!phr
From: phr@telebit.com (Paul Rubin)
Subject: Re: RSA questions
In-Reply-To: tsa@cellar.org's message of 18 Dec 92 00:06:16 GMT
Message-ID: <PHR.92Dec17221907@napa.telebit.com>
Sender: news@telebit.com
Nntp-Posting-Host: napa.telebit.com
Organization: Telebit Corporation; Sunnyvale, CA, USA
References: <PHR.92Dec14202839@napa.telebit.com> <6gByVB5w164w@cellar.org>
Date: 17 Dec 92 22:19:07
Lines: 27

In article <6gByVB5w164w@cellar.org> tsa@cellar.org (The Silent Assassin) writes:

   phr@telebit.com (Paul Rubin) writes:

   > RSA works like this:
   > 1. Pick two large primes p and q (with certain extra properties).
   > Let N=pq.

   What are the extra properties, and how large should they be to be reasonable
   secure?

This is the subject of a lot of research, but among other things
you want p and q both ==3 mod 4, and != 1 mod s.


   > 2. Pick random exponent s.  The pair (N, s) will be the public key.
   > 3. Compute secret key t, so that st = 1 mod (p-1)(q-1).  You can do
   >    this efficiently if you know p and q, but it is intractable otherwise.

   Huh?  1 mod x =x, correct?  That is. modulus is the remainder of integer
   division, and when you take 1 and mod it, you will always have a remainder
   equal to your original.   

"st = 1 mod (p-1)(q-1)" means when you multiply s by t and take
the remainder after dividing by (p-1)(q-1), you get 1.  The syntax
is different than the % operator in C.

