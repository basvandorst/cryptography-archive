Path: msuinfo!netnews.upenn.edu!jvnc.net!darwin.sura.net!wupost!uunet!olivea!pagesat!netsys!agate!apple!mumbo.apple.com!gallant.apple.com!apple.com!pwd
From: pwd@Apple.com (Patrick W. P. Dirks)
Newsgroups: sci.crypt
Subject: Moderately secure public algorithm?
Message-ID: <pwd-011292130143@thunder.apple.com>
Date: 1 Dec 92 21:12:48 GMT
Sender: news@gallant.apple.com
Followup-To: sci.crypt
Organization: Apple Computer
Lines: 28

Hello,

    I am trying to design some minimal security for an application that
makes some sensitive employee information available on-line.  The tricky
part of the application is that not only the employee but also their
manager or HR representative should be able to retrieve the information. 
Since the information itself is somewhat sizable and I want to contain the
security-related components of the system I was considering encrypting the
information with an arbitrary key and publishing all encrypted information
on-line.  The idea would be that an employee or their manager
(authenticated separately through some traditional password exchange) could
then request the key to decrypt the information before or after downloading
the information separately.

    My first thought was to simply use DES but since the application should
be usable world-wide (and the encrypted data might even be retrieved across
international boundaries over our internal network) I was wondering if
there is a reasonably secure publicly available algorithm that anyone could
recommend.  I can't use anything patented or otherwise encumbered.  The
data is sensitive but hardly likely to invite serious brute-force attacks. 
I'm looking more for something to keep the information private from
"casual" hackers.

    Any recommendations for a reasonably secure publicly available
alogrithm?

Thanks in advance for any help,
-Pat Dirks.
