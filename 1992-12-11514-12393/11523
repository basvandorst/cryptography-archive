Path: msuinfo!caen!uunet!munnari.oz.au!yoyo.aarnet.edu.au!news.adelaide.edu.au!spam!ross
From: ross@spam.adelaide.edu.au (Ross Williams)
Newsgroups: sci.crypt
Subject: Looking for a secure digest algorithm.
Summary: Looking for a secure digest algorithm.
Keywords: cryptography message digest algorithms checksums
Message-ID: <1892@spam.ua.oz>
Date: 1 Dec 92 06:51:55 GMT
Sender: ross@spam.ua.oz
Followup-To: sci.crypt
Distribution: world
Organization: Statistics, Pure & Applied Mathematics, University of Adelaide
Lines: 87


Crypto netters,

About a month ago I posted a request for information on checksum and
digest algorithms. I received lots of email replies, and a summary of
the algorithms appears at the end of this message.

The checksum list is handy, but I am a little unsettled about the
digest algorithms (indigestion? :-) As far as I can see, the only
advantage of a digest over a checksum is that it offers cryptographic
security. However, many of them seem to be broken. The list of digests
I have obtained is:

   MD2
   MD4
   MD5
   NIST SHA     (is this a digest?)
   SNEFRU
   Purdy Hash   (is this a digest?)

Along with the descriptions people sent me of the algorithms, I was
told that MD2 and SNEFRU have been broken. Rumour has it that MD4 has
been broken (can anyone shed any light on this?). That really only
leaves MD5.

What I want to know is:

1) Does anyone know of any checksum or digest algorithms apart from
the ones listed at the end of this message?

2) Does anyone know how safe each of the digest algorithms above are?
Which ones are broken? Which ones are now looking weak?

3) Most importantly, does there currently exist a digest algorithm
that is generally agreed to be EXTREMELY secure, but which perhaps
is also very slow? In some contexts a week of CPU time would still be
acceptable to calculate a secure digest.

Please mail all replies (and requests for summaries of what people
send me) direct to the address below. I am able to access FTP sites.
Unless you state otherwise, replying will constitute permission for me
to include your reply in a summary which I may make public at a later
date.

Thanks for your help,

Ross Williams
ross@spam.adelaide.edu.au

PS: The application that I particularly have in mind for (3) is to do
with patents and other intellectual property situations, where one
wishes to establish an invention date by 1) writing up an idea in a
file, 2) publishing the file's checksum in a classified advertisement
of a major newspaper, and then 3) being able to prove later that you
had the idea before a certain date by disclosing the file, and
pointing to the advertisement. I'm sure that the existence and use of
such an extremely secure algorithm would simplify a lot of prior art
and invention date arguments.

PPS: I don't usually read sci.crypt. I looked through about 200
recent messages in the group for a FAQ list, but couldn't find one.


APPENDIX
========

Checksums
---------
CRC-16
CRC-32
16-bit CRCs:  CRC-16 (DECnet) CCITT-CRC
32-bit CRCs:  AutoDIN-II (Ethernet) and CRC-32
Felcher checksum (Dr Dobbs)
nullsig
Unix sum command

Digests
-------
MD2
MD4
MD5
NIST SHA
SNEFRU
Purdy Hash

--<End of message>--

