Path: msuinfo!uchinews!ncar!elroy.jpl.nasa.gov!usc!zaphod.mps.ohio-state.edu!sol.ctr.columbia.edu!spool.mu.edu!olivea!uunet!psinntp!ims.com!stevep
From: stevep@ims.com (Steve Poulsen)
Newsgroups: sci.crypt
Subject: Re: Pawn shops etc, and a NEW question.
Message-ID: <1992Feb18.190453.22924@ims.com>
Date: 18 Feb 92 19:04:53 GMT
References: <299ffefa.knapper@knapper.cactus.org>
Sender: usenet@ims.com (USENET News Poster)
Organization: Integrated Measurement Systems, Inc.
Lines: 54


In article <299ffefa.knapper@knapper.cactus.org>, woody@knapper.cactus.org (Woody Baker) writes:
|> 
|> 
|> I have a question for a real guru type.  How could I accomplish
|> the following:
|> 
|> 
|> 	1. 	Mass distribute a program or data file in encrypted form
|> 		such that some one who wanted to activate it, could
|> 		call me, supply say a credit card number, and be enabled
|> 		to use the file.  The distribution media for this file or 
|> 		program would have the same encrypted data on all copies.
|> 		
|> 		The real question, is how to handle this without causing
|> 		multiple people to be able to access the data.  For 
|> 		example, each user that buys access to it, would be given
|> 		an authorization code that would unlock the data, but if
|> 		he took that code to another copy of the distribution 
|> 		media, it would not unlock the item?

I'm not a guru, but I have a suggestion.  If you send the same software
to all users, that software is obviously not unique to each user.  You
must introduce something unique for each copy of the software.  Solution:
use the customer's credit card number.  Here's how it might work:

1) The customer calls you and gives you a credit card number.

2) You validate the card number and compute a secure hash value for the
   card number that you send to the customer.

3) The customer unlocks his software by giving the program two numbers:
   his credit card number and your hash value.

4) Each time the program runs, it prints the credit card number on the
   screen after performing a test to be sure nothing was changed in the
   software.

You could use a public key cryptosystem to compute the credit card hash
value.  Simply use your private key to encode the card number.  The
program would use the public key to decode and check the card number.
Anyone who tried to "give away" your program to someone else would be
publishing their credit card number by rule 4, above.  Who would be
stupid enough to give their credit card number to someone who steals
software?

Just a thought,

-Steve-

--
Steve Poulsen, Integrated Measurement Systems, Inc.  Beaverton, OR  USA
Voice: 503-626-7117   Fax: 503-644-6969   Fidonet: 1:105/41.16
INTERNET: stevep@ims.com   Compuserve: [70262,3115]
