Path: msuinfo!uchinews!linac!pacific.mps.ohio-state.edu!zaphod.mps.ohio-state.edu!sol.ctr.columbia.edu!spool.mu.edu!snorkelwacker.mit.edu!bloom-picayune.mit.edu!news.mit.edu!jis
From: jis@MIT.EDU (Jeffrey I. Schiller)
Newsgroups: sci.crypt
Subject: Re: the trusted public-key distribution problem
Message-ID: <JIS.92Feb9234239@big-screw.MIT.EDU>
Date: 10 Feb 92 04:42:39 GMT
References: <10297@cactus.org> <1992Jan31.194242.14474@talon.ucs.orst.edu>
	<JIS.92Feb8212449@big-screw.MIT.EDU> <10394@cactus.org>
Sender: news@athena.mit.edu (News system)
Distribution: na
Organization: Massachusetts Institute of Technology
Lines: 80
In-Reply-To: ritter@cactus.org's message of 9 Feb 92 19: 36:43 GMT
Nntp-Posting-Host: big-screw.mit.edu

In article <10394@cactus.org> ritter@cactus.org (Terry Ritter) writes:

    In <JIS.92Feb8212449@big-screw.MIT.EDU> jis@MIT.EDU (Jeffrey I. Schiller)
    writes:


   >3) Via a trusted path (ie. in person or U.S. Mail if need be) you submit
   >to the Certifying Authority (the entity which will "sign" your certificate
   >with its private component) *only* your public key along with proof of
   >identity.

    How can any "Certifying Authority" *possibly* identify who I am in
    any way *other* than in person?  Indeed, even "in person" ID checks
    cannot be *very* rigorous when checking strangers.  Even passports
    can be faked.

Answer: Via a trusted path. There are many ways this can be done. For
example if I am a CA at MIT, then when I receive a key certification
request via e-mail, I may call them back on the telephone (at a telephone
number I get out of the Institute directory, which I am implicitly
trusting) and verify the public key that they supplied in their message.
[In practice you don't verify the whole key, but instead you double check
the MD2 (or MD5) checksum of their prototype-certificate (a prototype
certificate is how the end user communicates their name and proposed
key. It is just like a regular certificate, except it is unsigned)]

Ultimately it will be up to each organization that participates in PEM
to define procedures appropriate for their organization. For those not
affiliated with an organization, there will be a "residential" CA which
will certify them. This CA will in essence accept a printed prototype
certificate which has been notarized as belonging to the requester.

Is this good enough... depends. It is as good as we get in our society.

    If another party can impersonate me, they can get their key certified
    in my name.  If that key is distributed to my correspondents, they
    may use the wrong key...

This risk is always with us. But if I can impersonate you, I can empty
your bank account too. The plans are for reasonable precautions to be taken
to prevent impersonation. Generally we expect that individual organizational
CAs will be quite reasonable. The weakest link will probably be with
the residential CA, or more specifically with the public notaries.

    ..a fairly common event.)  If a network node is subverted, that node
    may decipher messages from my correspondents in the wrong key, then
    re-encipher the messages in my correct key.  In this situation, I
    cannot find anything wrong, but messages to me might be better off
    sent in the clear; at least then I would not assume they were secure.

No information that is crucial to identification *ever* goes over the
network without it being signed. The only exception is for prototype-
certificates. However their cryptographic checksum (MD2 or MD5) is verified
via a non-network mechanism so any tampering will be detected.

Generally there are three threats:

1) Compromise of private component. Protection of your private component
is an implementation issue. It never *needs* to be revealed for certification
to happen. Therefore it is only on the local system that it is ever present
and it is up to the local system to protect it. 

2) Cryptographic attack. We feel that the algorithms that are being used
(DES and RSA) are reasonably resistant to attack.

3) Impersonation and/or a misbehaving CA who signs certificates with improper
names. Although I didn't go into detail here (those interested should read
RFC1113,RFC1114,RFC1115 and the more recent versions which are available
as Internet Drafts) with how the hierarchy of certification works let me
make some comments. Organizational level CAs can only certify names at
their own institution. Higher level CAs can do more harm, but it is more
likely that an improperly acting high-level CA will be detected (read the
RFC's and *think* about the problem and you will understand why). Legal
agreements will be in place such that an improperly acting high level
CA will find themselves taking on considerable liability if they act
improperly. Plans call for high level CAs to use special purpose hardware
to protect their private components against compromise, sort of like a
larger version of a smart card (a smart box if you will...).

			-Jeff
