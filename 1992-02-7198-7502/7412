Xref: msuinfo alt.security:5462 sci.crypt:7412 comp.unix.ultrix:12003
Path: msuinfo!uchinews!ncar!zaphod.mps.ohio-state.edu!uakari.primate.wisc.edu!ames!haven.umd.edu!decuac!hussar.dco.dec.com!mjr
From: mjr@hussar.dco.dec.com (Marcus J. OpenRanum)
Newsgroups: alt.security,sci.crypt,comp.unix.ultrix
Subject: Re: crypt16() -- how does it differ from crypt()?
Keywords: security, passwords, encryption, DES, Crack.
Message-ID: <1992Feb19.184327.28548@decuac.dec.com>
Date: 19 Feb 92 18:43:27 GMT
References: <PCL.92Feb19151045@black.oxford.ac.uk>
Sender: news@decuac.dec.com (USENET News System)
Organization: Digital Equipment Corporation, Washington ULTRIX Resource Center
Lines: 21
Nntp-Posting-Host: hussar.dco.dec.com

pcl@oxford.ac.uk (Paul Leyland) writes:

>However, I'd like to continue to monitor our usage of easy-to-guess
>passwords; partly to instill in our users a sense of what is and is
>not a reasonable password.

>The higher levels of Ultrix security make use of the crypt16() library
>routine, which generates a longer output and takes up to 16 characters
>of input.

	It looks like (from a quick glance at the source) that whoever
implemented crypt16() just took crypt() and pasted the function's code
together twice in sequence, so that the first 8 chars are crypted and
then the second 8 are also crypted, but not copying the salt.

	There's a check to see if the datum is longer than 8 chars, and
if it is, it seems to do exactly the same thing - I haven't gone through
and diffed it line-by-line but it sure looks like someone used their
cut&paste buffers in vi, or something...

mjr.
