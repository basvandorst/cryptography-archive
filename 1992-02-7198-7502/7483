Path: msuinfo!uchinews!ncar!elroy.jpl.nasa.gov!sdd.hp.com!hp-cv!ogicse!das-news.harvard.edu!husc-news.harvard.edu!husc10.harvard.edu!ender2
From: ender2@husc10.harvard.edu (Matt Ender)
Newsgroups: sci.crypt
Subject: Re: Novice RSA question
Message-ID: <1992Feb27.221011.9245@husc3.harvard.edu>
Date: 28 Feb 92 03:10:08 GMT
References: <1992Feb24.081920.16699@dde.dk> <18931.29ad33f3@ul.ie>
Organization: Harvard University Science Center
Lines: 28
Nntp-Posting-Host: husc10.harvard.edu

In article <18931.29ad33f3@ul.ie> 9127526@ul.ie (Declan Malone) writes:
>In article <1992Feb24.081920.16699@dde.dk>, ct@dde.dk (Claus Tondering) writes:
>> Assume that M is the message I want to send. The encrypted message
>> under RSA is
>> 
>> 	M^d mod n
>> 
>> where d and n are chosen appropriately.
>> 
>> But what is M? It is a number, of course, but how does it relate to
>> my message? Is it my entire message in ASCII seen as one great
>> several-thousand-digit number? Or do I encode each byte in my message?
>> (That would be incredibly easy to break.) Or do I encode each 32-bit
>> portion of my message? Or what?
>
>M is the full text of your ASCII message. This might seem impossible to do,
>because M would then be a huge number, and M^d astronomically so. In
>reality, the algorithms used need only look at a small part of the number
>at a time because of the modulus operation. This corresponds more or less
>to CRC calculations, if that means anything to you.
>
>I hope this helps.

This cannot be so, for lo, if M > n, it is impossible to distinguish
M^d from (M-n)^d when working in mod n.  M is any k-byte chunk of your
ASCII s.t. 256^k < n.

-- Matt
