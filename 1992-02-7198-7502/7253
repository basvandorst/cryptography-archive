Path: msuinfo!netnews.upenn.edu!jvnc.net!yale.edu!qt.cs.utexas.edu!zaphod.mps.ohio-state.edu!samsung!transfer!lectroid!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: sci.crypt
Subject: Re: Multiple encryption with simple XORed keys
Keywords: XOR encryption
Message-ID: <10862@lectroid.sw.stratus.com>
Date: 5 Feb 92 15:27:57 GMT
References: <1992Feb5.050356.7316@cs.umn.edu>
Sender: usenet@lectroid.sw.stratus.com
Distribution: usa
Organization: Stratus Computer, Software Engineering
Lines: 17

In article <1992Feb5.050356.7316@cs.umn.edu> dege@cs.umn.edu (Dege Jeffrey Charles) writes:
	[ re. XOR encryption ]
>[...] is it easier to break a file that was encrypted with
>keys of length 5 and 7 than it is to break a file that was encrypted
>with a key of length 35?

Yes, it is easier.  You've added 12 bytes of randomness versus 35.
That's 23 fewer equations someone has to solve to derive your key.


Consider a known-plaintext attack.  If you have a sample of plaintext of
length 14, you can almost certainly recover the full 5 and 7 byte keys.

You don't have to know where these 14 contiguous bytes are in the
plaintext.  You can try assuming they're in each possible position,
recover keys from that assumption (if possible) then use those keys
for other parts of the file to see if what comes out makes sense.
