Path: msuinfo!uchinews!ncar!elroy.jpl.nasa.gov!ames!sun-barr!apple!netcomsv!mork!pdh
From: pdh@netcom.com (Phil Howard KA9WGN / I am the NRA)
Newsgroups: sci.crypt
Subject: Re: Encrypted CDROM Software Distribution (was Pawn Shops etc ...)
Keywords: birthmarks
Message-ID: <jmnhm_npdh@netcom.com>
Date: 27 Feb 92 23:53:17 GMT
References: <1992Feb25.012231.8716@iecc.cambridge.ma.us> <edotto.699034656@uipsuxb> <90912002@bfmny0.BFM.COM> <1992Feb25.192356.3547@qualcomm.com> <1992Feb27.152314.24073@cl.cam.ac.uk>
Organization: Netcom - Online Communication Services  (408 241-9760 guest)
Lines: 66

rja14@cl.cam.ac.uk (Ross Anderson) writes:

>I was at a seminar in London in about 1985 run by the BCS Technology of
>Software Protection SIG. One of the speakers was from IBM, a lawyer rather
>than an engineer, and he discussed at some length how IBM set about proving
>that someone had copied their ROM or even bits of it.
>
>There were a number of tricks but the most universal and reliable which
>they'd come up with after years of effort and no doubt megabucks spent
>on consultants were what he called `software birthmarks'.
>
>These are the effects of programming style on code and the most common
>(and legally useful) example was the order in which registers are pushed
>and popped.

I in fact did this *TO* IBM several years ago.  I found a bug in a section
of their code in the VM/CP operating system version at the time.  After
arguing with the support people about whether or not it was a bug for
quite some time (it caused a paging error) I told them I had written a
fix for it, and they asked to see it.

One line of that code had a tricky form of loading a byte into a specific
position of a register, totally different from the way they did it in the
rest of the system.  It also reorganized 5 different places of doing the
same thing, which had the bug in 3 of them, into a subroutine call.

A few months later in an upgrade to the operating system I found my code.
The subroutine organization was there (general good programming practice)
as well as my one piece of trick code.  All the variable names were changed
and the comments rewritten.  But my signature was in place.  Sorry I cannot
tell you now what version it was.

It's not like I ever intended to sue IBM for a fix I wanted them to fix.


>A colleague here (Mark Lomas) used this idea to develop a software signer.
>Given a slab of executable code, it searches for places where code 
>sequences can be replaced by synonyms and uses permutations of these to 
>hide an encrypted copyright message.

Would it not make sense to also encode a registered serial number this way?


>It strikes me that this technology can make a useful contribution to the
>CDROM software problem. Device drivers for a given make of CDROM will
>typically be hard to reverse engineer and so make a prime candidate for
>a hidden signature. Public key techniques can then be added to make them
>tamperproof. The final touch will the ability to transfer birthmarks to
>all executables which the driver decodes from the CDROM and to ensure
>that they all get revalidated from a single authorisation code. Once a 
>year should be enough revalidation to ensure that serious users don't
>cheat, and that's as much as the software houses need: a bit of piracy
>can sell a good product, and, if you can allow piracy but control it
>by limiting the pirated software to an average six moths' usefulness,
>you could get the best of both worlds.

The big beef I have against all this is that usually it is the data itself
that is being sold, and is bundled with some very lousy software.  But with
everything all encrypted, no one gets the chance to create some decent
software to handle the data.  They fear it can lead to easy copying of the
data (which it can).
-- 
/***********************************************************************\
| Phil Howard  ---  KA9WGN  ---  pdh@netcom.com   |   "The problem with |
| depending on government is that you cannot depend on it" - Tony Brown |
\***********************************************************************/
