Xref: msuinfo sci.crypt:7220 alt.security:5037
Path: msuinfo!netnews.upenn.edu!jvnc.net!yale.edu!qt.cs.utexas.edu!cs.utexas.edu!uunet!hoptoad!wet!wet.UUCP
From: naga@wet.UUCP (Peter Davidson)
Newsgroups: sci.crypt,alt.security
Subject: Reply to respondents re pd encryption software
Message-ID: <3281@wet.UUCP>
Date: 2 Feb 92 11:24:09 GMT
Sender: naga@wet.UUCP
Followup-To: sci.crypt
Distribution: usa
Organization: Wetware Diversions, San Francisco
Lines: 124


 
This post does not constitute an explicit or implied recommendation of any
particular encryption software.  It is a reply to points raised by
respondents to a previous post.
 
First Phil:
 
> From: karn@qualcom.qualcomm.com (Phil Karn)
> Subject: Re: Why public domain encryption software may not be good enough.
> Date: 29 Jan 92 19:04:10 GMT
 
> |> 6.  Can floppy disks - as well as files - be encrypted?
>
> (under MS-DOS)
> C> A:
> A> des -e < plaintext > ciphertext
 
Well, no, what I had in mind was encrypting not simply files on floppy
disks but *whole* floppy disks - all the data in every sector.
 
> |> 8.  Does the software provide means for producing a permanent record of its
> |> operations, providing information about the files being encrypted or
> |> decrypted?
>
> You mean, like some sort of audit record that anybody could read that
> would list the encrypted files and the appropriate keys? No, I guess I
> forgot to add this feature. Mea culpa.
 
Did I say that the record should include the keys?  This is another example
of (conveniently) seeing idiocy where it does not exist.  (Phil is not
alone in this.)  The record should include only such information as dates,
names and file sizes - helpful in a situation where a large amount of data
encryption and decryption is being performed.
 
> |> 9. Is there provision for recovery of the plaintext if an encryption key
> |> is lost?  If the company file containing all the encryption keys gets
> |> trashed (with no backup) will the company suffer irreparable harm?
>
> You mean, like a benign trojan horse that automatically mails all keys
> back to the author so they can be recovered in case the poor customer
> loses them? Guess I forgot to do this too. Plus, I'm not sure how I
> would hide this in my freely available source code. People might find
> it and misinterpret my purely honorable and helpful intentions.
 
How imaginative of you to have supposed that this is anything like what I
meant.  I cannot here comment further on the provision that *some*
commercial encryption systems provide for recovery of a lost key because
that would be construed by some as advocacy - or worse! - advertising.
However, the quotation below from the article by Dr. Highland may give you
reason to reconsider this point.  And, yes, this is one reason for not
releasing source code, since release of the details of the manner in which
recovery of a lost key is made possible would reduce the security of the
system.
 
> From: flaps@dgp.toronto.edu (Alan J Rosenthal)
> Date: 30 Jan 92 21:25:21 GMT
>
> >9.  Is there provision for recovery of the plaintext if an encryption key
> >is lost?  If the company file containing all the encryption keys gets
> >trashed (with no backup) will the company suffer irreparable harm?
>
> Am I misunderstanding something here, or is this an extremely bizarre design
> objective?  Are you saying that you should be able to decrypt the encrypted
> text without having the key?    If so, in what sense is the text encrypted?
 
Another respondent, apparently with some unresolved psychological conflicts,
spews some bile and comments:
> Yep- being able to decrypt files without the key is the hallmark of a good
> cryptosystem.
 
His remark is clearly meant sarcastically but is actually true of
cryptosystems that are to be used a corporate environment:
 
        "What happens if an employee is sick or is killed or is fired and
    refuses to restore the encrypted files?  With many packages it is
    impossible to recover the files.  This interrupts work flow and is
    costly, especially if the files cannot be restored from other data.
 
        "On the other hand, there are some packages that provide for an
    'emergency' key usable only by the security administrator.  He or she,
    using a special recovery program, is able to decipher any file without
    knowing the original password.  This, we believe, is one essential
    element that must be included in any package selected."
 
                - H. J. Highland, FICS, "How to Evaluate Microcomputer
                Encryption Software and Hardware", Computers & Security,
                Vol. 6, No. 3, June 1987, pp.229-244.
 
> From: mrose@kali.stsci.edu (Mike Rose)
>  Subject: Re: Why public domain encryption software may not be good enough.
> Date: 29 Jan 92 15:56:52 GMT
>
> If there is a back door like this, the product is not secure.
 
I do not advocate the general inclusion of back doors in encryption
software.  Certainly the provision of a back door decreases the security of
a cryptosystem.  Given that I don't mention "the product" by name, perhaps
I may be permitted to reply that there is an *optional* back door
available.  When encrypting a file the user decides whether to include a
back door or not.  If maximum security is desired then no back door is
included.  If loss of the key is a concern then a back door is built in
(and even then can't be used just by anyone).  In this case the (small)
decrease in security is justified by the assurance that the key may be
recovered if lost.  This is a real-world issue that some cryptologists
might consider beneath the dignity of their subject, although it certainly
falls within the concern of data security (one of whose components is data
encryption).
 
My initial postings regarding the insecurity of DES in ECB mode were intend-
ed to be subject to criticism, as they were, although I was surprised to
find that some used them as an opportunity to display what they regard as
their own greatly superior knowledge.  Some were also offended at the men-
tion (and only by implicaton an advocacy) of a commercially available
product, which I now see as not entirely in keeping with the nature of
sci.crypt as a forum for purely scientific discussion.  In reply I have not
descended to the level of a couple of yahoos who hardly bothered to read
the material before rushing in to indulge their penchant for verbal abuse.
I think I have at least stimulated some thoughts as regards the requirements
of cryptographic software in non-military applications.  And I don't object
to lively debate.  Having followed sci.crypt for 18 months now I know the
discussions can occasionally become rather dry and abstract.  Not to mention
*humorless*.  Lighten up, folks!  The cold war is over.  (Both sides lost.)
 
