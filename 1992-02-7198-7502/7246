Path: msuinfo!caen!sol.ctr.columbia.edu!samsung!news.cs.indiana.edu!umn.edu!cs.umn.edu!dege
From: dege@cs.umn.edu (Dege Jeffrey Charles)
Newsgroups: sci.crypt
Subject: Multiple encryption with simple XORed keys
Summary: Is it tougher to decrpyt a 35 byte key than a 5 then 7 byte key?
Keywords: XOR encryption
Message-ID: <1992Feb5.050356.7316@cs.umn.edu>
Date: 5 Feb 92 05:03:56 GMT
Distribution: usa
Organization: University of Minnesota, Minneapolis, CSci dept.
Lines: 29


   Bear with me, this is a question from someone completely in the dark
when it comes to cryptography, so this is probably a stupid question.  But...
 
   The most obvious computer-based encryption system is to take a fixed-length
key and xor repeatedly xor it with the plaintext.  As I understand it, the
difficult of breaking this is dependent on the length of the key.  If the key
is longer than the text, you have a one-time-pad, which is basically secure.
If the key is one byte long, you have a straight substitution cypher, which
even I could break with paper and pencil.  The cues used to break the key
seem to be derived from the repetition caused by repeating the key.
 
   Now suppose you were to encrypt a file twice, with two different keys
of different length.  The repetitions now occur at longer intervals.  If
the lengths of the two keys are relatively prime, the new interval is the
product of the lengths of the two keys.
 
   Now for the question.  Is it easier to break such an encryption scheme
than one using a single encryption with a key with length equal to the
product?  That is, is it easier to break a file that was encrypted with
keys of length 5 and 7 than it is to break a file that was encrypted
with a key of length 35?  In particular, if we do a multi-pass encryption
with keys of length that provide a repeat cycle longer than the length of
the plain-text, do we provide equivalent security to a one-time pad?
 
   My first impression would be no.  I tend to be sceptical about things.
But is there a well-known method of attacking such a scheme?
 
=========================================
