Path: msuinfo!uchinews!linac!pacific.mps.ohio-state.edu!zaphod.mps.ohio-state.edu!think.com!snorkelwacker.mit.edu!bloom-picayune.mit.edu!news.mit.edu!jis
From: jis@MIT.EDU (Jeffrey I. Schiller)
Newsgroups: sci.crypt
Subject: Re: the trusted public-key distribution problem
Message-ID: <JIS.92Feb8212449@big-screw.MIT.EDU>
Date: 9 Feb 92 02:24:49 GMT
References: <10297@cactus.org> <1992Jan31.194242.14474@talon.ucs.orst.edu>
	<gltrg00@fido.asd.sgi.com>
Sender: news@athena.mit.edu (News system)
Distribution: na
Organization: Massachusetts Institute of Technology
Lines: 36
In-Reply-To: nelson@bolyard.wpd.sgi.com's message of Tue, 4 Feb 1992 23: 57:19 GMT
Nntp-Posting-Host: big-screw.mit.edu

In article <gltrg00@fido.asd.sgi.com> nelson@bolyard.wpd.sgi.com writes:

   I still reject, however, the notion that a trusted KDC must be allowed to
   generate the public/private key pairs it disseminates (which I understand
   to be part of the PEM proposal).  I still want a KDC that disseminates the
   public key that I give it.

Who said that a trusted KDC generates your key pair in the PEM world. As
a PEM developer, let me explain how it works:

1) You, the user, generate your own key pair.

2) You stash away the private key (we call it the private component of the
key pair) in such a way that only you can get to it. My implementation
prompts you for a password which is turned into a DES key which is then
used to encrypt it.

3) Via a trusted path (ie. in person or U.S. Mail if need be) you submit
to the Certifying Authority (the entity which will "sign" your certificate
with its private component) *only* your public key along with proof of
identity.

4) The Certifying Authority (CA) signs your certificate (the certificate
being a signed piece of data that associates your name with your public
key).

5) You use your private component and certificate to exchange PEM mail.

IT IS VERY IMPORTANT TO UNDERSTAND THAT THE CA NEVER HAS ACCESS TO YOUR
PRIVATE COMPONENT.

For those who do not wish to trust other people's binary software, the
current plan calls for a reference implementation of PEM (complete with
key generation facilities) to be available in source form for free.

			-Jeff
