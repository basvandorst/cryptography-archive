Xref: msuinfo alt.security:5312 sci.crypt:7330
Path: msuinfo!netnews.upenn.edu!jvnc.net!darwin.sura.net!europa.asd.contel.com!uunet!mcsun!sun4nl!fwi.uva.nl!casper
From: casper@fwi.uva.nl (Casper H.S. Dik)
Newsgroups: alt.security,sci.crypt
Subject: Re: disk scavenging
Message-ID: <1992Feb13.133233.16964@fwi.uva.nl>
Date: 13 Feb 92 13:32:33 GMT
References: <kpkdpcINNbdf@neuro.usc.edu> <kpknj2INNc21@neuro.usc.edu>
Sender: news@fwi.uva.nl
Organization: FWI, University of Amsterdam
Lines: 35
Nntp-Posting-Host: adam.fwi.uva.nl

merlin@neuro.usc.edu (merlin) writes:

>Does anyone have software already written to be patched into SunOS 4.1.1,
>SCO UNIX SYSV/386 3.2r2 ODT 1.1, MSDOS 3.3/4.01/5.0, or Apple MacOS SYS7
>which would prevent users from compromising confidential data by simply
>opening without writing large files and reading the previous contents of 
>the disk space allocated for their use?  VMS had an optional daemon that 
>would zero the contents of disk files before previously occupied blocks
>were reallocated to other users -- when a file was deleted, these blocks
>would be placed on a dirty free list, zeroed by a background process and
>only then moved to the clean free list for reallocation.

All unix versions know to me guarantee that unwritten contents of a
file is read as 0's. In Unix it is impossible to allocate a large file
and read the previous contents of the blocks. No blocks are allocated.
(The file is a hole). There was a bug in the berkeley fast file system once
that made the previous contents of partial blocks at the end of an already
existing but once truncated file reappear when the file was extended.

With MS-DOS it is indeed possible to do such things, but do you want
that kind of security on a otherwise unprotected environment?

>Curiously, no common system security book, article, or even a government
>orange book seems to either mention or give a solution for this problem.

This kind of security problems was discovered in the early days of
the computer era. I've heard many stories of programs that allocated
large chunks of memory on mainframes to scavenge for passwords.

I think this kind of security problem is pretty well understood.

Casper
-- 
						|	Casper H.S. Dik
						|	casper@fwi.uva.nl
