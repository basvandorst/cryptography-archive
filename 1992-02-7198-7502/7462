Path: msuinfo!caen!spool.mu.edu!agate!ucbvax!virtualnews.nyu.edu!brnstnd
From: brnstnd@nyu.edu (Dan Bernstein)
Newsgroups: sci.crypt
Subject: Re: Khufu and Khafre
Message-ID: <7971.Feb2616.14.2192@virtualnews.nyu.edu>
Date: 26 Feb 92 16:14:21 GMT
Article-I.D.: virtualn.7971.Feb2616.14.2192
References: <1992Feb14.034519.15459@qualcomm.com> <GAFTER.92Feb25144758@sun131.mri.com> <1992Feb26.040743.26780@qualcomm.com>
Organization: IR
Lines: 22

In article <1992Feb26.040743.26780@qualcomm.com> karn@chicago.qualcomm.com writes:
> This implies that I must ensure that
> the hash function is never given the same input twice, regardless of
> the message content.
  [ ... ]
> Comments?

Yep: I like it. It's starting to sound like Snuffle. :-) Snuffle makes
explicit provision for a time-key---typically public information derived
from the date and time, hostname, username, whatever, but in any case
something that's different for every message. The time-key is added to
the primary key before it's hashed. So even if you know lots of
time-keys and plaintexts and ciphertexts, you have to figure out the
primary key K knowing only the hash values h(K+T) for various different
T. That problem is, for good hash functions h, intractable.

(Actually, you don't need to compute K. You just need to compute h(K+T)
for some values T other than those which you were given. But the
encryptor would have to spit out 2^133 blocks on the average before
hitting the same T twice.)

---Dan
