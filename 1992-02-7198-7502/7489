Path: msuinfo!caen!spool.mu.edu!wupost!darwin.sura.net!Sirius.dfn.de!fauern!unido!mcsun!uknet!cam-cl!cam-cl!rja14
From: rja14@cl.cam.ac.uk (Ross Anderson)
Newsgroups: sci.crypt
Subject: Re: Encrypted CDROM Software Distribution (was Pawn Shops etc ...)
Keywords: birthmarks
Message-ID: <1992Feb28.144921.26975@cl.cam.ac.uk>
Date: 28 Feb 92 14:49:21 GMT
Article-I.D.: cl.1992Feb28.144921.26975
References: <90912002@bfmny0.BFM.COM> <1992Feb25.192356.3547@qualcomm.com> <1992Feb27.152314.24073@cl.cam.ac.uk> <uldH*d+u5@cs.psu.edu>
Sender: news@cl.cam.ac.uk (The news facility)
Reply-To: rja14@cl.cam.ac.uk (Ross Anderson)
Organization: U of Cambridge Computer Lab, UK
Lines: 28

In article <1992Feb27.152314.24073@cl.cam.ac.uk> I wrote, of a colleague's
software protection scheme:

> >Given a slab of executable code, it searches for places where code 
> >sequences can be replaced by synonyms and uses permutations of these to 
> >hide an encrypted copyright message.

In article <uldH*d+u5@cs.psu.edu>, so@basic.cs.psu.edu (Nicol C. So) replied:

> This idea is really interesting.  But if somebody were to copy your code,
> he could used the same tool to re-sign the code so that the code bears
> his own copyright messsage.  Right?

Right. The next step can be (a) to add a run-time version of the
signer which will retrieve the message, and some kind of algorithm to 
certify it (b) if you don't need copy protection but just a copyright
message, you can hide the message in various ways (c) use some simple
combined scheme for products which are not likely to come under 
sophisticated attack, eg insist that the hash of the whole executable 
file be divisible by some suitable large prime or it won't run at all.

To be realistic, you can consider the job done when taking the 
thumbprints out of the code will be more difficult for an attacker 
than just rewriting the whole piece of software. 

I hope this helps to give suitable ideas to people who need them.

Ross Anderson
