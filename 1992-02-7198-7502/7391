Path: msuinfo!uchinews!linac!uwm.edu!rpi!think.com!mips!mips!munnari.oz.au!bruce!sol4!alanf
From: alanf@sol4.cs.monash.edu.au (Alan Grant Finlay)
Newsgroups: sci.crypt
Subject: Re: Pawn shops etc, and a NEW question.
Message-ID: <alanf.698370995@sol4>
Date: 17 Feb 92 23:56:35 GMT
References: <299ffefa.knapper@knapper.cactus.org>
Sender: news@bruce.cs.monash.OZ.AU
Lines: 37

woody@knapper.cactus.org (Woody Baker) writes:

>How could I accomplish the following:
>
>	1. 	Mass distribute a program or data file in encrypted form
>		such that some one who wanted to activate it, could
>		call me, supply say a credit card number, and be enabled
>		to use the file.  The distribution media for this file or 
>		program would have the same encrypted data on all copies.
				       ^^^^
>		The real question, is how to handle this without causing
>		multiple people to be able to access the data.  For 
>		example, each user that buys access to it, would be given
>		an authorization code that would unlock the data, but if
>		he took that code to another copy of the distribution 
				     ^^^^^^^^^^^^
>		media, it would not unlock the item?
>

Unless the copies are different it is clearly impossible to achieve this.
If the authentication code depends upon some unique aspect of the
hardware upon which the software will run then it could be done.

This is equivalent to the problem of preventing the copying of
distributed copyright material.  You could try applying any of the standard
copy protection schemes.  None of them are even remotely secure unless they
require unique information for each copy (e.g. dongles) or run on machines
which provide for such unique information.

For open systems such as PCs what you could do (and I certainly wouldn't buy
such inconvenience) is to have the customer run a special program before
calling you which calculates a check sum based upon some relatively stable
yet potentially variable aspects of the hardware (for example some of the
rom based device driver code combined with setup information such as memory
speed).  This could be used to produce code which runs only upon a specific
hardware configuration.  This provides no protection when used by an
organisation with large numbers of identically configured PCs.
