Path: msuinfo!uchinews!ncar!elroy.jpl.nasa.gov!swrinde!network.ucsd.edu!qualcom.qualcomm.com!chicago.qualcomm.com!karn
From: karn@chicago.qualcomm.com (Phil Karn)
Newsgroups: sci.crypt
Subject: Re: Encrypted CDROM Software Distribution (was Pawn Shops etc ...)
Keywords: birthmarks
Message-ID: <1992Feb27.195709.4121@qualcomm.com>
Date: 27 Feb 92 19:57:09 GMT
References: <90912002@bfmny0.BFM.COM> <1992Feb25.192356.3547@qualcomm.com> <1992Feb27.152314.24073@cl.cam.ac.uk>
Sender: news@qualcomm.com
Organization: Qualcomm, Inc
Lines: 23
Nntp-Posting-Host: chicago.qualcomm.com

In article <1992Feb27.152314.24073@cl.cam.ac.uk> rja14@cl.cam.ac.uk writes:
>Device drivers for a given make of CDROM will
>typically be hard to reverse engineer and so make a prime candidate for
>a hidden signature. Public key techniques can then be added to make them
>tamperproof. The final touch will the ability to transfer birthmarks to
>all executables which the driver decodes from the CDROM

Why do I find the notion of a device driver that deliberately modifies
the data that it transfers to be downright frightening?

The technique of putting "signatures" into executables is a good way
to detect someone who copies your code into something he then sells or
gives away, but I don't see how it can really do much for the case you
describe. I say again: I think the problem of software piracy is
fundamentally insolvable by technical means, with the possible
exception of CPUs with on-chip program ROMs in completely tamper-proof
packages.  You certainly won't be able to do it as long as general
purpose computers have separate CPUs and storage devices with
communication busses that can be easily accessed physically by the
user. And with encryption, a pirate could easily hide the fact that he
possesses pirated software even if you gain access to his machine.

Phil
