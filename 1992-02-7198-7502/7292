Path: msuinfo!uchinews!linac!pacific.mps.ohio-state.edu!zaphod.mps.ohio-state.edu!qt.cs.utexas.edu!cs.utexas.edu!milano!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Newsgroups: sci.crypt
Subject: Re: the trusted public-key distribution problem
Summary: Can Public Key Really Help Us?
Message-ID: <10394@cactus.org>
Date: 9 Feb 92 19:36:43 GMT
References: <10297@cactus.org> <1992Jan31.194242.14474@talon.ucs.orst.edu> <JIS.92Feb8212449@big-screw.MIT.EDU>
Distribution: na
Organization: Capital Area Central Texas Unix Society, Austin, TX
Lines: 100


 Sorry if I am beating a dead horse here.  Immediately after my
 last response, Cactus was off the network for about four days,
 and another day was lost in recovery.  I lost the threads.


 In <JIS.92Feb8212449@big-screw.MIT.EDU> jis@MIT.EDU (Jeffrey I. Schiller)
 writes:


>3) Via a trusted path (ie. in person or U.S. Mail if need be) you submit
>to the Certifying Authority (the entity which will "sign" your certificate
>with its private component) *only* your public key along with proof of
>identity.

 How can any "Certifying Authority" *possibly* identify who I am in
 any way *other* than in person?  Indeed, even "in person" ID checks
 cannot be *very* rigorous when checking strangers.  Even passports
 can be faked.

 If another party can impersonate me, they can get their key certified
 in my name.  If that key is distributed to my correspondents, they
 may use the wrong key.  (Note that notification of a new key will be
 a fairly common event.)  If a network node is subverted, that node
 may decipher messages from my correspondents in the wrong key, then
 re-encipher the messages in my correct key.  In this situation, I
 cannot find anything wrong, but messages to me might be better off
 sent in the clear; at least then I would not assume they were secure.

 It seems likely to me that it would be far, far, far easier to carry
 off an impersonation than to "break" a serious cipher by technical
 means.



>IT IS VERY IMPORTANT TO UNDERSTAND THAT THE CA NEVER HAS ACCESS TO YOUR
>PRIVATE COMPONENT.

 This is only part of the problem.  Again, we have a store-and-forward
 network, and every node in that network has the power to manipulate
 message data, if someone wishes that to happen.  Such a person might
 be the owner of the equipment, or a technical person on that node, or
 someone who makes a virus which will do this sort of thing on various
 other nodes.


 1. Naturally, the CA can certify *any* key as coming from *anybody*,
 at their whim.  More likely, the organization could be "convinced" by
 government pressure, or critical individuals might be persuaded by
 cash or coercion.  When a key is wrongly certified in my name and
 distributed to my correspondents, my security is broken, and it may
 take me some time to find this out (if I ever do).  This is not
 security, this is the illusion of security.


 2. It is a normal part of cryptographic security to use new keys
 periodically.  This is necessary to limit the amount of information
 which would be exposed if a key were compromised.  Since I cannot
 memorize a long random key which will be changed periodically, my
 key must be stored somewhere, and so could be copied if physical
 security were incomplete or even relaxed momentarily.

 I must also change my public key when a trusted employee leaves,
 or when there is a burglary or fire, or perhaps even equipment
 repair.

 Presumably I can get a new key certified with a little hassle.
 The problem is that my correspondents may not know to use the new
 key.  If they continue to use the old key, and that key actually was
 compromised, their messages could be deciphered, then re-enciphered
 in the new key, and I would not know.

 I would like to send my new public key to my known correspondents,
 but if *their* security has been similarly penetrated, they may
 not get the same key that I send.  Again, I cannot know this.

 Future correspondents must get my key from somewhere.  But if they
 use a compromised key, security is broken, and they cannot know
 whether they are using a compromised key.  I cannot send them my new
 public key by open message, because that key could be altered in
 transit.  And if I try to send my key in *their* public key, I make
 the same assumption that they do, namely that the key I have for
 them has not been compromised.  That assumption may be wrong.

 We might think to update public keys by phone, but (aside from the
 difficulty of transporting 200-digit random numbers correctly by
 voice) then we must assume that the person who answers the
 phone is really our guy.  Again, it is likely to be far easier for
 someone to temporarily subvert the phone system than to "break"
 the cipher by technical means.  Yet most discussion continues to
 emphasize technical attacks.


 As far as I can tell, naive public key technology is not going to
 solve our key distribution problems, other than by simply giving us
 the illusion of security.  Perhaps a more complex protocol would
 do better; if so, I would like to hear about it.

 ---
 Terry Ritter   Blue Jean Computer Engineering   (512) 892-0494
