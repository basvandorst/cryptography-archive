Path: msuinfo!netnews.upenn.edu!jvnc.net!darwin.sura.net!wupost!uunet!mcsun!sun4nl!alchemy!nevries
From: nevries@cs.ruu.nl (Nico de Vries)
Newsgroups: sci.crypt
Subject: Practical authenticy verification?
Message-ID: <1992Feb03.143937.5923@cs.ruu.nl>
Date: 3 Feb 92 14:39:37 GMT
Organization: Utrecht University, Dept. of Computer Science
Lines: 41

I am looking for a practical way to do authenticy verification. 
This means I have string A (generated with the RSA MD5 cryptohash
function to speed up the authenticy verification process) and
a public procedure test and a private function sign such that
test(sign(A)) proves that A has been signed.

The RSA public key algorithm does this but a have a few problems
with it:
- It is slow (at least my C version is). I can probably make
  it a lot faster but I don't think I can make if fast enough.
- I don't know a fast way to generate the needed primes
  and to derive the exponents from them. I only know the
  theory behind them.
- Is is patented in the US which would make it difficult for
  me to distribute the software to the US.

I know of the existence of a CCITT(?) MAV message authenticy
verfication algortihm for which C code seems to be availble
but I didn't yet find a way to get it. Questions:
- how reliable is it (mathematical)
- Are there only 2^32 keys (someone wrote this) and is there a 
  way to enhance this (signing twice doesn't seem a good solution
  since this only doubles the brute force cracking time).
- how can I get the info, can someone email or mail (I pay all
  the expends of cource) needed information to me

What about PKP, Pretty Good (tm) Privacy. 
- I hear it uses RSA (what about US usage?). 
- Can it generate primes etc? 
- Is source available?

General
- are there other ways I don't know of yet?


Nico de Vries  MAIL: nevries@praxis.cs.ruu.nl
---
#include <dislaimer&MY opinion.h++>
"I know my English spelling is bad, but if I used my    "   - O      
"own language you probably couldn't read it at all.     "    |        
                                                            \_/    
