/* automatically generated by pepsy 8.0 #2 (pilsen), do not edit! */

#ifndef	_module_DO_defined_
#define	_module_DO_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#ifndef	PEPYPATH
#include <isode/psap.h>
#include <isode/pepsy.h>
#include <isode/pepsy/UNIV-types.h>
#else
#include "psap.h"
#include "pepsy.h"
#include "UNIV-types.h"
#endif



extern modtyp	_ZDO_mod;
#define _ZChainedModifyEntryArgumentDO	26
#define _ZChainedAddEntryArgumentDataDO	19
#define _ZChainedAbandonArgumentDO	8
#define _ZContinuationReferenceDO	43
#define _ZChainedListResultDataDO	13
#define _ZChainedListResultDO	12
#define _ZChainedCompareResultDataDO	7
#define _ZChainedModifyRDNArgumentDO	30
#define _ZChainedListArgumentDO	10
#define _ZChainedSearchArgumentDataDO	15
#define _ZChainingArgumentDO	35
#define _ZChainedListArgumentDataDO	11
#define _ZChainedReadResultDataDO	3
#define _ZChainedReadResultDO	2
#define _ZChainedRemoveEntryResultDataDO	25
#define _ZChainedReadArgumentDO	0
#define _ZDSAReferralParmDO	34
#define _ZChainedModifyRDNResultDO	32
#define _ZChainedCompareArgumentDO	4
#define _ZChainedReadArgumentDataDO	1
#define _ZAccessPointDO	44
#define _ZChainedModifyRDNArgumentDataDO	31
#define _ZChainedModifyEntryArgumentDataDO	27
#define _ZChainedRemoveEntryArgumentDO	22
#define _ZInvokeIDDO	47
#define _ZChainingResultDO	36
#define _ZDomainInfoDO	42
#define _ZChainedModifyRDNResultDataDO	33
#define _ZChainedSearchResultDO	16
#define _ZChainedCompareArgumentDataDO	5
#define _ZCrossReferenceDO	37
#define _ZChainedSearchResultDataDO	17
#define _ZOperationProgressDO	41
#define _ZReferenceTypeDO	38
#define _ZQAccessPointDO	45
#define _ZChainedRemoveEntryArgumentDataDO	23
#define _ZTraceItemDO	40
#define _ZChainedModifyEntryResultDO	28
#define _ZTraceInformationDO	39
#define _ZChainedAbandonResultDO	9
#define _ZChainedAddEntryResultDO	20
#define _ZISODEPresentationAddressDO	46
#define _ZChainedAddEntryArgumentDO	18
#define _ZChainedAddEntryResultDataDO	21
#define _ZChainedModifyEntryResultDataDO	29
#define _ZChainedCompareResultDO	6
#define _ZChainedRemoveEntryResultDO	24
#define _ZChainedSearchArgumentDO	14

#ifndef	lint
#define encode_DO_ChainedReadArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedReadArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedReadArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedReadArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedReadArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedReadArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedReadArgument_P    _ZChainedReadArgumentDO, &_ZDO_mod

#define encode_DO_ChainedReadArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedReadArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedReadArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedReadArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedReadArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedReadArgumentDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedReadArgumentData_P    _ZChainedReadArgumentDataDO, &_ZDO_mod

#define encode_DO_ChainedReadResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedReadResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedReadResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedReadResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedReadResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedReadResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedReadResult_P    _ZChainedReadResultDO, &_ZDO_mod

#define encode_DO_ChainedReadResultData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedReadResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedReadResultData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedReadResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedReadResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedReadResultDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedReadResultData_P    _ZChainedReadResultDataDO, &_ZDO_mod

#define encode_DO_ChainedCompareArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedCompareArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedCompareArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedCompareArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedCompareArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedCompareArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedCompareArgument_P    _ZChainedCompareArgumentDO, &_ZDO_mod

#define encode_DO_ChainedCompareArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedCompareArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedCompareArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedCompareArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedCompareArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedCompareArgumentDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedCompareArgumentData_P    _ZChainedCompareArgumentDataDO, &_ZDO_mod

#define encode_DO_ChainedCompareResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedCompareResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedCompareResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedCompareResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedCompareResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedCompareResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedCompareResult_P    _ZChainedCompareResultDO, &_ZDO_mod

#define encode_DO_ChainedCompareResultData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedCompareResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedCompareResultData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedCompareResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedCompareResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedCompareResultDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedCompareResultData_P    _ZChainedCompareResultDataDO, &_ZDO_mod

#define encode_DO_ChainedAbandonArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedAbandonArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedAbandonArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedAbandonArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedAbandonArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedAbandonArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedAbandonArgument_P    _ZChainedAbandonArgumentDO, &_ZDO_mod

#define encode_DO_ChainedAbandonResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedAbandonResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedAbandonResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedAbandonResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedAbandonResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedAbandonResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedAbandonResult_P    _ZChainedAbandonResultDO, &_ZDO_mod

#define encode_DO_ChainedListArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedListArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedListArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedListArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedListArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedListArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedListArgument_P    _ZChainedListArgumentDO, &_ZDO_mod

#define encode_DO_ChainedListArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedListArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedListArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedListArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedListArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedListArgumentDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedListArgumentData_P    _ZChainedListArgumentDataDO, &_ZDO_mod

#define encode_DO_ChainedListResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedListResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedListResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedListResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedListResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedListResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedListResult_P    _ZChainedListResultDO, &_ZDO_mod

#define encode_DO_ChainedListResultData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedListResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedListResultData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedListResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedListResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedListResultDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedListResultData_P    _ZChainedListResultDataDO, &_ZDO_mod

#define encode_DO_ChainedSearchArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedSearchArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedSearchArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedSearchArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedSearchArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedSearchArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedSearchArgument_P    _ZChainedSearchArgumentDO, &_ZDO_mod

#define encode_DO_ChainedSearchArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedSearchArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedSearchArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedSearchArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedSearchArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedSearchArgumentDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedSearchArgumentData_P    _ZChainedSearchArgumentDataDO, &_ZDO_mod

#define encode_DO_ChainedSearchResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedSearchResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedSearchResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedSearchResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedSearchResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedSearchResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedSearchResult_P    _ZChainedSearchResultDO, &_ZDO_mod

#define encode_DO_ChainedSearchResultData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedSearchResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedSearchResultData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedSearchResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedSearchResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedSearchResultDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedSearchResultData_P    _ZChainedSearchResultDataDO, &_ZDO_mod

#define encode_DO_ChainedAddEntryArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedAddEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedAddEntryArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedAddEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedAddEntryArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedAddEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedAddEntryArgument_P    _ZChainedAddEntryArgumentDO, &_ZDO_mod

#define encode_DO_ChainedAddEntryArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedAddEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedAddEntryArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedAddEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedAddEntryArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedAddEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedAddEntryArgumentData_P    _ZChainedAddEntryArgumentDataDO, &_ZDO_mod

#define encode_DO_ChainedAddEntryResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedAddEntryResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedAddEntryResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedAddEntryResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedAddEntryResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedAddEntryResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedAddEntryResult_P    _ZChainedAddEntryResultDO, &_ZDO_mod

#define encode_DO_ChainedAddEntryResultData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedAddEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedAddEntryResultData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedAddEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedAddEntryResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedAddEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedAddEntryResultData_P    _ZChainedAddEntryResultDataDO, &_ZDO_mod

#define encode_DO_ChainedRemoveEntryArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedRemoveEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedRemoveEntryArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedRemoveEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedRemoveEntryArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedRemoveEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedRemoveEntryArgument_P    _ZChainedRemoveEntryArgumentDO, &_ZDO_mod

#define encode_DO_ChainedRemoveEntryArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedRemoveEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedRemoveEntryArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedRemoveEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedRemoveEntryArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedRemoveEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedRemoveEntryArgumentData_P    _ZChainedRemoveEntryArgumentDataDO, &_ZDO_mod

#define encode_DO_ChainedRemoveEntryResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedRemoveEntryResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedRemoveEntryResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedRemoveEntryResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedRemoveEntryResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedRemoveEntryResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedRemoveEntryResult_P    _ZChainedRemoveEntryResultDO, &_ZDO_mod

#define encode_DO_ChainedRemoveEntryResultData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedRemoveEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedRemoveEntryResultData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedRemoveEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedRemoveEntryResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedRemoveEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedRemoveEntryResultData_P    _ZChainedRemoveEntryResultDataDO, &_ZDO_mod

#define encode_DO_ChainedModifyEntryArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedModifyEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedModifyEntryArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedModifyEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedModifyEntryArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedModifyEntryArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedModifyEntryArgument_P    _ZChainedModifyEntryArgumentDO, &_ZDO_mod

#define encode_DO_ChainedModifyEntryArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedModifyEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedModifyEntryArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedModifyEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedModifyEntryArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedModifyEntryArgumentDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedModifyEntryArgumentData_P    _ZChainedModifyEntryArgumentDataDO, &_ZDO_mod

#define encode_DO_ChainedModifyEntryResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedModifyEntryResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedModifyEntryResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedModifyEntryResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedModifyEntryResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedModifyEntryResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedModifyEntryResult_P    _ZChainedModifyEntryResultDO, &_ZDO_mod

#define encode_DO_ChainedModifyEntryResultData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedModifyEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedModifyEntryResultData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedModifyEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedModifyEntryResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedModifyEntryResultDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedModifyEntryResultData_P    _ZChainedModifyEntryResultDataDO, &_ZDO_mod

#define encode_DO_ChainedModifyRDNArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainedModifyRDNArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedModifyRDNArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainedModifyRDNArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedModifyRDNArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedModifyRDNArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedModifyRDNArgument_P    _ZChainedModifyRDNArgumentDO, &_ZDO_mod

#define encode_DO_ChainedModifyRDNArgumentData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedModifyRDNArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedModifyRDNArgumentData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedModifyRDNArgumentDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedModifyRDNArgumentData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedModifyRDNArgumentDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedModifyRDNArgumentData_P    _ZChainedModifyRDNArgumentDataDO, &_ZDO_mod

#define encode_DO_ChainedModifyRDNResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainedModifyRDNResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedModifyRDNResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainedModifyRDNResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedModifyRDNResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedModifyRDNResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedModifyRDNResult_P    _ZChainedModifyRDNResultDO, &_ZDO_mod

#define encode_DO_ChainedModifyRDNResultData(pe, top, len, buffer, parm) \
    enc_f(_ZChainedModifyRDNResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainedModifyRDNResultData(pe, top, len, buffer, parm) \
    dec_f(_ZChainedModifyRDNResultDataDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainedModifyRDNResultData(pe, top, len, buffer, parm) \
    prnt_f(_ZChainedModifyRDNResultDataDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainedModifyRDNResultData_P    _ZChainedModifyRDNResultDataDO, &_ZDO_mod

#define encode_DO_DSAReferralParm(pe, top, len, buffer, parm) \
    enc_f(_ZDSAReferralParmDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_DSAReferralParm(pe, top, len, buffer, parm) \
    dec_f(_ZDSAReferralParmDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_DSAReferralParm(pe, top, len, buffer, parm) \
    prnt_f(_ZDSAReferralParmDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_DSAReferralParm_P    _ZDSAReferralParmDO, &_ZDO_mod

#define encode_DO_ChainingArgument(pe, top, len, buffer, parm) \
    enc_f(_ZChainingArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainingArgument(pe, top, len, buffer, parm) \
    dec_f(_ZChainingArgumentDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainingArgument(pe, top, len, buffer, parm) \
    prnt_f(_ZChainingArgumentDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainingArgument_P    _ZChainingArgumentDO, &_ZDO_mod

#define encode_DO_ChainingResult(pe, top, len, buffer, parm) \
    enc_f(_ZChainingResultDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ChainingResult(pe, top, len, buffer, parm) \
    dec_f(_ZChainingResultDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ChainingResult(pe, top, len, buffer, parm) \
    prnt_f(_ZChainingResultDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ChainingResult_P    _ZChainingResultDO, &_ZDO_mod

#define encode_DO_CrossReference(pe, top, len, buffer, parm) \
    enc_f(_ZCrossReferenceDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_CrossReference(pe, top, len, buffer, parm) \
    dec_f(_ZCrossReferenceDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_CrossReference(pe, top, len, buffer, parm) \
    prnt_f(_ZCrossReferenceDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_CrossReference_P    _ZCrossReferenceDO, &_ZDO_mod

#define encode_DO_ReferenceType(pe, top, len, buffer, parm) \
    enc_f(_ZReferenceTypeDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ReferenceType(pe, top, len, buffer, parm) \
    dec_f(_ZReferenceTypeDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ReferenceType(pe, top, len, buffer, parm) \
    prnt_f(_ZReferenceTypeDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ReferenceType_P    _ZReferenceTypeDO, &_ZDO_mod

#define encode_DO_TraceInformation(pe, top, len, buffer, parm) \
    enc_f(_ZTraceInformationDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_TraceInformation(pe, top, len, buffer, parm) \
    dec_f(_ZTraceInformationDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_TraceInformation(pe, top, len, buffer, parm) \
    prnt_f(_ZTraceInformationDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_TraceInformation_P    _ZTraceInformationDO, &_ZDO_mod

#define encode_DO_TraceItem(pe, top, len, buffer, parm) \
    enc_f(_ZTraceItemDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_TraceItem(pe, top, len, buffer, parm) \
    dec_f(_ZTraceItemDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_TraceItem(pe, top, len, buffer, parm) \
    prnt_f(_ZTraceItemDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_TraceItem_P    _ZTraceItemDO, &_ZDO_mod

#define encode_DO_OperationProgress(pe, top, len, buffer, parm) \
    enc_f(_ZOperationProgressDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_OperationProgress(pe, top, len, buffer, parm) \
    dec_f(_ZOperationProgressDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_OperationProgress(pe, top, len, buffer, parm) \
    prnt_f(_ZOperationProgressDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_OperationProgress_P    _ZOperationProgressDO, &_ZDO_mod

#define encode_DO_DomainInfo(pe, top, len, buffer, parm) \
    enc_f(_ZDomainInfoDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_DomainInfo(pe, top, len, buffer, parm) \
    dec_f(_ZDomainInfoDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_DomainInfo(pe, top, len, buffer, parm) \
    prnt_f(_ZDomainInfoDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_DomainInfo_P    _ZDomainInfoDO, &_ZDO_mod

#define encode_DO_ContinuationReference(pe, top, len, buffer, parm) \
    enc_f(_ZContinuationReferenceDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ContinuationReference(pe, top, len, buffer, parm) \
    dec_f(_ZContinuationReferenceDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ContinuationReference(pe, top, len, buffer, parm) \
    prnt_f(_ZContinuationReferenceDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ContinuationReference_P    _ZContinuationReferenceDO, &_ZDO_mod

#define encode_DO_AccessPoint(pe, top, len, buffer, parm) \
    enc_f(_ZAccessPointDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_AccessPoint(pe, top, len, buffer, parm) \
    dec_f(_ZAccessPointDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_AccessPoint(pe, top, len, buffer, parm) \
    prnt_f(_ZAccessPointDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_AccessPoint_P    _ZAccessPointDO, &_ZDO_mod

#define encode_DO_QAccessPoint(pe, top, len, buffer, parm) \
    enc_f(_ZQAccessPointDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_QAccessPoint(pe, top, len, buffer, parm) \
    dec_f(_ZQAccessPointDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_QAccessPoint(pe, top, len, buffer, parm) \
    prnt_f(_ZQAccessPointDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_QAccessPoint_P    _ZQAccessPointDO, &_ZDO_mod

#define encode_DO_ISODEPresentationAddress(pe, top, len, buffer, parm) \
    enc_f(_ZISODEPresentationAddressDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_ISODEPresentationAddress(pe, top, len, buffer, parm) \
    dec_f(_ZISODEPresentationAddressDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_ISODEPresentationAddress(pe, top, len, buffer, parm) \
    prnt_f(_ZISODEPresentationAddressDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_ISODEPresentationAddress_P    _ZISODEPresentationAddressDO, &_ZDO_mod

#define encode_DO_InvokeID(pe, top, len, buffer, parm) \
    enc_f(_ZInvokeIDDO, &_ZDO_mod, pe, top, len, buffer, (char *) parm)

#define decode_DO_InvokeID(pe, top, len, buffer, parm) \
    dec_f(_ZInvokeIDDO, &_ZDO_mod, pe, top, len, buffer, (char **) parm)

#define print_DO_InvokeID(pe, top, len, buffer, parm) \
    prnt_f(_ZInvokeIDDO, &_ZDO_mod, pe, top, len, buffer)
#define print_DO_InvokeID_P    _ZInvokeIDDO, &_ZDO_mod


#endif   /* lint */
#include "do-cdefs.h"
#ifndef	PEPYPATH
#include "AF-types.h"
#include "DAS-types.h"
#include "IF-types.h"
#else
#include "AF-types.h"
#include "DAS-types.h"
#include "IF-types.h"
#endif



#define	type_DO_ChainedAbandonArgument	type_DAS_AbandonArgument

#define	type_DO_ChainedAbandonResult	type_DAS_AbandonResult

#define	type_DO_DomainInfo	PElement

#define	type_DO_ISODEPresentationAddress	PElement

struct type_DO_ChainedReadArgument {
    int         offset;
#define	type_DO_ChainedReadArgument_1	1
#define	type_DO_ChainedReadArgument_2	2

    union {
        struct type_DO_ChainedReadArgumentData *choice_DO_0;

        struct element_DO_0 {
            struct type_DO_ChainedReadArgumentData *element_DO_1;

            struct type_AF_AlgorithmIdentifier *element_DO_2;

            PE      element_DO_3;
        } *choice_DO_1;
    }       un;
};
#define	free_DO_ChainedReadArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedReadArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainedReadArgumentData {
    struct type_DO_ChainingArgument *member_DO_0;

    struct type_DAS_ReadArgument *member_DO_1;
};
#define	free_DO_ChainedReadArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedReadArgumentDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedReadResult {
    int         offset;
#define	type_DO_ChainedReadResult_1	1
#define	type_DO_ChainedReadResult_2	2

    union {
        struct type_DO_ChainedReadResultData *choice_DO_2;

        struct element_DO_4 {
            struct type_DO_ChainedReadResultData *element_DO_5;

            struct type_AF_AlgorithmIdentifier *element_DO_6;

            PE      element_DO_7;
        } *choice_DO_3;
    }       un;
};
#define	free_DO_ChainedReadResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedReadResultDO], &_ZDO_mod, 1)

struct type_DO_ChainedReadResultData {
    struct type_DO_ChainingResult *member_DO_2;

    struct type_DAS_ReadResult *member_DO_3;
};
#define	free_DO_ChainedReadResultData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedReadResultDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedCompareArgument {
    int         offset;
#define	type_DO_ChainedCompareArgument_1	1
#define	type_DO_ChainedCompareArgument_2	2

    union {
        struct type_DO_ChainedCompareArgumentData *choice_DO_4;

        struct element_DO_8 {
            struct type_DO_ChainedCompareArgumentData *element_DO_9;

            struct type_AF_AlgorithmIdentifier *element_DO_10;

            PE      element_DO_11;
        } *choice_DO_5;
    }       un;
};
#define	free_DO_ChainedCompareArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedCompareArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainedCompareArgumentData {
    struct type_DO_ChainingArgument *member_DO_4;

    struct type_DAS_CompareArgument *member_DO_5;
};
#define	free_DO_ChainedCompareArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedCompareArgumentDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedCompareResult {
    int         offset;
#define	type_DO_ChainedCompareResult_1	1
#define	type_DO_ChainedCompareResult_2	2

    union {
        struct type_DO_ChainedCompareResultData *choice_DO_6;

        struct element_DO_12 {
            struct type_DO_ChainedCompareResultData *element_DO_13;

            struct type_AF_AlgorithmIdentifier *element_DO_14;

            PE      element_DO_15;
        } *choice_DO_7;
    }       un;
};
#define	free_DO_ChainedCompareResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedCompareResultDO], &_ZDO_mod, 1)

struct type_DO_ChainedCompareResultData {
    struct type_DO_ChainingResult *member_DO_6;

    struct type_DAS_CompareResult *member_DO_7;
};
#define	free_DO_ChainedCompareResultData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedCompareResultDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedListArgument {
    int         offset;
#define	type_DO_ChainedListArgument_1	1
#define	type_DO_ChainedListArgument_2	2

    union {
        struct type_DO_ChainedListArgumentData *choice_DO_8;

        struct element_DO_16 {
            struct type_DO_ChainedListArgumentData *element_DO_17;

            struct type_AF_AlgorithmIdentifier *element_DO_18;

            PE      element_DO_19;
        } *choice_DO_9;
    }       un;
};
#define	free_DO_ChainedListArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedListArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainedListArgumentData {
    struct type_DO_ChainingArgument *member_DO_8;

    struct type_DAS_ListArgument *member_DO_9;
};
#define	free_DO_ChainedListArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedListArgumentDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedListResult {
    int         offset;
#define	type_DO_ChainedListResult_1	1
#define	type_DO_ChainedListResult_2	2

    union {
        struct type_DO_ChainedListResultData *choice_DO_10;

        struct element_DO_20 {
            struct type_DO_ChainedListResultData *element_DO_21;

            struct type_AF_AlgorithmIdentifier *element_DO_22;

            PE      element_DO_23;
        } *choice_DO_11;
    }       un;
};
#define	free_DO_ChainedListResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedListResultDO], &_ZDO_mod, 1)

struct type_DO_ChainedListResultData {
    struct type_DO_ChainingResult *member_DO_10;

    struct type_DAS_ListResult *member_DO_11;
};
#define	free_DO_ChainedListResultData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedListResultDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedSearchArgument {
    int         offset;
#define	type_DO_ChainedSearchArgument_1	1
#define	type_DO_ChainedSearchArgument_2	2

    union {
        struct type_DO_ChainedSearchArgumentData *choice_DO_12;

        struct element_DO_24 {
            struct type_DO_ChainedSearchArgumentData *element_DO_25;

            struct type_AF_AlgorithmIdentifier *element_DO_26;

            PE      element_DO_27;
        } *choice_DO_13;
    }       un;
};
#define	free_DO_ChainedSearchArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedSearchArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainedSearchArgumentData {
    struct type_DO_ChainingArgument *member_DO_12;

    struct type_DAS_SearchArgument *member_DO_13;
};
#define	free_DO_ChainedSearchArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedSearchArgumentDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedSearchResult {
    int         offset;
#define	type_DO_ChainedSearchResult_1	1
#define	type_DO_ChainedSearchResult_2	2

    union {
        struct type_DO_ChainedSearchResultData *choice_DO_14;

        struct element_DO_28 {
            struct type_DO_ChainedSearchResultData *element_DO_29;

            struct type_AF_AlgorithmIdentifier *element_DO_30;

            PE      element_DO_31;
        } *choice_DO_15;
    }       un;
};
#define	free_DO_ChainedSearchResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedSearchResultDO], &_ZDO_mod, 1)

struct type_DO_ChainedSearchResultData {
    struct type_DO_ChainingResult *member_DO_14;

    struct type_DAS_SearchResult *member_DO_15;
};
#define	free_DO_ChainedSearchResultData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedSearchResultDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedAddEntryArgument {
    int         offset;
#define	type_DO_ChainedAddEntryArgument_1	1
#define	type_DO_ChainedAddEntryArgument_2	2

    union {
        struct type_DO_ChainedAddEntryArgumentData *choice_DO_16;

        struct element_DO_32 {
            struct type_DO_ChainedAddEntryArgumentData *element_DO_33;

            struct type_AF_AlgorithmIdentifier *element_DO_34;

            PE      element_DO_35;
        } *choice_DO_17;
    }       un;
};
#define	free_DO_ChainedAddEntryArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedAddEntryArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainedAddEntryArgumentData {
    struct type_DO_ChainingArgument *member_DO_16;

    struct type_DAS_AddEntryArgument *member_DO_17;
};
#define	free_DO_ChainedAddEntryArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedAddEntryArgumentDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedAddEntryResult {
    int         offset;
#define	type_DO_ChainedAddEntryResult_1	1
#define	type_DO_ChainedAddEntryResult_2	2

    union {
        struct type_DO_ChainedAddEntryResultData *choice_DO_18;

        struct element_DO_36 {
            struct type_DO_ChainedAddEntryResultData *element_DO_37;

            struct type_AF_AlgorithmIdentifier *element_DO_38;

            PE      element_DO_39;
        } *choice_DO_19;
    }       un;
};
#define	free_DO_ChainedAddEntryResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedAddEntryResultDO], &_ZDO_mod, 1)

struct type_DO_ChainedAddEntryResultData {
    struct type_DO_ChainingResult *member_DO_18;

    struct type_DAS_AddEntryResult *member_DO_19;
};
#define	free_DO_ChainedAddEntryResultData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedAddEntryResultDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedRemoveEntryArgument {
    int         offset;
#define	type_DO_ChainedRemoveEntryArgument_1	1
#define	type_DO_ChainedRemoveEntryArgument_2	2

    union {
        struct type_DO_ChainedRemoveEntryArgumentData *choice_DO_20;

        struct element_DO_40 {
            struct type_DO_ChainedRemoveEntryArgumentData *element_DO_41;

            struct type_AF_AlgorithmIdentifier *element_DO_42;

            PE      element_DO_43;
        } *choice_DO_21;
    }       un;
};
#define	free_DO_ChainedRemoveEntryArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedRemoveEntryArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainedRemoveEntryArgumentData {
    struct type_DO_ChainingArgument *member_DO_20;

    struct type_DAS_RemoveEntryArgument *member_DO_21;
};
#define	free_DO_ChainedRemoveEntryArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedRemoveEntryArgumentDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedRemoveEntryResult {
    int         offset;
#define	type_DO_ChainedRemoveEntryResult_1	1
#define	type_DO_ChainedRemoveEntryResult_2	2

    union {
        struct type_DO_ChainedRemoveEntryResultData *choice_DO_22;

        struct element_DO_44 {
            struct type_DO_ChainedRemoveEntryResultData *element_DO_45;

            struct type_AF_AlgorithmIdentifier *element_DO_46;

            PE      element_DO_47;
        } *choice_DO_23;
    }       un;
};
#define	free_DO_ChainedRemoveEntryResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedRemoveEntryResultDO], &_ZDO_mod, 1)

struct type_DO_ChainedRemoveEntryResultData {
    struct type_DO_ChainingResult *member_DO_22;

    struct type_DAS_RemoveEntryResult *member_DO_23;
};
#define	free_DO_ChainedRemoveEntryResultData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedRemoveEntryResultDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedModifyEntryArgument {
    int         offset;
#define	type_DO_ChainedModifyEntryArgument_1	1
#define	type_DO_ChainedModifyEntryArgument_2	2

    union {
        struct type_DO_ChainedModifyEntryArgumentData *choice_DO_24;

        struct element_DO_48 {
            struct type_DO_ChainedModifyEntryArgumentData *element_DO_49;

            struct type_AF_AlgorithmIdentifier *element_DO_50;

            PE      element_DO_51;
        } *choice_DO_25;
    }       un;
};
#define	free_DO_ChainedModifyEntryArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedModifyEntryArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainedModifyEntryArgumentData {
    struct type_DO_ChainingArgument *member_DO_24;

    struct type_DAS_ModifyEntryArgument *member_DO_25;
};
#define	free_DO_ChainedModifyEntryArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedModifyEntryArgumentDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedModifyEntryResult {
    int         offset;
#define	type_DO_ChainedModifyEntryResult_1	1
#define	type_DO_ChainedModifyEntryResult_2	2

    union {
        struct type_DO_ChainedModifyEntryResultData *choice_DO_26;

        struct element_DO_52 {
            struct type_DO_ChainedModifyEntryResultData *element_DO_53;

            struct type_AF_AlgorithmIdentifier *element_DO_54;

            PE      element_DO_55;
        } *choice_DO_27;
    }       un;
};
#define	free_DO_ChainedModifyEntryResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedModifyEntryResultDO], &_ZDO_mod, 1)

struct type_DO_ChainedModifyEntryResultData {
    struct type_DO_ChainingResult *member_DO_26;

    struct type_DAS_ModifyEntryResult *member_DO_27;
};
#define	free_DO_ChainedModifyEntryResultData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedModifyEntryResultDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedModifyRDNArgument {
    int         offset;
#define	type_DO_ChainedModifyRDNArgument_1	1
#define	type_DO_ChainedModifyRDNArgument_2	2

    union {
        struct type_DO_ChainedModifyRDNArgumentData *choice_DO_28;

        struct element_DO_56 {
            struct type_DO_ChainedModifyRDNArgumentData *element_DO_57;

            struct type_AF_AlgorithmIdentifier *element_DO_58;

            PE      element_DO_59;
        } *choice_DO_29;
    }       un;
};
#define	free_DO_ChainedModifyRDNArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedModifyRDNArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainedModifyRDNArgumentData {
    struct type_DO_ChainingArgument *member_DO_28;

    struct type_DAS_ModifyRDNArgument *member_DO_29;
};
#define	free_DO_ChainedModifyRDNArgumentData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedModifyRDNArgumentDataDO], &_ZDO_mod, 1)

struct type_DO_ChainedModifyRDNResult {
    int         offset;
#define	type_DO_ChainedModifyRDNResult_1	1
#define	type_DO_ChainedModifyRDNResult_2	2

    union {
        struct type_DO_ChainedModifyRDNResultData *choice_DO_30;

        struct element_DO_60 {
            struct type_DO_ChainedModifyRDNResultData *element_DO_61;

            struct type_AF_AlgorithmIdentifier *element_DO_62;

            PE      element_DO_63;
        } *choice_DO_31;
    }       un;
};
#define	free_DO_ChainedModifyRDNResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedModifyRDNResultDO], &_ZDO_mod, 1)

struct type_DO_ChainedModifyRDNResultData {
    struct type_DO_ChainingResult *member_DO_30;

    struct type_DAS_ModifyRDNResult *member_DO_31;
};
#define	free_DO_ChainedModifyRDNResultData(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainedModifyRDNResultDataDO], &_ZDO_mod, 1)

struct type_DO_DSAReferralParm {
    struct type_DO_ContinuationReference *member_DO_32;

    struct type_IF_DistinguishedName *contextPrefix;
};
#define	free_DO_DSAReferralParm(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZDSAReferralParmDO], &_ZDO_mod, 1)

struct type_DO_ChainingArgument {
    integer     optionals;
#define	opt_DO_ChainingArgument_aliasedRDNs (000000001)

    struct type_IF_DistinguishedName *originator;

    struct type_IF_DistinguishedName *targetObject;

    struct type_DO_OperationProgress *operationProgress;

    struct type_DO_TraceInformation *traceInformation;

    char    aliasDereferenced;

    integer     aliasedRDNs;

    char    entryOnly;

    char    returnCrossRefs;

    struct type_DO_ReferenceType *referenceType;

    struct type_DO_DomainInfo *info;

    struct	qbuf	*timeLimit;

    struct type_DAS_SecurityParameters *member_DO_33;
};
#define	free_DO_ChainingArgument(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainingArgumentDO], &_ZDO_mod, 1)

struct type_DO_ChainingResult {
    struct type_DO_DomainInfo *info;

    struct element_DO_64 {
        struct type_DO_CrossReference *element_DO_65;

        struct element_DO_64 *next;
    } *crossReferences;

    struct type_DAS_SecurityParameters *member_DO_34;
};
#define	free_DO_ChainingResult(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZChainingResultDO], &_ZDO_mod, 1)

struct type_DO_CrossReference {
    struct type_IF_DistinguishedName *contextPrefix;

    struct type_DO_AccessPoint *accessPoint;
};
#define	free_DO_CrossReference(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZCrossReferenceDO], &_ZDO_mod, 1)

struct type_DO_ReferenceType {
    integer     parm;
#define	int_DO_ReferenceType_superior	1
#define	int_DO_ReferenceType_subordinate	2
#define	int_DO_ReferenceType_cross	3
#define	int_DO_ReferenceType_nonSpecificSubordinate	4
};
#define	free_DO_ReferenceType(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZReferenceTypeDO], &_ZDO_mod, 1)

struct type_DO_TraceInformation {
        struct type_DO_TraceItem *element_DO_66;

        struct type_DO_TraceInformation *next;
};
#define	free_DO_TraceInformation(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZTraceInformationDO], &_ZDO_mod, 1)

struct type_DO_TraceItem {
    struct type_IF_Name *dsa;

    struct type_IF_Name *targetObject;

    struct type_DO_OperationProgress *operationProgress;
};
#define	free_DO_TraceItem(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZTraceItemDO], &_ZDO_mod, 1)

struct type_DO_OperationProgress {
    integer     optionals;
#define	opt_DO_OperationProgress_nextRDNToBeResolved (000000001)

    integer     nameResolutionPhase;
#define	int_DO_nameResolutionPhase_notStarted	1
#define	int_DO_nameResolutionPhase_proceeding	2
#define	int_DO_nameResolutionPhase_completed	3

    integer     nextRDNToBeResolved;
};
#define	free_DO_OperationProgress(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZOperationProgressDO], &_ZDO_mod, 1)

struct type_DO_ContinuationReference {
    integer     optionals;
#define	opt_DO_ContinuationReference_aliasedRDNs (000000001)
#define	opt_DO_ContinuationReference_rdnsResolved (000000002)

    struct type_IF_Name *targetObject;

    integer     aliasedRDNs;

    struct type_DO_OperationProgress *operationProgress;

    integer     rdnsResolved;

    struct type_DO_ReferenceType *referenceType;

    struct member_DO_35 {
        struct type_DO_AccessPoint *member_DO_36;

        struct member_DO_35 *next;
    } *accessPoints;
};
#define	free_DO_ContinuationReference(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZContinuationReferenceDO], &_ZDO_mod, 1)

struct type_DO_AccessPoint {
    struct type_IF_Name *member_DO_37;

    struct type_DO_ISODEPresentationAddress *member_DO_38;
};
#define	free_DO_AccessPoint(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZAccessPointDO], &_ZDO_mod, 1)

struct type_DO_QAccessPoint {
    struct type_IF_Name *member_DO_39;

    struct type_DO_ISODEPresentationAddress *member_DO_40;
};
#define	free_DO_QAccessPoint(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZQAccessPointDO], &_ZDO_mod, 1)

struct type_DO_InvokeID {
    integer     parm;
};
#define	free_DO_InvokeID(parm)\
	(void) fre_obj((char *) parm, _ZDO_mod.md_dtab[_ZInvokeIDDO], &_ZDO_mod, 1)
#endif
