Path: msuinfo!caen!zaphod.mps.ohio-state.edu!moe.ksu.ksu.edu!kuhub.cc.ukans.edu!husc-news.harvard.edu!husc-news!dreier
Newsgroups: sci.crypt
Subject: Re: MD5 "birthday" math
Message-ID: <DREIER.92May21165722@husc10.harvard.edu>
From: dreier@husc10.harvard.edu (Roland Dreier)
Date: 21 May 92 16:57:22
References: <1992May21.155100.16225@ucsu.Colorado.EDU>
Organization: Harvard Arts and Sciences Computer Services, Cambridge, MA
Nntp-Posting-Host: husc10.harvard.edu
In-reply-to: rlm@spot.Colorado.EDU's message of 21 May 92 15:51:00 GMT
Lines: 34

In article <1992May21.155100.16225@ucsu.Colorado.EDU> rlm@spot.Colorado.EDU (MORRISON ROBERT) writes:
   Last September, there was an article in Dr. Dobb's journal on using
   MD5 as a hash function.  The author, Bruce Schneier, claimed that even
   with a million strings to hash, you'd only get a failure (collision)
   once each 2**128 comparisons.  I'd like to challange that claim, based
   on the so-called birthday "paradox", but am having trouble finding a
   way to do the necessary math.

    [some math deleted]

   Thanks in advance.

   Jim Kirkpatrick     jimkirk@corral.uwyo.edu

Well, first of all, let's assume that MD5 is in fact a "secure" hash
function, specifically that every hash value is equally probable. If we
assume this, it actually *is* true that if you just pick random pairs
of strings, hash them, and compare, the probability of a collision is
2^128.

But now suppose you have one million strings. There are 

        1000000*(1000000-1)/2 = 499999500000

distinct pairs of strings to compare.  So the probability of a collision
with these million string is:

        499999500000 / 2^128 = approx 1.5 * 10^(-27) = approx 1 / 2^(-89)

In general, for n strings the prob of a collision is n*(n-1)/2^(129).

Roland
dreier@husc.harvard.edu

