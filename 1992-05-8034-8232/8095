Path: msuinfo!netnews.upenn.edu!jvnc.net!darwin.sura.net!mips!swrinde!cs.utexas.edu!sun-barr!news2me.ebay.sun.com!exodus.Eng.Sun.COM!lila.Eng.Sun.COM!wdorsey
From: wdorsey@lila.Eng.Sun.COM (William Dorsey)
Newsgroups: sci.crypt
Subject: Re: Unix PGP
Keywords: caution
Message-ID: <l0lc41INN7ds@exodus.Eng.Sun.COM>
Date: 8 May 92 16:46:57 GMT
References: <l0k641INN3pa@exodus.Eng.Sun.COM> <1687@ltb.ltb.bso.nl>
Organization: Sun Microsystems, Mt. View, Ca.
Lines: 34
NNTP-Posting-Host: lila

In article <1687@ltb.ltb.bso.nl> wierda@ltb.ltb.bso.nl (Gerben Wierda) writes:
>
>Isn't the use of the time() function at install time (via an installation
>script) a good solution for this. time() could be used to generate a seed for
>the pseudorandom generator. The install time of the product is generally not
>known outside.
>
No.  See below.

>Or is the creation of a random seed not enough to make the pseudorandom numbers
>safe?
>
It is not.  You need a sequence of pseudorandom numbers with at least as
many bits as are in the keys.  A seed is used to define the starting
point in a pseudorandom number generator.  The sequence itself is
determinate, and can be solved for through computationally feasible means,
even if the starting point is unknown.

>Btw. What about the work being done in New Zealand and The Netherlands? Is this
>the only port of PGP. I understand that a Unix port would be available around
>june 92.
>
If anyone knows anything about these, I'd be curious.

If there's enough interest, I can probably adapt the code used by RPEM
to generate stochastic random numbers to PGP, and then publish it as a
separate plug-in module for Unix PGP.  I don't think that would involve
breaking any laws, though I'm sure someone will correct me if they think
I'm wrong.

On that subject, can anyone think of any reason not to use a sequence of
random bits derived from a random string a user is prompted for?

- Bill Dorsey
