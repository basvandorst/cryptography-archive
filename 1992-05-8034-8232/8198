Path: msuinfo!netnews.upenn.edu!jvnc.net!darwin.sura.net!mips!zaphod.mps.ohio-state.edu!rpi!usenet.coe.montana.edu!ogicse!hp-cv!hp-pcd!hplsla!ericb
From: ericb@hplsla.hp.com (Eric Backus)
Newsgroups: sci.crypt
Subject: Re: Improving on DES (was: Re: Is DES a group???)
Message-ID: <5830003@hplsla.hp.com>
Date: 22 May 92 23:38:54 GMT
References: <3094@transfer.stratus.com>
Organization: HP Lake Stevens, WA
Lines: 39

> : In fact, I think the world needs a good, simple transposition program --
> : one which takes all input (up to 8192 bytes, for example) and transposes
> : bytes based on a PRNG initialized from a password, so that the second block
> : has a different transposition from the first block.  The password
> : could even be augmented by the sum of the bytes in the first block -- to
> : get a per-message salt.
> : 
> : Care to write one?
> 
> The one below isn't the fastest in the world (it clocks in at about
> 30k chars/sec), but hey, it does everything else mentioned above.
> It's a quick hack, so I'm certain many improvements can be made.
> Enjoy.

I agree that we need a good, simple transposition program, but I
disagree that it should use a password and PRNG.  The function of the
transposition program is to scatter the input bits as widely as
possible.  It should not have to worry about password issues - does
your program clear the password out of the argv array, or out of
system memory when it's done with it?  These sorts of issues should be
dealt with by the encryption program, not by the transposition
program.  Remember, security is provided by encryption, not by a
password seeded PRNG.  You should be doing:

	des | transpose | des

I wrote a simple generic transposition program, and it runs at 450
KBytes/sec on my 68020 workstation.  It transposes blocks of 4096
bytes.  Assuming you avoid ECB mode, a one-bit change in the input to
the first des should change the entire 4096-byte block out of the
second des (and of course the change propogates to the end of the
file).  Even if you use ECB mode, a one-bit change affects 64 output
bytes rather than 8.

I'd be happy to send the source code to this program to anyone
interested.
--
						Eric Backus
						ericb@hplsla.hp.com
