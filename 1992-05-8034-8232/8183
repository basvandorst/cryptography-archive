Path: msuinfo!caen!spool.mu.edu!agate!linus!linus.mitre.org!bistromath!ptrei
From: ptrei@bistromath.mitre.org (Peter Trei)
Newsgroups: sci.crypt
Subject: Re: Cryptography to detect cheating
Keywords: copy/modify operations on programs
Message-ID: <1992May21.143228.21698@linus.mitre.org>
Date: 21 May 92 14:32:28 GMT
Article-I.D.: linus.1992May21.143228.21698
References: <May.20.08.23.54.1992.29687@cadenza.rutgers.edu> <1992May20.145340.14303@cl.cam.ac.uk>
Sender: news@linus.mitre.org (News Service)
Organization: The MITRE Corporation
Lines: 21
Nntp-Posting-Host: bistromath.mitre.org

In <May.20.08.23.54.1992.29687@cadenza.rutgers.edu>, Steve Masticola 
(masticol@cs.rutgers.edu) writes:

> It's occurred to me that one could detect copying of a programming
> assignment by keeping an asymmetrically encrypted edit history of the
> program file. If someone wanted to cheat by copying and changing
> variable names, this could be detected by matching prefixes of the
> edit histories among all assignments handed in.


      Um, why use crypto techniques at all? Just compare the compiled
executables. If you want to get fancy, you could compare the flow
control patterns on a routine by routine basis. Enough modifications
to significantly alter this would be as difficult as writing the
program anew.

     When the only tool you have is a hammer, everything looks like a
nail. - (someone wittier than I)

							Peter Trei
							ptrei@mitre.org
