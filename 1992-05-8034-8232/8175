Path: msuinfo!caen!uakari.primate.wisc.edu!samsung!transfer!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: sci.crypt
Subject: Re: Cryptography to detect cheating
Keywords: copy/modify operations on programs
Message-ID: <3171@transfer.stratus.com>
Date: 20 May 92 15:16:36 GMT
References: <May.20.08.23.54.1992.29687@cadenza.rutgers.edu>
Sender: usenet@transfer.stratus.com
Organization: Stratus Computer, Software Engineering
Lines: 18

In article <May.20.08.23.54.1992.29687@cadenza.rutgers.edu> masticol@cadenza.rutgers.edu (Steve Masticola) writes:
>It's occurred to me that one could detect copying of a programming
>assignment by keeping an asymmetrically encrypted edit history of the
>program file.
>
>Is there a simpler way of doing this, [...] ?

If the edit history is in the file and therefore editable, then the cheater
can simply delete it.

If the edit history is not editable it probably doesn't need encryption.
The system's own protections should be adequate.  However, with X-windows
copy-and-paste, edit history wouldn't help much.  The copy would be a new
creation as far as the system is concerned.


So -- if you want to catch cheating, you'll have to detect when two programs
are equivalent except for transformations of limited intelligence.
