Newsgroups: sci.crypt
Path: msuinfo!scss3.cl.msu.edu!mrr
From: mrr@scss3.cl.msu.edu (Mark Riordan)
Subject: Re: Random Generator for encryption
Message-ID: <1992May15.141502.23942@msuinfo.cl.msu.edu>
Sender: news@msuinfo.cl.msu.edu
Organization: Michigan State University
References: <1992May15.115345.1882@Informatik.TU-Muenchen.DE>
Date: Fri, 15 May 92 14:15:02 GMT

zeisset@Informatik.TU-Muenchen.DE (Stephan Zeisset) writes:
: 
: What do you think of the following method for generating
: pseudo-random numbers ?:
: 
: 1) Take some simple generators G_i, i=1..n 
:    which are based on the linear congruential method x` = (m*x+c) mod b
:    or on a (short) table of random numbers.
: 
: 2) Now increase the number of states of these generators
:    by using an intermediate table with an back-coupled index
:    (to increase also the cycle length).
: 
:    So you get advanced random generators A_i:
: (... etc. ...)

This sounds rather similar to the "Generalized Rotor" idea
proposed by John Michener.  He published a number of articles
based on this idea.  Some of them appear in:  Cryptologia,
July 1987; Cryptologia, April 1987; Dr. Dobbs Jounal, July 1985;
Cryptologia, April 1985.  He uses a series of tables, which he
compares to WWII-vintage rotor machines like SIGABA (sp?) and Enigma,
to "mix" otherwise cryptographically weak PRNG's.

The idea sounds basically sound to me.  The question is how much
mixing & how many base linear PRNG's you have to have to obtain
the same security offered by competing solutions like DES & so on.

Mark Riordan   mrr@scss3.cl.msu.edu
