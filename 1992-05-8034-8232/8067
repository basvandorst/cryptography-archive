Xref: msuinfo comp.arch:30612 sci.crypt:8067
Path: msuinfo!uchinews!linac!att!ucbvax!virtualnews.nyu.edu!brnstnd
From: brnstnd@nyu.edu (Dan Bernstein)
Newsgroups: comp.arch,sci.crypt
Subject: Re: The NSA Instruction
Message-ID: <23626.May223.12.4592@virtualnews.nyu.edu>
Date: 2 May 92 23:12:45 GMT
References: <1992Apr30.003348.6014@kithrup.COM> <1992May2.004537.1397@ultra.com> <1992May02.190414.12764@kithrup.COM>
Followup-To: comp.arch
Organization: IR
Lines: 32

In article <1992May02.190414.12764@kithrup.COM> sef@kithrup.COM (Sean Eric Fagan) writes:
> Once again, I am not aware of any compilers which will take code, such as
  [ HAKMEM-derived bit count idiom ]
> and turn it into a pop count instruction.

Gee, that complaint sure sounds familiar. As I've said many times
before, the compiler for a machine with such an instruction should
recognize at least one idiom for that instruction---and should
*document* the idiom so that people can use it. (As Hugh LaMaster
observed last time we had this discussion, this is exactly what vector
compilers do already.) With this and judicious #ifdefs you can get code
which is fast for any machine.

It would be even better if the language had a ``quickpick'' structure
(as Q does) to let the compiler choose the fastest code out of several
alternatives provided by the programmer. That way you could write out
several idioms for a critical operation like bit counting. Your code
would run quickly on any machine whose compiler recognized one of the
idioms---even if you had never heard of that machine when you wrote the
code!

The difference between idioms and vendor-specific language extensions is
that idioms are, by definition, portable---a compiler which doesn't
recognize an idiom will still produce correct code for it, just as a
compiler which doesn't recognize Convex's conventions for array aliasing
declarations in C will still produce correct code for arrays. Idioms
give programmers and vendors a chance to work together in producing
efficient code without any painful compatibility hassles.

(Followups to comp.arch---the NSA conspiracy theory is getting stale.)

---Dan
