Organization: Carnegie Mellon, Pittsburgh, PA
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!mips!darwin.sura.net!udel!rochester!cantaloupe.srv.cs.cmu.edu!crabapple.srv.cs.cmu.edu!andrew.cmu.edu!em21+
Newsgroups: sci.crypt
Message-ID: <oe6fZnS00VpZEOgYM=@andrew.cmu.edu>
Date: Wed, 20 May 1992 16:41:23 -0400 
From: Eric Edward Moore <em21+@andrew.cmu.edu>
Subject: Re: Cryptography to detect cheating
In-Reply-To: <1992May20.171606.22245@uwm.edu>
References: <May.20.08.23.54.1992.29687@cadenza.rutgers.edu> <1992May20.145340.14303@cl.cam.ac.uk>
	<1992May20.171606.22245@uwm.edu>

It seems to me that any automated code-comparison system is going to
ultimately fail.  You'll catch the offenders that copy code wholesale
and then change variable names or somesuch to "disguise" their code,
but you'rer not going to stop people who copy the basic "idea" behind
some piece of code, and you're not going to stop the sophisticated
cheaters.  It's far easier to transform working code to the point
where it's sufficiently different than to write your own.  re-arrange
argument order, change what kind of loop you use, switch from a
special-case funcion to the general-case one, change all the variable
names, and re-write some of the easy parts of the code, and *poof*
it's new code, or can't be distinguished from someone who just writes
similar code.  Also, you have to assume that the alogrithm by which
you test the code is going to become known to the students, or at
least enough of it to defeat it.

rick@ee.uwm.edu writes:
> rja14@cl.cam.ac.uk (Ross Anderson) writes:
>         1.  How is white-space used?
>                 A.  indentations (tricky if tabstops aren't mod-8...)
>                 B.  between function-names and following parentheses
>                 C.  between names and operators
>                 D.  between declarations (and bodies of code)

Can be fixed using an automated system.  Besides, most programming
cources try and teach a standad "style".

>         2.  How modular is it?
>                 A.  #include statements?
>                 B.  sub-sub-sub... function-calls?
>                 C.  Recursion???

Some hope here, but easily avoided, especially if you know they're
looking for it.

>         3.  How broad is the 'vocabulary' used?
>         4.  Are digits used in function/variable names much?
>         5.  What about upper/lower-case usage?

I'd change *all* variable and function names, so *none* of these will
yield any fruit.  Your best bet is something that works on the
structure of the code, what calls what and with what, etc.

> Still, I hardly think public-key cryptography is necessary.

Certainly not.  If you monitor the edits of the file, then they'll
find another way to edit it.

	-Love, Kisses, and a Neutron Bomb
		-Eric the Finn
