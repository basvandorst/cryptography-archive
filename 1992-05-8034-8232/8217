Newsgroups: sci.crypt
Path: msuinfo!scss3.cl.msu.edu!mrr
From: mrr@scss3.cl.msu.edu (Mark Riordan)
Subject: Re: ebcoding public keys in easier-to-read format
Message-ID: <1992May27.155853.13497@msuinfo.cl.msu.edu>
Sender: news@msuinfo.cl.msu.edu
Organization: Michigan State University
References: <1992May27.074712.12076@ms.uky.edu>
Date: Wed, 27 May 92 15:58:53 GMT

sean@ms.uky.edu (Sean Casey) writes:
: I'm not up to remembering a 200 digit number, even with mnemonic aids,
: but I would like to see encoding formats that are more emenable to
: putting into signatures or letters. I've seen the BER format but I'd
: like to see something really compact.

Here's a concrete example, sample output from a program under development:

User: fictitious@node.domain
PublicKeyInfo:
 MFowCgYEVQgBAQICAgsDTAAwSQJCBZjdie62Fwv0s9+4Um5tirw4FsHdyrLaU0eL
 g2vLpKKw/R8p2X0r9VYpcNpLOQi9tJv7UMUU2u54FVwZMLKdSqnTAgMBAAF=

This is an RFC 1113-encoding of a BER-encoded RSA public key with
a 523-bit modulus.  The BER encoding does add a little overhead,
but only a few percent.  The RFC 1113-encoding adds 33% overhead,
but that's the price you pay for printable encoding.  I don't think
you can get significantly more compact than this.

(The program mentioned above is probably still 2 months away from
final release.)

Mark Riordan   mrr@scss3.cl.msu.edu

