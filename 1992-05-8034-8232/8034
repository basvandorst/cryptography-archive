Xref: msuinfo comp.arch:30487 sci.crypt:8034
Path: msuinfo!uchinews!linac!pacific.mps.ohio-state.edu!zaphod.mps.ohio-state.edu!rpi!gatech!news.byu.edu!news.mtholyoke.edu!nic.umass.edu!dime!dime.cs.umass.edu!moss
From: moss@cs.umass.edu (Eliot Moss)
Newsgroups: comp.arch,sci.crypt
Subject: Re: The NSA Instruction
Message-ID: <MOSS.92Apr29202340@ibis.cs.umass.edu>
Date: 30 Apr 92 00:23:40 GMT
References: <29354@hoptoad.uucp>
Sender: news@dime.cs.umass.edu
Reply-To: moss@cs.umass.edu
Followup-To: comp.arch
Organization: Dept of Comp and Info Sci, Univ of Mass (Amherst)
Lines: 38
In-reply-to: gnu@hoptoad.uucp's message of 29 Apr 92 20:56:36 GMT

I believe that at least on machine in the Control Data / Cray family has a
Population Count instruction. It is useful in parts of garbage collection
algorithms that work using mark bits, to count the bits quickly. There was
interesting lore developed at the MIT Labs (Computer Science and AI) on the
best sequences for doing this on a PDP-10, which does not support it directly.
As for the Find First instructions, machine that I know provide it include the
PDP-10 (reportedly put in for telephone company folks, who might want to scan
quickly for phones lines with state changes, or something like that) and the
VAX. I believe the Tera computer design (not TeraData!) has both instructions,
and lots of other interesting bit twiddling things I have not seen elsewhere.
The hacked up PDP-1 that was at MIT for a number of years could probably do
these things, too, since one project (probably somebody's MS thesis at the
time) put a fancy collection of shifting/rotating, etc. instructions into the
machine. The 80386 has Find First instructions (for both bit reading
directions), the 68010 and Alpha do not. I don't have any other processor
books handy. I don't think IBM 360/370 series computers have this support
either.

The only way in which the population count and find first instructions might
not be considered RISC-like is there frequency of occurrence, following the
principle of "most bang for the chip real estate used". Of course, that
principle is application dependent: if you're making processors for a
particular domain in which Pop Count / Find First might be important, then
perhaps that should go in. In fact, the exatr logic in a functional unit may
not be that bad. The use of opcodes, and the possibility that these
instructions might be harder than most to make execute in a single short clock
cycle, might also argue against including them, especially if the issue is
scanning a large array, and the cycles used in a reasonable loop body might be
comparable to or less than the load and store costs on cache miss. Just a
thought, anyway.
--

		J. Eliot B. Moss, Assistant Professor
		Department of Computer Science
		Lederle Graduate Research Center
		University of Massachusetts
		Amherst, MA  01003
		(413) 545-4206, 545-1249 (fax); Moss@cs.umass.edu
