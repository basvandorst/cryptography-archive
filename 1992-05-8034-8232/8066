Xref: msuinfo comp.arch:30610 sci.crypt:8066
Path: msuinfo!netnews.upenn.edu!jvnc.net!darwin.sura.net!mips!mips!munnari.oz.au!uunet!kithrup!sef
From: sef@kithrup.COM (Sean Eric Fagan)
Newsgroups: comp.arch,sci.crypt
Subject: Re: The NSA Instruction
Message-ID: <1992May02.190414.12764@kithrup.COM>
Date: 2 May 92 19:04:14 GMT
References: <1992Apr29.214606.28406@dcc.uchile.cl> <1992Apr30.003348.6014@kithrup.COM> <1992May2.004537.1397@ultra.com>
Organization: Kithrup Enterprises, Ltd.
Lines: 30

In article <1992May2.004537.1397@ultra.com> shj@ultra.com (Steve Jay {Ultra Unix SW Mgr}) writes:
>In <1992Apr30.003348.6014@kithrup.COM> sef@kithrup.COM (Sean Eric Fagan) writes:
>>I'm not aware of any compilers that will take code and replace it with a pop
>>count instruction.  (Might be interesting to ask in comp.compilers, though.)
>CDC's Fortran compiler did, starting with FTN version 4, I believe.  It
>had a whole bunch of "intrinsic" functions, such as SHIFT, COUNT, etc.,
>that would turn into the appropriate in-line machine instructions.

Once again, I am not aware of any compilers which will take code, such as

int bitcnt(n)
register unsigned long n;
{
	register unsigned long tmp;

	tmp = n - ((n >> 1) & 033333333333) - ((n >> 2) & 011111111111);
	return ((tmp + (tmp >> 3)) & 030707070707) % 63;
}

and turn it into a pop count instruction.

If I'd meant built-in functions that were, essentially, inline assembly, I
would not have brought up the example of the Cyber FORTRAN compiler and
COUNT(), would I've?

-- 
Sean Eric Fagan  | "One form to rule them all, one form to find them, one
sef@kithrup.COM  |  form to bring them all and in the darkness rewrite the
-----------------+  hell out of them" -- sendmail ruleset 3 comment from DEC.
Any opinions expressed are my own, and generally unpopular with others.
