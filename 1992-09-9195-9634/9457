Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!wupost!think.com!paperboy.osf.org!osf.org!karger
From: karger@osf.org (Paul A. Karger)
Subject: Re: "Sneakers" -- action/adventure movie about Cryptography
Message-ID: <1992Sep21.174333.7942@osf.org>
Sender: news@osf.org (USENET News System)
Organization: Open Software Foundation
References: <6395@vtserf.cc.vt.edu> <1992Sep10.034159.1617@qiclab.scn.rain.com> <1992Sep13.160057.10250@sugra.uucp> <1992Sep18.191401.9537@wdl.loral.com>
Date: Mon, 21 Sep 1992 17:43:33 GMT
Lines: 18

In article <1992Sep18.191401.9537@wdl.loral.com>, mab@wdl39.wdl.loral.com (Mark A Biggar) writes:
|> 
|> There is an exactly analogous method to the bike lock cracking method
|> that can be used to crack byte at a time encrypted passwords using a memory
|> page boundry.  Start with a pointer 1 byte from the end of the memory page
|> load succesive trial first bytes for your guessed password into the last
|> byte of the page, then call the password checker using the pointer.  If
|> the checker rejected the trail the first byte is wrong, increment the
|> byte and try again. If you get a page fault the first byte is right, then
|> back up the pointer one byte and try two byte guesses using the known first
|> byte and successive second bytes.  repeat until you have all the bytes of the
|> password.  Asuming 10 byte passwords 256 values per byte this takes on average
|> 10*256/2 = 1280 trys compared to O(256**10) trys.  If I remember right a early
|> version of the passwords on OS/360 were crackable this way.

Actually, it was the TENEX operating system, not OS/360.

	- Paul
