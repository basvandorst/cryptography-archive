Newsgroups: sci.crypt
Path: msuinfo!caen!uunet!metaflow!rschnapp
From: rschnapp@metaflow.com (Russ Schnapp)
Subject: Incremental password breakage (was Re: "Sneakers" )
Message-ID: <Busv5s.5p7@metaflow.com>
Sender: usenet@metaflow.com
Nntp-Posting-Host: habu
Organization: Metaflow Technologies Inc.
References: <6395@vtserf.cc.vt.edu> <1992Sep10.034159.1617@qiclab.scn.rain.com> <1992Sep13.160057.10250@sugra.uucp> <1992Sep18.191401.9537@wdl.loral.com>
Date: Sat, 19 Sep 1992 00:39:27 GMT
Lines: 22

In article <1992Sep18.191401.9537@wdl.loral.com>, mab@wdl39.wdl.loral.com (Mark A Biggar) writes:
|> There is an exactly analogous method to the bike lock cracking method
|> that can be used to crack byte at a time encrypted passwords using a memory
|> page boundry.  Start with a pointer 1 byte from the end of the memory page
|> load succesive trial first bytes for your guessed password into the last
|> byte of the page, then call the password checker using the pointer.  If
|> the checker rejected the trail the first byte is wrong, increment the
|> byte and try again. If you get a page fault the first byte is right, then
|> back up the pointer one byte and try two byte guesses using the known first
|> byte and successive second bytes.  repeat until you have all the bytes of the
|> password.  Asuming 10 byte passwords 256 values per byte this takes on average
|> 10*256/2 = 1280 trys compared to O(256**10) trys.  If I remember right a early
|> version of the passwords on OS/360 were crackable this way.

Of course, you can easily avoid this by having the password checker allocate
its own password buffer.  
-- 

...Russ Schnapp
BIX: rschnapp           Email: uunet!metaflow!rschnapp or rschnapp@metaflow.com
Metaflow Technologies   Voice: 619/452-6608x230;  FAX: 619/452-0401
La Jolla, California    Unless otw specified, I`m speaking only for myself!
