Newsgroups: sci.crypt
Path: msuinfo!caen!sdd.hp.com!cs.utexas.edu!milano!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: PKZIP CONTEST.....
Message-ID: <1992Sep20.100630.27119@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <1992Sep14.211553.125699@ns1.cc.lehigh.edu> <463@chorus.chorus.fr> <3063@accucx.cc.ruu.nl>
Date: Sun, 20 Sep 1992 10:06:30 GMT
Lines: 59


 In <3063@accucx.cc.ruu.nl> nevries@accucx.cc.ruu.nl (Nico E de Vries)
 writes:

>> The contest seems to have disposed of those claims.

>No it hasn't. It only proved that in a specific unrealistic
>case it is hard to find the password. The real known weaknesses
>of the system are circumvented:
>   - a special check is build in to allow verification of
>     the password. This means a password can be checked without
>     decrypting the file. For a wrong password the chance is
>     about 1:65536 that it can not be detected.

 Yes, pkzip may have other weaknesses, but the main claim which
 was made here was that pkzip was breakable based on the password
 "special check."  Well, the "special check" is available in the
 contest file, and yet the contest remains unsolved.  That counts.

 As you know, the point of the "special check" is to avoid doing
 a decryption (and overwriting existing files) when the wrong
 password is used.  When a wrong password sneaks by the "special
 check," it still will not decipher the file correctly, although
 this does take time, and may overwrite a file with junk.  Not
 detecting a wrong password is not a security problem.

 Actually, calling the "special check" a weakness is like calling
 factoring a weakness in RSA.  Yeah, factoring is a problem if we
 use short primes, so we don't do that.  The "special check" is a
 problem if we use short keys, which is something we should never
 do anyway.  It's not a bug, it's part of the design.


>Correct. The contest has been optimized (in a very unrealistic way)
>to "prove" security. Problems with the contest are:
>   - key uses unusual characters (all possible IBM characters)

 This may or may not be "unrealistic," but it certainly *is* the
 correct way to use a cipher.  *Every* key should have at least
 one or two unusual characters in it.

 Again, if you do not like the contest, I invite you to design
 one you would like.  You need not actually attempt to solve it.
 If someone wishes to claim that cipher x is actually breakable,
 all they need to do is solve the contest.  If someone produces
 a theoretical basis for a practical attack, then they can say
 "believed to be breakable."  Absent either a real break or an
 analytical weakness, a cipher could be either "unexamined" or
 "thought strong."

 As a group (and as an industry), we need to get away from
 baseless never-ending debates on cipher strength.  Setting up
 standards for a reasonable contest may be one way to approach
 at least part of the problem.

 ---
 Terry Ritter   ritter@cactus.org


