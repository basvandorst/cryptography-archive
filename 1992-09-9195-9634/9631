Newsgroups: sci.crypt
Path: msuinfo!caen!sdd.hp.com!ux1.cso.uiuc.edu!usenet.ucs.indiana.edu!yankton!shulick
From: shulick@yankton.ucs.indiana.edu (Sam Hulick)
Subject: One-way encryption...HOW?
Message-ID: <BvCz88.26w@usenet.ucs.indiana.edu>
Originator: shulick@yankton
Sender: news@usenet.ucs.indiana.edu (USENET News System)
Nntp-Posting-Host: yankton.ucs.indiana.edu
Reply-To: shulick@yankton.ucs.indiana.edu
Organization: Vallen Software
Date: Tue, 29 Sep 1992 21:19:20 GMT
Lines: 19


Yes.. I admit, I'm new to the science of encryption, but I'm curious: How can
there exist such a thing as "one-way" encryption (e.g. DES, UNIX crypt)?  Can't
ALL algorithms have a "nemesis?"  For instance, take a very simple algorithm to
encrypt a single character.  newchar = char * 38 - 200.  After so many guesses,
that algorithm can be cracked and reversed.  What makes UNIX password
encryption so complex?  I understand a little of it, e.g. an encrypted passwd
consists of 13 chars, 2 of which are the salt, the rest is the actual password.
The salt determines how the password will be interpreted, correct?  But that
can't be true, if UNIX encryption is "one-way."  The encrypted password is
never interpreted, it's the inputted password that is ENcrypted and compared to
the real encrypted password.  Could someone briefly explain how this works, or
email me some kind of already-made documentation by UNIX?  Source code for UNIX
encryption would also be appreciated.  Thanks.

-- 
Sam Hulick          | "The worst sin towards our fellow creatures is not to
shulick@indiana.edu | hate them, but to be indifferent to them: that's the
(NeXTmail welcome)  | essence of inhumanity."  --George Bernard Shaw
