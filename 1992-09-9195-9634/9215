Path: msuinfo!uchinews!linac!uwm.edu!spool.mu.edu!darwin.sura.net!ukma!rutgers!rochester!cantaloupe.srv.cs.cmu.edu!GS6.SP.CS.CMU.EDU!jmount
From: jmount+@CS.CMU.EDU (John Mount)
Newsgroups: sci.crypt
Subject: Re: "Sneakers" -- action/adventure movie about Cryptography
Message-ID: <Bu7q9r.4zz.2@cs.cmu.edu>
Date: 7 Sep 92 14:44:15 GMT
References: <1391@eouk18.eoe.co.uk> <6395@vtserf.cc.vt.edu> <1992Sep4.205842.12303@qualcomm.com>
Sender: news@cs.cmu.edu (Usenet News System)
Organization: Carnegie Mellon University
Lines: 38
Nntp-Posting-Host: gs6.sp.cs.cmu.edu

In article <1992Sep4.205842.12303@qualcomm.com>, karn@qualcom.qualcomm.com (Phil Karn) writes:
|> It sounds like that scene was written by the same guy who did the
|> climax of "War Games". Remember how the computer (Joshua?) cracked the
|> missile launch code ONE CHARACTER AT A TIME?
|> 
|> I wish I could find a bank with a vault whose combination lock worked
|> that way.

But there have been such "bank vaults".  The name escapes me, but
there was an operating system that checked passwords with a loop like:

for(i=0;i<strlen(actual_password);++i)
   if(candidate_password[i]!=actual_password[i])
      return(ACCESS_DENIED);
/* grant access */

Where candidate_password was a pointer supplied by user code.

You could crack the system by guessing the password one character at a
time.

(method: suppose you known the first k characters, k can be zero, of
the password.  To learn the (k+1)st character set candidate_password
to point to k+1 characters before the end of a page of memory.  Have a
process running that page faults a lot, to keep the memory system
busy.  Copy the k known characters to candidate_password and copy in a
guess for the (k+1)st character.  Ask the system to check this
password several times, and time each call.  If the (k+1)st character
is correct the system will occasionally page fault in looking for the
(k+2)nd character if the (k+1)st character is wrong it will never look
at the (k+2)nd character and will page fault less.  So you can tell if
your guess is right by observing the timing of the password call.)

-- 
--- It is kind of strange being in CS theory, given computers really do exist.
John Mount: jmount+@cs.cmu.edu               (412)268-6247
School of Computer Science, Carnegie Mellon University, 
5000 Forbes Ave., Pittsburgh PA 15213-3891
