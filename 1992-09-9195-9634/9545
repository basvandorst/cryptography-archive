Newsgroups: sci.crypt
Path: msuinfo!caen!uunet!cs.utexas.edu!milano!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: Public Key Verification
Message-ID: <1992Sep25.074808.17798@cactus.org>
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <1992Sep7.142336.5733@ghost.dsi.unimi.it> <66544@cup.portal.com>
Distribution: na
Date: Fri, 25 Sep 1992 07:48:08 GMT
Lines: 104


 In <66544@cup.portal.com> gregb@cup.portal.com (Greg - Byrd) writes:

>With regard to public key distribution and security, I favor public
>repositories such as FTP sites maintained by volunteers as well as
>public distribution by postings on Usenet and the like.  True, the
>keys distributed in such a manner are subject to alteration, but so
>what?  If some elaborate spoofing mechanism *were* in place, I
>seriously doubt that the secrecy of its existence would be allowed
>to be compromised by routine alteration of *widely dessiminated*
>information.  My point is that it is one thing to spoof private
>communications, but it is quite another to spoof an entire network
>in such a way that the spoofee is guaranteed to be fooled.

 Apparently I have been unable to communicate the problem:  It is
 not necessary to spoof an entire network to ruin your security.
 Your security is gone if you reply to unvalidated public keys and:
 a) your home node is subverted, OR  b) all the nodes through which
 your node gets news (the invalidated keys) are subverted.  One of
 the worst things about this is that you generally cannot tell
 whether (a) or (b) are true or not.  When you use unvalidated
 public keys, your security is completely out of your hands.

 If you try to validate your keys by email, you will be foiled if:
 a) your home node is subverted, OR  b) all nodes your node uses
 for email delivery are subverted.  And you cannot tell whether
 (a) or (b) are true either.


>By posting your public key here, running it in the New York times,
>trademarking it or even tatooing it on your forehead you make it
>hard to fool everyone...

 While that particular key is valid, this is fine.  But as soon as
 you have a security incident (robbery, fire, maybe even computer
 maintenance, divorce, partnership breakup, an employee change,
 etc., etc.), you need a new key.  You also need a new key when you
 decide that you really cannot afford to risk more data than has so
 far been enciphered under one key.  And all those people out there
 now get to choose between two (and, as time goes on, "n") different
 keys for you.

 Suppose we say "Just use the latest one:"  Then the Opponent simply
 has to "publish" a new key for you to your correspondents, which
 they accept as yours, and then they are in.  You may publish in
 the NYT once, but every time?  Even so, will everyone read it?
 (You cannot email anyone to read it, since the spoofer wouldn't
 allow that; the spoofer might just reply: "Got it, thanks").
 And what happens when you must change your key *now*?  Certainly
 you get no confirmation from trademark publication for months, and
 by that time, you may have been forced--by events out of your
 control--to change your key again.


>All you have to do is occassionally verify through an unpredictable
>third party that the various postings of your public key are uncorrupted.

 OK, but you must do this by separate channel, or some protocol
 which is not yet clear.  If you do this by email, the spoofer has
 access to it, raises a flag to the human controller, who then
 responds "Yeah, we got that all OK here."


>Likewise, as a recipient of encrypted messages it is prudent to
>periodically check the public key postings/archives for alterations.

 Again, this must be via separate channel in order for it
 to do what you want it to do.


>Again, this is meaningless (to you, at least) unless done through
>an unpredictable third party.  And of course you would want to check
>a large number of keys through the third party, not just the
>particular key you are interested in (to prevent selective spoofing
>of all individuals interested in a particular key.)

 Well, at least we are now getting to a protocol.  If you are going
 to interrogate someone almost at random with large numbers of keys,
 some program is going to have to do it and some other program is
 going to reply.  And this means that the spoofer can simulate
 that reply automatically.


>If this degree of security were insufficient for me, I would tend to
>worry more about burglars and the like, rather than global conspiracies.

 Again, there need be no global conspiracy to eliminate your
 security as long as you are using unvalidated public keys.

 The problem with "worrying about burglars" is the implication
 that spoofing must be difficult and expensive, so that physical
 security would be the attack of choice.  In fact, we are dealing
 with computers here.  Once a spoofing program works, it is only
 necessary to get it installed; this may not cost anything at all.
 Once coverage is complete around you, the Opponent can monitor
 you again and again at almost no cost.  This is a far different
 situation than a physical attack, and may actually be far cheaper,
 making it the attack of choice.

 Worry about burglars, but worry more about spoofing.

 ---
 Terry Ritter   ritter@cactus.org

