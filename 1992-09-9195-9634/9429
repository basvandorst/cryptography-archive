Path: msuinfo!caen!uunet!mcsun!sun4nl!alchemy!accucx!nevries
From: nevries@accucx.cc.ruu.nl (Nico E de Vries)
Newsgroups: sci.crypt
Subject: Re: PKZIP CONTEST.....
Message-ID: <3063@accucx.cc.ruu.nl>
Date: 19 Sep 92 15:08:01 GMT
References: <1992Sep14.211553.125699@ns1.cc.lehigh.edu> <463@chorus.chorus.fr> <1992Sep18.171637.4993@cactus.org>
Organization: Academic Computer Centre Utrecht
Lines: 47

In <1992Sep18.171637.4993@cactus.org> ritter@cactus.org (Terry Ritter) writes:
> In <463@chorus.chorus.fr> jloup@chorus.fr (Jean-loup Gailly) writes:

>>> Whatever happened to that PKZIP contest where one had to 'break' in a zipped
>>> file from PKWARE? Did someone win or was it impossible? Thanks!
>>A small group of friends and I had a serious attempt. I wrote a
>>program using brute force (try all possible passwords). My program
>...
> Well, first of all, I believe that the contest was a direct response
> to various claims in this group that pkzip was, in general, insecure,

Correct. The contest has been optimized (in a very unrealistic way)
to "prove" security. Problems with the contest are:
   - key uses unusual characters (all possible IBM characters)
   - only a single file encrypted in the archive
   - the file is not made by PKZIP 1.10 but with a special tool
     allowing to store a file instead of compressing it

> and that anyone with a fast password-check program could break it.
> The contest seems to have disposed of those claims.

No it hasn't. It only proved that in a specific unrealistic
case it is hard to find the password. The real known weaknesses
of the system are circumvented:
   - a special check is build in to allow verification of
     the password. This means a password can be checked without
     decrypting the file. For a wrong password the chance is
     about 1:65536 that it can not be detected.
   - if multiple files are encrypted in a single archive using
     the same password the mentioned shortcut can be used to
     eliminate even more passwords (65536^files)
   - the random generator is not truelly random. Its mechanism is known
     and this allows to eliminate a huge amount of potential passwords
   - there is also the plain text attack for imploded files, it is not
     clear if this is a usefull weakness but it is interesting

Notice no known weaknesses have been reported on the actual encryption
algorithm. Only on the stuff around it. Also notice that for PKZIP 2.0
   - improved check, now 1:256 instead of 1:65536
   - better random generator


Nico E. de Vries
 _ _
 O O  USENET nevries@cc.ruu. This text reflects MY opinions, nothing else.      
  o   This text is supplied 'AS IS', no waranties of any kind apply.      
 \_/  Don't waste your time on complaining about my hopeless typostyle.
