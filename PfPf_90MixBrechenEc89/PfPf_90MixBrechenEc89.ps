%!PS-Adobe-3.0
%%Title: (PfPf_90M\311)
%%Creator: (Microsoft Word: LaserWriter 8.0 8.0)
%%CreationDate: (15:17  Freitag, 30. September 1994)
%%For: (schunter)
%%Pages: 9
%%DocumentFonts: Times-Roman Symbol Times-Bold Times-Italic Helvetica Helvetica-Bold ZapfDingbats
%%DocumentNeededFonts: Times-Roman Symbol Times-Bold Times-Italic Helvetica Helvetica-Bold ZapfDingbats
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -12 -13 830 582
%ADO_ImageableArea: 0 0 818 568
%%EndComments
/md 239 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
level2 startnoload
%%BeginFile: adobe_psp_patterns_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/patfreq Z
/patangle Z
/bk Z
/fg Z
/docolorscreen Z
/graystring Z
/pattransf{}def
/initQDpatterns
{
/patfreq 9.375 store
/patangle
1 0 $m defaultmatrix dtransform
exch atan
por not
{90 add}if
normland{180 add}if
store
:a
}def
/docolorscreen
/setcolorscreen where
{
pop/currentcolorscreen where
{
pop/setcmykcolor where
{
pop true
}{
false
}ifelse
}{
false
}ifelse
}{
false
}ifelse
def
/setgraypattern
{
/graystring xs
patfreq
patangle
{
1 add
4 mul
cvi
graystring
exch get
exch
1 add 4 mul
cvi
7 sub
bitshift
1 and
}setscreen
64 div setgray
}bd
/:b
{
/pattransf load settransfer
pop pop pop
setgraypattern
}bd
docolorscreen startnoload
/screensave 5 array def
/:a{currentgray currentscreen currenttransfer screensave astore pop}bd
/:e{screensave aload pop settransfer setscreen setgray}bd
/:d
{
pop pop pop
/pattransf load settransfer
setgraypattern 8{pop}repeat
}bd
/:c
/:d ld
docolorscreen endnoload docolorscreen not startnoload
/screensave 20 array def
/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd
/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd
/rstring Z
/grstring Z
/blstring Z
/convroll{64 div 4 -1 roll}bd
/setcolorpattern
{
/graystring xs
/blstring xs
/grstring xs
/rstring xs
patfreq
patangle
{
1 add 4 mul cvi rstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi grstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi blstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi graystring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
setcolorscreen
convroll convroll convroll convroll
setcmykcolor
}bd
/:d
{
pop pop pop
/pattransf load settransfer
pop pop setcolorpattern
}bd
/:c
/:d ld
docolorscreen not endnoload
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: adobe_psp_patterns_level2
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
%%EndFile
level2 not endnoload
level2 startnoload
%%BeginFile: adobe_psp_level1_basicimages
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$i false def
/flipinvert
statusdict begin
version cvr 47.0 lt
end
def
/iw Z
/ih Z
/im_save Z
/setupimageproc Z
/polarity Z
/smoothflag Z
/$z Z
/bpc Z
/smooth_moredata Z
/datatype Z
/:f
{
/im_save save store
/datatype xs
$i flipinvert
and
xor
/polarity xs
/smoothflag xs
:T
scale
/$z exch string store
/bpc xs
/ih xs
/iw xs
/smoothflag
smoothflag
bpc 1 eq and
smoothflag and
userdict/sc_smooth known and
vmstatus pop exch pop iw 3 mul sub 1000 gt and
iw 4 mul 7 add 8 idiv 4 mul 65535 le and
store
smoothflag{
iw
ih
$z
iw 7 add 8 idiv 4 mul string
iw 4 mul 7 add 8 idiv 4 mul string
true
false
sc_initsmooth
/iw iw 4 mul store
/ih ih 4 mul store
}if
/setupimageproc datatype 0 eq datatype 1 eq or{
smoothflag{
{
[
/smooth_moredata cvx[
currentfile
$z
{readstring readhexstring}datatype get
/pop cvx
]cvx[
$z
]cvx/ifelse cvx
/sc_smooth cvx
/smooth_moredata/exch cvx/store cvx
]cvx bind
/smooth_moredata true store
dup exec pop dup exec pop
}
}{
{
[
currentfile
$z
{readstring readhexstring}datatype get
/pop cvx
]cvx bind
}
}ifelse
}{
(error, can't use level2 data acquisition procs for level1)print flush stop
}ifelse
store
}bd
/:j{im_save restore}bd
/:g
{
1 setgray
0 0 1 1 rF
0 setgray
iw ih polarity[iw 0 0 ih 0 0]setupimageproc
imagemask
}bd
/:h
{
setrgbcolor
0 0 1 1 rF
setrgbcolor
iw ih polarity[iw 0 0 ih 0 0]setupimageproc
imagemask
}bd
/:i
{
setrgbcolor
iw ih polarity[iw 0 0 ih 0 0]setupimageproc
imagemask
}bd
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: adobe_psp_level2_basicimage
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$j 9 dict dup
begin
/ImageType 1 def
/MultipleDataSource false def
end
def
/im_save Z
/setupimageproc Z
/polarity Z
/smoothflag Z
/bpc Z
/ih Z
/iw Z
/datatype Z
/:f
{
/im_save save store
/datatype xs
datatype 0 lt datatype 4 gt or{
(error, datatype out of range)print flush stop
}if
/setupimageproc{
{
currentfile
}
{
currentfile 0(%ADOeod)/SubFileDecode filter/ASCIIHexDecode filter
}
{
currentfile/RunLengthDecode filter
}
{
currentfile/ASCII85Decode filter/RunLengthDecode filter
}
{
currentfile/ASCII85Decode filter
}
}datatype get store
{
[1 0]
}{
[0 1]
}ifelse
/polarity xs
/smoothflag xs
:T
scale
pop
/bpc xs
/ih xs
/iw xs
$c setcolorspace
}bd
/:j{im_save restore}bd
/:g
{
1 G
0 0 1 1 rF
0 G
$j dup begin
/Width iw def
/Height ih def
/Decode polarity def
/ImageMatrix[iw 0 0 ih 0 0]def
/DataSource setupimageproc def
/BitsPerComponent 1 def
/Interpolate smoothflag def
end
imagemask
}bd
/:h
{
:F
0 0 1 1 rF
:F
$j dup begin
/Width iw def
/Height ih def
/Decode polarity def
/ImageMatrix[iw 0 0 ih 0 0]def
/DataSource setupimageproc def
/BitsPerComponent 1 def
/Interpolate smoothflag def
end
imagemask
}bd
/:i
{
:F
$j dup begin
/Width iw def
/Height ih def
/Decode polarity def
/ImageMatrix[iw 0 0 ih 0 0]def
/DataSource setupimageproc def
/BitsPerComponent 1 def
/Interpolate smoothflag def
end
imagemask
}bd
%%EndFile
level2 not endnoload
%%BeginFile: adobe_psp_smooth
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/junk Z
/$z Z
userdict/sc_smooth known not
save
systemdict/eexec known
systemdict/cexec known and{
countdictstack mark
false
<1861AEDAE118A9F95F1629C0137F8FE656811DD93DFBEA65E947502E78BA12284B8A58EF0A3
2E272778DAA2ABEC72A84102D591E11D96BA61F57877B895A752D9BEAAC3DFD7D3220E2BDE7
C036467464E0E836748F1DE7AB6216866F130CE7CFCEC8CE050B870C11881EE3E9D70919>
{eexec}stopped{
cleartomark
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse
false
}{
{cleartomark pop true}{cleartomark pop false}ifelse
}ifelse
}{false}ifelse
exch restore and
level2 not and
vmstatus exch sub exch pop 15000 gt and
{
currentfile eexec
}{
/junk save store
/$z 4795 string store
currentfile $z readhexstring pop pop
{
currentfile $z readline not
{
stop
}if
(%ADOendeexec)eq
{
exit
}if
}bind loop
junk restore
}ifelse
bc89dd93a62e673f17beaf79fc308801f2548cc0804b6e7e7211db7d71dcacee61d4db4b
cc4c192da6ec1c558421396b4eb1944f656db0dda1626374294528747cd1ee8e10b15c5c
60b4182960a4687e44c92cff1b5d29a6b48ab8be9f8115c642241a4901d75a2b2ba55d27
0620b884f37689503d9c3a603e89a1f7de7447e2b23145af7219c13aad065fe60313c4f1
7d1959166b8493e26ee828d6e76ac472747b40432571d2d101dd3e8696849eb59b70c328
a0d1978eea220593cb3024a3cdecb89dcfa2d5ab3990b0bbc1a0c3351bfbd614917e7ede
ef79cb8843325e4a81a80e809250ce8cf7297b5c684b53a56538b373cb085ec7436f82a2
e48b4789de5ac368defd97ca81e1e7a584b7e40bcf852c3d4f6cc387172784295be04ca2
0793987d64efc3cec658553cbe610fa9ebfe74341192cfcc6ecfd0a4843b740cbfd5ba5f
4c076050268792190676f76cacc26be628f8ae1c48419803c2a5108f6b1bec6664b06248
6a083d8092cb3c82b90bded3eed0387490fe971d6614c5d0259a846d43abb22e0dc06aa5
6911c9f53cf5524e138662db3fa2e6cdfe30873d916ed70e4962ed78b32491bee9a20a36
8be439dc6245d5751e6899e2214c07df7a87b66b1aba9a8196db2add3d3c4e3057dc9a9c
dae1cc7884a6f29a5568b1ad64143fd479b8b4a8fbef4db889fe42edaadef0276f79d192
245b64299ad347b03ecf887db96b16fc319a1c7e59718ac7ff7bc7bafd4523bd88fd5ba8
1730817c2f529d3060cb591fe565d778fc989e7e14f7c2a7b85785c53af35fbe738da838
cdf80c9a048f4d7dbd58e2c9f527d2d3b2ad633da1005036298ec8533b94f84e9246289c
f03336f4a7f657afbcbdd7b5e16187273c459f5626a5667db4fbf8b85ef2363ee6d89bd0
f402408cae3065fecf609fa290047e9656d853739f33b06d64a4a57f66f37f7da39fa89d
28962fddb76e8d05683c090664175dda6a1be57698894fd9f0f9d8da411b3f33b3b9c8d4
50a27c37e4a0e503418cd6c02cf60fa7fbb6f6f3e7509a45a54343ba3361168d895a27eb
6923ab65b019b188fe21c804629f2be2a20e6417841b4c8d5d68fb38db71ac7174e68d03
0611ea29f9ca740d0aef611a1f0003e1d136a539ed28d956a2a36bc7ae0ee290bd818175
3537e39be7777de1004964c769ec7e933b17c852cbd2da4cc100d9d3e141106eea9cc29a
b1c910ead768527a02711ac035262c93a4548f67fb501a971e0a86d819547bac7c09f5fb
aec454c9c7276f5e317cc8fd8876e7f90dc128f03052a756cf6db9876fe5a31c9d6a139b
d46eb34272ff7992b86c88420ab07e801a39e91afb3c048b40913dc2d984e0c347b3daea
4e1ce5a15c8df7b65a0b89136f6a48a92b8f096d708a2bea4390f0454dcc3d9cd4f6b24d
8f06faa17694172213c481ceaa1f7fe33f1389142f017874560e1b0272385585fc5681de
4a909566cdcf9af80dfde23e9ad55083bb9422ae57b99bf3d5f081a4cbe0172f236abbb5
06fbbee46987543fc545e81ecd61477fadec55640ce9e41f8cbcd409f0e64c1b83193885
dffe0c4c383de781943a2a73ad1e0cbee0dccdbc3bbbc010f3adc8aa597210cae47003d2
952b8e874e1dee33ef1a78180a3ef6b22e1a66385147f550678510b15ed1a02fc85e736e
818f03b188d6a23f070e5720195a8e4c295d27129a5adedc1a95145d5e758649acebaec5
3d14cbc9feaf3abcecc976c03d00ea640c3b852baad7d8ab28c593cb74cbe2e98ea0b35c
8827eb3def1a79af837fb8468b2042acaf226b1f6d11abab2884f3fe49772325d273f893
82badc7b3b26e43c3f6170eec2c607cbe22225b9469de5509d31bafa1729c416089aeb1b
3b5477a985acdce47557bf29130d6232d2003a4314bf46c9c9383c437f1f2597f361405a
b92f371458f13d8d400d78140df094a559bec9d240993f2d811f0d4eba7678773bb6c765
caf33bc77c0e2e156538b04423e513cb933d9ac8cec0444e0309bdb5c70f02a71f49cc99
7b8d98ecbaad1d53daa2811b07df94b2ec574326d760892fd1886703eed816bf2db96bbe
f2ea914cef918d251a1203d93d549aa438a1309ce179c233111175d9e8bb6064dc2d52db
0976650b1d5d194eab20ed3e500db4410852390e69e56e4ab71e97a87680fa620d8d32d5
b93e40cdec16ed20af734e792ddb938b8a65ccb811f369cc1e9e8819e76d7908e310e5ea
018c05d2db74abc0e8e5da75431324a3ba298820009d6fcc9d5693ec900aab8745112928
ef24a8da713dc8ecebb84394f0058335dafb459971cf20e8c15d40f35643a0c56c95bd86
faefe8e251fb9f79a6db5e481032f812454181a73375ab1efe575d745fe7073adaf60865
e992c7f5e969f4e267b323bb022a7f8b1b480a97ca735212b4d47aff196f37fa177c765a
f03487b323f2ce11314906d04dcb0c3c770ea581fcff70cc1553b4615a6d8dfd69001581
77a9fcc035cb44d630b99cdae09de33c09c9ab8bcc021e72fd88cccf3a9cd578a34a3f96
ae636047fc5f468d22cea0cf509e1588563c7e25d4f0d41b30373dfd1cb69a8e37a51a57
5d1cab7a3c9d04f3d388db04ed78d3e81e7b53dffa94507df197e467565d4169fc996e46
671f62236b00f4e9dc36bd3709400771ed4b335bcdb3c2974c0a00c03717ed980e98dc1b
2473f38bd1e1fe4da0fea5169aa1e06054315579a5898bbe3c9fabb829485562e9d25248
142575f3bfd311dde2297c7883b0b9ed0c3ffe3358880c8c77be01cd6408dc743634006f
d888ffc1e4562ed1166bbdcbe971a269afae52a8a384eaf8880433a053bd072accc62214
04bb18e98b9cebb3c05e56216b56174bd432e41b8c82c82d7114adb16ad941fe87c0657e
03203fc26ed43096e7e262a8f86fc07506b3ffcb5888bcbd3482977716a337a54c0649c1
2579b4322afcb34486a5593fb9d58cb16a0368f593c3c52608bf31c6a3b48a04be605c60
b15ea2670c3e89d293ba065db7d5471d3f56d7ffe3ba48814d5a1f4a81d9865d1f2340cc
3e5ced23ce6827065312bb9ae13e0d3cc53e79aaa764a229be203d1b45963d17e983f72a
f97bac50984a360768f459585745d94f7b77457bb8bc802332aef4e65ae7200d94750aea
b4ede71ade6ee000cf122866f514747784f7e497a6e48b82467515f474d38ec690bac331
d8246eacf2b10d7f1b1b74b1020843b3d934115e23fc1845e5161f5d494badc22f5e68fa
4d1cb3933ac6467e3cc58099adcf4832c156ce1714ee44c6368dee76483e47260dda3af1
97f938530475ede86f1b7ccfeeaeab2518f1c05ba983ada09c069d0f5e7e34c7832ec4c1
9e68e78a51e25540cadf7b64d1eca1141816aba211cea9b8aa4ff9542f26cd6adabe28bc
03c20d2fded392cc160e5ca6f8216611e41b504567927a560537a57e09dd8db552fab25d
59318ad3f7e6b6e10ad49fbb4caf8d5205d494666f5c51a599df65d2c89fe65c92ec733d
78205e987659e02d244684cff18d2b6f1d0d33ccae32339b840246a50cccebc952c7e705
d30fcb5dc94da2eab7ba3c7f9fe536eba4971a8b8e0744a0a094d531ae611042c347fac7
3b770c445121464594a2c5eb9d923f0fe2f33500b403e4b5daf64acd4a4a89d8469be57f
a393a844e082dec5af117b77e7be0eb6474eb47b00503bc68c809f0de147f7d0f1f68798
89b1781d09c0dc12c882dba17e23de1311321fa851a94c51a8801a4bf7c888e4805b1fc8
2fe638aaabb33b13ab0ae024b0b767108a068d562ebd11a91ad8706df9360a914927b752
ddb4d176f72661d12a6349a58a8d688b311ec8e1797b011dbb47760765b88a651b42cace
e60730553040e64711fff10e3285171ed1dae0545b6cfe3503b24f9d135d04d467372b11
ef3c1b9aa7c4272e281df0b6e7cc7e7984b00cbda5bbd81c939213c32176b5e062660e54
8943afe1e39a38cb171d7591c01ac4eea3963572ce008d48727ec8efc0ead1cc4c86d9ce
3d9d5c21f58a41359f2599d4cb15762366c3d3c5b7abe7970a312ea2fb14f5e74f78284a
624fe71f362f4b4d892ac6a87cf8794982964aa0e6153477da1484d35787edb8a2aad90b
3cada91934c118098617e1254d834d86154e6585628663741ae0d7bf339b168d4acec9da
94c12bd5449ecf97a7483e27c47160f838ac076f79b82fc0bd8a3b0011bd0bbb2e6a38ff
a7a63daf463cacb10f56c459bec699ecbcc52be2e5c57bd013c4682b01199cdd89ad2bd1
8584b05e6178c2d6fdc6e19a375ae4a91428d4c0aff2d07e5b6d159351475e57419f2ec8
a343d209e36ddb078027e03d4f179fbf675373c485be1a147ffda00821aba79187471ef9
55f197d6bf0f442244d5b4d1e8392ba11965b6bfa8db30c0e48984883a9b6ec840a9b6fc
93df40c82906dac253e0afd633c336cedac8dd7213e4766761ec3cf3a8aacb1fe1bf2d61
d64c5addaf1d836e199df0ef5e61029f1e6a28c17eba0d8bdf81f358058086ee365b4127
a1bb4b273b84a825fdcc4ebd3abdd7ca243788e1eb48aed96626bd2f2ef8a2e1a082acb6
64b5af60797d9ad021ac616e4d65c1ddbc4a74928b7ab089a10db9312a18d682cccce0b5
53e2f454af0ca21f59b96ee7d71a97db2607dba56daad1bef91c66c44f6fc53d2b4bfebb
876cd478243a9454e8864f65067787b96cb4b3f92a7c90f959ce3324c94590348a8d2709
f4feea7adaf4c56199da203d8f4b9866fe7362d86401b0cfe1913476eb9f7f4d4df0f2f3
8e7ee153c99dda1ccc6eec2cd1b76c52c553ceca04ad525fc17a4a7af197d158c02e6469
cd7e3be4b934ed0e1499153bb98b4363159a60c9ce892af085511cfc31cfa7fa1baf0e22
d138b6a54e93532486b633024d18afd6a610ede93b2a554abc44da890144ff060d1db1e3
e57df15229afe56c49e3c7f68e6ef0221942945f3c6675b498e94fd834bfcd869bba0a90
179d3eb859ea6b749871a62c0e8513ab69b63e35b5bf8060f25442a6670293cee9a86928
997a54929695b3eda64483ecdf8cfb2732729a652e08a3aa82ecb5ac45aad7227f7f7ee9
1d8c222933cfac18561f27939ca29fbf5eebd634555856519cd2f1573281514aff3c6091
5142196c57177ef2086958fbb3fae8f448118c435ae82b7b17a8445e0806b8442e1f9347
c7940af7342dc3d5638958f9a3952768f6c244920e281a163cc87fbdbec99080b8d7e24b
9e35e152aa600a6a4faebb140857e536bb819f4cd9992b9dfaa60ac33a8ff2ed14c791e7
0290e5f6d810488d672224bfeeca6907b41f46489091322b6830a8424fa2a0061151ee61
ef1cfb1a83c4538025605554ed3c734fd8e39bd6da4af6e5a57593da83fd9f511af49b84
5ef7cb34495b54070ea204daff2e266f5a1619928e73de256979f4afdeb42b889064461b
f7263f82a2c233d113de9ba4bc415ed68241bc3862a34050479aa86eabb80cef561ad640
80be73a5da7fbb4905bee2fbbbc7c85a5512c6e747a5eb18942e47c17e5da1127910d8e6
ed7a37d3b846cfda6b0adc8dd594ffe14995b32babcb4d99869090abd57e8ab397e33406
2c7790b673d184738a9e9d578f54ccfcdcc46200d2bb07c5dea46261680dccb4f011428f
289c2049ff81040685aec9ae8c9016c491d02f14f2c4fd79e053147520d59d034c470569
e602c662af4aafc5d2fb0d3af218b26b769ac25fe9999ba3c2eaa8a9ffa93a6f4b743608
f5797772e53cfd2f3c6a45b1a843fcfc6aedc66bc35db923bea051301fa5a959a11eb0b6
f02f7c4e6b004ce548b77e032e36f93cce55f507d5892b32da81a7ce5016326aacd06dd5
0a1b3c615abf06ab6eb1bd643f3c3d7fbc9e18bc11ee29b2113d5c458f20713d3b811da8
883f8b95557ffb1eaf229b89fc98f7623ff9140bcebc6b8677ad7d99373e5757292a3d6a
83a5c053e61224b4dc14e42626637e714c514092e569101ce75f0533605802455f03bf0e
336c0f9788569f3b2b4b79c01628abc3b243decb3c55e1273ff7b83ae61d936bd413580f
3f279437da1fdad63d785ff7bedd815a6d6e4964231adf28640794c33a30686e5f60fe78
c5e87ffd27a84452dc111bbd7c2d0b4e7781c102547f5533ea676a33b8d58918f197a8cd
a1e90be9620e43af9d5b07ee2ae5d702683c9a6973fdaafaec74d62cb29b18272b3f8840
a1a8372ddf4bfee1b7ea037ed41fdc2cb1cb4da3ccb3e121354db0d5bc83c4d4c323083d
75dd32c20607f81fcd221751c5af21775659e804b9941cf6fbe4c8846be20e546f88a588
7bbff8cab4489883fdd2be613313174c015d69eee40eee4242e173aaac87585597feff69
a64f4ef2dbf00dbfe9ad946892816711c7199d4068d8494ba1df614d9bbe1c7b63996e98
12b913966a42a41be0dc85feff232e625f4dd0b01cb7674b232e89d5da143f9d12a9d8a9
aa8b62038721ad9e4a6438cb842d1828458fc25e5b0b6ea795f7a14d2f55f1451c615f4c
211469611d1348952e655e1d93188c0dc6dd719630a42fe5baf8cde0c03b1e0aa76a2cd4
fec86a3042f8a2ea5af50a43af52c1217f6be45b152e47d165b89a54ede432f1eb3ed3ef
428c228dd53c44db15541704b99413b465ff65ca0e9d6be932a18eca713c71ba7dc89238
1e0c2c62cf8567df2f997e58ed2c1ffe17d2fc96db942ce3950e28d1287b85ff7d07adb9
059629dc89b9b0ed2213e45d8a20188cae18f3391887387bf8ba0a12fe21fa0aa521bfa3
718f7abe76388e
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%ADOendeexec

%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageSize A4

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
        setpagedevice
        2 dict
    dup /PageSize [595 842] put
    dup /ImagingBBox null put
    setpagedevice
%%EndFeature
}featurecleanup
(schunter)setjob
/pT[1 0 0 -1 13 830]def/mT[1 0 0 -1 13 830]def
initQDpatterns
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Symbol
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Bold
%%IncludeFont: ZapfDingbats
/f0_1/Times-Roman :mre
/f0_14 f0_1 14 scf
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f1_1/Symbol :bsr
240/apple pd
:esr /f1_14 f1_1 14 scf
/f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f2_1/Times-Bold :mre
/f2_24 f2_1 24 scf
/f2_18 f2_1 18 scf
/f2_14 f2_1 14 scf
/f3_1 f1_1 def
/f3_18 f3_1 18 scf
/f3_14 f3_1 14 scf
/f4_1 f0_1 :v def
/f5_1 f1_1 :v def
/f6_1 f0_1 :ff :mo :ff def
/f6_12 f6_1 12 scf
/f7_1/Times-Italic :mre
/f7_12 f7_1 12 scf
/f8_1/Helvetica :mre
/f8_14 f8_1 14 scf
/f8_12 f8_1 12 scf
/f8_10 f8_1 10 scf
/f9_1/Helvetica-Bold :mre
/f9_14 f9_1 14 scf
/f9_12 f9_1 12 scf
/f9_10 f9_1 10 scf
/f10_1/ZapfDingbats :bsr
128/a89 pd
129/a90 pd
130/a93 pd
131/a94 pd
132/a91 pd
133/a92 pd
134/a205 pd
135/a85 pd
136/a206 pd
137/a86 pd
138/a87 pd
139/a88 pd
140/a95 pd
141/a96 pd
:esr /f10_12 f10_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(schunter; page: 1 of 9)setjob
%%EndPageSetup
gS 0 0 568 818 rC
29 28 :M
f0_10 sf
.2 .02(to appear in the Proc. of EUROCRYPT '89, LNCS, Springer-Verlag, Berlin 1990)J
61 84 :M
f2_24 sf
4.242 .424(HOW TO BREAK THE DIRECT RSA-)J
95 108 :M
5.403 .54(IMPLEMENTATION OF MIXES)J
176 146 :M
f0_14 sf
.722 .072(Birgit Pfitzmann, Andreas Pfitzmann)J
90 176 :M
.948 .095(Institut f\237r Rechnerentwurf und Fehlertoleranz, Universit\212t Karlsruhe)J
143 191 :M
.696 .07(Postfach 6980, D-7500 Karlsruhe 1, F. R. Germany)J
29 248 :M
f2_18 sf
.571(ABSTRACT)A
29 274 :M
f0_12 sf
.466 .047(MIXes are a means of untraceable communication based on a public key cryptosystem, as published by)J
29 289 :M
-.038(David Chaum in 1981 \(CACM 24/2, 84-88\) \(=[6]\).)A
46 304 :M
1.243 .124(In the case where RSA is used as this cryptosystem directly, i.e. without composition with other)J
29 319 :M
.324 .032(functions \(e.g. destroying the multiplicative structure\), we show how the resulting MIXes can be broken)J
29 334 :M
-.134(by an active attack which is perfectly feasible in a typical MIX-environment.)A
46 349 :M
1.379 .138(The attack does not affect the idea of MIXes as a whole: if the security requirements of [6] are)J
29 364 :M
1.646 .165(concretized suitably and if a cryptosystem fulfils them, one can implement secure MIXes directly.)J
29 379 :M
.337 .034(However, it shows that present security notions for public key cryptosystems, which do not allow active)J
29 394 :M
-.078(attacks, do not suffice for a cryptosystem which is used to implement MIXes directly.)A
46 409 :M
.664 .066(We also warn of the same attack and others on further possible implementations of MIXes, and we)J
29 424 :M
-.102(mention several implementations which are not broken by any attack we know.)A
29 461 :M
f2_18 sf
6.572 .657(I.\312\312INTRODUCTION: MIXES)J
29 487 :M
f0_12 sf
.187 .019(Basically, a MIX-network [6] is a means of sender anonymity, which can at the most be computationally)J
29 502 :M
.06(secure.)A
46 517 :M
-.036(Meanwhile, other sender anonymity schemes have been published, which are information-theoretically)A
29 532 :M
.436 .044(secure, namely superposed sending \(DC-net\) [7, 8] and, against more limited attackers, RING-networks)J
29 547 :M
1.167 .117([18]. Nevertheless, MIXes are still a matter of interest, since their communication overhead is much)J
29 562 :M
.226 .023(smaller. More precisely, in the other schemes, each participant has to send about as much in the physical)J
29 577 :M
-.057(sense as all the participants together want to send in the logical sense. With MIXes, the overhead is at most)A
29 592 :M
-.04(about the product of what the participant himself wants to send and the number of MIXes he uses; for long)A
29 607 :M
-.061(messages in some MIX-schemes there is nearly no overhead. Therefore, MIXes seem to be the only way to)A
29 622 :M
-.043(provide sender anonymity for telephony using the cables of conventional telephone networks, i.e., the only)A
29 637 :M
-.11(way complete privacy can be introduced in public communication networks in the near future [20].)A
29 658 :M
.366 .037(The idea behind MIX-networks is that a, hopefully trustworthy, station called MIX collects a number of)J
29 673 :M
-.046(messages from their senders, performs a cryptographic operation on each of them to change their outlooks,)A
29 688 :M
.39 .039(and outputs them to their addressees in a different order. Thus an attacker should not be able to find out)J
29 703 :M
-.047(which outgoing message corresponds to which incoming one \(except possibly his own\).)A
46 718 :M
1.18 .118(Of course, the recipients should be able to read their messages in spite of the change in outlook.)J
29 733 :M
-.01(Therefore, in the basic scheme \(which is part of nearly all more sophisticated schemes\), the MIX achieves)A
29 748 :M
.113 .011(this change by deciphering using a public key cryptosystem, and the senders must prepare their messages)J
29 763 :M
.007 .001(by enciphering them with the public key of the MIX. \(If every message passed only one MIX, the scheme)J
29 778 :M
-.047(could be changed so that the MIX would use a private key with each sender. But usually, several MIXes in)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(schunter; page: 2 of 9)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
42 40 :M
f0_10 sf
10 f4_1 :p
507.001 :m
.302 .03(Birgit Pfitzmann, Andreas Pfitzmann: How to Break the Direct RSA-Implementation of MIXes                                          )J
423 40 :M
3 :m
.5 .05( )J
544 40 :M
f0_12 sf
12 f4_1 :p
6 :m
(2)S
42 60 :M
-.041(a row are used for every message, because in this case it suffices that one of them is trustworthy, and those)A
42 75 :M
-.101(in the middle may know neither sender nor recipient.\))A
59 90 :M
1.633 .163(So far, since the encryption function was assumed to be deterministic in [6], like that of RSA,)J
42 105 :M
.058 .006(everybody could take an output message, encrypt it again and check which input message they obtain. To)J
42 120 :M
-.066(avoid this reencryption attack, nondeterminism was introduced by attaching a random part to each message)A
42 135 :M
-.014(before encryption. After decryption, the MIX deletes this part. Another simple attack, replay, was avoided)A
42 150 :M
-.089(by having the MIX discard repeated input messages. Otherwise, an attacker could find out what becomes of)A
42 165 :M
-.087(an input message by repeating it and observing which output message is repeated.)A
42 186 :M
.251 .025(To avoid confusion about which kinds of MIXes we break and which not, we distinguish \(top-down\) the)J
42 201 :M
-.053(basic idea of a MIX-network, MIX-schemes \(e.g. the described basic scheme, or the return address scheme)A
42 216 :M
1.959 .196([6]\), implementations of MIX-schemes \(e.g. additional use of redundancy\), and the choice of the)J
42 231 :M
.652 .065(cryptosystem to be used. \(The "unsealing" operation in [6] is just the cryptographic operation the MIX)J
42 246 :M
-.064(performs in the basic MIX-scheme, "sealing" the corresponding operation the sender performs.\))A
42 267 :M
-.014(In [6], the random part is always implemented as a large random string)A
f6_12 sf
/$o 1 def
( )S
f0_12 sf
-.014(in front of the message. \(This does)A
42 282 :M
-.039(not imply that no other operations can be performed, but that they would have to be considered as a part of)A
42 297 :M
-.037(the cryptosystem; this is no loss in generality if the requirement "K\(K)A
f0_10 sf
0 -4 rm
-.033(-1)A
0 4 rm
f0_12 sf
-.039(\(X\)\)=X", which implies bijectivity,)A
42 312 :M
-.056(is dropped. For our purposes it is better to discuss such operations seperately as implementation.\))A
59 327 :M
.234 .023(As an example of a public key cryptosystem, RSA is mentioned, and at that time there seems to have)J
42 342 :M
-.164(been little choice.)A
59 357 :M
-.038(Without knowing about further attacks, one might have considered it natural to use RSA directly as the)A
42 372 :M
1.778 .178(cryptosystem in the implementation with the random string in front. We call this the )J
f7_12 sf
2.735 .273(direct RSA-)J
42 387 :M
1.287 .129(implementation of MIXes)J
f0_12 sf
.708 .071(. For this case, the operation of a MIX with the modulus m = p\245q, the public)J
42 402 :M
-.058(exponent c for enciphering, and the private exponent d for deciphering is shown in Figure 1. N)A
f0_10 sf
0 3 rm
-.06(1)A
0 -3 rm
f0_12 sf
-.064( and N)A
f0_10 sf
0 3 rm
-.06(2)A
0 -3 rm
f0_12 sf
-.07( are)A
42 417 :M
-.078(two messages, R)A
f0_10 sf
0 3 rm
-.073(1)A
0 -3 rm
f0_12 sf
-.076( and R)A
f0_10 sf
0 3 rm
-.073(2)A
0 -3 rm
f0_12 sf
-.073( the attached random strings, and the commas denote concatenation.)A
106 440 380 88 rC
9 168 216 194 473 @k
165 468 -1 1 187 471 1 165 467 @a
gS
.89 .889 scale
315.397 509.993 :T
-315.397 -509.993 :T
303.397 512.993 :M
f8_14 sf
1.557(MIX)A
gR
202.5 443.5 160 82 rS
gS
.89 .889 scale
493.106 548.243 :T
-493.106 -548.243 :T
446.106 551.243 :M
f8_12 sf
-.177({\311, N  ,\311, N   ,\311})A
gR
9 156 204 392 487 @k
369 488 -1 1 385 487 1 369 487 @a
gS
.89 .889 scale
480.569 553.868 :T
-480.569 -553.868 :T
477.569 556.868 :M
f8_12 sf
(1)S
513.528 556.868 :M
(2)S
268.563 541.118 :M
.635 .064(discards repeats,)J
252.831 578.242 :M
.156 .016(changes order of the N  )J
377.561 581.617 :M
(i)S
124.73 554.618 :M
-.18(\(R   , N   \))A
138.214 560.243 :M
(2)S
161.812 560.243 :M
(2)S
174.172 547.868 :M
(c)S
129.225 526.493 :M
-.146(\(R  , N  \))A
141.585 530.993 :M
(1)S
161.812 530.993 :M
(1)S
173.049 517.493 :M
(c)S
233.728 559.118 :M
-.09(computes \(\(R  , N  \)  \)     mod m,)A
328.118 564.742 :M
(i)S
306.768 564.742 :M
(i)S
335.984 553.493 :M
(c)S
347.221 553.493 :M
(d)S
144.956 583.867 :M
-.316(\245 \245 \245)A
gR
156 204 18 17 194 491.5 @l
164 493 -1 1 187 492 1 164 492 @a
gR
gS 13 12 568 818 rC
42 552 :M
f9_10 sf
.653 .065(Figure 1)J
98 552 :M
f8_10 sf
.87 .087(Operation of a MIX of the basic scheme in its direct RSA- implementation)J
42 589 :M
f2_18 sf
7.079 .708(II.\312\312THE ATTACK)J
42 615 :M
f0_12 sf
.593 .059(The attack as described in this section is specific for the direct RSA-implementation of the basic MIX-)J
42 630 :M
.956 .096(scheme \(cf. Section I\). In Section III we discuss which other possible schemes, implementations, and)J
42 645 :M
-.069(cryptosystems are vulnerable.)A
42 675 :M
f2_14 sf
1.196(II.1.\312\312HISTORY)A
42 698 :M
f0_12 sf
-.121(The attack is based upon the well-known attack on RSA, which exploits the fact that RSA is a multiplicative)A
42 713 :M
-.055(homomorphism, by Davida [9] in the version by Judy Moore \(according to [11]\).)A
59 728 :M
.384 .038(It has been adapted to other situations before \(no guarantee on completeness\): to cryptosystems with)J
42 743 :M
.518 .052(some abstract properties in [10, 17], to signatures with some redundancy in [16], or to yield a factoring)J
42 758 :M
.02 .002(algorithm [12]. It was put to positive use for blind signatures and, thereby, for untraceable credentials and)J
42 773 :M
-.005(payments \(e.g. [7]\). It also forms a small substep in proofs of the security of single bits of RSA, from [15])A
42 788 :M
.404 .04(to [1]\).)J
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(schunter; page: 3 of 9)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
42 40 :M
f0_10 sf
10 f4_1 :p
507.001 :m
.302 .03(Birgit Pfitzmann, Andreas Pfitzmann: How to Break the Direct RSA-Implementation of MIXes                                          )J
423 40 :M
3 :m
.5 .05( )J
544 40 :M
f0_12 sf
12 f4_1 :p
6 :m
(3)S
42 60 :M
f2_14 sf
7.937 .794(II.2.\312\312THE IDEA)J
42 83 :M
f0_12 sf
.916 .092(In our case, the difficulty with the well-known RSA-attack lies in the fact that the random string in a)J
42 98 :M
.934 .093(decrypted message is not output, and that an attacker who forms his message according to the attack,)J
42 113 :M
-.005(instead of according to the MIX-scheme, does not know which output corresponds to his own input. \(This)A
42 128 :M
-.022(last fact is also the reason why the system is not trivially broken by the active attacks of [15], for which an)A
42 143 :M
-.092(oracle outputting the last bit of a message suffices.\))A
42 164 :M
.297 .03(All following congruences are modulo m. L := )J
f1_12 sf
.075(\351)A
f0_12 sf
.084(log)A
f0_10 sf
0 3 rm
.082(2)A
0 -3 rm
f0_12 sf
.095(\(m\))A
f1_12 sf
.075(\371)A
f0_12 sf
.231 .023( is the block length of the cipher. Let the first b)J
42 179 :M
-.029(bits be reserved for the random strings and the remaining B bits for the messages, i.e. a message looks like)A
42 194 :M
-.167(this:)A
1 G
180 197 231 39 rC
182 208 228 15 rF
0 G
182.5 208.5 227 14 rS
-1 -1 262 223 1 1 261 208 @b
gS
.538 .534 scale
409.72 405.056 :T
-409.72 -405.056 :T
354.72 408.056 :M
f8_14 sf
.297 .03(random string   R)J
570.153 408.056 :M
.609 .061(message   N)J
gR
-1 -1 183 231 1 1 182 201 @b
-1 -1 263 232 1 1 262 209 @b
-1 -1 410 232 1 1 409 201 @b
gS
.538 .534 scale
548.152 378.85 :T
-548.152 -378.85 :T
544.152 381.85 :M
f8_14 sf
(L)S
406.721 434.261 :M
(b)S
618.439 434.261 :M
(B)S
gR
gR
gS 13 12 568 818 rC
42 254 :M
f0_12 sf
-.095(Thus the encrypted form M of a message N with attached random string R is)A
232 281 :M
-.035(M )A
f1_12 sf
(\272)S
f0_12 sf
-.023( \(R \245 2)A
f0_10 sf
0 -4 rm
(B)S
0 4 rm
f0_12 sf
-.026( + N\))A
f0_10 sf
0 -4 rm
(c)S
0 4 rm
f0_12 sf
-.034( mod m.)A
42 305 :M
-.021(Consider an attacker who wants to trace such a message M which was input to the MIX \(see Figure 2\). He)A
42 320 :M
.072 .007(chooses a "small" \(cf. II.4.\) factor f, forms M* :)J
f1_12 sf
(\272)S
f0_12 sf
( f)S
-100 -100 :M
( )S
287 316 :M
f0_10 sf
(c)S
-100 -100 :M
.5 .05( )J
292 320 :M
f0_12 sf
.159 .016( \245 M and inputs M* to the MIX. On the one hand, the)J
42 335 :M
-.064(MIX decrypts M* and interprets it as a message N* with an attached random string R*, i.e. as)A
247 354 :M
( M*)S
f0_10 sf
0 -4 rm
(d)S
0 4 rm
f0_12 sf
( )S
f1_12 sf
(\272)S
f0_12 sf
( R*\2452)S
f0_10 sf
0 -4 rm
(B )S
0 4 rm
f0_12 sf
(+ N*,)S
42 378 :M
(of which it outputs N*.)S
88 401 416 249 rC
gS
.859 .859 scale
142.203 478.009 :T
-142.203 -478.009 :T
108.203 481.009 :M
f9_14 sf
.406 .041(BATCH 1:)J
gR
229.5 421.5 155 79 rS
gS
.859 .859 scale
529.167 540.901 :T
-529.167 -540.901 :T
485.167 543.901 :M
f8_12 sf
-.135({ \311, N, \311 } =: O)A
gR
156 204 18 17 412 463.5 @l
390 465 -1 1 405 464 1 390 464 @a
gS
.859 .859 scale
144.53 644.557 :T
-144.53 -644.557 :T
110.53 647.557 :M
f9_14 sf
.406 .041(BATCH 2:)J
gR
229.5 568.5 155 79 rS
gS
.859 .859 scale
352.897 503.632 :T
-352.897 -503.632 :T
340.897 506.632 :M
f8_14 sf
1.557(MIX)A
340.897 677.838 :M
1.557(MIX)A
gR
156 204 18 17 412 608.5 @l
390 610 -1 1 405 609 1 390 609 @a
gS
.859 .859 scale
534.167 709.778 :T
-534.167 -709.778 :T
485.167 712.778 :M
f8_12 sf
-.08({ \311, N*, \311 } =: O*)A
gR
168 216 18 17 222 452.5 @l
194 448 -1 1 215 451 1 194 447 @a
9 141 189 222 474 @k
-1 -1 195 483 1 1 214 476 @b
8.5 156 204 219.5 463.5 @k
188 465 -1 1 213 464 1 188 464 @a
gS
.859 .859 scale
166.655 539.736 :T
-166.655 -539.736 :T
125.655 542.736 :M
f8_12 sf
-.129(M := \(R \245 2   + N\))A
212.915 534.584 :M
f8_10 sf
(c)S
172.194 505.467 :M
f8_12 sf
(\245)S
172.194 513.62 :M
(\245)S
172.194 521.772 :M
(\245)S
181.501 536.913 :M
f8_10 sf
(B)S
172.194 566.03 :M
f8_12 sf
(\245)S
172.194 574.182 :M
(\245)S
172.194 582.335 :M
(\245)S
gR
168 216 18 17 222 596.5 @l
194 592 -1 1 215 595 1 194 591 @a
141 189 18 17 222 618.5 @l
-1 -1 195 627 1 1 214 620 @b
156 204 17 18 219.5 608 @l
188 609 -1 1 213 608 1 188 608 @a
gS
.859 .859 scale
174.194 671.344 :T
-174.194 -671.344 :T
172.194 674.344 :M
f8_12 sf
(\245)S
172.194 682.497 :M
(\245)S
172.194 689.485 :M
(\245)S
172.194 733.742 :M
(\245)S
172.194 741.895 :M
(\245)S
172.194 750.048 :M
(\245)S
180.338 706.955 :M
f8_10 sf
(c)S
143.107 713.943 :M
f8_12 sf
-.211(M* := f   \245 M)A
354.859 715.108 :M
-.055(as  R* \245 2   + N*)A
404.888 710.449 :M
f8_10 sf
(B)S
272.252 715.108 :M
f8_12 sf
.203 .02(interprets  M*)J
345.551 709.284 :M
f8_10 sf
(d)S
343.224 542.736 :M
f8_12 sf
-.316(\245 \245 \245)A
344.387 696.473 :M
-.316(\245 \245 \245)A
344.387 737.236 :M
-.316(\245 \245 \245)A
gR
gR
gS 13 12 568 818 rC
42 674 :M
f9_10 sf
.653 .065(Figure 2)J
98 674 :M
f8_10 sf
.847 .085(Scenario of the attack; the two batches are not necessarily distinct)J
42 707 :M
f0_12 sf
-.104(On the other hand, the attacker knows that)A
216 734 :M
-.271(M*)A
f0_10 sf
0 -4 rm
-.163(d)A
0 4 rm
f0_12 sf
-.098( )A
f1_12 sf
-.215(\272)A
f0_12 sf
-.228( f)A
-100 -100 :M
( )S
254 730 :M
f0_10 sf
(c)S
-100 -100 :M
.5 .05( )J
259 730 :M
-.07(\245d)A
f0_12 sf
0 4 rm
-.085( \245 M)A
0 -4 rm
f0_10 sf
-.082(d)A
f0_12 sf
0 4 rm
( )S
0 -4 rm
f1_12 sf
0 4 rm
-.108(\272)A
0 -4 rm
f0_12 sf
0 4 rm
-.072( f \245 \(R\2452)A
0 -4 rm
f0_10 sf
-.075(B )A
f0_12 sf
0 4 rm
-.104(+ N\).)A
0 -4 rm
42 758 :M
1.177 .118(Together this implies N*)J
f0_10 sf
0 -4 rm
.121 .012( )J
0 4 rm
f0_12 sf
.457 .046(\320 f \245 N)J
f0_10 sf
0 -4 rm
.121 .012( )J
0 4 rm
f1_12 sf
.35(\272)A
f0_12 sf
.372 .037( f \245 R)J
f0_10 sf
0 3 rm
.121 .012( )J
0 -3 rm
f0_12 sf
.54 .054(\245 2)J
f0_10 sf
0 -4 rm
.354(B)A
0 4 rm
f0_12 sf
.553 .055( \320 R*)J
f0_10 sf
0 3 rm
.121 .012( )J
0 -3 rm
f0_12 sf
.54 .054(\245 2)J
f0_10 sf
0 -4 rm
.354(B)A
0 4 rm
f0_12 sf
1.014 .101(. Since gcd\(2)J
f0_10 sf
0 -4 rm
.354(B)A
0 4 rm
f0_12 sf
.56 .056(, m\) = 1 and 2)J
f0_10 sf
0 -4 rm
.354(B)A
0 4 rm
f0_12 sf
.92 .092( therefore has an)J
42 773 :M
-.068(inverse modulo m, this becomes)A
223 788 :M
.086(\(N*)A
f0_10 sf
0 -4 rm
( )S
0 4 rm
f0_12 sf
.13 .013(\320 f \245 N\))J
f0_10 sf
0 3 rm
( )S
0 -3 rm
f0_12 sf
.14 .014(\245 2)J
f0_10 sf
0 -4 rm
.133 .013(-B )J
0 4 rm
f1_12 sf
.091(\272)A
f0_12 sf
.123 .012( f \245 R \320 R*.)J
534 788 :M
.131(\()A
f10_12 sf
.309(h)A
f0_12 sf
(\))S
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(schunter; page: 4 of 9)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
42 40 :M
f0_10 sf
10 f4_1 :p
507.001 :m
.302 .03(Birgit Pfitzmann, Andreas Pfitzmann: How to Break the Direct RSA-Implementation of MIXes                                          )J
423 40 :M
3 :m
.5 .05( )J
544 40 :M
f0_12 sf
12 f4_1 :p
6 :m
(4)S
42 60 :M
.921 .092(On the one hand, the attacker knows f and 2)J
f0_10 sf
0 -4 rm
.29(-B)A
0 4 rm
f0_12 sf
.778 .078(, and that N and N* are in the sets O and O* of output)J
42 75 :M
.939 .094(messages of the respective batches. Hence if the batch size is reasonably small \(this is always true in)J
42 90 :M
.856 .086(practice, cf. II.3.\), he can compute all possible left sides of Equation \()J
f10_12 sf
.469(h)A
f0_12 sf
.624 .062(\), i.e. all \(N)J
f0_10 sf
0 3 rm
.311 .031(2 )J
0 -3 rm
f0_12 sf
.856 .086(\320 f\245N)J
f0_10 sf
0 3 rm
.248(1)A
0 -3 rm
f0_12 sf
.198(\))A
f0_10 sf
0 3 rm
.113 .011( )J
0 -3 rm
f0_12 sf
.504 .05(\245 2)J
f0_10 sf
0 -4 rm
.248(-B)A
0 4 rm
f0_12 sf
.649 .065( for)J
42 105 :M
.218(N)A
f0_10 sf
0 3 rm
.126(1)A
0 -3 rm
f0_12 sf
.069 .007( )J
f1_12 sf
.216(\316)A
f0_12 sf
.265 .027( O, N)J
f0_10 sf
0 3 rm
.126(2)A
0 -3 rm
f0_12 sf
.069 .007( )J
f1_12 sf
.216(\316)A
f0_12 sf
.401 .04( O*.)J
59 120 :M
.11 .011(On the other hand, R, R* )J
f1_12 sf
.065(\316)A
f0_12 sf
.113 .011( {0,\311, 2)J
f0_10 sf
0 -4 rm
(b)S
0 4 rm
f0_12 sf
.107 .011(\3201}, thus for the right side of \()J
f10_12 sf
.071(h)A
f0_12 sf
(\))S
207 146 :M
.144 .014(f \245 R \320 R*  )J
f1_14 sf
.192(\316)A
f0_12 sf
.182 .018(  {\3202)J
f0_10 sf
0 -4 rm
.096(b)A
0 4 rm
f0_12 sf
.499 .05(+1,\311, f\245\(2)J
f0_10 sf
0 -4 rm
.096(b)A
0 4 rm
f0_12 sf
.119(\3201\)}.)A
42 169 :M
-.023(The attacker now tries to find out which pair \(N)A
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
-.024(, N)A
f0_10 sf
0 3 rm
(2)S
0 -3 rm
f0_12 sf
-.024(\) of output messages is \(N, N*\) by computing the left)A
42 184 :M
.595 .06(side of Equation \()J
f10_12 sf
.315(h)A
f0_12 sf
.519 .052(\) for each of them and testing for this condition. If f has been chosen to be suitably)J
42 199 :M
-.011(small \(cf. II.4.\), the condition will not hold for most other values \(N)A
f0_10 sf
0 3 rm
(2 )S
0 -3 rm
f0_12 sf
-.012(\320 f\245N)A
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
(\))S
f0_10 sf
0 3 rm
( )S
0 -3 rm
f0_12 sf
(\245 2)S
f0_10 sf
0 -4 rm
(-B)S
0 4 rm
f0_12 sf
(.)S
42 229 :M
f2_14 sf
1.231(II.3.\312\312OVERHEAD)A
42 252 :M
f0_12 sf
.514 .051(One can ask whether the batch size s can be made so large that the attacker cannot consider all pairs of)J
42 267 :M
.195 .02(output messages. For some time-critical services this seems impossible anyway, because there would not)J
42 282 :M
.092 .009(be enough messages to collect within the permitted time [19]. Anyway, the attacker can also speed up his)J
42 297 :M
-.063(attack by computing the sets of values which occur in the left sides of Equation \()A
f10_12 sf
-.126(h)A
f0_12 sf
-.055(\), i.e.)A
170 324 :M
-.118(V)A
f0_10 sf
0 3 rm
-.068(1)A
0 -3 rm
f0_12 sf
-.061( := {f \245 N)A
f0_10 sf
0 3 rm
-.051(1 )A
0 -3 rm
f0_12 sf
-.06(\245 2)A
f0_10 sf
0 -4 rm
-.068(-B)A
0 4 rm
f0_12 sf
-.058( | N)A
f0_10 sf
0 3 rm
-.068(1)A
0 -3 rm
f1_12 sf
-.117(\316)A
f0_12 sf
-.061(O}     \(including f \245 N \245 2)A
f0_10 sf
0 -4 rm
-.068(-B)A
0 4 rm
f0_12 sf
(\))S
42 340 :M
-.163(and)A
178 359 :M
-.131(V)A
f0_10 sf
0 3 rm
-.075(2)A
0 -3 rm
f0_12 sf
-.077( := {N)A
f0_10 sf
0 3 rm
-.075(2)A
0 -3 rm
f0_12 sf
-.061( \245 2)A
f0_10 sf
0 -4 rm
-.075(-B)A
0 4 rm
f0_12 sf
-.064( | N)A
f0_10 sf
0 3 rm
-.075(2)A
0 -3 rm
f1_12 sf
-.129(\316)A
f0_12 sf
-.072(O*}     \(including N* \245 2)A
f0_10 sf
0 -4 rm
-.075(-B)A
0 4 rm
f0_12 sf
(\))S
42 383 :M
.846 .085(\(all numbers reduced modulo m\) and sorting them. Now he has to check for which v)J
f0_10 sf
0 3 rm
.24(1)A
0 -3 rm
f0_12 sf
.131 .013( )J
f1_12 sf
.411(\316)A
f0_12 sf
.467 .047( V)J
f0_10 sf
0 3 rm
.24(1)A
0 -3 rm
f0_12 sf
.556 .056( there is a)J
42 398 :M
-.085(v)A
f0_10 sf
0 3 rm
-.071(2)A
0 -3 rm
f0_12 sf
( )S
f1_12 sf
-.121(\316)A
f0_12 sf
-.082( V)A
f0_10 sf
0 3 rm
-.071(2)A
0 -3 rm
f0_12 sf
-.072( such that)A
200 413 :M
.105(v)A
f0_10 sf
0 3 rm
.087(2)A
0 -3 rm
f0_12 sf
.131 .013( \320 v)J
f0_10 sf
0 3 rm
.087(1)A
0 -3 rm
f0_12 sf
.048 .005( )J
f1_12 sf
.149(\316)A
f0_12 sf
.259 .026( {\3202)J
f0_10 sf
0 -4 rm
.087(b)A
0 4 rm
f0_12 sf
.453 .045(+1,\311, f\245\(2)J
f0_10 sf
0 -4 rm
.087(b)A
0 4 rm
f0_12 sf
.357 .036(\3201\)} mod m.)J
533 413 :M
.339(\()A
f10_12 sf
.809(G)A
f0_12 sf
(\))S
42 436 :M
-.068(This might look like Figure 3.)A
49 453 494 135 rC
gS
.929 .925 scale
73.155 533.427 :T
-73.155 -533.427 :T
58.155 536.427 :M
f9_14 sf
.392 .039(V   :)J
57.078 591.584 :M
.392 .039(V   :)J
65.693 542.916 :M
f9_12 sf
(1)S
66.77 599.154 :M
(2)S
386.621 507.226 :M
f8_14 sf
.141 .014(= f \245N \245 2)J
438.314 502.9 :M
f8_12 sf
(-B)S
389.852 629.436 :M
f8_14 sf
.79 .079(= N* \245 2)J
436.16 625.11 :M
f8_12 sf
(-B)S
gR
-1 -1 515 548 1 1 514 538 @b
-2 -2 530 548 2 2 528 536 @b
-2 -2 530 548 2 2 528 536 @b
522.5 543.5 13 @e
1 G
507 548 30 11 rF
507 526 30 11 rF
525 534 12 18 rF
0 G
156 204 18 19 541 542.5 @l
91 544 -1 1 534 543 1 91 543 @a
9 156 204 541 491 @k
91 492 -1 1 534 491 1 91 491 @a
-1 -1 98 497 1 1 97 486 @b
-1 -1 515 548 1 1 514 538 @b
-1 -1 515 497 1 1 514 486 @b
-2 -2 418 548 2 2 416 536 @b
-2 -2 358 548 2 2 356 536 @b
-2 -2 284 548 2 2 282 536 @b
-2 -2 269 548 2 2 267 536 @b
-2 -2 195 548 2 2 193 536 @b
-2 -2 462 548 2 2 460 536 @b
454.5 543.5 13 @e
1 G
439 548 31 11 rF
439 526 30 11 rF
0 G
-2 -2 418 548 2 2 416 536 @b
409.5 543.5 13 @e
1 G
394 548 31 11 rF
394 526 30 11 rF
0 G
-2 -2 358 548 2 2 356 536 @b
350.5 543.5 13 @e
1 G
335 548 31 11 rF
335 526 30 11 rF
0 G
-2 -2 284 548 2 2 282 536 @b
276.5 543.5 13 @e
1 G
261 548 30 11 rF
261 526 29 11 rF
0 G
-2 -2 269 548 2 2 267 536 @b
261.5 543.5 13 @e
1 G
246 548 31 11 rF
246 526 30 11 rF
0 G
-2 -2 195 548 2 2 193 536 @b
186.5 543.5 13 @e
1 G
172 548 30 11 rF
172 526 29 11 rF
0 G
-1 -1 515 548 1 1 514 538 @b
-1 -1 98 548 1 1 97 538 @b
-2 -2 113 548 2 2 111 536 @b
-2 -2 113 548 2 2 111 536 @b
105.5 543.5 13 @e
1 G
90 548 31 11 rF
90 526 30 11 rF
90 533 5 17 rF
0 G
91 544 -1 1 101 543 1 91 543 @a
.25 G
440 544 -2 2 467 542 2 440 542 @a
395 544 -2 2 422 542 2 395 542 @a
336 544 -2 2 363 542 2 336 542 @a
248 544 -2 2 288 542 2 248 542 @a
173 544 -2 2 200 542 2 173 542 @a
96 544 -2 2 118 542 2 96 542 @a
508 544 -2 2 514 542 2 508 542 @a
0 G
-2 -2 495 498 2 2 493 484 @b
-2 -2 430 498 2 2 428 484 @b
-2 -2 378 498 2 2 376 484 @b
-2 -2 352 498 2 2 350 484 @b
-2 -2 300 498 2 2 298 484 @b
-2 -2 209 498 2 2 207 484 @b
-2 -2 131 498 2 2 129 484 @b
:a
32 <99CC663399CC6633
><999999CCCCCC666666333333999999CCCCCC666666333333
>fg bk :b
-1 -1 495 543 1 1 494 498 @b
-1 -1 430 544 1 1 429 498 @b
-1 -1 378 544 1 1 377 497 @b
-1 -1 352 544 1 1 351 497 @b
-1 -1 300 544 1 1 299 497 @b
-1 -1 209 544 1 1 208 497 @b
-1 -1 131 544 1 1 130 497 @b
gR
:a
32 <99CC663399CC6633
><999999CCCCCC666666333333999999CCCCCC666666333333
>fg bk :b
gS 0 0 568 818 rC
:e
gS
.929 .925 scale
375.39 596.154 :T
90 rotate
-375.39 -596.154 :T
369.39 599.154 :M
0 G
f9_12 sf
-.664(in)A
gR
:a
32 <99CC663399CC6633
><999999CCCCCC666666333333999999CCCCCC666666333333
>fg bk :b
:e
gS
.929 .925 scale
530.315 599.399 :T
90 rotate
-530.315 -599.399 :T
522.315 602.399 :M
0 G
f8_12 sf
.162(out)A
gR
:a
32 <99CC663399CC6633
><999999CCCCCC666666333333999999CCCCCC666666333333
>fg bk :b
:e
gS
.929 .925 scale
461.391 599.399 :T
90 rotate
-461.391 -599.399 :T
453.391 602.399 :M
0 G
f8_12 sf
.162(out)A
gR
:a
32 <99CC663399CC6633
><999999CCCCCC666666333333999999CCCCCC666666333333
>fg bk :b
:e
gS
.929 .925 scale
405.39 599.399 :T
90 rotate
-405.39 -599.399 :T
397.39 602.399 :M
0 G
f8_12 sf
.162(out)A
gR
:a
32 <99CC663399CC6633
><999999CCCCCC666666333333999999CCCCCC666666333333
>fg bk :b
:e
gS
.929 .925 scale
321.389 599.399 :T
90 rotate
-321.389 -599.399 :T
313.389 602.399 :M
0 G
f8_12 sf
.162(out)A
gR
:a
32 <99CC663399CC6633
><999999CCCCCC666666333333999999CCCCCC666666333333
>fg bk :b
:e
gS
.929 .925 scale
223.388 599.399 :T
90 rotate
-223.388 -599.399 :T
215.388 602.399 :M
0 G
f8_12 sf
.162(out)A
gR
:a
32 <99CC663399CC6633
><999999CCCCCC666666333333999999CCCCCC666666333333
>fg bk :b
:e
gS
.929 .925 scale
139.386 599.399 :T
90 rotate
-139.386 -599.399 :T
131.386 602.399 :M
0 G
f8_12 sf
.162(out)A
gR
0 G
49 453 494 135 rC
9.5 -114 -66 358.5 572.5 @k
-1 -1 358 566 1 1 357 551 @b
66 114 19 18 351.5 467 @l
-1 -1 352 484 1 1 351 474 @b
gS
.929 .925 scale
555.315 601.562 :T
-555.315 -601.562 :T
550.315 604.562 :M
f8_12 sf
(m)S
550.315 549.405 :M
(m)S
102.309 606.725 :M
(0)S
102.309 549.405 :M
(0)S
gR
gR
:e
gS 13 12 568 818 rC
42 612 :M
0 G
f9_10 sf
.653 .065(Figure 3)J
98 612 :M
f8_10 sf
.806 .081(Test for Condition \()J
f10_12 sf
.452(G)A
f8_10 sf
.814 .081(\); in the depicted case the attack is completely successful)J
42 645 :M
f0_12 sf
-.098(All this can be done in O\(s \245 log\(s\)\) time.)A
59 660 :M
2.355 .235(So the attacker mainly has to carry out 1 modular exponentiation and division, 3\245s modular)J
42 675 :M
1.527 .153(multiplications, and to sort s numbers modulo m twice. The MIX itself has to carry out s modular)J
42 690 :M
.691 .069(exponentiations and to sort s numbers modulo m once \(and many more, if the key is not changed with)J
42 705 :M
-.112(every new batch\). Thus the complexity of the attack is nearly the same as that of legal mixing. Therefore the)A
42 720 :M
-.091(attack is always feasible.)A
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(schunter; page: 5 of 9)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
42 40 :M
f0_10 sf
10 f4_1 :p
507.001 :m
.302 .03(Birgit Pfitzmann, Andreas Pfitzmann: How to Break the Direct RSA-Implementation of MIXes                                          )J
423 40 :M
3 :m
.5 .05( )J
544 40 :M
f0_12 sf
12 f4_1 :p
6 :m
(5)S
42 60 :M
f2_14 sf
3.246 .325(II.4.\312\312CHOOSING THE FACTOR f AND THE PROBABILITY OF)J
98 75 :M
.332(SUCCESS)A
42 98 :M
f0_12 sf
.534 .053(The attacker is completely successful in identifying the message N, if f \245 N \245 2)J
f0_10 sf
0 -4 rm
.164(-B)A
0 4 rm
f0_12 sf
.376 .038( is the only v)J
f0_10 sf
0 3 rm
.164(1)A
0 -3 rm
f0_12 sf
.444 .044( to fulfil)J
42 113 :M
1.286 .129(Condition \()J
f10_12 sf
.468(G)A
f0_12 sf
.729 .073(\). \(It does not matter whether N* \245 2)J
f0_10 sf
0 -4 rm
.245(-B)A
0 4 rm
f0_12 sf
.6 .06( is also the only v)J
f0_10 sf
0 3 rm
.246(2)A
0 -3 rm
f0_12 sf
.9 .09(, because the attacker need not)J
42 128 :M
(identify N*.\))S
59 143 :M
1.722 .172(Assume that the values v)J
f0_10 sf
0 3 rm
.459(1)A
0 -3 rm
f0_12 sf
.25 .025( )J
f1_12 sf
.786(\316)A
f0_12 sf
.893 .089( V)J
f0_10 sf
0 3 rm
.459(1)A
0 -3 rm
f0_12 sf
1.036 .104( and v)J
f0_10 sf
0 3 rm
.459(2)A
0 -3 rm
f0_12 sf
.25 .025( )J
f1_12 sf
.786(\316)A
f0_12 sf
.893 .089( V)J
f0_10 sf
0 3 rm
.459(2)A
0 -3 rm
f0_12 sf
1.189 .119(, except N* \245 2)J
f0_10 sf
0 -4 rm
.459(-B)A
0 4 rm
f0_12 sf
1.799 .18(, were chosen from {0,\311, m-1})J
42 158 :M
.365 .037(randomly and independently. The probability that a specific v)J
f0_10 sf
0 3 rm
.087(1)A
0 -3 rm
f0_12 sf
.125 .012( )J
cF f1_12 sf
.012(\271)A
sf
.125 .012( f \245 N \245 2)J
f0_10 sf
0 -4 rm
.087(-B)A
0 4 rm
f0_12 sf
.203 .02( is near any of the v)J
f0_10 sf
0 3 rm
.087(2)A
0 -3 rm
f0_12 sf
.229 .023('s in the)J
42 173 :M
(sense of \()S
f10_12 sf
(G)S
f0_12 sf
-.004(\), i.e. in the union of the intervals around them \(cf. Figure 3\), is then bounded by)A
129 191 :M
.034(Prob\(v)A
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.049 .005(\)  <  s \245 |{\3202)J
f0_10 sf
0 -4 rm
(b)S
0 4 rm
f0_12 sf
.162 .016(+1,\311, f\245\(2)J
f0_10 sf
0 -4 rm
(b)S
0 4 rm
f0_12 sf
.056 .006(\3201\)}|  /  m   =  s \245 \(\(f+1\)\2452)J
f0_10 sf
0 -4 rm
(b )S
0 4 rm
f0_12 sf
.044 .004(\320 f\)  /  m)J
228 210 :M
cF f1_12 sf
.005(\273)A
sf
.055 .005(  s\245f\2452)J
f0_10 sf
0 -4 rm
(b)S
0 4 rm
f0_12 sf
.02 .002(  /  2)J
f0_10 sf
0 -4 rm
.061 .006(b+B )J
0 4 rm
f0_12 sf
.031 .003( =  s\245f / 2)J
f0_10 sf
0 -4 rm
(B)S
0 4 rm
f0_12 sf
(.)S
42 233 :M
.891 .089(The messages N)J
f0_10 sf
0 3 rm
.193(1)A
0 -3 rm
f0_12 sf
.435 .043(, N)J
f0_10 sf
0 3 rm
.193(2)A
0 -3 rm
f0_12 sf
.688 .069( can be assumed to be end-to-end encrypted and thus to be chosen randomly and)J
42 248 :M
.268 .027(independently. However, they are only chosen from {0,\311, 2)J
f0_10 sf
0 -4 rm
.084(B)A
0 4 rm
f0_12 sf
.252 .025(-1}. Therefore the assumption is not really)J
42 263 :M
.508 .051(justified. Nevertheless, not knowing better, we will maintain it and hope that it is not too unreasonable,)J
42 278 :M
.6 .06(since the messages are multiplied by the rather large number 2)J
f0_10 sf
0 -4 rm
.162(-B)A
0 4 rm
f0_12 sf
.323 .032( \(it is at least )J
cF f1_12 sf
.032(\273)A
sf
.323 .032( 2)J
f0_10 sf
0 -4 rm
.162(b)A
0 4 rm
f0_12 sf
.63 .063(\). The probability of)J
42 293 :M
-.025(complete success, i.e. that none of the s-1 other v)A
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
-.025('s fulfils the condition, is then bounded by)A
169 319 :M
.114 .011(Prob\(success\)  >  1 \320 \(s-1\)\245Prob\(v)J
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.042 .004(\)  )J
cF f1_12 sf
.004(\273)A
sf
.042 .004(  1 \320 s)J
f0_10 sf
0 -4 rm
(2)S
0 4 rm
f0_12 sf
.06 .006(\245f / 2)J
f0_10 sf
0 -4 rm
(B)S
0 4 rm
f0_12 sf
(.)S
42 343 :M
.813 .081(Note that this probability is independent of the length b of the random string. Hence if B is large, say)J
42 358 :M
-.042(B > 200, the attacker can choose any factor f < 2)A
f0_10 sf
0 -4 rm
-.038(100,)A
0 4 rm
f0_12 sf
-.041( and success will be quite certain since the batch size s)A
42 373 :M
-.076(can be assumed to be smaller than 10)A
f0_10 sf
0 -4 rm
-.076(10)A
0 4 rm
f0_12 sf
(.)S
59 388 :M
.155 .015(Thus those implementations that seemed most efficient when only the previously known attacks were)J
42 403 :M
.88 .088(considered, are insecure: One would have chosen L > 600 to ensure the security of the RSA modulus)J
42 418 :M
.892 .089(against factoring, and would have considered b )J
cF f1_12 sf
.089(\273)A
sf
.892 .089( 100 sufficient to prevent an attacker from trying all)J
42 433 :M
1.436 .144(random strings in a reencryption attack. The remaining B > 500 bits would have been used for the)J
42 448 :M
.086(messages.)A
42 469 :M
.605 .061(The attack can still succeed if, in most cases, more than one v)J
f0_10 sf
0 3 rm
.187(1)A
0 -3 rm
f0_12 sf
.671 .067( fulfils Condition \()J
f10_12 sf
.357(G)A
f0_12 sf
.699 .07(\): The attacker can)J
42 484 :M
1.074 .107(choose several factors f to attack the same message. For each f, messages N)J
f0_10 sf
0 3 rm
.303(1)A
0 -3 rm
f1_12 sf
.518(\316)A
f0_12 sf
1.065 .106(O which cannot be N)J
42 499 :M
.861 .086(according to \()J
f10_12 sf
.418(G)A
f0_12 sf
.883 .088(\) can be excluded from further consideration. In this paragraph, we denote everything)J
42 514 :M
-.064(which corresponds to a given factor f by an additional subscript f.)A
59 529 :M
.724 .072(Assume that the attacker inputs each M*)J
f0_10 sf
0 3 rm
.122(f)A
0 -3 rm
f0_12 sf
.637 .064( in a different batch. Then the corresponding sets V)J
f0_10 sf
0 3 rm
.132(2,f)A
0 -3 rm
f0_12 sf
.498 .05( are)J
42 544 :M
.103 .01(independent except for the values N*)J
f0_10 sf
0 3 rm
(f)S
0 -3 rm
f0_12 sf
.033 .003( \245 2)J
f0_10 sf
0 -4 rm
(-B)S
0 4 rm
f0_12 sf
.084 .008(. Thus the conditions \()J
f10_12 sf
(G)S
f0_12 sf
.074 .007(\) for the different v)J
f0_10 sf
0 3 rm
.018(1,f)A
0 -3 rm
f0_12 sf
.083 .008('s arising from a)J
42 559 :M
.04 .004(fixed N)J
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
cF f1_12 sf
.004(\271)A
sf
.038 .004(N are nearly independent. The probability that the attacker cannot exclude N)J
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.035 .003( from the possible)J
42 574 :M
1.477 .148(values of N is therefore the product of the probabilities Prob\(v)J
f0_10 sf
0 3 rm
.292(1,f)A
0 -3 rm
f0_12 sf
1.257 .126(\) over all chosen values f. He can)J
42 589 :M
.082 .008(minimize it by choosing as many small f's as possible, i.e. f := 2, 3,\311 . If 2)J
f0_10 sf
0 -4 rm
(B)S
0 4 rm
f0_12 sf
.079 .008( is not much larger than s, he)J
42 604 :M
-.016(must stop before f > 2)A
f0_10 sf
0 -4 rm
(B)S
0 4 rm
f0_12 sf
(/s.)S
59 619 :M
.288 .029(The attacker can do even better. If \()J
f10_12 sf
.172(G)A
f0_12 sf
.246 .025(\) holds for a given v)J
f0_10 sf
0 3 rm
.065(1,f)A
0 -3 rm
f0_12 sf
.247 .025(, this is usually the case for just one v)J
f0_10 sf
0 3 rm
.065(2,f)A
0 -3 rm
f0_12 sf
(.)S
42 634 :M
.224 .022(He can use this v)J
f0_10 sf
0 3 rm
.056(2,f)A
0 -3 rm
f0_12 sf
.239 .024( to compute a tighter bound on R, which in turn makes the interval in \()J
f10_12 sf
.149(G)A
f0_12 sf
.289 .029(\) smaller for)J
42 649 :M
.221 .022(the following factors f: If v)J
f0_10 sf
0 3 rm
.048(1,f)A
0 -3 rm
f0_12 sf
.151 .015( and v)J
f0_10 sf
0 3 rm
.048(2,f)A
0 -3 rm
f0_12 sf
.212 .021( really correspond to N and N*, resp., then v)J
f0_10 sf
0 3 rm
.048(2,f)A
0 -3 rm
f0_12 sf
.101 .01( \320 v)J
f0_10 sf
0 3 rm
.048(1,f)A
0 -3 rm
f0_12 sf
( )S
f1_12 sf
.088(\272)A
f0_12 sf
.112 .011( f \245 R \320 R*)J
f0_10 sf
0 3 rm
(f)S
0 -3 rm
f0_12 sf
(.)S
42 664 :M
.57 .057(This gives f \245 R )J
f1_12 sf
.323(\272)A
f0_12 sf
.368 .037( v)J
f0_10 sf
0 3 rm
.177(2,f)A
0 -3 rm
f0_12 sf
.368 .037( \320 v)J
f0_10 sf
0 3 rm
.177(1,f)A
0 -3 rm
0 -4 rm
.111 .011( )J
0 4 rm
f0_12 sf
.833 .083(+ R*)J
f0_10 sf
0 3 rm
.163(f)A
0 -3 rm
f0_12 sf
.801 .08(. Let x denote the right side of this congruence reduced mod m, i.e.)J
42 679 :M
.349 .035(0 )J
cF f1_12 sf
.035(\243)A
sf
.349 .035( x < m. Since 0 )J
cF f1_12 sf
.035(\243)A
sf
.349 .035( f\245R < m, too \(otherwise \()J
f10_12 sf
.265(G)A
f0_12 sf
.395 .04(\) would always be true\), the equation f \245 R = x holds in)J
42 694 :M
f8_12 sf
(Z)S
45 694 :M
(Z)S
f0_12 sf
.027 .003(. This means R = x / f. Since only R*)J
f0_10 sf
0 3 rm
(f)S
0 -3 rm
f0_12 sf
.027 .003( is unknown in x, x lies in an interval of size 2)J
f0_10 sf
0 -4 rm
(b)S
0 4 rm
f0_12 sf
.038 .004(. Thus the attacker)J
42 709 :M
-.043(obtains an interval of size 2)A
f0_10 sf
0 -4 rm
(b)S
0 4 rm
f0_12 sf
-.045(/f in which R lies. This knowledge can be used in \()A
f10_12 sf
-.089(h)A
f0_12 sf
-.045(\) to improve \()A
f10_12 sf
-.09(G)A
f0_12 sf
-.066(\).)A
42 730 :M
.165 .017(To be safe from this attack, Prob\(v)J
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.157 .016(\) must be about 1 even for small f. This means approximately 2)J
f0_10 sf
0 -4 rm
.063(B)A
0 4 rm
f0_12 sf
.08 .008( < s.)J
42 745 :M
.407 .041(Choosing B so small in the basic MIX-scheme would not only reduce efficiency, the main advantage of)J
42 760 :M
.594 .059(MIXes, but is rather senseless, because it means that in every batch all possible messages occur, or the)J
42 775 :M
.72 .072(same message occurs several times. Thus the recipients would receive no information \(in other words:)J
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(schunter; page: 6 of 9)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
42 40 :M
f0_10 sf
10 f4_1 :p
507.001 :m
.302 .03(Birgit Pfitzmann, Andreas Pfitzmann: How to Break the Direct RSA-Implementation of MIXes                                          )J
423 40 :M
3 :m
.5 .05( )J
544 40 :M
f0_12 sf
12 f4_1 :p
6 :m
(6)S
42 60 :M
1.117 .112(mostly, not even addressing would be possible, to say nothing of any message content\). Other MIX-)J
42 75 :M
-.075(schemes where this does not hold are mentioned in Section III.)A
42 105 :M
f2_14 sf
3.494 .349(II.5.\312\312FEASIBILITY OF THE ACTIVE PART OF THE ATTACK)J
42 128 :M
f0_12 sf
-.063(In principle, MIXes are better candidates for active attacks than most other users of a public key system for)A
42 143 :M
-.045(two reasons: First, they are forced to output much larger parts of messages they decrypted. Secondly, these)A
42 158 :M
.347 .035(messages are meaningless to them, because they are usually end-to-end-encrypted. Hence a MIX cannot)J
42 173 :M
.262 .026(detect an active attack by means of natural redundancy in the messages, as other users sometimes might.)J
42 188 :M
-.072(Nevertheless, there could be two problems for the attacker.)A
42 209 :M
-.101(First, the attacker must see the message M he wants to trace before he can form a suitable M*. In analogy to)A
42 224 :M
-.058(the terminology of [14], one could call this a )A
f7_12 sf
-.061(directed)A
f0_12 sf
-.059( chosen ciphertext attack, directed against a particular)A
42 239 :M
-.024(input message.)A
59 254 :M
.163 .016(If the MIX uses the same key for many batches, this is no problem. If a new key is used for each new)J
42 269 :M
-.059(batch, M* must be submitted to the MIX in the same batch as M. If the input messages are really collected,)A
42 284 :M
-.074(i.e. if they can arrive at any time and are stored by the MIX, the attacker still has a lot of time for his attack,)A
42 299 :M
-.092(at least against the early messages. \(This would not hold for an )A
f7_12 sf
-.101(adaptive)A
f0_12 sf
-.096( chosen ciphertext attack, where the)A
42 314 :M
.12 .012(attacker would need an output from the MIX to form another input, e.g. if one could transform one of the)J
42 329 :M
-.105(attacks in [15] into a MIX-attack\).)A
59 344 :M
.767 .077(The attack can be prevented \(without changing the scheme, implementation or cryptosystem of the)J
42 359 :M
.541 .054(MIX\), if the MIX-network is changed so that the participants themselves store their messages and send)J
42 374 :M
.672 .067(them to the MIX at a prearranged time. But care must still be taken because the attacker only needs to)J
42 389 :M
-.103(perform one modular multiplication between seeing M and submitting M*. Hence if the messages arrive via)A
42 404 :M
.752 .075(the same time-division network, or from different local networks using different local clocks, the time)J
42 419 :M
-.082(might still suffice. So all the participants must be forced to send \(or to commit to, cf. [5]\) considerable parts)A
42 434 :M
.549 .055(of their messages before the first one has completed his. Also, this measure can no longer be applied if)J
42 449 :M
1.116 .112(messages pass several MIXes: Here, each MIX must be considered as a potential attacker against its)J
42 464 :M
.624 .062(successor \(this is why several MIXes are used\), and of course it receives the messages early enough to)J
42 479 :M
-.104(perform an attack on them.)A
42 500 :M
.233 .023(Secondly, if the MIXes are arranged as cascades in the sense that several MIXes must be passed in fixed)J
42 515 :M
-.08(order, only the first MIX is accessible to normal users directly. But this does not prevent an active attack on)A
42 530 :M
.262 .026(one of the others. Firstly, the previous MIX is a potential attacker \(see above\). Secondly, an attacker can)J
42 545 :M
-.092(prepare a message to attack the i-th MIX so that it passes through the previous i-1 MIXes correctly.)A
42 582 :M
f2_18 sf
1.234(III.\312\312VARIATIONS)A
42 608 :M
f2_14 sf
5.802 .58(III.1.\312\312OTHER MIX-SCHEMES)J
42 631 :M
f0_12 sf
-.027(The same attack can be used against the basic return address scheme [6, p.85] \(if the same implementation)A
42 646 :M
-.02(and cryptosystem are used\), because there, the address part of a message is just like a message in the basic)A
42 661 :M
(scheme.)S
42 682 :M
-.054(Many other schemes are based upon the idea in [6, p. 87] to use the basic scheme only for the first block of)A
42 697 :M
.025 .003(a message input to a MIX, and to include a private key in this block. The MIX uses this key to change the)J
42 712 :M
.051 .005(outlook of the rest of the message. Such schemes can enable better untraceability, increased performance,)J
42 727 :M
-.047(and fault tolerance [6, 19].)A
59 742 :M
.06 .006(If, as in the original version in [6, p. 87], the address of the recipient or the following MIX is included)J
42 757 :M
.072 .007(in the first block, this address has the same effect as the message in the basic scheme. Thus the attack can)J
42 772 :M
.19 .019(be carried out. It will succeed if the batch size is usually smaller than the address space \(cf. II.4.\). This is)J
42 787 :M
.122 .012(quite likely e.g. if every station can act as a MIX. In this case, the attacker can even find out the enclosed)J
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(schunter; page: 7 of 9)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
42 40 :M
f0_10 sf
10 f4_1 :p
507.001 :m
.302 .03(Birgit Pfitzmann, Andreas Pfitzmann: How to Break the Direct RSA-Implementation of MIXes                                          )J
423 40 :M
3 :m
.5 .05( )J
544 40 :M
f0_12 sf
12 f4_1 :p
6 :m
(7)S
42 60 :M
.324 .032(secret key: Once he is able to trace messages, he can use the MIX as an oracle outputting the last bits of)J
42 75 :M
-.071(decrypted messages in Algorithm 1 of [15]. Of course, this only provides additional valuable information if)A
42 90 :M
.556 .056(the same key is to be used for future messages which have no obvious connection with the one already)J
42 105 :M
-.051(traced.)A
59 120 :M
.11 .011(If the address is included in one of the other blocks, or if MIX-cascades must be passed in fixed order)J
42 135 :M
-.075(and therefore all but the last one output no address, this kind of attack is impossible.)A
42 156 :M
.43 .043(Even if the implementation of the basic scheme used for the first block is secure, the danger of another,)J
42 171 :M
-.092(quite trivial, attack on such a scheme should not be overlooked: The secret key should not belong to a block)A
42 186 :M
.993 .099(cipher in electronic code book mode. Otherwise, patterns of equal blocks within a message would be)J
42 201 :M
-.029(repeated in the output. This is not necessarily checked by the MIX, because only repeats of the first blocks)A
42 216 :M
.051 .005(need to be discarded to prevent the replay attack \(cf. Section I\), and even if the senders took care to avoid)J
42 231 :M
-.097(this situation, an active attacker could replace some blocks in a message by repeats of others.)A
42 261 :M
f2_14 sf
3.428 .343(III.2.\312\312OTHER IMPLEMENTATIONS OF THE BASIC SCHEME)J
42 284 :M
f0_12 sf
1.012 .101(The same kind of attack is applicable \(even easier\), if the random string is attached at the end of the)J
42 299 :M
.383 .038(message instead of in front: A message is prepared as M)J
f0_10 sf
0 -4 rm
.05 .005( )J
0 4 rm
f1_12 sf
.145(\272)A
f0_12 sf
.379 .038( \(N\2452)J
f0_10 sf
0 -4 rm
.11(b)A
0 4 rm
f0_12 sf
.137(+R\))A
f0_10 sf
0 -4 rm
.098(c)A
0 4 rm
f0_12 sf
.361 .036(, and instead of Equation \()J
f10_12 sf
.207(h)A
f0_12 sf
.4 .04(\), one)J
42 314 :M
(has)S
42 329 :M
.133(\(N*)A
f0_10 sf
0 -4 rm
.049 .005( )J
0 4 rm
f0_12 sf
.201 .02(\320 f \245 N\))J
f0_10 sf
0 3 rm
.049 .005( )J
0 -3 rm
f0_12 sf
.217 .022(\245 2)J
f0_10 sf
0 -4 rm
.134 .013(b )J
0 4 rm
f1_12 sf
.141(\272)A
f0_12 sf
.19 .019( f \245 R \320 R*.)J
42 350 :M
1.048 .105(A weaker form of the attack is still possible if the random part appears as bits inserted at predefined)J
42 365 :M
-.032(positions between the message bits, and either the random part is shorter than the message or there exists a)A
42 380 :M
-.112(large uninterrupted block of message bits:)A
59 395 :M
.15 .015(Let "ins\(R, N\)" denote the operation of inserting the bits of R into N. An attacker who chooses M* as)J
42 410 :M
1.575 .157(in II.2. knows that, similar to \()J
f10_12 sf
.945(h)A
f0_12 sf
1.549 .155(\), ins\(R*, N*\) )J
f1_12 sf
.659(\272)A
f0_12 sf
1.465 .147( f \245 ins\(R, N\) mod m. He can transform this into)J
42 425 :M
-.113(equations in )A
f8_12 sf
(Z)S
105 425 :M
-.098(Z)A
f0_12 sf
-.079(, namely)A
138 444 :M
.193 .019(f \245 ins\(R, N\)  =  ins\(R*, N*\) + k \245 m    for some k )J
f1_12 sf
.167(\316)A
f0_12 sf
.382 .038( {-1,\311, f-1}.)J
42 468 :M
.666 .067(If f is chosen to be a power of 2, f \245 ins\(R, N\) is just the bit pattern of ins\(R, N\), shifted to the left. If,)J
42 483 :M
1.023 .102(moreover, f is very small, then for each N)J
f0_10 sf
0 3 rm
.311(1)A
0 -3 rm
f0_12 sf
.17 .017( )J
f1_12 sf
.532(\316)A
f0_12 sf
.655 .066( O, N)J
f0_10 sf
0 3 rm
.311(2)A
0 -3 rm
f0_12 sf
.17 .017( )J
f1_12 sf
.532(\316)A
f0_12 sf
.998 .1( O*, and each possible k, the attacker can test)J
42 498 :M
-.054(whether it is possible that this equation holds: For fixed k he has a sum in )A
f8_12 sf
(Z)S
397 498 :M
.183(Z)A
f0_12 sf
.453 .045(, where some bits are missing)J
42 513 :M
-.085(in two of the three numbers. He must test if the remaining patterns match.)A
59 528 :M
.146 .015(Assume, e.g., that there is a block of 10 adjacent bits of N in ins\(R, N\), and that f=2. Then there are 9)J
42 543 :M
-.093(adjacent bit positions where the bits of all the three numbers are known. Since there are two possible carries)A
42 558 :M
-.033(from the right, the probability that the equation holds on these bits is only 2)A
f0_10 sf
0 -4 rm
-.026(-8 )A
0 4 rm
f0_12 sf
-.038(for randomly chosen N)A
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
-.035(, N)A
f0_10 sf
0 3 rm
(2)S
0 -3 rm
f0_12 sf
(.)S
42 573 :M
-.099(In this way, each block of at least three adjacent bits can be tested.)A
59 588 :M
.303 .03(Even if these tests don't rule out any message pairs and k's at once, the attacker can be successful. If,)J
42 603 :M
.644 .064(e.g., exactly every other bit is a message bit and f=2, then with each pair \(N)J
f0_10 sf
0 3 rm
.202(1)A
0 -3 rm
f0_12 sf
.456 .046(, N)J
f0_10 sf
0 3 rm
.202(2)A
0 -3 rm
f0_12 sf
.798 .08(\), the equation yields)J
42 618 :M
-.05(unique solutions R and R*. Using these, the attacker can reencrypt ins\(R, N)A
f0_10 sf
0 3 rm
-.051(1)A
0 -3 rm
f0_12 sf
-.048(\) and check if it is M.)A
42 639 :M
-.001(Nevertheless there are easy countermeasures to prevent this kind of attack. One possibility is to merge the)A
42 654 :M
-.011(random string and the message part completely before encryption, e.g. by encryption in another, unrelated)A
42 669 :M
-.075(cryptosystem \(where the key need not be secret\).)A
59 684 :M
.59 .059(The other is to make the active attack infeasible by adding redundancy to the messages, as if active)J
42 699 :M
-.08(attacks on RSA itself are to be prevented \(e.g. the image of N under a one-way function, again merged with)A
42 714 :M
-.084(the message somehow\), so that the MIX will usually not accept f)A
-100 -100 :M
( )S
349 710 :M
f0_10 sf
(c)S
-100 -100 :M
.5 .05( )J
354 714 :M
f0_12 sf
-.05( \245 M as properly formed.)A
59 729 :M
1.339 .134(Especially with MIXes, one could try to discard not only repeats, but also multiples of previous)J
42 744 :M
-.026(messages by small factors. "Is M* = f)A
-100 -100 :M
( )S
223 740 :M
f0_10 sf
(c)S
-100 -100 :M
.5 .05( )J
228 744 :M
f0_12 sf
.25 .025(\245M for some small f?" can be tested as "Is f := M*)J
f0_10 sf
0 -4 rm
(d)S
0 4 rm
-100 -100 :M
1.5 .15( )J
481 744 :M
f0_12 sf
(\245)S
-100 -100 :M
1 .1( )J
488 744 :M
-.15(M)A
f0_10 sf
0 -4 rm
-.07(\320d)A
0 4 rm
f0_12 sf
-.074( small?",)A
42 759 :M
-.014(thus with an expense of mainly one multiplication per message pair. If n is the number of messages mixed)A
42 774 :M
.214 .021(using the same key, this increases the complexity of mixing from O\(n\245log\(n\)\) to O\(n)J
f0_10 sf
0 -4 rm
.056(2)A
0 4 rm
f0_12 sf
.27 .027(\) \(ignoring log\(m\)-)J
42 789 :M
-.019(factors\). For some services this is still feasible, at least if the key is changed with every new batch. For the)A
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(schunter; page: 8 of 9)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
42 40 :M
f0_10 sf
10 f4_1 :p
507.001 :m
.302 .03(Birgit Pfitzmann, Andreas Pfitzmann: How to Break the Direct RSA-Implementation of MIXes                                          )J
423 40 :M
3 :m
.5 .05( )J
544 40 :M
f0_12 sf
12 f4_1 :p
6 :m
(8)S
42 60 :M
.203 .02(basic scheme, "f is small" should be defined as "the check \()J
f10_12 sf
.116(G)A
f0_12 sf
.218 .022(\) \(cf. II.3.\) provides information". Thus f is)J
42 75 :M
1.21 .121(considered large enough if \()J
f10_12 sf
.582(G)A
f0_12 sf
.964 .096(\) holds for all possible pairs \(v)J
f0_10 sf
0 3 rm
.306(1)A
0 -3 rm
f0_12 sf
.564 .056(, v)J
f0_10 sf
0 3 rm
.306(2)A
0 -3 rm
f0_12 sf
1.234 .123(\). This means \(f+1\)\2452)J
f0_10 sf
0 -4 rm
.382 .038(b )J
0 4 rm
f0_12 sf
.653 .065(\320 f )J
cF f1_12 sf
.065(\263)A
sf
.653 .065( m, i.e.)J
42 90 :M
-.054(about f > 2)A
f0_10 sf
0 -4 rm
-.075(B)A
0 4 rm
f0_12 sf
-.051(. The probability that no legal messages collide in this sense is at least about 1 \320 n)A
f0_10 sf
0 -4 rm
-.056(2)A
0 4 rm
f0_12 sf
-.057(\2452)A
f0_10 sf
0 -4 rm
-.075(B)A
0 4 rm
f0_12 sf
-.065(/m )A
cF f1_12 sf
-.065(\273)A
sf
-.065( 1 \320)A
42 105 :M
.085(n)A
f0_10 sf
0 -4 rm
.071(2)A
0 4 rm
f0_12 sf
.066(/2)A
f0_10 sf
0 -4 rm
.071(b)A
0 4 rm
f0_12 sf
.157 .016(, if the M)J
f0_10 sf
0 -4 rm
.071(d)A
0 4 rm
f0_12 sf
.273 .027('s are chosen randomly \(cf. II.4.\). This is tolerable for some parameters. Nevertheless the)J
42 120 :M
-.077(more common redundancy schemes seem more convenient for both users and MIXes.)A
42 150 :M
f2_14 sf
5.877 .588(III.3.\312\312OTHER CRYPTOSYSTEMS)J
42 173 :M
f0_12 sf
1.569 .157(Also the direct use of another cryptosystem in the otherwise unchanged implementation would not)J
42 188 :M
.269 .027(necessarily be helpful \(or in an implementation without the random string, if the cryptosystem is already)J
42 203 :M
1.247 .125(probabilistic\). Some public key cryptosystems which are provably secure against passive attacks are)J
42 218 :M
.563 .056(definitely not suitable, because they are known to be vulnerable to active attacks, and versions of these)J
42 233 :M
-.159(attacks can still be applied directly in the MIX-environment:)A
59 248 :M
-.093(With the quadratic residuosity system of [13], the attack of Example 6 in [15], where the attacker inserts)A
42 263 :M
-.028(an encrypted bit of someone else's message into his own message in a disguised form, is possible.)A
59 278 :M
-.106(With the system of [3] \(the version as secure as factorization\) one can apply one of the attacks which the)A
42 293 :M
1.792 .179(authors themselves probably mean when stating that the system is insecure against active attacks:)J
42 308 :M
-.058(\(Remember that encryption means that a pseudorandom number generator is run, which repeatedly squares)A
42 323 :M
.036 .004(a number and outputs the last bits each time. This output is added to the message from right to left. At the)J
42 338 :M
-.082(end, the following square is appended to the encrypted message, so that the recipient can recover the seed.\))A
59 353 :M
.076 .008( To obtain the last bit of a certain square root of a given number z, the attacker uses z like the seed for)J
42 368 :M
-.04(the pseudorandom number generator, but squares z fewer times than prescribed. Now he adds the resulting)A
42 383 :M
-.074(\(too short\) bit string to the left part of an arbitrary message N \(with or without an attached random string R,)A
42 398 :M
.131 .013(resp.\). The MIX subtracts the same string again. Thus the attacker can recognize N by the unchanged left)J
42 413 :M
.018 .002(part, if he has chosen a sufficiently long string. The changes in the following log\(log\(m\)\) bits of N are the)J
42 428 :M
-.087(last bits of the square root of z. The last one of these was desired. Hence the attacker has a suitable oracle to)A
42 443 :M
1.473 .147(factor using Algorithm 5 in [15]. \(For an attack against the cryptosystem alone, all the squaring to)J
42 458 :M
-.062(recognize N is not needed.\))A
59 473 :M
1.542 .154(The second attack, being adaptive, can be avoided if the key is changed with every new batch.)J
42 488 :M
.587 .059(Redundancy in the messages alone would not help, because in each step the attacker can determine the)J
42 503 :M
-.059(message the MIX sees nearly completely. For the remaining log\(log\(m\)\) bits he can try every combination.)A
42 518 :M
.312 .031(This, in its turn, can be avoided by interdicting repeats of seeds for the pseudorandom number generator)J
42 533 :M
-.094(and of the intermediate squares.)A
42 554 :M
-.06(There does not seem to be much use in discussing these special improvements to the implementation of the)A
42 569 :M
1.264 .126(basic MIX-scheme further, because many seem secure against this special kind of attack and, at the)J
42 584 :M
-.054(moment, none of them seems provably secure.)A
59 599 :M
.614 .061(Of course, the final consequence of discussions about both random strings and redundancy is that a)J
42 614 :M
.284 .028(public key cryptosystem used in the basic MIX-scheme should be probabilistic and secure against active)J
42 629 :M
1.141 .114(attacks \(cf. [2], but we have heard doubts about it; an interactive system, on the other hand, is quite)J
42 644 :M
-.046(unwieldy if several MIXes in a row are used [4]\).)A
42 680 :M
-.129(We are happy to thank Manfred B\232ttger and Michael Waidner for helpful comments, and Michael for lots of)A
42 695 :M
.268 .027(other support, too.)J
42 732 :M
f2_18 sf
.222(REFERENCES)A
42 755 :M
f0_10 sf
-.328([1])A
70 755 :M
.808 .081(W. Alexi, B. Chor, O. Goldreich, C. P. Schnorr: RSA and Rabin functions: Certain parts are as hard as the whole;)J
70 766 :M
.486 .049(SIAM J. Comput. 17/2 \(1988\) 194-209.)J
42 779 :M
-.328([2])A
70 779 :M
.435 .044(M. Blum, P. Feldman, S. Micali: Non-interactive zero-knowledge and its applications; 20th STOC, ACM, New York)J
70 790 :M
.51 .051(1988, 103-112.)J
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(schunter; page: 9 of 9)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
42 40 :M
f0_10 sf
10 f4_1 :p
507.001 :m
.302 .03(Birgit Pfitzmann, Andreas Pfitzmann: How to Break the Direct RSA-Implementation of MIXes                                          )J
423 40 :M
3 :m
.5 .05( )J
544 40 :M
f0_12 sf
12 f4_1 :p
6 :m
(9)S
42 57 :M
f0_10 sf
-.328([3])A
70 57 :M
1.945 .195(M. Blum, S. Goldwasser: An Efficient Probabilistic Public-Key Encryption Scheme Which Hides All Partial)J
70 68 :M
.136 .014(Information; Crypto '84, LNCS 196, Springer-Verlag, Heidelberg 1985, 289-299.)J
42 81 :M
-.328([4])A
70 81 :M
.784 .078(M. B\232ttger: Untersuchung der Sicherheit von asymmetrischen Kryptosystemen und MIX-Implementierungen gegen)J
70 92 :M
-.034(aktive Angriffe; Studienarbeit am Institut f\237r Rechnerentwurf und Fehlertoleranz, Universit\212t Karlsruhe 1989.)A
42 105 :M
-.328([5])A
70 105 :M
.014 .001(G. Brassard: Modern Cryptology - A Tutorial; LNCS 325, Springer-Verlag, Berlin 1988.)J
42 118 :M
-.328([6])A
70 118 :M
.048 .005(D. L. Chaum: Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms; CACM 24/2 \(1981\) 84-88.)J
42 131 :M
-.328([7])A
70 131 :M
.439 .044(D. Chaum: Security without Identification: Transaction Systems to make Big Brother Obsolete; CACM 28/10 \(1985\))J
70 142 :M
.019(1030-1044.)A
42 155 :M
-.328([8])A
70 155 :M
.247 .025(D. Chaum: The Dining Cryptographers Problem: Unconditional Sender and Recipient Untraceability; J. of Cryptology)J
70 166 :M
.205 .02(1/1 \(1988\) 65-75.)J
42 179 :M
-.328([9])A
70 179 :M
.475 .047(G. Davida: Chosen Signature Cryptanalysis of the RSA \(MIT\) Public Key Cryptosystem; TR-CS-82-2, University of)J
70 190 :M
-.045(Wisconsin, Milwaukee \(October 1982\) \(quoted in [11]\).)A
42 203 :M
-.218([10])A
70 203 :M
.638 .064(R. A. DeMillo, M. Merritt: Chosen Signature Cryptanalysis of Public Key Cryptosystems; Technical Memorandum,)J
70 214 :M
-.002(School of Information and Computer Science, Georgia Institute of Technology, Atlanta 1982. \(quoted in [17]\).)A
42 227 :M
-.218([11])A
70 227 :M
.271 .027(D. E. Denning: Digital Signatures with RSA and Other Public-Key Cryptosystems; CACM 27/4 \(1984\) 388-392.)J
42 240 :M
-.218([12])A
70 240 :M
.737 .074(Y. Desmedt, A. M. Odlyzko: A chosen text attack on the RSA cryptosystem and some discrete logarithm schemes;)J
70 251 :M
.162 .016(Crypto '85, LNCS 218, Springer-Verlag, Heidelberg 1986, 516-522.)J
42 264 :M
-.218([13])A
70 264 :M
.225 .023(S. Goldwasser, S. Micali: Probabilistic Encryption; J. of Computer and System Sciences 28 \(1984\) 270-299.)J
42 277 :M
-.218([14])A
70 277 :M
1.485 .149(S. Goldwasser, S. Micali, R. L. Rivest: A Digital Signature Scheme Secure Against Adaptive Chosen-Message)J
70 288 :M
.414 .041(Attacks; SIAM J. Comput. 17/2 \(1988\) 281-308.)J
42 301 :M
-.218([15])A
70 301 :M
.201 .02(S. Goldwasser, S. Micali, P. Tong: Why and How to establish a Private Code On a Public Network; 23rd FOCS, IEEE)J
70 312 :M
.44 .044(Computer Society, 1982, 134-144.)J
42 325 :M
-.218([16])A
70 325 :M
.278 .028(W. de Jonge, D. Chaum: Attacks on Some RSA Signatures; Crypto '85, LNCS 218, Springer-Verlag, Berlin 1986, 18-)J
70 336 :M
.25(27.)A
42 349 :M
-.218([17])A
70 349 :M
.302 .03(M. John Merritt: Cryptographic Protocols; Ph. D. Dissertation, School of Information and Computer Science, Georgia)J
70 360 :M
.134 .013(Institute of Technology, February 1983.)J
42 373 :M
-.218([18])A
70 373 :M
.061 .006(A. Pfitzmann: A switched/broadcast ISDN to decrease user observability; 1984 International Zurich Seminar on Digital)J
70 384 :M
.491 .049(Communications, IEEE, 1984, 183-190.)J
42 397 :M
-.218([19])A
70 397 :M
1.812 .181(A. Pfitzmann: How to implement ISDNs without user observability - Some remarks; Fakult\212t f\237r Informatik,)J
70 408 :M
-.038(Universit\212t Karlsruhe, Interner Bericht 14/85.)A
42 421 :M
-.218([20])A
70 421 :M
1.548 .155(A. Pfitzmann, B. Pfitzmann, M. Waidner: Datenschutz garantierende offene Kommunikationsnetze; Informatik-)J
70 432 :M
.234 .023(Spektrum 11/3 \(1988\) 118-142.)J
endp
%%Trailer
end		% md
%%EOF
