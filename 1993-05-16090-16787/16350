Newsgroups: sci.crypt,alt.privacy.clipper
Path: msuinfo!agate!howland.reston.ans.net!usc!news.aero.org!usasoc.soc.mil!usasoc.soc.mil!rbrand
From: rbrand@usasoc.soc.mil (Raymond S. Brand)
Subject: Re: NIST 4/30 Clipper info
Message-ID: <1993May6.194601.13334@usasoc.soc.mil>
Sender: news@usasoc.soc.mil
Organization: SOFNET
References: <16748@rand.org> <1993May5.201803.16881@slcs.slb.com> <1993May6.121958.5551@usasoc.soc.mil> <1993May6.183246.14670@ee.eng.ohio-state.edu>
Date: Thu, 6 May 1993 19:46:01 GMT
Lines: 52
Xref: msuinfo sci.crypt:16350 alt.privacy.clipper:351

In article <1993May6.183246.14670@ee.eng.ohio-state.edu>, butzerd@maumee.eng.ohio-state.edu (Dane C. Butzer) writes:
> In article <1993May6.121958.5551@usasoc.soc.mil> rbrand@usasoc.soc.mil (Raymond S. Brand) writes:
> >When asked what the MYK-78 does when given a bogus LEF, then engineer
> >at Mykotronx said that it would en/decode using a key of all zeros
> >(instead of the supplied one) and would not indicate an error.
> 
> What a sec - this makes unauthorized tapping a piece of cake, right?  Lets
> say one person (the "caller") phones another person (the "receiver"), using
> MYK-78 for "security", and you want to listen in.  Just intercept the
> signal from the caller, corrupt his LEF block (ie. change it to all zeros
> maybe), then pass this along to the reciever.  When the receiver's data is
> transmitted to the caller, do the same.  This shouldn't be tough - you
> could splice into the phone line right by one of the two parties, and we
> always know where the LEF blocks are, right?  (Otherwise, the law wouldn't
> be able to access them.)  Now, both sides of the conversation will be
> encrypted with a key of all zeros - may as well be unencrypted!
> 
> OK, what am I missing?  Must be something - this is TOO easy a back door.
> You could fly the space shuttle through this sucker!

Looking at it like that, it is too easy. So, what are the steps to make
2 MYK-78s to converse with each other?

	1. Both ends must create (or already have) a shared secret.
	2. Both ends must create and send to the other the LEFs.
	3. Both ends finish configuring the MYK-78 with the LEF from
		the other end.

If both ends don't already have a shared secret, they must create one. A
method based on DH-key exchange will work here if you have an error-free
channel. Error-free channels are possible to create wthout too much
trouble, find a book on communications protocols.

If you already have an error-free channel to do the DH-key exchange, use
it to exchange the LEFs; otherwise, create an error-free channel and use
it to exchange the LEFs. To prevent an active wiretapper from participating
in the LEF exchange, send LEF,HASH(LEF+K) to the other end and verify the
HASH that you receive.

Once the secure conversation is started, have the users verify they're
both using the same key.

Another option is to have both ends use their own LEFs and not send them.
I was told, by Mykotronx, that a MYK-78 can decrypt what it encrypted if
programmed with same key and the LEFs are loaded back in. This, of course,
wont make the conversation truly secure if the other end transmits its
LEF since only 1 LEF is required to tap the conversation.

> Dane
> 

						rsbx
