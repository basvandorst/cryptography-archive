Path: msuinfo!agate!howland.reston.ans.net!wupost!bigboy.sbc.com!news.mtholyoke.edu!nic.umass.edu!twain.ucs.umass.edu!not-for-mail
From: quilty@twain.ucs.umass.edu (Lulu of the lotus-eaters)
Newsgroups: sci.crypt
Subject: Re: Rubber-hose-resistant crypto file system
Date: 22 May 1993 21:31:28 -0400
Organization: University of Massachusetts - Amherst
Lines: 47
Message-ID: <1tmk5gINNjsj@twain.ucs.umass.edu>
References: <1tdjpjINNkk1@hal.com> <pooka.737847508@access> <1tgb5oINNgtg@twain.ucs.umass.edu> <1993May22.104417.8020@bernina.ethz.ch>
NNTP-Posting-Host: twain.ucs.umass.edu
Keywords: cryptographic file system, notebook computer

In article <1993May22.104417.8020@bernina.ethz.ch> caronni@nessie.cs.id.ethz.ch (Germano Caronni) writes:
>In article <1tgb5oINNgtg@twain.ucs.umass.edu> quilty@twain.ucs.umass.edu (Lulu of the lotus-eaters) writes:
>>passwords.  I.e. the journalist could reveal the passwords 'first'
>>'second' and 'erase' -- when these were entered, the data for 'first'
>>and 'second' would be revealed, but al information not in 'first' or
>>'second' would be scrambled.  One way to do this would be simply to

>Yes. Just assume the disk is backed up before, or made physically
>write-protected. Then you reveal that you have something to hide,
>when the original disk is different to the backup.
>If you are talking about a large government that wants to find out
>something, and want it badly enough, I guess they will find out, just
>by asking you about the data, and not the keys, unless you die.
>But if they want just to hide the information, well... the disk
>will be junked, at least.

Hmm... I think both the problems you suggest to my general idea can be
worked around.   The problem about the disk being made physically
write-protected isn't really a big deal.  It should be no problem to
write the program so that before *any* password can be used, some bit
of information must be written to, then successfully read back from
disk.  Write-protecting the drive will make all the valid passwords
not work -- hence defeating the purpose of the rubber-hose
cryptography had in the first place.  However, the problem about
backups of the disk are more difficult to deal with.  In order for it
not to be obvious that a negative password is given, it'd be necessary
that every positive password cause a certain amount of random data to
be written to various parts of the disk.  This might be a little
difficult to do correctly, since the password 'first' doesn't help to
distinguish info passworded with 'second' from random data -- and
therefore any incomplete password list could cause encrypted
information to be destroyed.  Of course, this might be "a feature, not
a bug" (as certain software manuals are wont to say).  It might be
better to forget about the negative password thing, and simply
scramble *everything* not explicitly positive-passworded with each
attempt at access.  The enemy could see that data was being scrambled,
but couldn't tell whether the scrambled areas contained anything
important.  Of course, with a backup copy of the disk, we just arrive
at pretty much the same situation of maintaining plausible deniability
for no further passwords -- so this may have all served no purpose.

Yours, Lulu...
-- 
      _/_/_/ THIS MESSAGE WAS BROUGHT TO YOU BY: Postmodern Enterprises _/_/_/ 
     _/_/    ~~~~~~~~~~~~~~~~[quilty@philos.umass.edu]~~~~~~~~~~~~~~~~~  _/_/ 
    _/_/  The opinions expressed here must be those of my employer...   _/_/ 
   _/_/_/_/_/_/_/_/_/_/ Surely you don't think that *I* believe them!  _/_/ 
