Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!noc.near.net!uunet!newsgate.watson.ibm.com!yktnews.watson.ibm.com!basturk
From: basturk@watson.ibm.com (Erol Basturk)
Subject: hardware hash function
Sender: news@watson.ibm.com (NNTP News Poster)
Message-ID: <C6DEo6.uyE@watson.ibm.com>
Date: Sat, 1 May 1993 23:02:30 GMT
Disclaimer: This posting represents the poster's views, not necessarily those of IBM.
Nntp-Posting-Host: kivu.watson.ibm.com
Organization: IBM T.J. Watson Research Center
Keywords: hash, MD5, DES, hardware, software
Lines: 35

DES is most often used to perform encryption and decryption of data,
while MD5 is used to produce a "good" hash on this data. DES
can also be used to produce a hash function if CBC or a similar type of
encryption is used on the data and the very last encryption block is
used as a hash of the data.

When it comes to use software tools to perform such hash, MD5 is
definitely faster than DES (if we assume that the DES code does not
run on several processors and in parallel). So, MD5 is usually
preferred to DES when it comes to produce a hash using software.

The problem arises when we want to produce such a hash in a faster way
than software would do, and that is, by using a hardware implementation.

DES has been designed to be very efficient when it comes to hardware 
implementation, for many steps can be done in parallel. We would
expect that MD5, which is faster then DES in software, would also
have a faster hardware version than the harware DES. 

Well, it seems that it's not. So, the question is: has a "fast" hash
function been designed for hardware implementation ? is a DES based
hash function the only way out for a fast hardware hash ?
how about an efficient MD6, equivalent to MD5, but designed for parallel
hardware implementation ?

Regards,

			Erol Basturk







