Newsgroups: sci.crypt
Path: msuinfo!agate!boulder!tigger!bear
From: bear@tigger.cs.Colorado.EDU (Bear Giles)
Subject: Analysis of S-boxes (Cryptology final exam problem)
Message-ID: <1993May19.041656.18907@colorado.edu>
Sender: news@colorado.edu (The Daily Planet)
Nntp-Posting-Host: tigger.cs.colorado.edu
Organization: National Oceanic & Atmospheric Adminstration / Boulder Labs
Date: Wed, 19 May 1993 04:16:56 GMT
Lines: 95


Reprinted, with permission, from my final exam in cryptology.  This was
one of three problems in a 3-hour exam, so it should only take you 1 to
1-1/2 hours to solve.  But it illustrates an interesting attack....

----
The following "mini-DES" uses 6-bit blocks of data (see code table
below) and 9 bits of key (the 9 bits are independent.

It has the following structure:

  L' = R
  R' = L + S (R + K)

where S is

  input  output
   000     011
   001     111
   010     000
   011     100
   100     101
   101     001
   110     110
   111     010

where there are three stages in this algorithm.

The code table is:

000000 space  001000  H     010000 P     011000 X
000001  A     001001  I     010001 Q     011001 Y
000010  B     001010  J     010010 R     011010 Z
000011  C     001011  K     010011 S     011011 0
000100  D     001100  L     010100 T     011100 1
000101  E     001101  M     010101 U     011101 2
000110  F     001110  N     010110 V     011110 3
000111  G     001111  O     010111 W     011111 4

100000  .     101000  h     110000 p     111000 x
100001  a     101001  i     110001 q     111001 y
100010  b     101010  j     110010 r     111010 z
100011  c     101011  k     110011 s     111011 5
100100  d     101100  l     110100 t     111100 6
100101  e     101101  m     110101 u     111101 7
100110  f     101110  n     110110 v     111110 8
100111  g     101111  o     110111 w     111111 9

Example:  Encode 'f' using key K = { 110, 101, 100 }

L0, R0 = 100, 110
L1, R1 = 110, 111
L2, R2 = 111, 110
L3, R3 = 110, 111

Problem:

Decipher the following:  cvxrUXkl

(That is, 100011 110110 111000 111011 010101 011000 101011 101100))

The following pairs are known:

   e -> 0      100101 -> 011011
   t -> 5      110100 -> 111011
   a -> Q      100001 -> 010001
   o -> U      101111 -> 010101
   space -> 2  000000 -> 011101

(b)  Why is this system so weak?  Could the security be improved by
using more rounds (but all other things unchanged)?  What is your
suggestion to improve the security?  Explain!

Hints:

Do all computations in GF(2^3) :  { 001, 010, 100, 011, 110, 111, 101 }
(GF(2^3)/x^3+x+1).

Express S as a y = f(x) = ax + b

Use the recursions for R' and L' to explicitly compute
  L3 = g(L0, R0, K0, K1, K2)
  R3 = h(L0, R0, K0, K1, K2)

Use the knowledge about the S-box and known plaintext/ciphertext pairs to
determing g and h.  Decipher the given ciphertet.


For the solution, finger my academic account  (bear@tigger.cs.colorado.edu)

Have fun!

-- 
Bear Giles
bear@cs.colorado.edu/fsl.noaa.gov
