Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!zaphod.mps.ohio-state.edu!cs.utexas.edu!uunet!ddssuprs!jd
From: jd@dickens.com (Joseph A Dudar)
Subject: Re: Serialization of an executable
Message-ID: <1993May18.162459.23822@dickens.com>
Date: Tue, 18 May 1993 16:24:59 GMT
References: <C72wBy.101@visgraph.uucp>
Organization: Dickens Data Systems, Inc.
Lines: 27

In article <C72wBy.101@visgraph.uucp> <forrie@decvax.dec.com> writes:
>I'm curious if anyone out there might know a bit about how the various
>vendors accomplish this serialization scheme.
>An example is SCO UNIX/Xenix.  The installation requires that you have
>a serial number and an activiation key for the software to run.  
>Similarly, INFORMIX has such a scheme which uses this.  The executables
>will not run without a 'valid' serial number.

In many cases, the SN - key pair is formed by an unpublished function that is
part of the installation code.  The function is applied to the SN in order
to produce the key that is printed on the shipped materials.  When you install
the product, the same function is applied to the SN embedded somewhere in the
product.  If you can't provide the key that matches that result, the
installation fails.  This mechanism is entirely dependent on the secrecy of
the transformation function.  Some companies, such as Informix, used to
require the installing user to enter -both- the SN and the key, and the install
code would then transform the SN and check to see if the key matched.  The
problem with this approach was that -any- valid pair (SN and key) would pass
the test.
-- 
-------------------------------------------------------------------------------
Joseph A. Dudar  |
jd@dickens.com   |   You recognize my voice, Mandrake?
Atlanta, GA      |
-------------------------------------------------------------------------------
And of course, my opinions may not coincide with those of my employer.
-------------------------------------------------------------------------------
