Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!darwin.sura.net!bogus.sura.net!udel!news.intercon.com!psinntp!panix!pw
From: pw@panix.com (Paul Wallich)
Subject: Clipper programming question
Message-ID: <C6M26o.7nL@panix.com>
Organization: Trivializers R Us
Date: Thu, 6 May 1993 15:11:11 GMT
Lines: 19

I don't know if this has already been thought of, but it seems
to me that the method proposed for programming clipper chips
(vault, seeds generated by escrow reps, destruction of the
programming equipment to make sure the unit keys don't leak)
could be significantly improved.

The big hitch is that there's no way to verify on the fly
(if at all) that any of the outside information being supplied
for programming the chip is actually being used to generate
the unit key. Is there some reason why you couldn't set things
up so that the programming equipment went through a challenge-
reponse sequence so that you could do a zero-knowledge proof
about whether the bits in the unit key actually had anything
to do with the bits in the seeds?

paul
disclaimer: this doesn't mean I think clipper is a good idea
even with provable secure unit key; I was just wondering.

