Path: msuinfo!agate!howland.reston.ans.net!newsserver.jvnc.net!gmd.de!dearn!barilvm!vms.huji.ac.il!bagel.cs.huji.ac.il!humus.cs.huji.ac.il!benor
Newsgroups: sci.crypt
Subject: Re: Three Cryptographers
Message-ID: <1svgef$f6a@bagel.cs.huji.ac.il>
From: benor@humus.cs.huji.ac.il (Michael Ben-Or)
Date: 14 May 1993 07:06:55 GMT
References: <1su76e$5k7@fnnews.fnal.gov>
Distribution: world
Organization: The Hebrew U. of Jerusalem, Computer Science Dept.
NNTP-Posting-Host: humus.cs.huji.ac.il
Lines: 55

In article <1su76e$5k7@fnnews.fnal.gov>, newman@pokey.fnal.gov (Mark Newman) writes:
|> About a week ago I attended a seminar that was being given by a
|> mathematician/cryptographer.   At one point he brought up a
|> story to illustrate a point about a way to protect anonymouity. It was
|> called "The Three Cryptographers".  In it three of the learned men were
|> enjoying a lunch together.  When they asked for the bill, they were told
|> that the meal was already payed for by a source who wished to remain
|> anonymous.  The three men decided that if the meal had been payed for by
|> a goeverment agency, than they didn't want to accept it.  If however it
|> had been payed by one of them, then they would gladly accept.  To protect
|> the potential anonymous payer, they came up with some sort of scheme where
|> each of the three would flip two coins.  They would then XOR the results of
|> the flip together and then if one of the people at the table had payed, they
|> would invert their answer before reporting it.  Then they would combine the
|> results in some way, and if the answer came up to be 0 then no one at the table
|> had payed, and if it came up 1 than one of them had payed.
|>
|> I'm may be off of the exact method, but it's close.  If someone knows the
|> exact algorithm, I'd appreciate it if they could let me know, it's been
|> bothering me all week.
|>
|> Thanks,
|>
|> Mark

This is just a simple case of the general theorems stating that any function
of n inputs can be computed by a set of n players in a way that will let them
all learn the value of the function but any set of less than n/2 players will
not get any additional information that does not follow from their own input
and the value of the output function.

In our case set x=1 if A paid the bill and x=0 otherwise. Define y and z in
a similar way for B and C, and use the general 1-private protocol to compute

              f(x,y,z) = x  OR  y  OR  z


See:

M. Ben-Or, S. Goldwasser and A. Wigderson,
"Completeness theorems for non-cryptographic fault-tolerant distributed computation"
20th STOC, pp 1-10, 1988.

and

D. Chaum, C. Crepeau and I. Damgaard
"Multiparty unconditionally secure protocols"
20th STOC, pp 11-19, 1988.

and

T. Rabin and M. Ben-Or,
"Verifiable secret sharing and multiparty protocols with honest majority"
21st STOC, pp. 73-85, 1989.

