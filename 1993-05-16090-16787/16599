Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!mont!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu (John Kelsey)
Subject: Re: some naive questions
Message-ID: <16BD3122FC.C445585@mizzou1.missouri.edu>
Sender: news@mont.cs.missouri.edu
Nntp-Posting-Host: mizzou1.missouri.edu
Organization: University of Missouri
References:  <DAR.93May17192623@viking.lanl.gov>
Date: Wed, 19 May 93 20:41:31 CDT
Lines: 21

In article <DAR.93May17192623@viking.lanl.gov>
dar@viking.lanl.gov (David Rabson) writes:
 
>My guess is that there is a well-known theorem that scrambling the
>order of encrypted bytes maps on to, and so is no more secure than,
>XORing in the usual way.  It is not obviously true, however.  What are
>the advantages and disadvantages of this kind of scrambling?
 
   Hmmm.  There are some bit patterns that *cannot* be gotten from some
other bit patterns by scrambling.  For example, no matter how I scramble
a bit string with a one and 63 zeros, it's never going to become a block
of 1's.  In other words, XORing with a large random number is a mapping
from the set of all 64-bit strings onto the set of all 64-bit strings,
but shuffling based on some random number is a mapping from the set of
all 64-bit strings with a certain count of 1 bits to the set of all 64-
bit strings with a certain count of 1 bits.  The bad part about this is
that it leaves less confusion about what the original string of bits was.
The good part is that it also leaves less information about what the random
number was used to decide how to shuffle the bits.
 
   --John Kelsey
