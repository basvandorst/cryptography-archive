Path: msuinfo!agate!ames!decwrl!apple!apple!mumbo.apple.com!gallant.apple.com!NewsWatcher!user
From: rol@grasp1.univ-lyon1.fr (Paul Rolland)
Newsgroups: sci.crypt
Subject: How can I revert that ?
Message-ID: <rol-180593140327@90.222.1.80>
Date: 18 May 93 12:12:56 GMT
Sender: news@gallant.apple.com
Followup-To: sci.crypt
Organization: Apple Computer Europe
Lines: 45

Hello,

Let's say that I have a C procedure that is :

char * crypt(char * ptr)	/* ptr supposed to be a pointer to a 8 char string
*/
{
  short i;
  char key='\0';

  for (i=0;i<;i++) {
    key = key ^ (*(ptr+i));	/* Xor */
  } /* endif */

  for (i=7;i>=0; i--) {
    key-=(char)(0xc4);       /* Substract 0xc4 */
    key ~ = key;												 /* Negate with carry flag */
    key = key << 1;										/* Rotate left with report in carry flag */
    key = key ^ (*(ptr+i));		/* Xor */
    *(ptr+i)= (char)(key);
  } /* endif */
}

For people used to read 80x86 code, the second sequience can be written :

        Std
        Mov Cx,8
__Loop: Sub Al,c4
        Neg Al
        Rol Al,1
        Xor Al,[Di]
        Stosb
        Loop __Loop

Neg will invert all the bits except the bit 0 if carry flag is set, and rol

with shift the bit 7 into carry flag.

Is there a way to revert the coding obtained from this procedure, or is the
only one solution to crypt the string we want to compare first and compared
the coded results ?

Paul Rolland

A bug can be changed to a feature by documenting it. Developpers know !
