Path: msuinfo!agate!howland.reston.ans.net!gatech!enterpoop.mit.edu!senator-bedfellow.mit.edu!news.mit.edu!warlord
From: warlord@MIT.EDU (Derek Atkins)
Newsgroups: sci.crypt
Subject: Re: Public Key Encryption
Date: 5 May 1993 14:57:17 GMT
Organization: Massachusetts Institute of Technology
Lines: 41
Message-ID: <WARLORD.93May5105715@deathtongue.mit.edu>
References: <C6Gw7n.Fx@brunel.ac.uk>
NNTP-Posting-Host: deathtongue.mit.edu
In-reply-to: mt92mmj@brunel.ac.uk's message of 3 May 93 20:14:09 GMT

In article <C6Gw7n.Fx@brunel.ac.uk> mt92mmj@brunel.ac.uk (MJ) writes:

   Could someone tell me (in simple terms) how the public key is derived and 
   related to the secret key in something like PGP. Is the public key a small
   part of the secret key ?
   How is the alogrithm converted into ascii when about 255 char.s are available?
   Is this enough ? or has the encryption tool got to have an ascii `wrap around'
   for the characters 1-0, a-z, A-Z, etc

   Thanks (apologies if questions too stupid !).

I'll answer some of these.  For Public Key questions, I highly
recommend the sci.crypt FAQ that was posted not too long ago (a few
weeks, I think).  Basically, for RSA, you choose two large primes, p &
q, subtract 1 from each, and then choose two numbers which are
multiplicative inverses of each other in the group of integers mod m,
where m = (p-1)(q-1).  basically, this means dE=1 mod m.

As for ASCII encoded, I recommend you read RFC 1421 (previously 1113),
which describes IA5 encoding.  Basically, what it assume the data is
an octet string (a series of bytes), and then it breaks the octet
string down into 6-bit chunks, and this 6-bit chunk gets encoded as
some ASCII character....  So, this means that for every 3 bytes of
data, you get 4 ASCII characters...  Just keep iterating on 3->4
bytes->chars, until you're done.  If you have extra character space at
the end, append the '=' character until you have a multiple of 4
characters.

It doens't matter at all that there are 255 chars available.  There
could be 255 thousand chars available, and the algorithm still holds
(although it would take a lot longer to encode the data... ;-)

Hope this helps...

-derek

--
  Derek Atkins, MIT '93, Electrical Engineering and Computer Science
     Secretary, MIT Student Information Processing Board (SIPB)
           MIT Media Laboratory, Speech Research Group
           warlord@MIT.EDU       PP-ASEL        N1NWH
