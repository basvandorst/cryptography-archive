Path: msuinfo!agate!howland.reston.ans.net!zaphod.mps.ohio-state.edu!cs.utexas.edu!uunet!vnet.IBM.COM
From: tarnold@vnet.IBM.COM (Todd W. Arnold)
Message-ID: <19930519.050243.556@almaden.ibm.com>
Date: Wed, 19 May 93 07:52:40 EDT
Newsgroups: sci.crypt,alt.security
Subject: Re: Goodbye smartcards
Organization: IBM Cryptographic Facility Development
Disclaimer: This posting represents the poster's views, not those of IBM
News-Software: UReply 3.1
References: <1993May8.082011.8630@infodev.cam.ac.uk> <15888@optilink.COM>
            <1993May17.084017.7656@dxcern.cern.ch>
            <1993May18.083631.18529@dxcern.cern.ch>
            <HANCHE.93May18123718@ptolemy.ams.sunysb.edu>
Lines: 42
Xref: msuinfo sci.crypt:16584 alt.security:10453

In <HANCHE.93May18123718@ptolemy.ams.sunysb.edu> Harald Hanche-Olsen writes:
>The
>rumour is that someone equipped with a smartcard reader and some
>clever electronics can extract the PIN code from the card.  You are
>supposed to have only three attempts, but I don't know if that limit
>is implemented in the card or in the reader.  If the latter, it is of
>course worthless, as it can be easily circumvented by a clever person.
>Similarly, if it is implemented in the card but can be circumvented by
>removing power from the card, it is equally worthless.  Does anybody
>here know what is the case?

To my knowledge, PIN checking and the PIN try limit are implemented ON THE
SMART CARD in nearly all cases - anyone with information to the contrary,
please correct me.  I can tell you for sure that OUR smart cards do all
the checking and limit enforcement on the card.  The reader and the software
in your PC or terminal have no involvement, and cannot override the card in
any way.  The important thing is that all the critical functions be performed
on the card itself, enabled by successful PIN verification.  If the critical
functions are under control of the program in your PC, and it decides what is
permitted based on PIN verification, you're not secure.  It's easy to write
a TSR to intercept the PIN verify response from the smart card, and fool the
program in the PC so it always thinks the PIN was correct.  For that matter,
it's easy to patch the program so it ignores the result of the PIN verification
altogether.  The moral of the story is that you have to verify the PIN in some
kind of "secure" environment (like the smart card), and then you have to do
your security-related processing in such a way that the same "secure" device
plays a critical role.

One big exposure is that the PIN itself is transmitted to most smart cards in
clear form.  Thus, you can simply eavesdrop on the interface to the card, and
learn the PINs.  In like manner, you can install a TSR in the PC to listen to
what's sent to the smart cards.  This is a problem.  Even if the PIN is
encrypted under a fixed key when sent, you have the same problem.  As long as
you've captured the encrypted PIN value, you can replay it to access the card.
You wouldn't have to know the clear PIN itself.  We get around this by offering
an additional capability, where our card establishes a short-term session key
each time you use it, and the PIN (and response message) can be encrypted using
this key.  That thwarts both the ability to learn the PIN and the ability to
reuse the encrypted PIN value in a replay attack.

   - Todd

