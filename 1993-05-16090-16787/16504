Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!cactus.org!ritter
From: ritter@cactus.org (Terry Ritter)
Subject: Re: Infinite One Time Pads ??
Message-ID: <1993May14.074552.26345@cactus.org>
Summary: It's not quite that easy . . .
Organization: Capital Area Central Texas UNIX Society, Austin, Tx
References: <C6yyJ8.15AE@hawnews.watson.ibm.com> <rlglendeC6z6u4.H94@netcom.com> <1993May13.200917.1045@bernina.ethz.ch>
Date: Fri, 14 May 1993 07:45:52 GMT
Lines: 87


 In <1993May13.200917.1045@bernina.ethz.ch>
 caronni@nessie.cs.id.ethz.ch (Germano Caronni) cites a previous
 message as a source for the Blum, Blum and Shub cryptographic RNG:


> <P678CIV@minnie.zdv.uni-mainz.de> (Tue, 24 Nov 1992 12:24:45 GMT)
> pom@anke.imsd.uni-mainz.DE (Prof. Dr. Klaus Pommerening)
>
>The following URNG was proposed by Blum, Blum and Shub.
>
>Parameter generation:
>  Find 2 prime numbers p and q with
>   - (p-1)/2 and (q-1)/2 are also prime,
>     in particular p and q are congruent 3 mod 4.
>   - p and q are at least 2^{256}, and p-q is not small.
>  Multiply them together: m = pq, and forget p and q.
>Then factoring m is infeasible. And there is no efficient algorithm
>that decides whether an arbitrary interger x is a quadratic residue
>mod m.

 Unfortunately, this is a rather casual interpretation of Blum, Blum,
 and Shub ([1] or [2]), and while the above conditions are indeed
 necessary, they are not sufficient.  It is also necessary that only
 one of { (p-1)/2, (q-1)/2 } have 2 as a quadratic residue.


>Pseudorandom number generation:
>  Take a random seed x0 between Sqrt[m] and m, such that gcd(x,m) = 1.
>  Calculate a sequence (x_1,...x_n) by x_i = x_{i-1}^2 mod m.
>  Output the log2(m) least significant bits from each x_i.

 Many crypto designers would also say that the above conditions
 are not sufficient.

 The problem is that BB&S or "x^2 mod N" is not a "perfect" or "one
 major cycle" RNG.  Instead, it defines many different cycles, of
 many different lengths, including short and even degenerate cycles.
 (I gave descriptions and some experimental results for short
 designs in [3].)  If our "random seed" happens to select a short
 cycle, we then have a short RNG, and short RNG's are *absolutely*
 predictable when they repeat.  Thus, guaranteed unpredictability
 absolutely depends upon not selecting a short cycle.

 Now, BB&S clearly states that it is necessary to select a cycle
 with length = lambda(N)/2, where lambda is "Charmichael's lambda
 function."  Finding the length of an arbitrary substantial cycle
 is very difficult, but even *checking* for a known cycle length
 takes substantial effort, and the specified cycles are rare.
 Moreover, this is not a one-time search but instead must be
 repeated for every new seed--if, that is, we wish to retain
 cryptographic unpredictability.

 If we had some way to guarantee a minimum length for a selected
 cycle, or if we had some guarantee of a particular distribution
 of cycle lengths (and, thus, the probability of selecting a
 "too short" cycle), it might be easier to accept just "picking"
 an arbitrary cycle.  But we do not have this.


>The BBS RNG is a strong RNG.

 . . . provided we have a complete BB&S design.


>There was even the source-code for it...

 The source code I saw was *not* a complete BB&S design.

 These claims are easy to check, just read *all* of BB&S.  (Note
 that [1] and [2] are virtually identical).


 [1]  Blum, L., M. Blum and M. Shub.  1982.  Comparison of Two
      Pseudo-Random Number Generators.  Advances in Cryptology:
      CRYPTO '82 Proceedings.  61-78.  Plenum Press.

 [2]  Blum, L., M. Blum and M. Shub.  1986.  A Simple Unpredictable
      Pseudo-Random Number Generator.  SIAM Journal on Computing.
      15: 364-383.

 [3]  Ritter, T.  1991.  The Efficient Generation of Cryptographic
      Confusion Sequences.  Cryptologia.  15(2): 81-139.

 ---
 Terry Ritter   ritter@cactus.org

