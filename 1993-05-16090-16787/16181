Newsgroups: sci.crypt
Path: msuinfo!agate!usenet.ins.cwru.edu!gatech!swrinde!cs.utexas.edu!hermes.chpc.utexas.edu!jonathan
From: jonathan@chpc.utexas.edu (Jonathan Thornburg)
Subject: Re: More one time pad stuff
Message-ID: <1993May1.044631.18300@chpc.utexas.edu>
Summary: assume that everything but the key is known
Keywords: Kerckhoffs cryptography context one time pad
Organization: U of Texas at Austin / Physics Dept / Center for Relativity
References: <1rsamjINN6hk@no-names.nerdc.ufl.edu>
Date: Sat, 1 May 93 04:46:31 GMT
Lines: 134

In article <1rsamjINN6hk@no-names.nerdc.ufl.edu> LIONESS@ufcc.ufl.edu writes:
| Okay, it seems that one time pad is pretty secure.  But is this a concept
| of a pad, or do you actually need some huge document/source encryptor
| that matches every word?
| 
| For example, if I encrypted the Magna Carta using XOR, would it be safe
| to assume that if I used some word "hellothereunclesam" against the whole
| document in a repeating fashion, is this unbreakable?  Assuming that:
| 
| 	1.  The would-be cracker doesn't know what algorithm you are
| 	using ( XOR, add, sub, rot, mul/div, etc. ).
| 	2.  The would-be cracker doesn't know what the encrypted data is ( a
| 	binary file, a text file, a word processor file, a GIF file, etc. )
| 
| It would seem to me to be practically impossible to crack the above unless
| the cracker A.) knew the document was the Magna Carta AND B.) knew that
| I was using XOR.

In considering a cryptosystem, one must always keep in mind its intended
use.  As Kerckhoffs wrote in 1883 ("La Cryptographie militaire", quoted
in Kahn, p. 234),
	"It is necessary to distinguish carefully between a
	 system of encipherment envisioned for a momentary
	 exchange of letters between several isolated people
	 and a method of cryptography intended to govern the
	 correspondence between different army chiefs for an
	 unlimited time."

This seems obvious, but it has significant and perhaps non-obvious
ramifications.  In particular, when considering a cryptosystem meant
for use by many people over an extended period of time, one should
plan for the possibility (probability?) that the general system will
become known to "the enemy".  This is simple prudence, after all,
what if the lead designer is bribed/kidnapped/etc.  Or what if a
copy of the cryptographic apparatus (hardware, software, whatever)
falls into the wrong hands?

It has thus come to be generally accepted that a good general-purpose
cryptosystem should be composed of two basic ingredients:
- a general system, which in view of the above we assume may be
  compromised
- keys, which are chosen to give secrecy to a particular message

Keys, too, may be compromised, and a good cryptosystem should be able
to withstand disclosure of both the system and some past keys.  (Take,
for example, the case of a military system carried on board a ship
which is captured.)  (Or, even simpler, consider a case where someone
with physical possesion of the equipment decides to sell it to the bad
buys...)  But, hopefully, the security of the system can then be
restored by changing the keys.

Viewed from this perspective, your proposed cryptosystem isn't very
secure.  Once the "combining" function is known, the remaining cryptosystem
(combining the plaintext with a repeated human-readable key) is easy
to break even without computer help, via a Kasiski examination.  Given
this, if the combining function isn't known, then trial and error on
it will probably yield a solution fairly quickly.

| An interesting way of doing things, I think, would be to use some agreed
| upon source...say the headline of the New York Times.  Even better, some
| machines allow you to download digital data from an audio compact disc
| in a CD-ROM drive.  Are CDs consistent enough where I could mail someone
| an encrypted message that had part of the header: "12:3:31:15" which
| could mean "XOR against track 12, from 3:31, for 15 seconds" and they
| could run it through the decrypter using the same CD?

Another point...  as well as assuming that the general system may
have been compromised, you should also assume that at least some
(plaintext,ciphertext) pairs are known.  These may again come from
military capture of decoded messages or from a trusted person selling
secrets.  Alternatively, guessing probable words in the plaintext
can be productive here, or the bad guys can feed known plaintext
into the cryptosystem.  (Historically, there have been numerous
cases of both of these, the latter including faked "disclosures"
or carefully worded diplomatic notes.)  Note that if
	ciphertext = plaintext xor key
then
	ciphertext xor plaintext = key
so the bad guys can recover the key.  If the key is coherent, that
is anything but a cryptographically random bit stream, they may then
be able to figure out the patterns in it (i.e. if I see that a piece
of the key reads like a newspaper headline, then I'll naturally start
searchine my handy online "every newspaper in the world" archive to
try and find a match, and then I'll try every other headline in that
newspaper as a possible key).

| Obviously you still have physical security to protect ( what if the 
| interceptor knows that you are using "The Final Cut" as your source ),
| but still, the odds are so low that even the NSA's best would be
| hardpressed to crack something.  Question:  If you were using the
| same track over and over and over again, given:
| 	
| 	1.  You are sending mail to someone, containing text/binary, etc.
| 	2.  You are using the same encryption method with the same key.
| 	3.  The interceptor doesn't know what is encrypted or how it is
| 	encrypted.
| 
| Is it possible to break in a feasible amount of time "i.e. in less than a
| week?"

Again, I suspect that (3) may not be feasable -- the interceptor may
well be able to guess the general type of material being encrypted.

However, in this case it doesn't matter.  
Given the possibilities of CDs, I would rather suspect that the NSA
has rather a large CD library, quite well indexed...  More to the
point, there's still quite a lot of non-randomness in a CD data
stream, and there are general methods for breaking most cryptosystems
using an unknown-but-coherent running key.

In addition, the fact that you're using the same key material over
and over again makes the system *much* weaker.  A number of attacks
are known for such systems, even if the key material is truly random.



I'm sorry to be so discouraging, but the basic lesson one learns from
(say) reading Kahn is that almost all of the obvious schemes, and a
rather high fraction of the non-obvious ones to boot, don't work.

In practice, if you want secure communication, use DES in one of the
feedback modes.  It's very well designed, far better than anything
you or I could come up with, cheap chips are available, you can ftp
the software from your favorite archive site, and it's secure against
anything short of an O($1M) attack.  And if someone wants your secrets
*that* badly, they'll probably get them by other less savory means
anyway...


- Jonathan Thornburg
  <jonathan@einstein.ph.utexas.edu> or <jonathan@hermes.chpc.utexas.edu>
  [until 31/Aug/93] U of Texas at Austin / Physics Dept / Center for Relativity
  [thereafter] U of British Columbia / {Astronomy,Physics}
  "One million Americans have two homes; four million Americans have no homes."
