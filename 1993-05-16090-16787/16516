Newsgroups: sci.crypt,alt.privacy.clipper
Path: msuinfo!caen!saimiri.primate.wisc.edu!zaphod.mps.ohio-state.edu!cs.utexas.edu!wupost!mont!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu (John Kelsey)
Subject: Re: My letter about Clipper
Message-ID: <16BCEFD19.C445585@mizzou1.missouri.edu>
Sender: news@mont.cs.missouri.edu
Nntp-Posting-Host: mizzou1.missouri.edu
Organization: University of Missouri
References: <TK.93May13194815@entropy.ai.mit.edu> <737395037@pike.cs.duke.edu>
Date: Fri, 14 May 93 17:59:52 CDT
Lines: 33
Xref: msuinfo sci.crypt:16516 alt.privacy.clipper:431

In article <737395037@pike.cs.duke.edu>
srt@duke.cs.duke.edu (Stephen R. Tate) writes:
 
>That's an interesting possibility.  Are there any public algorithms
>with this property?  Kind of a "proof of concept"?  An encryption
>algorithm with a small set of strong keys (very low probability of
>getting one of these at random) would be very interesting....
 
   Yvo Desmedt and someone else wrote an article about key scheduling
algorithms that didn't *quite* have this property, but could be extended to.
One kind-of interesting idea:  Use some sort-of trapdoor-one-way function
to implement your key-stream generator, to be used as a subkey generator for
(say) DES.  At the end of each transmission, the user appends the internal
state of his subkey generator.  This can then be used by the holder of the
trapdoor information to retrieve the subkeys used, and thus to decrypt the
message.  People who don't hold the trapdoor information can't get the subkeys.
 
   However, there's a fairly simple way to implement what you're discussing.
Find a PRNG with a short cycle length for most seeds, but a long cycle length
for a small subset of values.  Use this PRNG, seeded with your key, to generate
subkeys.  (The short cycle length would have to be smaller than the total #
of bits used in subkeys, for this to do you any good.)
 
   Alternatively, hash the 80 bit key down to some searchable length, say 48
bits, using some strong keyed hash, with NSA/FBI/whomever having the key.
Use the 48 bits in some fairly strong way to generate subkeys.  (For example,
re-encrypt the 48 bits in CFB mode several times, with the NSA secret key,
to generate the subkey bits.)
 
   I'm not claiming that the NSA, NIST, etc, put anything like this into the
clipper.  Just an interesting idea...
 
   --John Kelsey, c445585@mizzou1.missouri.edu
