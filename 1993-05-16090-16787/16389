Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!linac!att!att-out!cbnewsh!cbnewsh.cb.att.com!wcs
From: wcs@anchor.ho.att.com (Bill Stewart +1-908-949-0705)
Subject: Re: one-time pad security
Organization: Sorcerer's Apprentice Cleaning Services
Date: Sat, 8 May 1993 05:48:27 GMT
Message-ID: <WCS.93May8004827@rainier.ATT.COM>
In-Reply-To: jhesse@netcom.com's message of Sat, 8 May 1993 03:50:50 GMT
References: <93119.152622JDG111@psuvm.psu.edu> <1rq87d$rj@sol.TIS.COM>
	<jhesseC6ow0q.LyA@netcom.com>
Sender: news@cbnewsh.cb.att.com (NetNews Administrator)
Nntp-Posting-Host: rainier.ho.att.com
Lines: 28

In article <jhesseC6ow0q.LyA@netcom.com> jhesse@netcom.com (John Hesse) writes:
   How can you obtain the random component from an mixed random and
   non-random source? [...]
   There is a "truly random" component in the digital data so obtained. But
   there is an awful lot of repetitive stuff as well, so that it wouldn't be
   useful as a one time pad.
There may also be a a lot of runs of zeroes, which are not very
desirable in a one-time pad.

   Some thoughts on how to filter out the non-random stuff are:
	[compression, transposed-self-XOR deleted]
   I suspect there is a better way to do this. Any ideas?

Another approach is to run the set of semi-random numbers through a
crypto algorithm such as DES or IDEA or a crypto hash such as MD5,
and to use some feedback or chaining mode.
This kind of approach is also convenient if you want to use a book cypher as
superencryption for DES or other encryption - e.g.
agree on an audio CD ("Saucerful of Secrets", for example),
(assuming you can read the digital track into your computer),
and use some secure method to pick a starting offset and DES key,

	C[i] = DES( mode=CBC/OFB/CFB, key=k, input= P[i] xor PAD[i+offset] )

You can't just use a widely-available CD as a one-time pad, since the
Bad Guys can decode your stuff with an easy brute-force search if they
know what your CD is, but you can use it to make brute-force DES decryption
non-useful.
