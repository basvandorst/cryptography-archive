Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!cs.utexas.edu!uunet!pipex!zaphod.crihan.fr!univ-lyon1.fr!scsing.switch.ch!bernina!caronni
From: caronni@nessie.cs.id.ethz.ch (Germano Caronni)
Subject: Re: Infinite One Time Pads ??
Message-ID: <1993May13.200917.1045@bernina.ethz.ch>
Sender: news@bernina.ethz.ch (USENET News System)
Organization: Swiss Federal Institute of Technology (ETH), Zurich, CH
References: <C6yyJ8.15AE@hawnews.watson.ibm.com> <rlglendeC6z6u4.H94@netcom.com>
Date: Thu, 13 May 1993 20:09:17 GMT
Lines: 76

In article <rlglendeC6z6u4.H94@netcom.com> rlglende@netcom.com (Robert Lewis Glendenning) writes:
>
>BTW, there don't seem to be crypto-quality PRNGs published here.
>

Oh, they exist, and were posted some time ago ...

look at that:

################################################################

Newsgroups: sci.crypt
From: pom@anke.imsd.uni-mainz.DE (Prof. Dr. Klaus Pommerening)
Subject: Re: URNG
Message-ID: <P678CIV@minnie.zdv.uni-mainz.de>
References: <books.124.0@fsunuc.physics.fsu.edu>
Date: Tue, 24 Nov 1992 12:24:45 GMT
Lines: 42

In article <books.124.0@fsunuc.physics.fsu.edu> books@fsunuc.physics.fsu.edu  
(Roger Books) writes:
> I've seen a lot of discussion here about Unpredictable Random Number
> Generators as apposed to statistically reliable random number generators
> and I am interested in seeing a URNG.  Could someone post (or e-mail)
> a formula/code/algorithm/description of an Unpredictable RNG?  I'm not
> asking for all of the above, one would be all I need.
> 
The following URNG was proposed by Blum, Blum and Shub.

Parameter generation:
  Find 2 prime numbers p and q with 
   - (p-1)/2 and (q-1)/2 are also prime, 
     in particular p and q are congruent 3 mod 4.
   - p and q are at least 2^{256}, and p-q is not small.
  Multiply them together: m = pq, and forget p and q.
Then factoring m is infeasible. And there is no efficient algorithm
that decides whether an arbitrary interger x is a quadratic residue
mod m.

Pseudorandom number generation:
  Take a random seed x0 between Sqrt[m] and m, such that gcd(x,m) = 1.
  Calculate a sequence (x_1,...x_n) by x_i = x_{i-1}^2 mod m.
  Output the log2(m) least significant bits from each x_i.

(In fact B, B and S proposed outputting 1 bit from each x_i. The
security of log(n) bits is due to Alexi, Chor, Goldreich and Schnorr.)

For example you could use a 512 bit modulus m and use 8 (or 9)
bits from each x_i. Using such an m and x0, I got the following
sequence of 8 bit numbers:
  68, 16, 233, 95, 221, 111, 147, 18, 117, 143, 6, 162,  
  249, 82, 160, 158, 132, 29, 138, 28, 159, 238, 25,  
  210, 33, 120, 52, 190, 89, 228, 156, 126, 81, 164,  
  114, 86, 37, 180, 163, 130
(Thanks Mathematica!)
Now it's left to you as an exercise to determine m and x0.
--
Prof. Dr. Klaus Pommerening
Institut fuer Medizinische Statistik und Dokumentation
der Johannes-Gutenberg-Universitaet
Obere Zahlbacher Strasse 69, W-6500 Mainz, Germany


#######################################################

The BBS RNG is a strong RNG. There was even the source-code
for it...

Hope this helps you,

	Germano Caronni
-- 
Instruments register only through things they're designed to register.
Space still contains infinite unknowns.
                                                              PGP-Key-ID:341027
Germano Caronni caronni@nessie.cs.id.ethz.ch   FD560CCF586F3DA747EA3C94DD01720F
