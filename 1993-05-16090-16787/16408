Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!gatech!ukma!mont!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu (John Kelsey)
Subject: How to "distill" randomness
Message-ID: <16BC8B7F6.C445585@mizzou1.missouri.edu>
Sender: news@mont.cs.missouri.edu
Nntp-Posting-Host: mizzou1.missouri.edu
Organization: University of Missouri
Date: Sat, 08 May 93 13:04:54 CDT
Lines: 18

   I'd guess that a high-quality message digest, ie SHA or MD5, would be pretty
useful in capturing the randomness of the lower-quality random data.  (This has
been discussed on sci.crypt before, but I don't recall any references.)
 
   It seems like you could make the data more random-looking by running it
through a strong encryption scheme, such as DES in CBC or CFB mode, once
forward, then once backward, with a different key.  This would make every
bit in the transformed data dependent in a nonlinear way on every bit in the
original data.  If you are willing to take more time for a stronger kind
of randomness, you might want to generate an RSA public/private key pair, and
use RSA to encrypt the data.
 
   Unfortunately, anything you do like this will take away from the purpose of
using a one-time-pad, which is that you want provable security.  If you're
going to count on the strength of DES or MD5 or RSA, you could more easily and
economically use them directly.
 
   --John Kelsey
