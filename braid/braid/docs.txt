B R A I D   ( v e r s i o n   4 . 0 )
Braided Stream Cryptography For Email Users and Others
(c) Copyright Don Doumakes 1994, all rights reserved
 
 
PURPOSE
 
This program will allow you to encode a message using "braided stream
cryptography" technology.  While braided stream cryptography has been touted as
a system so secure that even an advance in mathematics is unlikely to crack it,
I emphatically make no claims for the encryption method provided with this
program.  I DO claim that the program, which is my own, faithfully applies the
braided stream algorithm, which is not my own.
 
 
SHAREWARE NOTICE
 
This is a copyrighted product.  IT IS NOT FREEWARE.  The complete version of
the program, version 4.0c, may not be duplicated in any manner except to make a
single backup copy for your personal use.  The unregistered version of the
program, version 4.0u, may be copied and distributed at will.  You may try out
the unregistered version for free for two weeks.  If you decide to keep the
program, you must send in the shareware fee of $30.  When your shareware
payment is received, you will be sent the fully functional version of BRAID.
(The unregistered version gives a good demonstration of BRAID, but it does NOT
produce secure code, i.e., anyone with a copy of BRAID can decrypt your code
with ANY password.  So do not use the unregistered version for real
correspondence.  You have been warned.)  If you have a copy of the registered
version from someone else, you have STOLEN property in your possession and must
destroy it immediately.
 
I will pay 50% of any damages I collect for information leading to a successful
legal action for infringement of my copyright on this work.  Statutory damages
can go as high as $100,000.
 
 
WHY THIS IS HANDY SOFTWARE
 
If you're like me, you call a lot of BBS systems.  There's a lot of variety in
BBS software out there.  Not all systems will let you send private email, and
not all private email is truly private.  The same variety and uncertainty
applies to the InterNet.  Sometimes, particularly with national networks, it's
a good idea to encrypt a message.
 
With BRAID, your message is converted to 100% printable ASCII text, neatly
formatted in 55-character lines.  This means you can send your encrypted
message as ordinary email, or even as a public message, as easily as plain
text.  And you can add imbed your ciphertext (coded message) in a plaintext
message without bothering the decoding software.
 
Those users who are already familiar with crytology jargon will be pleased to
know that BRAID uses an infinite one-time keypad.  For the rest of us, that
means that the key itself is not simply used over and over.  Rather, it is
infinitely created anew while the encryption and decryption programs are
running.  The new key string is randomly generated and is not the same from one
message to the next---foiling (in theory) ANY statistical attempt to decode
your messages.
 
Where BRAID really shines is in its ability to "multiplex."  BRAID works by
weaving together 4 "channels" of information, numbered 0 to 3.  Channel 0 is
reserved for management of the key.  The other channels can hold three
"chapters" of a single secret message, or one secret message and two innocuous
nonsecret messages, or one secret messages and two channels of random noise, or
any combination you desire.  (See the article in the file ARTICLE.TXT for more
details on multiplexing, if interested.)
 
 
WHAT YOU SHOULD HAVE
 
The BRAID package includes four files:
 
        BRAID:  the working program
        DOCS.TXT:  this documentation file
        ARTICLE.TXT:  an article on braided cryptography for the interested
        SAMPLE.TXT:  a sample of a coded document
 
HOW TO USE IT
 
If you're using a Mac, just double-click on the BRAID application.  If you're
using Unix or  MS-DOS, type "braid".  You will then be prompted for the
necessary information:  where to go for input, the code key, and where to put
output.
 
Default settings:
        Encryption:
                Channel 1       keyboard input
                Channel 2       random noise
                Channel 3       random noise
                Ciphertext      to a file named "cipher"
 
        Decryption:
                Channel 1       output to screen
                Channel 2       no output
                Channel 3       no output
                Ciphertext      from a file named "cipher"
 
If you just hit RETURN instead of specifying any file names, these default
settings will be used.  If you want to encrypt more than one channel of
plaintext, or if you expect to decrypt more than one channel of plaintext, or
if you want to or must use a ciphertext file not named "cipher," you must
specify these details at the prompts.
 
There is a sample file with this documentation called SAMPLE.TXT.  You can
examine it with a text editor if you like (it's all printable characters), and
then decrypt it.  There are three channels of information in SAMPLE.TXT, so if
you want to see them all, do this:
-----------------------------------------------------------------------------
[E]ncrypt or [D]ecrypt?d
 
There are up to 3 plaintext channels available.
 
For plaintext channel 1, specify file or hit RETURN:  file1
 
For plaintext channel 2, specify file or hit RETURN:  file2
 
For plaintext channel 3, specify file or hit RETURN:  file3
 
 
Now specify ciphertext file or hit RETURN:  sample.txt
-----------------------------------------------------------------------------
Then simply examine the three plaintext files.  Oh, by the way, the code key is
"Dangerous information" (without the quotes).
 
PRACTICAL CONSIDERATIONS
 
BRAID continues working until all plaintext is converted to ciphertext or vice
versa.  This usually means working until the channel with the longest message
is done.  The other channels are padded with random noise automatically.  The
more random noise is braided into your ciphertext, the harder it is
(theoretically) to break the code.  On the other hand, the more noise you
include in your message, the longer it takes to encrypt and decrypt, and the
more space it occupies when encrypted.  The most efficient option is to divide
your secret message into three approximately equal parts and put the three
parts into the three message channels.  The most secure option is to include
two channels of pure noise.
 
The code key is a character string, something like a password, agreed upon in
advance by you and the person who'll be sending you a message.  If an attempt
is made to decode a file using the wrong key, the resulting text will be
unintelligible and BRAID will likely say something unsatisfying like "Exited
via null_function."  It is ESSENTIAL that you decrypt using the exact same code
key as was used during encryption.  (Upper vs. lower case DOES count.)  The key
is private.  If you keep the key secure (i.e. nobody else finds out or guesses
what it is) then your messages will (theoretically) be secure for as long as
you use the key.  Lengthier keys are more secure.  Obvious keys, like your name
or your sweetheart's name, and English words, are much LESS secure than keys
made of nonsense characters.
 
You can add plain text to your coded email as long as you don't insert anything
INTO the encrypted text (i.e. between the beginning and the end of the coded
part).  Don't use the phrase "ciphertext begins:" in your plaintext message,
because that's the marker BRAID looks for.
 
If you must store a sensitive plaintext message, it is strongly recommended
that you use a RAM disk.  This will prevent someone from using a sector editor
on your disk to read "deleted" plaintext files containing sensitive
information.  Such an approach, after all, is much easier than cryptoanalysis.
 
WHERE TO SEND SHAREWARE FEES:
 
Send $30 (check or money order, do not send cash) to:
 
        Don Doumakes
        P.O. Box 445
        Fort Calhoun, NE 68023
 
Nebraska residents add 5% tax.  (In Blair, NE add 5.5%.)
 
Documentation last updated 2/9/94.
 
