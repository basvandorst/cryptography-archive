# Makefile for GNU MP/mpz functions
# Copyright (C) 1991, 1993 Free Software Foundation, Inc.

# This file is part of the GNU MP Library.

# The GNU MP Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# The GNU MP Library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with the GNU MP Library; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

srcdir = .

CC = gcc

# If you cross compile on a machine with the same sizes of the integral
# types ("int", "long int", "short int", and "char") define this as the
# local compiler.  Otherwise, you need look for the uses of LOCAL_CC below,
# and handle those cases manually.
LOCAL_CC = $(CC)
CFLAGS = -g -O
AR = ar
RANLIB=`if [ -r /bin/ranlib -o -r /usr/bin/ranlib ]; \
	then echo ranlib; else echo true; fi`
SHELL = /bin/sh

MPZ_SRCS = init.c set.c set_ui.c set_si.c set_str.c \
  iset.c iset_ui.c iset_si.c iset_str.c clear.c \
  get_ui.c get_si.c get_str.c size.c sizeinbase.c \
  add.c add_ui.c sub.c sub_ui.c mul.c mul_ui.c \
  div.c div_ui.c mod.c mod_ui.c dm.c dm_ui.c \
  mdiv.c mmod.c mdm.c mdiv_ui.c mmod_ui.c mdm_ui.c \
  gcd.c gcdext.c sqrt.c sqrtrem.c powm.c powm_ui.c \
  cmp.c cmp_ui.c cmp_si.c mul_2exp.c div_2exp.c \
  mod_2exp.c abs.c neg.c com.c and.c ior.c \
  inp_raw.c inp_str.c out_raw.c out_str.c \
  perfsqr.c random.c random2.c pow_ui.c \
  clrbit.c fac_ui.c pprime_p.c realloc.c
MPZ_OBJS = init.o set.o set_ui.o set_si.o set_str.o \
  iset.o iset_ui.o iset_si.o iset_str.o clear.o \
  get_ui.o get_si.o get_str.o size.o sizeinbase.o \
  add.o add_ui.o sub.o sub_ui.o mul.o mul_ui.o \
  div.o div_ui.o mod.o mod_ui.o dm.o dm_ui.o \
  mdiv.o mmod.o mdm.o mdiv_ui.o mmod_ui.o mdm_ui.o \
  gcd.o gcdext.o sqrt.o sqrtrem.o powm.o powm_ui.o \
  cmp.o cmp_ui.o cmp_si.o mul_2exp.o div_2exp.o \
  mod_2exp.o abs.o neg.o com.o and.o ior.o \
  inp_raw.o inp_str.o out_raw.o out_str.o \
  perfsqr.o random.o random2.o pow_ui.o \
  clrbit.o fac_ui.o pprime_p.o realloc.o

INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/..

libmpz.a: stamp-stddefh $(MPZ_OBJS)
	rm -f $@
	$(AR) cr $@ $(MPZ_OBJS)
	$(RANLIB) $@

.c.o:
	$(CC) -c $(CFLAGS) $(INCLUDES) $<

test: libmpz.a
	cd tests; $(MAKE) srcdir=$(srcdir) CC=$(CC) SHELL=$(SHELL)

conf: stamp-stddefh mp_bases.c gmp-mparam.h

stamp-stddefh:
	rm -f stddef.h
	rm -f test-stddefh.c
	(	echo '#include <stddef.h>'				;\
		echo 'main(){size_t foo=sizeof(size_t);exit(0);}'	;\
	) > test-stddefh.c
	@if $(LOCAL_CC) $(CFLAGS) test-stddefh.c -c 2> /dev/null	;\
	then true							;\
	else								\
	  echo 'This machine has no "stddef.h".  Creating a minimal in ./';\
	  $(LOCAL_CC) $(CFLAGS) cre-stddefh.c -o cre-stddefh		;\
	  ./cre-stddefh > stddef.h					;\
	fi
	rm -f test-stddefh.o
	touch stamp-stddefh

mp_bases.c: cre-conv-tab
	./cre-conv-tab > tmp-$@
	mv tmp-$@ $@
cre-conv-tab: $(srcdir)/cre-conv-tab.c $(srcdir)/longlong.h
	$(LOCAL_CC) $(CFLAGS) `if [ x$(firstword $^) = x ];	\
			       then echo $(srcdir)/cre-conv-tab.c;	\
			       else echo $(firstword $^); fi` -o $@ -lm

#gmp-mparam.h: cre-mparam
#	./cre-mparam > tmp-$@
#	mv tmp-$@ $@
#cre-mparam: $(srcdir)/cre-mparam.c stamp-stddefh $(srcdir)/../gmp.h
#	$(LOCAL_CC) $(CFLAGS) $(srcdir)/cre-mparam.c -o $@

doc: gmp.dvi gmp.info
LN = ln -s
gmp.dvi: $(srcdir)/gmp.texi
	rm -f tmp.texi
	$(LN) $(srcdir)/gmp.texi tmp.texi
	tex tmp.texi < /dev/null
	texindex tmp.cp tmp.fn
	tex tmp.texi < /dev/null 2> /dev/null
	mv tmp.dvi gmp.dvi
gmp.info: $(srcdir)/gmp.texi
	makeinfo $(srcdir)/gmp.texi

clean:
	rm -f *.o libmpz.a libmp.a cre-conv-tab cre-mparam cre-stddefh \
 gmp.dvi gmp.info mp_bases.c gmp-mparam.h stamp-stddefh test-stddefh.c \
 stddef.h tmp.* tmp-* gmp.ps
	-cd tests; $(MAKE) clean
realclean: clean
	rm -f Makefile config.status tests/Makefile tests/config.status

Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag)
	$(SHELL) ./config.status

H = $(srcdir)/../gmp.h $(srcdir)/../gmp-impl.h ../gmp-mparam.h

abs.o : $(srcdir)/abs.c $(H) 
add.o : $(srcdir)/add.c $(H) 
add_ui.o : $(srcdir)/add_ui.c $(H) 
and.o : $(srcdir)/and.c $(H) 
clear.o : $(srcdir)/clear.c $(H) 
clrbit.o : $(srcdir)/clrbit.c $(H)
cmp.o : $(srcdir)/cmp.c $(H) 
cmp_si.o : $(srcdir)/cmp_si.c $(H) 
cmp_ui.o : $(srcdir)/cmp_ui.c $(H) 
div.o : $(srcdir)/div.c $(H) $(srcdir)/../longlong.h 
div_2exp.o : $(srcdir)/div_2exp.c $(H) 
div_ui.o : $(srcdir)/div_ui.c $(H) $(srcdir)/../longlong.h 
dm.o : $(srcdir)/dm.c $(H) $(srcdir)/../longlong.h $(srcdir)/dmincl.c 
dm_ui.o : $(srcdir)/dm_ui.c $(H) $(srcdir)/../longlong.h 
fac_ui.o : $(srcdir)/fac_ui.c $(H) $(srcdir)/../longlong.h
gcd.o : $(srcdir)/gcd.c $(H) $(srcdir)/../longlong.h 
gcdext.o : $(srcdir)/gcdext.c $(H) 
get_str.o : $(srcdir)/get_str.c $(H) 
get_si.o : $(srcdir)/get_si.c $(H) 
get_ui.o : $(srcdir)/get_ui.c $(H) 
init.o : $(srcdir)/init.c $(H) 
inp_raw.o : $(srcdir)/inp_raw.c $(H) 
inp_str.o : $(srcdir)/inp_str.c $(H) 
ior.o : $(srcdir)/ior.c $(H) 
iset.o : $(srcdir)/iset.c $(H) 
iset_si.o : $(srcdir)/iset_si.c $(H) 
iset_str.o : $(srcdir)/iset_str.c $(H) 
iset_ui.o : $(srcdir)/iset_ui.c $(H) 
mdiv.o : $(srcdir)/mdiv.c $(H) 
mdiv_ui.o : $(srcdir)/mdiv_ui.c $(H) 
mdm.o : $(srcdir)/mdm.c $(H) 
mdm_ui.o : $(srcdir)/mdm_ui.c $(H) 
mmod.o : $(srcdir)/mmod.c $(H) 
mmod_ui.o : $(srcdir)/mmod_ui.c $(H) 
mod.o : $(srcdir)/mod.c $(H) $(srcdir)/../longlong.h $(srcdir)/dmincl.c 
mod_2exp.o : $(srcdir)/mod_2exp.c $(H) 
mod_ui.o : $(srcdir)/mod_ui.c $(H) $(srcdir)/../longlong.h 
mul.o : $(srcdir)/mul.c $(H) 
mul_2exp.o : $(srcdir)/mul_2exp.c $(H) 
mul_ui.o : $(srcdir)/mul_ui.c $(H) $(srcdir)/../longlong.h 
neg.o : $(srcdir)/neg.c $(H) 
com.o : $(srcdir)/com.c $(H) 
out_raw.o : $(srcdir)/out_raw.c $(H) 
out_str.o : $(srcdir)/out_str.c $(H) 
perfsqr.o : $(srcdir)/perfsqr.c $(H) $(srcdir)/../longlong.h 
pow_ui.o : $(srcdir)/pow_ui.c $(H) $(srcdir)/../longlong.h 
powm.o : $(srcdir)/powm.c $(H) $(srcdir)/../longlong.h 
powm_ui.o : $(srcdir)/powm_ui.c $(H) $(srcdir)/../longlong.h 
pprime_p.o : $(srcdir)/pprime_p.c $(H)
random.o : $(srcdir)/random.c $(H) 
random2.o : $(srcdir)/random2.c $(H) 
realloc.o : $(srcdir)/realloc.c $(H) 
set.o : $(srcdir)/set.c $(H) 
set_si.o : $(srcdir)/set_si.c $(H) 
set_str.o : $(srcdir)/set_str.c $(H) $(srcdir)/../longlong.h 
set_ui.o : $(srcdir)/set_ui.c $(H) 
size.o : $(srcdir)/size.c $(H) 
sizeinbase.o : $(srcdir)/sizeinbase.c $(H) 
sqrt.o : $(srcdir)/sqrt.c $(H) 
sqrtrem.o : $(srcdir)/sqrtrem.c $(H) 
sub.o : $(srcdir)/sub.c $(H) 
sub_ui.o : $(srcdir)/sub_ui.c $(H) 
mtox.o : $(srcdir)/mtox.c $(srcdir)/mp.h $(H) 
sdiv.o : $(srcdir)/sdiv.c $(srcdir)/mp.h $(H) $(srcdir)/../longlong.h 
xtom.o : $(srcdir)/xtom.c $(srcdir)/mp.h $(H) 
