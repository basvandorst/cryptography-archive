                                MS-DOS KERMIT
       FOR THE IBM PC FAMILY, COMPATIBLES, AND OTHER MS-DOS COMPUTERS

                           Version 3.10, March 1991

                                  HELP FILE

This file contains a brief summary of the commands and features of MS-DOS
Kermit 3.10.  For detailed information, tutorials, installation and cabling
hints, troubleshooting procedures, examples, diagrams, and advanced features
of this Kermit program, consult "Using MS-DOS Kermit", by Christine M.
Gianone, published by Digital Press, Bedford, MA, 1990, order number
EY-C204E-DP (a second edition describing version 3.10 is in preparation).  The
book includes a 5.25-inch MS-DOS Kermit 3.01 diskette.  To order, call
1-800-343-8321 (USA, toll free).  It is also available from Kermit
Distribution at Columbia University and wherever computer books are sold.

MS-DOS Kermit 3.10 is a product of Kermit Distribution, Columbia University
Center for Computing Activities.  The principal author of the program is
Professor Joe R. Doupnik of Utah State University, with assistance from many
other volunteer programmers all over the world.  This software is copyright
1982, 1991 by the Trustees of Columbia University in the City of New York.  It
may be reproduced and shared without restriction except that it may not be
licensed, nor sold for profit as a software product.  Kermit software is
written by volunteer programmers as a public service, and is furnished without
warranty of any kind.  Neither Columbia University, nor the individual
authors, nor any institution or individual that has contributed to the
development and documentation warrant the software in any way.

All Kermit programs on a variety of magnetic media, as well as documentation
and other information, can be obtained from:

    Kermit Distribution
    Columbia University Center for Computing Activities
    612 West 115th Street
    New York, NY  10025  USA
    Telephone: (212) 854-3703

OVERVIEW

MS-DOS Kermit is a communication software program with two primary functions:
terminal emulation and file transfer.  In order to communicate at all, your PC
must have a communication device (serial port, internal modem, or network
interface) which is connected to a modem, the phone system, or a network.

Then Kermit must be told what communication device to use.  In the most common
case, this is a serial port, perhaps with an external modem attached.  If
Kermit is using a serial port and/or modem, it must be told which port (SET
PORT 1, SET PORT 2, etc), what the communication speed is (SET SPEED), and
depending on the type of connection and the type of host, possibly many other
communication parameters as well (SET DUPLEX, SET PARITY, SET FLOW-CONTROL,
and so on).  For networks, it must be told which kind of network interface
and/or protocol to use (SET PORT NETBIOS, SET PORT NOVELL, SET PORT DECNET,
SET PORT 3COM, etc).

For terminal emulation, you must tell Kermit which kind of terminal to emulate
(SET TERMINAL).  Kermit emulates the DEC VT320 terminal by default (i.e.
unless you tell it otherwise).

Once you have set all the appropriate communication parameters, you can begin
terminal emulation by giving the CONNECT command.  If you have an autodial
modem, you must type the modem's dialing commands to establish the connection
to the other computer.  You can return to Kermit by typing the "escape
sequence", Ctrl-] followed by the letter C (or you can use Alt-X on IBM
keyboards).

To transfer files, you must CONNECT to the other computer, login there,
start up a Kermit program, tell it to SEND or RECEIVE, escape back to MS-DOS
Kermit, and tell it to RECEIVE or SEND (the opposite of what you told the
other Kermit).  Or you can put the remote Kermit in "server mode" by giving it
the SERVER command, and then escape back to MS-DOS Kermit and give SEND and
GET commands.

Here's an example, which uses a Hayes modem for dialing, and a Kermit server
on the remote computer.  "C>" is the DOS prompt, "MS-Kermit>" is the MS-DOS
Kermit program prompt, "$" is the remote host prompt.  All commands except
Alt-X are terminated by pressing the Enter key.  Alt-X means hold down the Alt
key and press the X key.  Don't type the comments on the right.

  C>kermit                        Start the MS-DOS Kermit program
  MS-Kermit>set port 1            Use port COM1 (this is the default)
  MS-Kermit>set speed 2400        Transmission speed is 2400 bits per second
  MS-Kermit>set terminal vt102    Select terminal type
  MS-Kermit>connect               Begin terminal emulation
  ATDT5551234                     Type Hayes dialing command
  CONNECT 2400                    Hayes responds when call is completed
  Welcome to ...                  Press Enter, see remote computer's greeting
  Username: xxx                   Log in to remote computer
  Password: yyy                   Type your password (probably won't echo)
  $                               Remote computer's prompt
  $ kermit                        Run Kermit on remote computer
  C-Kermit>                       Remote Kermit's prompt
  C-Kermit>server                 Put remote Kermit in server mode
  Alt-X                           Escape back to MS-DOS Kermit
  MS-Kermit>send oofa.txt         Send a file to the remote computer
  MS-Kermit>get foo.bar           Get a file from the remote computer
  MS-Kermit>bye                   All done, terminate your session
  C>                              Back at DOS prompt

MS-DOS KERMIT PROGRAM INVOCATION

MS-DOS Kermit can be run interactively, from a batch file, as an "external"
DOS command, or with redirected or piped standard input and output.  When
MS-DOS Kermit starts, it executes any commands found in its initialization,
MSKERMIT.INI, in the current disk or DOS path, or the file specified by "-f
filename" on the Kermit command line.

The binary, executable IBM PC Kermit program that is included on the official
MS-DOS Kermit distribution diskette (obtained from "Using MS-DOS Kermit" or
from Columbia University) can have corrections, or "patches", applied to it in
case bugs are discovered in the program after it was released.  These patches
can only be applied to the binary program as distributed, and not to any other
version.  Patches are distributed in the form of a short text file called
MSKERMIT.PCH, which you can obtain from Columbia University.  This file should
be stored in the same disk and directory as your MSKERMIT.INI file.  To apply
the patches, add a line that says "patch" to your MSKERMIT.INI file.  If there
is anything wrong with the file, or if it does not agree in any way with your
Kermit version, the patches are not applied.  Obtain legitimate patch files
only from Columbia University.

* Interactive Operation:

To run MS-DOS Kermit interactively, invoke the program from DOS command level
by typing its name, usually "kermit".  When you see the command's prompt,
"MS-Kermit>", you may type Kermit commands repeatedly until you are ready to
exit the program.  The commands EXIT or QUIT return you to DOS.

While typing commands, use the Backspace key to erase the character most
recently typed, Ctrl-W to delete the most recent field, or Ctrl-U to delete
the entire command, and enter the command by pressing the Enter key or Ctrl-L.
A question marked typed at any point in a command (except in a filename or
character string) will give you a brief hint about what's expected at that
point.  Pushing the Esc key will complete the command current field, if
possible, and position the cursor at the next field.  If completion is not
possible, Kermit will beep.  You can cancel any command during its execution
by typing Ctrl-C.  Use question mark (?) to "feel" your way through commands
and find out what the options are.

* Command Line Invocation:

MS-DOS Kermit may be invoked with command line arguments from DOS command
level, for instance:

  A>kermit set port 1, set speed 9600, connect

In this case, help and completion are not available and MS-DOS Kermit will
exit back to DOS after completing the specified commands unless you include
the STAY command.  Several commands may be given on the command line,
separated by commas.

* Batch Operation:

Like other MS-DOS programs, MS-DOS Kermit may be operated under batch with
command line arguments.  If your batch program invokes Kermit without command
line arguments it will run interactively, reading commands from the keyboard
and not the batch file.  When it exits, batch processing will continue to the
end of the batch file.  An ERRLEVEL number is returned by Kermit to assist
batch file controls (0 = success, nonzero = at least one file transfer failed).

* DOS Environment for MS-DOS Kermit:

Make sure your DOS PATH variable (as set by the PATH= line in your
AUTOEXEC.BAT file) includes the disk and directory where the Kermit program
and the MSKERMIT.INI file are kept.

Kermit searches for a DOS environment variable named KERMIT, and configures
itself accordingly.  You can this variable by putting a line like this in your
AUTOEXEC.BAT file:

  SET KERMIT=command;command;...

The commands can be:

  INPUT-BUFFER <length> - Length of buffer for INPUT command, 128 by default.
  ROLLBACK <number> - Number of screens for rollback (PgUp), 10 by default.
  COM1 <address> or COM1 <address> <irq> - Address (and optionally IRQ) of COM1
  (Use with caution! See description of SET COMn command).
  COM2, COM3, COM4 - Same as COM1, but for COM2-4.

Example:

  SET KERMIT=INPUT-BUFFER 1000;ROLLBACK 100

Kermit also looks in the DOS environment for COMSPEC and SHELL, and uses the
program denoted by SHELL= (if found, otherwise by COMSPEC=) when executing
the PUSH, RUN, TYPE, and similar commands.

Kermit is capable of having many files open at once (several TAKE files, a
file which is being transferred, up to three log files, etc).  You should
make sure the FILES= line in CONFIG.SYS allows for at least 20 open files.
You should also have a BUFFERS= value of about 20 in CONFIG.SYS.

* MS-DOS Kermit in Non-DOS Environments:

MS-DOS Kermit can run under OS/2 in the "DOS box", provided you first
issue the command SETCOM40 COM1=ON.

MS-DOS Kermit can run under Microsoft Windows 2.03 and Windows 386 2.03 as
a regular MS-Windows application (icon, mouse, cut-&-paste, etc), as well as
with Windows 3.0.  Files can be transferred while other applications are
active, as long as Kermit has a piece of the screen (has not shrunk to an
icon).  Use PIFEDIT to make a .PIF file for Kermit, and it will run as a
regular Windows application.  Otherwise it takes over the whole screen.

For MS-Windows 2.0, use PIFEDIT to set up Kermit like this:

Program name:           KERMIT.EXE or whatever is the name of the Kermit file.
Program title:          MS-DOS Kermit 3.1
Program parameters:     Leave blank since this becomes a command line
Initial directory:      Directory, if any, to CD to when starting Kermit
Memory Requirements:    190 KB Required, 400 KB Desired (see below)
Directly Modifies:      Clear all boxes (pretend Kermit is very good)
Program Switch:         Check the Text box
Screen Exchange:        Check the Graphics/Text box
Close Window on exit:   Check the box

Although Kermit does direct writes to the screen it does so in a "TopView
aware" manner.   One may check or leave empty the COM1 or COM2 boxes even
though Kermit does directly modify the serial port.  Kermit will block (XOFF)
if left running as an icon, but it will run smoothly while sharing the screen
with other tasks.  Communications throughput is limited by Windows' character
drawing speed.  Graphics are done as if you had a monochrome adapter.  Screen
dumps ( ^] F or Control End) will be of Kermit's underlying full screen.  In
summary, tell Windows that Kermit is exceptionally well behaved.

If you check the "modifies memory" box or some of the other boxes (or if you
don't have a KERMIT.PIF file at all), then Kermit will take over the whole
screen and Windows will become inactive, and Windows features will no longer
work.  But Kermit will run much faster, and graphics will work normally.

If Windows complains that it does not have enough memory to run Kermit,
then you can reduce Kermit's memory requirements by allocating less memory for
rollback screens.  Kermit's default number of rollback screens is 10, and each
rollback screen takes about 8K of memory (more or less depending on the type
of display adapter you have).  With the default 10 rollback screens, Kermit
needs about 175K of memory.  You can reduce this to about 100K by getting rid
of some or all of your rollback screens; if you put a line like SET
KERMIT=ROLLBACK 5 in your AUTOEXEC.BAT file, this tells Kermit how many
screens to get memory for.  If you specify 0, this will reduce Kermit's memory
requirements by about 80K.

Microsoft Windows 3.0 KERMIT.PIF suggestions for MS-DOS Kermit v3.10;
"X" means check this box, "o" means leave this box or button empty:

Program Filename:       KERMIT.EXE
Window Title:           MS-DOS Kermit 3.1
Optional Parameters:
Startup Directory:      C:\KERMIT            <-- use your directory
Memory Reuirements:     KB Required  190     KB Desired  400
Display Usage:          o Full Screen        Execution o Background
                        X Windowed                     o Exclusive
  X Close Window on Exit
(Note: if EGA/VGA graphics are employed then use the Full Screen option.
More KB Desired yields greater text screen rollback memory.)

                       Advanced Options
Multitasking Options:
        Background Priority  50         Foreground Priority  100
      X Detect Idle Time

Memory Options:
 EMS Memory     KB Required  0          KB Limit 1024      o Locked
 XMS Memory     KB Required  0          KB Limit 1024      o Locked
             o  Uses High Memory      o Locked Application Memory
(Note: MS-DOS Kermit uses neither EMS nor XMS memory)

Display Options:
 Video Memory:          o Text   o Low Graphics   X High Graphics
 Monitor Ports:         o Text   o Low Graphics   X High Graphics
        X Emulate Text Mode             X Retain Video Memory
Other Options:
        X Allow Fast Paste              o Allow Close When Active
Application Shortcut Key:  NONE
(Note: MS-DOS Kermit uses all of graphics memory to save images.)

Hints for creating a DESQview .DVP configuration file for MS-DOS Kermit 3.1:

 ============================================================================
                        Change a Program
 Program Name............: MS-DOS Kermit v3.1
 Keys to Use on Open Menu: KE                   Memory Size (in K): 200
                                                (say 160 minimum)
 ----------------------------------------------------------------------------
 Program...: KERMIT.EXE
 Parameters:            (Kermit command line items, if any, go here.)
 Directory.: C:\yourdir
 ----------------------------------------------------------------------------
 Options:
                Writes text directly to screen.......: [N]      *
                Displays graphics information........: [N]      **
                Virtualize text/graphics (Y,N,T).....: [T]      ***
                Uses serial ports (Y,N,1,2)..........: [Y]
                Requires floppy diskette.............: [N]

   *   Not true, but MS-DOS Kermit is DESQview-aware and covers up nicely.
   **  Not true, naturally, but causes DESQview to put Kermit into full
       screen mode while graphics are executed and then to return to windowed
       mode after switching to text terminal emulation.
   *** Can be [Y] with the same effect as above.
 ----------------------------------------------------------------------------
                        Change a Program Advanced Options

 System Memory (in K).....:     0  Maximum Program Memory Size (in K)..:
 Script Buffer Size.......:     0  Maximum Expanded Memory Size (in K) :
 Text Pages: 1  Graphics pages: 0  Initial Mode:  3    Interrupts: 00 to FF

 Window Position:
        Maximum Height:  25     Starting Height:  20    Starting Row...:  5
        Maximum Width.:  80     Starting Width.:  40    Starting Column:  5
  (Choose your own window sizes, naturally. 132 column mode causes DESQview
   to switch to full screen.)
 ----------------------------------------------------------------------------
                                Shared Program
 Pathname..:
 Data......:
 ----------------------------------------------------------------------------
 Close on exit (Y,N,blank)......: [ ]   Uses its own colors..............: [N]
 Allow Close Window command.....: [Y]   Runs in background (Y,N,blank)...: [Y]
 Uses math coprocessor..........: [N]   Keyboard conflict (0-F)..........: [0]
 Share CPU when foreground......: [Y]   Share EGA when foreground/zoomed.: [Y]
 Can be swapped out (Y,N,blank).: [ ]   Protection level (0-3)...........: [3]
 ============================================================================


SUMMARY OF MS-DOS KERMIT COMMANDS

The commands listed are for the IBM PC, PS/2, and compatibles.  Other versions
of MS-DOS Kermit (DEC Rainbow, NEC PC, Victor 9000, etc) lack certain commands
and features described here, primarily those having to do with terminal
emulation and character set translation.

Kermit commands consist of a sequence of "words" (verbs, nouns, numbers,
filenames) separated by spaces and terminated by carriage return (Enter).
In descriptions of Kermit's commands, the following notation is used:

  <parameter>   - Replace this with an actual number, or filename, etc.
  <number>      - Replace with an actual decimal number
  <filename>    - A file specification, which may include disk & directory
  <hh:mm:ss>    - Time of day in 24-hour notation, less than 12 hours from now
  [<parameter>] - An optional field, which may be omitted
  {A,B,C}       - Choose one of the items listed
  [{A,B,C}]     - Optionally choose one of the items listed
  = <value>     - Shows default value

* Special Characters:

The following characters perform special functions in MS-DOS Kermit commands:

Space      Separates command words ("fields").
TAB        (Ctrl-I) Like space
ESC        (Ctrl-[) Completes a keyword if possible.
Enter      (Ctrl-M, Carriage Return) Enters a command.
Formfeed   (Ctrl-L) Like Enter, but clears the screen first.
Linefeed   (Ctrl-J) Like Enter.
Backspace  (Ctrl-H, Del) Deletes rightmost character from the command.
Ctrl-W     Deletes rightmost word from the command.
Ctrl-U     Deletes the entire command.
Ctrl-C     Cancels the current command, even if you have already entered it.
?          (Question Mark) Requests a menu for the current command field.
;          (Semicolon) Introduces a trailing command (in command files only).
\          (Backslash) Introduces a "backslash code".
,          (Comma) Separates commands in a macro definition.
{ }        (Braces) used for grouping characters or words together.

* Backslash Codes:

Backslash codes are available to enter special characters into Kermit
commands, and for other purposes too.  For example, if you want to use the
OUTPUT command to send a Ctrl-C to the host, you can't put the Ctrl-C
literally in the command, because typing Ctrl-C would cancel the command.
Instead, you can put a backslash followed by digits to denote the ASCII value
of the Ctrl-C character (which is 3): "output \3".  Similarly for Carriage
Return: "output login myname\13".

\123    (up to 3 decimal digits) - A decimal number or character value
\d123   (up to 3 decimal digits) - Same as 123
\o123   (up to 3 octal digits) - An octal (base 8) number or char value
\x123   (up to 3 hexadecimal digits) - a hexadecimal (base 16) number or char
\{ }    For grouping, e.g. \{12}6 = Ctrl-L 6, not ~
\;      Include a semicolon in a TAKE-file command or macro definition.

Other backslash codes:

\%      Introduce a Kermit variable, \%1, \%2, ..., \%a, \%b, ... \%z
\K      (or \k) Introduce a Kermit connect-mode verb like \Kexit
{\K}    A user-defined macro assigned to a key
\B      (or \b) Send a BREAK (OUTPUT command only)
\255    Shorthand for CRLF or LFCR   (INPUT command only)
\CD     Carrier Detect RS-232 signal (WAIT command only)
\DSR    Data Set Ready RS-232 signal (WAIT command only)
\CTS    Clear to Send RS-232 signal  (WAIT command only)
\v      Introduce a built-in variable like \v(date).

* Program Management Commands:

EXIT or QUIT
  Exit from MS-DOS Kermit.  Close all logs and files.  Leave serial port
  and modem connections open.  Close most kinds of network connections.
  Execute ON_EXIT macro if one is defined.

TAKE <filename>
  Execute commands from the specified file instead of the keyboard.

PUSH
  Go to DOS prompt.  Return to Kermit prompt by typing the DOS EXIT command.

RUN <command>
  Run any DOS program or execute any DOS command, e.g. RUN EDLIN AUTOEXEC.BAT.

VERSION
  Display MS-DOS Kermit program version number and date.

ECHO <text>
  Display the <text> on the screen.  For issuing messages from TAKE files.

SET PROMPT <text>
  Change the program prompt from MS-Kermit> to the specified text.

COMMENT <text>
  For adding comments to a TAKE file.

<command> ; text
  Commands in TAKE files can have trailing comments preceded by semicolon (;).

<text>-
<text>
  Commands in TAKE files or macro definitions can be continued with hyphens,
  but not in a trailing comment.

* DOS-like Commands:

CD [<path>]
  Like DOS CD command, but drive letter may also be included.

CLS
  Clear the PC's screen.

DELETE <filespec>
  Deletes specified file(s).

DIRECTORY [<filespec>]
  Like DOS DIR command.

TYPE <filename>
  Like DOS TYPE command.

SPACE [<disk-letter>]
  Shows free space on current or specified disk.

SHOW MEMORY
  Shows free memory.

* Commands for Getting Information:

HELP
  Displays a brief help message about MS-DOS Kermit.

SHOW <category>
  Displays current settings, definitions, statistics selectively
  (type SHOW ? for a list of categories that can be shown).

STATUS
  Shows values of most SET parameters.

VERSION
  Display the program version number.

* Commands for Setting Communication Parameters

SET COM1 <address> [ <irq> ]
  Tell Kermit that the hardware address of COM1, which must be a 8250 or
  compatible UART, is <address> and, optionally, that its interrupt request
  line number is <irq>.  Also SET COM2, SET COM3, SET COM4.  Used to configure
  Kermit for nonstandard communication boards.  If IRQ not specified, Kermit
  tries 3 and 4 (standard IRQs for communication ports).  USE WITH EXTREME
  CAUTION: specification of incorrect address or IRQ number could harm your PC
  or files.

SET PORT {COM1, COM2, COM3, COM4} = COM1
  Select communication device (SET PORT ? for list of available devices,
  see below for local area nets).  You can also say SET PORT 1, SET PORT 2,
  etc.  Port must be real 8250 or 16550A UART.  If it isn't, Kermit will use
  BIOS rather than direct hardware control.

SET PORT {BIOS1, BIOS2, BIOS3, BIOS4}
  Use BIOS-level driver for COM1, COM2, COM3, or COM4, etc, rather than its
  own built-in code.  Allows Kermit to be used with LANs, nonstandard devices,
  etc.

SET PORT <other> - See section on Local Area Networks.

SET SPEED <number>
  Communications port line speed: 1200, 2400, 9600, etc.  SET SPEED ? for list.
  75/1200 is "split speed" (75 out, 1200 in).  Applies to currently selected
  serial port.

SET PARITY {EVEN, ODD, MARK, SPACE, NONE} = NONE
  Character parity to use during communication.  If not NONE, then 8th-bit
  quoting is used during file transfer.

SET DISPLAY { 7, 8 } = 7
  Synonym for SET TERMINAL BYTESIZE { 7, 8 }

SET DUPLEX {FULL, HALF} = FULL
  Select full or half duplex communication.
  FULL = remote echo.  HALF = local echo plus RTS/CTS hardware handshake.

SET HANDSHAKE {NONE, XON, CR, LF, CODE <ascii-value>} = NONE
  Half-duplex line turnaround character (XON is most common).

SET FLOW-CONTROL {XON/XOFF, RTS/CTS, NONE} = XON/XOFF
  Select full-duplex flow control method.

* Commands for Connecting to a Remote Host

CONNECT
  Make a terminal connection to a device or another computer on the currently
  selected port using the current communication settings.  Use Alt-X to return
  ("escape back") to the MS-Kermit> prompt (hold down the Alt key and press
  x), Raises DTR.  Can abbreviate as C.

HANGUP
  Hang up a dialed modem connection by lowering DTR.

SET DEBUG SESSION
  Turn off terminal emulator, display received characters literally for
  debugging: ^X = Ctrl-X, ~X = X with 8th bit on.

SET DEBUG OFF
  Turn off session debugging.

There is no built-in DIAL command.  Connect to the modem and dial it by hand
(for example ATDT<number> for a Hayes modem), or use a macro or script program
to do the dialing.

* Commands for Controlling Terminal Emulation

SET TERMINAL [ TYPE ] {VT320, VT100, VT102, VT52, HEATH-19, TEK4010} = VT320
  Select type of terminal to emulate.  More types may be available, type
  SET TERMINAL TYPE ? for a list.

SET TERMINAL ARROW-KEYS { APPLICATION, CURSOR }
  Explicitly puts the arrow keys (actuall, the Kermit verbs associated with
  them) in application or cursor mode.

SET TERMINAL BELL { AUDIBLE, VISUAL, NONE } = AUDIBLE.
  What to do with arriving BEL (beep, Ctrl-G) characters.

SET TERMINAL BYTESIZE { 7, 8 }
  Use 7 for stripping off parity bit, e.g. with UNIX systems, during terminal
  emulation.  Use 8 for 8-bit international character sets.

SET TERMINAL CHARACTER-SET { LATIN1, DEC-MCS, GERMAN, FRENCH, etc } = LATIN1
  Tell Kermit what character set is used by the host computer during terminal
  emulation.  Received characters are translated from this set into the
  current PC code page.  Characters that you type are translated from current
  PC code page to this set.  LATIN1 is ISO Latin Alphabet 1 (an 8-bit set).
  GERMAN, FRENCH, etc, are 7-bit National Replacement Character sets (NRCs).
  Use SET KEY and SET TRANSLATION INPUT to override Kermit's built-in
  character translations on an individual basis, and SET TERMINAL
  CHARACTER-SET TRANSPARENT to disable them altogether.  Optional trailing
  parameters G0, G1, G2, and G3 can be used to designate the specified
  character set into the given Gn's.  Example: SET TERM CHAR LATIN1 G1.

SET TERMINAL CLEAR-SCREEN
  Clears the screen and screen memory.

SET TERMINAL COLOR <number> [, <number> [, <number> ] ]
  Set foreground and background color during terminal emulation.  The numbers
  are 0 (no snow on IBM CGA), 1 (high-intensity foreground), 10 (fast screen
  update on IBM EGA), 3x (foreground color), 4x (background color), where x is
  the sum of any of 1 (Red), 2 (Green), and 4 (Blue).

SET TERMINAL CONTROLS {7-BIT, 8-BIT}
  Tells VT320 emulator whether to send 7-bit or 8-bit control sequences when
  DEC function, arrow, editing, or keypad keys are pressed.

SET TERMINAL CURSOR-STYLE {BLOCK, UNDERLINE}
  Selects the cursor style for terminal emulation.
  The default is underline.

SET TERMINAL DISPLAY
  Synonym for SET TERMINAL BYTESIZE.

SET TERMINAL DIRECTION {LEFT-TO-RIGHT, RIGHT-TO-LEFT}
  Direction of screen writing during terminal emulation.

SET TERMINAL GRAPHICS <name>
  Specifies the type of graphics adapter in your PC: CGA, EGA, VGA, and others
  (SET TERM GRAPH ? for complete list).  MS-DOS Kermit will automatically try
  to figure out what kind of adapter you have.  Use this command if it guesses
  incorrectly.

SET TERMINAL GRAPHICS CHARACTER-WRITING {OPAQUE, TRANSPARENT}
  Tells whether text characters written on graphics screens should be
  let graphics show through.

SET TERMINAL GRAPHICS COLOR <number> [, <number> [, <number> ] ]
  Foreground and background colors for graphics screens.  Numbers same as for
  SET TERMINAL COLOR.

SET TERMINAL GRAPHICS CURSOR {ON, OFF}
  Tells whether there should be a text cursor during graphics terminal
  emulation.  Default is ON.

SET TERMINAL KEYCLICK {ON, OFF}
  On keyboards that support this, turns keyclick on or off.

SET TERMINAL KEYPAD {APPLICATION, NUMERIC}
  Puts the numeric keypad into the specified mode.

SET TERMINAL MARGIN-BELL {ON, OFF}
  Whether to ring the bell when the cursor passes nears the right column of
  the screen.

SET TERMINAL NEWLINE {ON, OFF}
  ON means to send both a carriage return and a linefeed when you press Enter.

SET TERMINAL REPLAY
  Synomym for @c<REPLAY.

SET TERMINAL ROLL {ON, OFF}
  ON means to restore rolled-back screens to the end when new characters
  arrive.  OFF means to display new characters at the current cursor position,
  even if it is in a rolled-back screen.

SET TERMINAL SCREEN-BACKGROUND {NORMAL, REVERSE}
  REVERSE exchanges the foreground and background colors.

SET TERMINAL TABSTOPS {AT <n>, CLEAR AT <n>, CLEAR ALL}
  Sets or clears screen tab stops at the specified positions.  <n> can be a
  single number, a list of numbers, or <position>:<interval> to set tabs
  beginning at the specified <position>, every <interval> spaces, e.g.
  SET TAB AT 1:10.  By default, tabs are set every eight spaces.

SET TERMINAL TEK {ENABLE, DISABLE}>
  Whether Kermit should automatically enter Tektronix graphics mode upon
  receipt of special escape sequences from the host (see MSVIBM.TEK).
  ENABLEd by default.

SET TERMINAL WIDTH {80, 132}
  Tells Kermit to put the video adapter into 80-column or 132-column mode.  If
  Kermit can do this itself, it will.  Otherwise it will attempt to run the
  DOS batch program COLS80.BAT or COLS132.BAT to do the job.  You must supply
  these files.  They should contain whatever external DOS commands you have
  at your disposal to change the screen mode.

SET TERMINAL WRAP {ON, OFF}
  Whether to start a new screen line when characters arrive past the right
  (or left if SET TERM DIR LEFT) margin.

SET PRINTER <name>
  To redirect any printing that is done during terminal emulation to a device
  or file.  Default is PRN (the DOS printer device).

* Local Area Networks

SET PORT NETBIOS
  Tells Kermit to use IBM Netbios rather than serial communication port.
  Tells MS-DOS Kermit to await connections from other PCs on the net.
  Also used with AT&T StarLAN/StarGroup.

SET PORT NETBIOS <name>
  Tells Kermit to connect to another PC on the Netbios network.  Also for
  AT&T StarLAN/StarGroup.

SET PORT NOVELL
  For using Novell network asynchronous communication servers (NASI/NACS).
  (see below).

SET PORT DECNET [<node> [<password>]]
  For DECnet-DOS LAT or CTERM connections.  Specify node to connect to, LAT
  password if required.

SET PORT UB-NET1
  For Ungermann-Bass Net/One.

SET PORT OPENNET [<node>]
  For Intel OpenNET, similar to Netbios.

SET PORT 3COM
  For using 3COM BAPI asynchronous communication server, BRIDGE PCS or 3+OPEN
  TCP versions.

SET PORT EBIOS { 1, 2, 3, 4 }
  Use Extended BIOS for communication with EBIOS-based asynchronous
  communication servers like IBM's LANACS.

SET PORT TELAPI <internet-address>
  Connect to an Internet TCP/IP host through Novell LAN Workplace for DOS.

SET PORT TES <hostname>
  Connect to a VAX/VMS system that is running Netware/VMS.

SET PORT { BIOS1, BIOS2, BIOS3, BIOS4 }
  For using any network that operates through a BIOS-level Int 14h COM port
  driver.  Examples include TCP/IP Telnet (e.g. through Interlan TCP/IP Novell
  Gateway, or FTP Software TC/TCP Jan 1990 version 2.04 pl 1 or later).

SET PRINTER <filename or PRN>
  Sends Connect mode printer material to the indicated file instead of to the
  standard DOS printer name PRN; this is a "print to disk" option. SHOW LOG
  displays the current filename (defaults to PRN).

HANGUP
  Close network connection, terminate network session.

* CONNECT-Mode Escape-Level Commands:

During terminal emulation, you may type Ctrl-] (hold down Ctrl and press the
rightbracket key) followed by any of the following characters:

  ?   Help -- prints the available single-character commands
  0   (the digit zero) Transmit a NUL (ASCII 0)
  B   Transmit a BREAK signal                                 (also Alt-B)
  C   Close the connection and return to Kermit prompt level  (also Alt-X)
  F   File the current text screen in the screen dump file    (also Ctrl-End)
  H   Hangup the phone (or network connection)
  L   Transmit a Long Break (1.8 seconds)
  M   Toggle the mode line, i.e. turn it off if it is on & vice versa
  P   Push to DOS; get back to CONNECT by typing EXIT at the DOS prompt
  Q   Temporarily quit logging the remote session
  R   Resume logging the remote session
  S   Show the status of the connection
  ^]  (or whatever you have set the escape character to be)
      Typing the escape character twice sends one copy of it to the host

Use SET ESCAPE to change the escape character from Ctrl-Rightbracket to some
other character, or you can use the Alt-key equivalents noted above on the IBM
keyboard, or you can use SET KEY to assign \Kexit or other "Kermit verbs" to
the keys of your choice.  \Kexit is also assigned to Alt-X on IBM keyboards.

Screen dumps are of Kermit's current screen.  If it is a text screen, it is
appended to KERMIT.SCN (or whatever other filename you have given in your most
recent SET DUMP command), separated from previous material by a formfeed
(Ctrl-L).  Graphics screens are saved in TIFF 5.0 format to separate files
named TEKPLT01.TIF, TEKPLT02.TIF, etc.  You can save graphics screens with
Ctrl-End, but not Ctrl-[F.  See MSGTIF.DOC for a description of TIFF format.

* SET TRANSLATE INPUT Command:

  SET TRANSLATE ON
  SET TRANSLATE INPUT <code1> <code2>

Specifies that when a character represented by <code1> arrives at the
communication port during terminal emulation, it should be translated into
<code2> before display on the screen.  Overrides current terminal character
set translation for that character.  Translations set up in this way take
effect only after you give the command SET TRANSLATE INPUT ON, and you can
disable (and restore the default translations) with SET TRANSLATE INPUT OFF.
SET TRANSLATE INPUT ON/OFF does not affect the built-in translation between
terminal character set and PC code page.  To disable the latter, use SET
TERMINAL CHARACTER-SET TRANSPARENT.

* SET KEY Command:

  SET KEY <scancode> <value>

Assigns <value> to the key whose scan code is given.  When you press the key
or key combination that corresponds to the scan code during terminal
emulation, the <value> is transmitted out the communication port.  If you
don't know the scan code, type SET KEY alone on a line, then press the desired
key or key combination when prompted, then enter the definition.  The <value>
can be a single character, a text string (which may contain backslash codes),
or one or more Kermit verbs.  SET KEY overrides the default translation for
the given key.

* Commonly Used Kermit Keyboard Verbs (default assignment in parens):

\Kexit        Exit from connect mode (Alt-X, Ctrl-]C)
\Kbreak       Send a BREAK signal (Alt-B, Ctrl-]B)
\Kdos         Push to DOS (Ctrl-]P)
\Kdump        Dump current screen to file (Ctrl-End)
\Khangup      Hangup communication port connection (Ctrl-]H)
\Klogoff      Stop session logging (Ctrl-]Q)
\Klogon       Resume session logging (Ctrl-]R)
\Knethold     Put network connection on hold or enter network shell
\Kmodeline    Toggle mode line off/on++ (keypad minus)
\Kprtscn      Print current screen (Print Screen)
\Kreset       Reset terminal emulator (Alt-=)
\Ktermtype    Change terminal type (Alt-minus)
\Kupscn       Roll back screen (PgUp)
\Kupone       Roll back screen one line (Ctrl-PgUp)
\Kdnscn       Roll screen forward (PgDn)
\Kdnscn       Roll screen forward one line (Ctrl-PgDn)
\KterminalR   Execute macro named TERMINALR if any
\KterminalS   Execute macro named TERMINALS if any
\Knethold     Put a network connection on hold, select another one

Use SET KEY to assign or reassign these verbs to the keys of your choice.
Example: "SET KEY \315 \Kexit" puts \Kexit on the F1 key.

SET KEY CLEAR: Restore all Kermit's default key assignments.
SET KEY ON:  Use BIOS to read keystrokes (scan codes).
SET KEY OFF: Use DOS rather than BIOS to read keystrokes.
SET KEY LK:  Use external DEC LK250 keyboard driver (if loaded).

* Commands for Transferring Files:

Start a Kermit program on the remote computer, give it a "send", "receive",
or "server" command, escape back to MS-DOS Kermit, and give it one of the
following commands:

SEND <filename> [<alternate-name>]
  Send files to remote Kermit receiver or server.  Can abbreviate as S.

RECEIVE [<filename>]
  Wait for a file to arrive from the other Kermit program, which must
  be given a SEND command.  Can abbreviate as R.

GET <remote-filename>
  Ask a Kermit server to send the specified file(s).  Use GET alone on a line
  to be prompted for remote and local names separately.

MAIL <filespec> <address>
  Send the file as electronic mail to the address (if the remote Kermit
  supports this feature).

* Getting Information About File Transfer:

SHOW STATISTICS
  Display efficiency and other statistics about file transfers.

SHOW PROTOCOL
  Display file transfer protocol-related parameter settings.

SHOW FILE
  Display file-related parameter settings

SHOW SERVER
  Examine server-related parameters

* Commands for Talking to a Server:

BYE
  Shut down a remote Kermit server and log out its job

FINISH
  Shut down a remote Kermit server, put it back at command level

GET <remote-filename>
  Ask a Kermit server to send the specified file(s)

SEND <filename> [<alternate-name>]
  Send files to remote Kermit receiver or server

REMOTE CD [<directory> [<password>]]
  Tell remote server to change to named directory.

REMOTE DELETE <filespec>
  Tell remote server to delete the specified files.

REMOTE DIRECTORY [<filespec>]
  Tell remote server to send directory listing for specified files.

REMOTE HELP
  Ask the server to list the services it provides

REMOTE HOST [command]
  Command for remote host in its own command language

REMOTE KERMIT [command]
  Send a command to remote Kermit server in its own command language

REMOTE LOGIN user
  Login to a remote Kermit server, separate prompts for password, etc.

REMOTE MESSAGE text
  Send a one-line message to the remote Kermit server

REMOTE PRINT <filespec> [ <options> ]
  Send the file to a remote server and ask the server to print it with the
  specified options, if any.

REMOTE SET <parameter> <value>
  Tell remote server to set the specified parameter to the specified value.

REMOTE SPACE [directory]
  Show disk space on remote host

REMOTE TYPE filespec
  Display remote file(s)

REMOTE WHO
  Display users logged on remote system

* Commands for Acting as a Server:

DISABLE <parameter>
  Disable various capabilities of the server (DISABLE ? for list)

ENABLE <parameter>
  Enable various capabilities of the server (ENABLE ? for list)

SET SERVER TIMEOUT <num>
  How often the server should send NAK packets while waiting for a command,
  0 = never.

SET SERVER LOGIN <name> <password>
  Set up a name and password which must be sent to the server (by REMOTE
  LOGIN) before it will accept any other commands.

SERVER [{<seconds>, <hh:mm:ss>}]
  Act as a Kermit server, optionally for or until the given time.
  Default time is forever (until BYE or FINISH received, or interrupted
  with Ctrl-C).

The MS-DOS Kermit server honors the following requests:

SEND        REMOTE CWD        REMOTE PRINT
GET         REMOTE DELETE     REMOTE MESSAGE
FINISH      REMOTE DIRECTORY  REMOTE SPACE
BYE         REMOTE HOST       REMOTE TYPE
LOGOUT      REMOTE KERMIT     REMOTE SET

* Interruption Commands While a File Transfer Is in Progress:

X or Ctrl-X: Stop sending the current file and go on to the next one, if any.
Z or Ctrl-Z: Stop sending this file, and don't send any further files.
E or Ctrl-E: Send Error packet to the remote Kermit.
C or Ctrl-C: Return to Kermit command level immediately.
Q or Ctrl-Q: Send a Ctrl-Q (Xon).
Enter key:   Try to wake up a stuck file transfer.

* Setting Nonstandard File Transfer Parameters:

SET ATTRIBUTES { ON, OFF } = ON
  Enable/Disable processing of file attribute packets.

SET ATTRIBUTES { DATE, LENGTH, TYPE, CHARACTER-SET } { ON, OFF } = ON
  Enable/Disable processing of specific file attributes.

SET BLOCK-CHECK { 1, 2, 3 } = 1
  Level of error checking, 1 by default, 3 is strongest.

SET DEBUG PACKETS
  Display packets on screen during file transfer.

SET DEBUG OFF
  Turn off display of packets.

SET DESTINATION { DISK, PRINTER, SCREEN } = DISK
  Direct incoming files to the specified device.

SET DISPLAY { QUIET, REGULAR, SERIAL } = REGULAR
  Synonym for SET FILE DISPLAY

SET FILE DISPLAY { SERIAL, REGULAR, QUIET }
  Format of MS-DOS Kermit's file transfer display.  Use SERIAL for hardcopy
  terminals, braille devices, speaking devices, etc.  QUIET means no display
  at all (used automatically in remote mode).

SET EOF { CTRL-Z, NOCTRL-Z } = NOCTRL-Z
  Whether Ctrl-Z marks the end of a PC DOS text file.

SET FILE TYPE { TEXT, BINARY } = TEXT
  Text implies record format conversion and character set translation.  Use
  BINARY to send or receive files with no conversaion at all.

SET FILE COLLISION { DISCARD, OVERWRITE, RENAME }
  What to do when a file arrives that has the same name as an existing file.
  RENAME = Automatically give the arriving file a unique name.
  OVERWIRE = Overwrite the existing file with the new file.
  DISCARD = Reject any file that has the same name as an existing file.

SET FILE CHARACTER-SET { CP437, CP850, CP860, CP863, CP865, CP866 }
  Tell Kermit which IBM PC code page to use when sending or receiving a
  text file.  Default is your current PC code page.  Kermit translates between
  the current file character set and the transfer character set during file
  transfer.

SET TRANSFER CHARACTER-SET { TRANSPARENT, LATIN1, CYRILLIC } = TRANSPARENT
  Tell Kermit which character set to use when sending and receiving Kermit
  packets.  TRANSPARENT means no translation.  LATIN1 is ISO Latin Alphabet 1,
  useful for transferring text that contains accented characters with other
  Kermit programs that support this feature.  CYRILLIC is ISO 8859-5 Latin/
  Cyrillic, and can be used only with file character-set CP866.

SET UNKNOWN-CHARACTER-SET { DISCARD, KEEP }
  What to do when a file arrives that has an unknown character set.

SET FILE WARNING { ON, OFF, NO-SUPERSEDE } = ON
  Obsolete synomym for SET FILE COLLISION

SET INCOMPLETE { KEEP, DISCARD } = DISCARD
  What to do with a file that does not arrive completely.

SET RETRY <number> = 5
  How many times to retry a particular packet before giving up on the file.

SET TIMER { ON, OFF } = ON
  Enable/Disable timeouts and retransmissions during file transfer.

SET WINDOW <num> = 1
  Number of sliding window packet slots.  Sizes greater than 1 can be used
  only with other Kermit programs that supports sliding windows.  Improves
  transmission efficiency on long-delay connections.

SET SEND (or RECEIVE) <parameter> <value>
  START-OF-PACKET <num> = 1  packet begin character, normally Ctrl-A
  END-OF-PACKET <num> = 13   packet end character, normally carriage return
  PACKET-LENGTH <num> = 94   packet length; 2000 max; > 94 is "long packets"
  PAUSE <num> = 0            Interpacket pause, milliseconds
  TIMEOUT <num> = 5          Timeout interval waiting for a packet, seconds
  PADDING <num> = 0          How many padding characters before each packet
  PADCHAR <num> = 0          Padding character to use
  DOUBLE-CHAR <num>          Double packet character <char> when sending.
  IGNORE-CHAR <num>          Discard <char> from packets when receiving.

Use SHOW FILE, SHOW PROTOCOL to examine current file transfer settings.

* Commands for Unguarded File Transfer:

Kermit can also transfer files or other information with remote computers,
services, or devices that do not support the Kermit file transfer protocol.
These methods provide no error detection or correction.

TRANSMIT <filename>
  Send a text file to the host as if you were typing it at the keyboard
  a line at a time.  Waits for linefeed (\10) to echo before sending next
  line.  Uses all current communication settings (parity, flow, etc).
  Does not translate character sets.  CRLF is sent as CR only unless SET
  TRANSMIT LINE-FEEDS ON.  Empty lines are sent as pairs of CRs (or CRLFS)
  unless SET TRANSMIT FILL is used.

SET TRANSMIT <parameter> <value>
  Various parameters used to control TRANSMIT command.
  FILL-EMPTY-LINE { NONE, SPACE, <char> }
  LINE-FEEDS-SENT { ON, OFF }
  PROMPT <char> - character to wait for before sending next line (= \10)

LOG SESSION <filename>
  Capture a remote file, which you must TYPE, into the named file
  (SESSION.LOG by default).

* Commands for Recording Things:

LOG TRANSACTION [<filename>] = TRANSACT.LOG
  Log file transfer names, times, etc, in given file.

LOG SESSION [<filename>] = SESSION.LOG
  Record terminal session in given file.

LOG PACKETS [<filename>] = PACKET.LOG
  Record file transfer packets in given file

WRITE {PACKET, SESSION, TRANSACTION, SCREEN} [<text>]
  Write the text to the specified log file or to the screen.  Text may contain
  backslash codes, variables, etc.

CLOSE {PACKET, SESSION, TRANSACTION, ALL}
  Close the specified log file and stop logging.

REPLAY <filespec>
  Display a session log, running it through the terminal emulator.

SHOW LOG
  Display names and status of logging and log files.

Ctrl-]F (while in Connect mode)
  Dump current text screen into a file.

Ctrl-End (while in Connect mode)
  Dump the current screen (text or graphics) into a file.

SET DUMP <name>
  Specify name of screen dump file for text screens (KERMIT.SCN by default).
  Graphics screens are saved to TEKPLTnn.TIF.

SET PRINTER <filename or PRN or NUL>
  Sends CONNECT-mode printer material to the indicated file or device
  instead of to the standard DOS printer name PRN; this is a "print to
  disk" option. SHOW LOG displays the current filename (defaults to PRN).

* Variables:

\%0 is the name of the currently exuting macro (if any).  \%1 thru \%9 are
its parameters (arguments).  These variables are created when the macro is
invoked and destroyed when it terminates.  If a macro invokes another macro,
a new set of arguments is created and the old set is preserved.  (This is
a change from 3.01 and earlier, in which macro arguments were global.)

\%a through \%z are global variables that can be modified or accessed in any
context.

\v(xxx) is a built-in variable, where xxx is its name:
   \v(argc)        macro argument count
   \v(count)       current value of loop counter (SET COUNT / IF COUNT)
   \v(date)        current date in country format, e.g. dd-mm-yyyy 08-02-1991
   \v(ndate)       numeric date yyyymmdd, e.g. 19910208
   \v(directory)   current disk and directory, e.g. C:\LETTERS
   \v(errorlevel)  current value of ERRORLEVEL variable (SET ERRORLEVEL)
   \v(keyboard)    IBM PC keyboard type: 88, 101, or (for LK250) 250.
   \v(platform)    PC type, e.g. IBM-PC, DEC-RAINBOW
   \v(program)     Program name, MS-DOS_KERMIT
   \v(speed)       Current transmission speed (only for COM1..4)
   \v(status)      0 if previous command succeeded, nonzero if it failed.
   \v(system)      MS-DOS
   \v(time)        Current time of day, hh:mm:ss, e.g. 12:30:01
   \v(version)     Numeric program version, e.g. 310 for version 3.10.

\$(xxx) is a DOS environment variable, e.g. \$(COMSPEC).

* Macros

DEFINE <name> [<value>]
  Defines a macro called "<name>" to have the given value.  If <value> omitted,
  undefines the name.  Value may be a list of MS-DOS Kermit commands,
  separated by commas.  Can also be used to define a variable like \%1,\%a,etc.
  Definition is copied literally (variable names rather than their values).

[DO] <name> [<parameter1> [<parameter2> [<parameter3> [...]]]]
  Executes the macro called "<name>", and assigns the parameters, if any,
  to the variables \%1, \%2, \%3, etc, and sets the variable ARGC to the
  number of parameters plus one (1 = no parameters, 2 = 1 parameter, etc).
  These variables are available only within the macro.

ASSIGN <variable1> <variable2>
  Copies the current value of <variable2> into <variable1>.  Can also be used
  for macros.  The definition is evaluated before it is assigned.

SHOW MACRO [<name>]
  Shows the definition of the specified macro or variable.

IF DEFINED <name> <command>
  Executes the <command> if the <name> is defined.
IF = ARGC <num> <command>
  Executes <command> if ARGC is equal to <num> (numeric constant or variable)
IF < ARGC <num> <command>
  Executes <command> if ARGC is less than <num>
IF > ARGC <num> <command>
  Executes <command> if ARGC greater than <num>
IF NOT > ARGC <num> <command>
  Executes <command> if ARGC less than or equal to <num>

IF =, <, >
  Can also be used with any numeric variable, not just ARGC, including the
  other predefined numeric variables, VERSION, COUNT, and ERRORLEVEL, or
  any other variable (such as \%1, \%a) that has a numeric value.  Use
  IF EQUAL to compare character strings (see below).

* Script commands:

These commands are used (in conjunction with other Kermit commands) for
carrying out an automated dialog with a remote computer.

ASK <variable> <prompt>
  Print the <prompt> on the screen, assign what user types to the <variable>.

ASKQ <variable> <prompt>
  Like ASK, but do not echo what user types.

INPUT [<timeout>] <string>
  Wait up to <timeout> secs for <string> to arrive at communications port.
  If it arrives, set SUCCESS.  If not, time out and set FAILURE.
  String may contain backslash codes.

OUTPUT <string>
  Send the <string> out the communications port.

SET INPUT CASE { IGNORE, OBSERVE } = IGNORE
  Say whether alphabet case should matter in searching for INPUT string.

SET INPUT DEFAULT-TIMEOUT <secs> = 1
  Timeout interval to use if none given in INPUT command.

SET INPUT ECHO { ON, OFF } = ON
  Whether to display characters read by INPUT command on the screen.

SET INPUT TIMEOUT-ACTION { PROCEED, QUIT } = PROCEED
  PROCEED means set SUCCESS or FAILURE and go on to next statement in macro
  definition or TAKE file.  QUIT means to quit from current macro or TAKE
  file immediately upon timeout (i.e. upon failure).

IF SUCCESS <command>
  Execute the <command> if the preceding INPUT command succeeded.  Also works
  with file transfer commands like SEND, RECEIVE, GET, BYE, etc.

IF FAILURE <command>
  Execute the <command> if the preceding INPUT or file transfer command failed.

PAUSE <secs>
  Do nothing for specified number of seconds, or until any character is typed
  at the keyboard.  Raises DTR.

WAIT [<timeout>] [DTR] [CD] [CTS]
  Wait <timeout> (seconds or until time hh:mm:ss) for specified modem signals.
  Raises DTR.

CLEAR
  Clear communications port input buffer.

STOP
  Return from macro or TAKE file to the MS-Kermit> prompt.

POP
  Return from current macro or TAKE file to the macro, TAKE file which
  invoked it, or if none, to the MS-Kermit> prompt.

GOTO <label>
  Instead of executing the next statement in the current macro definition or
  TAKE-file, go to the specified label and begin executing there.  The label
  must be a word that begins with a colon (:) in the left margin in the
  current macro definition or TAKE file.

:LOOP
  The previous line shows a label called "loop".  GOTO LOOP would find it.

REINPUT [<timeout>] <string>
  Like INPUT, but instead of waiting for <string> to arrive at communications
  port, REINPUT rescans the text that has already arrived.

SET COUNT <number>
  Sets the loop counter to <number>.

IF COUNT <command>
  Subtract one from count.  If result is greater than 0, execute <command>.
  Use with GOTO to construct counted loops.

SET ALARM <time>
  Set an alarm <time> seconds from now, or at time hh:mm:ss.

IF ALARM <command>
  If the alarm time has passed, execute the <command>.

SET ERRORLEVEL <number>
  Set errorlevel to be returned to DOS by Kermit upon exit.

IF ERRORLEVEL <number> <command>
  If errorlevel of most recently executed DOS command matches or exceeds
  <number>, execute the <command>.

IF EXIST <filename> <command>
  If the named file exists, execute the <command>.

IF EQUAL <word1> <word2> <command>
  Execute the command if the two words are the same.  The words may be
  text or variables.

IF LGT <word1> <word2> <command>
IF LLT <word1> <word2> <command>
  Execute the command if <word1> is lexically greater than (LGT) or lexically
  less than (LLT) <word2>.  EQUAL, LGT, and LLT are alphabetical comparisons.
  Case is observed or ignored according to SET INPUT CASE.

(End of MS-DOS Kermit Help File)


