%!PS-Adobe-3.0
%%Title: (PfWa_93\311)
%%Creator: (Microsoft Word: LaserWriter 8.0 8.0)
%%CreationDate: (11:31  Freitag, 30. September 1994)
%%For: (schunter)
%%Pages: 10
%%DocumentFonts: Times-Roman Symbol Times-Bold Times-Italic
%%DocumentNeededFonts: Times-Roman Symbol Times-Bold Times-Italic
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -12 -13 830 582
%ADO_ImageableArea: 0 0 818 568
%%EndComments
/md 195 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageSize A4

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
        setpagedevice
        2 dict
    dup /PageSize [595 842] put
    dup /ImagingBBox null put
    setpagedevice
%%EndFeature
}featurecleanup
(schunter)setjob
/pT[1 0 0 -1 13 830]def/mT[1 0 0 -1 13 830]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Symbol
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
/f0_1/Times-Roman :mre
/f0_14 f0_1 14 scf
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f1_1/Symbol :bsr
240/apple pd
:esr /f1_18 f1_1 18 scf
/f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f3_1/Times-Bold :mre
/f3_24 f3_1 24 scf
/f3_18 f3_1 18 scf
/f3_14 f3_1 14 scf
/f3_12 f3_1 12 scf
/f3_10 f3_1 10 scf
/f4_1 f1_1 def
/f4_18 f4_1 18 scf
/f4_14 f4_1 14 scf
/f4_12 f4_1 12 scf
/f6_1/Times-Italic :mre
/f6_12 f6_1 12 scf
/f6_10 f6_1 10 scf
/f6_9 f6_1 9 scf
/f7_1 f1_1 :mi
/f7_12 f7_1 12 scf
/f7_10 f7_1 10 scf
/f7_9 f7_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(schunter; page: 1 of 10)setjob
%%EndPageSetup
gS 0 0 568 818 rC
66 32 :M
f0_10 sf
.066 .007(Proc. Eurocrypt '92, Balatonf\237red, 24.-28.5.1992, to appear in LNCS, Springer-Verlag)J
164 87 :M
f3_24 sf
-.459(Attacks on Protocols for)A
125 114 :M
-.602(Server-Aided RSA Computation)A
157 145 :M
f0_12 sf
-.154(Birgit Pfitzmann)A
152 163 :M
f0_10 sf
.061 .006(Institut f\237r Informatik)J
150 175 :M
-.049(Universit\212t Hildesheim)A
152 187 :M
-.048(Marienburger Platz 22)A
143 199 :M
.046 .005(W-3200 Hildesheim, FRG)J
123 211 :M
-.064(pfitzb@informatik.uni-hildesheim.de)A
327 145 :M
f0_12 sf
-.258(Michael Waidner)A
313 163 :M
f0_10 sf
-.053(Institut f\237r Rechnerentwurf)A
330 175 :M
-.132(und Fehlertoleranz)A
293 187 :M
-.008(Universit\212t Karlsruhe, Postfach 6980)A
313 199 :M
.07 .007(W-7500 Karlsruhe 1, FRG)J
328 211 :M
-.225(waidner@ira.uka.de)A
94 254 :M
f3_10 sf
.447 .045(Abstract. )J
f0_10 sf
.351 .035(On Crypto \32588, Matsumoto, Kato, and Imai presented protocols to speed up secret)J
94 267 :M
1.066 .107(computations with insecure auxiliary devices. The two most important protocols enable a)J
94 280 :M
.773 .077(smart card to compute the secret RSA operation faster with the help of a server that is not)J
94 293 :M
-.095(necessarily trusted by the card holder.)A
108 306 :M
1.149 .115(It was stated that if RSA is secure, the protocols could only be broken by exhaustive)J
94 319 :M
-.025(search in certain spaces. Our main attacks show that much smaller search spaces suffice. These)A
94 332 :M
-.118(attacks are passive and therefore undetectable.)A
108 345 :M
.646 .065(It was already known that one of the protocols is vulnerable to active attacks. We show)J
94 358 :M
.874 .087(that this holds for the other protocol, too. More importantly, we show that our attack may)J
94 371 :M
.036 .004(still work if the smart card checks the correctness of the result; this was previously believed to)J
94 384 :M
-.043(be an easy measure excluding all active attacks.)A
108 397 :M
(Finally, we discuss attacks on related protocols.)S
66 446 :M
f3_18 sf
(1)S
134 446 :M
-.817(Introduction)A
66 474 :M
f3_14 sf
.25(1.1)A
134 474 :M
-.492(The Model)A
66 497 :M
f0_12 sf
1.455 .146(Smart cards are often considered as appropriate for carrying out secret cryptographic)J
66 512 :M
.625 .062(computations for individual owners. ISO standards for smart cards, however, emphasize)J
66 527 :M
.324 .032(flexibility in the physical sense more than flexibility regarding computations. Only rather)J
66 542 :M
.009 .001(small chips can therefore be used. Hence, the computing abilities are limited. In particular,)J
66 557 :M
-.078(at least if the smart card is equipped with a general-purpose CPU, the speed does not suffice)A
66 572 :M
1.27 .127(for asymmetric algorithms, such as signing a message with RSA [RSA_78]. \(Special-)J
66 587 :M
1.707 .171(purpose designs exist nowadays [QuWB_91, WaQu_91]. Nevertheless, the protocols)J
66 602 :M
-.077(considered in the following are still to be used in practical systems [KaSh_90].\))A
83 617 :M
.687 .069(In most applications, the smart card communicates directly with a device with much)J
66 632 :M
.282 .028(larger computing abilities, such as a point-of-sale terminal. Such a device will be called a)J
66 647 :M
f6_12 sf
.041(server)A
f0_12 sf
.162 .016( in the following. The basic idea of [MaKI_90] \(and previous Japanese publications)J
66 662 :M
.175 .017(by the same authors\) was to use the computing power of the server to help the smart card.)J
66 677 :M
-.105(This is complicated by the fact that the owner of the smart card need not trust the server.)A
66 698 :M
.883 .088(The question whether an untrusted server can help a less powerful device with a secret)J
66 713 :M
.023 .002(computation can be seen as a general theoretical problem, too. A similar problem has been)J
66 728 :M
-.044(considered in [Feig_86, AbFK_89]. There, the server has unrestricted computational power)A
66 743 :M
-.057(and needs this power even in the correct protocol. In contrast, here the server is restricted to)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(schunter; page: 2 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
289 44 :M
f0_10 sf
.417 .042(\320 2 \320)J
79 89 :M
f0_12 sf
-.053(polynomial-time computations both in the correct protocol and in the attacks. \(Otherwise, it)A
79 104 :M
-.041(could break RSA anyway.\))A
79 136 :M
f3_14 sf
.25(1.2)A
147 136 :M
-.364(Overview over Protocols and Attacks)A
79 159 :M
f0_12 sf
.382 .038(The main existing server-aided protocols enable a smart card to compute RSA signatures)J
79 174 :M
.148 .015(faster with the help of the server. They all share the same basic structure. In Section 2, we)J
79 189 :M
.919 .092(describe the first two protocols, RSA-S1 and RSA-S2 from [MaKI_90], and sketch the)J
79 204 :M
.12 .012(remaining ones [MaKI_90, QuSo_91, LaYH_91]. The performance of some protocols has)J
79 219 :M
-.035(been further considered in [KaSh_90].)A
79 240 :M
-.027(In [MaKI_90], active attacks are not considered, and it is claimed that if RSA is secure, the)A
79 255 :M
.155 .015(best possible passive attacks are brute force search in certain search spaces. We will show)J
79 270 :M
-.061(that this is not correct, and that much smaller search spaces are sufficient. These attacks can)A
79 285 :M
-.047(be countered by increasing the system parameters. However, one must carefully consider at)A
79 300 :M
-.107(what point one loses the advantage over direct computation.)A
96 315 :M
.602 .06(The attacks also work for all protocol variants except that from [QuSo_91], which is)J
79 330 :M
.5 .05(provably secure against passive attacks if RSA is secure. However, its drawback is large)J
79 345 :M
1.388 .139(communication overhead, which makes it impractical for smart cards with a standard)J
79 360 :M
-.107(interface.)A
79 381 :M
.414 .041(It had already been noticed that the scheme RSA-S2 is vulnerable to active attacks, see a)J
79 396 :M
1.947 .195(remark in [QuSo_91] and a complete description in [ShKa_90].)J
f0_9 sf
0 -4 rm
.402(1)A
0 4 rm
f0_12 sf
1.138 .114( In both cases, it is)J
79 411 :M
1.093 .109(proposed that the smart card should check the result, i.e., the RSA signature, before it)J
79 426 :M
-.052(outputs it to the server. This is possible if the public RSA exponent is small. It is claimed in)A
79 441 :M
1.194 .119([ShKa_90] that this countermeasure excludes all possible active attacks. However, we)J
79 456 :M
-.005(establish a new active attack that requires stronger countermeasures. Additionally, the new)A
79 471 :M
-.048(attack also works for RSA-S1 and the protocol from [QuSo_91].)A
79 492 :M
.286 .029(We also show that another protocol from [MaKI_90], used to solve modular equations, is)J
79 507 :M
-.054(not secure. Finally, we make some remarks about another protocol in [QuSo_91].)A
96 522 :M
.024 .002(Note that server-aided protocols for testing RSA signatures with small public exponent)J
79 537 :M
.347 .035(exist, too [QuSo_91, Bos_92].)J
79 569 :M
f3_14 sf
.25(1.3)A
147 569 :M
-.454(Other Security Considerations)A
79 592 :M
f0_12 sf
1.756 .176(Note that in the example of ISO standard smart cards, the basic assumptions of the)J
79 607 :M
-.063(protocols considered here are a little inconsistent: Such smart cards have neither a keyboard)A
79 622 :M
.694 .069(nor a display. Consequently, the owner enters secret data, such as a PIN, via the server,)J
79 637 :M
.628 .063(which is considered as insecure, and the owner cannot check that the correct message is)J
79 652 :M
.356 .036(signed. Thus, no real security can be achieved in this scenario. \(And if one deviates from)J
79 667 :M
.392 .039(the ISO standards by adding keyboards and displays, one can also use devices with more)J
79 682 :M
.279 .028(computational power, e.g., [PrCh_89, BaEi_90].\))J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
79 705.24 -.24 .24 222.24 705 .24 79 705 @a
79 718 :M
f0_9 sf
(1)S
93 722 :M
f0_10 sf
.593 .059(Two further references containing active attacks and countermeasures, which we unfortunately cannot)J
93 735 :M
.674 .067(read, are: Tsutomu Matsumoto, Hideki Imai: How to Ask and Verify Oracles for Speeding Up Secret)J
93 748 :M
.038 .004(Computations, Part 1 and 2 \(in Japanese\); IEICE Technical Reports \(Institute of Electronics, Information)J
93 761 :M
.079 .008(and Communication Engineers\) 89/45 \(1989\) 21-28, ISEC89-4, and 89/145 \(1989\) 13-20, IT89-24.)J
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(schunter; page: 3 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
289 44 :M
f0_10 sf
.417 .042(\320 3 \320)J
96 89 :M
f6_12 sf
-.05(Remark:)A
f0_12 sf
-.04( It has been argued that one might build in a display without deviating from the)A
79 104 :M
1.324 .132(standard otherwise, and solve the PIN problem with measures such as in [MaIm_91].)J
79 119 :M
1.447 .145(Although this approach is interesting \(in particular against the threat that someone is)J
79 134 :M
-.023(watched while typing a PIN\), its effectiveness against repeated use of a smart card with the)A
79 149 :M
-.055(same server, with parameter sizes acceptable for human users, remains to be shown.)A
79 189 :M
f3_18 sf
(2)S
147 189 :M
-.373(The RSA Protocols)A
79 215 :M
f0_12 sf
.057 .006(The smart card wants to compute )J
f6_12 sf
(y)S
f0_12 sf
( = )S
f6_12 sf
(x)S
f6_10 sf
0 -4 rm
(d)S
0 4 rm
f0_12 sf
.035 .003( mod )J
f6_12 sf
(n)S
f0_12 sf
.044 .004(, where )J
f6_12 sf
(n)S
f0_12 sf
.051 .005( is the product of two large primes)J
79 230 :M
f6_12 sf
.191(p)A
f0_12 sf
.298 .03( and )J
f6_12 sf
.191(q)A
f0_12 sf
.298 .03( and )J
f6_12 sf
.191(d)A
f0_12 sf
.602 .06( is a secret exponent. Both basic schemes, RSA-S1 and RSA-S2, have two)J
79 245 :M
.101 .01(parameters, )J
f6_12 sf
(M)S
f0_12 sf
.035 .004( and )J
f6_12 sf
(L)S
f0_12 sf
(.)S
79 277 :M
f3_14 sf
.25(2.1)A
147 277 :M
-.488(RSA-S1)A
79 300 :M
f0_12 sf
-.027(As a precomputation for all following signatures, the smart card \(or a trusted larger device\))A
79 315 :M
-.044(breaks down the secret exponent )A
f6_12 sf
-.053(d)A
f0_12 sf
-.042(: It randomly generates an integer vector )A
f6_12 sf
-.077(D)A
f0_12 sf
-.037( = \()A
f6_12 sf
-.053(d)A
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
-.047(,\311, )A
f6_12 sf
-.053(d)A
f6_10 sf
0 3 rm
-.074(M)A
0 -3 rm
f0_12 sf
(\))S
79 330 :M
.11 .011(and a binary vector )J
f6_12 sf
.051(F)A
f0_12 sf
.048 .005( = \()J
f6_12 sf
(f)S
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.104 .01(,\311, )J
f6_12 sf
(f)S
f6_10 sf
0 3 rm
.058(M)A
0 -3 rm
f0_12 sf
.13 .013(\) with)J
217 349 :M
f6_12 sf
.139(d)A
f0_12 sf
.129 .013( = )J
f6_12 sf
.077(f)A
f0_10 sf
0 3 rm
.116(1)A
0 -3 rm
f6_12 sf
.139(d)A
f0_10 sf
0 3 rm
.116(1)A
0 -3 rm
f0_12 sf
.185 .018( + \311 + )J
f6_12 sf
.077(f)A
f6_10 sf
0 3 rm
.193(M)A
0 -3 rm
f6_12 sf
.139(d)A
f6_10 sf
0 3 rm
.193(M)A
0 -3 rm
f0_12 sf
.253 .025( mod )J
f7_12 sf
.153(l)A
f0_12 sf
.093(\()A
f6_12 sf
.139(n)A
f0_12 sf
(\))S
500 349 :M
(\(1\))S
79 365 :M
.503 .05(and )J
f6_12 sf
.196(Weight)A
f0_12 sf
.138(\()A
f6_12 sf
.254(F)A
f0_12 sf
.239 .024(\) )J
cF f1_12 sf
.024(\243)A
sf
.239 .024( )J
f6_12 sf
.231(L)A
f0_12 sf
.437 .044(. Here, )J
f6_12 sf
.196(Weight)A
f0_12 sf
.698 .07( denotes the Hamming weight. The computation of the)J
79 380 :M
-.074(signature on an actual message )A
f6_12 sf
-.08(x)A
f0_12 sf
-.076( proceeds as follows:)A
79 395 :M
1(1.)A
96 395 :M
-.005(The smart card sends )A
f6_12 sf
(n)S
f0_12 sf
(, )S
f6_12 sf
(D)S
f0_12 sf
(, and )S
f6_12 sf
(x)S
f0_12 sf
-.005( to the server.)A
79 410 :M
1(2.)A
96 410 :M
.075 .008(For )J
f6_12 sf
(i)S
f0_12 sf
.059 .006( := 1,\311, )J
f6_12 sf
.054(M)A
f0_12 sf
.109 .011(, the server computes)J
259 425 :M
f6_12 sf
(z)S
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.028 .003( := )J
f6_12 sf
(x)S
f6_10 sf
0 -4 rm
(d)S
0 4 rm
f6_9 sf
0 -2 rm
(i)S
0 2 rm
f0_12 sf
.046 .005( mod )J
f6_12 sf
(n)S
96 441 :M
f0_12 sf
.116 .012(and sends )J
f6_12 sf
(Z)S
f0_12 sf
.056 .006( := \()J
f6_12 sf
(z)S
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.105 .01(,\311, )J
f6_12 sf
(z)S
f6_10 sf
0 3 rm
.058(M)A
0 -3 rm
f0_12 sf
.109 .011(\) back to the smart card.)J
79 456 :M
1(3.)A
96 456 :M
-.024(The smart cards obtains )A
f6_12 sf
(y)S
f0_12 sf
-.024( by multiplying the )A
f6_12 sf
(z)S
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.023(\325s for which )A
f6_12 sf
(f)S
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.027( = 1.)A
79 471 :M
.171 .017(Thus, the smart card only needs )J
f6_12 sf
.067(L)A
f0_12 sf
.184 .018( \320 1 multiplications, and the communication is 2\()J
f6_12 sf
.101(M)A
f0_12 sf
.096 .01( + 1\))J
79 486 :M
.097(numbers.)A
79 518 :M
f3_14 sf
.25(2.2)A
147 518 :M
-.488(RSA-S2)A
79 541 :M
f0_12 sf
.849 .085(RSA-S2 is to improve on RSA-S1 by use of the Chinese remainder theorem, similar to)J
79 556 :M
-.057([QuCo_82]. As a precomputation, the smart card breaks down )A
f6_12 sf
-.066(d)A
f0_12 sf
-.072( as)A
215 571 :M
f6_12 sf
.118(d)A
f0_12 sf
.109 .011( = )J
f6_12 sf
.066(f)A
f0_10 sf
0 3 rm
.099(1)A
0 -3 rm
f6_12 sf
.118(d)A
f0_10 sf
0 3 rm
.099(1)A
0 -3 rm
f0_12 sf
.157 .016( + \311 + )J
f6_12 sf
.066(f)A
f6_10 sf
0 3 rm
.164(M)A
0 -3 rm
f6_12 sf
.118(d)A
f6_10 sf
0 3 rm
.164(M)A
0 -3 rm
f0_12 sf
.237 .024( mod \()J
f6_12 sf
.118(p)A
f0_12 sf
.158(\3201\))A
79 587 :M
-.163(and)A
211 587 :M
f6_12 sf
.1(d)A
f0_12 sf
.092 .009( = )J
f6_12 sf
.1(g)A
f0_10 sf
0 3 rm
.083(1)A
0 -3 rm
f6_12 sf
.1(d)A
f0_10 sf
0 3 rm
.083(1)A
0 -3 rm
f0_12 sf
.133 .013( + \311 + )J
f6_12 sf
.1(g)A
f6_10 sf
0 3 rm
.139(M)A
0 -3 rm
f6_12 sf
.1(d)A
f6_10 sf
0 3 rm
.139(M)A
0 -3 rm
f0_12 sf
.201 .02( mod \()J
f6_12 sf
.1(q)A
f0_12 sf
.105(\3201\),)A
79 603 :M
.42 .042(where )J
f6_12 sf
.18(D)A
f0_12 sf
.145 .014( = \()J
f6_12 sf
.125(d)A
f0_10 sf
0 3 rm
.104(1)A
0 -3 rm
f0_12 sf
.312 .031(,\311, )J
f6_12 sf
.125(d)A
f6_10 sf
0 3 rm
.173(M)A
0 -3 rm
f0_12 sf
.308 .031(\) is an integer vector again, and )J
f6_12 sf
.152(F)A
f0_12 sf
.145 .014( = \()J
f6_12 sf
.069(f)A
f0_10 sf
0 3 rm
.104(1)A
0 -3 rm
f0_12 sf
.312 .031(,\311, )J
f6_12 sf
.069(f)A
f6_10 sf
0 3 rm
.173(M)A
0 -3 rm
f0_12 sf
.218 .022(\) and )J
f6_12 sf
.18(G)A
f0_12 sf
.145 .014( = \()J
f6_12 sf
.125(g)A
f0_10 sf
0 3 rm
.104(1)A
0 -3 rm
f0_12 sf
.312 .031(,\311, )J
f6_12 sf
.125(g)A
f6_10 sf
0 3 rm
.173(M)A
0 -3 rm
f0_12 sf
(\))S
79 618 :M
-.005(are binary vectors with )A
f6_12 sf
(Weight)S
f0_12 sf
(\()S
f6_12 sf
(F)S
f0_12 sf
(\) + )S
f6_12 sf
(Weight)S
f0_12 sf
(\()S
f6_12 sf
(G)S
f0_12 sf
(\) )S
cF f1_12 sf
(\243)S
sf
( )S
f6_12 sf
(L)S
f0_12 sf
(.)S
96 633 :M
-.044(Steps 1 and 2 are just like in RSA-S1.)A
96 648 :M
.248 .025(In Step 3, the smart card obtains )J
f6_12 sf
.087(y)A
f6_10 sf
0 3 rm
.082(p)A
0 -3 rm
f0_12 sf
.109 .011( := )J
f6_12 sf
.087(y)A
f0_12 sf
.178 .018( mod )J
f6_12 sf
.098(p)A
f0_12 sf
.204 .02( as the product of the )J
f6_12 sf
.076(z)A
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.231 .023(\325s for which )J
f6_12 sf
.054(f)A
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.145 .014( =)J
79 663 :M
.898 .09(1, and )J
f6_12 sf
.4(y)A
f6_10 sf
0 3 rm
.375(q)A
0 -3 rm
f0_12 sf
.503 .05( := )J
f6_12 sf
.4(y)A
f0_12 sf
.82 .082( mod )J
f6_12 sf
.45(q)A
f0_12 sf
.939 .094( as the product of the )J
f6_12 sf
.35(z)A
f6_10 sf
0 3 rm
.208(i)A
0 -3 rm
f0_12 sf
1.064 .106(\325s for which )J
f6_12 sf
.45(g)A
f6_10 sf
0 3 rm
.208(i)A
0 -3 rm
f0_12 sf
1.075 .107( = 1. Finally, it applies the)J
79 678 :M
-.104(Chinese remainder theorem.)A
79 710 :M
f3_14 sf
.25(2.3)A
147 710 :M
-.566(Other Variants)A
79 733 :M
f0_12 sf
2.417 .242(First, one can also use the Chinese remainder theorem to speed up RSA-S1: The)J
79 748 :M
-.006(computation is exactly like that in RSA-S2 when )A
f6_12 sf
(F)S
f0_12 sf
( and )S
f6_12 sf
(G)S
f0_12 sf
-.006( are equal. However, the security)A
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(schunter; page: 4 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
289 44 :M
f0_10 sf
.417 .042(\320 4 \320)J
79 89 :M
f0_12 sf
.153 .015(considerations are different for the two versions. Anyway, since the difference to RSA-S1)J
79 104 :M
-.075(is only in the local computations of the smart card, the scheme is just as secure as RSA-S1.)A
79 125 :M
-.052(So-called non-binary variants of RSA-S1 and RSA-S2 are obtained if the coefficients )A
f6_12 sf
(f)S
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.071( and)A
79 140 :M
f6_12 sf
.255(g)A
f6_10 sf
0 3 rm
.118(i)A
0 -3 rm
f0_12 sf
.75 .075( may have other values than just 0 and 1 [MaKI_90, KaSh_90]. Of course, the values)J
79 155 :M
-.107(must still be very small integers so that the smart card needs just a few multiplications.)A
79 176 :M
-.102(The remaining protocols vary the choice of the set of exponents, )A
f6_12 sf
-.184(D)A
f0_12 sf
(:)S
96 191 :M
1.049 .105(In [LaYH_91], )J
f6_12 sf
.412(D)A
f0_12 sf
.724 .072( is chosen so that the server can compute all the powers )J
f6_12 sf
.253(x)A
f6_10 sf
0 -4 rm
.238(d)A
0 4 rm
f6_9 sf
0 -2 rm
.119(i)A
0 2 rm
f0_12 sf
.52 .052( mod )J
f6_12 sf
(n)S
79 206 :M
f0_12 sf
-.041(more easily with one addition chain. \(This is the second proposal in that paper; the first one)A
79 221 :M
-.1(only changes the local computation of the server.\))A
96 236 :M
.345 .035(Last but not least, the only variant which makes a real security difference is that from)J
79 251 :M
-.006([QuSo_91]: There, one and the same fixed set )A
f6_12 sf
(D)S
f0_12 sf
-.005( is used for all smart cards. This scheme is)A
79 266 :M
.408 .041(obviously secure against passive attacks, i.e., attacks where the server always sends back)J
79 281 :M
1.136 .114(correct data: The only information that the smart card gives the server is )J
f6_12 sf
.4(n)A
f0_12 sf
.333 .033(, )J
f6_12 sf
.355(x)A
f0_12 sf
.975 .098(, and the)J
79 296 :M
.482 .048(signature, just as if it computed the signature alone. Unfortunately, a set )J
f6_12 sf
.235(D)A
f0_12 sf
.565 .056( which allows)J
79 311 :M
-.02(every possible secret exponent )A
f6_12 sf
(d)S
f0_12 sf
-.02( to be expressed as in Formula \(1\) with a vector )A
f6_12 sf
(F)S
f0_12 sf
-.022( of small)A
79 326 :M
.232 .023(weight is larger than special sets for special exponents. This increases the communication)J
79 341 :M
.304 .03(overhead. In the example in [QuSo_91], |)J
f6_12 sf
.133(D)A
f0_12 sf
.272 .027(| = 832 for 512-bit exponents. With a standard)J
79 356 :M
1.574 .157(ISO interface, i.e., 9600 bit/s, the communication would take more than 40 seconds.)J
79 371 :M
-.041(Hence, in spite of its security advantage, this variant cannot be used in several applications,)A
79 386 :M
-.088(and it still makes sense to consider the other variants further.)A
79 426 :M
f3_18 sf
(3)S
147 426 :M
-.39(Passive Attacks)A
79 452 :M
f0_12 sf
.581 .058(By \322passive attacks\323 we mean attacks where the server never deviates from its protocol,)J
79 467 :M
.77 .077(i.e., it sends back the correct powers )J
f6_12 sf
.252(x)A
f6_10 sf
0 -4 rm
.237(d)A
0 4 rm
f6_9 sf
0 -2 rm
.118(i)A
0 2 rm
f0_12 sf
.518 .052( mod )J
f6_12 sf
.284(n)A
f0_12 sf
.928 .093(. Hence, no measures to prevent passive)J
79 482 :M
-.064(attacks are possible.)A
79 514 :M
f3_14 sf
.25(3.1)A
147 514 :M
-.465(Passive Attack on RSA-S1)A
79 537 :M
f0_12 sf
.232 .023(It is stated in [MaKI_90] that RSA-S1 could only be broken by searching the true value )J
f6_12 sf
(d)S
79 552 :M
f0_12 sf
-.115(via the exhaustion of)A
274 580 :M
f1_18 sf
(\345)S
274 591 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=1)A
277 564 :M
f6_10 sf
(L)S
287 578 :M
f0_14 sf
1.885(\312)A
f1_12 sf
0 7 rm
1.615 .162( )J
0 -7 rm
294 585 :M
(\350)S
294 575 :M
(\346)S
309 585 :M
( )S
309 585 :M
(\370)S
309 575 :M
(\366)S
299 570 :M
f6_12 sf
(M)S
302 584 :M
(i)S
500 578 :M
f0_12 sf
(\(2\))S
79 605 :M
-.032(possibilities. \(That is, all the possible vectors )A
f6_12 sf
-.053(F)A
f0_12 sf
-.034( of weight )A
cF f1_12 sf
-.034(\243)A
sf
-.034( )A
f6_12 sf
(L)S
f0_12 sf
-.05(.\))A
96 620 :M
-.116(The following attack shows that the search space can be considerably smaller:)A
79 641 :M
.18 .018(\(1\) For a message )J
f6_12 sf
.063(x)A
f0_12 sf
.193 .019( where the signature )J
f6_12 sf
.063(y)A
f0_12 sf
.065 .007( = )J
f6_12 sf
.063(x)A
f6_10 sf
0 -4 rm
.059(d)A
0 4 rm
f0_12 sf
.199 .02( is known, one first computes all the values)J
96 656 :M
f6_12 sf
.254(z)A
f6_10 sf
0 3 rm
.151(i)A
0 -3 rm
f0_12 sf
.302 .03( = )J
f6_12 sf
.29(x)A
f6_10 sf
0 -4 rm
.272(d)A
0 4 rm
f6_9 sf
0 -2 rm
.136(i)A
0 2 rm
f0_12 sf
(.)S
79 671 :M
-.068(\(2\) Next, one computes all the products)A
244 697 :M
f6_12 sf
.082(y)A
f6_10 sf
0 3 rm
.094(F)A
0 -3 rm
f0_12 sf
.103 .01( := )J
f1_18 sf
0 2 rm
(\325)S
0 -2 rm
273 710 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=1)A
275 683 :M
f6_10 sf
(M)S
287 697 :M
f0_14 sf
.332(\312)A
f6_12 sf
.443(z)A
f6_10 sf
0 3 rm
.417 .042(i )J
0 -3 rm
0 -4 rm
.264(f)A
0 4 rm
f6_9 sf
0 -2 rm
.237(i)A
0 2 rm
f0_12 sf
1.038 .104( mod )J
f6_12 sf
(n)S
96 724 :M
f0_12 sf
.064 .006(for vectors )J
f6_12 sf
(F)S
f0_12 sf
.052 .005( of only half the weight, i.e., with )J
f6_12 sf
.021(Weight)A
f0_12 sf
(\()S
f6_12 sf
(F)S
f0_12 sf
.026 .003(\) )J
cF f1_12 sf
.003(\243)A
sf
.026 .003( )J
f1_10 sf
(\351)S
f6_12 sf
(L)S
f0_12 sf
(/2)S
f1_10 sf
(\371)S
f0_12 sf
(.)S
79 739 :M
-.116(\(3\) One also computes the values)A
245 754 :M
f6_12 sf
.08(y*)A
f6_10 sf
0 3 rm
.087(F)A
0 -3 rm
f0_12 sf
.095 .009( := )J
f6_12 sf
.075(y)A
f0_12 sf
( )S
f6_12 sf
.075(y)A
f6_10 sf
0 3 rm
.087(F)A
0 -3 rm
f0_10 sf
0 -4 rm
.071(\3201)A
0 4 rm
f0_12 sf
.155 .015( mod )J
f6_12 sf
(n)S
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(schunter; page: 5 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
289 44 :M
f0_10 sf
.417 .042(\320 5 \320)J
96 89 :M
f0_12 sf
-.055(for the same vectors )A
f6_12 sf
-.085(F)A
f0_12 sf
(.)S
79 104 :M
.364 .036(\(4\) The values )J
f6_12 sf
.121(y)A
f6_10 sf
0 3 rm
.139(F)A
0 -3 rm
f0_12 sf
.329 .033( are sorted, and the values )J
f6_12 sf
.128(y*)A
f6_10 sf
0 3 rm
.139(F)A
0 -3 rm
f0_12 sf
.417 .042( compared to them. Whenever a match is)J
96 119 :M
1.18 .118(found, i.e., )J
f6_12 sf
.38(y)A
f6_10 sf
0 3 rm
.435(F)A
0 -3 rm
f0_9 sf
0 6 rm
.321(1)A
0 -6 rm
f0_12 sf
.395 .04( = )J
f6_12 sf
.404(y*)A
f6_10 sf
0 3 rm
.435(F)A
0 -3 rm
f0_9 sf
0 6 rm
.321(2)A
0 -6 rm
f0_12 sf
.721 .072(, and )J
f6_12 sf
.522(F)A
f0_10 sf
0 3 rm
.356(1)A
0 -3 rm
f0_12 sf
.665 .066( and )J
f6_12 sf
.522(F)A
f0_10 sf
0 3 rm
.356(2)A
0 -3 rm
f0_12 sf
.956 .096( are disjoint \(i.e., they do not have a 1 at the)J
96 134 :M
-.093(same position\), the vector )A
f6_12 sf
-.145(F)A
f0_10 sf
0 3 rm
-.099(1)A
0 -3 rm
f0_12 sf
-.084( + )A
f6_12 sf
-.145(F)A
f0_10 sf
0 3 rm
-.099(2)A
0 -3 rm
f0_12 sf
-.088( is a candidate for the true secret vector )A
f6_12 sf
-.145(F)A
f0_12 sf
(.)S
79 149 :M
-.032(\(5\) If )A
f6_12 sf
-.058(F)A
f0_12 sf
-.039( is not uniquely determined by this procedure, one can test the remaining candidates)A
96 164 :M
.195 .019(by use of a second message )J
f6_12 sf
.049(x')A
f0_12 sf
(.)S
79 185 :M
.174 .017(The reason why this works is that the true vector )J
f6_12 sf
.081(F)A
f0_12 sf
.162 .016( can be represented as the sum )J
f6_12 sf
.081(F)A
f0_10 sf
0 3 rm
.055(1)A
0 -3 rm
f0_12 sf
.061 .006( + )J
f6_12 sf
.081(F)A
f0_10 sf
0 3 rm
(2)S
0 -3 rm
79 200 :M
f0_12 sf
-.055(of two disjoint vectors of weight )A
cF f1_12 sf
-.055(\243)A
sf
-.055( )A
f1_10 sf
(\351)S
f6_12 sf
-.078(L)A
f0_12 sf
-.055(/2)A
f1_10 sf
(\371)S
f0_12 sf
-.056(. The equation for the signature is)A
174 226 :M
f6_12 sf
.177(y)A
f0_12 sf
.184 .018( = )J
f1_18 sf
0 2 rm
(\325)S
0 -2 rm
194 239 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=1)A
196 212 :M
f6_10 sf
(M)S
208 226 :M
f0_14 sf
.381(\312)A
f6_12 sf
.508(z)A
f6_10 sf
0 3 rm
.479 .048(i )J
0 -3 rm
0 -4 rm
.302(f)A
0 4 rm
f6_9 sf
0 -2 rm
.272(i)A
0 2 rm
f0_12 sf
.454 .045(  =  )J
f1_18 sf
0 2 rm
(\325)S
0 -2 rm
252 239 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=1)A
254 212 :M
f6_10 sf
(M)S
266 226 :M
f0_14 sf
.341(\312)A
f6_12 sf
.455(z)A
f6_10 sf
0 3 rm
.428 .043(i )J
0 -3 rm
0 -4 rm
.271(f)A
0 4 rm
f0_9 sf
0 -2 rm
.329(1,)A
0 2 rm
f6_9 sf
0 -2 rm
.386 .039(i )J
0 2 rm
f0_10 sf
0 -4 rm
.661 .066(+ )J
0 4 rm
f6_10 sf
0 -4 rm
.271(f)A
0 4 rm
f0_9 sf
0 -2 rm
.329(2,)A
0 2 rm
f6_9 sf
0 -2 rm
.244(i)A
0 2 rm
f0_12 sf
.406 .041(  =  )J
f6_12 sf
.519(y)A
f6_10 sf
0 3 rm
.595(F)A
0 -3 rm
f0_9 sf
0 6 rm
.438(1)A
0 -6 rm
f6_12 sf
.519(y)A
f6_10 sf
0 3 rm
.595(F)A
0 -3 rm
f0_9 sf
0 6 rm
.438(2)A
0 -6 rm
f0_12 sf
1.065 .106( mod )J
f6_12 sf
.584(n)A
f0_12 sf
(.)S
79 259 :M
(Thus)S
218 259 :M
f6_12 sf
.182(y)A
f6_10 sf
0 3 rm
.209(F)A
0 -3 rm
f0_9 sf
0 6 rm
.154(1)A
0 -6 rm
f0_12 sf
.143 .014(  =  )J
f6_12 sf
.182(y)A
f0_12 sf
.093 .009( )J
f6_12 sf
.182(y)A
f6_10 sf
0 3 rm
.209(F)A
0 -3 rm
f0_9 sf
0 6 rm
.154(2)A
0 -6 rm
f0_10 sf
0 -4 rm
.171(\3201)A
0 4 rm
f0_12 sf
.143 .014(  =  )J
f6_12 sf
.194(y*)A
f6_10 sf
0 3 rm
.209(F)A
0 -3 rm
f0_9 sf
0 6 rm
.154(2)A
0 -6 rm
f0_12 sf
.374 .037( mod )J
f6_12 sf
.206(n)A
f0_12 sf
(.)S
79 284 :M
f3_12 sf
-.136(Complexity.)A
f0_12 sf
-.121( The number of values )A
f6_12 sf
-.128(y)A
f6_10 sf
0 3 rm
-.147(F)A
0 -3 rm
f0_12 sf
-.132( is)A
256 312 :M
f6_12 sf
.297(N)A
f0_12 sf
.26 .026( := )J
285 314 :M
f1_18 sf
(\345)S
285 325 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=0)A
281 297 :M
f1_9 sf
.129(\351)A
f6_10 sf
.207(L)A
f0_10 sf
.145(/2)A
f1_9 sf
(\371)S
298 312 :M
f0_14 sf
1.885(\312)A
f1_12 sf
0 7 rm
1.615 .162( )J
0 -7 rm
305 319 :M
(\350)S
305 309 :M
(\346)S
320 319 :M
( )S
320 319 :M
(\370)S
320 309 :M
(\366)S
310 304 :M
f6_12 sf
(M)S
313 318 :M
(i)S
325 312 :M
f0_12 sf
.909 .091( ,)J
79 339 :M
-.028(and they can be computed with little more than one multiplication on average \(if one stores)A
79 354 :M
.8 .08(intermediate results\). The same holds for the values )J
f6_12 sf
.24(y*)A
f6_10 sf
0 3 rm
.259(F)A
0 -3 rm
f0_12 sf
.695 .069(, if one starts by computing the)J
79 369 :M
-.01(values )A
f6_12 sf
(z)S
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_10 sf
0 -4 rm
(\3201)S
0 4 rm
f0_12 sf
-.01(. Sorting and searching take about )A
f6_12 sf
(N)S
f0_12 sf
( log\()S
f6_12 sf
(N)S
f0_12 sf
-.011(\) operations.)A
96 384 :M
-.028(All this is considerably less than the number in Formula \(2\) \(a bit larger than the square)A
79 399 :M
.136(root\).)A
79 431 :M
f3_14 sf
.25(3.2)A
147 431 :M
-.465(Passive Attack on RSA-S2)A
79 454 :M
f0_12 sf
-.036(It is said in [MaKI_90] that RSA-S2 could only be broken by searching the true value )A
f6_12 sf
(d)S
f0_12 sf
-.043( via)A
79 469 :M
-.103(the exhaustion of)A
228 497 :M
f1_18 sf
(\345)S
228 508 :M
f6_10 sf
-.087(j)A
f0_10 sf
-.331(=1)A
231 481 :M
f6_10 sf
(L)S
241 495 :M
f0_14 sf
.786(\312)A
f1_18 sf
0 2 rm
(\345)S
0 -2 rm
248 508 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=0)A
253 481 :M
f6_10 sf
(j)S
261 495 :M
f0_14 sf
1.885(\312)A
f1_12 sf
0 7 rm
1.615 .162( )J
0 -7 rm
268 502 :M
(\350)S
268 492 :M
(\346)S
283 502 :M
( )S
283 502 :M
(\370)S
283 492 :M
(\366)S
273 487 :M
f6_12 sf
(M)S
276 501 :M
(i)S
288 502 :M
f1_12 sf
( )S
288 502 :M
(\350)S
288 492 :M
(\346)S
305 502 :M
( )S
305 502 :M
(\370)S
305 492 :M
(\366)S
294 487 :M
f6_12 sf
(M)S
293 501 :M
-.176(j)A
f0_12 sf
-.316(\320)A
f6_12 sf
(i)S
310 495 :M
f0_12 sf
.044 .004(  >  )J
f1_12 sf
0 7 rm
( )S
0 -7 rm
329 502 :M
(\350)S
329 492 :M
(\346)S
350 502 :M
( )S
350 502 :M
(\370)S
350 492 :M
(\366)S
337 487 :M
f6_12 sf
(M)S
334 501 :M
(L/2)S
355 485 :M
f0_10 sf
(2)S
500 495 :M
f0_12 sf
(\(3\))S
79 522 :M
.436 .044(possibilities. \(That is, all combinations of vectors )J
f6_12 sf
.164(F)A
f0_12 sf
.209 .021( and )J
f6_12 sf
.194(G)A
f0_12 sf
.278 .028( of total weight )J
cF f1_12 sf
.028(\243)A
sf
.278 .028( )J
f6_12 sf
.149(L)A
f0_12 sf
.419 .042(.\) How two)J
79 537 :M
-.078(vectors are actually checked for correctness is described in [KaSh_90].)A
96 552 :M
.965 .096(Again, we can reduce the search space considerably: One can search for one of the)J
79 567 :M
-.042(vectors )A
f6_12 sf
-.065(F)A
f0_12 sf
-.035( or )A
f6_12 sf
-.077(G)A
f0_12 sf
-.042( individually. Clearly, one of them must be of weight )A
cF f1_12 sf
-.042(\243)A
sf
-.042( )A
f6_12 sf
-.059(L)A
f0_12 sf
-.055(/2.)A
79 588 :M
.18 .018(\(1\) For a message )J
f6_12 sf
.063(x)A
f0_12 sf
.193 .019( where the signature )J
f6_12 sf
.063(y)A
f0_12 sf
.065 .007( = )J
f6_12 sf
.063(x)A
f6_10 sf
0 -4 rm
.059(d)A
0 4 rm
f0_12 sf
.199 .02( is known, one first computes all the values)J
96 603 :M
f6_12 sf
.254(z)A
f6_10 sf
0 3 rm
.151(i)A
0 -3 rm
f0_12 sf
.302 .03( = )J
f6_12 sf
.29(x)A
f6_10 sf
0 -4 rm
.272(d)A
0 4 rm
f6_9 sf
0 -2 rm
.136(i)A
0 2 rm
f0_12 sf
(.)S
79 618 :M
-.068(\(2\) Next, one computes all the products)A
244 644 :M
f6_12 sf
.082(y)A
f6_10 sf
0 3 rm
.094(F)A
0 -3 rm
f0_12 sf
.103 .01( := )J
f1_18 sf
0 2 rm
(\325)S
0 -2 rm
273 657 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=1)A
275 630 :M
f6_10 sf
(M)S
287 644 :M
f0_14 sf
.332(\312)A
f6_12 sf
.443(z)A
f6_10 sf
0 3 rm
.417 .042(i )J
0 -3 rm
0 -4 rm
.264(f)A
0 4 rm
f6_9 sf
0 -2 rm
.237(i)A
0 2 rm
f0_12 sf
1.038 .104( mod )J
f6_12 sf
(n)S
96 671 :M
f0_12 sf
-.005(for vectors )A
f6_12 sf
(F)S
f0_12 sf
( with )S
f6_12 sf
(Weight)S
f0_12 sf
(\()S
f6_12 sf
(F)S
f0_12 sf
(\) )S
cF f1_12 sf
(\243)S
sf
( )S
f6_12 sf
(L)S
f0_12 sf
(/2.)S
79 686 :M
.719 .072(\(3\) One also computes the values )J
f6_12 sf
.219(v)A
f6_10 sf
0 3 rm
.251(F)A
0 -3 rm
f0_12 sf
.549 .055( := gcd\()J
f6_12 sf
.219(y)A
f6_10 sf
0 3 rm
.251(F)A
0 -3 rm
f0_12 sf
.215 .021( \320 )J
f6_12 sf
.219(y)A
f0_12 sf
.206 .021(, )J
f6_12 sf
.247(n)A
f0_12 sf
.515 .052(\). If one of them is neither 1 nor )J
f6_12 sf
.247(n)A
f0_12 sf
(,)S
96 701 :M
-.058(one has factored the modulus.)A
79 716 :M
.12 .012(\(4\) Otherwise, at least one value )J
f6_12 sf
(v)S
f6_10 sf
0 3 rm
(F)S
0 -3 rm
f0_12 sf
.106 .011( \(and usually not many\) will be )J
f6_12 sf
(n)S
f0_12 sf
.095 .009(, and either the true )J
f6_12 sf
(F)S
96 731 :M
f0_12 sf
.081 .008(or the true )J
f6_12 sf
.056(G)A
f0_12 sf
.12 .012( must be among the corresponding vectors. Normally, one will find )J
f6_12 sf
(F)S
f0_12 sf
.036 .004( = )J
f6_12 sf
(G)S
96 746 :M
f0_12 sf
-.026(in this case.)A
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(schunter; page: 6 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
289 44 :M
f0_10 sf
.417 .042(\320 6 \320)J
79 89 :M
f0_12 sf
.203 .02(The reason why this works is that for the true )J
f6_12 sf
.099(F)A
f0_12 sf
.067 .007(, )J
f6_12 sf
.072(y)A
f6_10 sf
0 3 rm
.082(F)A
0 -3 rm
f0_12 sf
.075 .007( = )J
f6_12 sf
.072(y)A
f6_10 sf
0 3 rm
.084 .008(p )J
0 -3 rm
f0_12 sf
.11 .011(= )J
f6_12 sf
.072(y)A
f0_12 sf
.148 .015( mod )J
f6_12 sf
.081(p)A
f0_12 sf
.162 .016(, and for the true )J
f6_12 sf
.117(G)A
f0_12 sf
.067 .007(, )J
f6_12 sf
.072(y)A
f6_10 sf
0 3 rm
(G)S
0 -3 rm
79 104 :M
f0_12 sf
.142 .014(= )J
f6_12 sf
.093(y)A
f6_10 sf
0 3 rm
.109 .011(q )J
0 -3 rm
f0_12 sf
.142 .014(= )J
f6_12 sf
.093(y)A
f0_12 sf
.191 .019( mod )J
f6_12 sf
.105(q)A
f0_12 sf
.242 .024(. Thus, not all the values )J
f6_12 sf
.093(v)A
f6_10 sf
0 3 rm
.107(F)A
0 -3 rm
f0_12 sf
.293 .029( can be 1. Furthermore, except when )J
f6_12 sf
.128(F)A
f0_12 sf
.097 .01( = )J
f6_12 sf
.151(G)A
f0_12 sf
.087 .009(, )J
f6_12 sf
.093(y)A
f6_10 sf
0 3 rm
(F)S
0 -3 rm
79 119 :M
f0_12 sf
.485 .049(will usually not be congruent )J
f6_12 sf
.145(y)A
f0_12 sf
.297 .03( mod )J
f6_12 sf
.163(q)A
f0_12 sf
.432 .043(, too, and vice versa. In these cases, one can factor)J
79 134 :M
.235 .023(the modulus according to Step \(3\). Otherwise, one has usually found both )J
f6_12 sf
.093(F)A
f0_12 sf
.119 .012( and )J
f6_12 sf
.11(G)A
f0_12 sf
.158 .016(. In the)J
79 149 :M
.643 .064(remaining cases, a very small search space will remain, and anyway, it is enough for an)J
79 164 :M
-.095(attack to succeed in most cases.)A
79 185 :M
f3_12 sf
-.136(Complexity.)A
f0_12 sf
-.121( The number of values )A
f6_12 sf
-.128(y)A
f6_10 sf
0 3 rm
-.147(F)A
0 -3 rm
f0_12 sf
-.132( is)A
257 211 :M
f6_12 sf
.297(N)A
f0_12 sf
.26 .026( := )J
283 213 :M
f1_18 sf
(\345)S
283 224 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=0)A
283 197 :M
f6_10 sf
.276(L)A
f0_10 sf
.386(/2)A
296 211 :M
f0_14 sf
1.885(\312)A
f1_12 sf
0 7 rm
1.615 .162( )J
0 -7 rm
303 218 :M
(\350)S
303 208 :M
(\346)S
318 218 :M
( )S
318 218 :M
(\370)S
318 208 :M
(\366)S
308 203 :M
f6_12 sf
(M)S
311 217 :M
(i)S
323 211 :M
f0_12 sf
.909 .091( ,)J
79 238 :M
.444 .044(and, as above, they can be computed with a bit more than one multiplication on average.)J
79 253 :M
.093 .009(Since the greatest common divisor takes more time, one should initially compute it for the)J
79 268 :M
-.016(product of several differences \()A
f6_12 sf
(y)S
f6_10 sf
0 3 rm
(F)S
0 -3 rm
f0_12 sf
( \320 )S
f6_12 sf
(y)S
f0_12 sf
(\).)S
96 283 :M
1.421 .142(Again, the complexity is not much more than the square root of that described in)J
79 298 :M
.169 .017(Formula \(3\).)J
79 330 :M
f3_14 sf
.25(3.3)A
147 330 :M
-.501(Passive Attacks on Other Variants)A
79 353 :M
f0_12 sf
-.013(The attacks described easily generalize to the non-binary variants of RSA-S1 and RSA-S2.)A
79 368 :M
-.057(Furthermore, the protocol from [LaYH_91] is just a special case of the original protocols as)A
79 383 :M
1.135 .114(far as security is concerned. Hence the attacks work for all known variants except the)J
79 398 :M
-.037(provably secure one from [QuSo_91].)A
79 438 :M
f3_18 sf
(4)S
147 438 :M
-.341(Active Attacks)A
79 464 :M
f0_12 sf
.007 .001(In active attacks, the server deviates from its protocol by sending back a wrong vector )J
f6_12 sf
(Z')S
f0_12 sf
( =)S
79 479 :M
.264(\()A
f6_12 sf
.239(z')A
f0_10 sf
0 3 rm
.33(1)A
0 -3 rm
f0_12 sf
.991 .099(,\311, )J
f6_12 sf
.239(z')A
f6_10 sf
0 3 rm
.55(M)A
0 -3 rm
f0_12 sf
1.015 .101(\), instead of the powers )J
f6_12 sf
.308(z)A
f6_10 sf
0 3 rm
.183(i)A
0 -3 rm
f0_12 sf
.367 .037( = )J
f6_12 sf
.352(x)A
f6_10 sf
0 -4 rm
.33(d)A
0 4 rm
f6_9 sf
0 -2 rm
.165(i)A
0 2 rm
f0_12 sf
.722 .072( mod )J
f6_12 sf
.396(n)A
f0_12 sf
1.092 .109(. On the one hand, this makes active)J
79 494 :M
.007 .001(attacks more powerful, and they usually result in a total break of the system in a few steps.)J
79 509 :M
.653 .065(On the other hand, active attacks can often be detected or even prevented, in contrast to)J
79 524 :M
-.029(passive ones. Hence, the most important thing to know about active attacks is not how they)A
79 539 :M
-.061(work, but whether one exists and which countermeasures are effective.)A
79 571 :M
f3_14 sf
.25(4.1)A
147 571 :M
-.368(Description of Attacks)A
79 594 :M
f3_12 sf
.735 .073(Attacks on RSA-S1. )J
f0_12 sf
.667 .067(As mentioned, we describe the first active attack on RSA-S1. The)J
79 609 :M
.405 .04(basic idea is to use Jacobi symbols: If the server sends back any vector )J
f6_12 sf
.116(Z')A
f0_12 sf
.176 .018( = \()J
f6_12 sf
.091(z')A
f0_10 sf
0 3 rm
.126(1)A
0 -3 rm
f0_12 sf
.378 .038(,\311, )J
f6_12 sf
.091(z')A
f6_10 sf
0 3 rm
.21(M)A
0 -3 rm
f0_12 sf
.176(\),)A
79 624 :M
-.114(then the smart card outputs)A
239 650 :M
f6_12 sf
.223(y')A
f0_12 sf
.379 .038( := )J
f1_18 sf
0 2 rm
(\325)S
0 -2 rm
266 663 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=1)A
268 636 :M
f6_10 sf
(M)S
280 650 :M
f0_14 sf
.426(\312)A
f6_12 sf
.44(z')A
f6_10 sf
0 3 rm
.535 .054(i )J
0 -3 rm
0 -4 rm
.338(f)A
0 4 rm
f6_9 sf
0 -2 rm
.304(i)A
0 2 rm
f0_12 sf
1.025 .102(  mod )J
f6_12 sf
.73(n)A
f0_12 sf
(.)S
79 677 :M
.422 .042(The server can compute Jacobi symbols modulo )J
f6_12 sf
.124(n)A
f0_12 sf
.31 .031(. Let \(\3201\))J
f6_10 sf
0 -4 rm
.092(c)A
0 4 rm
f0_12 sf
.204 .02( be that of )J
f6_12 sf
.082(y')A
f0_12 sf
.214 .021(, and let )J
f6_12 sf
.083(I)A
f0_12 sf
.255 .025( be the)J
79 692 :M
1.581 .158(subset of indices )J
f6_12 sf
.305(i)A
f0_12 sf
1.466 .147( where the Jacobi symbols of )J
f6_12 sf
.331(z')A
f6_10 sf
0 3 rm
.254(i)A
0 -3 rm
f0_12 sf
1.587 .159( are \3201. Since Jacobi symbols are)J
79 707 :M
-.095(multiplicative, the server knows)A
197 733 :M
.227(\(\3201\))A
f6_10 sf
0 -4 rm
.201(c)A
0 4 rm
f0_12 sf
.252 .025( = )J
f0_14 sf
.211(\()A
f6_12 sf
0 -7 rm
.358(y')A
0 7 rm
241 739 :M
(n)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
239 729.24 -.24 .24 249.24 729 .24 239 729 @a
249 733 :M
f0_14 sf
.11(\))A
f0_12 sf
.131 .013( = )J
f1_18 sf
0 2 rm
(\325)S
0 -2 rm
268 746 :M
f6_10 sf
-.087(i)A
f0_10 sf
-.331(=1)A
270 719 :M
f6_10 sf
(M)S
282 733 :M
f0_14 sf
1.309(\312\()A
f6_12 sf
0 -8 rm
1.16(z')A
0 8 rm
f6_10 sf
0 -5 rm
(i)S
0 5 rm
297 739 :M
f6_12 sf
(n)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
294 729.24 -.24 .24 306.24 729 .24 294 729 @a
306 733 :M
f0_14 sf
.151 .015(\) )J
f6_10 sf
0 -9 rm
.062(f)A
0 9 rm
f6_9 sf
0 -6 rm
.056(i)A
0 6 rm
f0_12 sf
.103 .01(  = )J
f1_18 sf
0 2 rm
(\325)S
0 -2 rm
337 746 :M
f6_10 sf
(i)S
f1_10 sf
-.126(\316)A
f6_10 sf
(I)S
351 733 :M
f0_14 sf
.527(\312)A
f0_12 sf
2.307 .231(\(\3201\) )J
f6_10 sf
0 -6 rm
.418(f)A
0 6 rm
f6_9 sf
0 -3 rm
.376(i)A
0 3 rm
f0_12 sf
(.)S
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(schunter; page: 7 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
289 44 :M
f0_10 sf
.417 .042(\320 7 \320)J
79 91 :M
f0_12 sf
-.099(This yields)A
251 91 :M
f6_12 sf
(c)S
f0_12 sf
( = )S
f1_18 sf
0 2 rm
(\345)S
0 -2 rm
269 104 :M
f6_10 sf
.215(i)A
f1_10 sf
.552(\316)A
f6_10 sf
.258(I)A
f0_14 sf
0 -13 rm
.271(\312)A
0 13 rm
f0_12 sf
0 -13 rm
.211 .021( )J
0 13 rm
f6_12 sf
0 -13 rm
.258(f)A
0 13 rm
f6_10 sf
0 -10 rm
.215(i)A
0 10 rm
f0_12 sf
0 -13 rm
1.083 .108( mod 2.)J
0 13 rm
79 118 :M
.024 .002(Thus from each vector )J
f6_12 sf
(Z')S
f0_12 sf
.023 .002(, the server obtains one linear equation about )J
f6_12 sf
(F)S
f0_12 sf
.021 .002( in GF\(2\). As long)J
79 133 :M
-.016(as the server sends back correct data, this does not matter much, since it always obtains the)A
79 148 :M
.179 .018(same equation. However, in an active attack, it can choose just one )J
f6_12 sf
.038(z')A
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.208 .021( with Jacobi symbol)J
79 163 :M
.191 .019(\3201, and the rest with Jacobi symbol +1. Then it obtains the value of )J
f6_12 sf
(f)S
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.234 .023( directly. Thus, after)J
79 178 :M
f6_12 sf
-.065(M)A
f0_12 sf
-.03( rounds of this attack, the server knows )A
f6_12 sf
(F)S
f0_12 sf
-.03( and therefore )A
f6_12 sf
(d)S
f0_12 sf
(.)S
96 193 :M
.641 .064(If )J
f6_12 sf
.506(L)A
f0_12 sf
1.113 .111( is much smaller than )J
f6_12 sf
.758(M)A
f0_12 sf
1.116 .112(, the server needs less than )J
f6_12 sf
.758(M)A
f0_12 sf
1.172 .117( rounds if it chooses the)J
79 208 :M
1.375 .137(vectors )J
f6_12 sf
.438(Z)A
f0_12 sf
1.102 .11( so that the resulting linear equations form the parity check matrix of a code)J
79 223 :M
-.024(correcting up to )A
f6_12 sf
(L)S
f0_12 sf
-.025( errors.)A
96 238 :M
.218 .022(If the server is not likely to meet the same smart card often enough, it can also use the)J
79 253 :M
-.107(information obtained from some rounds of the active attack to speed up the passive attack.)A
79 274 :M
.892 .089(A far more elegant attack has been found recently [Ande_92]: The server sends back a)J
79 289 :M
.297 .03(selection of small primes \(or a blinded version thereof\), factors the product that the smart)J
79 304 :M
.927 .093(card outputs \(which is < )J
f6_12 sf
.35(n)A
f0_12 sf
.324 .032( if )J
f6_12 sf
.583(M)A
f0_12 sf
.832 .083( is not too large\) by trial division, and thus finds out )J
f6_12 sf
.428(F)A
f0_12 sf
(.)S
79 319 :M
.153 .015(However \(see Section 4.2\), this elegant attack is easily prevented by countermeasures that)J
79 334 :M
.789 .079(were previously proposed for other protocol variants, and which are needed against our)J
79 349 :M
.533 .053(attack, too, whereas our attack needs additional countermeasures. Hence, in practice, the)J
79 364 :M
-.111(additional elegance makes no difference, and the less elegant attack is even more dangerous.)A
79 385 :M
f3_12 sf
-.058(The Attack on RSA-S2. )A
f0_12 sf
-.053(The attack on RSA-S2 from [ShKa_90] uses the following fact: If)A
79 400 :M
.886 .089(the server changes the sign of just one of the values )J
f6_12 sf
.271(z)A
f6_10 sf
0 3 rm
.161(i)A
0 -3 rm
f0_12 sf
.546 .055(, and if )J
f6_12 sf
.194(f)A
f6_10 sf
0 3 rm
.161(i)A
0 -3 rm
f0_12 sf
.318 .032( )J
cF f1_12 sf
.032(\271)A
sf
.318 .032( )J
f6_12 sf
.349(g)A
f6_10 sf
0 3 rm
.161(i)A
0 -3 rm
f0_12 sf
1.059 .106(, then the resulting)J
79 415 :M
.281 .028(value )J
f6_12 sf
.061(y')A
f0_12 sf
.23 .023( and the true signature )J
f6_12 sf
.083(y)A
f0_12 sf
.288 .029( are significantly different square roots of the same value.)J
79 430 :M
.269 .027(The server does not know )J
f6_12 sf
.085(y)A
f0_12 sf
.297 .03(. However, since the public exponent )J
f6_12 sf
.085(e)A
f0_12 sf
.242 .024( is odd, the same holds)J
79 445 :M
.418 .042(for the values )J
f6_12 sf
.109(y')A
f6_10 sf
0 -4 rm
.122(e)A
0 4 rm
f0_12 sf
.257 .026( and )J
f6_12 sf
.147(y)A
f6_10 sf
0 -4 rm
.122(e)A
0 4 rm
f0_12 sf
.153 .015( = )J
f6_12 sf
.275(M)A
f0_12 sf
.462 .046(. In this case, the server can therefore factor the modulus by)J
79 460 :M
.554 .055(computing gcd\()J
f6_12 sf
.069(y')A
f6_10 sf
0 -4 rm
.078(e)A
0 4 rm
f0_12 sf
.092 .009( \320 )J
f6_12 sf
.094(y)A
f6_10 sf
0 -4 rm
.078(e)A
0 4 rm
f0_12 sf
.088 .009(, )J
f6_12 sf
.105(n)A
f0_12 sf
.123(\).)A
79 492 :M
f3_14 sf
.25(4.2)A
147 492 :M
-.407(Discussion of Countermeasures)A
79 515 :M
f3_12 sf
-.094(Why No Active Attack Can Be Ignored. )A
f0_12 sf
-.085(The attitude towards active attacks in [MaKI_90])A
79 530 :M
1.113 .111(was to assume that the server would refrain from them. However, such an assumption)J
79 545 :M
.145 .014(about an untrusted server is unjustified unless such an attack would at least entail a severe)J
79 560 :M
-.07(risk. One risk might be that the owner of the smart card notices that the smart card outputs a)A
79 575 :M
-.038(wrong signature. However, if the owner obtains the signature at all, it obtains it through the)A
79 590 :M
.386 .039(server, and all the attacks described above have a variant where the server can output the)J
79 605 :M
-.075(correct signature.)A
96 620 :M
.302 .03(With the one-round attacks [ShKa_90, Ande_92], this is clear since the server obtains)J
79 635 :M
.809 .081(the secret key at once. With the Jacobi symbol attack, the server chooses )J
f6_12 sf
.282(a)A
f0_12 sf
.878 .088( with Jacobi)J
79 650 :M
-.052(symbol \3201 modulo )A
f6_12 sf
-.057(n)A
f0_12 sf
-.043(. It first computes the correct vector )A
f6_12 sf
-.064(Z)A
f0_12 sf
-.048( and its Jacobi symbols. Where it)A
79 665 :M
-.05(wants the Jacobi symbol changed, it uses)A
224 680 :M
f6_12 sf
.141(z')A
f6_10 sf
0 3 rm
.108(i)A
0 -3 rm
f0_12 sf
.261 .026( := )J
f6_12 sf
.409 .041(a z)J
f6_10 sf
0 3 rm
.108(i)A
0 -3 rm
f0_12 sf
.676 .068(, otherwise )J
f6_12 sf
.141(z')A
f6_10 sf
0 3 rm
.108(i)A
0 -3 rm
f0_12 sf
.392 .039( :=)J
f6_12 sf
.248 .025( z)J
f6_10 sf
0 3 rm
.108(i)A
0 -3 rm
f0_12 sf
(.)S
79 696 :M
-.035(Thus the smart card\325s output )A
f6_12 sf
-.028(y')A
f0_12 sf
-.032( is the product of the real signature )A
f6_12 sf
(y)S
f0_12 sf
-.033( and a value )A
f6_12 sf
(a)S
f6_10 sf
0 -4 rm
(x)S
0 4 rm
f0_12 sf
-.034(, where )A
f6_12 sf
(x)S
79 711 :M
f0_12 sf
cF f1_12 sf
.014(\243)A
sf
.137 .014( )J
f6_12 sf
.115(L)A
f0_12 sf
.16 .016( and )J
f6_12 sf
.091(x)A
f0_12 sf
.24 .024( )J
cF f1_12 sf
.024(\243)A
sf
.24 .024( the number of factors )J
f6_12 sf
.103(a)A
f0_12 sf
.288 .029( used. The server can find out the correct signature by)J
79 726 :M
.553 .055(searching among the few numbers )J
f6_12 sf
.107(y')A
f0_12 sf
.074 .007( )J
f6_12 sf
.162(a)A
f0_10 sf
0 -4 rm
.135(\320)A
0 4 rm
f6_10 sf
0 -4 rm
.12(x)A
0 4 rm
f0_12 sf
.406 .041(. If the Jacobi symbol of \3201 modulo )J
f6_12 sf
.162(n)A
f0_12 sf
.333 .033( is \3201, one)J
79 741 :M
.17 .017(would use )J
f6_12 sf
.059(a)A
f0_12 sf
.141 .014( = \3201. Then the signature )J
f6_12 sf
.052(y)A
f0_12 sf
.081 .008( is )J
cF f1_12 sf
.081 .008(\261)J
sf
f6_12 sf
.039(y')A
f0_12 sf
(.)S
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(schunter; page: 8 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
289 44 :M
f0_10 sf
.417 .042(\320 8 \320)J
79 89 :M
f0_12 sf
-.127(Hence each of the attacks implies that countermeasures in the smart card itself are needed.)A
79 110 :M
f3_12 sf
-.038(How Much Does Signature Checking Help? )A
f0_12 sf
-.032(The easiest countermeasure is that the smart)A
79 125 :M
-.044(card tests the resulting signature and only outputs it if it is correct [QuSo_91]. This restricts)A
79 140 :M
.687 .069(the protocol to RSA with small public exponents. It also means additional computation;)J
79 155 :M
-.091(however, this may be small compared to the )A
f6_12 sf
-.122(L)A
f0_12 sf
-.095( multiplications needed anyway.)A
96 170 :M
1.156 .116(In fact, this measure effectively excludes all one-round attacks, such as [ShKa_90,)J
79 185 :M
(Ande_92].)S
79 206 :M
.842 .084(It was even said in [ShKa_90] that it excludes all conceivable active attacks. However,)J
79 221 :M
-.095(multi-round attacks are still possible.)A
96 236 :M
1.301 .13(For instance, if the server chooses just one )J
f6_12 sf
.284(z')A
f6_10 sf
0 3 rm
.218(i)A
0 -3 rm
f0_12 sf
1.277 .128( wrong each time, like in the Jacobi)J
79 251 :M
-.048(symbol attack, it can infer )A
f6_12 sf
(f)S
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.05( from whether it receives a signature or not. By choosing all the)A
79 266 :M
.713 .071(values )J
f6_12 sf
.13(z')A
f6_10 sf
0 3 rm
.1(i)A
0 -3 rm
f0_12 sf
.325 .033( as )J
cF f1_12 sf
.325 .033(\261)J
sf
f6_12 sf
.168(z)A
f6_10 sf
0 3 rm
.1(i)A
0 -3 rm
f0_12 sf
.6 .06(, the server can obtain any linear equation about )J
f6_12 sf
.264(F)A
f0_12 sf
.624 .062( again. Hence also the)J
79 281 :M
-.069(variant with error-correcting codes still works.)A
96 296 :M
.878 .088(With RSA-S2, choosing one )J
f6_12 sf
.15(z')A
f6_10 sf
0 3 rm
.115(i)A
0 -3 rm
f0_12 sf
.7 .07( wrong reveals \()J
f6_12 sf
.138(f)A
f6_10 sf
0 3 rm
.115(i)A
0 -3 rm
f0_12 sf
.113 .011( )J
f1_12 sf
.3(\332)A
f0_12 sf
.113 .011( )J
f6_12 sf
.249(g)A
f6_10 sf
0 3 rm
.115(i)A
0 -3 rm
f0_12 sf
.776 .078(\), and changing more than one)J
79 311 :M
-.086(sign reveals different information.)A
79 332 :M
f3_12 sf
-.127(Other Countermeasures.)A
f0_12 sf
-.109( The only general countermeasure that would certainly exclude all)A
79 347 :M
1.596 .16(active attacks would be to check the values sent by the server, instead of the result.)J
79 362 :M
.009 .001(However, this looks infeasible.)J
96 377 :M
.272 .027(The next-best general solution \(from a theoretical point of view\) is that the smart card)J
79 392 :M
2.884 .288(stops once and for all if it detects an attack. However, this may have practical)J
79 407 :M
.616 .062(disadvantages. In particular, since the smart card does not have a display, the client will)J
79 422 :M
-.092(only notice this fact during the next transaction with an honest server.)A
96 437 :M
.509 .051( Instead, one could let the smart card continue and try to issue a warning through the)J
79 452 :M
.911 .091(next server it communicates with. However, this seems quite dangerous since someone)J
79 467 :M
-.092(might do all their shopping in one supermarket for quite a while.)A
79 488 :M
-.087(In the special protocols considered here, an easier measure might be to change the vectors )A
f6_12 sf
(D)S
79 503 :M
f0_12 sf
.29 .029(and )J
f6_12 sf
.146(F)A
f0_12 sf
.337 .034( with each signature \(in addition to checking the result\). In this case, the smart card)J
79 518 :M
.301 .03(must be able to generate random numbers quickly, and the procedure of breaking down )J
f6_12 sf
(d)S
79 533 :M
f0_12 sf
-.103(must definitely be implemented on the smart card itself. Then just one bit of information can)A
79 548 :M
1.695 .169(be obtained about each )J
f6_12 sf
.691(F)A
f0_12 sf
1.752 .175(; this corresponds to a passive attack with slightly smaller)J
79 563 :M
2.069 .207(parameters )J
f6_12 sf
.521(L)A
f0_12 sf
.729 .073( and )J
f6_12 sf
.781(M)A
f0_12 sf
1.235 .123(. However, it is not clear if having several vectors )J
f6_12 sf
.677(D)A
f0_12 sf
1.492 .149( allows new)J
79 578 :M
2.942 .294(passive attacks. Anyway, this measure seems impossible with the protocol from)J
79 593 :M
.076([QuSo_91].)A
79 633 :M
f3_18 sf
(5)S
147 633 :M
-.423(Attacks on Related Protocols)A
79 659 :M
f0_12 sf
-.089(There are two more types of server-aided secret computations in [MaKI_90].)A
96 674 :M
.358 .036(The first type is matrix multiplication, where the matrices are to be kept secret. In the)J
79 689 :M
1.147 .115(protocol, the server receives versions of the matrices where the rows and columns are)J
79 704 :M
-.073(permuted. It has been noticed in [MaKI_90] itself that quite a lot of information, such as the)A
79 719 :M
-.064(determinants, is not hidden by these operations. Thus this protocol does not provide secrecy)A
79 734 :M
-.062(in the cryptographic sense.)A
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(schunter; page: 9 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
289 44 :M
f0_10 sf
.417 .042(\320 9 \320)J
96 89 :M
f0_12 sf
1.465 .146(The second type is solving modular equations. The smart card has secret integers)J
79 104 :M
f6_12 sf
.083(a)A
f0_10 sf
0 3 rm
.069(0)A
0 -3 rm
f0_12 sf
.208 .021(,\311, )J
f6_12 sf
.083(a)A
f6_10 sf
0 3 rm
.1(m)A
0 -3 rm
f0_10 sf
0 3 rm
.069(\3201)A
0 -3 rm
f0_12 sf
.183 .018( and an integer )J
f6_12 sf
.058(k.)A
f0_12 sf
.081 .008( \()J
f6_12 sf
.074(k)A
f0_12 sf
.216 .022( was declared secret, too, but that must have been a slip of)J
79 119 :M
-.053(the pen.\) It wants to know a solution )A
f6_12 sf
-.06(x)A
f0_12 sf
-.056( to the equation)A
190 134 :M
f6_12 sf
.114(a)A
f0_10 sf
0 3 rm
.095(0)A
0 -3 rm
f0_12 sf
.106 .011( + )J
f6_12 sf
.114(a)A
f0_10 sf
0 3 rm
.095(1)A
0 -3 rm
f6_12 sf
.101(x)A
f0_12 sf
.152 .015( + \311 + )J
f6_12 sf
.114(a)A
f6_10 sf
0 3 rm
.137(m)A
0 -3 rm
f0_10 sf
0 3 rm
.095(\3201)A
0 -3 rm
f6_12 sf
.101(x)A
f6_10 sf
0 -4 rm
.137(m)A
0 4 rm
f0_10 sf
0 -4 rm
.095(\3201)A
0 4 rm
f0_12 sf
.106 .011( + )J
f6_12 sf
.101(x)A
f6_10 sf
0 -4 rm
.137(m)A
0 4 rm
f0_12 sf
.179 .018( = 0 mod )J
f6_12 sf
.101(k)A
f0_12 sf
(.)S
79 150 :M
.39 .039(For this, it chooses a random number )J
f6_12 sf
.107(r)A
f0_12 sf
.378 .038( and computes )J
f6_12 sf
.138(b)A
f6_10 sf
0 3 rm
.166(m)A
0 -3 rm
f0_10 sf
0 3 rm
.115(\320)A
0 -3 rm
f6_10 sf
0 3 rm
.064(i)A
0 -3 rm
f0_12 sf
.154 .015( := )J
f6_12 sf
.138(a)A
f6_10 sf
0 3 rm
.166(m)A
0 -3 rm
f0_10 sf
0 3 rm
.115(\320)A
0 -3 rm
f6_10 sf
0 3 rm
.064(i)A
0 -3 rm
f0_12 sf
.063 .006( )J
f6_12 sf
.107(r)A
f6_10 sf
0 -4 rm
.064(i)A
0 4 rm
f0_12 sf
.184 .018( for )J
f6_12 sf
.077(i)A
f0_12 sf
.254 .025( := 1,\311, )J
f6_12 sf
.199(m)A
f0_12 sf
.383 .038(, and)J
79 165 :M
.222 .022(sends )J
f6_12 sf
.064(k)A
f0_12 sf
.148 .015( and the tuple )J
f6_12 sf
.088(B)A
f0_12 sf
.084 .008( = \()J
f6_12 sf
.072(b)A
f0_10 sf
0 3 rm
.06(0)A
0 -3 rm
f0_12 sf
.06 .006(, )J
f6_12 sf
.072(b)A
f0_10 sf
0 3 rm
.06(1)A
0 -3 rm
f0_12 sf
.18 .018(,\311, )J
f6_12 sf
.072(b)A
f6_10 sf
0 3 rm
.087(m)A
0 -3 rm
f0_10 sf
0 3 rm
.06(\3201)A
0 -3 rm
f0_12 sf
.196 .02(\) to the server. The server computes a solution )J
f6_12 sf
(y)S
79 180 :M
f0_12 sf
.439 .044(to the equation with the coefficients )J
f6_12 sf
.18(B)A
f0_12 sf
.4 .04(. The smart card can compute )J
f6_12 sf
.131(x)A
f0_12 sf
.277 .028( from )J
f6_12 sf
.131(y)A
f0_12 sf
.164 .016( as )J
f6_12 sf
.131(x)A
f0_12 sf
.136 .014( = )J
f6_12 sf
.131(y)A
f0_12 sf
.067 .007( )J
f6_12 sf
.115(r)A
f0_10 sf
0 -4 rm
.246(\3201)A
0 4 rm
79 195 :M
f0_12 sf
1.543 .154(mod )J
f6_12 sf
.473(k)A
f0_12 sf
1.422 .142(. This protocol is said to reveal nothing about the secret to the server. It does,)J
79 210 :M
2.455 .245(however. For example, if {)J
f6_12 sf
.665(x)A
f0_10 sf
0 3 rm
.625(1)A
0 -3 rm
f0_12 sf
1.874 .187(,\311, )J
f6_12 sf
.665(x)A
f6_10 sf
0 3 rm
.625(u)A
0 -3 rm
f0_12 sf
1.978 .198(} is the complete set of zeroes of the original)J
79 225 :M
-.033(polynomial, the server can compute {)A
f6_12 sf
(r)S
f0_12 sf
( )S
f6_12 sf
(x)S
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
-.035(,\311, )A
f6_12 sf
(r)S
f0_12 sf
( )S
f6_12 sf
(x)S
f6_10 sf
0 3 rm
(u)S
0 -3 rm
f0_12 sf
-.031(}and therefore all the quotients )A
f6_12 sf
(x)S
f6_10 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
( )S
f6_12 sf
(x)S
f6_10 sf
0 3 rm
(j)S
0 -3 rm
f0_10 sf
0 -4 rm
-.033(\3201)A
0 4 rm
f0_12 sf
-.043(. As)A
79 240 :M
-.056(more easily computable functions of the original secret coefficients, the server can compute)A
79 255 :M
f6_12 sf
.143(a)A
f6_10 sf
0 3 rm
.172(m)A
0 -3 rm
f0_10 sf
0 3 rm
.119(\3201)A
0 -3 rm
f6_10 sf
0 -4 rm
.066(i)A
0 4 rm
f0_12 sf
.065 .006( )J
f6_12 sf
.143(a)A
f6_10 sf
0 3 rm
.172(m)A
0 -3 rm
f0_10 sf
0 3 rm
.119(\320)A
0 -3 rm
f6_10 sf
0 3 rm
.066(i)A
0 -3 rm
f0_10 sf
0 -4 rm
.119(\3201)A
0 4 rm
f0_12 sf
.132 .013( = )J
f6_12 sf
.143(b)A
f6_10 sf
0 3 rm
.172(m)A
0 -3 rm
f0_10 sf
0 3 rm
.119(\3201)A
0 -3 rm
f6_10 sf
0 -4 rm
.066(i)A
0 4 rm
f0_12 sf
.065 .006( )J
f6_12 sf
.143(b)A
f6_10 sf
0 3 rm
.172(m)A
0 -3 rm
f0_10 sf
0 3 rm
.119(\320)A
0 -3 rm
f6_10 sf
0 3 rm
.066(i)A
0 -3 rm
f0_10 sf
0 -4 rm
.119(\3201)A
0 4 rm
f0_12 sf
(.)S
79 276 :M
2.368 .237(In [QuSo_91], a special protocol for deciphering RSA-encrypted messages is also)J
79 291 :M
.251 .025(contained. First, this protocol assumes that the modulus )J
f6_12 sf
.076(n)A
f0_12 sf
.213 .021( is secret from the server, which)J
79 306 :M
-.066(seems a rather strange assumption to make with a public-key cryptosystem. Secondly, if the)A
79 321 :M
-.077(server receives the decrypted messages \(which is not as natural as that the server obtains the)A
79 336 :M
.787 .079(signatures, though\), this scheme is vulnerable to active attacks, too: The smart card has)J
79 351 :M
1.465 .147(chosen two additional primes )J
f6_12 sf
.328(r)A
f0_10 sf
0 3 rm
.351(1)A
0 -3 rm
f0_12 sf
.351 .035(, )J
f6_12 sf
.328(r)A
f0_10 sf
0 3 rm
.351(2)A
0 -3 rm
f0_12 sf
1.176 .118( and computed )J
f6_12 sf
.421(n)A
f0_10 sf
0 3 rm
.351(1)A
0 -3 rm
f0_12 sf
.471 .047( := )J
f6_12 sf
.375(pr)A
f0_10 sf
0 3 rm
.351(1)A
0 -3 rm
f0_12 sf
.655 .066( and )J
f6_12 sf
.421(n)A
f0_10 sf
0 3 rm
.351(2)A
0 -3 rm
f0_12 sf
.471 .047( := )J
f6_12 sf
.375(qr)A
f0_10 sf
0 3 rm
.351(2)A
0 -3 rm
f0_12 sf
.914 .091(. It has also)J
79 366 :M
.13 .013(blinded the secret exponent as )J
f7_12 sf
.052(s)A
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.048 .005( := )J
f6_12 sf
(d)S
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.04 .004( + )J
f7_12 sf
(r)S
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
(\()S
f6_12 sf
(p)S
f0_12 sf
.065 .006( \320 1\) and )J
f7_12 sf
.052(s)A
f0_10 sf
0 3 rm
(2)S
0 -3 rm
f0_12 sf
.048 .005( := )J
f6_12 sf
(d)S
f0_10 sf
0 3 rm
(2)S
0 -3 rm
f0_12 sf
.04 .004( + )J
f7_12 sf
(r)S
f0_10 sf
0 3 rm
(2)S
0 -3 rm
f0_12 sf
(\()S
f6_12 sf
(q)S
f0_12 sf
.081 .008( \320 1\), where )J
f6_12 sf
(d)S
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.112 .011( and)J
79 381 :M
f6_12 sf
(d)S
f0_10 sf
0 3 rm
(2)S
0 -3 rm
f0_12 sf
.058 .006( must be the reductions of )J
f6_12 sf
(d)S
f0_12 sf
.061 .006( modulo )J
f6_12 sf
(p)S
f0_12 sf
.034 .003( \320 1 and )J
f6_12 sf
(q)S
f0_12 sf
.043 .004( \320 1, resp., and )J
f7_12 sf
(r)S
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.022 .002( )J
cF f1_12 sf
.002(\243)A
sf
.022 .002( )J
f6_12 sf
(p)S
f0_12 sf
.034 .003( \320 2 and )J
f7_12 sf
(r)S
f0_10 sf
0 3 rm
(2)S
0 -3 rm
f0_12 sf
.022 .002( )J
cF f1_12 sf
.002(\243)A
sf
.022 .002( )J
f6_12 sf
(q)S
f0_12 sf
.031 .003( \320 2)J
79 396 :M
.321 .032(are random numbers. Now, together with a ciphertext )J
f6_12 sf
.131(C)A
f0_12 sf
.18 .018(, it sends )J
f6_12 sf
.098(n)A
f0_10 sf
0 3 rm
.082(1)A
0 -3 rm
f0_12 sf
.082 .008(, )J
f6_12 sf
.098(n)A
f0_10 sf
0 3 rm
.082(2)A
0 -3 rm
f0_12 sf
.082 .008(, )J
f7_12 sf
.118(s)A
f0_10 sf
0 3 rm
.082(1)A
0 -3 rm
f0_12 sf
.165 .017(, and )J
f7_12 sf
.118(s)A
f0_10 sf
0 3 rm
.082(2)A
0 -3 rm
f0_12 sf
.188 .019( to the)J
79 411 :M
1.18 .118(server. The server should answer with )J
f6_12 sf
.623(M)A
f0_10 sf
0 3 rm
.312(1)A
0 -3 rm
f0_12 sf
.418 .042( := )J
f6_12 sf
.499(C)A
f7_10 sf
0 -4 rm
.376(s)A
0 4 rm
f0_9 sf
0 -2 rm
.28(1)A
0 2 rm
f0_12 sf
.681 .068( mod )J
f6_12 sf
.374(n)A
f0_10 sf
0 3 rm
.312(1)A
0 -3 rm
f0_12 sf
.582 .058( and )J
f6_12 sf
.623(M)A
f0_10 sf
0 3 rm
.312(2)A
0 -3 rm
f0_12 sf
.418 .042( := )J
f6_12 sf
.499(C)A
f7_10 sf
0 -4 rm
.376(s)A
0 4 rm
f0_9 sf
0 -2 rm
.28(2)A
0 2 rm
f0_12 sf
.681 .068( mod )J
f6_12 sf
.374(n)A
f0_10 sf
0 3 rm
.312(2)A
0 -3 rm
f0_12 sf
1.098 .11(. The)J
79 426 :M
-.075(smart card computes the message )A
f6_12 sf
-.147(M)A
f0_12 sf
-.073( by applying the Chinese remainder theorem to )A
f6_12 sf
-.147(M)A
f0_10 sf
0 3 rm
-.074(1)A
0 -3 rm
f0_12 sf
-.12( mod)A
79 441 :M
f6_12 sf
.389(p)A
f0_12 sf
.605 .061( and )J
f6_12 sf
.648(M)A
f0_10 sf
0 3 rm
.324(2)A
0 -3 rm
f0_12 sf
.709 .071( mod )J
f6_12 sf
.389(q)A
f0_12 sf
.959 .096(. If the server gives back the same value )J
f6_12 sf
.648(M)A
f0_10 sf
0 3 rm
.324(1)A
0 -3 rm
f0_12 sf
1.204 .12( in two different protocol)J
79 456 :M
.804 .08(executions and receives the two results )J
f6_12 sf
.423(M)A
f0_12 sf
.395 .04( and )J
f6_12 sf
.266(M')A
f0_12 sf
.465 .047(, then )J
f6_12 sf
.423(M)A
f0_12 sf
.221 .022( \320 )J
f6_12 sf
.266(M')A
f0_12 sf
.488 .049( is a multiple of )J
f6_12 sf
.254(p)A
f0_12 sf
.874 .087(. Thus,)J
79 471 :M
.224 .022(with high probability, gcd\()J
f6_12 sf
.06(n)A
f0_10 sf
0 3 rm
(1)S
0 -3 rm
f0_12 sf
.05 .005(, )J
f6_12 sf
.099(M)A
f0_12 sf
.052 .005( \320 )J
f6_12 sf
.062(M')A
f0_12 sf
.069 .007(\) = )J
f6_12 sf
.06(p)A
f0_12 sf
(.)S
79 511 :M
f3_18 sf
(6)S
147 511 :M
-.445(Conclusion)A
79 537 :M
f0_12 sf
.817 .082(We have described several attacks on server-aided computation protocols, in particular,)J
79 552 :M
.136 .014(protocols for the computation of RSA signatures. Several of these attacks were previously)J
79 567 :M
.171 .017(declared impossible. None of the attacks on the signature protocols is disastrous, i.e., they)J
79 582 :M
.639 .064(can all be rendered ineffective by increasing the parameters or by performing additional)J
79 597 :M
1.53 .153(tests. However, all these countermeasures cost time and may therefore annihilate the)J
79 612 :M
-.082(advantages of the server-aided approach.)A
96 627 :M
.336 .034(Furthermore, we are by no means sure that our passive attacks are already optimal. In)J
79 642 :M
1.428 .143(particular, one could try to exploit the obvious connection to modular knapsacks. \(In)J
79 657 :M
.853 .085(contrast, better active attacks are of no practical importance, since the countermeasures)J
79 672 :M
-.125(needed so far exclude active attacks generally.\))A
96 687 :M
1.881 .188(Thus, like with all unproven cryptographic schemes, one should let server-aided)J
79 702 :M
.078 .008(computation undergo a lengthy evaluation phase. In this special case, the result is likely to)J
79 717 :M
.58 .058(be that by the time that the schemes are sufficiently well evaluated, smart cards that can)J
79 732 :M
1.12 .112(compute RSA on their own are available for everyone. Other applications for these or)J
79 747 :M
-.112(similar protocols are not inconceivable, but one trades computation for communication.)A
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(schunter; page: 10 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
287 44 :M
f0_10 sf
.4 .04(\320 10 \320)J
79 94 :M
f3_18 sf
-.425(Acknowledgement)A
79 120 :M
f0_12 sf
.301 .03(We would like to thank Prof. Tsutomu Matsumoto for helping us to more literature about)J
79 135 :M
-.026(this subject, and Ross Anderson for an interesting discussion.)A
79 175 :M
f3_18 sf
-.436(References)A
79 199 :M
f0_12 sf
(AbFK_89)S
135 199 :M
.611 .061(Martin Abadi, Joan Feigenbaum, Joe Kilian: On Hiding Information from an)J
135 211 :M
-.07(Oracle; Journal of Computer and System Sciences 39/1 \(1989\) 21-50.)A
79 226 :M
-.165(Ande_92)A
135 226 :M
2.317 .232(Ross Anderson: Personal communication, 26.5.1992; to be submitted to)J
135 238 :M
-.12(Electronics Letters.)A
79 253 :M
-.166(BaEi_90)A
135 253 :M
.041 .004(Paul Barrett, Raymund Eisele: The smart diskette \320 A universal user token and)J
135 265 :M
.643 .064(personal crypto-engine; Crypto \32589, LNCS 435, Springer-Verlag, Heidelberg)J
135 277 :M
.955 .096(1990, 74-79.)J
79 292 :M
.066(Bos_92)A
135 292 :M
.124 .012(Jurjen Bos: Practical Privacy; Proefschrift, Technische Universiteit Eindhoven)J
135 304 :M
.25(1992.)A
79 319 :M
-.055(Feig_86)A
135 319 :M
2.379 .238(Joan Feigenbaum: Encrypting Problem Instances, Or ..., Can You Take)J
135 331 :M
-.055(Advantage of Someone Without Having to Trust Him?; Crypto \32585, LNCS 218,)A
135 343 :M
.009 .001(Springer-Verlag, Berlin 1986, 477-488.)J
79 358 :M
.057(KaSh_90)A
135 358 :M
.222 .022(Shin-ichi Kawamura, Atsushi Shimbo: Performance Analysis of Server-Aided)J
135 370 :M
.129 .013(Secret Computation Protocols for the RSA Cryptosystem; The Transactions of)J
135 382 :M
-.047(The Institute of Electronics, Information and Communication Engineers IEICE,)A
135 394 :M
.085 .008(E73/7 \(1990\) 1073-1080.)J
79 409 :M
-.164(LaYH_91)A
135 409 :M
-.062(Chi-Sung Laih, Sung-Ming Yen, Lein Harn: Two Efficient Server-Aided Secret)A
135 421 :M
1.735 .173(Computation Protocols Based on the Addition Sequence; Asiacrypt \32591 \320)J
135 433 :M
.249 .025(Abstracts, 270-274.)J
79 448 :M
-.22(MaIm_91)A
135 448 :M
1.288 .129(Tsutomu Matsumoto, Hideki Imai: Human Identification Through Insecure)J
135 460 :M
.128 .013(Channel; Eurocrypt '91, LNCS 547, Springer-Verlag, Berlin 1991, 409-421.)J
79 475 :M
-.108(MaKI_90)A
135 475 :M
4.267 .427(Tsutomu Matsumoto, Koki Kato, Hideki Imai: Speeding up Secret)J
135 487 :M
2.312 .231(Computations with Insecure Auxiliary Devices; Crypto \32588, LNCS 403,)J
135 499 :M
.009 .001(Springer-Verlag, Berlin 1990, 497-506.)J
79 514 :M
.055(PrCh_89)A
135 514 :M
.181 .018(Wyn L. Price, Bernard Chorley: The Intelligent Token or \324Super-Smart\325 Card;)J
135 526 :M
-.02(SMART CARD 2000 \(1987\), North-Holland, Amsterdam 1989, 133-138.)A
79 541 :M
-.111(QuCo_82)A
135 541 :M
.472 .047(Jean-Jaques Quisquater, C. Couvreur: Fast Decipherment Algorithm for RSA)J
135 553 :M
-.065(Public-Key Cryptosystem; Electronics Letters 18/21 \(1982\) 905-907.)A
79 568 :M
-.056(QuSo_91)A
135 568 :M
1.6 .16(Jean-Jaques Quisquater, Marijke De Soete: Speeding up Smart Card RSA)J
135 580 :M
1.905 .19(Computation with Insecure Coprocessors; Proceedings Smart Cards 2000)J
135 592 :M
.163 .016(\(1989\), North-Holland, Amsterdam 1991, 191-197.)J
79 607 :M
-.166(QuWB_91)A
135 607 :M
.152 .015(Jean-Jaques Quisquater, Dominique de Waleffe, Jean-Pierre Bournas: Corsair:)J
135 619 :M
.498 .05(A chip card with fast RSA capability; Proceedings Smart Cards 2000 \(1989\),)J
135 631 :M
.057 .006(North-Holland, Amsterdam 1991, 199-206.)J
79 646 :M
-.068(RSA_78)A
135 646 :M
1.156 .116(Ronald L. Rivest, Adi Shamir, Leonard Adleman: A Method for Obtaining)J
135 658 :M
1.492 .149(Digital Signatures and Public-Key Cryptosystems; Communications of the)J
135 670 :M
-.03(ACM 21/2 \(1978\) 120-126, reprinted: 26/1 \(1983\) 96-99.)A
79 685 :M
.057(ShKa_90)A
135 685 :M
.572 .057(Atsushi Shimbo, Shin-ichi Kawamura: Factorisation attack on certain server-)J
135 697 :M
1.077 .108(aided computation protocols for the RSA secret transformation; Electronics)J
135 709 :M
-.021(Letters 26/17 \(1990\) 1387-1388.)A
79 724 :M
-.219(WaQu_91)A
135 724 :M
.113 .011(Dominique de Waleffe, Jean-Jaques Quisquater: CORSAIR: A Smart Card for)J
135 736 :M
.983 .098(Public Key Cryptosystems; Crypto \32590, LNCS 537, Springer-Verlag, Berlin)J
135 748 :M
.872 .087(1991, 502-513.)J
endp
%%Trailer
end		% md
%%EOF
