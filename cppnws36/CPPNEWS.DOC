Preliminary cppnews documentation $Revision: 1.36 $

Any queries about cppnews, or requests for help, may be directed to the 
newsgroup "demon.ip.cppnews", or mailed to "cppnews@trmphrst.demon.co.uk".


Getting started
===============

Most cppnews users will be DIS customers, using KA9Q to talk to DIS. Such 
users should install KA9q before installing cppnews. If they use the 
automatic installation program provided by DIS, their directories will 
already be set up correctly, and SNEWS will be installed. Users of other 
systems (such as UUPC) will have to muddle along for the moment, as I 
don't have UUPC.

First install all the .EXE and .HLP files on any directory of your choice.
If this directory is on your PATH, you will be able to run cppnews from
any directory. Each .HLP file should be on the SAME directory as its 
corresponding .EXE file (but will still be found if it is anywhere on the
PATH). 

Then set the CPPNEWS environment variable to the news parent directory
(\nos in the standard layout). Ideally you should add a SET command to do
this to your autoexec.bat or demon.bat. 

If you use the DIS standard setup, run "demon end", and use the current
directory. 

Copy the CPPNEW.REG file to the news parent directory.

NOW BACKUP YOUR ACTIVE FILE. If you have any problems setting up the 
correct directories in cppsetup, your active file may be over-written. If 
you have a backup, you can recover from this situation. If you don't, you 
can't :-)

Now run CPPSETUP.EXE. This will create a cppnews.ini file for you. (If you
are an existing user, it will merely add any new variables to your 
existing file.) If you are a new user, or there are invalid variables in 
your file, you will immediately be presented with one or more dialog boxes
showing the variables which are set up incorrectly.

Once you have all your variables set correctly, exit the program, and re-
enter it immediately. You will now see a list of groups which are held
locally by cppnews. There will always be a group called "junk" - all
incoming articles which are not addressed to any of your local groups
will be placed in junk. This is useful, because you are paying to
download these articles - either you need to change your NNTP commands to
exclude the unwanted articles, or you need to add the new groups to the
local group list. 

At this stage, new users will want to add the groups in which they are 
interested to the local list. Use the Groups/Add menu option, or press 
AltA to add each group. A Group can also be removed by selecting it using 
the mouse or cursor keys, and using Groups/Remove, or pressing AltR.

Note that you can use cppsetup in a non-interactive way to add or remove 
groups - to add one or more groups, specify them on the DOS command line, 
each preceeded by a plus sign (+). To remove groups, specify them on the
command line, preceeded by a minus sign (-). 
Example : cppsetup +comp.lang.c++ -comp.lang.c

If more than one person using cppnews on the same machine, immediately 
copy the cppnews.ini file into your user directory, and change the CPPNEWS
environment variable to point to that directory. This is then your own 
personal cppnews.ini file. Now re-enter CPPSETUP.EXE, and check that the
various variables are set to the correct values (see below). In 
particular, check the "Folders" variable is set to your user directory.

Converting from the DIS standard setup
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Users who have been running SNEWS, or cppnews versions before 1.30, will 
now need to create cppnews indexes for their newsbase. To do this, run 
cppconv (see below).

Users running the "standard" setup created by DIS will now need to edit 
their demon.bat file as follows ...

Replace ...                         With

set SNEWS=C:\DIS\SPOOL\NEWS         set SNEWS=C:\DIS\SPOOL\NEWS
                                    set CPPNEWS=C:\DIS

cd C:\DIS\SPOOL                     cppnews
snews          

cd C:\DIS\PCELM                     cppnews
pcelm          

cd C:\DIS\SPOOL                     cppbatch
unbatch -j     

cd C:\DIS\SPOOL                     cppexpir
expire         

cd C:\DIS\SPOOL                     cppindex
reindex        

Unbatching news
===============

When a news batch has arrived, just run CPPBATCH.EXE (no parameters are 
needed) to unbatch it. Note that incoming mail is automatically placed in 
your mail folders by your mail agent (e.g. KA9Q or NOS) - cppbatch does 
not affect mail at all. 

***** IMPORTANT *****
If you have an exiting batch file (e.g. demon.bat) that calls unbatch, you
MUST replace that call with a call to cppbatch instead. See above.

Normally, cppbatch checks incoming articles, and ignores any that are 
already in your newsbase. If you run "cppbatch -d", cppbatch does not 
check for duplicates. This is useful if you have set up KA9Q to download 
articel headers only be default, and you are using a GET file to download 
the text of any articles which look interesting. Unless you use -d when 
unbatching the full article text, cppbatch will reject the articles, as 
the headers are already in the newsbase.

Cppbatch has a verbose mode, which outputs lots of progress information. To 
set verbose mode, run "cppbatch -v". Cppbatch also has a non-posting mode, 
which goes through the motions of posting articles, but doesn't actually 
update any of your newbase files. To run in non-posting mode, run 
"cppbatch -n".

Cppbatch checks carefully to make sure there is enough disk space before 
posting any articles. At the start of the batch, the program chacks there 
is at least 1.5 times the size of the batch file free. Obviously, this is 
merely an estimate, because it is not known at this stage how many 
cross-posted articles are in the batch. Cppbatch also checks again before 
posting each individual article. If cppbatch runs out of disk space, it
should exit gracefully, leaving the articles posted so far correctly
indexed in the newsbase. Some users of other programs on certain networks
have found that the disk free space calculation is incorrect. You can turn
off disk space checking by running "cppbatch -s". IF YOU DO THIS, MAKE 
SURE THERE REALLY IS ENOUGH SPACE, or cppbatch could leave your article 
indexes in a mess.

Expiring news
=============

To clear down old news, use the CPPEXPIR.EXE program.

***** IMPORTANT *****
If you have an exiting batch file (e.g. demon.bat) that calls expire, you
MUST replace that call with a call to cppexpir instead. See above.

cppexpir [-n] [-vv..] [<archive file>] <days> [<group> ...] [<days> <group> ...]

If no newsgroups are specified, all newsgroups are expired.

The number of days applies to all newsgroups specified after it.

The wildcard '*' may be specified as the last character in a newsgroup
to match all groups which start with the same characters.

The special value -1 for number of days means do not expire this group.
The value 0 means expire all the articles in the group. (Note that 
cppexpir will never delete the last article in a group - only removing the
group with cppsetup will do this.)

The special newsgroup name "history" expires the KA9Q history file by the 
appropriate number of days. It is advisable to keep the KA9Q history file 
fairly short for best performance when fetching news.

Arguments are processed left to right, and the first argument which applies
to a group is the one used.

-n indicates non-posting mode. This runs cppexpir but doesn't update your 
news base. If you use -vvv as well (see below), the temporary files 
created will not be deleted either, so you can inspect the result.

-v indicates verbose mode. Add more v's for more output. If you suspect 
cppexpir is expiring articles it shouldn't, or not expiring articles it 
should, run it with -vv, and redirect the output to a file. The output 
will indicate for each article its age, and whether it was accepted or 
rejected for each group to which it belongs.

If <archive file> is specified, all expired text is appended to
a file of that name.

Examples :-

cppexpir 10
  Expires all news over 10 days old

cppexpir 5 alt.alien.visitors 10 comp.lang.c*
  Expires news over 5 days old in alt.alien.visitors, and news over 10
days old in comp.lang.c, comp.lang.c++, comp.lang.clos and comp.lang.clu.


cppexpir \save\archive.nws 20 comp.lang.c++ 5 * history
  Expires news over 20 days old in comp.lang.c++, and news over 5 days
old in all other groups. Saves all the expired articles in the file
\save\archive.nws. Also removes all records over 5 days old from the KA9Q 
history file.

Converting from an SNEWS setup
==============================

The program cppconv converts an existing SNEWS (or cppnews prior to 
version 1.30) newsbase to cppnews format. It does not change any of the 
existing files, merely creates new cppnews indexes (*.cdx). Users may 
choose to retain SNEWS compatibility (the default), which maintains the 
SNEWS indexes (*.idx) in parallel with the cppnews ones. If you are fully 
satisfied with cppnews, and have no wish to return to SNEWS, you may turn 
this compatibility off (cppsetup Configure/Newsreader/SnewsCompat = 0), 
and delete the SNEWS indexes.

***** IMPORTANT *****
If you have an exiting batch file (e.g. demon.bat) that calls SNEWS and 
PCElm programs, you MUST replace those calls with the corresponding calls 
to cppnews programs instead. See above.

Correcting corrupt news indexes
===============================

The program cppindex attempts to rebuild cppnews indexes from the original
group files. This program is not included in the ZIP, but is available 
separately for ftp from ftp.demon.co.uk:/pub/trumphurst/cppnews.

Instructions on usage can be obtained by running cppindex without 
parameters.

***** IMPORTANT *****
If you have an exiting batch file (e.g. demon.bat) that calls reindex, you
MUST replace that call with a call to cppindex instead. See above.

User documentation
==================

This document helps with getting started, tuning, and troubleshooting. 
Because cppnews is still evolving rapidly, I have deliberately not written
a detailed "User Guide" giving all the menu options, and what they do. All
this kind of information is in the help file for the appropriate program. 
If you wish, you can read the entire help file sequentially - select 
"Help for help" from the Help menu, then use PgDn to go from one page to 
the next.

Adding external programs to the cppnews Article menu
====================================================

You can add your own options to the Article menu. These user-defined 
options will pass the contents of the article to an external program or 
batch file of your choice. This is useful for things like encryption,
viewing very large messages, uudecode etc. You specify a user define 
option by editing CPPNEWS.INI. Add a line of the form ...

Article/User option = "~View" "LIST %s" ^V "[View]"

Where "~View" is the option name.
"LIST %s" is the program command line.
^V is the optional Hot key - see below.
"[View]"is the optional toolbar text - see below.

The option name may contain one ~ character - the ~ will not be printed,
but the next character will be highlighted in the menu.

The program command line should contain one (and only one) occurrence of 
"%s" - this will be replaced by the name of the temporary file containing
the article text when the program is called.

If the program alters the file, the altered version will be read back in
as the article text. This altered version is lost immediately you move on 
to another article.

More customisation options
==========================

Configuring the hot keys
~~~~~~~~~~~~~~~~~~~~~~~~
All the cppnews hot keys may be configured.  There is a cppnews.ini 
variable for each option on the cppnews menu (see the cppnews.ini file 
listing below for examples). This is followed by an equals sign (=), 
an optional hot key name and optional toolbar text in quotes.

Most keys are represented by the character(s) on the keytop.
The function keys are represented by F1 to F10.
The Shifted function keys are ShF1 to ShF10.
The cursor keys are Left, Right, Up, Down, Home, End, PgUp and PgDn.
Control keys are preceeded by the ^ character (e.g. ^Left or ^A). 
Note that ^H, ^I, ^[, ^M and ^J are not allowed as hot keys.
Alt keys are preceeded by Alt (e.g. AltF2 or AltB).

Leaving a keyname blank means no hot key is assigned for that menu item.  

Configuring the Tool Bar
~~~~~~~~~~~~~~~~~~~~~~~~
Under the cppnews main menu is the tool bar.  This is a user-configurable 
set of mouse buttons that can be clicked on with the mouse to perform any 
menu option directly.

To change the contents of the tool bar, you need to edit CPPNEWS.INI.
Each key configuration line may have an optional quoted string following 
it, which contains the text for the tool button.  Tools appear in the tool
bar in the same order as they appear in CPPNEWS.INI (you can rearrange the
order of the lines in CPPNEWS.INI if you wish).

Each tool button in the tool bar is separated by a space, so you could 
have a tool for each possible menu option if you made the text short 
enough (i.e. one character in most cases).

The standard directory layout used by cppnews
=============================================

\nos                     Parent directory
        cppnews.ini      Cppnews parameter file (Single user only)

\nos\spool\news          KA9Q history directory & SNEWS directory
        history          List of article ID's reveived by KA9Q
        active           Newsgroups index
        history.snw      Article history file
        user.kil         User kill file
        user.nrc         User article read index
        cppnews.ali      Cppnews alias file
        cppnews.reg      Cppnews registration info

\nos\user                User directory
        user.sig         User signature file
        cppnews.ini      Cppnews parameter file (Multiple users)
        *.txt            Mail folders for "user"
        *.cdx            Mail folder index files

\nos\spool\mail          Incoming mail directory
        *.txt            Incoming mail files for all users
        *.cdx            Incoming mail index files

\nos\spool\mqueue        Outgoing mail directory
        sequence.seq     Mail id sequence number file
        <nnn>.wrk        Outgoing mail job control files
        <nnn>.txt        Outgoing mail text

\nos\spool\articles      Incoming news directory
        batch.txt        News batch to be processed by SNEWS unbatch

\nos\spool\news\newsbase News database directory
        <nnnnnnnn>       All news for a single newsgroup
        <nnnnnnnn>.cdx   Index for the newsgroup
        <nnnnnnnn>.idx   SNEWS index for the newsgroup

This layout is fully configurable using settings in cppnews.ini.

My cppnews.ini file looks like this
===================================

RootDir = e:\nos\
BaseDir = e:\nos\spool\news\
TempDir = g:\tmp\
NewsDir = e:\nos\spool\articles\
MailDir = e:\nos\spool\mail\
Folders = e:\nos\spool\mail\
; Folders would be set to e:\nos\nikki\ if this was a multi-user setup
Home = e:\nos\nikki\
MailQueue = e:\nos\spool\mqueue\
HistDir = e:\nos\spool\news\

UserID = nikki
Name = Nikki Locke
Organisation = Trumphurst Ltd.
Signature = nikki.sig

Domain = demon.co.uk
NodeName = trmphrst
NewsServer = news.demon.co.uk
ServerName = mail2news

WordWrap = 80
MaxArticleSize = 63
Editor = zed %s
TabWidth = 8
SwapOut = 1
SnewsCompat = 1
QuoteMark = > 
MailExt = .txt
StartOfHeader = From 

MailCC = 
NewsCC = 
MailBCC = 
NewsBCC = 
NewsLog = newslog
MailLog = maillog

ColorDefault = 31 16 61 48 79 64 114 2
ColorAlert = 79 64 95 80 116 4 117 5
ColorHelp = 47 32 63 48 31 16 113 1
RegistrationNo = 1153242958

Article/neXt unread = Tab "[->]"
Article/Next = ^N "[>>]"
Article/Previous = ^P "[<<]"
Article/First = ^F
Article/Last = ^L
Article/mark Read = ^R
Article/mark Unread = ^U
Article/Delete = ^D
Article/undeleTe = 
Article/Append to file = ^A
Article/Save to folder = ^S
Article/ROT13 = 
Article/Search = F4 "[Art?]"
Article/User option = "~View" "list %s" ^V
Article/User option = "Prin~T" "laser %s" ^T
Article/User option = "UUdecode" "uudecode %s" 
Article/User option = "~Edit" "zed %s" ^E

Article/User option = "~View" "LIST %s" ^V
Article/User option = "UUdecode" "uudecode %s" 
Article/User option = "~Edit" "zed %s" ^E

Thread/Next = AltN
Thread/Previous = AltP
Thread/First = AltF
Thread/Last = AltL
Thread/mark Read = AltR "[MkRd]"
Thread/mark Unread = AltU
Thread/Delete = AltD
Thread/undeleTe = 
Thread/Kill = AltK "[Kill]"
Thread/reVive = 
Thread/Append = 
Thread/Save to folder = 
Thread/Search = F5 "[Th?]"

Group/Next = F3
Group/Previous = ShF3
Group/First = 
Group/Last = 
Group/mark Read = 
Group/mark Unread = 
Group/Search = F6 "[Grp?]"

Search/Continue = F2 "[??]"

Write article/Mail = AltM "[Mail]"
Write article/Comment = AltC "[Com]"
Write article/Begin = AltB "[Post]"

Options/Wordwrap = 
Options/Re-read alias file = 

Exit/Exit program = AltF4
Exit/Shell to DOS = 
Exit/eXit nosave = 
Exit/Quick exit = AltQ "[Q]"


The significance of the cppnews.ini variables
=============================================

File and directory names
~~~~~~~~~~~~~~~~~~~~~~~~
Cppnews.ini should be on a directory pointed to by your CPPNEWS
environment variable. If there is no CPPNEWS environment variable, the
current directory is used. 

If more than one person wishes to use cppnews on the same machine, each 
person should have a separate copy of cppnews.ini. Each person should also
have a separate <Folders> subdirectory for their mail folders. They should
edit the <UserID> and <Name> entries to be their own individial mail 
address. Each user will then see incoming mail for them, plus any mail 
folders they have created in their own folders directory.

If only one person is using cppnews, only one copy of cppnews.ini is 
needed. In this case, it is usual to set the <Folders> directory to be
the same as the <MailDir> directory. The single user can then see all 
incoming mail, no matter to whom it is addressed.

Filenames for the various files used by the system, and the use of each
of these files, is given below ...

cppnews.ini - <CPPNEWS>\cppnews.ini

This is where the cppnews.ini file is expected. If none exists, the 
program will not start. The file is re-written to this directory on
normal program exit. To change most of the other variables, the normal
method is to run CPPSETUP.EXE. The current version of cppsetup does not 
offer colour customisation (this is done in cppnews itself at present), or
hot-key/toolbar configuration (this must be done by editing cppnews.ini 
directly). It is not normally necessary to edit any of the other files
used by the system (except the signature file), and in many cases an
incorrect edit can prevent the proper function of the news reading system.

Newsgroups index - <BaseDir>\active

This is created by the cppbatch, cppaddgp and cppremgp programs. It contains
a list of all active groups, with a line for each group giving the group
name, the filename and the first and last message numbers. 

DO NOT attempt to edit this file yourself, unless you REALLY know what you
are doing.

To add or remove groups, use the cppsetup program.

Article history file - <BaseDir>\history.snw

This contains a list of all articles posted to the system. It contains 
records, one per line, of the article ID, date posted, group name(s) and
article number(s). 

Articles read list - <BaseDir>\<UserID>.nrc

This is a list of all the newsgroup articles that have been read. It 
contains records, one per logical line, of a newsgroup name followed by a 
space-separated list of article numbers. A logical line is split over 
multiple physical lines by including a backslash character (\) at the end 
of each physical line.

DO NOT attempt to edit this file yourself, unless you know what you are
doing. 

The file is automatically maintained by cppnews. You can mark articles, 
threads and whole groups as read or unread using cppnews menu options.

Kill file - <BaseDir>\<UserID>.kil

This is a list of hash codes of subject lines that have been "killed". 
Hash codes are used for speedy lookup, and to allow some "fuzzy matching" 
in subject lines. 

I can't see any purpose behind editing this file - it is just a list of 
apparently meaningless numbers !

This file is automatically maintained by cppnews on normal exit from the
program. Thread/Kill and Thread/Revive menu options are provided to add
and remove subject lines from the kill list. 

Aliases file - <BaseDir>/cppnews.ali

This is a list of aliases used when sending mail. Each alias is a 
shorthand for a list of 1 or more mail destinations. You only need to type
in the shorthand alias as a mail destination (in the To, Cc or Bcc fields 
in an article header), and cppnews will expand it to the full version 
before posting the article.

Each alias consists of the shorthand name, white space, a colon, more 
white space, and then the list of names to which it expands, separated by
white space (white space means one or more spaces, tabs or newlines). 

Aliases are followed recursively (with infinite loops prevented). Here is
an example : 

cppnews : cppnews@trmphrst.demon.co.uk
nikki : nikki@trmphrst.demon.co.uk
cliff : cliff@home.demon.co.uk
list : nikki cliff fred@faraway.com

Note that "list" will expand recursively to ...
nikki@trmphrst.demon.co.uk cliff@home.demon.co.uk fred@faraway.com

Note also that any names without a domain after expansion of aliases will 
have your local domain appended to them.

Incoming mail - <MailDir>\<UserID>.<MailExt>
Saved mail folders - <Folders>\*.<MailExt>
Incoming mail indexes - <MailDir>\<UserID>.cdx
Saved mail indexes - <Folders>\*.cdx

Cppnews uses this mask to look for incoming mail and mail folders. If you
create a new folder within cppnews, it will be created in the <Folders> 
directory, so it can be found next time. 

The contents of these files are mail messages. The start of a new message is
recognised by the <StartOfHeader> string at the beginning of a line.
My mailer justs throws the messages onto the end of the file, so I use
"From " (note the space) as my <StartOfHeader>. Some mailers place a 
special marker between each message (e.g. a ^A character) - if yours does,
use this as your <StartOfHeader> (you will need a good editor to place a 
^A character in your cppnews.ini). When cppnews is adding new messages to 
the end of a folder, it adds a line containing 4 ^A characters before each
message. This line is also recognised when reading the file (because a 
saved message from a newsgroup probably does not start with the same
<StartOfHeader> string as mail).

Once cppnews has read the mailbox, it creates (or extends) an index file.
The index file is a binary file (for speed), containing the article 
offset, article size, article status, and offsets to various important
header lines, so subsequent reading of the file is much faster. New
messages added to the end of the mailbox by your mailer are recognised as
such the next time you run cppnews, and added to the index. 

On exit, cppnews gives you the option of removing deleted messages from 
the mailbox. This re-writes the mailbox, excluding messages that have been
marked for deletion, and re-writes the index.

DO NOT attempt to edit these files yourself, unless you know what you are
doing - you could lose mail messages altogether if you change the number
of characters of text in a message that has been indexed by cppnews.
You can add new messages to the end of the file, though, but beware of 
text editors that invisibly change the text (e.g. removing trailing 
spaces, expanding tabs, changing line feed delimiters). If you really must
edit messages in a mailbox, delete the index corresponding to that 
mailbox, so that cppnews will re-create it next time you enter the 
program.

For the technically minded, the index layout is as follows :-

Bytes	Meaning
1-4	Offset of the start of the article in the text file
5-7	Length of the article (yes, 3 bytes - lowest first)
1	Bit flags ...
	read = 1
	killed = 2
	deleted = 4
2	Offset of Subject header withing article
2	Offset if MessageID header within article
2	Offset of References header within article
2	Offset of From header within article
8	Hash code of article subject

All offsets in binary bytes (including <cr> and <lf> characters).


Group file -<BaseDir>\newsbase\*
Group index - <BaseDir>\newsbase\*.cdx
SNEWS index - <BaseDir>\newsbase\*.idx

The cppbatch and cppexpir programs create and maintain these files.
There is one text file and one index file per group. The filename is 
obtained from the Newsgroups Index. The text file contains all the news 
postings, separated by a line containing 4 ^A (smiley face) characters
(although this latter is not essential). The index file is a binary file,
with the same format as the mail index files. 

Note - if you are running an SNEWS compatible setup, the news postings in 
the text file are separated by "@@@@END", and the SNEWS index file is 
used. The SNEWS index file consists of records, one per line, containing 
the offset of the article, the article number, the date posted and the 
subject.

DO NOT attempt to edit these files yourself, unless you REALLY know what
you are doing. The index file(s) contain pointers into the text file, so 
they must be kept in step (e.g. when doing backup/restore).

Signature - <Home>\<Signature>

You can edit this file to place any signature text you want to follow all 
your mail messages and news postings. It is automatically read in to the 
editor buffer ready for you to compose your message. Please bear in mind 
that your signature uses up net bandwith, so don't go overboard ! It is 
recommended that the first line of your signature contains the three 
characters "-- ", and that there is a maximum of two more lines in your 
signature.

Outgoing mail sequence number file - <MailQueue>\sequence.seq
Outgoing mail work files - <MailQueue>\*.wrk
Outgoing mail text files - <MailQueue>\*.txt

Cppnews places all outgoing mail messages into the <MailQueue> directory.
The sequence.seq file contains the number of the last item posted to the
queue. This file is updated during each posting. This form of posting is 
known to be compatible with KA9Q. Support for other mail agents with 
different queue schemes will be considered. If your mailer is different,
let me know the details by mailing cppnews@trmphrst.demon.co.uk.

The .wrk and .txt file use this posting number as the filename. Each .txt 
file contains the complete message, and the .wrk file contains routing 
information - the destination machine, the fully qualified sender name, 
and the fully qualified recipient name(s).

Users who do not use KA9Q as a mail agent should be able to use these 
files to pass to their mail agent. Once passed to the mail agent, the 
.txt and .wrk files may be deleted.

Temporary files directory - <TempDir>

This directory will be used by cppnews programs for temporary files.

Incoming news batches - <NewsDir>\*.*

Cppbatch looks for incoming batches in this directory. An incoming batch 
should contain news articles, separated by lines starting with "#! rnews".
An optional character count may be added to these lines, giving the size 
of each article. NOTE - this size is a Unix-style file size, counting line
delimiters as ONE character only (DOS uses the two characters <cr><lf> as 
a line delimiter). If this character count is not present, cppbatch 
looks for a "Lines:" header. Failing that, it assumes the article is 
terminated by the next line starting with "#! rnews".

KA9Q history file - <HistDir>\history

This file is maintained by KA9Q - every article received has its ID
placed in this file (one per line). Cppexpir can prune this file - just 
specify the special news group name "history" in the command line.

Posting messages
~~~~~~~~~~~~~~~~
Cppnews expects messages posted to newsgroups to be handled by a news/mail
server. Cppnews versions up to 1.18 only support one kind of newsserver - 
a dummy mail address "mail2news@<NewsServer>" which accepts articles for 
posting, and despatches them to the newgroups in the header.

There is another kind of news/mail server, which accepts articles posted 
to a user name derived from the newsgroup name, and posts to that group. 
Some of these servers accept the newsgroup name unchanged, and some need 
the full stops (.) in the newsgroup name changed to some other character.

Cppnews 1.18 introduced improved newsserver support using a new 
cppnews.ini variable <ServerName>. This can be set to ...

The name (like "mail2news") of the first kind of server above.

OR

A single punctuation character (.,-% etc.) to indicate the second kind of 
server above. The newsgroup name will have any full stops (.) in the name
changed to the specified character. Specify a full stop (.) character for 
no translation.

Cppnews generates default headers for mail and news postings, as follows ...

Path: <NodeName>.<Domain>!<UserID>
From: <UserID>@<NodeName>.<Domain> (<Name>)
ReplyTo: <UserID>@<NodeName>.<Domain>
Subject: Re: The subject of the message/article to which this is a reply
References: The message ID of the message/article to which this is a reply
Cc: <MailCC> or <NewsCC> as appropriate
Bcc: <MailBCC> or <NewsBCC> as appropriate
Distribution: world (news postings only)
Followup-To: The first group on the To list (news postings only)
Message-ID: A unique ID based on the time posted, <NodeName> and <Domain>
X-Mailer: cppnews revision number
Date: The date posted. Cppnews takes notice of your TZ environment 
      variable. U.K. users should set it to GMT0BST.
Organization: <Organisation>
Lines: The number of newlines in the message.

Other cppnews.ini variables
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Your text editor - <Editor>

This should be set to the command line to call your editor, with a "%s" 
sequence where the file name should be.
There are some strange and wonderful editors out there. A few pitfalls to 
look out for ...

Some editors are too big to fit in memory along with cppnews. You can 
change the amount of memory cppnews takes by adjusting the <MaxArticleSize>
variable. This can take values from 1 to 63, and is the number of kbytes 
that cppnews can use to hold article text in memory. Some editors are just
too big even with <MaxArticleSize> set quite small. If you have a large 
editor (or too many news articles, or not enough memory !), you can set 
the <SwapOut> variable to 1. This causes cppnews to swap itself to disk 
before calling your editor, leaving nearly all your memory available to 
the editor.

Some editors won't edit an empty file ! The solution to this problem is to
create a signature file, so that your blank message for posting is never 
empty.

Some editors don't output straight ASCII text files. Most wordprocessor
files contain control characters and information, and are unsuitable for
posting to the net. Some wordprocessors have a special ASCII file save 
option, but a simple, small text editor is the best thing to use. There 
are so many free text editors available it would be pointless to write an 
internal editor for cppnews.

Article quoting prefix - <QuoteMark>

When you quote an existing message, the <QuoteMark> characters are added 
at the start of every line. Most people use "> " (note the space).

Tab setting - <TabWidth>

Tab characters in articles are expanded to tab stops every <TabWidth> 
characters.

Word wrap width - <WordWrap>

Long lines in articles are not usually wrapped by cppnews. If you set 
<WordWrap> to a non-zero value, lines will be wrapped at a word break near
this column. This value can be changed using the cppnews Options/Wordwrap 
menu option.

Posting logs - <NewsLog> and <MailLog>

If these variables are set to a mail folder name (up to 8 characters), 
all news and/or mail postings are copied to the folder.

SNEWS compatibility flag - <SnewsCompat>

If this variable is set to 1, the cppbatch and cppexpir programs will
maintain SNEWS compatible files. If it is set to 0, SNEWS will not be
able to read news processed by cppbatch or cppexpir. 

<RegistrationNo> - Registered users of cppnews will receive a registration
number by mail when they register. They should enter this registration 
number in cppsetup (Configure/Register). Unregistered versions of cppnews 
work in exactly the same way as registered versions, except that they send
you a mail message once a month reminding you to register. I expect that 
makes cppnews "nagware", but I think once a month is bearable !

Troubleshooting
===============

If you have any problems, or enhancement suggestions, please mail
cppnews@trmphrst.demon.co.uk with the details. If you are having trouble 
getting things working, send the contents of cppnews.ini with your mail.
Details of your environment variables and directory structure often help,
too. 

Here are some of the problems user have had in the past, with solutions ...

Q) When I attempt to read long messages, I get a message saying the 
article has been truncated.

A) In order to conserve enough memory to run your editor, cppnews limits 
the size of articles that can be browsed. This has no effect on saving or 
quoting articles - in both cases the full article is copied to disk. It is
not usually much hardship, as most long articles are uuencoded or shar 
files, which are meant to be read by machine rather than human. 
Subscribers to rec.arts.erotica have only themselves to blame !
The maximum size of article which can be browsed is set using the 
MaxArticleSize cppnews.ini variable.

In any case, MaxArticleSize can not be set greater than 63 (i.e. 63k). You
can easily set up cppnews to allow viewing of larger articles with a 
user-defined external command. For example, just add the line
Article/User option = "~View" "LIST %s" ^V
to your cppnews.ini, and you will be able to see view the full text of
long articles by pressing Ctrl+V (assuming you have a copy of the 
excellent LIST command). See "Adding external programs to the cppnews
Article menu" above.

Q) How do I read mail - I see no mail pseudo groups when I start cppnews.

A) Check (carefully) your <MailDir> cppnews.ini variable. This should 
point to the directory containing your incoming mail files. Check <MailExt>
and <StartOfHeader> too.

Q) I used to be able to see mail for all "users" in my previous version of
cppnews. Now I have upgraded, I can only see one mail pseudo group.

A) Check your <Folders> cppnews.ini variable. If you want to see incoming 
mail for all users, you should set this to be EXACTLY THE SAME as your 
<MailDir> variable. Also check your <UserID> variable is all lower case.

Q) There are TWO mail folders addressed to me now !

A) Cppnews checks to see if the <MailDir> and <Folders> variables are the 
same when searching for mail. You have them set to the same directory, but
they are not textually identical in cppnews.ini - perhaps one has a drive 
letter, or you have used different combinations of forward and back 
slashes, or different case. If you want to see incoming mail for all
users, you should set this to be EXACTLY THE SAME as your <MailDir>
variable. 

Q) I hate the weird keystrokes. I like to use AltX (or whatever) to exit.

A) All cppnews key bindings are configurable, by editing cppnews.ini. Read
the on-line help carefully, particularly the sections on configuration.

Q) When I try to reply to messages, my editor doesn't start up.

A) Check that your editor will fit in the memory available. (The DOS 5
editor usually won't). Also check the setting of your <editor> cppnews.ini 
variable. It should have one (and only one) "%s" in it, which is replaced 
by the filename to edit (always post.tmp at the moment). If you want to 
use an editor that is bigger than the memory cppnews leaves, try setting 
the <SwapOut> cppnews.ini variable to 1.

Note that "memory available" is the "largest executable program size" 
shown by the MEM DOS command. All those megabytes of extended memory don't
count, because they aren't available to conventional DOS programs.

There is at least one editor out there that won't edit empty files. If 
yours is like this, make sure you have a signature file set up - the 
signature is copied into post.tmp before the editor is started.

There is an outstanding problem with the MKS Korn shell - it doesn't seem 
to understand the standard Zortech C++ system call syntax. One user has 
succesfully wrapped cppnews in a shell script as follows ...
-------------------------------------
switch /
export COMSPEC="c:\\dos\\command.com"
cppnews
switch -
-------------------------------------

Q) Something went drastically wrong - I got pages of messages which 
appeared to be the stack and heap contents, then I was dropped back to DOS.

A) An internal error has been trapped in cppnews.ini. Mail me the contents
of cppnews.log (on your current directory) and cppnews.ini. Details of 
your environment variables and directory structure often help, too.

Q) I get an error message "article nnnn found when nnnn expected", and 
that newsgroup is locked out.

A) Something (other than cppnews) has corrupted the index for that group.
Have you been editing it ? You need to rebuild the index correctly. Try 
downloading cppindex.exe from ftp.demon.co.uk:/pub/trumphurst/cppnews. Run
it (give the offending group name as a parameter). This should reconstruct
your indexes correctly. Ideally, back up your newsbase before doing this
- the main files to back up are active, history.snw, <username>.nrc and
newsbase\*.*. 

If this doesn't work, see "HELP !!! One of the cppnews programs crashed,
and now my newsbase seems to be trashed" below.

Q) The mouse cursor leaves trails all over the screen in 132x43 mode

A) Your mouse driver doesn't understand this mode. You need a better mouse
driver.

Q) I can't seem to get articles and lists to scroll using the mouse

A) Press and hold down the left mouse button. Drag the mouse cursor onto 
the top or bottom of the window border. Hey presto, the window scrolls !

Q) If I click on a menu item, a drop-down window appears. If I change my
mind, how do I close it again without using the keyboard? 

A) Clicking the right mouse button on a menu or list will cancel it. 
Clicking the left mouse button on something active in the main window will
cancel any menu that has popped up. Escape works too, but I expect you 
want to do it with the mouse !

Q) When I am editing text fields in a dialog box, whenever I type 
something, the existing contents of the field disappear. This is sometimes
useful, but it is a drag when it happens by mistake. Is there any way I 
can get the original contents back?

A) Yes ! Just press ^R. This restores the contents of the current field to
what they were when you first entered the dialog.

Q) When I run cppbatch, I get messages about "Skipping", with some article
text. Why ?

A) You are not using the latest version of KA9Q/NOS. The latest version 
stores the length of each article in the !# rnews line before each 
article. Older versions did not. In the absense of this information, 
cppbatch looks for a "Lines:" header in the article, and uses that. 
Sometimes the Lines header is incorrect, which means that cppbatch gets 
confused about where the article ends. Please upgrade to the latest KA9Q/
NOS as soon as possible. [N.B. There was a bug in cppbatch version 1.30 
which caused a similar problem. This bug is fixed in cppbatch version 1.31.]

Q) I ran cppexpir, and it deleted a lot of articles. I ran it again, with 
the same parameters, and it deleted more articles. Why ?

A) Cppexpir calculates the age of an article by subtracting the date it 
was posted by cppbatch (in seconds) from todays date. Thus if you run 
cppbatch at 18:00 on 1 Jan, and then run cppexpir 10 at 17:59 on 10 Jan, 
all articles posted last year will be expired. If you run cppexpir again 
at 18:01, the articles posted on 1 Jan will be expired.

Also note that cppbatch version 1.32 had a bug, which caused all articles 
to be added with a date of 0 (1 Jan 1970) if SnewsCompat was set to 0. A 
replacement cppbatch (1.33) was provided pretty smartish, but any articles 
which had been unbatched by cppbatch 1.32 may be expired prematurely.

[ Despite this explanation, some people still think cppexpir is deleting 
articles it shouldn't. If you think this is happening to you, please run 
cppexpir -vv <your parameters>, and redirect the output to a file. Study 
the file, which contains each article ID, its age, and whether it was 
accepted or rejected for each group to which it was posted. If you think 
something is wrong, please send me the output file, and a copy of your 
history.snw file. ]

Q) Why does cppbatch reject some articles as duplicates incorrectly ?

A) I am afraid there is a known problem with the hashing algorithm which 
cppbatch uses to detect if a message id is already on the newsbase. If the
article ID is short, and contains certain letters, the hashing algorithm 
will hash two different id's to the same hash code.

Q) HELP !!! One of the cppnews programs crashed, and now my newsbase seems
to be trashed.

A) DON'T PANIC ! Try the following ...

i) Back up your newsbase. Make sure you have copies of the following files
    active
    history.snw
    <username>.nrc
    newsbase\*.*
    spool\articles\batch.txt (if any)

ii) Download cppindex.exe from ftp.demon.co.uk:/pub/trumphurst/cppnews. 
Run it on your whole newsbase (cppindex *). See if this fixes the problem.

iii) If the problem persists, and you can't work out how to fix it, send 
me (on floppy disk if > 50k) your newsbase backup, and details of what 
went wrong. I will try to fix your newsbase (and any bugs in the offending
cppnews program) and send it back to you. My address is

Nikki Locke
Trumphurst Ltd
The Willows
St. Martins Moor
Oswestry
Shropshire
SY10 7BH
England
Tel : +44 (0) 691-670 318
Fax : +44 (0) 691-670 316

iv) If you want to continue reading new news while you wait, delete all 
the files I told you to back up before. Run cppsetup to create an empty 
newsbase, and proceed from there. If you want to go back to your old 
newsbase when I have fixed it, remember to keep copies of any 
spool\articles\batch.txt files you add to your new newsbase with cppbatch,
so that they can be added to your old newsbase when you get it back.

NOTE - even if you decide to discard your old newsbase altogether, and 
start from scratch, I would still like to receive a copy of your newsbase 
backup, so I can find out what went wrong, and prevent it happening to 
someone else. As an incentive, I will return the floppies to you packed 
with the programs of your choice from the Simtel and/or CICA CD ROMS.


