

                              -= PGPShell =-



             Official Menu-Driven Shell of the 1996 Olympics!

           Endorsed by the Saddam Hussein Downhill Ski Team, the
            National Security Agency, and the Captain Midnight
                     "Secret Decoder Ring" Fan Club


                    (c) copyright by James Still 1993
                  of the Hieroglyphic Voodoo Machine BBS 
                    in snowy Boulder, Colorado, U.S.A. 
                            All Rights Reserved


          PGPShell v 2.0 is released as freeware on May 19, 1993


          Pretty Good Privacy (PGP) is (c) copyrighted 1990-1992
                           by Philip Zimmermann



WARRANTY
-------------------------------------------------------------------------

Nope!  Use at your own risk.  James Still (and his evil twin Johannes 
Kepler) disclaim all warranties, expressed or implied, including without
limitation, the warranties of use and/or fitness of PGPShell for any
purpose.  James Still assumes no liabilities for damages, direct or
consequential, which may result from the use or misuse of PGPShell.
PGPShell is FREEWARE which means you may use it without charge for as 
long as you want to, even on Mars, and 53 miles west of Venus if you
should so desire.  However, James Still retains all rights to the 
copyright of PGPShell versions 1.0 and 2.0.  When they make a movie of
it someday, I want to be there to say "No, no, the menu structure didn't
look like that at all!"

 


QUICK START
--------------------------------------------------------------------------

Create a C:\PGPSHELL directory and copy PGPSHELL.EXE into that directory.
Run PGPSHELL.  Use the ESC, ENTER, arrow keys, and TAB key to manually
navigate around PGPShell, or use your mouse if it is installed.




INTRODUCTION
--------------------------------------------------------------------------

PGPShell version 2.0 is a menu-driven front-end that makes Phil
Zimmermann's excellent program Pretty Good Privacy (PGP) easier to manage
and use.  Use it instead of PGP to make your encryption life easier!
Improvements over the first version are too numerous to go into fully as
2.0 is practically a complete rewrite, but the biggies are:  GUI and
mouse driver, full support of all PGP commands, expanded sub-menu for key
management with logically arranged "drop-down" menus, plaintext file
viewer, text editor interface, and a helpful public key userID directory.

For the public key encryption novice, PGPShell should be a perfect
introduction to the exciting and wacky world of (what Andy Hawks coined
in a recent Future Culture FAQ) "Cypherpunk."  (Kinda catchy ain't it?  
What'll they think of next...<g>)

You should make sure that the executable file is a good one by looking at
the date and time stamp.  From the DOS prompt type "dir PGPSHELL.EXE" and
you should see this:

             PGPSHELL EXE       119984   05-12-93    3:31p

If it says anything else I didn't compile it!  Granted some ex-KGB agent
could set his computers date and time, and the file size, but hey who's
that paranoid?  Nevertheless if you don't trust it, call up the 
Hieroglyphic Voodoo Machine BBS at 1.303.443.2457 and download yourself a 
fresh, clean copy.



GETTING STARTED
--------------------------------------------------------------------------

These title heads are starting to look like an old WordPerfect manual eh?  
PGPShell is DOS-only which means that I don't know how to port this to 
UNIX.  UNIX-guru's can write their own scripts in PERL and abhor the 
heresy's of mouse drivers so I think its safe to assume that they won't 
be joining us anyway.  Okay to get things set up, from the root directory
(C:\) of DOS enter these commands:

                          md pgpshell
                          cd pgpshell

Then copy the PGPSHELL.EXE file and any other related docs, into the
PGPSHELL directory.

Type PGPSHELL at the DOS prompt to execute the program.  If you have NOT 
previously installed PGP on your system, PGPShell will bug you with some 
questions.  If you have never set the environment variables for PGP in 
your AUTOEXEC.BAT file, PGPShell will not know where PGP is and get real 
confused!  PGPShell will ask you to point out your PGP directory so that 
it can run correctly.  If you want, PGPShell will even add those 
environment variable lines to your AUTOEXEC.BAT file for you (first 
creating a backup of your AUTOEXEC.BAT file and calling it AUTOEXEC.PGP).

See the PGP documentation for more information about setting up the PGP
environment variables.



MAIN MENU
--------------------------------------------------------------------------

In the wonderful world of cryptography, text files or "messages" are of 
two types:  plaintexts and ciphertexts.  Plaintexts are unencrypted and,
you guessed it, ciphertexts are encrypted.

The main menu consists of these options in handling plain/ciphertexts:


             þ  Compose a Plaintext for Encryption
             þ  View a Plaintext on Screen
             þ  Encrypt a Previously Written Plaintext
             þ  Decrypt a Ciphertext
             þ  Archive a File
             þ  Key Ring Menu


    COMPOSE A PLAINTEXT
    ~~~~~~~~~~~~~~~~~~~
    To write a message for encryption to someone, choose this option.
    Assuming you have not deleted or moved your text editor, PGPShell
    will bring up your text editor for use.  By default it names your
    message "MESSAGE.TXT" but it is likely you will want to save it by
    another file name.


    VIEW A PLAINTEXT
    ~~~~~~~~~~~~~~~~
    PGPShell contains a built-in viewer to allow you to read your
    decrypted messages as long as they are less than 30K in size.  The
    reason for this is that bugaboo called 'memory.'  PGP is a memory hog
    (unless you use EMM386 or manage memory through Windows) and PGPShell
    is another memory hog with its new GUI facelift.  I'm not sure just
    how large a text file you can cram in there, but 30K seemed a nifty
    ceiling.  Besides if you sent a love letter over 30K, you'd bore them
    to tears and they'd never speak to you again.


    ENCRYPT A PREVIOUSLY WRITTEN PLAINTEXT
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    There are five options in an Encryption Dialogue box for you to choose
    from when encrypting a plaintext file.  I'll list them and the PGP 
    argument in parenthesis after:

        1) Radix-64 ASCII e-mail format                  (-a)
        2) Sign the plaintext with your secret key       (-s)
        3) Wipe or "shred" the original after encrytion  (-w)
        4) Convert plaintext to canonical text           (-t)
        5) Force recipient to view "on-screen" only      (-m)

    Consult the PGP documentation for more details on what these parameters
    are used for when encrypting plaintexts from within the PGPShell.


    DECRYPT A CIPHERTEXT
    ~~~~~~~~~~~~~~~~~~~~
    As with the encryption options, there are five decryption options that
    you may toggle in a Decryption Options dialogue box.  They are:

        1) Check the signature authority of the ciphertext  (-o)
        2) Detach a signature certificate from a ciphertext (-b)
        3) Leave the signature on the ciphertext intact     (-d)
        4) View the ciphertext "on-screen" only             (-m)    
        5) Keep the original filename on the ciphertext     (-p)

    Again, consult the PGP documentation for detailed help with these
    arguments.


    ARCHIVE A FILE
    ~~~~~~~~~~~~~~
    This is the -c argument in PGP.  Sometimes you may just want to 
    conventionally encrypt a file, or any number of files, for your own
    backup and security purposes.  Keep in mind that PGP will ask you 
    for a pass phrase to encrypt the file with.  Its not a good idea to 
    use your secret key pass phrase even though it may look like PGP is 
    calling for that.  
    

    KEY RING MENU
    ~~~~~~~~~~~~~
    Choosing this menu option, will take you to the key ring management
    submenu.  The key ring menu is broken down into three sections:

        1) Access Key Ring Submenu (copy, view, add, remove keys)

        2) Access Certification Submenu (certify, signatures, etc.)

        3) Access Create/Revoke Submenu (edit UserID, revoke keys, etc.)

    These three options have hotkeys assigned to them which are 1, 2, and
    3, and are shown on the menu at the left side of the menu.  To leave  
    the Key Ring Menu or any of its submenus, just slap the Escape key.

    Take a peek at the PGP documentation for more detailed information
    on what the various -k (key arguments) are.  I could repeat them 
    here, but if you have this shell, then you have PGP too!  
    


THINGS WORTH MENTIONING
-------------------------------------------------------------------------- 

As I mentioned in "Getting Started" above, when you first start PGPShell, 
the first thing it does is look for your AUTOEXEC.BAT so it can find out 
where your PGP directory is.  After its done that, it will create its 
PGPSHELL.CFG file if it hasn't already.  (This will only happen once when 
you first run PGPShell.)  Last, it looks at your PUBRING.PGP public key 
ring to make a list of all of the first names of the UserID's on your key 
ring.  Whenever you execute a command from within the shell, it will first 
display this list of UserID's in rows of four.  So if you have my public 
key on your ring (Johannes Kepler) along with a few other friends, say 
John Bigbooty (Big-Boo-TAY), Zaphod Bebblebrox, and Linda Lovelace, it will 
display like this:

        Johannes        John          Zaphod          Linda
       Your Name

This will be displayed at the top of every PGP execution so that you have 
instant access to message recipients and their names.

Each time you execute a PGP command, this list gets updated.  You'll see a 
brief flash (depending on how fast your computer is) with the PGP copyright 
notice/blurb and then the menu will appear again.  This is PGPShell running 
the -kv (key view) argument to keep the list updated after key removals, 
additions, etc.  You'll also see the PGP blurb right at the beginning when 
you first start PGPShell.  

If you see this message: "No Key Ring!" instead of Johannes, Zaphod, etc., 
it means you either haven't created a PUBRING.PGP key ring, or PGPShell 
can't find your PGP directory.  If you haven't created a unique key pair, 
select Key Ring Menu item #3 (Access Create/Revoke Keys) and choose 
"Create a Public/Secret Key Pair" to make them.  If you've never used PGP 
before, this is the first thing you should do.  The second thing is add 
(or let PGPShell add) the environment variables to your AUTOEXEC.BAT file.



WINDOWS AND NETWORKS
----------------------------------------------------------------------------
    
You can run PGPShell in Windows by setting up a PIF file with low graphics, 
run in the foreground, etc.  Be careful about running PGP or PGPShell on a 
network however, since certain drivers can conflict with PGP.  I've found 
that Pathway Access' ODI and PWTCP drivers may lock up your computer if PGP 
is executed.  If you have problems with network drivers I suggest playing 
around with loading and unloading them high (@lh) and seeing what works 
best.  Just remember that PGP is a 200K executable and PGPShell is about 
120K, so if there's not enough memory you might have to use one of the many 
shareware programs that lets you choose a config upon startup.  For 99% of 
the people out there this paragraph doesn't even apply so I wouldn't worry.

    
    
PGPSHELL CONFIG FILE
----------------------------------------------------------------------------
    
PGPShell creates its own configuration file "on the fly."  That is to say 
that if it discovers that the PGPSHELL.CFG file is not in the current 
directory, it will ask you two questions to create it.  The first question 
is simply, "What is your name?"  If PGPShell knows your name, it can plug 
that in when necessary instead of having PGP ask you just before doing a 
step.  The other question is "What text editor do you want to use?"  A 
directory dialogue box will pop up and ask you to choose one.  If you don't 
have a favorite text editor just go into your \DOS directory and choose 
EDIT.COM instead.  If in the future you decide you want another text editor 
you can either manually change the PGPSHELL.CFG file or delete it and let 
PGPShell create another one at start up.



CLOSING COMMENTS
----------------------------------------------------------------------------

PGPShell should be easy to use.  My hope is that more Windows-oriented 
people will use PGPShell and subsequently PGP, just because of its ease of 
use.  Privacy shouldn't be the exception, it should be the norm; and it 
shouldn't be a hassle or only for the UNIX gurus!

If you have any questions or comments, please feel free to e-mail me on the 
Internet at <still_j@cubldr.colorado.edu> or at the Voodoo Machine if 
you're a BBSer.

Also included in this file is KEPLER.ASC which is my public key.  If you 
want to get down to the business of public key encryption, ADD my key to 
your public key ring and send me an encrypted e-mail message of what you do 
or don't like about PGPShell.  It would be rewarding to hear from you about 
what improvements in the future you would like or even what the weather is 
like in your country.


    
REGISTRATION
----------------------------------------------------------------------------
    
Nope!  This is freeware.  Do me a favor and give a copy of PGPShell to at 
least two of your co-workers, friends, enemies (why not?) and anyone else 
who's interested in privacy.


    
CREDITS
----------------------------------------------------------------------------

Thanks to Technojock Software, Inc. for their toolkit that I horked to throw 
this together.  I freely admit I didn't register it, but if you want to 
acquire an excellent and comprehensive toolkit (I think its only $50) give 
'em a call on Compu$erve at 74017,227, or write:  P.O. Box 820927, 
Houston, TX  77282-0927.  Thanks to everyone who wrote me about the first 
version and gave me valuable suggestions.

Also thanks to Katherine, my future wife (in oh, about 20 days...) who puts 
up with my strange ways, friends, and hours-long code sessions into the 
night.  Then again she's kinda strange too...  
        
Visit Port Watson!  Ask Kevin how at <portwatson@firefly.rain.com> and tell
him Johannes sent ya!

Bye!
    
-------------- EOF ---------------------------------------------------------


    







