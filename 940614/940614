From jefft@netcom.com  Tue Jun 14 17:33:48 1994
Received: from netcom.com (netcom9.netcom.com) by scss3.cl.msu.edu (4.1/4.7)  id AA12968; Tue, 14 Jun 94 17:33:48 EDT
Received: by netcom.com (8.6.8.1/SMI-4.1/Netcom)
	id OAA15558; Tue, 14 Jun 1994 14:33:59 -0700
Date: Tue, 14 Jun 1994 14:33:59 -0700
From: jefft@netcom.com (Jeff Thompson)
Message-Id: <199406142133.OAA15558@netcom.com>
To: ripem-dev@ripem.msu.edu
Subject: Consistent issuer names in chains


I'm surprised that there's been no hubub since Mark suggested that it
would be alright for an issuer to modify their DN over time without
invalidating certificates that they have made.

There is another twist to this (and why I am harping on it).  I need
to implement an extended trust list which says who I trust to make
certificates for other people.  The same issue arises here: Should I
just specify the public key whose private key may make certificates
for others, or should I also include the DN, which means I only trust
that person to make certificates for others *when they put that
particular DN* as the issuer name in the certificate?

- Jeff
From mrr  Tue Jun 14 17:41:37 1994
Received: by scss3.cl.msu.edu (4.1/4.7)  id AA13032; Tue, 14 Jun 94 17:41:37 EDT
Message-Id: <9406142141.AA13032@scss3.cl.msu.edu>
From: mrr@scss3.cl.msu.edu (Mark Riordan)
Date: Tue, 14 Jun 1994 17:41:36 -0400
X-Mailer: Mail User's Shell (7.2.5 10/14/92)
To: ripem-dev@ripem.msu.edu
Subject: Re: Consistent issuer names in chains

> I'm surprised that there's been no hubub since Mark suggested that it
> would be alright for an issuer to modify their DN over time without
> invalidating certificates that they have made.

I don't feel too strongly about this particular issue.
But, I figure that that's what CRL's are for.  
I say, if a user's key hasn't been invalidated by a CRL,
the key's OK by me by any name.

Still, this *would* require looking up CRL's by public key
in addition to DN.
/mrr
From raylau@MIT.EDU  Tue Jun 14 18:46:06 1994
Received: from MIT.EDU (MIT.MIT.EDU) by scss3.cl.msu.edu (4.1/4.7)  id AA13104; Tue, 14 Jun 94 18:46:06 EDT
Received: from TMS-E40-PORT-1.MIT.EDU by MIT.EDU with SMTP
	id AA21181; Tue, 14 Jun 94 18:46:02 EDT
Message-Id: <9406142246.AA21181@MIT.EDU>
Date: Tue, 14 Jun 94 18:46:52 EST
From: raylau@MIT.EDU (Raymond Lau)
To: ripem-dev@scss3.cl.msu.edu
Subject: Re: Consistent issuer names in chains

Mark writes:

> Still, this *would* require looking up CRL's by public key
> in addition to DN.

Hmm.  I sense a can of worms being open.

CRLs only contain serial numbers...

The reason I have not replied to Mark's somewhat controversial comment
is that I sense that we are really deviating further away from PEM
and my level of enthusiasm for going this far afield is greatly
diminished....

 -Ray
From strnlght@netcom.com  Tue Jun 14 18:47:16 1994
Received: from netcom.com (netcom13.netcom.com) by scss3.cl.msu.edu (4.1/4.7)  id AA13131; Tue, 14 Jun 94 18:47:16 EDT
Received: by netcom.com (8.6.8.1/SMI-4.1/Netcom)
	id PAA21948; Tue, 14 Jun 1994 15:47:07 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199406142247.PAA21948@netcom.com>
Subject: Re: Consistent issuer names in chains
To: ripem-dev@ripem.msu.edu
Date: Tue, 14 Jun 1994 15:47:07 -0700 (PDT)
In-Reply-To: <9406142141.AA13032@scss3.cl.msu.edu> from "Mark Riordan" at Jun 14, 94 05:41:44 pm
Reply-To: david@sternlight.com
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 1154      

> 
> > I'm surprised that there's been no hubub since Mark suggested that it
> > would be alright for an issuer to modify their DN over time without
> > invalidating certificates that they have made.
> 
> I don't feel too strongly about this particular issue.
> But, I figure that that's what CRL's are for.  
> I say, if a user's key hasn't been invalidated by a CRL,
> the key's OK by me by any name.
> 
> Still, this *would* require looking up CRL's by public key
> in addition to DN.

Have I been too tactful? I thought I was clear that in my view the trust
model depends on the DN, and that is not Ripem's business to weaken the
trust model. It is up to certifiers and keyholders to handle changes in DN,
not Ripem.

Look--this whole idea of moving away from the DN as the unique identifier is
a disaster that would destroy any Ripem credibility with respect to the PEM
trust model. It would give up the one major advantage Ripem has with respect
to PGP. Am I being too subtle here?  :-)

If Ripem did this, the user base would, in my view, drop abruptly as people
switched to PGP. It would be a pity if Jeff helped build it and nobody came.

David
From strnlght@netcom.com  Tue Jun 14 19:01:41 1994
Received: from netcom.com (netcom13.netcom.com) by scss3.cl.msu.edu (4.1/4.7)  id AA13168; Tue, 14 Jun 94 19:01:41 EDT
Received: by netcom.com (8.6.8.1/SMI-4.1/Netcom)
	id QAA24043; Tue, 14 Jun 1994 16:01:37 -0700
From: strnlght@netcom.com (David Sternlight)
Message-Id: <199406142301.QAA24043@netcom.com>
Subject: Re: Consistent issuer names in chains
To: ripem-dev@ripem.msu.edu
Date: Tue, 14 Jun 1994 16:01:37 -0700 (PDT)
In-Reply-To: <199406142133.OAA15558@netcom.com> from "Jeff Thompson" at Jun 14, 94 05:33:56 pm
Reply-To: david@sternlight.com
X-Mailer: ELM [version 2.4 PL23]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 1963      


> 
> 
> I'm surprised that there's been no hubub since Mark suggested that it
> would be alright for an issuer to modify their DN over time without
> invalidating certificates that they have made.
> 
> There is another twist to this (and why I am harping on it).  I need
> to implement an extended trust list which says who I trust to make
> certificates for other people.  The same issue arises here: Should I
> just specify the public key whose private key may make certificates
> for others, or should I also include the DN, which means I only trust
> that person to make certificates for others *when they put that
> particular DN* as the issuer name in the certificate?
> 

The DN, Jeff, the DN. Forget this business of identifying by key.

Repeat after me: The way the PEM model works, and the keyservers work, a DN
cannot have more than one key. Several DNs can have the same key. Thus if
you use the DN as the identifier you should always get only one key, and if
you don't it's an error that should be purged. But if you use the key you
can have more than one DN, likely creating serious problems for users and
maybe for Ripem.

For example, if a DN had more than one key, people would go nuts figuring
which key to use to send messages, so there are good reasons to force that
situation.

If a user changes his DN, only he, not Ripem, will know if he has the same
role. Ripem should not let him get away with slipping his new DN over the
old key. He should be required to get a new certificate for his new DN
(perhaps with the same key if his role is the same). Similarly, his former
employer may wish to cancel his old DN/Key Pair, and make sure he can't read
any more company mail if it is inadvertently encryupted with the old key.
Thus the CRL helps, but while it is waiting to "take" he should not be
permitted to use the same keys under a different DN to get any privileges of
those old keys because Ripem is ignoring the DN discrepancy.

David

From mrr  Tue Jun 14 19:25:46 1994
Received: by scss3.cl.msu.edu (4.1/4.7)  id AA13223; Tue, 14 Jun 94 19:25:46 EDT
Message-Id: <9406142325.AA13223@scss3.cl.msu.edu>
From: mrr@scss3.cl.msu.edu (Mark Riordan)
Date: Tue, 14 Jun 1994 19:25:46 -0400
X-Mailer: Mail User's Shell (7.2.5 10/14/92)
To: ripem-dev@ripem.msu.edu
Subject: Re: Consistent issuer names in chains

> I sense that we are really deviating further away from PEM
> and my level of enthusiasm for going this far afield is greatly
> diminished....

I haven't read through all the latest MIME/PEM stuff.
Is this issue addressed, directly or indirectly, in the
latest drafts?
I really don't want to buck current trends.
Like Ray (and David), I'd rather be standard on this if possible.
/mrr
