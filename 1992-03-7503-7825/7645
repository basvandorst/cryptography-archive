Xref: msuinfo comp.lang.c:49288 comp.os.msdos.programmer:12022 sci.crypt:7645
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!usc!wupost!waikato.ac.nz!comp.vuw.ac.nz!actrix!Kris.Heidenstrom
Newsgroups: comp.lang.c,comp.os.msdos.programmer,sci.crypt
Subject: Re: "Hiding" variables in C
Message-ID: <1992Mar12.122822.7714@actrix.gen.nz>
From: Kris.Heidenstrom@bbs.actrix.gen.nz
Date: Thu, 12 Mar 1992 12:28:22 GMT
Sender: Kris.Heidenstrom@actrix.gen.nz (Kris Heidenstrom)
References: <1992Mar9.081248.14072@actrix.gen.nz> <1992Mar11.035730.29780@uwm.edu> <1992Mar11.163118.6135@exu.ericsson.se>
Organization: Actrix Information Exchange
Lines: 39

In article <1992Mar11.163118.6135@exu.ericsson.se> exuhag@exu.ericsson.se (James Hague) writes:
> Even if somebody handed me the C or Pascal source to a major MS-DOS
> program, I still wouldn't feel comfortable making changes to the code.
> After all, you need to understand the design philosophy behind it and
> exactly why everything was done the way it was.  You'd have to be
> *very* careful making any modifications.  I seriously doubt that anyone
> disassembling an EXE file is going to ever fully understand the program
> they are looking at.  Sure, it is possible.  But good grief...

Seconded.

In my experience with one commercial disassembling package, I have found that
the process of disassembling an existing program goes something like this:

1. Figure out what is code and what is data.  Easy for a person, but at least
   the package I have seems to have a lot of trouble with this.

2. Get the program to a point where it can be re-assembled and generates the
   same object file.

3. Figure what references mean what.  This can be *very* time-consuming. 
   There are so many ways to express things when you are writing a program,
   which all look the same when expressed as instructions.  For example, if
   you see the instruction add ax,506h, you don't know *what* that 506h refers
   to.  It could be a count (1286 decimal), an absolute offset, the difference
   between two internal tables, goodness knows what!

4. Try to understand the structure of the code.

5. Now you are getting towards a position where you can actually modify the
   program  :-)

Kris
--
"Minister, can I just begin by asking why, with manufacturing output down
and Sterling showing a steep decline on world markets, are you wearing a
giant rabbit costume?" - Interview sketch, Alexei Sayle's Stuff
-- 
Kris.Heidenstrom@bbs.actrix.gen.nz  Box 27-103, Wellington, New Zealand
