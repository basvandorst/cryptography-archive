Path: msuinfo!caen!zaphod.mps.ohio-state.edu!sample.eng.ohio-state.edu!purdue!mentor.cc.purdue.edu!pop.stat.purdue.edu!hrubin
From: hrubin@pop.stat.purdue.edu (Herman Rubin)
Newsgroups: sci.crypt
Subject: Re: Strong pseudoprime generation, DSS algo??
Message-ID: <41474@mentor.cc.purdue.edu>
Date: 21 Mar 92 15:47:16 GMT
References: <2238@accucx.cc.ruu.nl>
Sender: news@mentor.cc.purdue.edu
Organization: Purdue University Statistics Department
Lines: 53

In article <2238@accucx.cc.ruu.nl> nevries@accucx.cc.ruu.nl (Nico de Vries.) writes:

>The following is in the NIST DSS (Digital Signature Standard) about
>pseudoprime generation:

|>In  order to generate the primes p and q, a primality test is required. 
|>There are several fast probabilistic algorithms available.  The 
|>following algorithm is a simplified version of a procedure due to
|>M.O. Rabin, based in part on ideas of Gary L. Miller.  [See
|>Knuth, The Art of Computer Programming, Vol. 2, Addison-Wesley, 1981, 
|>Algorithm P,page 379.]  If this algorithm is iterated n times, it
|>will produce a false prime with probability no greater than 1/4^n. 

|>Therefore, n=50 should give an acceptable probability of error. 
|>To  test whether an integer is prime: 

|>   1. Set i = 1 and n = 50. 
|>   2. Set w = the integer to be tested, w = 1 + 2^a m, 
|>      where m is odd and 2^a is the largest power of 2 dividing w-1. 
|>   3. Generate a random integer b in the range 1<b<w. 
|>   4. Set j = 0 and z = b^m mod w. 
|>   5. If j = 0 and z = 1, or if z = w-1, go to step 9. 
|>   6. If j> 0 and z = 1, go to step 8. 
|>   7. j = j + 1. If j < a, set z = z^2 mod w and go to step 6. 
|>   8. w is not prime.  Stop. 
|>   9. If i< n, set i = i + 1 and go to step 3.  Otherwise, w 
|>      is probably prime. 

>In "ALGORITMICS theory and practice", G Brasssard, P Bratley, Prentice-Hall
>1988; page 270; the Rabin Monte Carlo for strong pseudoprome generation is
>described. This discription does NOT include lines 6: and 7: of the above
>discription.

>Question; what is the use of these lines, they seem to end always in line 8
>(waste of time) and they are not in the discription of the Rabin algo at all.

>Is this a typing error, am I seeing something wrong or whatever??

I have not checked the references, but the only way that lines 6 and 7
could be omitted would be to replace m by (w-1)/2 in line 4; to see this,
let w=17, which is prime, and in this case m=1.  Try b=3 to see that
it is necessary to at least raise to the 8th power.

Also, there is an error in line 6; if j < a and z = w-1, go to step 9.

The Miller algorithm is to do this for enough b's to verify primality.
Assuming the extended Riemann hypothesis, one can bound the b's which
need testing.
-- 
Herman Rubin, Dept. of Statistics, Purdue Univ., West Lafayette IN47907-1399
Phone: (317)494-6054
hrubin@pop.stat.purdue.edu (Internet, bitnet)  
{purdue,pur-ee}!pop.stat!hrubin(UUCP)
