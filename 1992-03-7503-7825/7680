Path: msuinfo!caen!zaphod.mps.ohio-state.edu!magnus.acs.ohio-state.edu!usenet.ins.cwru.edu!gatech!europa.asd.contel.com!uunet!mcsun!corton!chorus!nocturne.chorus.fr!jloup
From: jloup@nocturne.chorus.fr (Jean-Loup Gailly)
Newsgroups: sci.crypt
Subject: Re: ZIP password cracking
Message-ID: <13128@chorus.fr>
Date: 16 Mar 92 17:43:49 GMT
References: <13101@chorus.fr> <1215@eouk9.abcl.co.uk>
Sender: jloup@chorus.fr
Reply-To: jloup@nocturne.chorus.fr (Jean-Loup Gailly)
Organization: Chorus systemes, Saint Quentin en Yvelines, France
Lines: 54

Andrew Haley <ahaley@abcl.co.uk> writes:

>	PKZIP time: 15 seconds
>	SDCRYPT time: 6.5 seconds.
> Less than 50% extra.

You are comparing encryption time to compress time. I was comparing
zip encryption time to DES encryption time. That's not the same
thing. But your point is correct though: if you care about security,
the encryption time is negligible.

>> - the password check should be removed.
> This really doesn't help.  Suppose an attacker has both the plaintext
> and the ciphertext; all he has to do is decrypt the first few bytes of
> the file, and compare.

Yes, the pkzip encryption is vulnerable to a known plaintext attack
for short passwords. I said the encryption woud be stronger without
the password check. Stronger than "very weak" is still weak. But the
weakness only exists for badly chosen passwords. According to Robert
Jung, the weakness in ARJ is present for all passwords, even long ones.

I know that people often use bad passwords, and pkzip encryption
should not be trusted in this case. But I am looking at it from a
theoretical point of view, assuming well chosen passwords and a truly
random header. sci.crypt is a "sci" group, after all. In this context,
I'd like to know if the algorithm is inherently weak or not.

> The only really safe way to generate cryptographically random numbers
> in the absence of special hardware is to start with a random secret
> seed.

I disagree. PGP measures the delays between each key press with a very
good accuracy, and uses the low order bits to construct a truly
random number. But you might consider that the keyboard and timer present on 
each PC is "special hardware" :-)

> This can be generated from some secret key entered by the user.
> Why bother?  It's better to use straight DES (or similar) in CBC mode.
> Then you don't need random numbers.

I agree. Again, I was more interested in the theoretical aspect.  Even
with DES passwords must be well chosen, because exhaustive search also
breaks DES for short passwords. In these conditions (good passwords)
pkzip's encryption has not yet been cracked. (I do *not* mean it
cannot be cracked.)

> Let's not let these guys off the hook on the grounds of performance;

I think that you are not fair to Phil Katz. The real problem is that
users must be educated to use long passwords. This problem also exists
for DES.

Jean-loup Gailly
