Xref: msuinfo comp.lang.c:49038 comp.os.msdos.programmer:11852 sci.crypt:7568
Path: msuinfo!netnews.upenn.edu!jvnc.net!yale.edu!think.com!sdd.hp.com!swrinde!elroy.Jpl.Nasa.Gov!jato!mahendo!thyme!kaleb
From: kaleb@thyme.jpl.nasa.gov (Kaleb Keithley)
Newsgroups: comp.lang.c,comp.os.msdos.programmer,sci.crypt
Subject: Re: "Hiding" variables in C
Message-ID: <1992Mar6.161748.13972@thyme.jpl.nasa.gov>
Date: 6 Mar 92 16:17:48 GMT
References: <hr8fd90@sgi.sgi.com> <1992Mar5.210232.3211@b11.ingr.com>
Organization: Jet Propulsion Laboratory, Pasadena, CA
Lines: 22

In article <1992Mar5.210232.3211@b11.ingr.com> lester@naomi.b23b.ingr.com writes:
>|> amesml@monu1.cc.monash.edu.au (Mark L. Ames) writes:
>|> +---------------
>|> | I want to "hide" a variable in a C program so that it will
>|> | resist decompilation.
>|> +---------------
>
>Use self-modifying code.  Then the snooper would have to stop your program
>and examine it at the right time.  Examining the executable on disk
>would eventually uncover the self-modifying part, but would make for
>more work for the snooper.  You could have self-modifying code modify

This will work in MS-DOS, but will undoubtedly generate a segmentation
violation on UNIX as the text segment is not writable.  If you want to
"resist decompilation", I suggest you supply source; then no one will
need or want to decompile the binary!

-- 

Kaleb Keithley                               kaleb@thyme.jpl.nasa.gov

Not authorized, in any way, shape, or form, to speak for anyone.
