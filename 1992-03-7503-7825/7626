Xref: msuinfo comp.lang.c:49208 comp.os.msdos.programmer:11974 sci.crypt:7626
Newsgroups: comp.lang.c,comp.os.msdos.programmer,sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!usc!elroy.jpl.nasa.gov!ames!sgi!rigden.wpd.sgi.com!rpw3
From: rpw3@rigden.wpd.sgi.com (Rob Warnock)
Subject: Re: "Hiding" variables in C
Message-ID: <i4f91fk@sgi.sgi.com>
Sender: rpw3@rigden.wpd.sgi.com
Organization: Silicon Graphics, Inc.  Mountain View, CA
Date: Wed, 11 Mar 1992 07:16:17 GMT
Lines: 31

fijma@cs.utwente.nl (Duco Fijma) writes:
+---------------
| >If a program can be 'understood' by a computer, then it can eventually be
| >understood by a person.
| 
| This is not necessary. A computer 'understands', by evaluating machinecode,
| one single execution. Your problem is to construct a program, say a 'C'
| program, that defines ALL  possible executions. This is another exercise.
+---------------

Sorry, you're trying to redefine the problem in a very abstract, theoretical
way that has nothing to do with the original discussion. "The problem" had
nothing to do with "constructing a program" per se, but with examining the
extent to which obfuscation of an application program is a practical and
effective way (or not) to prevent 3rd-party copying of that program and/or
its algorithms (or other thought-to-be-valuable "secrets").

In the context of that original problem, a human+software team is a perfectly
reasonable approach to cracking an obfuscated program, and is *likely* to be
what is used! ...which is why obfuscation is not a particularly effective way
to hide anything about one's software (except from amateurs).


-Rob

-----
Rob Warnock, MS-9U/510		rpw3@sgi.com
Silicon Graphics, Inc.		(415)335-1673
2011 N. Shoreline Blvd.
Mountain View, CA  94039-7311

