Path: msuinfo!caen!zaphod.mps.ohio-state.edu!samsung!transfer!ellisun.sw.stratus.com!cme
From: cme@ellisun.sw.stratus.com (Carl Ellison)
Newsgroups: sci.crypt
Subject: Re: Definition of ``known plaintext attack''
Message-ID: <1433@transfer.stratus.com>
Date: 19 Mar 92 21:06:06 GMT
References: <1992Mar19.182218.24309@ux1.cso.uiuc.edu>
Sender: usenet@transfer.stratus.com
Organization: Stratus Computer, Software Engineering
Lines: 26

In article <1992Mar19.182218.24309@ux1.cso.uiuc.edu> ceblair@ux1.cso.uiuc.edu (Charles Blair) writes:
>
>   I am not sure which of these (if either) is the ``official'' definition:
>
>(1) Given a plaintext-ciphertext pair, any ciphertext written using the
>same key can be efficiently decoded.
>
>(2) Given a plaintext-ciphertext pair, the key can be recovered.
>
>   Suppose we are doing a one-time pad using a pseudo-random number generator
>with the seed as the key.  This is vulnerable to known plaintext using
>definition (1), but not necessarily using definition (2).


The term has been applied to (2), in my experience, but it's not a single
plaintext-ciphertext pair usually.  Instead, it's enough to derive
all the information needed, for example, to get the state of the PRNG
and once you have that state, you know all future outputs and probably
all past outputs in the run.

I'm not sure (1) makes any sense.

If you really were doing a one-time pad (ie., with true random
numbers) (1) would never apply (since you would never re-use that
piece of key string) and there's no machine state to derive so (2)
doesn't apply either.
