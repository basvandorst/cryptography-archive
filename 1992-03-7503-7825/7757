Newsgroups: sci.crypt
Path: msuinfo!caen!sdd.hp.com!cs.utexas.edu!utgpu!mirage1
From: mirage1@gpu.utcs.utoronto.ca (Robert Ames)
Subject: NSEA Encryption
Message-ID: <1992Mar23.012555.9395@gpu.utcs.utoronto.ca>
Followup-To: sci.crypt
Keywords: NSEA
Sender: mirage1@gpu.utcs.utoronto.ca
Organization: UTCS Public Access
Date: Mon, 23 Mar 1992 01:25:55 GMT
Lines: 86

Peter Gutmann asked for comments on his NSEA encryption program.  I
generated some 10,000 byte files consisting of all zero bytes in the
first instance, and all zeroes except the last byte in the second
instance, and I encrypted them in CFB mode with NSEA.  The resulting
encrypted files differed by one bit.  Generally, a mark of a good
cipher is that a small change in plaintext results in a large change
in ciphertext, so I'd be hesitant to use this program as is.

I was not successful in putting together a good CBC mode program from
the code, so I haven't been able to test that.

Case #1:
--------
File A: 10,000 byte file, all zeroes ('\0'), encrypted with NSAE
        in CFB mode with key of "000000";
File B: 10,000 byte file, all zeroes ('\0'), EXCEPT for byte number
        10,000, which was one ('\1'), encrypted with NSAE
        in CFB mode with key of "000000".

		TO TRANSFORM one.dmp INTO zero.dmp ...

*** CHANGE 625 IN one.dmp TO 625 IN zero.dmp ***
<002700: B9 55 A2 58 2A 39 B2 D6-F3 85 78 5E FE 29 48 F0

---------------
>002700: B9 55 A2 58 2A 39 B2 D6-F3 85 78 5E FE 29 48 F1

===========================================================

Case #2:
--------
File A: 10,000 byte file, all zeroes ('\0'), encrypted with NSAE
        in CFB mode with key of "111111";
File B: 10,000 byte file, all zeroes ('\0'), EXCEPT for byte number
        10,000, which was one ('\1'), encrypted with NSAE
        in CFB mode with key of "111111".

                TO TRANSFORM zero1.dmp INTO onel1.dmp ...

*** CHANGE 625 IN zero1.dmp TO 625 IN onel1.dmp ***
<002700: 67 13 0E 4D 60 F6 C9 5D-9A 46 00 FE A3 AB 36 08

---------------
>002700: 67 13 0E 4D 60 F6 C9 5D-9A 46 00 FE A3 AB 36 09

===========================================================

To generate chosen plaintext:

#include <stdio.h>
#include <stdlib.h>

int main(int, char **);
void usage(char *);

int
main(int argc, char **argv)
{
    long i;
    long filesize = 0L;
    int c, first, last;

    if (argc != 5) usage(argv[0]);
    first = atoi(argv[1]);
    last = atoi(argv[2]);
    c = atoi(argv[3]);
    if (c>256) usage(argv[0]);
    filesize = atol(argv[4]);
    fprintf(stderr, "Filling with %ld characters\n", filesize);
    filesize -= 2;
    putchar(first);
    for (i=0L; i<filesize; i++) putchar(c);
    putchar(last);
    return 0;
}

void
usage(char *fn)
{
    printf("Usage: %s firstchar lastchar fillchar filesize\n", fn);
    exit(1);
}

-- 
Robert Ames mirage1@gpu.utcs.utoronto.ca  P.O. Box 724, Station 'A', Toronto

