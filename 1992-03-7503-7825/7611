Xref: msuinfo comp.lang.c:49165 comp.os.msdos.programmer:11935 sci.crypt:7611
Path: msuinfo!caen!sol.ctr.columbia.edu!spool.mu.edu!uunet!comp.vuw.ac.nz!actrix!Kris.Heidenstrom
From: Kris.Heidenstrom@bbs.actrix.gen.nz
Newsgroups: comp.lang.c,comp.os.msdos.programmer,sci.crypt
Subject: Re: "Hiding" variables in C
Message-ID: <1992Mar10.104422.29766@actrix.gen.nz>
Date: 10 Mar 92 10:44:22 GMT
Article-I.D.: actrix.1992Mar10.104422.29766
References: <55500@cup.portal.com> <1992Mar9.081248.14072@actrix.gen.nz> <1992Mar9.163308.1905@info.ucl.ac.be>
Sender: Kris.Heidenstrom@actrix.gen.nz (Kris Heidenstrom)
Organization: Actrix Information Exchange
Lines: 44

In article <1992Mar9.163308.1905@info.ucl.ac.be> Meessen@slig.ucl.ac.be (Christophe Meessen) writes:
> In article <1992Mar9.081248.14072@actrix.gen.nz>, Kris.Heidenstrom@bbs.actrix.gen.nz writes:
> ..
> > The program has to be able to be run by the computer.
> > Therefore it is crack-able.
> 
> Can you prove this assertion ?

Not having all possible programs in front of me, it's impossible to prove that
all possible programs are crackable.

But, it stands to reason that given enough knowledge, experience and patience,
it is possible to crack any program.

If a program can be 'understood' by a computer, then it can eventually be
understood by a person.


To make a program as difficult as possible to understand by a person, you have
to look at the differences between a processor and a person.

A processor executing a program has no understanding of what it's doing.
It just does what it's told.  It can do this very very quickly  :-)

A person trying to understand a program tries to understand what it's doing.
It rapidly tires of doing exactly what it's told.  It is not very fast.
It learns from experience.

You would need to exploit the characteristics that the person does not have.
For example, making a program structurally complicated (does not fit well with
ease of programming or maintenance  :-), frustrating the potential cracker's
understanding by using a _disgusting_ code generator (one early Turbo Pascal
versions has p*ssed me off considerably), or by using an interpreted language
of your own design (or obscure enough that most people won't be familiar with
it).

Keep banging the rocks together,

Kris
--
"...Recently I have been suffering from morning sickness...  'Cause every
time I read about the Royal Family I throw up" - Monologue, Alexei Sayle
-- 
Kris.Heidenstrom@bbs.actrix.gen.nz  Box 27-103, Wellington, New Zealand
