Xref: msuinfo comp.lang.c:49178 comp.os.msdos.programmer:11945 sci.crypt:7619
Path: msuinfo!caen!spool.mu.edu!mips!mips!munnari.oz.au!bruce!monu6!monu1.cc.monash.edu.au!amesml
From: amesml@monu1.cc.monash.edu.au (Mark L. Ames)
Newsgroups: comp.lang.c,comp.os.msdos.programmer,sci.crypt
Subject: Repost: Hiding Variables in C
Keywords: Disk Crash, mail lost
Message-ID: <1992Mar9.222347.20502@monu1.cc.monash.edu.au>
Date: 9 Mar 92 22:23:47 GMT
Article-I.D.: monu1.1992Mar9.222347.20502
Followup-To: poster
Organization: Monash University, Australia.
Lines: 25


##############################################################
I posted the article below on March 3, just before our system
crashed. Any email replies have been lost. Please remail.
Thanks

MARK
##############################################################

>I want to "hide" a variable in a C program so that it will
>resist decompilation. I'm not familiar with decompilation
>techniques, but I have read that some machine instructions can
>be misintrepreted when decompiling to assembler.

>Is there some way to do this in C? I've thought of declaring a
>global pointer to the variable and assigning values to it by
>calls to functions that declare a set of values, XOR them and
>return the result which can be used in constructing the final
>value. But I don't know if all that jumping around really
>achieves anything. 

>The application is for 80x86 machines. The dialect is Turbo C
>2.0, which supports in-line assembler.

>Please reply by email -- I'll post results.
