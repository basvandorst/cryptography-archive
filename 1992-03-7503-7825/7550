Path: msuinfo!netnews.upenn.edu!jvnc.net!yale.edu!qt.cs.utexas.edu!cs.utexas.edu!asuvax!mcdphx!udc!motcsd!mri!gafter
From: gafter@mri.com (Neal Gafter)
Newsgroups: sci.crypt
Subject: Re: MD-crypt (was Re: Khufu and Khafre)
Message-ID: <GAFTER.92Mar3102454@sun131.mri.com>
Date: 3 Mar 92 18:24:54 GMT
References: <1992Feb13.231223.8159@cs.aukuni.ac.nz> <1992Feb14.034519.15459@qualcomm.com>
	<GAFTER.92Feb27182115@sun131.mri.com>
	<1992Feb29.024020.17352@qualcomm.com>
Sender: news@mri.uucp
Reply-To: from
Organization: Microtec Research Inc, Santa Clara, CA
Lines: 26
In-Reply-To: karn@qualcom.qualcomm.com's message of 29 Feb 92 02: 40:20 GMT

Phil> But suppose I now expand my "black box" to include the time seeding
Phil> and cipher block chaining mechanisms. It's no longer an electronic
Phil> code book that always produces the same 32 bytes of ciphertext given
Phil> the same 32 bytes of plaintext and 128 bytes of key.  Now it encrypts
Phil> a varying length plaintext message to a (somewhat larger) ciphertext
Phil> message, and even if repeatedly encrypt the same plaintext with the
Phil> same key I will never get the same ciphertext twice (well, it's not
Phil> very likely until I do it on the order of 2^64 times).

What if the opponent can choose the next block of plaintext in a
single message based on the encrypted version of the previous block?
Then you are vulnerable to manipulation of the plaintext (that is, the
opponent generating different plaintext continuations) to produce the
same partial ciphertext as some other message.  Once this is done, the
system can be broken using the same techniques that apply to the
unseeded cipher.  (The opponent doesn't ever need to supply the `same'
plaintext and get the `same' ciphertext to break the cipher.)

Bite the bullet and go 3-4 rounds.  It's been proven (conditionally)
secure.

Regards,
Neal
--
Internet:   neal@cs.rochester.edu (Neal Gafter)
phone:      (408) 980 - 1300 (ask for me)
