Xref: msuinfo sci.crypt:7708 comp.compression:2614
Newsgroups: sci.crypt,comp.compression
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!usc!elroy.jpl.nasa.gov!nntp-server.caltech.edu!harry!bruce
From: bruce@harry.ugcs.caltech.edu (Bruce J Bell)
Subject: Re: Source for _real_ random numbers
Message-ID: <bruce.700895770@harry>
Sender: news@cco.caltech.edu
Nntp-Posting-Host: harry.ugcs.caltech.edu
Organization: California Institute of Technology, Pasadena
References: <CONSP04.92Mar16170227@bingsuns.bingsuns.cc.binghamton.edu> <1992Mar17.185517.2014@athena.mit.edu> <unruh.700878650@physics.ubc.ca> <1992Mar18.022728.25075@athena.mit.edu>
Distribution: usa
Date: Wed, 18 Mar 1992 05:16:10 GMT
Lines: 31

jfc@athena.mit.edu (John F Carr) writes:

>In article <unruh.700878650@physics.ubc.ca>
>unruh@physics.ubc.ca (William Unruh [Unruh]) writes:

>> In fact I think one has to be very careful with using physically
>> generated random numbers. 

>His plans were to use the apparently random numbers as input to a software
>random number generator.  He also went to a lot of effort to remove any
>periodic trends in the input and measure only the noise.

One simple and effective(?) way to remove non-randomness from
physically-generated random numbers is to xor several near-
or semi-random bits together for 1 output bit.  This will reduce
deviations from randomness by raising them to a power of the
number of bits xor'ed.  eg:

suppose the probability of a 0 for each bit is 0.5 + e
xor of 2 bits: P(0) = (.5+e)^2 + (.5-e)^2 = .5 + 2*e^2
xor of 4 bits: P(0) = .5 + 8*e^4
...

Can anybody see any problems with this?  As long as |e| < 0.5, the xor
of n bits will converge to a .5/.5 probability exponentially with n.
What about higher-order statistics?


Bruce J. Bell

"Have brain, will travel"
