Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!mips!mips!decwrl!deccrl!bloom-beacon!bloom-picayune.mit.edu!news.mit.edu!jis
From: jis@MIT.EDU (Jeffrey I. Schiller)
Subject: Re: RSAREF and PEM
In-Reply-To: mark@windsor.a92104.sai.com's message of 21 Mar 92 02:35:00 GMT
Message-ID: <JIS.92Mar23012347@big-screw.MIT.EDU>
Sender: news@athena.mit.edu (News system)
Nntp-Posting-Host: big-screw.mit.edu
Organization: Massachusetts Institute of Technology
References: <29ca9c05@windsor.a92104.sai.com>
Date: Mon, 23 Mar 1992 06:23:47 GMT
Lines: 88

In article <29ca9c05@windsor.a92104.sai.com> mark@windsor.a92104.sai.com (Mark Windsor) writes:

   Path: bloom-picayune.mit.edu!snorkelwacker.mit.edu!usc!zaphod.mps.ohio-state.edu!pacific.mps.ohio-state.edu!linac!att!ucbvax!windsor.a92104.sai.com!mark
   From: mark@windsor.a92104.sai.com (Mark Windsor)
   Newsgroups: sci.crypt
   Date: 21 Mar 92 02:35:00 GMT
   Sender: daemon@ucbvax.BERKELEY.EDU
   Lines: 26

   I've looked at the RSAREF stuff a bit.  By itself it's pretty 
   useless.  It's basically intended to just produce a library that will be
   linked with code implementing the PEM, "Privacy Enhanced Mail",
   standard.

Although it is intended to be used with PEM, it is not restricted to
only be used with PEM. Importantly, it is not restricted for use only
with certificates (although it provides the cryptographic facilities
necessary to validate certificates). Nothing prevents you from writing
a public key mail system that doesn't use certificates (but does
provide confidentiality).

   What is the status of implementations of PEM?  Are they available?
   Is the "standard" fully standardized, or does more need to be done
   before conforming software can be written?

We (the PEM Working Group of the Internet Engineering Task Force) are
working out what we believe to be the final details before the PEM
documents can become proposed Internet Standards. The currently
available "Internet Draft" documents can be found in the normal places
for Internet Drafts. One such place is on NNSC.NSF.NET in the
/internet-drafts directory (just list all files in that directory that
match "*pem*"). These will updated shortly to reflect work that was
done at the IETF meeting last week in San Diego.  Trusted Information
Systems should shortly be in position to release their full PEM
implementation.

   How much longer will we have to wait?

Hopefully not much longer.

   Another point - it's clear to me what the real reason is for why
   the RSAREF license restricts users of the package to call it only
   through the specified interface points.  It's to protect the monopoly of
   RSA Data Systems, Inc. (RSADSI) on producing certificates for users'
   public keys.

The correct company name is RSA Data Security, not Systems. The
purpose of RSAREF is *not* to protect a monopoly, but to make patented
technology available to individuals at no charge. Although I don't
work for RSADSI, I suspect the reason they only want people to use the
specified interface points is so that newer versions can completely
change the internal procedures without concern about breaking
applications that may be coded to work with RSAREF.

   According to the PEM RFC's, RSADSI will, for $25, sell any user a
   certificate that he can use to prove that his public key is valid.  The
   certificates are good for a two year period.

The information you have is from outdated documents. $25 is probably
the maximum any user would need to pay to get a certificate. In fact
the price range goes from $0 to $25 depending on the type of
certificate and who issued it. I don't have time to go into details,
but the emerging PEM architecture is much more flexible then that
articulated in the original RFCs (1113-1115).

   The RFC's state that
   RSADSI has a monopoly on doing this, at least in the U.S.

RSA Data Security (actually Public Key Partners) have commercial
rights to patents that cover public key cryptography in the United
States. This isn't quite the same as a monopoly...

   Therefore,
   users must be prevented from using RSAREF to create signatures, or else
   RSADSI would not be able to make their money.  This is done by forbidding
   users to use the package for any functions other than those that are
   specifically listed.  Creating key certificates is notably absent from
   the approved list (checking certificates is, of course, permitted).

This conclusion is not valid. RSAREF was designed to provide the
cryptographic functions necessary to build an Internet PEM
application.  Such applications generally do not create certificates,
but they do validate them. As I said above, RSAREF does not require
that you even use certificates! RSAREF doesn't apriori require you do
anything, it is simply a toolkit designed with particular purpose in
mind.

				-Jeff
