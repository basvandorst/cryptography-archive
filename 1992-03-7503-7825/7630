Newsgroups: sci.crypt
Path: msuinfo!uchinews!linac!uwm.edu!ee!rick
From: rick@ee.ee.uwm.edu (Rick Miller)
Subject: Re: MD[45]
Message-ID: <1992Mar11.123743.9031@uwm.edu>
Sender: news@uwm.edu (USENET News System)
Organization: Jus' me.
References: <1992Mar10.174945.26761@unx.sas.com>
Date: Wed, 11 Mar 1992 12:37:43 GMT
Lines: 23

sasrdt@shewhart.unx.sas.com (Randall D. Tobias) writes:
>Where can I find a source which explains how Rivest's MD[45]
>cryptographic hashing algorithms work?  Are they based on RSA?  How do
>they work for hashing very similar files---say, C source code in an
>on-going development environment?  A certain up-date operation we might
>do takes a long time, and we don't want to have to do it if in fact the
>file hasn't changed, but we also don't want the overhead of a complete
>byte-by-byte comparison.

If you have both files in existence at the same time, the byte-by-byte
comparison will be the most resource-efficient way to go about it.

But, if you're saying you'd like to know if program.c has been *changed*
since the last compilation, why not just look at the time/date-stamp on
the file itself?  Usually, editors won't change that unless you've
modified the file.

If for some reason though, you can't use this and you don't have both
files around... I'd use the standard CRC check-'sum'.  It's a cheap
(time-wise) hash that shows small differences well.  It's good for
error-checking, and an error is usually just a small change.

     Rick Miller                                rick@discus.mil.wi.us
