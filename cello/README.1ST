Cello WWW Browser
Release 1.01a

16 March 1994
--------------------------------------------------------------
Table of Contents
--------------------------------------------------------------

1. What is Cello?
2. What you need to run Cello
3. Installation
4. Winsock notes
5. Documented (but not fixed) problems
6. Bug reports
7. New and repaired in this version.
8. File manifest for CELLO.ZIP


--------------------------------------------------------------
What is Cello?
--------------------------------------------------------------
Most of you already know this, or you wouldn't have grabbed the 
file -- but we get mail from people who have downloaded the 
package without knowing what it is.  This part's for them.

Cello is a multipurpose Internet browser which permits you to 
access information from many sources in many formats.  
Technically, it's a WorldWideWeb client application.  This 
means that you can use Cello to access data from WorldWideWeb, 
Gopher, FTP, and CSO/ph/qi servers, as well as X.500 directory 
servers, WAIS servers, HYTELNET, TechInfo, and others through external 
gateways.  You can also use Cello and the WWW-HTML hypertext 
markup standard to build local hypertext systems on LANS, on 
single machines, and so on.  Cello also permits the 
postprocessing of any file for which you've set up an 
association in the Windows File Manager -- for example, if you 
download an uncompressed Microsoft Word file from an FTP site, 
and the appropriate association exists in File Manager, Cello 
will run MS-Word on it for you.  This same capability is used 
to view graphics and listen to sound files you get from the Net.

--------------------------------------------------------------
What you need to run it
--------------------------------------------------------------
To run Cello, you need the files in this archive, plus some 
flavor of Winsock TCP/IP stack -- a piece of "middleware" which 
communicates with the Net.  Cello works with all of the popular 
Winsock packages, although some trouble has been reported with 
certain implementations (see below).  You will, of course, need 
to be directly connected to the network or have access to a 
SLIP or PPP server, depending on which of these your Winsock 
package supports.

Cello runs on any hardware with a 386SX chip or better.  We 
have seen it run with 2Mb RAM (with swapping on) on a 
386/SX-16, but it's not a pretty sight.  We recommend a minimum 
of 4 MB RAM.  You will want to install -- if you haven't already --
a video driver which supports 256-color operation.


--------------------------------------------------------------
Installation:
--------------------------------------------------------------
**************************************************************
* This information (and a great deal more) is available from *
* Cello's online help file, which can be viewed using the    *
* Windows help viewer after you've unzipped the distribution *
* Filename: CLOHELP.HLP                                      *
**************************************************************


First, install your Winsock software per the vendor's 
instructions.  If you're installing Winsock for the first time, 
please use the vendor's PING application to check that your 
connection to the network, to your local gateway, and to your 
nameserver are working.

We suggest that you create the following directories:

C:\CELLO
C:\CELLO\VIEWERS
C:\CELLO\DOWNLOAD

Unzip the zipped archive (CELLO.ZIP) into the C:\CELLO 
directory, and follow the installation and configuration 
instructions in the online help file.  If by chance you can't 
get Cello to start, you can still view the online help file by 
clicking on CLOHELP.HLP in File Manager; it's a Windows help 
application, and should start up in WinHelp without any trouble.
A listing of the files in the archive is below; they include 
style files for various video resolutions, plus "empty" 
bookmark and CELLO.INI files

If you do not currently use a TEMP directory (specified via the TEMP 
environment variable) we suggest that you do so.  We also 
suggest that you enable the Windows virtual-memory feature.

Special notes on setup for LAN administrators are in the online 
help.

--------------------------------------------------------------
Winsock notes:
--------------------------------------------------------------
PC-NFS:

PC-NFS' current winsock implementation does not support DNS 
natively.  You can simulate DNS if you're running an NIS server 
and have the wshelper.exe add-on.  This is to be fixed in the 
next version of PC-NFS.

FTP Software:

We receive mixed reports about Cello's operation with FTP Software's
PCTCP Winsock.  It seems to work well for the majority of people, but
problems are sometimes reported with the retrieval of Web documents
which contain multiple inlined images.  Check the Cello FAQ for tips
on configuration.

Notes on the installation of Winsock are usually available with 
the vendor's distribution.

(March 16 update) Despite extensive work with the FTP Software 
stack over the last month, it is still reported not to be 
working by some users.  The author has no difficulty getting it 
to work with current releases on an NE2000 card with ODI 
drivers, but others report difficulties.  Others say they have 
no problem.  The problems which occur under the FTP Software 
stack don't occur when most other stacks are used.  'nuff 
said.  We're continuing to work with it.

--------------------------------------------------------------
Documented problems which aren't fixed yet:
--------------------------------------------------------------
-- Cello's builtin Telnet client has trouble with some SunOS 
and ULTRIX machines (and maybe more).  For some reason these 
expect an <LF> character as the carriage-return prior to 
login.  A typical symptom is that the host machine will give 
you a login prompt, you'll type the login name and hit <ENTER>, 
the cursor will return to the beginning of the line, and 
nothing else happens.  To work around this, use <CTRL-ENTER> 
instead of <ENTER> to send the host machine a <LF> character.
Another possibility is to use the Use Your Own Telnet... 
feature to splice in a telnet of your own.

-- Only 8-1/2 x 11 paper is supported by the printing feature, 
and your mileage may vary depending on the make and model of 
printer you use.  

--------------------------------------------------------------
Bug reports and further assistance:
--------------------------------------------------------------
Send mail to cellobug@fatty.law.cornell.edu to report bugs.

A great deal of assistance is also available from other 
Cellists on the CELLO-L listserv list.  To subscribe, send mail 
to listserv@fatty.law.cornell.edu with 

SUB CELLO-L your full name

as the only text in the message.

--------------------------------------------------------------
New and repaired in this version
--------------------------------------------------------------

Two significant bugs were repaired in this version:

1) Refusal to deal with Gopher+ and GN servers was repaired 
(this was actually an improper truncation of the port number).

2) Improper handling of text/plain from some servers was 
repaired.  Be aware, however, that Cello does not rely on file 
extensions to determine "HTML-ness" of documents from non-HTTP 
servers.  Instead, it looks for an <HTML> or <TITLE> tag in the 
first few lines of the document itself.

A few other, minor bugs were fixed in this version as well.



Have fun with it.
Tb.

Thomas R. Bruce
Legal Information Institute
Cornell Law School

trb2@cornell.edu

--------------------------------------------------------------
FILE MANIFEST FOR THIS DISTRIBUTION
--------------------------------------------------------------

1024-768.STY		Style/font file for 1024x768 display
640-480.STY		Style/font file for 640x480 display
800-600.STY		Style/font file for 800x600 display
CELLO.BMK		(Mostly) empty bookmark file
CELLO.EXE		The Cello executable
CELLO.INI		Cello .ini configuration file
CELLO.SIG		Sample .sig signature file (for e-mail)
CELLO.STY		Style/font file (same as 1024-768.STY)
CLOHELP.HLP		Cello Windows Help application
README.1ST		You're looking at it...

