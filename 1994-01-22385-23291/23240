Newsgroups: alt.security,sci.crypt,sci.math,comp.security.misc,alt.security.pgp,alt.security.ripem
Path: msuinfo!netnews.upenn.edu!news.cc.swarthmore.edu!psuvax1!news.ecn.bgu.edu!usenet.ins.cwru.edu!howland.reston.ans.net!pipex!uknet!comlab.ox.ac.uk!pcl
From: pcl@foo.oucs.ox.ac.uk (Paul C Leyland)
Subject: Re: RSA-129 project -- over half way there
Message-ID: <PCL.94Jan28155718@foo.oucs.ox.ac.uk>
In-reply-to: cet1@cus.cam.ac.uk's message of Sat, 22 Jan 1994 16:26:55 GMT
References: <PCL.94Jan21171705@foo.oucs.ox.ac.uk> <1994Jan22.162655.2350@infodev.cam.ac.uk>
Date: 28 Jan 1994 15:57:18 GMT
Lines: 63
Xref: msuinfo alt.security:14382 sci.crypt:23240 sci.math:63152 comp.security.misc:7465 alt.security.pgp:8447 alt.security.ripem:414

In article <1994Jan22.162655.2350@infodev.cam.ac.uk> cet1@cus.cam.ac.uk (Chris-Thompson) writes:

   Maybe this has been discussed before, but what are your plans for the
   final 524400(+) x 524400 reduction over GF(2)? This is substantially
   larger than those I have heard of so far. The final reduction (on under
   200000 unknowns) in the NFS attack on F_9 was far from straighforward,
   wasn't it? Do you have access to a machine with 30 GB of RAM?

To take your questions in order:.

1) When we have enough cycles (we can count them easily enough on
hot-spare.mit.edu, the DEC 5000/240 used to process the incoming
emailed relations), we will generate them and combine them into
relations to add to our collection of full relations.  This procedure
will take a day or so on an ordinary machine, but will use rather a
lot of disk space.  We do not expect any problems here.  The matrix
reduction will be performed partly on an ordinary workstation-class
machine and partly on a MasPar.  Again, we will need *lots* of disk
storage.

2)  The largest reduction of which I am aware is the 245810+ x 245810
matrix in Lenstra et al.'s factorization of RSA-120

3) I don't know whether those workers regarded the reduction as
straightforward.  Lenstra is of the opinion that the reduction of our
matrix (actually 524388+ x 524388 BTW -- the 524400 was an estimate of
the "+") should not be unduly difficult.

4) No, I do not have access to a machine with 30GB of RAM.  I had to
work out why you thought I might need to have access.  Presumably, the
reasoning goes something like the following.  524400 is slightly
greater than 2^19.  A square array of this size has > 2^38 elements.
Each element is one bit, hence > 2^35 bytes, or slightly more than
32GB.

However, you have neglected several important considerations.  First,
the matrix is not dense.  The rows corresponding to the full relations
have about 30 set bits, a density of 2^-14.  The cycles will be
denser, but will still have a few hundred or less set bits.  The first
phase of the elimination takes the sparse matrix of 2^19 square and
generates a much smaller dense matrix.  This dense matrix will be
several times smaller on each side than the original sparse matrix.

Secondly, given scratch external storage of size comparable with the
size of the dense matrix (i.e. of order few gigabytes), efficient
algorithms exist which perform Gaussian elimination using fast working
storage of size comparable with that needed to hold a row of the
matrix.  For efficiency reasons, the internal storage should be as
large as possible.  We expect this second phase to take of order 1-2
days on a MasPar.


More details will doubtless be provided at a later date.  Hope this
satisfies the present interest in the procedures to be used.


Paul
--
Paul Leyland <pcl@black.ox.ac.uk>        | Hanging on in quiet desperation is
Oxford University Computing Services     |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is gone, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
