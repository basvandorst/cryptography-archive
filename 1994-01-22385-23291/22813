Path: msuinfo!agate!library.ucla.edu!europa.eng.gtefsd.com!uunet!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!news.mit.edu!warlord
From: warlord@MIT.EDU (Derek Atkins)
Newsgroups: sci.crypt
Subject: Re: RUMOUR: RSA has been broken! Comments please!
Date: 13 Jan 1994 00:08:35 GMT
Organization: Massachusetts Institute of Technology
Lines: 42
Distribution: world
Message-ID: <WARLORD.94Jan12190835@toxicwaste.mit.edu>
References: <41@cyberg.win.net> <2gkv3l$3b0@vixen.cso.uiuc.edu>
NNTP-Posting-Host: toxicwaste.media.mit.edu
In-reply-to: David Mitchell's message of 8 Jan 1994 00:35:01 GMT

In article <2gkv3l$3b0@vixen.cso.uiuc.edu> David Mitchell <mitchell@ncsa.uiuc.edu> writes:

   I think you're being a little quick with the old "no security through
   obscurity" charge, Derek.  You have to remember that some obscurity is
   necessary for effective crypto.  One needs to protect the SPECIFIC
   algorithm (the steps actually performed during the encryption) being
   used, although the general algorithm can and should be public knowledge. 
   In other words, I know how to encrypt something with DES, but I don't
   know the exactly how my bank DES encrypts EFT transactions because I
   don't know the key.

I think that what we have here is a different definition of
"obscurity", "algorithm", and "secret".  By algorithm, I mean the
general steps in encrypting.  By obscurity, I mean hiding said
algorithm.  By "secret", I mean key used to encrypt, and how that key
specifically affects the algorithm. 

My point is that the fact that public key encryption is defined as
some algorithm, and that algorithm is public information, should not
have any effect on the security of said algorithm.  For example, the
fact that RSA is defined as (take the message the the Eth power,
modulo N, where E is secret) should not affect the security of the
system as a whole.

I'm not saying that *RSA* doesn't have problems -- there are some
security flaws in RSA, since you can get some information about the
plaintext message that is RSA-encrypted.  This is a result of the RSA
permutation.  There exist public-key algorithms that do not have these
properties, and their algorithms are publically known as well!

So, no, I do not think that I am being quick with "no security through
obscurity".  If your system depends on the secrecy of the algorithm
(in general, I don't count the secret key in this), then someone who
finds that algorithm has a better chance of breaking it...  And people
know how to reverse-engineer things like that!

-derek
--
         Derek Atkins, SB '93 MIT EE, G MIT Media Laboratory
     Secretary, MIT Student Information Processing Board (SIPB)
         PGP key available from pgp-public-keys@pgp.mit.edu
            warlord@MIT.EDU       PP-ASEL        N1NWH
