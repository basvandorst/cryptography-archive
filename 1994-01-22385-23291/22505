Path: msuinfo!agate!linus!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Newsgroups: comp.org.eff.talk,alt.privacy.clipper,sci.crypt
Subject: Re: Please explain the problem with clipper
Date: 3 Jan 94 17:24:37
Organization: The Mitre Corp., Bedford, MA.
Lines: 57
Distribution: inet
Message-ID: <EACHUS.94Jan3172437@spectre.mitre.org>
References: <RLK.94Jan2092235@merlin.think.com> <2g6n5c$4gc@agate.berkeley.edu>
	<CJ0nnK.2vr@calcite.rhyolite.com> <2g7k3s$6vn@agate.berkeley.edu>
NNTP-Posting-Host: spectre.mitre.org
In-reply-to: spp@bob.eecs.berkeley.edu's message of 2 Jan 1994 23:07:40 GMT
Xref: msuinfo comp.org.eff.talk:24477 alt.privacy.clipper:1821 sci.crypt:22505

In article <2g7k3s$6vn@agate.berkeley.edu> spp@bob.eecs.berkeley.edu (Steve Pope) writes:

 >  You mention the tension level surrounding major software
 >  releases... ever stop to wonder WHY that is?  I'll bet not.
 >  Could it be that nobody really trusts the project organization,
 >  reporting relationships, etc. in the first place?  Could
 >  it be that this lack of trust is well-founded because these
 >  aspects are poorly conceived and implemented in the first
 >  place.

    I always referred to this problem as the "people virus" problem,
but it has nothing to do with "trust" as such.  The maintenance
organization for good and sufficient reasons wants to build the system
from scratch, on bare hardware.  The software developers, again for
good and sufficient reasons, use systems that do not have pristine, up
to date patch level versions of the OS.  When the release building
process starts, all these potential problems either disappear or turn
into real hair-pullers.  I remember one build script that failed
because the "newest" OS version changed the name of a command.  (If
the problem had been that it wasn't finding it, it would have been
easy to detect, but the developer had put in an alias on his system,
and the behavior of the command was affected by the "virtual" command
line length.  Arrrgh!)

 > Your attitude is that this apparent mis-estimate of this cost
 > element is not a mis-estimate at all, but something that can be
 > brushed off as "there's no such thing as only a few #ifdefs,
 > anybody who knows about large software projects knows that..." ...
 > well, fella, that just doesn't cut it.  Or, maybe it cuts it
 > in your corner of the world, but it wouldn't in anything I've
 > ever worked on.

   Does anyone who hasn't done it understand the cost of building a
system on "clean" hardware?  Remember that in the crypto-export case,
none of the tools used to build the system can use the prohibited
software.  So you need two sets of tools, etc.  This is not just a
#ifdef issue, even if the source has the right #ifdefs.

  > "it's never just a couple of #ifdef's."  That's a red flag
  > right there that something is seriously amiss.  Attitudinally.

  > Steve

  Alright Steve, here is a release tape and an empty machine.  You may
transfer any source files from your existing machine to this one.  How
long will it take to recreate your current working environment?  How
much hair will you lose?  The thing that is seriously amiss here is
your attitude.

					Sincerely,
--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
