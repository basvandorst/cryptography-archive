Path: msuinfo!scss3.cl.msu.edu!mrr
From: mrr@scss3.cl.msu.edu (Anonymous)
Newsgroups: sci.crypt
Subject: Re: MD5 usage
Date: 29 Jan 1994 00:50:23 GMT
Organization: Michigan State University
Lines: 27
Message-ID: <2icbsf$16aj@msuinfo.cl.msu.edu>
References: <9401192104591.davesparks.DLITE@delphi.com>
NNTP-Posting-Host: scss3.cl.msu.edu
X-Newsreader: TIN [version 1.2 PL1]

Dave Sparks (davesparks@delphi.com) wrote:
: this data would then be concatenated into a buffer and used as 
: input to the MD5 algorithm (or other hashing function), with each 
: 16 bytes of output forming a portion of the final one-time-pad.  
: (The output could also be used to seed an RNG, etc.)

: Is there any inherent weakness in this method?  How many bytes of 
: license/make info per 128 bits of output would be reasonable?

Assuming you've managed to gather 128 bits of "genuinely" random data:

The method used by RSAREF to generate pseudo-random numbers is:

   random[i] = MD5Transform(seed+i)

where each random[i] is 128 bits (and so is the seed).
The seed itself could, of course, be an initial MD5 hash of the
"random" data (license plate numbers, etc.)

This method is certainly simple and fast.  And if you trust
MD5, as many people do, it should be more than adequate in
those cases where a keyspace of 128 bits is large enough.

/mrr

P.S.  I have no idea how a previous posting of mine got labelled
as from "Anonymous".
