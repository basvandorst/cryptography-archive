Newsgroups: comp.lang.c,sci.crypt
Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!uchinews!att-out!cbnewsh!wcs
From: wcs@anchor.ho.att.com (Bill Stewart +1-908-949-0705)
Subject: Re: Encrypt Data within Executable Code
Organization: AT&T
Date: Tue, 11 Jan 1994 04:03:01 GMT
Message-ID: <CJG5x2.M0L@cbnewsh.cb.att.com>
In-Reply-To: James D. Watson's message of Sat, 8 Jan 1994 23:13:02 EST
References: <94008.231303JW1675A@auvm.american.edu>
Sender: wcs@cbnewsh.cb.att.com (william.clare.stewart)
Lines: 60
Xref: msuinfo comp.lang.c:86944 sci.crypt:22756

In article <94008.231303JW1675A@auvm.american.edu> James D. Watson <JW1675A@auvm.american.edu> writes:
   Hi folks -- am wondering how to encrypt data with in an executable
   program.  For example, if you wanted to have an ecryption key in
   a program but don't want it to be found by running "strings" or
   "od" or some such... Any hints or places I can look for info?
   ---
   Acting Technical Officer, System Programming Shop
   Defense Intelligence Agency

Most security analysis begins with examining the kind of data you're
trying to secure, the threats you're trying to protect against,
and the amount of difficulty you're willing to go through to prevent
exposure.  For instance, none of the techniques that have been
suggested are secure enough for protecting classified data in
unclassified environments (except possibly Dolphin-Encrypt, depending
on your underlying operating system; DOS doesn't rate, but a B1 might.)

Are you trying to protect the user's data from other users,
or to protect the program itself from piracy by users?
Are you trying to encrypt data that varies, or are you trying to
encrypt the password for starting a program that's the same for everyone?
Do you expect attackers only to look through the program casually for
the data, or do heavy-duty disassembly, or possibly to modify the code
to remove the subroutine that checks passwords?  If you're running on
Unix, can you use the operating system permissions to prevent the user
from reading it, or are you also worried about root reading the program, 
or programs that are user-installed where you don't trust the user?
Can you store the password in a separate data file owned by the user,
or is your primary threat users giving away copies of your software,
e.g. a game or expensive application program?

The technique used by the earlier Unix password files (also Multics
and VMS and a few others) is to have a cryptographically strong
one-way hash function, and store the results of hashing the password
in a world-readable file.  The primary threat here is from dictionary
searches, in which the Bad Guy tries a large number of common passwords,
grinds them through the hash function, and compares against the value
in the password file.  (Because of this, newer Unix systems separate
the password hashes into a root-accessible-only file anyway.)
For some applications, this is a useful technique, as long as the user
can be convinced to pick reasonably good passwords.  It's more
effective if everybody has a different password, or if the passwords
are machine-dependent in some way (e.g. built-in serial numbers) and
you can control the installation and make sure the users don't just
patch around the password-checking.

If your users are somewhat more capable pirates, you need to have the
encryption more closely integrated with the execution of the program,
e.g. crucial program data is stored encrypted and users need to use
the password to decrypt.  (This leads to more determined pirates doing
things like snapshotting memory after the decrypt routine runs, etc.,
which leads to manufacturers using tamper-proof hardware dongles, etc.,
which leads to customers buying somebody else's program which is less
annoying for legitimate non-pirates to use, which leads to
non-copy-protected software with reasonable sharing policies or whatever.)
-- 
#				Pray for peace;      Bill
# Bill.Stewart@pleasantonca.ncr.com 1-510-484-6204 fax-6399
# NCR Corporation, 6870 Koll Center Pkwy, Pleasanton CA 94566
# Please reply to this address rather than my news server.
