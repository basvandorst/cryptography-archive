Path: msuinfo!agate!bob.eecs.berkeley.edu!spp
From: spp@bob.eecs.berkeley.edu (Steve Pope)
Newsgroups: comp.org.eff.talk,alt.privacy.clipper,sci.crypt
Subject: Re: Please explain the problem with clipper
Date: 3 Jan 1994 04:51:23 GMT
Organization: U.C. Berkeley -- ERL
Lines: 163
Distribution: inet
Message-ID: <2g888b$97q@agate.berkeley.edu>
References: <CJ1024.482@calcite.rhyolite.com> <2g80hp$8e7@agate.berkeley.edu> <RLK.94Jan2223542@merlin.think.com>
NNTP-Posting-Host: bob.eecs.berkeley.edu
Xref: msuinfo comp.org.eff.talk:24407 alt.privacy.clipper:1774 sci.crypt:22481

rlk@merlin.think.com (Robert Krawitz) writes:

> spp@bob.eecs.berkeley.edu (Steve Pope) writes:

>   Nobody said trivial or cheap, but one would hope that software
>   vendors have a configuration requirement of *this* magnitude
>   firmly in hand.
>
> This is a particularly difficult requirement, for a reason I didn't
> think of last time around.  

You will note that I described that the non-export requirement
is a *unique* requirement, meaning that is cannot be met by 
the same methods that the vendors are used to using to address
their other configuration requirements.

> Sun may not distribute this on the
> same CD, but instead must distribute a different CD.  That increases 
> the workload.

You're saying the price of a media unit with the added load
on the distribution chain for media units is a significant sum,
compared to the cost of the software itself?   If so, you're 
definitely wrong.

Next question.

> Another problem is that the crypto stuff is often distributed rather
> widely within an operating system.  Anything that uses secure RPC or
> secure IP in general (which includes the kernel), or that handles
> authentication, uses crypto.  Some of this can be distributed -- the
> stuff that handles /etc/passwd can be exported, since it's a one way
> system that cannot be subverted to do decryption -- but the network
> encryption stuff can't.  As I pointed out, this has rather far-flung
> ramifications; even something like rarpd, which merely does address
> translations, uses it.

I interpret "far-flung implications" as meaning, "our programming
model for addressing the non-export requirement is inadequate."

> Shared libraries do not entirely eliminate this problem, as 
> it turns out.

Again, since this is a unique requirement, there's the tendency
to gloss over it when flowing down system level requirements
to the requirements for an OS component such as a library.

You're reinforcing my assessment of the nature of the difficulty:
inadequate attention to a unique requirement, followed by
attacking the requirement ("Crypto export restrictions are silly")
instead of the failed design approach when problems emerge.

I've seen this a thousand times.  I'll be fair and say that
hardware engineers can have the same failings.

>   I mean, if XYZ Software Inc. can't manage to keep a handle on
>   the non-export requirement, how in the HELL could you trust
>   them to write a filesystem?  Or respond to the international
>   market in the first place?
>
> Filesystems are extremely difficult and delicate things.  

Exactly my point.

> Likewise, internationalization has been a very tricky issue,
> and despite a lot of work by a lot of people, there are still a lot of
> things that aren't handled right.  

Question, in the above, by "internationalization" do you mean
only the crypto non-export issue, or a broader range of issues?

> But the crypto stuff cannot be handled in this 
> way -- it MUST NOT BE DISTRIBUTED OUTSIDE OF THE US.  This requires 
> two separate CD's, with two separate versions of everything that 
> uses crypto.  

I certainy agree that this is tautologically true.  

> This is not
> the same thing as one release with different configuration options!

That's depends on one's definition of the jargon term, "release".
At some higher level of configuration management, these two are
the same "release".  

Considering that Sun and most other vendors
are in the business of selling hundreds of software products,
it is not yet credible to me from your statements that this
monkey-business surrounding crypto is really straining the
configuration management and distribution systems.

> I understand what you're trying to say, but you're wrong.

Let's continue to debate it, anyway.  :-)

Wasn't it George Bush who declared victory prematurely in
Iraq?  Be careful.

> The
> distinction between one release that is configured at installation 
> time and multiple releases is subtle

Hah!  I *thoroughly* reject your transparent rhetorical device
of first using a specific, jargon definition by which this is a
separate "release", and then generalizing to what the costs of 
"releases" in general are.

(I think this tactic is formallly called a "zeugma", or perhaps
this one better qualifies as a "dodge".  Were you ever on the
debate team, by any chance?)

Recall that I have to evaluate cost/technical proposals for
a living.  All the time I see people taking a cost that really 
shouldn't be there in the first place, and conveniently burying it 
under an elephant.

> so I don't particularly blame you for
> not seeing it, but it's a very real distinction.  

Nice try, but no go.  Sorry.

> I've seen some truly ingenious installation
> scripts written to avoid having to do multiple releases for different
> platforms, because the cost of releasing software is so astronomically
> high.

More puffery drawing on the above flawed logic.  Not relevant.

>> You're skating on thin ice in this discussion -- playing up
>> your supposed expertise and experience, whilst not making much
>> sense.
>
> On the contrary, he's making perfect sense to someone (me) who has 
> dealt with these issues.  

In other words, people in the same industry use the same tactics
to try to justify the same questionable costs... that is to 
be expected.

> You're trying to argue an issue that you lack
> experience in, and it shows.

I think you are losing ground in this discussion, rapidly.

Resorting to personal attacks shows how weak your hand is.

Just because I can see through your illogic, I lack experience?

Put is this way: you haven't sold *me*.  Lucky for you guys your
management is softer!!

> Every software engineer worthy of the title has learned through long,
> sad experience that the release process is the most painful part of
> dealing with software.  

Yet more puffery.  Sure, but the above has nothing to do with the
question at hand.

Actually, maybe it does: mismanagement shows up at
release time.  This is very consistent with my
observations.

Steve
