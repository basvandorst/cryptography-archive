Newsgroups: sci.crypt
Path: msuinfo!agate!usenet.ins.cwru.edu!nigel.msen.com!yale.edu!cs.yale.edu!news-mail-gateway!daemon
From: Grant@DOCKMASTER.NCSC.MIL (Lynn R Grant)
Subject: Re: The DES Initial Permutation
Message-ID: <940106214910.349672@DOCKMASTER.NCSC.MIL>
Sender: Grant.CA1@DOCKMASTER.NCSC.MIL
Organization: Yale CS Mail/News Gateway
Date: Thu, 6 Jan 1994 21:49:00 GMT
Lines: 58


Thanks to David Koontz (koontz@io.irmsc.loral.com) for the lucid
explanation of the purpose of the IP.  This finally makes some
sense!

Further examination of the GOST specification shows that it
really does have an IP, although it is not explicitly defined
that way.  The specification says (with a few adjustments to
deal with the limited character set of my terminal):

    Plaintext to be enciphered is split into 64-bit blocks.
    Input of any block

       Tp = (a1, a2, ..., a31, a32, b1, b2, ..., b32)

    of binary data into the registers N1 and N2 is done so
    that the contents of a1 are entered into the 1st bit of
    N1, contents of a2 are entered into the 2nd bit of N1
    etc., contents of a32 are entered into the 32nd bit of
    N1; contents of b1 are entered into the 1st bit of N2,
    contents of b2 are entered into the 2nd bit of N2 etc.,
    contents of b32 are entered into the 32nd bit of N2.
    The result is:  state (a32, a31, ..., a2, a1) of the
    register N1 and state (b32, b31, ..., b1) of the
    register N2.

If you draw the GOST flowchart so that it corresponds with the DES
flowchart, N2 is the left half of the input and N1 is the right half.
This would imply an Initial Permutation like this:

    64  63  62  61  60  59  58  57
    56  55  54  53  52  51  50  49
    48  47  46  45  44  43  42  41
    40  39  38  37  36  35  34  33

    32  31  30  29  28  27  26  25
    24  23  22  21  20  19  18  17
    16  15  14  13  12  11  10   9
     8   7   6   5   4   3   2   1

The Inverse Initial Permutation would be exactly
the same.

I don't know what they would do for a byte-wide interface.  Perhaps
they would load the byte in parallel into an 8-bit shift register and
then shift the bits out the top and into the top of a 32-bit SR for
N2.  Bits that shifted out the bottom of N2 would be shifted into
another 32-bit SR for N1.  Or maybe they would do it completely
differently--I'm not a hardware designer so I don't know.

Lynn

---------------------------------------------------------------------------
Lynn Grant                  | You don't have to be the best trombone
Grant@DOCKMASTER.NCSC.MIL   | player in the world; you just have to
                            | be the best trombone player in the bar.
                            |   --Fred Grant
---------------------------------------------------------------------------
