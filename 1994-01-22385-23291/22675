Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!audi.ncsa.uiuc.edu!mitchell
From: David Mitchell <mitchell@ncsa.uiuc.edu>
Newsgroups: sci.crypt
Subject: Re: RUMOUR: RSA has been broken! Comments please!
Date: 8 Jan 1994 00:35:01 GMT
Organization: #include <std.disclaimer>
Lines: 44
Distribution: world
Message-ID: <2gkv3l$3b0@vixen.cso.uiuc.edu>
References: <41@cyberg.win.net>
NNTP-Posting-Host: audi.ncsa.uiuc.edu
X-UserAgent: Version 1.1.3
X-XXMessage-ID: <A9520B59F0010611@audi.ncsa.uiuc.edu>
X-XXDate: Thu, 6 Jan 94 18:39:21 GMT

In article <WARLORD.94Jan7161903@toxicwaste.mit.edu> Derek Atkins,
warlord@MIT.EDU writes:
> In article <41@cyberg.win.net> fb@cyberg.win.net (Francis Barrett)
writes:
> 
>    This is certainly interesting.  I have never been a great fan of
>    public key systems over conventional encipherment.  Public key
systems
>    depend upon making known an algorithm for computing a permutation and
>    hoping that an attacker is not able to evaluate the inverse of that
>    permutation at selected points.  Even in the general case, this is
not
>    obviously an intractible math problem. We can all remember the
>    knapsack algorithm crashing in flames a few years back.
> 
> No offense, but this reasoning is bogus.  When you are designing a
> secure system, you *HAVE* to assume that any potential attacker knows
> exactly how your system works!  Therefore, there is no reason at all
> to design a system where security of the system depends upon keeping
> the algorithm secret.  Knowing the algorithm should not in any way
> affect the security of a system.  "Security through obscurity provides
> no security at all."

I think you're being a little quick with the old "no security through
obscurity" charge, Derek.  You have to remember that some obscurity is
necessary for effective crypto.  One needs to protect the SPECIFIC
algorithm (the steps actually performed during the encryption) being
used, although the general algorithm can and should be public knowledge. 
In other words, I know how to encrypt something with DES, but I don't
know the exactly how my bank DES encrypts EFT transactions because I
don't know the key.

The unnerving thing about public-key is that the specific encryption
algorithm is public knowledge.  To decrypt a message, all that is
necessary is to undo the steps performed in the process of encrypting. 
While simple in theory, the large key sizes makes it a very difficult
problem in terms of space and time.  I know exactly how to decrypt every
RSA message, I just can't seem to get a computer that's fast enough.  And
with gigahertz processors and gigabit RAMs in the works, the keys will
need to be pretty big.  Personally, I use 1Kbit RSA keys.  At least with
that size there is some chance that it won't become breakable in my
lifetime.

-David Mitchell
