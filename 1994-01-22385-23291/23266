Path: msuinfo!uwm.edu!cs.utexas.edu!swrinde!elroy.jpl.nasa.gov!decwrl!netcomsv!netcomsv!wet!wet.COM
From: meyer@wet.COM (Peter Meyer)
Newsgroups: comp.compression,sci.crypt
Subject: Re: 60 characters to 10
Message-ID: <5912@wet.UUCP>
Date: 29 Jan 94 06:30:17 GMT
Sender: meyer@wet.UUCP
Followup-To: comp.compression
Distribution: usa
Organization: Wetware Diversions, San Francisco
Lines: 34
Xref: msuinfo comp.compression:10463 sci.crypt:23266


 
>From: cvalcarc@lehman.com (Carlos Valcarcel)
>Subject: 60 characters to 10 (or 25 or 6 to 4)
>Date: 24 Jan 94 22:04:19 GMT
>
>I have a string that can be up to 60 characters long.
>I need a unique string that is approx. 10 characters long
>(can be longer, but we would like something compact).
>
>And example of the starting string is:
>
>Euro$, Mar 15 94,EuPt,96.500,Mar 14,100-16,Jun  6 94;NY
 
It seems you want a general method of compressing strings of up
to 60 characters from an alphabet of N characters down to unique
strings of 10 or so elements from an alphabet of M elements.
Unfortunately the news is not good.
 
Suppose M = 256 (for maximum compression in practice), which is the
maximum M if the elements in the generated strings are byte values.
If N = 64 (which is about what you'll need to accommodate all upper
and lower case letters, digits, etc.) then you can't compress
60-character strings to unique strings of less than 45 bytes.
 
Proof: The number of possible strings of 60 characters drawn from
a 64-character alphabet is 64^60 = (2^6)^60 = 2^360. The number
of possible strings of 45 bytes is 256^45 = (2^8)^45 = 2^360.
If you were to compress 60-character strings to byte strings of
length less than 45 then (since there are less than 2^360 such
byte strings) the compression would be many-to-one and would not
produce unique strings.
 

