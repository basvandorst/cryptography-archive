Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!europa.eng.gtefsd.com!howland.reston.ans.net!cs.utexas.edu!swrinde!elroy.jpl.nasa.gov!decwrl!netcomsv!netcom.com!netcom8!mjohnson
From: mjohnson@netcom8.netcom.com (Mark Johnson)
Subject: Re: Randomness of a bit string
In-Reply-To: tcmay@netcom.com's message of Mon, 24 Jan 1994 18:32:03 GMT
Message-ID: <MJOHNSON.94Jan24105636@netcom8.netcom.com>
Sender: mjohnson@netcom.com (Mark Johnson)
Organization: Netcom, where Usenet costs only 19 dollars a month
References: <2hsb29$8ol@umcc.umcc.umich.edu> <tcmayCK5CtF.23H@netcom.com>
Date: Mon, 24 Jan 1994 18:56:36 GMT
Lines: 28


Suppose you have a "perfectly random" device that emits a
cryptographically strong random integer between 0 and m.

Invoke this device and obtain a perfectly random integer,
call it "i".  Now consider the bit string composed of the
base-2 representation of i.  (e.g. if i=27 then the bitstring
is 11011).  Is that bitstring "random"?  It came from a
perfectly random source.

For example, suppose the generator produced the integer "8191"
(it is, after all, just as likely to produce this integer
as any other integer!).  The corresponding bitstring is
111111111111 (twelve binary ones).  Is "111111111111"
a random bit string?  It was, after all, produced by a
"perfectly random" device.  {note that 111111111111 can be
compressed pretty easily}.  If "111111111111" is NOT a
random bit string, does this mean that "8191" is NOT a random
integer?


    Conjecture: Any given bitstring of length n is just as likely
    to be produced by a "perfectly random" generator, as every
    other n-bit string.  Therefore all n-bit strings are equally
    random (even the string composed of n consecutive zeroes).

    Further conjecture: tests of randomness are only meaningful
    when considering infinitely long bit strings.
