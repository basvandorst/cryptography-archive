Newsgroups: sci.crypt,alt.security,alt.security.pgp
Path: msuinfo!uwm.edu!wupost!waikato!aukuni.ac.nz!cs18.cs.aukuni.ac.nz!pgut1
From: pgut1@cs.aukuni.ac.nz (Peter Gutmann)
Subject: Secure Filesystem - call for guinea pigs
Followup-To: alt.security
Organization: Computer Science Dept. University of Auckland
Date: Sun, 9 Jan 1994 05:06:50 GMT
Message-ID: <1994Jan9.050650.7092@cs.aukuni.ac.nz>
Lines: 49
Xref: msuinfo sci.crypt:22701 alt.security:14113 alt.security.pgp:8013


[Note: Followups redirected to alt.security.  Feel free to post crypto-related
       followups to sci.crypt, though]
 
I've just released version 0.9 of the encrypting filesystem I've been working
on for some time now.  It features full-disk encryption, transparent operation
(except for a noticeable slowdown in access) once an encrypted volume is
mounted, user-definable quick-unmount hotkeys, a timed automatic unmount
feature, various other useful utilities, and a fairly paranoid level of overall
security, as well as around 200K of documentation covering the whole thing in
fair detail.
 
From the docs:
 
}SFS has the following features:
}
}  - The current implementation runs as a standard DOS device driver, and
}    therefore works with plain old DOS as well as other software such as
}    Windows, QEMM, Share, disk cacheing software, and so on.
}
}  - The encryption algorithms used have been selected to be free from any
}    patent restrictions, and the software itself is not covered by US export
}    restrictions as it was developed entirely outside the US (although once a
}    copy is sent into the US it can't be re-exported).
}
}  - SFS complies with a number of national and international data encyrption
}    standards, among them ANSI X3.106, Federal Information Processing Standard
}    (FIPS) 180, ISO 10116:1991 and ISO 10126-2:1991, and is on nodding terms
}    with a several other relevant standards.
}
}  - The documentation includes fairly in-depth analyses of various security
}    aspects of the software, as well as complete design and programming details
}    necessary to both create SFS-compatible software and to verify the
}    algorithms used in SFS.
 
It's available as:
 
    ftp.informatik.uni-hamburg.de:/pub/virus/incoming/sfs9.zip
 
Like virtual memory, the file is there but you can't see it.  Just cd to the
directory and get sfs9.zip - it's about 150K of data.
 
It's very important that you read the file "readme.1st" included in the
distribution before you run anything.  This is only a beta release, so please
don't upload it to any other sites yet - it's distributed via a rather obscure
site for a good reason.  Once I get enough people telling me it works fine,
I'll create a public release.
 
Peter.
