Path: msuinfo!agate!howland.reston.ans.net!sol.ctr.columbia.edu!destroyer!nntp.cs.ubc.ca!unixg.ubc.ca!unruh
From: unruh@physics.ubc.ca (William Unruh)
Newsgroups: sci.crypt
Subject: Re: unix passwd
Date: 11 Jan 1994 07:20:47 GMT
Organization: The University of British Columbia
Lines: 20
Distribution: world
Message-ID: <2gtk0f$lmr@nntp.ucs.ubc.ca>
References: <CJEK38.7DA@suncad.camosun.bc.ca>
NNTP-Posting-Host: physics.ubc.ca

uc022@freenet.Victoria.BC.CA (Darren Hill) writes:


] 
]Could someone explain to me exactly how Unix takes a password,
]and ends up with what you see in the /etc/passwd ?

It takes the password and uses it as the key to encrypting the text
0000000 25 times. The output of this process is the encryption. It uses
the salt to alter one of the features of hte DES encryption( One of the
permutations) so each salt gives a different output for the same inputs.
There exists no known inverse ( that would correspond to "given the
plain test (0) and the encrypted text( the encrypted password) find the
key, so yes it probably is a one way hash function.
](3) Is there some problem with 'shadow' password systems? 
]From what I've read, I can't understand why someone wouldn't
]use that on their Unix...
Makes people think the system is more secure than it is- ie encourages
them to allow or use simple passwords. Then when a crook does get the
password file, the game is all over.
