Path: msuinfo!agate!library.ucla.edu!europa.eng.gtefsd.com!uunet!MathWorks.Com!noc.near.net!news.delphi.com!davesparks
From: davesparks@delphi.com (Dave Sparks)
Newsgroups: sci.crypt
Subject: Re: public key -> one-time pad?
Date: 6 Jan 1994 02:22:57 GMT
Organization: Delphi Internet Services Corporation
Lines: 32
Message-ID: <9401052116596.davesparks.DLITE@delphi.com>
References: <huff-050194055741@edhuff.dial.net.nyu.edu>
NNTP-Posting-Host: delphi.com

 >> So apparently you are asking which is stronger
 
 >> Scheme A:  Send {otp}pk, (message xor otp)
 >> Scheme B:  Send {message}pk
 
 >> Where {message}pk denotes message encrypted by key pk.
 
 >> I don't know.  Maybe an expert does?  (If the random number source
 >> for the otp is weak, then scheme A is weaker since it can be broken
 >> without any attempt on the pk encryption).
 
The only advantage I can see is that "Scheme A" should be less vulnerable
to plaintext attack, since the info being encrypted is presumably "random"
already.  Also, a brute force attack would take longer since it involved an
extra step.

One thing worth considering:  many of the theories about breaking DES.
are based on a hypothetical massively-parallel DES-breaker.  But
implementing such a machine in hardware would be inherently INflexible.
IOW, if you designed it to handle single-ECB-DES, it would be virtually
worthless against triple-DES, etc.  Thus, the less "standard" your crypto,
the less likely that a pre-configured number cruncher is to break it.

Yes, I know that PGP uses IDEA rather than DES, but if IDEA becomes widely
enough used, some specialized hardware-based technique could be used on it.

 /--------------+------------------------------------\
 |              |  Internet: davesparks@delphi.com   |
 | Dave Sparks  |  Fidonet:  Dave Sparks @ 1:207/212 |
 |              |  Famnet:   Dave Sparks @ 77:500/1  |
 \--------------+------------------------------------/

