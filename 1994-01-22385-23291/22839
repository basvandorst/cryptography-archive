Path: msuinfo!agate!library.ucla.edu!europa.eng.gtefsd.com!howland.reston.ans.net!vixen.cso.uiuc.edu!audi.ncsa.uiuc.edu!mitchell
From: David Mitchell <mitchell@ncsa.uiuc.edu>
Newsgroups: sci.crypt
Subject: Re: RSA has been broken!
Date: 13 Jan 1994 19:01:20 GMT
Organization: #include <std.disclaimer>
Lines: 34
Distribution: world
Message-ID: <2h45q0$q35@vixen.cso.uiuc.edu>
NNTP-Posting-Host: audi.ncsa.uiuc.edu
X-UserAgent: Version 1.1.3
X-XXMessage-ID: <A959A634F3010611@audi.ncsa.uiuc.edu>
X-XXDate: Wed, 12 Jan 94 13:05:56 GMT

In article <WARLORD.94Jan12190835@toxicwaste.mit.edu> Derek Atkins,
warlord@MIT.EDU writes:
> I think that what we have here is a different definition of
> "obscurity", "algorithm", and "secret".  By algorithm, I mean the
> general steps in encrypting.  By obscurity, I mean hiding said
> algorithm.  By "secret", I mean key used to encrypt, and how that key
> specifically affects the algorithm. 
> 
...
> 
> I'm not saying that *RSA* doesn't have problems -- there are some
> security flaws in RSA, since you can get some information about the
> plaintext message that is RSA-encrypted.  This is a result of the RSA
> permutation.  There exist public-key algorithms that do not have these
> properties, and their algorithms are publically known as well!

The point I am trying to make about public-key is that your "secret" in
the first paragraph above is NOT a secret.  It's the public key, which
everyone knows.  You say 'you can get some information about the
plaintext', but you can do a lot more than that.  You can solve for the
plaintext, and the method for doing it is straitforward.  The only reason
this isn't done is that there are enough variables in the resulting
equations to make the problem intractable (at least in theory.)  RSA
encrypt something with a small public key, like 15, and you can decrypt
it pretty easily.  It wouldn't even be necessary to take the intermediate
step of solving for the private key.

In one sense, public-key systems come 'broken'.  In some ways it's a good
thing.  Since everyone knows (or can figure out) how to solve for your
plaintext, you simply scale the problem up until it becomes impossible to
do in a reasonable amount of time, even assuming massive increases in
computing power.  This is why such huge keys are necessary for RSA.

-David Mitchell
