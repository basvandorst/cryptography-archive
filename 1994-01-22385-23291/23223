Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!wupost!udel!princeton!allegra!ulysses!ulysses!smb
From: smb@research.att.com (Steven Bellovin)
Subject: Re: DES Documentation (Is DES un-reverseable?) Ammendum
Message-ID: <1994Jan25.232411.249@ulysses.att.com>
Date: Tue, 25 Jan 1994 23:24:11 GMT
References: <2htunf$v2g@olivaw.apanix.apana.org.au> <2hv26d$nr9@olivaw.apanix.apana.org.au>
Organization: AT&T Bell Laboratories
Lines: 32

In article <2hv26d$nr9@olivaw.apanix.apana.org.au>, hart@apanix.apana.org.au (Leigh Hart) writes:
> After some reading of man pages I found notes on how crypt() (or some
> versions of it at least)uses DES to encrypt the password, taking the
> key from the low order 7 bits of the text (after salting) and then
> taking the resultant DES'd string and DESing it again twice more using
> the same method of generating the key (ie: low order 7 bits of the
> DES'd string).
> 
> The point being, that the key to the middle-stage DES encryption
> is lost in the final encryption, therefore its impossible to reverse
> engineer the algorythym without the key, which is lost and unknown,
> therefore guessing keys is the only option.
> 
> Is this a correct interpretation?  Or close to correct :)

Nope...

First, a DES key is constructed by using the low-order 7 bits of each
of the 8 characters of the password.  7*8=56, so that works out nicely...
Next, the salt is used to permute the E-box of DES.  If I recall correctly,
the routine examines each of the 12 bits of the salt, and if bit i is
1, then entries i and i+24 of the E-box are swapped.  Finally, the
key is used with the modified algorithm to encrypt a block of 64 zero bits.
This encryption is iterated 25 times.

Even without the permutation and the iteration, reversing the process
is -- by definition -- the problem of recovering the key to DES given
a single block of known plaintext and ciphertext.  That is, at the least,
hard; no way better than brute force is known.

For a complete explanation of the rationale, see the Morris&Thompson
paper in the November '79 issue of CACM.
