Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!yeshua.marcam.com!zip.eecs.umich.edu!caen!malgudi.oar.net!witch!cyberg!fb
Newsgroups: sci.crypt
Message-ID: <44@cyberg.win.net>
References: <940105181113.026225@DOCKMASTER.NCSC.MIL> <jktaberCJ6tx7.9Cw@netcom.com><CJ7tnv.AB2@cbfsb.cb.att.com>
Reply-To: fb@cyberg.win.net (Francis Barrett)
From: fb@cyberg.win.net (Francis Barrett)
Date: Fri, 07 Jan 1994 05:12:55 GMT
Subject: Re: The DES Initial Permutation
Lines: 24

 
In article <CJ7tnv.AB2@cbfsb.cb.att.com>, 
richard.b.dell (rdell@cbnewsf.cb.att.com) writes:

 > I guess my question is .. for anyone who has done the coding,
 > what percentage of the time is spent in the initial permutation
 > compared to the rest of the routine?

If you do some minimal precomputation on the key schedule, the guts of
DES can be done in just over 30 32-bit CPU instructions per each of
the 16 rounds.  There is a cute algorithm by a guy named Dan Hoey
which does the initial and final permuations in a very small number of
inline shifts and bitwise logicals.  So the IP adds very little to the
total CPU time even in a tightly coded implementation.

Richard Outerbridge used to have some nice C code up on Compuserve
which illustrated all the known tricks for doing DES fast.  I don't
know if it is still posted.

 > Unless it was over 25 percent, I wouldn't consider a hardware bit
 > shuffler worthwhile.

It isn't. :)


---------------------------------------------------------------
Francis Barrett, F.R.C. |  Thou canst not travel on the path  |
The Cybernetics Guild   |  before thou hast become the Path   |
fb@cyberg.win.net       |  itself.                            |
---------------------------------------------------------------

