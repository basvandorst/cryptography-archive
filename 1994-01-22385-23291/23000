Path: msuinfo!agate!usenet.ins.cwru.edu!news.ecn.bgu.edu!wupost!mont!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Re: Disk declassification and cheap newsreaders
Date: Wed, 19 Jan 94 23:03:43 CST
Organization: University of Missouri, Columbia
Lines: 26
Message-ID: <16F4314451S86.C445585@mizzou1.missouri.edu>
References: <1994Jan16.133623.4087@lsl.co.uk> <LRH.94Jan16144819@al-burro.mit.edu> <jktaberCJszFB.2v8@netcom.com>
NNTP-Posting-Host: mizzou1.missouri.edu

In article <jktaberCJszFB.2v8@netcom.com>
jktaber@netcom.com (John K. Taber) writes:
 
>But I think it is also a serious consideration generally.  Suppose one of
>our embassies is seized as in Iran.  Today, a lot of confidential
>information is on hard disks.  In an emergency, how would an embassy
>destroy them?
 
>John K. Taber                        jktaber@netcom.com
 
    I think the obvious solution is to keep the hard disk encrypted,
using either a hardware add-on or a software device driver or TSR.
On startup in the morning, calculate RealKey = Hash(Passphrase, Salt),
where Salt is kept on the disk.  Have a user command quickly available
(ie, less than 10 seconds from the command line) that allows the deletion
of Salt.  (Delete, multiple overwrite, then start formatting the drive.)
Obviously, this would have about half a dozen "ARE YOU SURE (Y/N)?"
prompts, but would otherwise be very fast.  Ideally, there'd be a hotkey
to get you into this.  Or, if it was a hardware device used for disk
encryption, you'd simply keep Salt in erasable PROM, with a "kill"
switch available.
 
   Once the Salt's been destroyed, no amount of coercion will retrieve
the actual key.
 
   --John Kelsey, c445585@mizzou1.missouri.edu
