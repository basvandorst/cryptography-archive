Newsgroups: sci.crypt
Path: msuinfo!agate!spool.mu.edu!wupost!csus.edu!netcom.com!phr
From: phr@netcom.com (Paul Rubin)
Subject: Re: Is this an ok mode for triple DES?
Message-ID: <phrCJ1Gyt.LyF@netcom.com>
Organization: Netcom - Online Communication Services (408 241-9760 guest)
References: <phrCJ033A.420@netcom.com> <2g86a3$i4r@transfer.stratus.com>
Date: Mon, 3 Jan 1994 05:37:40 GMT
Lines: 45

In article <2g86a3$i4r@transfer.stratus.com> cme@ellisun.sw.stratus.com (Carl Ellison) writes:
>In article <phrCJ033A.420@netcom.com> phr@netcom.com (Paul Rubin) writes:
>>I'm wondering if it's ok to do the following instead: given a fairly
>>large buffer of text to encrypt (say, 4k bytes), and three independent
>>keys K1, K2, K3:
>>
>>	1. Generate an initialiation vector IV_1.
>>	2. Using this IV, encrypt the entire buffer with 
>>	   single DES in CBC mode using key K1.
>>	3. Use the ciphertext output of the last 64-bit block as
>>	   the IV to encrypt the whole buffer again using K2.
>>	4. Do step 3 again using K3.
>
>There are two problems.
>
>1.	the last pass needs to be ECB rather than CBC mode (for security)

Could you explain the reason for this?  I think I'm still missing
something.  Why use ECB?  Also, it wasn't clear, but I meant that
the last output of step 3 should be used as the IV for step 4.
Do you mean I should use ECB if the step 4 IV is coming from step 2
instead of step 3?

>2.	step 3 implies that you can't run three chips in a pipeline to get
>	higher throughput.  If you are going to prohibit pipelines, then
>	you should use normal triple ECB with a feedback loop around
>	it.

Hmm.  I'm mainly concerned about single chip implementations.
The trouble with triple ECB, as mentioned, is the time needed to
load new keys with every block.  Yes, this method does prevent
using 3 pipelined chips, but the single chips are fast enough
that maybe this isn't too bad a problem. 

>I believe there are chips which hold key schedules for multiple keys so
>that you can rapidly switch for multiple encryption.  However, that's
>not something I know for sure.  Does anyone else?

I don't know of anything like this but am interested to hear.
I really wasn't thinking in terms of having control over the hardware
design, though.  I saw the ad for the Toshiba PCMCIA DES card,
which presumably has a single DES chip inside, and started thinking
about how to use it in a secure file system.  This card is the
closest thing I have seen yet to serious mass market cryptography
hardware.
