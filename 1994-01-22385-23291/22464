Path: msuinfo!uwm.edu!spool.mu.edu!think.com!news!rlk
From: rlk@merlin.think.com (Robert Krawitz)
Newsgroups: comp.org.eff.talk,alt.privacy.clipper,sci.crypt
Subject: Re: Please explain the problem with clipper
Date: 2 Jan 94 18:46:05
Organization: Thinking Machines Corporation, Cambridge Mass., USA
Lines: 24
Message-ID: <RLK.94Jan2184605@merlin.think.com>
References: <2g5uqh$1l4@agate.berkeley.edu> <RLK.94Jan2092235@merlin.think.com>
	<2g6n5c$4gc@agate.berkeley.edu> <CJ0nnK.2vr@calcite.rhyolite.com>
NNTP-Posting-Host: merlin.think.com
In-reply-to: vjs@calcite.rhyolite.com's message of Sun, 2 Jan 1994 19:04:31 GMT
Xref: msuinfo comp.org.eff.talk:24388 alt.privacy.clipper:1760 sci.crypt:22464

In article <CJ0nnK.2vr@calcite.rhyolite.com> vjs@calcite.rhyolite.com (Vernon Schryver) writes:

   No one who has every been alive while within earshot of a major commercial
   software release would ever say "a few #ifdefs will fix things right up."
   In the real world, you never have "a few #ifdefs".  You have a zillion of
   them, all to fix problems in the previous 157 release cycles and 26
   platforms.

Oh, let's just say for the sake of argument that it is a single #ifdef.
But inside this #ifdef is a call to a function that sets some flag
somewhere, and when that flag isn't set some piece of memory doesn't get
released, and two weeks down the road the machine crashes because it ran
out of kernel memory.

The code fixes, of course, are the easy part of it, whether there's one
#ifdef or 1000.  As you point out, it's the rest of the process --
testing, customer support, documentation, and so forth -- that are what
make all of this such a pain.
--
Robert Krawitz <rlk@think.com>	OS/IO Software Engineer	(617)234-2116
Thinking Machines Corp.		245 First St.	 Cambridge, MA  02142

Member of the League for Programming Freedom -- mail lpf@uunet.uu.net
Tall Clubs International  --  tci-request@think.com or 1-800-521-2512
