Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!sdd.hp.com!saimiri.primate.wisc.edu!xanth.cs.odu.edu!ukma!mont!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Re: MD5 usage
Date: Thu, 20 Jan 94 17:38:01 CST
Organization: University of Missouri, Columbia
Lines: 73
Message-ID: <16F44F7FCS86.C445585@mizzou1.missouri.edu>
References: <9401192104591.davesparks.DLITE@delphi.com>
NNTP-Posting-Host: mizzou1.missouri.edu

In article <9401192104591.davesparks.DLITE@delphi.com>
davesparks@delphi.com (Dave Sparks) writes:
 
>When using a hash function, such as MD5, to "randomize"
>semi-random alphanumeric data, is there a rule of thumb as to how
>large of an input buffer of data is necessary to produce
>reasonably random output?  Intuitively, it would seem that more
>is better, but that at some level you reach a point of
>diminishing returns and overkill.  Perhaps it's related to some
>relationship between the information content of the input vs. the
>output?
>
>Let me cite a specific application I'll call the "Blue Plate
>Special".  Let's say that I desire to generate a one-time-pad for
>cryptographic purposes.  To create this pad, I observe passing
>vehicles on a busy street, recording license numbers and makes,
>perhaps using some arbitrary filter, such as only recording every
>tenth vehicle, recording only blue cars, expired tags,
>out-of-state plates, etc. (or some combination thereof).  All
>this data would then be concatenated into a buffer and used as
>input to the MD5 algorithm (or other hashing function), with each
>16 bytes of output forming a portion of the final one-time-pad.
 
   The basic idea here is, for each 128-bit portion of the pad, to have
enough data that you have at least 128 bits of randomness (unpredictability).
If this works out right, every bit of the output will have exactly .5
probability of being a 0, with no correlation or relationship of any
kind between output bits.  There must be more than 2**128 possible
inputs, so that *all* 2**128 possible outputs are represented.  In
fact, there should be far more than 2**128 possible inputs, so that
the different outputs' probabilities will even out.
 
   What we're doing here is using the fact that changing one bit of the
input to a good crypto hash or encryption function should change about
half the output bits, (the avalanche criterion), and that when you sum
the probabilities over all possible inputs, changing an input bit should
have a .5 probability of changing each output bit, with no correlation
between different output bits changing (strict avalanche criterion).
Still further, if you know all but n bits of the input, you shouldn't
be able to narrow the output down to much fewer than 2**n possibilities.
(Assuming n < output size.)
 
   I'd suggest, if you're trying to distill randomness, that you:
 
1.  Figure out how much randomness there is in your source.  Ie,
    English language text is not at all random--there are big
    differences in likelihood of each letter given the previous
    n letters, there is a structure to how words are put together,
    etc.  The running estimate for English text seems to be about
    1 bit of randomness per letter.  When in doubt, assume your
    source doesn't have much randomness.
 
2.  When you have several times as much randomness in your source
    as your output block size, calculate the next output block
    with a good crypto hash or something similar.
 
3.  It's probably a good idea to try to combine sources, to make
    sure you don't get nailed by a bad estimate of how much randomness
    is contained in one source.
 
4.  It's important to realize that this sort of method of generating
    random data leaves some potential weaknesses, either based on
    you method of collecting randomness (writing down licence numbers)
    or your method of distilling it (MD5 or some such).  Perhaps
    tomorrow, it will be shown that MD5 outputs leave some specific
    kinds of patterns intact from their inputs.  (I can't see any way
    this would happen, but that certainly doesn't mean it can't happen.)
    Perhaps tomorrow, you'll realize that you live next door to a great
    big state office building, and half the licence numbers you wrote
    down were chosen from a total pool of about 300 state vehicles
    available to the agencies in that building.
 
   --John Kelsey, c445585@mizzou1.missouri.edu
