============
PGPShell 3.2
============

PGPShell v3.2 has been updated to be compatible with the MIT PGP v2.6
and Mathew's clever v2.6ui version.  It is still compatible with PGP 
v2.3a for those who are not interested in the 'licensing wars' of late 
and want to stick to the tried and true.

In addition to the compatibility update, I've improved on several
other things:

*  new directory dialogue improvements which allow you to choose 
   files across directories and drives (and with a mouse)

*  ability to load and switch among several PGP keyring files
   located along PGPPATH.  Good for viewing your secret key ring
   and your public key ring while in PGPShell

*  the use of 4 new config variables located in PGP's CONFIG.TXT, 
   three of which are PGP-specific and the fourth the MyName var.
   The three PGP-specific configuration items allow you to 
   customize PGPShell by choosing a particular key ring file at
   startup, your own third-party text editor rather than the 
   internal one, and a default text message directory to choose
   text files from.

*  debugging of some strange code, including a complete rewrite
   of keyring information loading into the KMS.  A few users
   reported seeing only garbage in the KMS, so improved error
   correcting should correct this problem.  
   
*  PGPShell now sends the entire UserID to PGP for processing.
   This problem popped up when more than one UserID shared the
   same first and last name, e.g., "Steve Jones."  Now PGPShell
   will send: "Steve Jones <jones@domain.com>" to ensure that
   the correct key is being acted upon.



PGPShell 3.1
============

PGPShell version 3.0 was a complete from-the-ground-up rewrite of the 
successful, yet clumsy version 2.2.  While it was a drastic improvement 
(design and otherwise) over previous versions, some serious bugs worked 
their way in there.  Version 3.1 takes care of them all and has some 
extra bells and whistles thrown in as well.

  o  In MS-DOS ver 6.0+ with the double-space option enabled,  
     the FAT table is organized differently.  Some of my assembly
     routines conflicted with DOS/double-space and locked up the
     computer (cold, dead complete lockup...)  Resorted to tried
     and true methods and squashed this bug.

  o  Improved and made exception handling more robust, especially
     in the opening key data gathering.  PGPShell now displays an
     error message in lieu of the Key Management Screen if key
     data was not gathered properly.  Now the only lock-up can
     occur if the PGP key ring is corrupted, which requires the
     user type "pgp -kc" at the DOS prompt.  (May or may not clear
     up the problem.)

  o  PGPShell now supports full UserIDs, instead of last names only,
     so that if before "Smith" was sent to PGP (and PGP complained  
     that there were two Smith's) the full "Robert S. Smith" is now
     sent.

  o  Fixed the overly restrictive requirement that the PGP.EXE file
     exist in the PGPPATH.  PGPShell now searches the entire path 
     *and* the PGPPATH for the PGP.EXE file enabling users to keep
     the executable in one place and the data files in another.

  o  PGPSHELL.EXE can now be run from anywhere in the path, not just
     from the current directory.  PGPShell still requires that the
     PGP DOS environment variable PGPPATH be set though, because it
     will look there for the output files that it uses to display
     the key ring.

  o  Fixed several small glitches in the PGPShell Editor.  The Editor
     no longer rejects valid DOS file names.  Also fixed a backspace
     bug and a wordwrap glitch.

  o  When entering the Key Management Screen (KMS) information is
     instantly displayed without pressing a key.  Also, scrolling 
     with the mouse or arrow keys updates the key information 
     automatically.  
     
  o  Put in a CRC routine to ensure greater confidence in the
     executable.  Now you can type "PGPSHELL CRC" to get the CRC
     checksum.
 

What I Want to Do in the Very Near Future, (or What I Would Have
Done, Had I Had More Time Over Spring Break...)
----------------------------------------------------------------

  o  Add support for an external string table for all error
     messages and help screens rather than hard coding them in
     the executable.  This will facilitate translation of PGPShell 
     into languages other than English.  (Perhaps my wife will 
     volunteer for the Spanish translation...)

  o  Add support for an external text editor to use in lieu of the
     PGPShell Editor 1.0a.  That way those still stuck on edlin 
     can go for it!

I'll try to get to these two things in particular this summer
(Jun 94).  Those of you who are bi/tri/multi-lingual (!) and would
like to see PGPShell translated into a particular language, please
send me the translation!  To do it, go through PGPShell and write
down the title of the help screen (or error message) and the text
after that in the translated language.  Don't worry about the line
count, I'll pad the lines if need be *unless* it is longer than
will fit in the box.  It can be shorter than the English text, but
it can't be longer or the message will get truncated!

All programs have a couple of bugs hanging around...  Don't keep 'em 
to yourself!  Let me know about them so that I can make PGPShell even
better than ever.  Don't assume someone else already wrote about it,
because odds are they didn't.  You can e-mail me at:

                     still@rintintin.colorado.edu

or leave a [C]omment to me as the sysop of the Hieroglyphic Voodoo 
Machine BBS at +1 303 443 2457 (V.32bis N81) 24 hours a day.  Enjoy!
