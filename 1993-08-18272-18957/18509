Path: msuinfo!agate!usenet.ins.cwru.edu!magnus.acs.ohio-state.edu!math.ohio-state.edu!usc!wupost!bigboy.sbc.com!news.mtholyoke.edu!nic.umass.edu!titan.ucs.umass.edu!not-for-mail
From: quilty@titan.ucs.umass.edu (Lulu of the lotus-eaters)
Newsgroups: sci.crypt
Subject: Re: PGP
Date: 8 Aug 1993 16:37:14 -0400
Organization: University of Massachusetts, Amherst
Lines: 53
Distribution: world
Message-ID: <243o5q$6c2@titan.ucs.umass.edu>
References: <49.16.212.0NEB12E3@cdreams.com>
NNTP-Posting-Host: titan.ucs.umass.edu

In article <49.16.212.0NEB12E3@cdreams.com> israel.silverman@cdreams.com (Israel Silverman) writes:
>Exactly how does one transfer a public key in PGP?
>The docs don't quite say that.

There are quite a few different answers to this.  You might want to
read 'alt.security.pgp' for a bit to get a better sense about it (if
you have it on your newsfeed).

Basically, anyone may know your public key without endangering the
system, so you don't have to worry about interception of a transmitted
key.  However, what you do need to worry about is demonstrating to
your correspondents that the key really is from you, and not from
someone masquerading as you.

The *most* secure way of doing this is perhaps to physically hand your
key (for example, on floppy disk) to a correspondent.  Where that's
not possible, you can verify the origin of your key by having several
people who have known keys sign your key before making it available on
the Net.  That is, I might email my key to Alice, Bob and Carol, each
of whom signs it, indicating that they all think that the key
*probably* really does belong to me.  I then make public this signed
key, which shows everyone who knows Alice, Bob and Carol that people
they know have a certain measure of trust in the key.  Alice, et al
may sign the key with several different levels of trust, depending on
how sure they are about the authenticity of a key purportedly
originating from me.  All of this isn't perfect, of course, but it
does require someone not just to claim their me, but to convince
Alice, Bob and Carol of that as well -- which indicates to David that
my key is either authentic, or so-and-so much extra work has been
devoted to conterfeiting my key.  Many keys, signed and unsigned, are
destributed via keyservers, which are central depositories of public
keys -- via ftp, telnet, etc.

Another way of distributing keys is by making them available for
'finger'ing (which is pretty much the only thing I do).  Again, this
is spoofable -- but such a spoof involves an active and constant
monitoring of finger requests to my account.  This is a lot more work
for someone hoping to get my mail than would be simply signing my name
to a public-key they generate.  Also, if someone spoofs my public-key
in this manner, they pretty much have to follow up with intercepting
all mail sent *to* me encrypted with this key -- otherwise I will get
mail encrypted with a key I can't decrypt.  This is possible for
someone who wants completely to spoof my identity, but not really for
someone who only wants to feed a few false messages into a series of
communications between me and a correspondent.

Yours, Lulu...

-- 
      _/_/_/ THIS MESSAGE WAS BROUGHT TO YOU BY: Postmodern Enterprises _/_/_/ 
     _/_/    ~~~~~~~~~~~~~~~~[quilty@philos.umass.edu]~~~~~~~~~~~~~~~~~  _/_/ 
    _/_/  The opinions expressed here must be those of my employer...   _/_/ 
   _/_/_/_/_/_/_/_/_/_/ Surely you don't think that *I* believe them!  _/_/ 
