Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!math.ohio-state.edu!wupost!mont!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu (John Kelsey)
Subject: DES Key Length, changing keys, etc.
Message-ID: <16C28E3C5.C445585@mizzou1.missouri.edu>
Sender: news@mont.cs.missouri.edu
Nntp-Posting-Host: mizzou1.missouri.edu
Organization: University of Missouri
References:  <930811212405.085570@DOCKMASTER.NCSC.MIL>
Date: Thu, 12 Aug 93 16:11:47 CDT
Lines: 75

In article <930811212405.085570@DOCKMASTER.NCSC.MIL>
WHMurray@DOCKMASTER.NCSC.MIL writes:
 
>You might do exactly that if, as was the case, the government insisted
>that the only possible standard was one that was implemented only in
>hardware.
 
   Hmmm.  I guess what I'm saying is that I have a hard time seeing how
a 56-bit limit would have come about, rather than a 64-bit limit.  Don't
DES chips accept 64-bits of input, but then ignore the parity bits?  Maybe
I'm just exposing my ignorance of the engineering techniques and limit-
ations of the day, but I have a hard time imagining how such a limit would
have come about.  Did the DES design team have a cipher all worked out with
128 bits of key, but then realize that their design couldn't be efficiently
or cheaply implemented in hardware, and thus cut their key to 56 bits?  If
so, would they have cut it down to 32 bits, if necessary?
 
   Were they just shooting for the smallest key they could find that they
didn't think would leave any likelihood of a brute-force key-search?
(This seems as plausible a reason for 56 bits as any.)
 
>You might also do it if, as was the case, you understood that absolute
>key length is irrelevant.  What is relevant is the length of the key
>relative to the length of the data encrypted under it.  The IBM
>developers understood that computers enable you to change keys as often
>as you like, even often enough that the length of the key is equal to
>the length of the data.
 
   I'm not sure I understand what you're saying here.  Presumably, using
*any* encryption scheme, you change keys frequently.  But with DES in
native (ECB) mode, you can't encrypt even one block without having more
ciphertext than key.  Perhaps you were thinking of changing the key every
time the ciphertext reached its unicity distance?  (I don't know what this
is for DES, but it's not real large)  (Also, if you used the same amount
of random key as plaintext, you could guarantee perfect secrecy.  We've
talked about one-time pads on this group quite a bit, and I'm sure this is
not what you had in mind....)
 
   I've never heard of a scheme that didn't use one DES key for a fairly
large number of plaintext blocks.  And a keysearch machine will allow an
attacker to find that key and get those encrypted blocks in a reasonable
amount of time for 56-bits of key, but not for 128-bits or even 80-bits.
I don't see how changing the key often deals with this attack.  (I *do*
understand that keysize alone isn't a good determiner of cipher strength.
Does anyone encrypt their confidential files with FEAL-4X?  And I *do*
understand that changing the key often is a good idea, to avoid giving
an attacker too much ciphertext under the same key to work with.  I just
recommended taking measures to avoid using the same key for all the files
on an encrypted drive on this group.)
 
   If keysize *isn't* an important issue, then why does Skipjack need an
80-bit key?  Or IDEA a 128-bit key, or RC2 and RC4 an arbitrary-length key?
Would you recommend using DES with the first 8 key bits set to 0?
 
>The periodic discussion of the length of the DES key has always amused
>the IBM people who understand that the length of the effective DES key
>is, as is also true of RSA, arbitrarily long.
 
   Hmmm.  I think maybe I understand.  Short session keys for DES or RSA
are okay, so long as what you're trying to protect is your master keys.
Ie, it's fine to use a 56-bit DES key or a 384-bit RSA key, so long as you
change it every day, because by the time your enemy has attacked it by
brute force, you've changed it.  But this doesn't protect the secrecy of
already-transmitted messages.  Am I understanding what you're saying?
 
   Short session keys are probably fine for information that has only
short-term importance, like telephone calls.  But I'd surely not want to
use a 56-bit key to encrypt something that would get me in trouble anytime
in the next 50 years it was broken....
 
>William Hugh Murray, Executive Consultant, Information System Security
>49 Locust Avenue, Suite 104; New Canaan, Connecticut 06840
>1-0-ATT-0-700-WMURRAY; WHMurray at DOCKMASTER.NCSC.MIL
 
   --John Kelsey, c445585@mizzou1.missouri.edu
