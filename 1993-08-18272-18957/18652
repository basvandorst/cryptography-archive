Newsgroups: sci.crypt
Path: msuinfo!agate!doc.ic.ac.uk!uknet!comlab.ox.ac.uk!pcl
From: pcl@ox.ac.uk (Paul C Leyland)
Subject: Re: Real-Time Encryption
Message-ID: <PCL.93Aug16155726@rhodium.ox.ac.uk>
In-reply-to: pcl@ox.ac.uk's message of 16 Aug 93 09:52:13
Organization: Oxford University Computing Services, 13 Banbury Rd Oxford OX2
	6NN
References: <Gene_Ruebsamen.041d@republik.fidonet.org>
	<DOUG.93Aug14150800@midget.towson.edu>
	<PCL.93Aug16095213@rhodium.ox.ac.uk>
Date: 16 Aug 93 15:57:26
Lines: 27

In article <PCL.93Aug16095213@rhodium.ox.ac.uk> pcl@ox.ac.uk (Paul C Leyland) writes:

   Unfortunately, this method will mean that your program reading from the
   serial port will not be able to acquire any input until a block of data
   has been encrypted.  Better is to generate a block's worth of random
   numbers from your encryption algorithm (start off with block generated
   from the password or whatever) and then XOR each incoming character with
   the succcessive bytes of the block.  Keep hold of the characters so that
   when the block is exhausted, yu can use them to key the next block.
   There are other variants on this scheme for converting a block cipher to
   a stream cipher, but you get the idea.

It's been pointed out to me in email that I should have mentioned a
magic TLA.  (Thanks, Marcus ;-)

Check out CFB, or Cipher Feedback mode of DES.  It's essentially what
I described and may well be already implemented if you're importing your
encryption code rather than rolling your own.


Paul
--
Paul Leyland <pcl@oxford.ac.uk>          | Hanging on in quiet desperation is
Oxford University Computing Service      |     the English way.
13 Banbury Road, Oxford, OX2 6NN, UK     | The time is come, the song is over.
Tel: +44-865-273200  Fax: +44-865-273275 | Thought I'd something more to say.
Finger pcl@black.ox.ac.uk for PGP key    |
