Newsgroups: sci.crypt
Path: msuinfo!agate!doc.ic.ac.uk!pipex!uunet!munnari.oz.au!cs.mu.OZ.AU!toora.acci.COM.AU!ggr
From: ggr@toora.acci.COM.AU (Greg Rose)
Subject: Vectorising (was Re: SKIPJACK Review)
Message-ID: <9322311.15464@mulga.cs.mu.OZ.AU>
Keywords: Clipper, SKIPJACK, ViaLink, Cray, Evaluation, CAPSTONE, vectorising
Sender: news@cs.mu.OZ.AU
Organization: Australian Computing and Communications Institute
References: <1993Aug1.220927.4510@guvax.acc.georgetown.edu> <244v0i$26c@sunb.ocs.mq.edu.au>
Date: Wed, 11 Aug 1993 01:40:50 GMT
Lines: 50

In article <244v0i$26c@sunb.ocs.mq.edu.au> ifarqhar@laurel.ocs.mq.edu.au (Ian Farquhar) writes:
>Firstly, I would like to say thanks to Professor Denning for posting
>the interim version of this report, rather than making us all wait
>for the final version.   Considering that her usual appearance on the
>net is accompanied by much unnecessary unpleasantness from her critics,
>I believe that she deserves our thanks for once more stepping into
>the fray to provide this information as she has.

Ditto, just as an aside. Right or wrong (upon
which I have no opinion) no-one deserves some of
the attack I've seen Denning receive.

>>that rate, it would take more than 400 billion years to try all keys.
>>Assuming the use of all 8 processors and aggressive vectorization, the
>>time would be reduced to about a billion years.
>
>I've been thinking about this paragraph for a couple of days, and have come
>to a rather curious conclusion which I would like to present to the net
>for discussion.  A couple of initial points:
>       ...
>	* The reduction of 50 times between the "aggressively vectorized"
> 	  version of SKIPJACK and the "optimized" version implies that
>	  this implementation is not vectorized much, if at all.  It is
>	  questionable if whether in some modes (eg. CBC) vectorization
>	  would be possible.  I believe that it is safe to assume that
>	  to support all four DES modes that the NSA software implementation
>          is not vectorized.  50 is also interestly close to the vector
>	  length of 64 plus startup times and inefficiencies.

Any brute force attack can be vectorised. You
simply replicate the input data as many times as
the optimal vector length on the machine in
question, make another vector of trial keys the
same size, and do vector operations instead of
scalar ones. This doen't speed up the individual
operations (in fact it slows down the
start-to-finish time considerably), but it gets a
lot more of them happening at once. The speed up
comes from the pipelining between operations and
much lower program control overhead, plus the fact
that there are usually multiple vector units.

The CBC question is irrelevent, as you basically
vectorise across many lines of attack, not along
one of them.

--
Greg Rose                 Australian Computing and Communications Institute
ggr@acci.com.au                                              +61 18 174 842
`Use of the standard phrase "HIJACKED" may be inadvisable' -- CAA
