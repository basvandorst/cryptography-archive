Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!newsserver.jvnc.net!yale.edu!cs.yale.edu!news-mail-gateway!daemon
From: WHMurray@DOCKMASTER.NCSC.MIL
Subject: DES Key Length
Message-ID: <930813182206.633723@DOCKMASTER.NCSC.MIL>
Sender: WHMurray.ISSA@DOCKMASTER.NCSC.MIL
Organization: Yale CS Mail/News Gateway
Date: Fri, 13 Aug 1993 18:22:00 GMT
Lines: 114


[10152] (81 lines) Network_Server.Daemon 08/12/93  1923.3 edt Thu scicrypt
Subject: DES Key Length, changing keys, etc.
From: news-daemon@optical.bms.com@CLIFF.BMS.COM

From: C445585@mizzou1.missouri.edu (John Kelsey)
Subject: DES Key Length, changing keys, etc.
Date: Thu, 12 Aug 93 16:11:47 CDT

In article <930811212405.085570@DOCKMASTER.NCSC.MIL>
WHMurray@DOCKMASTER.NCSC.MIL writes:

>>You might do exactly that if, as was the case, the government insisted
>>that the only possible standard was one that was implemented only in
>>hardware.

>   Hmmm.  I guess what I'm saying is that I have a hard time seeing how
> 56-bit limit would have come about, rather than a 64-bit limit. 

I am sympathetic with that.  It seems to me that the eight bits 
would have been better used for key bits than for parity.  On the
other hand, while I know some of the problems they were trying to
solve, I do not pretend to know all of them.  However,
the Biham and Shamir analysis that there is a nice balance in DES
between the complexity and the key length.

>>You might also do it if, as was the case, you understood that absolute
>>key length is irrelevant.  What is relevant is the length of the key
>>relative to the length of the data encrypted under it.  The IBM
>>developers understood that computers enable you to change keys as often
>>as you like, even often enough that the length of the key is equal to
>>the length of the data.

>   I'm not sure I understand what you're saying here.  Presumably, using
>*any* encryption scheme, you change keys frequently.  But with DES in
>native (ECB) mode, you can't encrypt even one block without having more
>ciphertext than key.  

Not true.  Unless my data just happens to be 64 bits in length, I
must do something to it to be able to encrypt it with a 64 bit
block cipher.  If my data is 56 bits, then I must add 8 noise bits.

>Perhaps you were thinking of changing the key every
>time the ciphertext reached its unicity distance?  (I don't know what this
>is for DES, but it's not real large)  (Also, if you used the same amount
>of random key as plaintext, you could guarantee perfect secrecy.  We've
>talked about one-time pads on this group quite a bit, and I'm sure this is
>not what you had in mind....)

>   I've never heard of a scheme that didn't use one DES key for a fairly
>large number of plaintext blocks.  

One of the earliest IBM implementations changed the key every
SNA session.  Henry Beker proposed an implementation in which the
key changed once for every point-of-sale transaction, usually less
than a DES block.  Telequip Corporation's Hotline encrypting modem
 changes the key several times a second.

>   If keysize *isn't* an important issue, ....

I did not intend to suggest that; only that it is not an 
independent issue and that the length of the key relative to the
length of the message is more important than its length relative
to the block.

>...then why does Skipjack need an
>80-bit key?  

Perhaps so that it can have more strong keys than DES while still
having mostly weak keys.  Perhaps to exploit the fact that it has
more rounds than DES.  However one should note that even here, the
key size is not the same as the block size.

>Or IDEA a 128-bit key, or RC2 and RC4 an arbitrary-length key?

What I am trying to suggest is that both block size AND key length
are arbitrary in every case.

>Would you recommend using DES with the first 8 key bits set to 0?

I can not identify any problem that such a recommendation would 
solve.

>>The periodic discussion of the length of the DES key has always amused
>>the IBM people who understand that the length of the effective DES key
>>is, as is also true of RSA, arbitrarily long.

>   Short session keys are probably fine for information that has only
>short-term importance, like telephone calls.  But I'd surely not want to
>use a 56-bit key to encrypt something that would get me in trouble anytime
>in the next 50 years it was broken....

Exactly!  The security of a crypto mechanism is a complex function
of the complexity, the key length, the length of the message, the
life of the message, and the resources available to an adversary.
If the key is as long as the data, random and used only once, then
a trivial function (XOR) will do.  As the complexity of the 
mechanism goes up, the length of the key can go down.  As you have
suggested, as the life of the data goes up, then to maintain the
same level of security, one should either increase the complexity
or lengthen the key.   Note that either will do.

IBM uses triple DES complexity and 112 independent bits of key to
protect key tables.  Martin Hellman has recommended that one use
triple DES complexity and 168 bits of key to protect an arbitrary
quantity of data from a nation state for decades.

>William Hugh Murray, Executive Consultant, Information System Security
>49 Locust Avenue, Suite 104; New Canaan, Connecticut 06840
>1-0-ATT-0-700-WMURRAY; WHMurray at DOCKMASTER.NCSC.MIL

   --John Kelsey, c445585@mizzou1.missouri.edu
--------------
End of comment number 10152.
