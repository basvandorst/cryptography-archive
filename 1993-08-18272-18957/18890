Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!uunet!decwrl!pa.dec.com!e2big.mko.dec.com!peavax.mlo.dec.com!powdml.enet.dec.com!collins
From: collins@powdml.enet.dec.com (David Alpert)
Subject: Re: Visual one-time pad
Message-ID: <1993Aug26.220430.23256@peavax.mlo.dec.com>
Sender: usenet@peavax.mlo.dec.com (USENET News System)
Organisation: NONE
Organization: Digital Equipment Corp.
References:   <01H27C3M7KYG90MUMY@delphi.com>
Date: Thu, 26 Aug 1993 22:02:40 GMT
Lines: 35


In article <01H27C3M7KYG90MUMY@delphi.com>, MIKEINGLE@delphi.com (Mike Ingle) writes...
>This is a secure one-time pad cipher which can be decrypted 
>simply by looking at it. Key management is a problem, but
>assuming the key sheets are truly random and not compromised 
>or reused, the one-time pad is unbreakable.
> 
>A creates several key sheets. Each is a piece of paper containing a
>random pixel image at around 100 dpi. A keeps a copy of the images
>on her hard drive, encrypted with a pass phrase, and gives the 
>printouts to B.
> 
>A creates her plaintext using a fairly large font, then rasterizes it
>to produce a pixel image at the same resolution as the key sheets.
>Then she XOR's the plaintext image with the key sheet image, prints
>out the result as the ciphertext, and sends it to B. Fairly thin,
>low-weight paper is used for both the key and ciphertext sheets, 
>either with laser printers or fax machines. A then wipes the key 
>sheet image off her hard drive; it will not be reused.
> 
>B lays the ciphertext sheet over the key sheet and holds it
>up to a bright light. He will see the plaintext clearly visible 
>in solid black, against a background of random static. Overlapping
>the sheets performs a binary OR of the pixels.
> 
>Has this been done? Probably. It would be easiest to implement as
>a Windows printer driver. Any practical uses for it? It's interesting
>that you can make a secure cipher in which the decryption requires 
>no computation.

The only problem:  The main problem with one-time pad is that you need as many
bytes of "pad" (key) as you will use ciphertext.  With the visual method, you
will use many (perhaps 10,000)? dots (key bits) for every letter, as opposed to
eight bits per letter in regular one-time pad.  So, it takes just far too much
key to be prectical.  Fun to fool around with, though.
