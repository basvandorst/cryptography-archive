Path: msuinfo!agate!howland.reston.ans.net!spool.mu.edu!news.clark.edu!netnews.nwnet.net!news.u.washington.edu!hardy.u.washington.edu!tzs
From: tzs@hardy.u.washington.edu (Tim Smith)
Newsgroups: sci.crypt
Subject: Re: Flipping a coin by phone
Date: 21 Aug 1993 01:24:12 GMT
Organization: University of Washington School of Law, Class of '95
Lines: 32
Message-ID: <253tfs$t6c@news.u.washington.edu>
References: <252t1j$ih4@news.u.washington.edu> <pwd-200893164530@thunder.apple.com>
NNTP-Posting-Host: hardy.u.washington.edu

Patrick W. P. Dirks <pwd@apple.com> wrote:
>> 	1. Party A generates large primes p and q, with p = 1 mod 4,
>> 	and q = 3 mod 4.
>> 
>> 	2. Party A tells party B pq.
>> 
>> 	3. Party B picks one of the following two statements and makes it
>> 	to A:
>> 
>> 		"I call heads iff p > q"
>> 	or
>> 
>> 		"I call tails iff p > q"
>> 
>> 	4. A tells B whether B got heads or tails, and reveals p and q
>> 	so that B can verify that A is telling the truth.
>
>Well, the hard part in these schemes is usually keeping A from adjusting
>the alleged choice of p and q once B has called "heads" or "tails" in your
>example.  For instance, just using small numbers, if I'm A I could wait and
>not pick any p and q until B makes their choice known.  Let's say B claims
>"heads iff p > q".  Now if I want B to get "heads" I say "OK, p was 5 (=1
>mod 4) and q was 3 (=3 mod 4) - you got heads.  If I want B to get "tails"
>I say "OK, p was 5 (=1 mod 4) and q was 7 (=3 mod 4) - you got tails".  In
>your scheme I can precompute arbitrarily large pairs of primes to suit
>either condition.

You seen to have missed step 2, where you have to tell B what pq is.  When
you reveal p and q in step 4, B computes pq and sees if it matches the
number you revealed in step 2.

--Tim Smith
