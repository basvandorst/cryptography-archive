Newsgroups: sci.crypt
Path: msuinfo!agate!boulder!csn!cns!cscns.com!zen
From: zen@cscns.com (Zen)
Subject: Re: License key encoding/decoding
Message-ID: <Cr1AI2.4Hu@cscns.com>
Sender: news@cscns.com (News)
Nntp-Posting-Host: cns
Organization: CNS On-line Services (800-592-1240 customer service)
X-Newsreader: TIN [version 1.2 PL2]
References: <Cr0EMH.JGp@cscns.com> <grinch-070694081355@grinch.tor.hookup.net>
Date: Tue, 7 Jun 1994 15:46:50 GMT
Lines: 32

Reginald Braithwaite-Lee (grinch@hookup.net) wrote:
: In article <Cr0EMH.JGp@cscns.com>, zen@cscns.com (Zen) wrote:

: > Anyone know of a package which I could take a hostid, hostname, and
: > expiration date and encode them using a key and give a short generated
: > ascii encrypted key which decrypted would produce the hostid, hostname 
: > and expirationd date?
: > 
: > Anyone already come up with a tool/utility for this?
: > 
: > (Please send replies/followups to zen@cns.cscns.com; I will post summary)
: > 
: > Thanks.

: Sounds like you're a software developer looking to give people a 'serial
: number' which encodes their license info. First, you'll have to employ
: 'security through obscurity'. In this case, I recommend you allow users to
: enter the information, hash it all, and then enter an ascii version of the
: hash. If the hash is too long, compress the hash. Your app can check the
: hash against what they've entered.

: Naturally, if your app can extract the ostid & hostname from the O/S, all
: they need enter is the expiration and the asciified hash.

Actually, I would be the one running the hash on the fields (hostid, hostname,
expr date), then generating the key.  Giving the key to the consumer, then
having the application check the hash.

What is a good hash to use and how would I do this hash compression back
out to ascii?


