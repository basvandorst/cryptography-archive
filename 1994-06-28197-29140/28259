Path: msuinfo!agate!dog.ee.lbl.gov!overload.lbl.gov!lll-winken.llnl.gov!ames!elroy.jpl.nasa.gov!usc!cs.utexas.edu!not-for-mail
From: ritter@indial1.io.com (Terry Ritter)
Newsgroups: sci.crypt
Subject: Re: How does one attack an easy scheme?
Date: 1 Jun 1994 13:15:27 -0500
Organization: UTexas Mail-to-News Gateway
Lines: 57
Sender: nobody@cs.utexas.edu
Message-ID: <199406011811.NAA13792@indial1.io.com>
NNTP-Posting-Host: news.cs.utexas.edu

 In <2shf57$im3@nyx10.cs.du.edu> colin@nyx10.cs.du.edu (Colin Plumb)
 writes:


>In article <ZC7tWlY.tom_duda@delphi.com>,
>Thomas Duda  <tom_duda@delphi.com> wrote:
>[...]
>
>Other generators are also very easy to derive the state of if you have
>a string of output.  Additive congruential (as used in random(),
>Marsaglia's subtract-with-borrow, and so on.

 I would just like to say that, while, indeed, the RNG in the
 proposed simple stream cipher can be attacked easily, some of us
 are under the delusion that we can build strong stream ciphers.

 The simple use of a linear RNG does not necessarily make the
 overall cipher weak.  A lot can be said for the use of an RNG
 with a huge, mathematically-proven cycle length, because if an
 RNG ever produces a short cycle, the resulting stream cipher
 is quite probably weak.

 But when a linear RNG is used, the sequence must be isolated in
 some way.  I have previously described the use of my "jitterizer"
 mechanism which deletes some of the sequence values at pseudo-
 random, and also offsets each "take" group with a pseudo-random
 value.  This makes the usual linear attacks ineffective, while
 reducing RNG speed by perhaps 10..15 percent.

 Another approach is to innovate a replacement for the incredibly
 weak additive combiner:  I generally use my Dynamic Substitution
 combiner, which is nonlinear yet statistically balanced and fast,
 and I have no reason to believe that this is the only possible
 alternative.

 One advantage of a nonlinear combiner is that it then makes sense
 to have multiple combining levels, or to select different combiners
 at pseudo-random.  Multiple levels of additive combiner do not
 contribute much, and selecting a different combiner does not make
 much sense when each is pretty much like any other.

 It seems to me that a serious stream cipher can be easier to design
 than a serious new block cipher.  Appropriate mathematical results
 are available for the (linear) RNG's themselves, which is more than
 typically can be said for block-cipher construction.  Since the RNG
 is perhaps the major part of the operating stream cipher, this is
 a big advantage.

 On the other hand, a serious stream cipher must be concerned with
 never repeating the same running-key sequence, and this generally
 implies the use of "really random" message keys.  Then we must
 develop a strong source for these values.

 ---
 Terry Ritter   ritter@io.com


