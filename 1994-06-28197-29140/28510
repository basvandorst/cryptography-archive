Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!charnel.ecst.csuchico.edu!yeshua.marcam.com!MathWorks.Com!news2.near.net!noc.near.net!pad-thai.aktis.com!la-jiao.aktis.com!not-for-mail
From: don@cam.ov.com (Donald T. Davis)
Newsgroups: sci.crypt
Subject: Re: random numbers from disk drive rotation latency -- help?
Date: 8 Jun 1994 09:47:00 -0400
Organization: OpenVision Technologies, Inc.
Lines: 46
Message-ID: <2t4i4k$bj2@la-jiao.aktis.com>
References: <199406071512.QAA19140@an-teallach.com> <nagleCr28uB.EEz@netcom.com>
NNTP-Posting-Host: la-jiao.aktis.com

John Nagle writes:
>Graham Toal writes:
>>	What I'm looking for is an algorithm that will convert these semi-random
>>	numbers into a good random bit stream.  Any suggestions?
>
>>Take each value you get and exor *all* the bits in it to produce a
>>single bit of data - otherwise you might hit regularities caused
>....
>
>      Be careful about trying to measure disk latency.  Systems with
>buffering controllers or OSs with read-ahead may show overly repeatable
>results and thus serial correlation.  This is worth bearing in mind for
>software to be distributed - just because it generated random numbers on
>your machine doesn't necessarily imply it will generate random numbers on
>all machines.

i agree.
 
>
>      If you're going to try this, generate psuedo-random addresses and
>seek to them.  This will produce much more random timing than sequential
>reads.  The psuedo-random addresses should be different if you run the
>program twice, so cacheing in controller or OS will not find the blocks
>in the cache.

i disagree; this measurement will be dominated by a complicated
function of the prng and the cacheing, though the disk latency
will still be present in the timings. "complicated" != "random."
there is some value in moving the head, but it's not what you'd
expect: the head's support-arm induces some turbulence inside the
enclosure, so moving the head changes this contribution to the
spindle's air-drag. also, the head's stepping-motor competes with
the spindle-motor for current, so it can delay the spindle's
speed corrections. there's another, more complicated influence as
well, which i discuss in the extended version of the crypto '94 paper.

what would work, but needs some rigorous measurements,
is to let each access-time influence which block you read next.
in this way, you can bring the turbulence, motor-interactions,
speed-correction irregularities, and the disk scheduler into
synergy, so as to amplify the noise from the rotational latency.
but in this case, the measurements will have a lot more structure,
and it'll be harder to separate to separate the noise from the signal.

						-don davis
						 openvision technologies
