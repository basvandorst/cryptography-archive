Path: msuinfo!netnews.upenn.edu!dsinc!spool.mu.edu!howland.reston.ans.net!swrinde!news.dell.com!tadpole.com!uunet!nwnexus!chinook!ken
From: ken@chinook.halcyon.com (Ken Pizzini)
Newsgroups: sci.crypt
Subject: Re: md5 as a one-way func
Date: 13 Jun 1994 21:14:28 GMT
Organization: Northwest Nexus Inc.
Lines: 31
Message-ID: <2tii7k$15j@nwfocus.wa.com>
References: <808_9406131216@rosebud.bbs.or.th>
NNTP-Posting-Host: chinook.halcyon.com

In article <808_9406131216@rosebud.bbs.or.th>,
john dehaven <john.dehaven@wov.com> wrote:
> Bi> environment I am considering using this in, I ]> am not constrained by
> Bi> the usual UNIXish limitations of a two-character ]> salt and a
> Bi> 13-character hash.)
> Bi> It's a decent strategy, if you're trying to design a modern version of
> Bi> the Unix password system, though you should include a better salt
> Bi> source than just the clock, since that's somewhat guessable -
> Bi> at minimum, include som semi-random source like a hash of the memory
> Bi> of your machine, or the output of ps or something.
>
>Often for things like seeds you want to hash them with something
>that is not so much "random" as it is hard-to-guess, in case
>someone tries to duplicate what you did later or off-site.  A
>useful thing to add might be a hash of (the low bits of) disk
>free space, which is something that changes in a hard-to-predict
>kind of way if you aren't actually *using* the computer, might
>be another thing to put in your selection of things to hash
>with--I would bet that even if you are using the computer you
>would have a hard time guessing that without some special
>software to find out for you.

As was mentioned in another incarnation of this thread -- why
bother making the seed unpredictable when you're going to be
placing it in cleartext in the (password) database anyway?

All the seed does is foil prestored dictionary/phrasebook
attacks, provided the seeds are not reused.  A millisecond
timestamp should be more than adequate for this purpose.

		--Ken Pizzini
