Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!yeshua.marcam.com!charnel.ecst.csuchico.edu!xmission!u.cc.utah.edu!chemistry.utah.edu!bryner
From: bryner@chemistry.utah.edu (Roger Bryner)
Newsgroups: sci.crypt
Subject: LEAF <16 bits of data? (was Re: The Clipper Checksum Algorithm
Date: Fri, 24 Jun 1994 02:43:18 GMT
Organization: University of Utah Chemistry Department
Lines: 17
Message-ID: <bryner.1085.772425798@chemistry.utah.edu>
References: <2u9uv7$5r5@lyra.csx.cam.ac.uk> <2ua9jm$src@news.umbc.edu>
NNTP-Posting-Host: chem-80.chem.utah.edu

In article <2ua9jm$src@news.umbc.edu> olson@umbc.edu (Bryan G. Olson; CMSC (G)) writes:
>
>No, you just didn't think through the consequences of not using the
>unencrypted key as a parameter.  Mat Blazes's fake LEAF is based on
>the fact that the checksum contains _only_ 16 bits of information on
>the session key.

Has anyone verified that the LEAF contains *EXACTLY* 16 bits of information 
about the session key? If not, there could be a mechanism in place to detect 
the repeated use of rogue LEAF's.  It would seem like a good verification 
could take a while, considering that fractional bits could be used.  In any 
event, the lower limit on the frequency of ignoring bad LEAFS is 1/2^16 so 
it can be done in on the order of 2^36 tries(5%).  This comes out to be , 
what, 20,000 ish hours at 1/msec(What is the actual rate, and should I have 
used a calculator:-)  Sounds like a nice screen saver:-)

Roger.
