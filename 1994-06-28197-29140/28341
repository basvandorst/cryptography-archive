Path: msuinfo!agate!darkstar.UCSC.EDU!news.hal.COM!olivea!spool.mu.edu!howland.reston.ans.net!europa.eng.gtefsd.com!MathWorks.Com!blanket.mitre.org!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Newsgroups: sci.crypt,talk.politics.crypto
Subject: Re: NYT new or obvious flaw in Clipper
Date: 3 Jun 94 11:13:47
Organization: The Mitre Corp., Bedford, MA.
Lines: 34
Message-ID: <EACHUS.94Jun3111347@spectre.mitre.org>
References: <2skudi$3vi@hebron.connected.com> <PERRY.94Jun2162746@snark.imsi.com>
	<2slpc5$nbj@news.umbc.edu>
NNTP-Posting-Host: spectre.mitre.org
In-reply-to: olson@umbc.edu's message of 2 Jun 1994 23:18:29 GMT
Xref: msuinfo sci.crypt:28341 talk.politics.crypto:5846

In article <2slpc5$nbj@news.umbc.edu> olson@umbc.edu (Bryan G. Olson; CMSC (G)) writes:

  > Can the 2^16 space be searched off-line ?  Can I pre-compute a list of
  > forged LEAFs and use one of them at call set-up ?  If so, do I need
  > two chips to do this?  It may not be possible since I have to use a
  > negotiated session key, which none of the pre-computed LEAFs would
  > match.

   More interesting is, can you generate equivalence classes of LEAFs,
then use these groups to either find an algorithm that will generate
or select a "good" bogus LEAF quickly?  My intuition says that it will
be on the order of cracking the family key, and may be equivalent.
But the existance of the equivalence classes may make that effort
easier, since it makes it partitionable...  Interesting problem.

  > If it can't be done truly off line, can it be done semi-off line ?
  > Here I would be connecting to Alice's computer/phone and we'd
  > negotiate a session key.  I would then compute faked LEAFs and feed
  > them to a second clipper chip of mine, until that chip accepts one.

  You would be better off with about 100 chips so the delay was
seconds, not minutes...

  > Will Alice's chip accept this one too ?

   Yes.

--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
