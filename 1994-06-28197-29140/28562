Newsgroups: sci.crypt
Path: msuinfo!agate!usenet.ins.cwru.edu!howland.reston.ans.net!usc!nic-nac.CSU.net!charnel.ecst.csuchico.edu!olivea!sgigate.sgi.com!fido.asd.sgi.com!sgi!wdl1!io!koontzd
From: koontzd@io.lrmsc.loral.com (David Koontz )
Subject: Re: NYT new or obvious flaw in Clipper
Message-ID: <1994Jun9.191222.20382@wdl.loral.com>
Sender: news@wdl.loral.com
Organization: Loral Rolm Computer Systems
References: <strnlghtCquDr6.AC2@netcom.com> <PERRY.94Jun6101216@snark.imsi.com> <2t5h62$40e@vixen.cso.uiuc.edu>
Date: Thu, 9 Jun 1994 19:12:22 GMT
Lines: 71

>From: David Mitchell <mitchell@ncsa.uiuc.edu>
>
>In article <PERRY.94Jun3093510@snark.imsi.com> Perry E. Metzger,
>perry@snark.imsi.com writes:
>> Sort of. The checksums are dependant on the IV and the session key.
>> Thus, you have to be at the point where you know the session key for
>> your session to forge a LEAF. If your protocol would permit you to
>> precompute your session keys you can precompute forged LEAFs at the
>> same time.
>
>If this is accurate, than any 'agency' which might try to break into
>a clipper session without going to the escrow agency may be able
>to get 16 bits of information about the session key.  It was my
>thinking that the way to 'spoof' the LEAF was just to generate a
>valid one with some random session key, and then store it.  Later
>on, to secure a transmission, the real LEAF field would be replaced
>with the older, saved one.  It was my belief that the receiving Clipper
>chip would not be able to catch the spoof because it would not have
>your escrow-key, and so could not look at the session key.  The only
>way around this would be to put session-key information in the LEAF
>field _unprotected_ by the escrow-key, but this sounds like such a
>gross and flagrant security hole that NSA wouldn't allow it.  If the
>checksum is really dependant (in part) on the session key, it seems
>that NSA may be spreading the security of Clipper a bit thin in an
>attempt to cover all of the bases.

From 'Protocol Failure in the Escrowed Encryption Standard' by Matt Blaze
of Bell Labs, June 3, 1994, preliminary:

"All bits in generated LEAFs change when the IV or session key changes,
however, suggesting that the checksum is a function of the current session
key and IV."

Using a Solvable Checksum Algorithm
-----------------------------------
Having 16 bits (15?) of information on the session key, (all other checksum 
contributors known and the checksum method known) doesn't shorten the search 
enough.  A brute force key search machine would require clipper chips 
optimized for key search (superscalar and faster than those commercially 
available) to traverse  2^^64 keys in a 2^^80 space.  Search hardware using 
commercially available clipper chips would be many times more expensive and 
several thousand times slower than an equivalent key space DES key search 
machine - assuming one could amass that many chips.  Breaking Clipper keys 
is the sole realm of government, at least until the cryptographic
algorithm is known.

Generating and  transmitting a new IV implies a new LEAF/IV assembly being
sent. Using the same session key accross multiple restarts might prove to 
reduce the search space further depending on the checksum generator, the
key search space being the intersection of the domains of the possible 
values generating the separate syndromes.

Using Skipjack to Generate the Checksum
---------------------------------------
If the cryptographic algorithm were used to generate the checksum, with only
a portion of the resulting output block included as the 16 bit checksum,
the problem may not get solved.  When loading a key into the Clipper chip
an additional three bytes are included, the cryptographic check word (CCW).
The Clipper chip varies from its CCEP brethren by allowing the correct CCW
to be read out, allowing the key to be reloaded with the correct CCW.

Supposedly the CCW is generated by the cryptographic algorithm using the
loaded key with a fixed plaintext.  Three bytes of the output block are
used for the CCW.  If the same mechanism is used for the LEAF with the
IV replacing the fixed plaintext, the session key used as the encryption
key and two bytes being used from output block for the checksum, you 
require solving for the entire session key out of its entire domain.

Both scenarios fit the observed behavior. the latter has much better
security.

