Path: msuinfo!agate!howland.reston.ans.net!gatech!news-feed-1.peachnet.edu!news.duke.edu!zombie.ncsc.mil!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Re: RSAREF Random Number Generator
Date: Tue, 07 Jun 94 20:05:11 CDT
Organization: University of Missouri, Columbia
Lines: 27
Message-ID: <16FCE11A79S86.C445585@mizzou1.missouri.edu>
References: <01HD6Y4Y848I9EDXOV@delphi.com> <mpjCqzEsC.688@netcom.com>
NNTP-Posting-Host: mizzou1.missouri.edu

In article <mpjCqzEsC.688@netcom.com>
mpj@netcom.com (Michael Paul Johnson) writes:
 
>This is one of the standard ways to use a block cipher (or hash function)
>as a pseudorandom number generator.  It looks like a counter mode stream
>cipher that is as strong as MD5.  If the user-provided random data has at
>least 128 bits of entroy to it, then I am not aware of any problems with
>this approach.  This has the advantage that knowing one block of output
>doesn't help you find any other block of output, unless you can invert the
>MD5 function. It is also faster than using a more complex function than
>simple incrementing to change the state of the pseudorandom number
>generator.
 
   If you believe that MD5 never leaks any information about its inputs,
then you can use this kind of PRNG as a stream cipher.  It will be very
fast and convenient.  However, many weaknesses that wouldn't have much
effect on MD5 as a message-digest function might become important in using
this kind of a cipher.
 
   It's probably better to only use it for generating keys and such,
since that doesn't expose the output stream to an attacker.  It would
be better still to use the bbs generator to generate keys....
 
> | \/ |o|        | Michael Paul Johnson  Colorado Catacombs BBS 303-772-1062 |
> |    | | /  _   | mpj@csn.org aka mpj@netcom.com m.p.johnson@ieee.org       |
 
   --John Kelsey, c445585@mizzou1.missouri.edu
