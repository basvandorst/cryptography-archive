Path: msuinfo!agate!ihnp4.ucsd.edu!swrinde!pipex!sunic!trane.uninett.no!eunet.no!nuug!EU.net!uunet!senior.nectec.or.th!rosebud!com!wov!john.dehaven
From: john.dehaven@wov.com (john dehaven)
Date: 12 Jun 94 11:34:01 +0700
Newsgroups: sci.crypt
Subject: md5 as a one-way func
Message-ID: <808_9406131216@rosebud.bbs.or.th>
X-Mail-Agent: GIGO+ sn 80 at rosebud vsn 0.99 pl1
Organization: Pubnet - Bangkok, Thailand
Lines: 24

 Bi> environment I am considering using this in, I ]> am not constrained by
 Bi> the usual UNIXish limitations of a two-character ]> salt and a
 Bi> 13-character hash.)
 Bi> It's a decent strategy, if you're trying to design a modern version of
 Bi> the Unix password system, though you should include a better salt
 Bi> source than just the clock, since that's somewhat guessable -
 Bi> at minimum, include som semi-random source like a hash of the memory
 Bi> of your machine, or the output of ps or something.

Often for things like seeds you want to hash them with something
that is not so much "random" as it is hard-to-guess, in case
someone tries to duplicate what you did later or off-site.  A
useful thing to add might be a hash of (the low bits of) disk
free space, which is something that changes in a hard-to-predict
kind of way if you aren't actually *using* the computer, might
be another thing to put in your selection of things to hash
with--I would bet that even if you are using the computer you
would have a hard time guessing that without some special
software to find out for you.


--
Email: john.dehaven@wov.com
Another War on Virus subscriber - my views are my own.
