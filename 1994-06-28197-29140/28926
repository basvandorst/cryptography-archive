Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!news.umbc.edu!olson
From: olson@umbc.edu (Bryan G. Olson; CMSC (G))
Newsgroups: sci.crypt
Subject: Re: The Clipper Checksum Algorithm
Date: 22 Jun 1994 21:14:30 GMT
Organization: University of Maryland, Baltimore County
Lines: 35
Message-ID: <2ua9jm$src@news.umbc.edu>
References: <2u9uv7$5r5@lyra.csx.cam.ac.uk>
NNTP-Posting-Host: umbc7.umbc.edu
X-Newsreader: TIN [version 1.2 PL2]

Mark.Lomas@cl.cam.ac.uk wrote:
[...]

: Imagine a Clipper chip that has just received a LEAF and wishes to
: check it - we know that a Clipper chip will only operate if it is
: satisfied with the checksum value that it contains.

: The checksum could depend upon the session key itself, it could
: depend upon the encrypted session key within the LEAF, or it could
: depend upon both.

Alice's clipper chip doesn't know the unit key of Bob's chip, so
her chip can't tell if the given encrypted session key is really the
current key.  If the checksum is only on the encrypted key, Bob could
send Alice a leaf legal for some other key, and Alice's chip would
have to accept it.

[...]
: Thus, unless the authorities responsible wanted to make routine
: monitoring more difficult for themselves we should assume that the
: unencrypted session key is not one of the parameters of the checksum
: algorithm and therefore the checksum does not leak anywhere near 16
: bits of the session key.

No, you just didn't think through the consequences of not using the
unencrypted key as a parameter.  Mat Blazes's fake LEAF is based on
the fact that the checksum contains _only_ 16 bits of information on
the session key.

: I'm not suggesting that Clipper is secure but it is not as insecure
: as some people seem to believe.

I'd like to see the evidence for that.

--Bryan
