Path: msuinfo!agate!ames!hookup!grinch.tor.hookup.net!user
From: grinch@hookup.net (Reginald Braithwaite-Lee)
Newsgroups: sci.crypt
Subject: Re: random numbers from disk drive rotation latency -- help?
Followup-To: sci.crypt
Date: Tue, 07 Jun 1994 14:25:16 -0500
Organization: Who-ville
Lines: 39
Message-ID: <grinch-070694142516@grinch.tor.hookup.net>
References: <199406071512.QAA19140@an-teallach.com>
NNTP-Posting-Host: grinch.tor.hookup.net

In article <199406071512.QAA19140@an-teallach.com>, gtoal@an-teallach.com
(Graham Toal) wrote:

> 	What I'm looking for is an algorithm that will convert these semi-random
> 	numbers into a good random bit stream.  Any suggestions?
> 
> Take each value you get and exor *all* the bits in it to produce a
> single bit of data - otherwise you might hit regularities caused
> by the period of your clock.  Then take a suitably large block
> of data and whiten it by passing it through a cryptographically
> clean hash function, such as MD5.  Of course, this only works
> relatively well if your original source of data is close to a
> 50:50 distribution of 1's and 0's.  If it's biased either way,
> the whitened output (although more balanced in 0's and 1's) will
> be easier to generate from simulated input.  Of course, if the
> blocksize of your whitening function is large enough and the entropy
> of the inputs also large enough (say O(128) 1's and O(512-128) 0's
> feeding into a 512 bit mixing function) then it would still take
> a 128-bit loop or worse to generate plausible inputs, so you'd
> be relatively secure.

Is it necessary to perform the XOR first? If your data set is sufficiently
large to XOR and then 'whiten' it, couldn't you just feed the original,
linear data to your cryptographically secure hash function? (Bruce Schneier
describes this as 'distilling entropy').
> 
> (Sorry if that's garbled but I don't have a lot of free time just now
> for a clearer explanation... - back to work...)

Sigh. Me too.

-- 
Reginald Braithwaite-Lee
grinch@hookup.net

*** enquire about nCrypt, the strong cryptography app for Newton ***

Public Key Fingerprint: D8 B8 C1 D0 DD 56 20 B4  06 A2 81 83 87 E8 8B 64
(Send message with subject "HELP" to pgp-public-keys@pgp.ox.ac.uk)
