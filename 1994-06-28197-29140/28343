Path: msuinfo!caen!batcomputer!ghost.dsi.unimi.it!univ-lyon1.fr!jussieu.fr!math.ohio-state.edu!cs.utexas.edu!not-for-mail
From: boucher@csl.sri.com (Peter K. Boucher)
Newsgroups: sci.crypt
Subject: Re: Matt Blaze's Clipper attack -- details
Date: 3 Jun 1994 16:11:52 -0500
Organization: UTexas Mail-to-News Gateway
Lines: 22
Sender: nobody@cs.utexas.edu
Message-ID: <9406032111.AA27702@redwood.csl.sri.com>
NNTP-Posting-Host: news.cs.utexas.edu

In article <Cqs9y1.By9@ulysses.homer.att.com>,
Steven Bellovin <smb@research.att.com> wrote:
>The more interesting attack on key escrow is a rogue implementation
>that can interoperate with a conforming one.  The checksum is only 16
>bits; it's possible to brute-force it.  That is, generate random
>128-bit strings, and see if your own Tessera card will accept it as a
>valid LEAF.  Again, recall that it knows only the unencrypted key and
>the IV.  On average, you'll find a hit in 2^15 tries; at 50 ms per try,
>that's 28 minutes.  You can speed this up by running in parallel with
>multiple Tessera cards.

If there's really only 16 bits of checksum, why not make 64K random
LEAFs (one for each checksum) off-line, and save them?  Then it's
just a matter of grabbing the right one for your current checksum,
rather than making a new one each time at run-time.

-- 
Peter K. Boucher
--
DISCLAIMER:  I am solely responsible for the contents of this message,
	     which should not be misconstrued as being in any way related
	     to the opinions of my employer.
