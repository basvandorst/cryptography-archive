Path: msuinfo!agate!howland.reston.ans.net!gatech!swrinde!pipex!sunic!EU.net!uunet!mnemosyne.cs.du.edu!nyx10.cs.du.edu!not-for-mail
From: colin@nyx10.cs.du.edu (Colin Plumb)
Newsgroups: sci.crypt
Subject: Re: Odds of different messages having same MD5 signature?
Date: 13 Jun 1994 02:26:17 -0600
Organization: /usr/lib/news/organi[sz]ation
Lines: 33
Message-ID: <2th579$4fp@nyx10.cs.du.edu>
References: <2tgq66$p1n@pdq.coe.montana.edu>

In article <2tgq66$p1n@pdq.coe.montana.edu>,
Jaye Mathisen <osyjm@cs.montana.edu> wrote:
>
>
>I have a bunch of images that I want to use MD5-style algorithm to generate
>"signatures" for the images, and be sure that modified/corrupted/different
>images generate different signatures.

That's what cryptographic hashes are designed for.  Of coursr, you could
also use a big fat CRC and do the same thing a lot faster, but that's
not proof against deliberate attempts to spoof the signature.

>Given 2 equal length files, what are the odds that 2 images will generate
>the same MD5 signature? Is it possible that single-byte changes will 
>generate the same MD5 signature?  Is this kind of thing calculable?

2^-128.  For N files, the odds are n*(n-1)*2^-129 that there will be
a collision.  (Actually, it's 1-(1-2^-128)^(n*(n-1)/2), but for
reasonable values of n, the first equation is close enough.)

>Are there other good hash functions or CRC algorithms that will generate
>an adequately safe checksum?    Perhaps a longer hash?  I need this to be
>more reliable than the CRC mechanism that's used in Zmodem for transferring
>files.

If you dobn't have to worry about a deliberate attempt to modify the
files yet keep the same signature, a CRC will do fine.  Even if you
do have intelligent attacks, if the CRC polynomial is secret (i.e.
irreducible, with x as a primitive element, and random), it's secure.

But if not, you need a cryptographic hash of some sort.
-- 
	-Colin
