Path: msuinfo!uwm.edu!math.ohio-state.edu!cyber2.cyberstore.ca!vanbc.wimsey.com!nemesis.wimsey.com!Stu
From: Stu@nemesis.wimsey.com (Stuart Smith)
Newsgroups: sci.crypt
Subject: Re: Secure data transmission
Message-ID: <770770736Stu.stu@nemesis.wimsey.com>
Sender: stu@nemesis.wimsey.com
Date: Sat, 04 Jun 94 14:58:56 pst
References: <jgarnerCqp165.2Ez@netcom.com> <770591618Stu.stu@nemesis.wimsey.com> <jgarnerCqv5yx.5yL@netcom.com>
Organization: The Puzzle Palace
X-Newsreader: TRN for OS/2
Lines: 68

In article <jgarnerCqv5yx.5yL@netcom.com> jgarner@netcom.com (Jason Garner) writes:
>Stuart Smith (Stu@nemesis.wimsey.com) wrote:
>: In article <jgarnerCqp165.2Ez@netcom.com> jgarner@netcom.com (Jason Garner) writes:
>: >57.6 Kbps?  I'd post the question to alt.security.pgp but
>: >someone would probably attack the question and tell me that this
>: >has already been discussed in a FAQ (without telling me where that FAQ is 
>: >to be found, of course).
>
>: If you suspect that the answer to your querie is in the FAQ, why
>: do you post here of all places instead of alt.security.pgp?  The
>: FAQ's can be found at rtfm.mit.edu or wait a couple of weeks
>: they're posted pretty regularly in sci.crypt, alt.security.pgp
>: and news.answers.  Failing that I'll gladly mail you them.  Good
>: luck!
>Becasue it's not in any FAQ.  I just added this so that people wouldn't

Sorry then - your post seems to me to imply that you've been
told to get the FAQ, but since no one told you where they were,
you hadn't bothered.  Unfortunatly, lots of people do this.

>be tempted to tell me to go elsewhere or post responses with no 
>substance aimed at telling me what to do rather than answering the
>question.  Your idea is good.  Unfortunately, I'm not a programmer.  I
>was just hoping to interest someone out here in writing something
>that seems not so difficult, transparent to the user and possibly
>secure all point to point data communications (within the limits
>of public key encryption speeds) from eavesdroppers.  People have
>e-mailed me telling me that it's difficult to capture ('tap')
>data sent by modem.  These people obviously havn't tried ATC0, then
>ATD or ATA (depending on which side you want to see) on an 'extension'
>phone.

Someone probably could/should write something like that, but
as I said, PGP would likely not adapt very well.  It's designed
as a command-line program and it may very well encrypt at
57.6kps on a fast enough machine, but there's no way to
guarantee it.  What *would* make sense, is to use the
*algorithms* that pgp uses, namely RSA and IDEA and build your
own on the fly encryption driver.

If you can suggest an MS-DOS term program that uses terminal
emulation drivers of some sort, and includes some documentation
about how they work and how to write new ones, I'll glady have a
look.  One idea might be to hack ANSI.SYS.  Since it's usually
loaded all the time, perhaps a special key-combo would toggle
encryption on or off.  This might be difficult - ANSI.SYS or any
similar driver only sees the data coming in and going to the
screen.  This is what would be decrypted, but the outgoing data
would have to be encrypted and a terminal emulator would never
see it.  Under MS-DOA of course, we could just hack it to
intercept the data to the com port, but that's not terribly
elegant.

I have a feeling you'd have to write a whole terminal program to
support encryption.  As a consolation, you could make it support
drop in modules so that you could use any algorithm you please,
in any fashion.  If PGP were hacked to use named pipes, perhaps
under OS/2 or Unix, you could pipe keyboard input to pgp and
then to the modem and data from the modem into pgp and out to
the screen.  Again.. not too elegant a solution.

Any ideas?

--
 Baba baby mama shaggy papa baba bro baba rock a shaggy baba sister
shag saggy hey doc baba baby shaggy hey baba can you dig it baba baba
        E7 E3 90 7E 16 2E F3 45   *   28 24 2E C6 03 02 37 5C 
   Stuart Smith                           <stu@nemesis.wimsey.com>
