Path: msuinfo!agate!spool.mu.edu!howland.reston.ans.net!gatech!news-feed-1.peachnet.edu!ukma!mont!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: Clipper (EES) key leakage and the LEAF's checksum field.
Date: Fri, 17 Jun 94 19:33:20 CDT
Organization: University of Missouri, Columbia
Lines: 50
Message-ID: <16FD811300S86.C445585@mizzou1.missouri.edu>
NNTP-Posting-Host: mizzou1.missouri.edu

 
   LEAKING THE KEY FROM THE CHECKSUM
 
   In Matt Blaze's paper (available from research.att.com by anonymous
FTP), the LEAF checksum is described as being based on the session key,
the IV, and some other data.  It looks to me like, if the IV and the
other data is known to an attacker that also knows how the checksum
works, and knows the family key, this leaks 16 bits of key information.
If the checksum is based on at least 16 bits that no attacker could
get access to, then the question becomes "does the checksum leak
information about specific input bits?"  If each bit in the checksum
were a parity bit for 10 bits of input, then there would be 8 bits of
key information leaked....
 
   This comes down to a question of trust:  If the designers of the
LEAF checksum wanted to leak session key information, then the checksum
leaks session key information.  If they didn't, then it probably
doesn't leak the information.  (This is analogous to the situation
with the Skipjack algorithm--if they wanted to make a weak algorithm,
they could easily have done it--maybe it's FEAL-4X with some fixed
bit permutations thrown in.  If they wanted to design a strong cipher,
it's probably reasonably strong, though of course NSA's designers are
probably capable of putting out an occasional lemon.)
 
SUBLIMINAL CHANNEL
 
   A maker of LEAF-spoofing gear of the kind Matt described, who was
untrustworthy, could also leak information about the key in his selection
of the spoofed-LEAF.  Each bit of information leaked would double the
amount of time spent searching for acceptable spoofed LEAFs.  This
uses the same general scheme as other subliminal channels.  It's
probably not practical for this kind of system to leak very much
information.  If the LEAF-spoofing gear has a key-generation scheme
that uses a large secret seed (maybe a pair of 512-bit primes
used for a BBS generator), it could leak one bit per encryption
at a relatively small cost, and allow a wiretapper with the secret
data necessary to receive the subliminal channel to wind up knowing
all your session keys.  However, someone so inclined could just
cook their session-key generation scheme.
 
   A maker of LEAF-spoofing gear could also intentionally leak a bit or
two of your unit id, if he had access to it, with each encryption.
Other identifying information could be leaked as well.
 
   Both of these attacks reenforce what we already should know--don't
accept hardware or software crypto implementations from people that
you don't trust, for the same reason you don't hand blank checks or
your credit cards to people you don't trust.
 
   --John Kelsey, c445585@mizzou1.missouri.edu
