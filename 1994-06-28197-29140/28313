Path: msuinfo!agate!sprite.berkeley.edu!shirriff
From: shirriff@sprite.berkeley.edu (Ken Shirriff)
Newsgroups: sci.crypt
Subject: Re: Matt Blaze's Clipper attack -- details
Date: 3 Jun 1994 00:55:23 GMT
Organization: University of California, Berkeley
Lines: 24
Message-ID: <2slv1r$nfk@agate.berkeley.edu>
References: <Cqs9y1.By9@ulysses.homer.att.com>
NNTP-Posting-Host: hijack.berkeley.edu

In article <Cqs9y1.By9@ulysses.homer.att.com>,
Steven Bellovin <smb@research.att.com> wrote:
>The more interesting attack on key escrow is a rogue implementation
>that can interoperate with a conforming one.  The checksum is only 16
>bits; it's possible to brute-force it.  That is, generate random
>128-bit strings, and see if your own Tessera card will accept it as a
>valid LEAF.  Again, recall that it knows only the unencrypted key and
>the IV.  On average, you'll find a hit in 2^15 tries; at 50 ms per try,
>that's 28 minutes.  You can speed this up by running in parallel with
>multiple Tessera cards.

So it looks like the attack I suggested in January does work:

In article <2i98tj$dng@agate.berkeley.edu> I wrote:
|a) The LEF has a 23 bit authentication pattern, presumably to indicate the
|LEF is valid.  So if one generated and tested 2^23 (4 million) random LEFs,
|one would find a LEF that establishes secure communication but didn't
|contain the session key or serial number, right?  Thus, it seems like anyone
|could generate an untappable fake LEF with a reasonable amount of effort.

(Apparently the authentication pattern is only 16 bits, and not the 23 I
read elsewhere, which makes it even easier than I suspected.)

Ken Shirriff				shirriff@cs.Berkeley.EDU
