MIRACL is a highly efficient and portable Multiprecision Integer and Rational 
Arithmetic C library. Full source code is provided. Its main area of 
application is in Public Key Cryptography. Many example programs are provide. 

The MIRACL library can be used freely for Academic or non-commercial use.
Commercial Users must register ($80.00). Those who register will receive
a printed Manual, and the latest version of the software.

The address for correspondence is:- 

Shamus Software Ltd,
94 Shangan road
Ballymun
Dublin 9
Ireland

Contact: Michael Scott
Phone 353 7045537
FAX   353 7045442
EMAIL 75001969@vax1.dcu.ie


IMPORTANT! See UPDATE.DOC for latest changes

The distribution ZIP file contains the following files

  
  FIRST.DOC    -    This file
  MANUAL.TEX   -    The Manual in TEX format
  PROBLEMS.DOC -    Known problems with MIRACL
  UPDATE.DOC   -    MIRACL Update History

  MRMULDV.ANY  -    Contains assembly lang versions of muldiv,muldvm & muldvd
  MR*.C        -    MIRACL library source files
  MERSENNE.C   -    Mersenne primes
  FACT.C       -    Factorials
  BRUTE.C      -    Brute-force factorisation
  BRENT.C      -    Brent-pollard factoring
  HAIL.C       -    Hailstone numbers
  PALIN.C      -    Palindromic numbers
  GENKEY.C     -    Generate Public and Private keys
  ENCODE.C     -    Encode using RSA method
  DECODE.C     -    Decode using RSA method
  ENCIPH.C     -    Encipher using Probabalistic method
  DECIPH.C     -    Decipher using Probabalistic method
  KEYIDS.C     -    Generates .KST files for use with PC-SCRAMBLER
  HILBERT.C    -    Solve special system of equations
  SAMPLE.C     -    Example of Flash arithmetic
  ROOTS.C      -    Square roots
  POLLARD.C    -    Pollard's factoring method
  WILLIAMS.C   -    William's factoring method
  LENSTRA.C    -    Lenstra's factoring method
  QSIEVE.C     -    The Quadratic Sieve
  RATCALC.C    -    Rational Scientific Calculator
  FACTOR.C     -    Factoring Program source
  KANGAROO.C   -    Pollards Lambda method for discrete logs
  INDEX.C      -    Pollards rho method for discrete logs
  GENPRIME.C   -    Generates prime for above
  MONTY.C      -    Experimental Implementation of Montgomery's Method
                    for modular multiplication
  DSSGEN.C     -    Digital Signature Standard generator program
  DSSIGN.C     -    Digital Signature Standard signature program
  DSSVER.C     -    Digital Signature Standard verification program
  BRICK.C      -    Brickell's method for fast exponentiation
  SHS.C        -    Secure Hashing Standard
  BIG.CPP      -    Big function implementations
  NUMBER.CPP   -    ZZn function implementations
  CRT.CPP      -    Crt function implementations
  FLASH.CPP    -    Flash function implementations   
  FACT.CPP     -    Example C++ source (uses BIG.H)
  HAIL.CPP     -            "                "
  PALIN.CPP    -            "                "
  BRUTE.CPP    -            "                "
  MERSENNE.CPP -            "                "
  QSIEVE.CPP   -            "                " 
  GENKEY.CPP   -            "                " 
  ENCODE.CPP   -            "                " 
  DECODE.CPP   -            "                "
  ENCIPH.CPP   -            "                " 
  DECIPH.CPP   -            "                "
  DSSGEN.CPP   -            "                "
  DSSIGN.CPP   -            "                "
  DSSVER.CPP   -            "                "  
  KANGAROO.CPP -            "                "
  INDEX.CPP    -            "                "
  GENPRIME.CPP -            "                "
  BRICK.CPP    -            "                "
  POLLARD.CPP  -    Example C++ source (uses NUMBER.H)
  WILLIAMS.CPP -            "                "  
  LENSTRA.CPP  -            "                "  
  BRENT.CPP    -            "                "
  SAMPLE.CPP   -    Example C++ source (uses FLASH.H)
  ROOTS.CPP    -            "                "
  HILBERT.CPP  -            "                "

  Note how readable the C++ versions of the example programs look.

  The fluid nature of the C++ standard makes it difficult to write
  portable code. Hopefully this will settle down soon.

  MIRDEF.H16   -    Standard hardware specific header file for 16-bit computer
  MIRDEF.H32   -    Header file for full 32-bit Computer
  MIRDEF.HPC   -    Header file for pseudo-32 bit computer
  MIRDEF.HAF   -    Header file for 16 bit use of 32 bit computer
  MIRACL.H     -    Main MIRACL header
  BIG.H        -    C++ header for 'big' numbers
  FLASH.H      -    C++ header for 'flash' numbers
  NUMBER.H     -    C++ header for 'big' numbers mod n
  CRT.H        -    C++ header for chinese remainder thereom

  One problem with C++ is non-standard names for standard headers. Zortech  
  calls its headers <*.hpp>, Glockenspiel calls them <*.hxx>, and Borland calls 
  them <*.h> (sigh). The example programs use the Borland naming convention.

  Note that MIRACL uses the new version of streams

  *DOIT.BAT    -    Batch files for constructing libraries and sample progs.
  BCS.LIB      -    Borland C++ V3.1 small model MIRACL library
  MSS.LIB      -    Microsoft C V7.0 small model MIRACL library
  WC.LIB       -    Watcom C/386 V7.0 flat model MIRACL library
  BCS386.LIB   -    Borland C++ V3.1 small model 80386 only version
                    (for use with mirdef.hpc)
 
  If using Microsoft C Version 7.0 or Borland C++ V3.1 then copy MSS.LIB or 
  BCS.LIB to MIRACL.LIB, copy MIRDEF.H16 to MIRDEF.H, and you're in business 
  right away. If using Watcom C/386 Version 7.0+, copy WC.LIB to MIRACL.LIB
  and copy MIRDEF.H32 to MIRDEF.H

  Older versions of these compilers may also work with these precompiled 
  libraries (try it and see). If using another compiler then you must execute 
  an appropriate xxDOIT.BAT file to create the MIRACL library. 

  FACT.EXE     -    Factorial program
  ROOTS.EXE    -    Roots program
  KEYIDS.EXE   -    Program to generate identities (for PC-SCRAMBLER)
  ENCIPH.EXE   -    Enciphering program
  DECIPH.EXE   -    Deciphering program
  PUBLIC.KEY   -    Public key for use by enciphering program
  PRIVATE.KEY  -    Private key for use by deciphering program

  Some SHAREWARE and FREEWARE IBM PC specific applications. 
  
  READ.DOC     -    Read this first
  RATCALC.EXE  -    Rational Calculator
  FACTOR.EXE   -    General purpose Factoring Program
  FACT386.EXE  -    80386 version of above

  SCRAMBLE.DOC -    Documentation for PC-Scrambler program
  SCRAMBLE.MSG -    Example greetings message
  SCRAMBLE.KST -    Sample Key settings file
  DEMO.KST     -    Another Key settings file 
  SCRAMBLE.C   -    PC-Scrambler program main module
  DATALINK.C   -    Datalink Communications module
  TALK.C       -    Transmit/receive chat and/or files
  STRINGS.C    -    Transmit/Receive a string
  RANDOM.C     -    Secure random number generator
  CRYPTO.C     -    Encryption module
  CLAMP.C      -    Utility to clamp Key settings file
  UNCLAMP.C    -    Utility to unclamp above
  SCRAMB.BAT   -    Batch file used to create scramble.exe
  SCRAMBLE.EXE -    The PC-SCRAMBLER program

