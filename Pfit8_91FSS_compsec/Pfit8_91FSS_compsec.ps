%!PS-Adobe-3.0
%%Title: (Pfit8_91F\311)
%%Creator: (Microsoft Word: LaserWriter 8.0 8.0)
%%CreationDate: (10:35  Freitag, 30. September 1994)
%%For: (schunter)
%%Pages: 10
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Helvetica-BoldOblique Helvetica-Oblique Helvetica-Bold Symbol
%%DocumentNeededFonts: Times-Roman Times-Bold Times-Italic Helvetica-BoldOblique Helvetica-Oblique Helvetica-Bold Symbol
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -12 -13 830 582
%ADO_ImageableArea: 0 0 818 568
%%EndComments
/md 192 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageSize A4

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
        setpagedevice
        2 dict
    dup /PageSize [595 842] put
    dup /ImagingBBox null put
    setpagedevice
%%EndFeature
}featurecleanup
(schunter)setjob
/pT[1 0 0 -1 13 830]def/mT[1 0 0 -1 13 830]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
%%IncludeFont: Helvetica-BoldOblique
%%IncludeFont: Helvetica-Oblique
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Symbol
/f0_1/Times-Roman :mre
/f0_14 f0_1 14 scf
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f2_1/Times-Bold :mre
/f2_18 f2_1 18 scf
/f2_14 f2_1 14 scf
/f2_12 f2_1 12 scf
/f4_1/Times-Italic :mre
/f4_12 f4_1 12 scf
/f4_10 f4_1 10 scf
/f4_9 f4_1 9 scf
/f5_1/Helvetica :mre
/f5_18 f5_1 18 scf
/f5_12 f5_1 12 scf
/f5_10 f5_1 10 scf
/f8_1/Helvetica-BoldOblique :mre
/f8_12 f8_1 12 scf
/f10_1/Helvetica-Oblique :mre
/f10_12 f10_1 12 scf
/f11_1/Helvetica-Bold :mre
/f11_10 f11_1 10 scf
/f12_1/Symbol :bsr
240/apple pd
:esr /f12_12 f12_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(schunter; page: 1 of 10)setjob
%%EndPageSetup
gS 0 0 568 818 rC
57 34 :M
f0_10 sf
-.009(Proc. Compsec '91, 8th world conference on computer security, audit and control, Elsevier, Oxford, 125-134.)A
105 189 :M
f2_18 sf
-.457(Fail-stop Signatures; Principles and Applications)A
235 241 :M
f0_14 sf
.519 .052(Birgit Pfitzmann)J
231 255 :M
f0_12 sf
-.104(Institut f\237r Informatik)A
228 268 :M
-.125(Universit\212t Hildesheim)A
177 281 :M
-.025(Samelsonplatz 1, W-3200 Hildesheim, FRG)A
259 338 :M
f2_14 sf
-.583(Abstract)A
57 363 :M
f0_12 sf
.144 .014(Digital signatures are necessary wherever legal certainty is to be achieved for digital message)J
57 378 :M
.218 .022(exchange. However, the unforgeability of conventional digital signatures is necessarily based)J
57 393 :M
.065 .006(on complexity theoretic assumptions. That is, even the most secure schemes can be broken by)J
57 408 :M
-.012(an adversary with unexpected computing abilities, e.g., one who can factor unexpectedly large)A
57 423 :M
.097(numbers.)A
85 438 :M
-.006(Fail-stop signatures improve upon this: They are as unforgeable as the best conventional)A
57 453 :M
.136 .014(signatures; but if someone nevertheless succeeds in forging a signature, this can be proved by)J
57 468 :M
1.398 .14(the supposed signer. Thus one can relieve him from the responsibility for this signature.)J
57 483 :M
-.095(Additionally, one should stop the scheme or increase the security parameters.)A
85 498 :M
1.17 .117(As applications, mainly digital payment systems are discussed. The social and legal)J
57 513 :M
.338 .034(advantages of such a scheme are discussed, and a sketch of the construction of practical fail-)J
57 528 :M
.639 .064(stop signatures for this case is given \(roughly three times the expenditure of a conventional)J
57 543 :M
-.056(signature scheme\).)A
248 601 :M
f2_14 sf
-.153(1. Overview)A
57 626 :M
f0_12 sf
.126 .013(To avoid misunderstanding, Section 2 contains a short explanation of important terms in their)J
57 641 :M
-.045(most common usage. Section 3 explains digital signatures in general. In Section 4, the problem)A
57 656 :M
.851 .085(with conventional digital signatures \(i.e., those which are not fail-stop\) is shown. Fail-stop)J
57 671 :M
1.148 .115(signatures are introduced, and their general advantages discussed, in Section 5. Important)J
57 686 :M
-.022(applications are treated in Section 6, and general remarks on practicability are made in Section)A
57 701 :M
.007 .001(7. Section 8 is an optional section with an overview over the construction of concrete fail-stop)J
57 716 :M
-.077(signatures. The paper ends with a recommendation for the near future \(Section 9\).)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(schunter; page: 2 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(126)S
251 93 :M
f2_14 sf
-.304(2. Classification)A
70 118 :M
f0_12 sf
1.251 .125(Most cryptographic systems for data protection and security belong to exactly one of the)J
70 133 :M
-.062(following two classes:)A
70 154 :M
(\245)S
92 154 :M
f4_12 sf
.185 .018(Secrecy systems)J
f0_12 sf
.115 .011(, i.e., systems to keep message contents secret.)J
70 169 :M
(\245)S
92 169 :M
f4_12 sf
-.022(Authentication systems)A
f0_12 sf
-.02(, i.e., systems to ensure the authenticity of message contents and of)A
92 184 :M
.555 .056(the sender's address.)J
70 205 :M
3.06 .306(\("Cryptosystem" often means any cryptographic system, sometimes secrecy system.)J
70 220 :M
.459 .046("Encryption scheme" normally means secrecy system, sometimes any cryptographic system.)J
70 235 :M
.379 .038(One should not be confused by the fact that basic functions like RSA and DES can serve for)J
70 250 :M
-.081(both secrecy and authentication: For the two cases, they must be employed in different ways.\))A
70 271 :M
-.085(Within each of the two classes, one distinguishes two types according to the key distribution:)A
70 292 :M
(\245)S
92 292 :M
f4_12 sf
.029(Symmetric)A
f0_12 sf
.095 .009( systems, where sender and recipient of a message must have the same \(secret\))J
92 307 :M
.225(key.)A
70 322 :M
(\245)S
92 322 :M
f4_12 sf
.152(Asymmetric)A
f0_12 sf
.497 .05( systems, where sender and recipient have different keys. One key is secret,)J
92 337 :M
-.082(the other one public.)A
215 374 :M
f2_14 sf
-.373(3. Digital Signature Schemes)A
70 399 :M
f0_12 sf
2.34 .234(Digital signature schemes, both conventional ones and fail-stop ones, are asymmetric)J
70 414 :M
-.09(authentication systems.)A
98 429 :M
-.031(Here it is the sender, called signer, who must keep his key )A
f4_12 sf
(S)S
f0_12 sf
-.031( secret. All other participants)A
70 444 :M
-.002(only have a public test key )A
f4_12 sf
(T)S
f0_12 sf
-.002(. The signer has generated )A
f4_12 sf
(T)S
f0_12 sf
( together with )S
f4_12 sf
(S)S
f0_12 sf
( and then published )S
f4_12 sf
(T)S
70 459 :M
f0_12 sf
.707 .071(\(for remarks on actual key distribution see Section 8\); one must not be able to sign with )J
f4_12 sf
.289(T)A
f0_12 sf
(.)S
70 474 :M
.618 .062(Everybody who receives a signed message, i.e., one which passes the test with the test key,)J
70 489 :M
-.065(knows that only the owner of the corresponding secret key could have produced this message.)A
70 510 :M
1.227 .123(Thus a digital signature can have the same effect for a digital messages as a handwritten)J
70 525 :M
.158 .016(signature ought to have for a normal message: It guarantees that the supposed sender really is)J
70 540 :M
.257 .026(the sender of exactly this message \(or has at least authorized it\). The recipient can also prove)J
70 555 :M
.99 .099(this to third parties, e.g., in the case of dispute, to a court: The third party also knows the)J
70 570 :M
-.061(public test key )A
f4_12 sf
-.089(T)A
f0_12 sf
-.066( and knows that only its owner can be the sender of the message.)A
98 585 :M
-.025(\(This is the difference to symmetric authentication systems, e.g., derived from DES \(see,)A
70 600 :M
1.446 .145(e.g., [4]\): There, sender and recipient have a common key, which they keep secret from)J
70 615 :M
1.466 .147(everybody else. Now each of the two can send authenticated messages to the other one.)J
70 630 :M
-.063(However, even if a court knew which key they are using, it would be unable to decide which of)A
70 645 :M
-.086(the two sent a particular message.\))A
98 660 :M
.408 .041(Also note that digital signatures must be highly dependent on the message contents, so)J
70 675 :M
-.063(that, if someone changes a bit of a signed message, the signature does not fit any more.)A
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(schunter; page: 3 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(127)S
159 93 :M
f2_14 sf
-.371(4. Problem with Conventional Digital Signatures)A
70 118 :M
f2_12 sf
-.387(Not Provably Secure)A
70 133 :M
f0_12 sf
-.05(The problem with conventional digital signature schemes such as RSA [12] and ElGamal [5] is)A
70 148 :M
-.054(that in a strict sense, they are not provably secure. With all currently known signature schemes,)A
70 163 :M
1.229 .123(one needs a "cryptographic assumption", e.g., the "factoring assumption" which says that)J
70 178 :M
.183 .018(factoring numbers whose prime factors are large is difficult. However, on principle, factoring)J
70 193 :M
-.03(numbers into primes can be done in a unique way. Thus the security only relies on the fact that)A
70 208 :M
.86 .086(a would-be forger has not enough time and no sufficiently good algorithm to carry out the)J
70 223 :M
-.102(factorization. The same holds for the "discrete logarithm assumption" of the ElGamal scheme.)A
98 238 :M
1.356 .136(In addition, with RSA and ElGamal, it is not even clear if they are secure on their)J
70 253 :M
-.049(respective assumption. In particular, the security of fast hash functions, which are often used to)A
70 268 :M
-.06(speed up signing, is even more doubtful than that of the basic schemes.)A
98 283 :M
.189 .019(However, there exists an improvement: The signature scheme GMR is at least provably)J
70 298 :M
-.031(secure on the factoring assumption [7, 6].)A
70 325 :M
f2_12 sf
-.385(Assessment of Cryptographic Assumptions)A
70 340 :M
f0_12 sf
2.596 .26(Of course, it is to be hoped that the cryptographic assumptions on which important)J
70 355 :M
.341 .034(conventional digital signature schemes rely are true. They are the more trustworthy the more)J
70 370 :M
.455 .046(intensively they have been examined, i.e., the longer scientists have tried in vain to find fast)J
70 385 :M
.132 .013(algorithms to break them. Especially the factoring assumption, but also the discrete logarithm)J
70 400 :M
.225 .023(assumption, is sufficiently interesting for mathematicians so that many studies take place. \(In)J
70 415 :M
-.019(this respect, cryptographic systems resemble violins: If they are still unbroken at all, the oldest)A
70 430 :M
.54 .054(ones are the best ones. But of course, in order to deal with increasing computing power and)J
70 445 :M
.425 .042(better breaking algorithms, one must increase the so-called security parameter often enough,)J
70 460 :M
.145 .014(e.g., the size of the numbers used which hopefully cannot be factored. For instance, a prudent)J
70 475 :M
.773 .077(choice of an RSA modulus would be at least 1000 bits long, and similar choices should be)J
70 490 :M
.166 .017(made for the discrete logarithm assumption in any group; see [9] for an outlook on some new)J
70 505 :M
-.062(or forthcoming algorithms.\))A
70 532 :M
f2_12 sf
-.351(Consequences in the Case of Forgery)A
70 547 :M
f0_12 sf
.392 .039(If a signature scheme is broken although one had reasons to hope it would not, the supposed)J
70 562 :M
.237 .024(signer of a message with a forged signature is defenceless: The forged digital signature looks)J
70 577 :M
-.035(exactly like an authentic one. If it is presented to a court, the court decides, still with the public)A
70 592 :M
.158 .016(test key )J
f4_12 sf
.077(T)A
f0_12 sf
.204 .02(, that the signature is valid. Thus the supposed signer will be held responsible. \(The)J
70 607 :M
1.536 .154(recipient of a signed message, however, is absolutely secure: If he has checked that the)J
70 622 :M
.318 .032(signature passes the test with the public test key, he knows that it will also do so in court, no)J
70 637 :M
-.109(matter if it is authentic or forged.\))A
70 658 :M
.856 .086(At least this is the technical view of what a court should do. A real court is not obliged to)J
70 673 :M
.079 .008(comply with this view. \(At least German courts are not obliged to acknowledge a handwritten)J
70 688 :M
-.019(signature either.\) It could believe the protestation by the supposed signer that the signature is a)A
70 703 :M
1.59 .159(forgery, the more so since the signer can adduce that the signature scheme relies on an)J
70 718 :M
-.06(unproven assumption, no matter how long it has been examined.)A
98 733 :M
-.076(However, if this were the case, recipients would not be secure at all any more: Even if the)A
70 748 :M
-.054(assumption is perfectly correct and no signature is ever forged, the real signers could now deny)A
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(schunter; page: 4 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(128)S
70 91 :M
f0_12 sf
.422 .042(their signatures in court, just like the supposed signer above. It is impossible for the court to)J
70 106 :M
.235 .024(distinguish the two cases. Hence, if recipients had to reckon with signatures being rejected in)J
70 121 :M
.15 .015(court, nobody would want to accept digital signatures from anybody whom they did not trust.)J
70 136 :M
-.02(But the possibility of protecting mutually suspicious senders and recipients, e.g., when signing)A
70 151 :M
1.329 .133(a contract of purchase, was just the main advantage of digital signatures over symmetric)J
70 166 :M
-.091(authentication systems \(besides the simpler key distribution\).)A
233 203 :M
f2_14 sf
-.37(5. Fail-stop Signatures)A
70 228 :M
f2_12 sf
-.475(Distinguishing Feature)A
70 243 :M
f0_12 sf
.274 .027(With fail-stop signatures, too, unforgeability relies on an assumption. In the concrete scheme)J
70 258 :M
.163 .016(sketched in Section 8, called hiding scheme, this is the factoring assumption. \(There exists an)J
70 273 :M
1.008 .101(alternative based on the discrete logarithm assumption.\) It has been proved that forgery is)J
70 288 :M
.908 .091(impossible on this assumption [11]. \(This was the property that only GMR had among the)J
70 303 :M
-.086(signature schemes mentioned above.\))A
98 318 :M
1.373 .137(The new feature of fail-stop signatures is: If a signature is forged nevertheless, the)J
70 333 :M
-.06(supposed signer can )A
f4_12 sf
-.065(prove)A
f0_12 sf
-.057( that it is a forgery. More precisely: He can prove that the underlying)A
70 348 :M
.952 .095(assumption has been broken, e.g., by showing the factors of a number which he could not)J
70 363 :M
-.033(have factored if the assumption were true. Thus one can relieve him from the responsibility for)A
70 378 :M
-.034(this signature. For details of how this is achieved, see Section 8.)A
70 405 :M
f2_12 sf
-.52(Error Probability versus Cryptographic Assumption)A
70 420 :M
f0_12 sf
.098 .01(It should be mentioned that the proof of forgery fails with a very small probability, which can)J
70 435 :M
-.003(be chosen arbitrarily, e.g., as 2)A
f0_10 sf
0 -4 rm
(\320100)S
0 4 rm
f0_12 sf
-.003(. However, this does not matter much:)A
98 450 :M
-.043(First, a small error probability is unavoidable with digital authentication systems \(includ-)A
70 465 :M
.523 .052(ing symmetric ones\): The signer only uses a finite number of bits of secret information. If a)J
70 480 :M
-.048(forger guesses them all correctly, nothing can be done. Thus one calls an authentication system)A
70 495 :M
-.107("unconditionally secure" if it has been proved that a forger)A
70 516 :M
(\245)S
92 516 :M
-.071(cannot forge better than by blind guessing, and)A
70 531 :M
(\245)S
92 531 :M
-.054(cannot check whether he has guessed correctly \(except by going to court or asking the true)A
92 546 :M
.098(signer\).)A
70 567 :M
-.066(In this sense, it is unconditionally secure that forgery of fail-stop signatures can be proved.)A
98 582 :M
-.088(\(A similar situation with handwritten signatures would be that a forger engages a horde of)A
70 597 :M
1.386 .139(monkeys to produce scribbles. He must select some of those as signatures, without even)J
70 612 :M
-.114(looking if they resemble the authentic signature.\))A
98 627 :M
.87 .087(Secondly, probabilities of other failures are larger, in particular the probability that a)J
70 642 :M
-.012(wrong signature is accepted due to a hardware fault, which has the same effect, and indeed the)A
70 657 :M
-.072(probabilities of most risks of daily life.)A
98 672 :M
-.001(The difference between a scheme with a small error probability and one that relies on an)A
70 687 :M
-.032(unproven assumption, like conventional digital signatures, is that with the latter it is not )A
f4_12 sf
-.056(known)A
70 702 :M
f0_12 sf
.602 .06(if the probability of forgery is so small; instead of engaging a horde of monkeys, the forger)J
70 717 :M
f4_12 sf
-.124(might)A
f0_12 sf
-.115( have constructed an automatic signing machine.)A
70 738 :M
.044 .004(One should also mention that the fail-stop feature does not help if the key is physically stolen.)J
70 753 :M
.027 .003(This, too, is unavoidable with all digital authentication systems: Once a forger has the signer's)J
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(schunter; page: 5 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(129)S
70 91 :M
f0_12 sf
1.095 .11(complete secret information, it is impossible to distinguish him from the signer by digital)J
70 106 :M
-.07(means. Thus this problem must still be dealt with by physical measures.)A
70 133 :M
f2_12 sf
-.555(Advantages)A
70 148 :M
f0_12 sf
-.035(With fail-stop signatures, a court can always decide if a signature is a forgery or not \(at least in)A
70 163 :M
-.095(the digital world\), in contrast to conventional digital signatures.)A
98 178 :M
-.066(Also, already after the first forgery, all the other participants in the system and the system)A
70 193 :M
.246 .025(operator \(if there is one, e.g., a bank using the signatures in a payment system\) know that the)J
70 208 :M
-.074(signature scheme has been broken. Hence one can stop it before much further damage arises, or)A
70 223 :M
-.043(at least increase the security parameter. This explains the name "fail-stop": In fault tolerance, it)A
70 238 :M
.39 .039(is used for systems which, in the case of failure, at least end up in a fixed state, e.g., railway)J
70 253 :M
-.042(signals which drop into the stop!-position when a wire breaks.)A
98 268 :M
1.204 .12(Of course, however nice it is to be able to recognize forgeries, it does not solve all)J
70 283 :M
.385 .038(problems: If the recipient of a forged signature is not the forger himself, he has relied on the)J
70 298 :M
.404 .04(signature. If the signature becomes invalid because it is recognized as a forgery, he will lose)J
70 313 :M
1.869 .187(something, depending on the application. However, if the damage is only financial, an)J
70 328 :M
2.246 .225(insurance might pay it: In contrast to conventional signatures, the insurance can now)J
70 343 :M
.605 .06(incontestably check if the case of damage has arisen, just like a court; and the damage only)J
70 358 :M
-.038(occurs if the assumption is broken.)A
199 395 :M
f2_14 sf
-.414(6. Application in Payment Systems)A
70 420 :M
f2_12 sf
.172(Use)A
70 435 :M
f0_12 sf
-.028(Digital payment systems might become the most important application for fail-stop signatures.)A
70 450 :M
-.023(More generally, the following holds for any system where a large organization like a bank or a)A
70 465 :M
-.066(PTT, wants to use digital signatures for message exchange with its clients.)A
98 480 :M
.631 .063(There, clients would use fail-stop signatures, the bank conventional digital signatures.)J
70 495 :M
2.069 .207(Then the clients are unconditionally secure, i.e., they need not trust the cryptographic)J
70 510 :M
.926 .093(assumption \(because they are signers of fail-stop signatures and recipients of conventional)J
70 525 :M
-.043(signatures, and in both roles one is unconditionally secure, as described\).)A
70 552 :M
f2_12 sf
-.514(Why Like This?)A
70 567 :M
f0_12 sf
-.09(Why doesn't one make the bank unconditionally secure instead?)A
98 582 :M
.314 .031(First, because the bank is the stronger partner: It can choose the conventional signature)J
70 597 :M
.436 .044(scheme and the security parameter and thus provide for its own security. Also, it can inform)J
70 612 :M
1.503 .15(itself about how trustworthy the cryptographic assumption is, whereas many clients will)J
70 627 :M
-.104(already be discouraged by the name of a factoring or discrete logarithm assumption.)A
98 642 :M
.067 .007(Secondly, the bank doesn't even need a proof of forgery if its own signature is forged: It)J
70 657 :M
-.053(is the system operator, thus it can stop the system by itself.)A
98 672 :M
.796 .08(Thirdly, the bank might even have an advantage over a digital payment system using)J
70 687 :M
1.117 .112(conventional digital signatures only \(besides the possibility of advertising with the higher)J
70 702 :M
-.015(security for clients\): The fact that forgeries can be incontestably recognized might increase the)A
70 717 :M
-.063(legal acceptance of the system, i.e., in the more likely case that the cryptographic assumption is)A
70 732 :M
f4_12 sf
(not)S
f0_12 sf
-.007( broken, the bank might be more secure that the clients' signatures are indeed recognized in)A
70 747 :M
.069(court.)A
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(schunter; page: 6 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(130)S
235 93 :M
f2_14 sf
-.384(7. Usable in Practice?)A
70 118 :M
f0_12 sf
-.016(Fail-stop signatures have not been implemented yet. Also, they are not the kind of scheme that)A
70 133 :M
.735 .074(anybody would buy, e.g., to make their local networks more secure, but they are meant for)J
70 148 :M
.371 .037(systems of legal relevance and high security requirements such as payment systems. For this)J
70 163 :M
1.608 .161(particular case, the theoretical development is so far advanced that one can consider an)J
70 178 :M
.769 .077(implementation. Using fail-stop signatures as described in Section 6, and with the concrete)J
70 193 :M
-.006(scheme sketched in Section 8, the expenditure \(time, storage, and communication\) is not more)A
70 208 :M
.267 .027(than three times that of a system where the clients, too, would use the conventional signature)J
70 223 :M
-.063(scheme chosen by the bank, even if that is RSA with a fast hash function.)A
106 260 :M
f2_14 sf
-.359(8. Overview over the Construction of Concrete Fail-stop Signatures)A
70 285 :M
f2_12 sf
-.4(Basic Idea for the Construction of Fail-stop Signatures)A
1 G
162 311 268 186 rC
75 144 201.5 410 @j
0 G
74 143 201.5 410 @f
1 G
78 170 389 411 @j
0 G
77 169 389 411 @f
.938 G
47 48 389.5 412 @j
.5 G
46 47 389.5 412 @f
180 409 17 11 rC
gS
.791 .788 scale
237.952 525.12 :T
-237.952 -525.12 :T
228.952 529.12 :M
0 G
f8_12 sf
(M)S
gR
gR
gS 165 324 73 11 rC
gS
.791 .788 scale
253.978 415.997 :T
-253.978 -415.997 :T
209.978 419.997 :M
f5_12 sf
(Message space)S
gR
gR
gS 353 312 76 11 rC
gS
.791 .788 scale
493.52 403.039 :T
-493.52 -403.039 :T
446.52 406.039 :M
f5_12 sf
(Signature space)S
gR
gR
gS 383 405 7 14 rC
gS
.791 .788 scale
487.733 522.851 :T
-487.733 -522.851 :T
485.733 527.851 :M
f5_18 sf
(\245)S
gR
gR
gS 193 407 6 14 rC
gS
.791 .788 scale
248.396 524.389 :T
-248.396 -524.389 :T
245.396 530.389 :M
f5_18 sf
(\245)S
gR
gR
.5 G
gS 162 311 268 186 rC
0 G
202 410 :M
217.997 405.994 229.496 403.327 236.5 402 :C
243.496 400.661 247.663 400 249 400 :C
250.33 400 254.329 399.327 261 398 :C
267.663 396.661 275.662 395.827 285 395.5 :C
294.329 395.161 305.995 395 320 395 :C
333.995 395 344.995 395.327 353 396 :C
360.995 396.661 368.661 398.994 376 403 :C
stroke
np 381 406 :M
370 404 :L
371 401 :L
372 398 :L
381 406 :L
eofill
371 402 -1 1 378 404 1 371 401 @a
-90 0 186 92 201.5 462.5 @n
180 270 165 103 382 462 @n
np 294 469 :M
291 458 :L
294 458 :L
296 458 :L
294 469 :L
eofill
-1 -1 295 467 1 1 294 458 @b
np 299 469 :M
296 458 :L
299 458 :L
301 458 :L
299 469 :L
eofill
-1 -1 300 467 1 1 299 458 @b
255 380 75 11 rC
gS
.791 .788 scale
369.822 488.323 :T
-369.822 -488.323 :T
323.822 492.323 :M
f5_12 sf
(Signing with )S
392.128 492.323 :M
f10_12 sf
-.239(S)A
f5_12 sf
( )S
gR
gR
gS 258 416 57 11 rC
gS
.791 .788 scale
361.617 535.002 :T
-361.617 -535.002 :T
327.617 538.002 :M
0 G
f5_12 sf
-.037(Test with )A
379.479 538.002 :M
f10_12 sf
(T)S
gR
gR
gS 270 472 60 11 rC
gS
.791 .788 scale
378.531 605.059 :T
-378.531 -605.059 :T
341.531 609.059 :M
0 G
f5_12 sf
("Signature ok")S
gR
gR
gS 162 311 268 186 rC
180 270 188 139 390.5 458 @n
180 270 170 43 388.5 458 @n
0 G
np 300 469 :M
298 458 :L
300 458 :L
304 458 :L
300 469 :L
eofill
-1 -1 301 467 1 1 300 458 @b
389 407 23 11 rC
gS
.791 .788 scale
506.323 522.582 :T
-506.323 -522.582 :T
493.323 526.582 :M
f8_12 sf
-.334(Sig)A
gR
gR
gS 13 12 568 818 rC
70 520 :M
0 G
f11_10 sf
.653 .065(Figure 1)J
155 520 :M
f5_10 sf
.83 .083(Basic idea for the construction of fail-stop signatures)J
70 561 :M
f0_12 sf
.927 .093(Like with most conventional signature schemes, the signer, using his secret key )J
f4_12 sf
.289(S)A
f0_12 sf
1.089 .109(, obtains)J
70 576 :M
-.074(exactly one signature )A
f4_12 sf
-.08(Sig)A
f0_12 sf
-.077( for each message )A
f4_12 sf
-.156(M)A
f0_12 sf
-.069(; and if one applies the test with )A
f4_12 sf
-.104(T)A
f0_12 sf
-.066( to the pair of )A
f4_12 sf
(M)S
70 591 :M
f0_12 sf
.143 .014(and )J
f4_12 sf
.051(Sig)A
f0_12 sf
.147 .015(, the result is "ok".)J
98 606 :M
.103 .01(The new idea is that, apart from )J
f4_12 sf
.035(Sig)A
f0_12 sf
.096 .01(, there is a set of other values \(the grey circle in Fig.)J
70 621 :M
.137 .014(1\) which pass the same test and are therefore acceptable as signatures on )J
f4_12 sf
.079(M)A
f0_12 sf
.186 .019(. The construction)J
70 636 :M
.137 .014(guarantees: If the cryptographic assumption is true, nobody except for the signer can find any)J
70 651 :M
.518 .052(acceptable signature, and the signer just this single one. \(In particular, the grey circle is still)J
70 666 :M
-.083(small in comparison with the whole signature space.\))A
98 681 :M
.638 .064(Now, if a forger breaks the assumption, he may be able to compute the grey circle by)J
70 696 :M
.206 .021(inverting the test function, but he cannot find out which of the values in there is the authentic)J
70 711 :M
(signature )S
f4_12 sf
(Sig)S
f0_12 sf
.016 .002(. \(For this to be true, two more conditions must be fulfilled: A forger might try to)J
70 726 :M
.665 .067(find out )J
f4_12 sf
.285(S)A
f0_12 sf
.657 .066( first. Thus there must also be a set of)J
0 -4 rm
.129 .013( )J
0 4 rm
.841 .084(other possible secret keys which fit )J
f4_12 sf
.317(T)A
f0_12 sf
.791 .079(, and)J
70 741 :M
-.072(these yield exactly the other acceptable signatures. Also, other signed messages must not reveal)A
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(schunter; page: 7 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(131)S
70 91 :M
f0_12 sf
-.033(information about the new signature.\) A forger must therefore guess one out of all these values)A
70 106 :M
-.085(correctly in order to use the authentic signature for his forgery.)A
98 121 :M
.441 .044(Hence, if one is willing to tolerate an error probability of, say, 2)J
f0_10 sf
0 -4 rm
.135(\320100)A
0 4 rm
f0_12 sf
.504 .05(, one must choose)J
70 136 :M
-.081(the size of the grey circle as 2)A
f0_10 sf
0 -4 rm
-.091(100)A
0 4 rm
f0_12 sf
(.)S
98 151 :M
.081 .008(If the forger guesses wrong, the signer can present his authentic signature and show that)J
70 166 :M
.453 .045(it looks different. Since even the signer can only compute one signature if the cryptographic)J
70 181 :M
.073 .007(assumption is true, the fact that there are now two different signatures on the same message is)J
70 196 :M
.295 .029(proof that the assumption has been broken. In the scheme sketched in the following sections,)J
70 211 :M
.89 .089(the signer can also use the two signatures to compute the factorization of a number whose)J
70 226 :M
.84 .084(factors he did not know before. Thus the connection with the factoring assumption is even)J
70 241 :M
.157 .016(more obvious.)J
70 268 :M
f2_12 sf
-.428(Frame Construction for Payment Systems: 3-Phase Protocol)A
70 283 :M
f0_12 sf
.673 .067(The problem with current concrete fail-stop signatures in the general case is that they grow)J
70 298 :M
.235 .024(quickly with the length of the message. However, especially for payment systems where fail-)J
70 313 :M
.628 .063(stop signatures are to be used as in Section 6, the following frame protocol ensures that the)J
70 328 :M
-.016(clients with their fail-stop signatures only sign 1-bit messages \(leaving most of the work to the)A
70 343 :M
-.099(bank with its more efficient conventional signatures\). This makes the system practical.)A
98 358 :M
(When a client )S
f4_12 sf
(C)S
f0_12 sf
( wants to give the bank his )S
f4_12 sf
(i)S
f0_12 sf
.005 0(-th order, e.g., a remittance, this is done in 3)J
70 373 :M
-.053(phases:)A
70 394 :M
1(1.)A
92 394 :M
f4_12 sf
-.078(Instruction)A
f0_12 sf
-.072(: The client tells the bank his )A
f4_12 sf
-.055(i)A
f0_12 sf
-.073(-th order, e.g., "Remit 17 \243 to client )A
f4_12 sf
-.142(D)A
f0_12 sf
-.129(".)A
70 409 :M
1(2.)A
92 409 :M
f4_12 sf
.738(Confirmation)A
f0_12 sf
2.466 .247(: The bank confirms the instruction with a signed message \(in the)J
92 424 :M
-.023(conventional signature scheme\), e.g., "Client )A
f4_12 sf
(C)S
f0_12 sf
('s )S
f4_12 sf
(i)S
f0_12 sf
-.022(-th order is: Remit 17 \243 to )A
f4_12 sf
-.028(D.)A
f0_12 sf
(")S
70 439 :M
1(3.)A
92 439 :M
f4_12 sf
.083(Ok)A
f0_12 sf
.204 .02(: If the confirmation is correct, the client signs one single bit, which means "ok", with)J
92 454 :M
-.055(his )A
f4_12 sf
(i)S
f0_12 sf
-.059(-th fail-stop signature.)A
70 475 :M
.355 .035(About Phase 3, one should note that current fail-stop signatures are automatically numbered.)J
70 490 :M
-.093(Phase 1 may be augmented by some weak form of authentication.)A
98 505 :M
.577 .058(If there is a dispute about if the bank has carried out the )J
f4_12 sf
.135(i)A
f0_12 sf
.705 .071(-th order wrong, a court can)J
70 520 :M
.118 .012(decide as follows: First the bank must present the client's ok, which allowed the bank to carry)J
70 535 :M
.853 .085(out the )J
f4_12 sf
.221(i)A
f0_12 sf
1.042 .104(-th order at all. The client is given the opportunity to prove that this is a forgery.)J
70 550 :M
2.412 .241(Otherwise, he must present the signed confirmation of the bank. The content of this)J
70 565 :M
-.093(confirmation is regarded as the correct order.)A
98 580 :M
-.017(As promised, the clients are unconditionally secure: Their security only depends on their)A
70 595 :M
.946 .095(fail-stop signatures and that they store the correct confirmation. The bank is secure on the)J
70 610 :M
.537 .054(cryptographic assumption, which it could choose itself: In order to cheat the bank, someone)J
70 625 :M
-.054(must either forge the bank's confirmation or present a proof of forgery for a fail-stop signature.)A
70 646 :M
.311 .031(More generally, any organization can use this 3-phase protocol to exchange signed messages)J
70 661 :M
-.075(with its clients. The limitation is that a client of several organizations needs a different key with)A
70 676 :M
-.066(each one \(so that it is clear for whom an "ok" was\). Thus individuals should only be clients of a)A
70 691 :M
-.066(limited number of organizations. With payment systems, this should be no problem.)A
98 706 :M
.964 .096(One can also extend the protocol to a 5-phase protocol \(using the organization as an)J
70 721 :M
.733 .073(intermediary\) where clients can exchange signed messages so that both are unconditionally)J
70 736 :M
.236 .024(secure, and the organization does not see the message contents. This is particularly useful for)J
70 751 :M
-.097(untraceable payment systems.)A
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(schunter; page: 8 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(132)S
70 91 :M
f2_12 sf
-.417(Simple Fail-stop Signatures: Hiding Scheme for "Ok"-Messages)A
70 106 :M
f0_12 sf
.73 .073(The hiding scheme is based on a so-called )J
f4_12 sf
1.365 .137(bundling function)J
f0_12 sf
.118 .012( )J
f4_12 sf
.26(g)A
f0_12 sf
.755 .075(. This is a one-way function)J
70 121 :M
.311 .031(\(i.e., )J
f4_12 sf
.129(g)A
f0_12 sf
.431 .043( can be computed efficiently, but on the cryptographic assumption, its inverse cannot\))J
70 136 :M
-.121(with two additional properties:)A
70 157 :M
.337(A.)A
92 157 :M
-.095(In each case, )A
f4_12 sf
-.123(g)A
f0_12 sf
-.101( maps a certain number of values \(2)A
f0_10 sf
0 -4 rm
-.103(100)A
0 4 rm
f0_12 sf
-.103( in the example\) to the same image.)A
70 172 :M
.996(B.)A
92 172 :M
.752 .075(However, on the cryptographic assumption it is impossible to find two values with the)J
92 187 :M
-.097(same image.)A
70 208 :M
-.035(If the client wanted to sign a bit "ok" just once, one would use a bundling functions as follows:)A
70 223 :M
.592 .059(\(Remember that in the 3-phase protocol, one need not even distinguish bits "0" and "1".\) In)J
70 238 :M
-.005(advance, the client chooses an arbitrary value )A
f4_12 sf
(Sig)S
f0_12 sf
-.005( as the signature and, at the same time, as the)A
70 253 :M
.124 .012(secret key )J
f4_12 sf
(S)S
f0_12 sf
.122 .012(. He publishes the image )J
f4_12 sf
.05(T)A
f0_12 sf
.042 .004( = )J
f4_12 sf
(g)S
f0_12 sf
(\()S
f4_12 sf
.038(Sig)A
f0_12 sf
.115 .012(\) as his public key. Later, when he gives his ok)J
70 268 :M
.157 .016(by revealing )J
f4_12 sf
.042(Sig)A
f0_12 sf
.122 .012(, everybody can test it )J
f4_12 sf
(g)S
f0_12 sf
(\()S
f4_12 sf
.042(Sig)A
f0_12 sf
.058 .006(\) = )J
f4_12 sf
.055(T)A
f0_12 sf
.153 .015(. This ensures the properties depicted in Fig.)J
70 283 :M
-.02(1: As long as the cryptographic assumption holds, nobody can forge a signature because of the)A
70 298 :M
.495 .05(one-way property of )J
f4_12 sf
.147(g)A
f0_12 sf
.432 .043(; and because of Property B, the client knows just the single signature)J
70 313 :M
f4_12 sf
.024(Sig)A
f0_12 sf
.084 .008(. And even if the assumption has been broken, Property A ensures that a forger must guess)J
70 328 :M
f4_12 sf
-.019(Sig)A
f0_12 sf
-.019( among the 2)A
f0_10 sf
0 -4 rm
-.018(100)A
0 4 rm
f0_12 sf
-.018( preimages of )A
f4_12 sf
(T)S
f0_12 sf
(.)S
98 343 :M
.179 .018(If this idea is used in the 3-phase protocol, each time a new key )J
f4_12 sf
.08(T)A
f4_9 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.115 .012( for the )J
f4_12 sf
(i)S
f0_12 sf
.229 .023(-th order can)J
70 358 :M
.291 .029(be exchanged within the previous order: The client chooses )J
f4_12 sf
.077(Sig)A
f4_9 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
.204 .02( before the \()J
f4_12 sf
.05(i)A
f0_12 sf
.334 .033(\3201\)-th order. He)J
70 373 :M
-.042(tells the bank )A
f4_12 sf
-.063(T)A
f4_9 sf
0 3 rm
(i)S
0 -3 rm
f0_12 sf
-.043(, and gets it confirmed by the bank, as a part of his \()A
f4_12 sf
(i)S
f0_12 sf
-.048(\3201\)-th order.)A
70 400 :M
f2_12 sf
-.448(Concrete Bundling Functions)A
70 415 :M
f0_12 sf
-.013(One obtains concrete bundling functions for the factoring assumption and the error probability)A
70 430 :M
(2)S
f0_10 sf
0 -4 rm
.014(\320100)A
0 4 rm
f0_12 sf
.049 .005( as follows: The bank chooses two large prime numbers )J
f4_12 sf
(p)S
f0_12 sf
(, )S
f4_12 sf
(q)S
f0_12 sf
.029 .003( with )J
f4_12 sf
(p)S
f0_12 sf
( )S
f12_12 sf
(\272)S
f0_12 sf
( 3, )S
f4_12 sf
(q)S
f0_12 sf
( )S
f12_12 sf
(\272)S
f0_12 sf
.034 .003( 7 mod 8 and)J
70 445 :M
.198 .02(publishes )J
f4_12 sf
(n)S
f0_12 sf
.045 .005( = )J
f4_12 sf
(p)S
f0_12 sf
(\245)S
f4_12 sf
(q)S
f0_12 sf
(.)S
98 460 :M
.13 .013(The domain consists of pairs \()J
f4_12 sf
(z)S
f0_12 sf
(, )S
f4_12 sf
(d)S
f0_12 sf
.105 .01(\), where )J
f4_12 sf
(z)S
f0_12 sf
.056 .006( < 2)J
f0_10 sf
0 -4 rm
.036(100)A
0 4 rm
f0_12 sf
.089 .009( is an integer and )J
f4_12 sf
(d)S
f0_12 sf
.14 .014( a number modulo)J
70 475 :M
f4_12 sf
-.104(n )A
f0_12 sf
-.114(with two additional properties:)A
70 496 :M
(\(1\))S
92 496 :M
f4_12 sf
.145(d)A
f0_12 sf
.134 .013( < )J
f4_12 sf
.145(n)A
f0_12 sf
.149(/2.)A
70 511 :M
(\(2\))S
92 511 :M
.234 .023(The Jacobi symbol of )J
f4_12 sf
.08(d)A
f0_12 sf
.172 .017( is 1 \(see, e.g., [8]\).)J
70 532 :M
-.074(An auxiliary function )A
f4_12 sf
-.066(g')A
0 3 rm
-.092(n)A
0 -3 rm
f0_12 sf
-.076( is defined by)A
242 549 :M
f4_12 sf
.164(g')A
0 3 rm
.23(n)A
0 -3 rm
f0_12 sf
.153(\()A
f4_12 sf
.179(z)A
f0_12 sf
.191 .019(, )J
f4_12 sf
.23(d)A
f0_12 sf
.349 .035(\) = 4)J
f4_10 sf
0 -4 rm
.149(z)A
0 4 rm
f0_12 sf
.17 .017( \245 )J
f4_12 sf
.23(d)A
f0_10 sf
0 -4 rm
.191(2)A
0 4 rm
f0_9 sf
0 -7 rm
.172(100)A
0 7 rm
f0_12 sf
.419 .042( mod )J
f4_12 sf
.23(n)A
f0_12 sf
(.)S
70 572 :M
.309 .031(If )J
f4_12 sf
.157(g')A
0 3 rm
.219(n)A
0 -3 rm
f0_12 sf
.146(\()A
f4_12 sf
.171(z)A
f0_12 sf
.183 .018(, )J
f4_12 sf
.219(d)A
f0_12 sf
.255 .026(\) < )J
f4_12 sf
.219(n)A
f0_12 sf
.492 .049(/2, then )J
f4_12 sf
.219(g)A
0 3 rm
.219(n)A
0 -3 rm
f0_12 sf
.146(\()A
f4_12 sf
.171(z)A
f0_12 sf
.183 .018(, )J
f4_12 sf
.219(d)A
f0_12 sf
.255 .026(\) = )J
f4_12 sf
.157(g')A
0 3 rm
.219(n)A
0 -3 rm
f0_12 sf
.146(\()A
f4_12 sf
.171(z)A
f0_12 sf
.183 .018(, )J
f4_12 sf
.219(d)A
f0_12 sf
.475 .047(\), else \320)J
f4_12 sf
.157(g')A
0 3 rm
.219(n)A
0 -3 rm
f0_12 sf
.146(\()A
f4_12 sf
.171(z)A
f0_12 sf
.183 .018(, )J
f4_12 sf
.219(d)A
f0_12 sf
.441 .044(\) mod )J
f4_12 sf
.219(n)A
f0_12 sf
(.)S
98 587 :M
-.044(For a more detailed description see [11], for formal proofs [1] and [10].)A
70 608 :M
-.063(\(Specialists may have noticed that the bank, who knows )A
f4_12 sf
-.077(p)A
f0_12 sf
-.06( and )A
f4_12 sf
-.077(q)A
f0_12 sf
-.058(, can invert the function )A
f4_12 sf
-.077(g)A
f0_12 sf
-.07(. This)A
70 623 :M
-.06(doesn't matter, although the bank could thereby forge the clients' signatures, because the clients)A
70 638 :M
.427 .043(could prove the forgery. Thus, according to the 3-phase protocol, the bank would only cheat)J
70 653 :M
-.05(itself and stop its own payment system.\))A
98 668 :M
.814 .081(Similarly efficient bundling functions exist for the discrete logarithm assumption [2].)J
70 683 :M
-.043(\(Additionally, in this case no way is known how the bank could forge the clients' signatures.\))A
98 698 :M
.846 .085(The efficiency depends on which conventional signature scheme the bank trusts. The)J
70 713 :M
.215 .021(function )J
f4_12 sf
.041(g')A
f0_12 sf
.176 .018( itself can be evaluated with 100 multiplications, i.e. faster than an RSA operation.)J
70 728 :M
.423 .042(Thus, even if the bank uses RSA with a fast hash function, the 3-phase protocol is only by a)J
70 743 :M
-.059(factor of about 3 less efficient than if the clients, too, would use RSA.)A
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(schunter; page: 9 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(133)S
70 91 :M
f2_12 sf
-.488(Key Distribution)A
70 106 :M
f0_12 sf
.912 .091(Key distribution for a digital signature scheme is not trivial, but easier than for symmetric)J
70 121 :M
1.586 .159(systems. In practice, one usually assumes a trusted key distribution center. However, in)J
70 136 :M
-.053(systems of legal relevance, it is better not to have any single instance whom citizens must trust.)A
70 151 :M
.409 .041(\(For instance, in constitutional states with separation of powers, even the decisions of courts)J
70 166 :M
-.125(are usually publicly verifiable and can be appealed against.\))A
98 181 :M
.711 .071(Luckily, this situation can be improved upon without much overhead: The signer still)J
70 196 :M
(gives his )S
f4_12 sf
(T)S
f0_12 sf
.02 .002( to a center \(note that everybody should definitely generate their own keys\), but the)J
70 211 :M
-.024(center must sign which )A
f4_12 sf
(T)S
f0_12 sf
-.022( it is to distribute. For this, the center can already use its conventional)A
70 226 :M
.065 .006(digital signature; the bank's public key, as the starting point of all digital authenticity, must be)J
70 241 :M
-.037(distributed reliably outside the network anyway. Everybody who asks the center for a certain )A
f4_12 sf
(T)S
70 256 :M
f0_12 sf
.477 .048(also demands a signed response. In the case of a dispute about a public key, all parties must)J
70 271 :M
.691 .069(show the center's signature on their version. If two different versions have been signed, the)J
70 286 :M
.192 .019(center is held responsible. Again, the clients are unconditionally secure, and the center on the)J
70 301 :M
-.054(cryptographic assumption.)A
240 338 :M
f2_14 sf
-.435(9. Recommendation)A
70 363 :M
f0_12 sf
-.044(This description that more security can be achieved than with conventional digital signatures is)A
70 378 :M
.79 .079(not meant to give the impression that those were useless. At the current state of the photo-)J
70 393 :M
-.087(copying technique, they are probably even much more secure than handwritten signatures.)A
98 408 :M
1.315 .131(Of course, one should continue to develop more secure signature schemes. \(Even a)J
70 423 :M
-.091(scheme very similar to signatures where everybody is unconditionally secure from forgeries has)A
70 438 :M
.038 .004(already been proposed; unfortunately, it is not practical at present [3].\) However, the planning)J
70 453 :M
2.443 .244(stage of applications of the size of payment systems is long, as experience with the)J
70 468 :M
.459 .046(development of applications of RSA shows. Thus one should better quickly start using, e.g.,)J
70 483 :M
1.006 .101(RSA-based applications, which are almost ready, than to be completely insecure or to use)J
70 498 :M
.045 .005(symmetric authentication only. However, one should remember to choose security parameters)J
70 513 :M
-.012(prudently, see Section 4.)A
241 550 :M
f2_14 sf
-.39(Acknowledgements)A
70 575 :M
f0_12 sf
-.028(It is a pleasure to thank Manfred B\232ttger, David Chaum, Andreas Ort, Andreas Pfitzmann, and)A
70 590 :M
-.136(Michael Waidner for many helpful comments.)A
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(schunter; page: 10 of 10)setjob
%%EndPageSetup
-13 -12 :T
gS 13 12 568 818 rC
70 46 :M
f0_10 sf
.155 .015(B. Pfitzmann: Fail-stop Signatures; Principles and Applications)J
536 46 :M
(134)S
265 113 :M
f2_14 sf
-.364(References)A
70 140 :M
f0_12 sf
1(1.)A
92 140 :M
1.044 .104(Gerrit Bleumer, Birgit Pfitzmann, Michael Waidner: A remark on a signature scheme)J
92 153 :M
.521 .052(where forgery can be proved; )J
f4_12 sf
.821 .082(Eurocrypt '90)J
f0_12 sf
.658 .066(, LNCS 473, Springer-Verlag, Berlin 1991,)J
92 166 :M
.144(441-445.)A
70 182 :M
1(2.)A
92 182 :M
-.05(David Chaum, Eug\217ne van Heijst, Birgit Pfitzmann: Cryptographically Strong Undeniable)A
92 195 :M
1.161 .116(Signatures, Unconditionally Secure for the Signer; Interner Bericht 1/91, Fakult\212t f\237r)J
92 208 :M
-.019(Informatik, Universit\212t Karlsruhe 1991 \(Revision appears at Crypto '91\).)A
70 224 :M
1(3.)A
92 224 :M
-.017(David Chaum, Sandra Roijakkers: Unconditionally Secure Digital Signatures; )A
f4_12 sf
-.017(Crypto '90)A
f0_12 sf
(,)S
92 237 :M
.009 .001(Santa Barbara 1990, Abstracts, 209-217.)J
70 253 :M
1(4.)A
92 253 :M
.881 .088(Donald Davies, Wyn Price: )J
f4_12 sf
.963 .096(Security for Computer Networks, An Introduction to Data)J
92 266 :M
.117 .012(Security in Teleprocessing and Electronic Funds Transfer)J
f0_12 sf
.082 .008(; \(2nd ed.\) John Wiley & Sons,)J
92 279 :M
.209 .021(New York 1989.)J
70 295 :M
1(5.)A
92 295 :M
.307 .031(Taher ElGamal: A Public Key Cryptosystem and a Signature Scheme Based on Discrete)J
92 308 :M
-.082(Logarithms; )A
f4_12 sf
-.084(IEEE Transactions on Information Theory)A
f0_12 sf
-.084( 31/4 \(1985\) 469-472.)A
70 324 :M
1(6.)A
92 324 :M
4.265 .426(Dirk Fox, Birgit Pfitzmann: Effiziente Software-Implementierung des GMR-)J
92 337 :M
1.583 .158(Signatursystems; )J
f4_12 sf
1.687 .169(Verl\212\247liche Informationssysteme \(VIS'91\))J
f0_12 sf
1.824 .182(, Informatik-Fachberichte)J
92 350 :M
.087 .009(271, Springer-Verlag, Heidelberg 1991, 329-345.)J
70 366 :M
1(7.)A
92 366 :M
1.377 .138(Shafi Goldwasser, Silvio Micali, Ronald Rivest: A Digital Signature Scheme Secure)J
92 379 :M
-.029(Against Adaptive Chosen-Message Attacks; )A
f4_12 sf
-.03(SIAM J. Comput.)A
f0_12 sf
-.029( 17/2 \(1988\) 281-308.)A
70 395 :M
1(8.)A
92 395 :M
.957 .096(Evangelos Kranakis: )J
f4_12 sf
1.108 .111(Primality and Cryptography)J
f0_12 sf
.895 .09(; Wiley-Teubner Series in Computer)J
92 408 :M
.195 .02(Science, B. G. Teubner, Stuttgart 1986.)J
70 424 :M
1(9.)A
92 424 :M
-.015(Brian A. LaMacchia, Andrew M. Odlyzko: Computation of Discrete Logarithms in Prime)A
92 437 :M
-.015(Fields; )A
f4_12 sf
-.017(Designs, Codes, and Cryptography)A
f0_12 sf
-.017( 1/1 \(1991\) 47-62.)A
70 453 :M
.5(10.)A
92 453 :M
1.249 .125(Birgit Pfitzmann, Michael Waidner: Formal Aspects of Fail-stop Signatures; Interner)J
92 466 :M
-.044(Bericht 22/90, Fakult\212t f\237r Informatik, Universit\212t Karlsruhe 1990.)A
70 482 :M
.5(11.)A
92 482 :M
-.051(Birgit Pfitzmann, Michael Waidner: Fail-stop Signatures and their Application; )A
f4_12 sf
-.066(Securicom)A
92 495 :M
.022 .002(91; 9th Worldwide Congress on Computer and Communications Security and Protection)J
f0_12 sf
(,)S
92 508 :M
.517 .052(Paris 1991, 145-160.)J
70 524 :M
.5(12.)A
92 524 :M
-.074(Ronald Rivest, Adi Shamir, Leonard Adleman: A Method for Obtaining Digital Signatures)A
92 537 :M
-.021(and Public-Key Cryptosystems; )A
f4_12 sf
-.022(Communications of the ACM)A
f0_12 sf
-.021( 21/2 \(1978\) 120-126.)A
endp
%%Trailer
end		% md
%%EOF
