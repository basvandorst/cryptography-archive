From: drtr@ast.cam.ac.uk (David Robinson)
Subject: Use shared memory for scoreboard
Affects: conf.h, http_main.c
ChangeLog: Use mmap() to allocated shared memory for the scoreboard on
           Solaris, SunOS, Digital UNIX, and BSDI. It should work on
           most of the other architectures.
Comments: This avoids httpd needing a file in /tmp; this can cause problems
          on systems where /tmp is cleared by a cron job.

*** conf.h.orig2	Tue Dec 12 13:45:16 1995
--- conf.h	Wed Dec 13 15:23:05 1995
***************
*** 67,72 ****
--- 67,73 ----
  #undef NO_SETSID
  char *crypt(char *pw, char *salt);
  #define JMP_BUF sigjmp_buf
+ #define HAVE_MMAP
       
  #elif defined(SOLARIS2)
  #undef HAS_GMTOFF
***************
*** 77,82 ****
--- 78,84 ----
  #define getwd(d) getcwd(d,MAX_STRING_LEN)
  #define JMP_BUF sigjmp_buf
  #define FCNTL_SERIALIZED_ACCEPT
+ #define HAVE_MMAP
  
  #elif defined(IRIX)
  #undef HAS_GMTOFF
***************
*** 119,124 ****
--- 121,127 ----
  #undef NO_KILLPG
  #undef NO_SETSID
  #define JMP_BUF sigjmp_buf
+ #define HAVE_MMAP
  
  #elif defined(SEQUENT)
  #define HAS_GMTOFF
***************
*** 241,246 ****
--- 244,250 ----
  #undef NO_KILLPG
  #undef NO_SETSID
  #define JMP_BUF sigjmp_buf
+ #define HAVE_MMAP
  
  #elif defined(QNX)
  #undef NO_KILLPG
***************
*** 318,323 ****
--- 322,330 ----
  
  #if HAVE_RESOURCE
  #include <sys/resource.h>
+ #endif
+ #ifdef HAVE_MMAP
+ #include <sys/mman.h>
  #endif
  
  #ifndef LOGNAME_MAX
*** http_main.c.orig3	Tue Dec 12 13:48:23 1995
--- http_main.c	Wed Dec 13 15:23:06 1995
***************
*** 323,328 ****
--- 323,331 ----
   * We begin with routines which deal with the file itself... 
   */
  
+ #ifdef HAVE_MMAP
+ static short_score *scoreboard_image=NULL;
+ #else
  static short_score scoreboard_image[HARD_SERVER_MAX];
  static char scoreboard_fname[] = "/tmp/htstatus.XXXXXX";
  static int have_scoreboard_fname = 0;
***************
*** 375,383 ****
--- 378,427 ----
      
      return orig_sz - bufsz;
  }
+ #endif
  
+ /* Called by parent process */
  void reinit_scoreboard (pool *p)
  {
+ #ifdef HAVE_MMAP
+     if (scoreboard_image == NULL)
+     {
+ 	caddr_t m;
+ #if defined(MAP_ANON) || defined(MAP_FILE)
+ /* BSD style */
+ 	m = mmap((caddr_t)0, HARD_SERVER_MAX*sizeof(short_score),
+ 		 PROT_READ | PROT_WRITE, MAP_ANON | MAP_SHARED, -1, 0);
+ 	if (m == (caddr_t)-1)
+ 	{
+ 	    perror("mmap");
+ 	    fprintf(stderr, "httpd: Could not mmap memory\n");
+ 	    exit(1);
+ 	}
+ #else
+ /* Sun style */
+ 	int fd;
+ 
+ 	fd = open("/dev/zero", O_RDWR);
+ 	if (fd == -1)
+ 	{
+ 	    perror("open");
+ 	    fprintf(stderr, "httpd: Could not open /dev/zero\n");
+ 	    exit(1);
+ 	}
+ 	m = mmap((caddr_t)0, HARD_SERVER_MAX*sizeof(short_score),
+ 		 PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);
+ 	if (m == (caddr_t)-1)
+ 	{
+ 	    perror("mmap");
+ 	    fprintf(stderr, "httpd: Could not mmap /dev/zero\n");
+ 	    exit(1);
+ 	}
+ 	close(fd);
+ #endif
+ 	scoreboard_image = (short_score *)m;
+     }
+     memset(scoreboard_image, 0, HARD_SERVER_MAX*sizeof(short_score));
+ #else
      if (!have_scoreboard_fname && (mktemp(scoreboard_fname) == NULL ||
  				   scoreboard_fname[0] == '\0')) {
  	fprintf (stderr, "Cannot assign name to scoreboard file!\n");
***************
*** 397,406 ****
--- 441,453 ----
      memset ((char*)scoreboard_image, 0, sizeof(scoreboard_image));
      force_write (scoreboard_fd, (char*)scoreboard_image,
  		 sizeof(scoreboard_image));
+ #endif
  }
  
+ /* called by child */
  void reopen_scoreboard (pool *p)
  {
+ #ifndef HAVE_MMAP
      if (scoreboard_fd != -1) pclosef (p, scoreboard_fd);
      
      scoreboard_fd = popenf(p, scoreboard_fname, O_CREAT|O_RDWR, 0666);
***************
*** 410,420 ****
--- 457,470 ----
  	perror (scoreboard_fname);
  	exit (1);
      }
+ #endif
  }
  
  void cleanup_scoreboard ()
  {
+ #ifndef HAVE_MMAP
      unlink (scoreboard_fname);
+ #endif
  }
  
  /* Routines called to deal with the scoreboard image
***************
*** 430,438 ****
--- 480,490 ----
  
  void sync_scoreboard_image ()
  {
+ #ifndef HAVE_MMAP
      lseek (scoreboard_fd, 0L, 0);
      force_read (scoreboard_fd, (char*)scoreboard_image,
  		sizeof(scoreboard_image));
+ #endif
  }
  
  void update_child_status (int child_num, int status)
***************
*** 441,448 ****
--- 493,504 ----
      new_score_rec.pid = getpid();
      new_score_rec.status = status;
  
+ #ifdef HAVE_MMAP
+     memcpy(&scoreboard_image[child_num], &new_score_rec, sizeof(short_score));
+ #else
      lseek (scoreboard_fd, (long)child_num * sizeof(short_score), 0);
      force_write (scoreboard_fd, (char*)&new_score_rec, sizeof(short_score));
+ #endif
  }
  
  int count_idle_servers ()
