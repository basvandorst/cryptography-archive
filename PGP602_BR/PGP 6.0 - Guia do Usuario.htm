<!-- OmenTree Dynamic Hierarchial Menu System (C) 1998 Colin Tucker/OmenSoft -->
<!-- alterações por Christian Haagensen Gontijo, junho/98 -->
<HTML>
<HEAD>
<META NAME="ROBOTS" CONTENT="NOINDEX">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="resource-type" CONTENT="document">
<META HTTP-EQUIV="author" CONTENT="Christian Haagensen Gontijo">
<META HTTP-EQUIV="keywords" CONTENT="PGP;PGP 6;GUIA;GUIA DO USUÁRIO;PORTUGUÊS">
<TITLE>PGP 6.0 - Guia do Usu&aacute;rio</TITLE>
<SCRIPT LANGUAGE="JavaScript">
<!--
function start() {
   loadData();
   drawTree();}

function drawTree() {
   outputFrame = top.treeFrame.document;
   outputFrame.open('text/html');
   outputFrame.write('<!-- HTML gerado dinamicamente por OmenTree - (C) 1998 Colin Tucker, partes por Christian Haagensen Gontijo -->\n');
   outputFrame.write('<HT'+'ML>\n<MET'+'A NAME="ROBOTS" CONTENT="NOINDEX">\n');
   outputFrame.write('<sty'+'le>A {text-decoration:none} A:active {background-color: #FFFF00} A:hover {color: #FF0000}</sty'+'le>\n');
   outputFrame.write('<BO'+'DY LINK="#0000CC" VLINK="#0000CC" BGCOLOR="' + backgroundColor + '">\n');
   outputFrame.write("<FO"+"NT FACE='" + omenTreeFont + "' SIZE=" + omenTreeFontSize + " COLOR='" + textColor + "'>\n");
   outputFrame.write(prefixHTML + "\n<NOBR>\n");
   if (treeData[1].target == "") {var targetFrame = defaultTargetFrame} else {var targetFrame = treeData[1].target}
   outputFrame.write("<A H"+"REF='" + treeData[1].url + "' TARGET='" + targetFrame + "' TITLE='" + treeData[1].name + "' onMouseOver=\"window.status='" + treeData[1].url + "'; return true\">&nbsp;<B>" + treeData[1].name + "</B></A><BR>\n");
   drawBranch("root","");
   outputFrame.write("</NOBR>\n" + suffixHTML + "\n");
   outputFrame.write("</FO"+"NT>\n</BO"+"DY>\n</HT"+"ML>");
   outputFrame.close();}

function drawBranch(startNode,structureString) {
   var children = extractChildrenOf(startNode);
   var currentIndex = 1;

   while (currentIndex <= children.length) {

      outputFrame.write(structureString);

      if (children[currentIndex].type == 'link'){

         if (children[currentIndex].icon == "")
            var imageString = defaultLinkIcon
         else
            var imageString = children[currentIndex].icon;

         if (children[currentIndex].target == "")
            var targetFrame = defaultTargetFrame
         else 
            var targetFrame = children[currentIndex].target;

         outputFrame.write("<IMG SRC='blank.gif' WIDTH=4 HEIGHT=6 ALIGN=TEXTTOP>");
         outputFrame.write("<A HREF='" + children[currentIndex].url + "' TARGET='" + targetFrame + "' TITLE='" + children[currentIndex].wstatus + "' onMouseOver=\"window.status='" + children[currentIndex].wstatus + "'; return true\" onMouseOut=\"window.status=''; return true\">&nbsp;" + children[currentIndex].name + "</A><BR>\n"); }

      else {

         var newStructure = structureString;
         if (currentIndex != children.length) {
            if (children[currentIndex].open == 0) {
               outputFrame.write("<A HREF=\"javascript:top.toggleFolder('" + children[currentIndex].id + "',1)\" onMouseOver=\"window.status='Clique para abrir esta pasta'; return true\" onMouseOut=\"window.status=''; return true\" TITLE='Clique para abrir esta pasta'><IMG SRC='plus.gif' WIDTH=9 HEIGHT=9 ALT='Clique para abrir esta pasta' ALIGN=TEXTTOP BORDER=0>")
               outputFrame.write("&nbsp;" + children[currentIndex].name + "</A><br>\n") }
            else {
               outputFrame.write("<A HREF=\"javascript:top.toggleFolder('" + children[currentIndex].id + "',0)\" onMouseOver=\"window.status='Clique para fechar esta pasta'; return true\" onMouseOut=\"window.status=''; return true\" TITLE='Clique para fechar esta pasta'><IMG SRC='minus.gif' WIDTH=9 HEIGHT=9 ALT='Clique para fechar esta pasta' ALIGN=TEXTTOP BORDER=0>");
               outputFrame.write("&nbsp;" + children[currentIndex].name + "</A><br>\n");
               newStructure = newStructure + "<IMG SRC='blank.gif' WIDTH=4 HEIGHT=6 ALIGN=TEXTTOP>";
               drawBranch(children[currentIndex].id,newStructure);}}
         else {
            if (children[currentIndex].open == 0) {
               outputFrame.write("<A HREF=\"javascript:top.toggleFolder('" + children[currentIndex].id + "',1)\" onMouseOver=\"window.status='Clique para abrir esta pasta'; return true\" onMouseOut=\"window.status=''; return true\" TITLE='Clique para abrir esta pasta'><IMG SRC='plus.gif' WIDTH=9 HEIGHT=9 ALT='Clique para abrir esta pasta' ALIGN=TEXTTOP BORDER=0>")
               outputFrame.write("&nbsp;" + children[currentIndex].name + "</A><br>\n") }
            else {
               outputFrame.write("<A HREF=\"javascript:top.toggleFolder('" + children[currentIndex].id + "',0)\" onMouseOver=\"window.status='Clique para fechar esta pasta'; return true\" onMouseOut=\"window.status=''; return true\" TITLE='Clique para fechar esta pasta'><IMG SRC='minus.gif' WIDTH=9 HEIGHT=9 ALT='Clique para fechar esta pasta' ALIGN=TEXTTOP BORDER=0>");
               outputFrame.write("&nbsp;" + children[currentIndex].name + "</A><br>\n");
               newStructure = newStructure + "<IMG SRC='blank.gif' WIDTH=4 HEIGHT=6 ALIGN=TEXTTOP>";
               drawBranch(children[currentIndex].id,newStructure); }}
      }
      currentIndex++;
   }
}

function toggleFolder(id,status) {
   var nodeIndex = indexOfNode(id); 
   treeData[nodeIndex].open = status; 
   timeOutId = setTimeout("drawTree()",100)}

function indexOfNode(id) {
   var currentIndex = 1;
   while (currentIndex <= treeData.length) {
      if ((treeData[currentIndex].type == 'root') || (treeData[currentIndex].type == 'folder')) {
         if (treeData[currentIndex].id == id) {return currentIndex}} 
      currentIndex++} 
   return -1}

function extractChildrenOf(node) {
   var children = new Collection();
   var currentIndex = 1; 
   while (currentIndex <= treeData.length) {
      if ((treeData[currentIndex].type == 'folder') || (treeData[currentIndex].type == 'link')) {
         if (treeData[currentIndex].parent == node) {
            children.add(treeData[currentIndex])}}
      currentIndex++} 
   return children}

function Collection() {
   this.length = 0; 
   this.add = add; 
   return this}

function add(object) {
   this.length++; 
   this[this.length] = object}

function RootNode(id,name,url,target,icon) {
   this.id = id;
   this.name = name;
   this.url = url;
   this.target = target;
   this.icon = icon;
   this.type = 'root';
   return this}

function FolderNode(id,parent,name,iconClosed,iconOpen) {
   this.id = id;
   this.parent = parent;
   this.name = name;
   this.iconClosed = iconClosed;
   this.iconOpen = iconOpen;
   this.type = 'folder';
   this.open = 0;
   return this}

function LinkNode(parent,name,url,target,icon,wstatus) {
   this.parent = parent;
   this.name = name;
   this.url = url;
   this.target = target;
   this.icon = icon;
   this.wstatus = wstatus;
   this.type = 'link';
   return this}

function loadData() {
  treeData = new Collection();
  treeData.add(new RootNode('root','PGP 6.0','0a - Capa e introducao.htm','',''));      // Root Node MUST be first!

  treeData.add(new FolderNode('prefacio','root','Pref&aacute;cio','',''));
    treeData.add(new LinkNode('prefacio','Prefácio','0b - Prefacio.htm','','','Pref&aacute;cio'));
    treeData.add(new LinkNode('prefacio','Como contactar a Network Associates','0b - Prefacio.htm#contactar','','',''));
    treeData.add(new LinkNode('prefacio','Leituras recomendadas','0b - Prefacio.htm#leituras_recomendadas','','',''));

  treeData.add(new FolderNode('introduzindo','root','1 - Introduzindo PGP','',''));
    treeData.add(new LinkNode('introduzindo','Introduzindo PGP','1 - Introduzindo PGP.htm','','',''));
    treeData.add(new LinkNode('introduzindo','O que h&aacute; de novo em PGP vers&atilde;o 6.0','1 - Introduzindo PGP.htm#novo','','',''));
    treeData.add(new LinkNode('introduzindo','Usando PGP','1 - Introduzindo PGP.htm#usando_pgp','','',''));

  treeData.add(new FolderNode('iniciando','root','2 - Iniciando','',''));
    treeData.add(new LinkNode('iniciando','Iniciando','2 - Iniciando.htm','','',''));
    treeData.add(new LinkNode('iniciando','Executando PGP','2 - Iniciando.htm#executando','','',''));
    treeData.add(new LinkNode('iniciando','Usando PGP em aplicativos de email','2 - Iniciando.htm#suportados','','',''));

  treeData.add(new FolderNode('chaves','root','3 - Criando e Trocando Chaves','',''));
    treeData.add(new LinkNode('chaves','Criando e Trocando Chaves','3 - Criando e Trocando Chaves.htm','','',''));
    treeData.add(new LinkNode('chaves','Conceitos chave','3 - Criando e Trocando Chaves.htm#conceitos','','',''));
    treeData.add(new LinkNode('chaves','Criando um par de chaves','3 - Criando e Trocando Chaves.htm#criando_par_chaves','','',''));
    treeData.add(new LinkNode('chaves','Criando uma frase-senha','3 - Criando e Trocando Chaves.htm#criando_frase_senha_que_voce_vai_se_lembrar','','',''));
    treeData.add(new LinkNode('chaves','Adicionando um ID fotogr&aacute;fico','3 - Criando e Trocando Chaves.htm#adicionando_id_fotografico','','',''));
    treeData.add(new LinkNode('chaves','Criando novas subchaves','3 - Criando e Trocando Chaves.htm#criando_novas_subchaves','','',''));
    treeData.add(new LinkNode('chaves','Divis&atilde;o de chaves','3 - Criando e Trocando Chaves.htm#divisao_chaves','','',''));
    treeData.add(new LinkNode('chaves','Protegendo suas chaves','3 - Criando e Trocando Chaves.htm#protegendo_chaves','','',''));
    treeData.add(new LinkNode('chaves','Distribuindo sua chave p&uacute;blica','3 - Criando e Trocando Chaves.htm#distribuindo_chave_publica','','',''));
    treeData.add(new LinkNode('chaves','Obtendo chaves p&uacute;blicas','3 - Criando e Trocando Chaves.htm#obtendo_chaves_publicas_de_outros','','',''));
    treeData.add(new LinkNode('chaves','Verificando autenticidade de chaves','3 - Criando e Trocando Chaves.htm#verificando_autenticidade','','',''));
    treeData.add(new LinkNode('chaves','Assinando chaves p&uacute;blicas','3 - Criando e Trocando Chaves.htm#assinando_chave_publica','','',''));
    treeData.add(new LinkNode('chaves','Obtendo chaves via apresentadores','3 - Criando e Trocando Chaves.htm#obtendo_chaves_via_apresentadores_confiaveis','','',''));

  treeData.add(new FolderNode('email','root','4 - Enviando/Recebendo EMail Seguro','',''));
    treeData.add(new LinkNode('email','Enviando e Recebendo EMail Seguro','4 - Enviando e Recebendo EMail Seguro.htm','','',''));
    treeData.add(new LinkNode('email','Codificando e assinando email','4 - Enviando e Recebendo EMail Seguro.htm#codificando_e_assinando_email','','',''));
    treeData.add(new LinkNode('email','Decifrando e verificando email','4 - Enviando e Recebendo EMail Seguro.htm#decifrando_e_verificando_email','','',''));

  treeData.add(new FolderNode('armaz','root','5 - Armazenamento Seguro de Dados','',''));
    treeData.add(new LinkNode('armaz','Armazenamento Seguro de Dados','5 - Usando PGP para Armazenamento Seguro de Dados.htm','','',''));
    treeData.add(new LinkNode('armaz','Codificar e decifrar arquivos','5 - Usando PGP para Armazenamento Seguro de Dados.htm#codificar_decifrar','','',''));
    treeData.add(new LinkNode('armaz','Assinar e decifrar com chave dividida','5 - Usando PGP para Armazenamento Seguro de Dados.htm#assinando_decifrando_arquivos_com_chave_dividida','','',''));
    treeData.add(new LinkNode('armaz','Usando PGPwipe','5 - Usando PGP para Armazenamento Seguro de Dados.htm#usando_PGPWipe_para_apagar_arquivos','','',''));
    treeData.add(new LinkNode('armaz','Usando PGP Free Space Wiper','5 - Usando PGP para Armazenamento Seguro de Dados.htm#free_space_wiper','','',''));

  treeData.add(new FolderNode('config','root','6 - Gerenciando Chaves e Prefer&ecirc;ncias','',''));
    treeData.add(new LinkNode('config','Gerenciando Chaves e Prefer&ecirc;ncias','6 - Gerenciando Chaves e Configurando Preferencias.htm','','',''));
    treeData.add(new LinkNode('config','Gerenciando suas chaves','6 - Gerenciando Chaves e Configurando Preferencias.htm#gerenciando_chaves','','',''));
    treeData.add(new LinkNode('config','Examinando propriedades de chaves','6 - Gerenciando Chaves e Configurando Preferencias.htm#examinando_propriedades','','',''));
    treeData.add(new LinkNode('config','Configurando suas prefer&ecirc;ncias','6 - Gerenciando Chaves e Configurando Preferencias.htm#configurando_preferencias','','',''));
    treeData.add(new LinkNode('config','Procurando chaves','6 - Gerenciando Chaves e Configurando Preferencias.htm#procurando_chaves','','',''));

  treeData.add(new FolderNode('pgpdisk','root','7 - PGPdisk','',''));
    treeData.add(new LinkNode('pgpdisk','PGPdisk','7 - PGPdisk.htm','','',''));
    treeData.add(new LinkNode('pgpdisk','O que &eacute; PGPdisk?','7 - PGPdisk.htm#o_que_e','','',''));
    treeData.add(new LinkNode('pgpdisk','Recursos de PGPdisk','7 - PGPdisk.htm#recursos','','',''));
    treeData.add(new LinkNode('pgpdisk','Trabalhando com volumes PGPdisk','7 - PGPdisk.htm#trabalhando_com_volumes','','',''));
    treeData.add(new LinkNode('pgpdisk','Mantendo volumes PGPdisk','7 - PGPdisk.htm#mantendo_volumes','','',''));
    treeData.add(new LinkNode('pgpdisk','Detalhes T&eacute;cnicos e Seguran&ccedil;a','7 - PGPdisk.htm#detalhes_tecnicos','','',''));

  treeData.add(new FolderNode('problemas','root','A - Solucionando Problemas com PGP','',''));
    treeData.add(new LinkNode('problemas','Solucionando Problemas com PGP','A - Solucionando Problemas com PGP.htm','','',''));

  treeData.add(new FolderNode('macwin','root','B - Arquivos entre MacOS e Windows','',''));
    treeData.add(new LinkNode('macwin','Transferindo Arquivos entre eles','B - Transferindo Arquivos entre MacOS e Windows.htm','','',''));
    treeData.add(new LinkNode('macwin','Enviando do MacOS para Windows','B - Transferindo Arquivos entre MacOS e Windows.htm#enviando_do_macos_para_windows','','',''));
    treeData.add(new LinkNode('macwin','Recebendo de Windows em MacOS','B - Transferindo Arquivos entre MacOS e Windows.htm#recebendo_win_em_macos','','',''));

  treeData.add(new FolderNode('phil','root','C - Phil Zimmermann sobre PGP','',''));
    treeData.add(new LinkNode('phil','Phil Zimmermann sobre PGP','C - Phil Zimmermann sobre PGP.htm','','',''));
    treeData.add(new LinkNode('phil','Por qu&ecirc; escrevi PGP','C - Phil Zimmermann sobre PGP.htm#por_que','','',''));
    treeData.add(new LinkNode('phil','Os algoritmos sim&eacute;tricos de PGP','C - Phil Zimmermann sobre PGP.htm#algoritmos_simetricos_PGP','','',''));
    treeData.add(new LinkNode('phil','Cuidado com veneno de cobra','C - Phil Zimmermann sobre PGP.htm#veneno','','',''));
    treeData.add(new LinkNode('phil','Vulnerabilidades','C - Phil Zimmermann sobre PGP.htm#vulnerabilidades','','',''));

  treeData.add(new LinkNode('root','Gloss&aacute;rio','Glossario.htm','','',''));



  backgroundColor='#FFFFEE';
  textColor = '#000000';            // sets the color of the text used in the menu
  defaultTargetFrame = 'conteudo';  // the name of the frame that links will load into by default 
  defaultLinkIcon = 'blank.gif';    // the default icon image used for links
  omenTreeFont = 'Arial,Helvetica,MS Sans Serif';  // the font used for the menu
  omenTreeFontSize = 1;             // its size - don't make it too big!

  prefixHTML = '<div align="center">'+
               '<font face="Arial, Helvetica, sans-serif" size="2">'+
               '<b>PGP 6.0 - Guia do Usu&aacute;rio</b></font><br><br>'+
               '<font face="Arial, Helvetica, sans-serif" size="1">'+
               'realizado por<br><a href="http://www.pgpi.org" target="_blank">PGPi</a> Translation Project'+
               '</font>'+
               '<div align="center"><a href="http://www.pgpi.org" target="_blank"><img src="pgp-now.gif" width="88" height="31" border="0" alt="Clique para ir ao site de PGPi"></a></div>'+
               '<hr width="80%" size="2" color="#68A038">'+
               '</div>';
  suffixHTML = '';
}
//-->
</script>
</HEAD>
<frameset cols="219,564*" rows="*" onload="start()" frameborder="NO" border="0" framespacing="0"> 
  <frameset rows="439,88" cols="*"> 
    <frame src="vazio.htm" name="treeFrame" scrolling="AUTO" marginwidth="1" marginheight="0" frameborder="NO">
    <frame src="traducao.htm" name="" scrolling="AUTO" frameborder="NO">
  </frameset>
  <frame src="0a - Capa e introducao.htm" name="conteudo" frameborder="NO" scrolling="AUTO">    
</frameset>
<noframes>
  <body bgcolor="#FFFFFF" TEXT="#0F0000">Sinto, mas voc&ecirc; precisar&aacute; usar um paginador que suporte frames, para acessar este s&iacute;tio (como o Internet Explorer 3 e superiores ou Netscape Navigator 3 e superiores).</body>
</noframes>
</html>