Path: ghost.dsi.unimi.it!rpi!uwm.edu!spool.mu.edu!uunet!mcsun!uknet!gdt!aber!aem
From: how@isl.stanford.edu (Dana How)
Newsgroups: comp.sources.misc
Subject: v29i080: descore - high performance DES core routines, Part01/01
Message-ID: <1992Apr22.101923.5412@aber.ac.uk>
Date: 22 Apr 92 10:19:23 GMT
Article-I.D.: aber.1992Apr22.101923.5412
Sender: aem@aber.ac.uk (Alec David Muffett)
Followup-To: comp.sources.d
Organization: University College of Wales, Aberystwyth
Lines: 1798
Approved: aem@aber.ac.uk
X-Md4-Signature: 4273f951be4f2b47669208672e313721

Submitted-by: how@isl.stanford.edu (Dana How)
Posting-number: Volume 29, Issue 80
Archive-name: descore/part01
Environment: UNIX, 32BIT

desCore is a package which contains just the core DES functionality:
specifying keys, encryption and decryption.  the latter two functions
are faster (by 40%+) than any software i have seen posted before:
	encryption/decryption on a sparcstation 1:
	variant			blocks/sec	bytes/sec	bits/sec
	with  2k tables		20,000		160,000		1,280,000
	with 64k tables		30,000		480,000		3,840,000
omitting the initial and final permutation improves the performance even
more;  all four combinations of table size and IP/FP support are provided.

desCore is for those who want to implement such things as DES filters,
rather than UNIX password crackers. for this reason i have not spent much
effort yet to improve the performance of the key-setting routine.

i have attempted to keep the package small, portable and easily plugged-in
to kerberos-compatible code. i have NOT reimplemented all the other routines
in kerberos because i have nothing new to add -- that has already been done
at least three times by other people.

the majority of the performance optimizations which appear in this package
also appear in the recent post from australia,  which is a good package.
here extra performance is derived by careful attention to minimizing machine-
level operations (such as hidden index scaling) and allowing the code to be
highly tuned to the number of registers available on the target machine.
it should be noted that this performance was NOT obtained at the expense
of portability, or requiring the input or output data to be aligned in
unnecessary ways,  nor are the tables rearranged for different machine types
as in some DES packages --  indeed, this package is _oblivious_ to the endedness
of your machine.

enjoy!						posted by how@isl.stanford.edu

