diff -u -r ../apache_1.3.9/Makefile.tmpl ./Makefile.tmpl
--- ../apache_1.3.9/Makefile.tmpl	Fri Aug 13 06:58:18 1999
+++ ./Makefile.tmpl	Mon Sep  6 16:28:06 1999
@@ -275,6 +275,7 @@
 #   shared object files.
 install-programs:
 	@echo "===> [programs: Installing Apache $(TARGET) program and shared objects]"
+	$(INSTALL_PROGRAM) $(TOP)/$(SRC)/modules/ssl/gcache $(root)$(sbindir)/gcache
 	-@if [ ".`grep '^[ 	]*AddModule.*mod_so\.o' $(TOP)/$(SRC)/Configuration.apaci`" != . ]; then \
 		echo "$(INSTALL_CORE) $(TOP)/$(SRC)/$(TARGET) $(root)$(sbindir)/$(TARGET)"; \
 		$(INSTALL_CORE) $(TOP)/$(SRC)/$(TARGET) $(root)$(sbindir)/$(TARGET); \
diff -u -r ../apache_1.3.9/configure ./configure
--- ../apache_1.3.9/configure	Sat Aug 14 08:29:05 1999
+++ ./configure	Mon Sep  6 16:28:06 1999
@@ -775,7 +775,9 @@
                            OOIFS="$IFS"
                            IFS=':'
                            for module in $modules; do
-                               eval "shared_${module}=yes" 
+			       if [ $module != apache_ssl ]; then
+				   eval "shared_${module}=yes"
+			       fi
                            done
                            IFS="$OOIFS"
                            shared_so=no        # because of bootstrapping
@@ -1020,7 +1022,7 @@
 if [ "x$TARGET" != "x" ]; then
     thetarget="$TARGET"
 else
-    thetarget=httpd
+    thetarget=httpsd
 fi
 
 ##
diff -u -r ../apache_1.3.9/src/Configuration ./src/Configuration
--- ../apache_1.3.9/src/Configuration	Mon Aug 16 18:40:04 1999
+++ ./src/Configuration	Thu Sep  9 19:40:16 1999
@@ -62,6 +62,21 @@
 #OPTIM=
 #RANLIB=
 
+TARGET=httpsd
+
+#
+# SSL Related stuff. N.B. This is set up to use the SSLeay source, NOT an
+# installed version.
+#
+KEYNOTE_BASE=/home/ben/work/KeyNote
+SSL_BASE=/usr/home/ben/work/openssl
+SSL_INCLUDE= -I$(SSL_BASE)/include
+SSL_CFLAGS= -DAPACHE_SSL
+SSL_LIB_DIR= $(SSL_BASE)
+SSL_LIBS= -L$(SSL_LIB_DIR) -lssl -lcrypto
+SSL_APP_DIR= $(SSL_BASE)/apps
+SSL_APP=/usr/home/ben/work/openssl/apps/openssl
+
 ################################################################
 # Name of the installed Apache HTTP webserver.
 #
@@ -220,6 +235,11 @@
 # is and the more memory it will take, so if you are unlikely to use the
 # functionality of a particular module you might wish to leave it out.
 
+##
+## Experimental Apache-SSL KeyNote support.
+
+# AddModule modules/ssl-keynote/apache_ssl_keynote.o
+
 ## mod_mmap_static is an experimental module, you almost certainly
 ## don't need it.  It can make some webservers faster.  No further
 ## documentation is provided here because you'd be foolish
@@ -436,3 +456,7 @@
 
 AddModule modules/standard/mod_setenvif.o
 
+## Damn damn damn. Apache inverts the module list. SSL must go first to fake
+## basic authorization (that is, last in this file).
+
+AddModule modules/ssl/apache_ssl.a
diff -u -r ../apache_1.3.9/src/Configuration.tmpl ./src/Configuration.tmpl
--- ../apache_1.3.9/src/Configuration.tmpl	Sat Aug 14 08:35:43 1999
+++ ./src/Configuration.tmpl	Mon Sep  6 16:28:07 1999
@@ -62,6 +62,21 @@
 #OPTIM=
 #RANLIB=
 
+TARGET=httpsd
+
+#
+# SSL Related stuff. N.B. This is set up to use the SSLeay source, NOT an
+# installed version.
+#
+KEYNOTE_BASE=/home/ben/work/KeyNote
+SSL_BASE=/usr/home/ben/work/openssl
+SSL_INCLUDE= -I$(SSL_BASE)/include
+SSL_CFLAGS= -DAPACHE_SSL
+SSL_LIB_DIR= $(SSL_BASE)
+SSL_LIBS= -L$(SSL_LIB_DIR) -lssl -lcrypto
+SSL_APP_DIR= $(SSL_BASE)/apps
+SSL_APP=/usr/home/ben/work/openssl/apps/openssl
+
 ################################################################
 # Name of the installed Apache HTTP webserver.
 #
@@ -220,6 +235,11 @@
 # is and the more memory it will take, so if you are unlikely to use the
 # functionality of a particular module you might wish to leave it out.
 
+##
+## Experimental Apache-SSL KeyNote support.
+
+# AddModule modules/ssl-keynote/apache_ssl_keynote.o
+
 ## mod_mmap_static is an experimental module, you almost certainly
 ## don't need it.  It can make some webservers faster.  No further
 ## documentation is provided here because you'd be foolish
@@ -436,3 +456,7 @@
 
 AddModule modules/standard/mod_setenvif.o
 
+## Damn damn damn. Apache inverts the module list. SSL must go first to fake
+## basic authorization (that is, last in this file).
+
+AddModule modules/ssl/apache_ssl.a
diff -u -r ../apache_1.3.9/src/Configure ./src/Configure
--- ../apache_1.3.9/src/Configure	Mon Aug 16 00:49:08 1999
+++ ./src/Configure	Tue Sep  7 16:58:07 1999
@@ -821,7 +821,7 @@
 ##
 echo >>Makefile.config "OSDIR=\$(SRCDIR)/$OSDIR"
 echo >>Makefile.config "INCDIR=\$(SRCDIR)/include"
-echo >>Makefile.config "INCLUDES0=-I\$(OSDIR) -I\$(INCDIR)"
+echo >>Makefile.config "INCLUDES0=-I\$(OSDIR) -I\$(INCDIR) \$(SSL_INCLUDE)"
 echo >>Makefile.config "SHELL=$SHELL"
 
 ####################################################################
@@ -1650,6 +1650,10 @@
 		    echo "    o $modbase adds libraries: $modlibs1"
 		    modlibs="$modlibs $modlibs1"
 		fi
+		if grep "Libs:" $tmpfile2 > /dev/null; then
+		    modlibs=`grep Libs: $tmpfile2 | sed 's/^.*Libs:[ 	]*//'`
+		    echo "    o $modbase adds libraries: $modlibs"
+		fi
 		rm -f $tmpfile2 $tmpfile3
 		if [ "x$ext" != "x$SHLIB_SUFFIX_NAME" ]; then
 		    ext=o
@@ -1941,7 +1945,7 @@
 ## for $LIBS at this point. This implies that anything below
 ## can only alter $LIBS
 ##
-echo "CFLAGS1=$CFLAGS" >>Makefile.config
+echo "CFLAGS1=$CFLAGS \$(SSL_CFLAGS)" >>Makefile.config
 echo "INCLUDES1=$INCLUDES" >>Makefile.config
 echo "LIBS_SHLIB=$LIBS_SHLIB" >>Makefile.config
 echo "LDFLAGS1=$LDFLAGS" >>Makefile.config
@@ -2123,7 +2127,7 @@
 ####################################################################
 ## Finish creating the Makefile.config file
 ##
-echo "LIBS1=$modlibs $LIBS">> Makefile.config
+echo "LIBS1=$modlibs $LIBS \$(SSL_LIBS)">> Makefile.config
 echo "##" >> Makefile.config
 echo "##  (End of automatically generated section)">> Makefile.config
 echo "##" >> Makefile.config
diff -u -r ../apache_1.3.9/src/Makefile.tmpl ./src/Makefile.tmpl
--- ../apache_1.3.9/src/Makefile.tmpl	Tue May 25 10:15:04 1999
+++ ./src/Makefile.tmpl	Mon Sep  6 16:28:07 1999
@@ -30,6 +30,13 @@
 
 $(TARGET): $(EXTRA_DEPS) $(SUBTARGET)
 
+certificate:
+	$(SSL_APP) req -config ../SSLconf/conf/ssleay.cnf \
+	-new -x509 -nodes -out ../SSLconf/conf/httpsd.pem \
+	-keyout ../SSLconf/conf/httpsd.pem; \
+	ln -sf httpsd.pem ../SSLconf/conf/`$(SSL_APP) \
+	x509 -noout -hash < ../SSLconf/conf/httpsd.pem`.0
+
 target_static: subdirs modules.o
 	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
 	$(CC) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
diff -u -r ../apache_1.3.9/src/include/ap_config.h ./src/include/ap_config.h
--- ../apache_1.3.9/src/include/ap_config.h	Mon Aug  9 07:38:45 1999
+++ ./src/include/ap_config.h	Mon Sep  6 16:28:07 1999
@@ -501,7 +501,17 @@
  * all glibc based systems need crypt.h
  */
 #if defined(__GNU_LIBRARY__) && __GNU_LIBRARY__ > 1
-#include <crypt.h>
+
+# ifdef APACHE_SSL
+#  define des_encrypt BASE_des_encrypt
+# endif
+
+# include <crypt.h>
+
+# ifdef APACHE_SSL
+#  undef des_encrypt
+# endif
+
 #endif
 
 /* glibc 2.0.0 through 2.0.4 need size_t * here, where 2.0.5 needs socklen_t *
@@ -1385,6 +1395,10 @@
 
 #ifndef ap_wait_t
 #define ap_wait_t int
+#endif
+
+#ifdef APACHE_SSL
+# define NO_WRITEV
 #endif
 
 #ifdef __cplusplus
diff -u -r ../apache_1.3.9/src/include/buff.h ./src/include/buff.h
--- ../apache_1.3.9/src/include/buff.h	Fri Jan  1 19:04:39 1999
+++ ./src/include/buff.h	Mon Sep  6 16:28:07 1999
@@ -61,13 +61,30 @@
 #ifdef __cplusplus
 extern "C" {
 #endif
-
 #ifdef B_SFIO
+
 #include "sfio.h"
 #endif
 
 #include <stdarg.h>
 
+#ifdef APACHE_SSL
+
+# include <stdio.h>
+# include <openssl/ssl.h>
+
+#if SSLEAY_VERSION_NUMBER < 0x0920
+# error "Don't use OpenSSL/SSLeay versions less than 0.9.2b, they have a serious security problem!"
+#endif
+
+# define APACHE_SSL_EXPORT_CERTS	FALSE
+# if APACHE_SSL_EXPORT_CERTS
+/* SSLeay doesn't, so we must! */
+#  define APACHE_SSL_KEEP_CERTS		TRUE
+# endif
+
+#endif
+
 /* Reading is buffered */
 #define B_RD     (1)
 /* Writing is buffered */
@@ -127,6 +144,16 @@
 #ifdef B_SFIO
     Sfio_t *sf_in;
     Sfio_t *sf_out;
+#endif
+
+#ifdef APACHE_SSL
+    /* Add some context for SSL */
+    SSL *ssl;
+    char *szClientX509;
+    int nVerifyError;
+# if APACHE_SSL_KEEP_CERTS
+    table *tableCertChain;
+# endif
 #endif
 };
 
diff -u -r ../apache_1.3.9/src/include/http_main.h ./src/include/http_main.h
--- ../apache_1.3.9/src/include/http_main.h	Fri Jan  1 19:04:40 1999
+++ ./src/include/http_main.h	Mon Sep  6 16:28:08 1999
@@ -115,6 +115,7 @@
 void ap_start_shutdown(void);
 void ap_start_restart(int);
 API_EXPORT(void) ap_hard_timeout(char *, request_rec *);
+void ap_conn_timeout(char *name,conn_rec *conn);
 void ap_keepalive_timeout(char *, request_rec *);
 API_EXPORT(void) ap_soft_timeout(char *, request_rec *);
 API_EXPORT(void) ap_kill_timeout(request_rec *);
@@ -164,6 +165,8 @@
  * write_fd are possibly killed off separately.
  */
 API_EXPORT(void) ap_unregister_other_child(void *data);
+/* Check for debug-level logging */
+API_EXPORT(int) LogLevelIsDebug(void);
 
 #endif
 
diff -u -r ../apache_1.3.9/src/include/httpd.h ./src/include/httpd.h
--- ../apache_1.3.9/src/include/httpd.h	Mon Aug 16 17:57:53 1999
+++ ./src/include/httpd.h	Mon Sep  6 16:31:26 1999
@@ -66,6 +66,11 @@
  * httpd.h: header for simple (ha! not anymore) http daemon
  */
 
+/* Needed all over the place */
+typedef unsigned int BOOL;
+#define TRUE 		1
+#define FALSE 		0
+
 /* Headers in which EVERYONE has an interest... */
 
 #include "ap_config.h"
@@ -138,8 +143,13 @@
 #define DEFAULT_HTTP_PORT	80
 #define DEFAULT_HTTPS_PORT	443
 #define ap_is_default_port(port,r)	((port) == ap_default_port(r))
-#define ap_http_method(r)	"http"
-#define ap_default_port(r)	DEFAULT_HTTP_PORT
+#ifdef APACHE_SSL
+# define ap_http_method(r)	((r)->connection->client->ssl ? "https" : "http")
+# define ap_default_port(r)	((r)->connection->client->ssl ? DEFAULT_HTTPS_PORT : DEFAULT_HTTP_PORT)
+#else
+# define ap_http_method(r)	"http"
+# define ap_default_port(r)	DEFAULT_HTTP_PORT
+#endif
 
 /* --------- Default user name and group name running standalone ---------- */
 /* --- These may be specified as numbers by placing a # before a number --- */
@@ -419,7 +429,12 @@
  * Example: "Apache/1.1.0 MrWidget/0.1-alpha" 
  */
 
+#ifdef APACHE_SSL
+#define SERVER_BASEVERSION "Apache/1.3.9 Ben-SSL/1.37"       /* SEE COMMENTS ABOVE */
+#else
 #define SERVER_BASEVERSION "Apache/1.3.9"	/* SEE COMMENTS ABOVE */
+#endif
+
 #define SERVER_VERSION  SERVER_BASEVERSION
 enum server_token_type {
     SrvTk_MIN,		/* eg: Apache/1.3.0 */
@@ -859,6 +874,11 @@
 #define DEFAULT_VHOST_ADDR 0xfffffffful
 
 typedef struct server_addr_rec server_addr_rec;
+
+#ifdef APACHE_SSL
+int ApacheSSLSetupConnection(conn_rec *conn);
+void ApacheSSLAddCommonVars(request_rec *r);
+#endif
 struct server_addr_rec {
     server_addr_rec *next;
     struct in_addr host_addr;	/* The bound address, for this server */
diff -u -r ../apache_1.3.9/src/main/Makefile.tmpl ./src/main/Makefile.tmpl
--- ../apache_1.3.9/src/main/Makefile.tmpl	Tue Jan 12 15:47:00 1999
+++ ./src/main/Makefile.tmpl	Mon Sep  6 16:28:08 1999
@@ -14,7 +14,7 @@
       rfc1413.o
 
 .c.o:
-	$(CC) -c $(INCLUDES) $(CFLAGS) $<
+	$(CC) -c $(INCLUDES) $(CFLAGS) $(SSL_CFLAGS) $<
 
 all: $(HEADERS) $(LIB)
 
diff -u -r ../apache_1.3.9/src/main/buff.c ./src/main/buff.c
--- ../apache_1.3.9/src/main/buff.c	Thu Jul 29 18:13:40 1999
+++ ./src/main/buff.c	Mon Sep  6 16:28:08 1999
@@ -72,6 +72,10 @@
 #include <bstring.h>		/* for IRIX, FD_SET calls bzero() */
 #endif
 
+#ifdef APACHE_SSL
+# include <openssl/err.h>
+#endif
+
 #ifndef DEFAULT_BUFSIZE
 #define DEFAULT_BUFSIZE (4096)
 #endif
@@ -242,6 +246,46 @@
     }
     else
 #endif
+#ifdef APACHE_SSL
+    if(fb->ssl)
+	{
+	int pa;
+
+	do
+	    {
+	    /* A horrible hack: an increase in this stat indicates that the
+	       client renegotiated. Is there a better way? Ben 10 Apr 1999
+	    */
+	    pa=fb->ssl->ctx->stats.sess_accept;
+
+	    rv=SSL_read(fb->ssl,buf,nbyte);
+
+	    ap_log_error(APLOG_MARK,APLOG_DEBUG|APLOG_NOERRNO,NULL,
+			 "read returned %d rwstate=%d state=%d rstate=%d "
+			 "cren=%d aren=%d accept=%d",
+			 rv,fb->ssl->rwstate,fb->ssl->state,fb->ssl->rstate,
+			 fb->ssl->ctx->stats.sess_connect_renegotiate,
+			 fb->ssl->ctx->stats.sess_accept_renegotiate,
+			 fb->ssl->ctx->stats.sess_accept);
+	    }
+	while(rv < 0 && fb->ssl->ctx->stats.sess_accept != pa);
+
+	if(rv < 0)
+	    {
+	    int l;
+
+	    while((l=ERR_get_error()))
+		{
+		char buf[MAX_STRING_LEN];
+
+		ERR_error_string(l,buf);
+		ap_log_error(APLOG_MARK,APLOG_DEBUG|APLOG_NOERRNO,NULL,"%s",
+			     buf);
+		}
+	    }
+	}
+    else
+#endif
 	rv = read(fb->fd_in, buf, nbyte);
     
     return rv;
@@ -284,6 +328,7 @@
 #else
     rv = ap_read(fb, buf, nbyte);
 #endif /* WIN32 */
+
     return rv;
 }
 
@@ -299,12 +344,33 @@
     }
     else
 #endif
+#ifdef APACHE_SSL
+    if(fb->ssl)
+	{
+	rv=SSL_write(fb->ssl,buf,nbyte);
+
+	if(rv < 0)
+	    {
+	    int l;
+
+	    while((l=ERR_get_error()))
+		{
+		char buf[MAX_STRING_LEN];
+
+		ERR_error_string(l,buf);
+		ap_log_error(APLOG_MARK,APLOG_DEBUG|APLOG_NOERRNO,NULL,"%s",
+			     buf);
+		}
+	    }
+	}
+    else
+#endif
 #if defined (B_SFIO)
 	rv = sfwrite(fb->sf_out, buf, nbyte);
 #else
 	rv = write(fb->fd, buf, nbyte);
 #endif
-    
+
     return rv;
 }
 
@@ -394,6 +460,11 @@
 		       (size_t) SF_UNBOUND, 1, SF_WRITE);
 #endif
 
+#ifdef APACHE_SSL
+    fb->ssl = NULL;
+    fb->szClientX509 = NULL;
+#endif
+
     return fb;
 }
 
@@ -1129,7 +1200,7 @@
 	return write_with_errors(fb, buf, nbyte);
     }
 
-#ifdef NO_WRITEV
+#if defined(NO_WRITEV)
     /* without writev() this has poor performance, too bad */
 
     ap_snprintf(chunksize, sizeof(chunksize), "%x\015\012", nbyte);
diff -u -r ../apache_1.3.9/src/main/http_log.c ./src/main/http_log.c
--- ../apache_1.3.9/src/main/http_log.c	Sun May 30 08:55:29 1999
+++ ./src/main/http_log.c	Mon Sep  6 16:28:08 1999
@@ -307,7 +307,8 @@
 	 * notice
 	 */
 	if (((level & APLOG_LEVELMASK) != APLOG_NOTICE) &&
-	    ((level & APLOG_LEVELMASK) > DEFAULT_LOGLEVEL))
+	    ((level & APLOG_LEVELMASK) > DEFAULT_LOGLEVEL)
+	    && !LogLevelIsDebug())
 	    return;
 	logf = stderr;
     }
diff -u -r ../apache_1.3.9/src/main/http_main.c ./src/main/http_main.c
--- ../apache_1.3.9/src/main/http_main.c	Tue Aug 10 13:54:48 1999
+++ ./src/main/http_main.c	Mon Sep  6 16:28:09 1999
@@ -364,6 +364,9 @@
 /* Global, alas, so http_core can talk to us */
 enum server_token_type ap_server_tokens = SrvTk_FULL;
 
+int LogLevelIsDebug()
+    { return server_conf && server_conf->loglevel == APLOG_DEBUG; }
+
 /*
  * This routine is called when the pconf pool is vacuumed.  It resets the
  * server version string to a known value and [re]enables modifications
@@ -1281,8 +1284,21 @@
     }
 }
 
+/* Essentially the same as ap_keepalive_timeout, but used if you have no
+   request_rec */
+void ap_conn_timeout(char *name,conn_rec *conn)
+    {
+    unsigned int to;
 
+    timeout_req=NULL;
+    timeout_name=name;
 
+    if(conn->keptalive)
+	to=conn->server->keep_alive_timeout;
+    else
+	to=conn->server->timeout;
+    ap_set_callback_and_alarm(timeout, to);
+    }
 
 void ap_keepalive_timeout(char *name, request_rec *r)
 {
@@ -4016,6 +4032,16 @@
 				          (struct sockaddr_in *) &sa_server,
 				          my_child_num);
 
+#ifdef APACHE_SSL
+	/* 
+	 * This returns false if the connection cannot be setup,
+	 * so maybe we should do something with this here...
+	 * however it also blocks the BUFF connections
+	 * so the next bit should fall out anyway!
+	 */
+	ApacheSSLSetupConnection(current_conn);
+#endif
+
 	/*
 	 * Read and process each request found on our connection
 	 * until no requests are left or we decide to close.
@@ -4936,6 +4962,16 @@
 			          (struct sockaddr_in *) &sa_client,
 			          (struct sockaddr_in *) &sa_server, -1);
 
+#ifdef APACHE_SSL
+      /*
+       * This returns false if the connection cannot be setup,
+       * so maybe we should do something with this here...
+       * however it also blocks the BUFF connections
+       * so the next bit should fall out anyway!
+       */
+      ApacheSSLSetupConnection(conn);
+#endif
+
 	while ((r = ap_read_request(conn)) != NULL) {
 
 	    if (r->status == HTTP_OK)
@@ -5243,6 +5279,17 @@
 				          (struct sockaddr_in *) &sa_server,
 				          child_num);
 
+
+#ifdef APACHE_SSL
+	/* 
+	 * This returns false if the connection cannot be setup,
+	 * so maybe we should do something with this here...
+	 * however it also blocks the BUFF connections
+	 * so the next bit should fall out anyway!
+	 */
+	ApacheSSLSetupConnection(current_conn);
+#endif
+
 	/*
 	 * Read and process each request found on our connection
 	 * until no requests are left or we decide to close.
@@ -6279,7 +6326,6 @@
        return -1;
     }
 
-    ap_cpystrn(cwd, ap_os_canonical_filename(pcommands, cwd), sizeof(cwd));
     ap_cpystrn(ap_server_root, cwd, sizeof(ap_server_root));
 
     while ((c = getopt(argc, argv, "D:C:c:Xd:f:vVlLZ:iusStThk:n:")) != -1) {
diff -u -r ../apache_1.3.9/src/main/util_script.c ./src/main/util_script.c
--- ../apache_1.3.9/src/main/util_script.c	Thu Aug 12 18:34:15 1999
+++ ./src/main/util_script.c	Mon Sep  6 16:28:09 1999
@@ -308,6 +308,10 @@
     }
 
     ap_overlap_tables(r->subprocess_env, e, AP_OVERLAP_TABLES_SET);
+
+#ifdef APACHE_SSL
+    ApacheSSLAddCommonVars(r);
+#endif
 }
 
 /* This "cute" little function comes about because the path info on
diff -u -r ../apache_1.3.9/src/modules/standard/mod_log_config.c ./src/modules/standard/mod_log_config.c
--- ../apache_1.3.9/src/modules/standard/mod_log_config.c	Tue Jun 22 00:51:35 1999
+++ ./src/modules/standard/mod_log_config.c	Mon Sep  6 16:28:09 1999
@@ -128,6 +128,15 @@
  * %...l:  remote logname (from identd, if supplied)
  * %...{Foobar}n:  The contents of note "Foobar" from another module.
  * %...{Foobar}o:  The contents of Foobar: header line(s) in the reply.
+ *
+ * Additional SSL directives:
+ *
+ * %...{cipher}c:  cipher used (SSL_get_cipher)
+ * %...{clientcert}c: client certificate information
+ * %...{errcode}c: X509 verify error code
+ * %...{errstr}c: X509 verify error string
+ * %...{version}c: SSL version (SSLeay 0.8.0 and above)
+ *
  * %...p:  the port the request was served to
  * %...P:  the process ID of the child that serviced the request.
  * %...r:  first line of request
@@ -175,6 +184,10 @@
 #include "http_log.h"
 #include <limits.h>
 
+#ifdef APACHE_SSL
+# include <openssl/crypto.h>
+#endif
+
 module MODULE_VAR_EXPORT config_log_module;
 
 static int xfer_flags = (O_WRONLY | O_APPEND | O_CREAT);
@@ -435,6 +448,10 @@
     return ap_psprintf(r->pool, "%ld", (long) getpid());
 }
 
+#ifdef APACHE_SSL
+extern const char *log_ssl_info(request_rec *r, char *a);
+#endif
+
 /*****************************************************************
  *
  * Parsing the log format string
@@ -506,6 +523,9 @@
     {
         'P', log_child_pid, 0
     },
+#ifdef APACHE_SSL
+    { 'c', log_ssl_info, 0 },
+#endif
     {
         '\0'
     }
@@ -682,6 +702,71 @@
     parse_log_item(p, (log_format_item *) ap_push_array(a), &s);
     return a;
 }
+
+#ifdef APACHE_SSL
+const char *log_ssl_info(request_rec *r, char *a)
+    {
+    char str[MAX_STRING_LEN];
+
+    if(!r->connection->client->ssl)
+	return NULL;
+
+    if(!strcmp(a, "cipher"))
+	return SSL_get_cipher(r->connection->client->ssl);
+
+    if(!strcmp(a, "clientcert"))
+	return r->connection->client->szClientX509;
+
+    if(!strcmp(a, "errcode"))
+	if(r->connection->client->nVerifyError)
+	    {
+	    sprintf(str, "%d", r->connection->client->nVerifyError);
+	    return ap_pstrdup(r->pool,str);
+	    }
+	else
+	    return NULL;
+
+    if(!strcmp(a, "errstr"))
+	if(r->connection->client->nVerifyError)
+#if SSLEAY_VERSION_NUMBER < 0x0800
+	    return X509_cert_verify_error_string(r->connection->client->nVerifyError);
+#else
+	    return X509_verify_cert_error_string(r->connection->client->nVerifyError);
+#endif
+	else
+	    return NULL;
+
+#if SSLEAY_VERSION_NUMBER >= 0x0800
+    if(!strcmp(a, "version"))
+	{
+#if SSLEAY_VERSION_NUMBER >= 0x0900
+	switch(r->connection->client->ssl->session->ssl_version)
+	    {
+	case TLS1_VERSION:
+	    return "TLS1";
+
+	case SSL3_VERSION:
+	    return "SSL3";
+
+	case SSL2_VERSION:
+	    return "SSL2";
+
+	default:
+	    return "?";
+	    }
+#else
+	static char v[2];
+
+	v[0]='0'+r->connection->client->ssl->session->ssl_version;
+	v[1]='\0';
+	return v;
+#endif
+	}
+#endif
+    
+    return NULL;
+}
+#endif
 
 /*****************************************************************
  *
diff -u -r ../apache_1.3.9/src/support/apachectl ./src/support/apachectl
--- ../apache_1.3.9/src/support/apachectl	Tue Apr  6 20:36:33 1999
+++ ./src/support/apachectl	Mon Sep  6 16:28:10 1999
@@ -25,7 +25,7 @@
 PIDFILE=/usr/local/apache/logs/httpd.pid
 #
 # the path to your httpd binary, including options if necessary
-HTTPD='/usr/local/apache/src/httpd'
+HTTPD='/usr/local/apache/src/httpsd'
 #
 # a command that outputs a formatted text version of the HTML at the
 # url given on the command line.  Designed for lynx, however other
diff -u -r ../apache_1.3.9/src/support/suexec.c ./src/support/suexec.c
--- ../apache_1.3.9/src/support/suexec.c	Tue Jun 22 00:51:41 1999
+++ ./src/support/suexec.c	Mon Sep  6 16:28:10 1999
@@ -215,7 +215,8 @@
     cidx++;
 
     for (ep = environ; *ep && cidx < AP_ENVBUF-1; ep++) {
-	if (!strncmp(*ep, "HTTP_", 5)) {
+	if (!strncmp(*ep, "HTTP_", 5) || !strncmp(*ep,"HTTPS",5)
+	    || !strncmp(*ep,"SSL_",4)) {
 	    cleanenv[cidx] = *ep;
 	    cidx++;
 	}
