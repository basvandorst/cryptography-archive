OK, so you've got an SSL server running, but does that mean your system is now
secure?

The answer is a resounding NO, for a number of reasons. The following questions
illustrate some of the problems.

SSL itself may not be secure. People think it is, do you?

Does this code implement SSL correctly?

Have the authors of the various components put in back doors?

Does the code take appropriate measures to keep private keys private? To what
extent is your cooperation in this process required?

Is your system physically secure?

Is your system appropriately secured from intrusion over the network?

Who do you trust? Do you understand the trust relationship involved in
certificates? Do your system admins?

Are your keys, and keys you trust, generated sufficiently carefully to avoid
reverse engineering of the private keys?

How do you obtain certificates, keys, and the like, securely?

Can you trust your users to safeguard their certificates?

If you can't answer these questions to your satisfaction, then you have a
problem. Even if you can, you may not be secure. Don't blame me if it all
goes horribly wrong.

[references to useful documentation solicited for this space]

Ben Laurie <ben@algroup.co.uk>
