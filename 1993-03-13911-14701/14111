Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!usc!sol.ctr.columbia.edu!eff!news.oc.com!utacfd.uta.edu!rwsys!sneaky!gordon
From: gordon@sneaky.lonestar.org (Gordon Burditt)
Subject: Re: Permanent signatures for pictures
Message-ID: <C3rDK4.JMK@sneaky.lonestar.org>
Organization: Gordon Burditt
References: <C3nHAv.GCF.1@cs.cmu.edu>
Date: Fri, 12 Mar 1993 04:23:59 GMT
Lines: 119

>> Dow Jones has 10,000 customers, 20 of whom are in a conspiracy to steal
>> and re-sell the newswire.  Can Dow Jones detect the thieves and cancel
>> their subscriptions?

>Here are the strategies I've considered.  Assume that Dow Jones adopts
>a scheme where "tagging the text" equals "twiddling a bit" equals
>"substituting a synonym."  Also assume that the thieves are unwilling
>to do wholesale word rearrangement; they rely on detecting which
>changes Dow Jones has made and cancelling them out somehow.

Assumption:  the thieves do not do their own synonym generation.
Whatever variation was sent out in the pirate feed, it was a version 
that got sent out to some Dow Jones customer.  Dow Jones could easily 
detect if the thieves are doing this by seeing variations that they 
didn't send out anywhere.  A key here is to have plenty of opportunities
to use synonyms in the feed that they don't use.

>  Dow Jones strategy:  twiddle some bits with probability 0.5+/-epsilon.
>     If the thieves use majority vote, each thief will have a reasonably
>     high correlation with the output bits.
>  Thief countermeasure:  reliably detect which bits are being twiddled
>      (by cross-checking between, say, 64 different subscriptions)
>      and flip a fair coin to determine the output.

If you can force the thieves to buy 44 new subscriptions, are you
really sure you WANT to catch them?  I'm assuming that there is some
low limit to the number of co-conspirators and dupes whose feeds are
being used by the thieves.  If they can intercept ALL the subscriptions
before sending out their pirate feed, they're safe.  But what good is
a month-delayed pirate feed - it's going to take a long time to
get all that data together and compare it.

Let N = the number of subscribers.
Let C = the number of conspirators.

My approach:  do bit-twiddling with a wide variety of probabilities,
between 0.5 and 1/N.  Compute an "Index of Suspicion" for each 
subscriber.  Each time a variation appears in the pirate feed,
check the probability of that particular variation (which is between
0 and 1), and add 1/p to the "Index of Suspicion" for all subscribers
who received that version.  The average value of the "Index of Suspicion"
for all subscribers is the number of variations counted (this is exact).
I claim that the "Index of Suspicion" for the thieves will go up, on
the average, by more than one per variation.

Note:  some assumptions might be made about the thieves, which can
be used to advantage.  For instance, some variations might be distributed
on the basis of geography, or the type of business the subscriber 
is in, or other demographics.  If you can get 10% of the feeds in one
group to cover 50% of the thieves, you can catch them faster.

>  Thief countermeasure:  reliably detect which bits are being twiddled
>      (by cross-checking between, say, 64 different subscriptions)
>      and flip a fair coin to determine the output.
For the p = 0.5 variations, this would work, except for the rare
case where they miss a variation since none of the feeds got a copy of
it.  Then all of the thieves match the pirate feed, and each Index
of Suspicion would go up by 2.  Eventually, this would accumulate.

For the very small p variations (p < 1/C) half the time they'd select 
the rare variation, and the average Index of Suspicion for at
least one thief would go up by 1/p, which makes the average for
all thieves go up 1/(p*C) at least, and since p < 1/C, this is greater 
than 1.  This has the potential for sticking out like a sore thumb, 
especially if this variation was only sent to one person.  Sometimes 
they'd miss the variation entirely, if none of the thieves got it.  

>  Thief countermeasure:  use a majority vote.

The thieves fail to send out virtually all of the low-probability
variations.  1/.99 added to the Index of Suspicion isn't a lot,
but it will build up steadily over lots of cases.

Thief countermeasure:  choose a feed at random for each variation,
also known as choosing a variation at random but in proportion to
its appearance in the sampled feeds.

You'll still miss variations entirely, and evidence will accumulate
over time.

>  Dow Jones strategy:  hybrid of the two.
>  Thief countermeasure:  hybrid of the two.  Flip a coin if the vote is 
>       fairly even, go with the majority if the vote is uneven.  For
>       example, get 64 subscriptions, go with the majority vote if 
>       fewer than 16 dissenters, flip a fair coin otherwise.
>
>This last strategy is the one I can't beat.

All of the combinations of the probabilities (1/2 vs. low) and the
countermeasures (majority vote vs. coin flip) leak information
eventually.  To help it along, make sure there are some variations
with intermediate probabilities, like 1/3 or 0.45, in addition to
the 1/2 and rare ones.

Dow Jones is also allowed to use an adaptive strategy.  Use the Index
of Suspicion for a while.  Then start sending another set of variations
to, say, various combinations of the Top 50 on the Index of Suspicion
list.  Having a bunch of variations sent out to 1% of the subscribers
persistently show up in the pirate feed (the thieves think it's the
majority version) is pretty damning in court.  If the thieves ever
use a variation given to only one subscription, one of them has
been nailed.  Then you can use that knowledge to manipulate the
frequencies of variations that the conspirators see.

Another method which can be simultaneously used (with the same data), 
but I'm not sure how long it would take to work:  Compute all subsets 
of N subscribers that contain less than some maximum number of 
co-conspirators.  When a variation is seen in the pirate version, 
eliminate all subsets of subscribers for which nobody in the subset 
was given the version that was pirated.  Eventually you eliminate 
a few people entirely, and some people show up a lot in the remaining
combinations.  The reverse also works:  you accumulate a lot of
"there is at least one thief in this group" sets, and given a
maximum number of co-conspirators, you get a pretty good idea
of some of them.


					Gordon L. Burditt
					sneaky.lonestar.org!gordon
