Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!howland.reston.ans.net!newsserver.jvnc.net!yale.edu!ira.uka.de!news.dfn.de!rzsun2.informatik.uni-hamburg.de!fbihh!bontchev
From: bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Cracking RSA?
Message-ID: <bontchev.732724273@fbihh>
Sender: news@informatik.uni-hamburg.de (Mr. News)
Reply-To: bontchev@fbihh.informatik.uni-hamburg.de
Organization: Virus Test Center, University of Hamburg
References: <strnlghtC48L39.D5@netcom.com>
Date: Sun, 21 Mar 1993 14:31:13 GMT
Lines: 79

strnlght@netcom.com (David Sternlight) writes:

> As I understand it, RSA key pairs are unique. That is, for every public key
> there is a private key that will decrypt it.

Correct.

> Suppose some organization with the money and facilities sets themselves the
> task of generating all possible RSA key pairs of, say, length 512. The put a
> machine to work doing nothing but generating such key pairs. They then store
> them on a huge disk or big reels of tape.

512 -what-? 512 bits? 512 decimal digits? Length of what? Of the
moduli or of the primes that construct them?

Anyway, I don't recall the exact formula right now (was something like
Pi(x)/Li(x)), but let's suppose that we are using 512-bit primes (that
is, 1024-bit keys, like the one I am using). Then, according to the
answer 2.11 of the RSA FAQ (which you have not read, of course), there
are more than 10^150 prime numbers with length of 512 bits or less.
And you must try all of them, in order to factor a 1024-bit number by
trial and error.

> Cracking messages then becomes trivial. They simply look up the
> corresponding secret key to any given public key on their list, and read
> everything.

Trivial? Bullshit. How do you "simply look up" in a table of 10^150
entries? This more than the number of atoms in the known Universe.

> How many such key pairs are there? How long would it take to generate them
> all, given today's best, fastest machine working full time? Recall that this

How fast machine? Do you know how big 10^150 is? Let's take as a unit
the time used by the light to travel a distance, equal to the diameter
of the proton (yes, there are quanum problems in speaking about the
diameter of an elementary particle, but let's ignore that). Then, the
age of the currently known Universe is about 10^80 such "units". This
number is 10^70 TIMES less than 10^150. So, how fast do you want your
machine to be? :-))

> need only be done once, and one could have started doing it when the RSA
> algorithm was first announced. Since the algorithm for generating key pairs
> is fixed, assume a special-purpose machine with the key generation algorithm
> on silicon, if that makes it faster.

Yes, yes, much faster. :-))) Like one million times faster. One
millionth of 10^150 is "only" 10^144. Good luck.

> How much storage space would it take to store all such key pairs?

Even if you store one number in each elementary particle in the known
Universe, you'll run out of particles before you run out of numbers!

> With a smart data look up algorithm, of the sort used for big data bases,
> how long would it take to look up a particular secret key corresponding to a
> given public key?

For all practical purposes, you can assume that it will take
forever... :-)

> Depending on the answers, just how secure is RSA really against this kind of
> attack, which is independent of message length, known plaintext, brute force
> work on particular messages, etc. etc.?

Attacking RSA by brute force factoring is the most silly way to attack
it. The algorithm has a complexity of O(sqrt(N)), where N is the
number to be factored. There are MUCH, MUCH faster algorithms, but
even they are not able to factor even a 512-bit key, let alone a
1024-bit one. Probably even 384-bit keys are above the limit of the
current technology...

Regards,
Vesselin
-- 
Vesselin Vladimirov Bontchev          Virus Test Center, University of Hamburg
Tel.:+49-40-54715-224, Fax: +49-40-54715-226      Fachbereich Informatik - AGN
< PGP 2.1 public key available on request. > Vogt-Koelln-Strasse 30, rm. 107 C
e-mail: bontchev@fbihh.informatik.uni-hamburg.de    D-2000 Hamburg 54, Germany
