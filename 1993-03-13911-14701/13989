Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!spool.mu.edu!cass.ma02.bull.com!pluto.uk03.bull.co.uk!bbirch
From: bbirch@hemel.bull.co.uk (Bill Birch)
Subject: Beginner Question: Combinations for Encryption ?
Message-ID: <1993Mar5.134352.5050@uk03.bull.co.uk>
Sender: @uk03.bull.co.uk
Nntp-Posting-Host: brno
Organization: Bull HN UK
Date: Fri, 5 Mar 93 13:43:52 GMT
Lines: 64


I'm wondering if there has been any encryption methods based 
on combinations of random data. My idea is as follows:

To encrypt a msg M of length L, add each character of the 
message (modulo W) to the corresponding character out of a key-text 
K of the same length. Where W = 2^N where N is the number 
of bits per character. This results in the encrypted message
X of length L. ie character X[j] = M[j] + K[j]

To generate the key-text for each message, we choose P blocks of
random data from a database (size S*L characters), each block 
having the same length as the message. We add every character 
of every block together ,modulo W . 

	K[j] = block-0[j] + block-1[j] + ... + block-P[j] 

The sender and receiver therefore need access to the same database
of random data, and knowledge of the adresses of the P blocks
used to encrypt the message. Decryption would be the inverse
of encryption.

The number of possible combinations of P blocks taken from S
can be very large. After a certain number of messages have been sent
with a particular database, it would be discarded.

Databases can be constructed secretly (in which case the method
is just a compicated one-time pad), or else databases can be constructed
from public domain data (CD_ROMS, Internet traffic, ftp sites, etc). Public
domain data would need to be processed to remove any redundancy.
Public domain data would have a very large S indeed.

The strengths seem to be :

	Brute force approaches would be slowed down by the requirement
	to access databases of keydata, incurring disk access times.

	Encryption/decryption should be fast, since simple maths is used.

Weaknesses: 

	Complicated keys.

	Large keydata is required P*L.

I'm attempting to describe a kind of one-time pad system crossed with a 
Beale cipher here. The problem is that I don't see how to calculate
the weakness of the system, nor when to change databases. 

Any help gratefully received, (by email since this is a beginner
question, please.)

Bill




--
 Bill Birch             	|	B.Birch@uk03.bull.co.uk
 Bull Info. Sys. Ltd.   	|       Bull Tel: 773 4770
 Maxted Road,         		|	Bull Mail: HM14 UK03 
 Hemel Hempstead,        	|	Tel: +44 442 884770
 HERTS, HP2 7DZ, U.K.         	|	Fax: +44 442 884570
                Aviate, Navigate, Communicate...
