Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!howland.reston.ans.net!agate!ames!purdue!yuma!ld231782
From: ld231782@LANCE.ColoState.Edu (L. Detweiler)
Subject: Re: NP Complete SAT + one-time pad = great cypher?
Sender: news@yuma.ACNS.ColoState.EDU (News Account)
Message-ID: <Mar29.193018.89523@yuma.ACNS.ColoState.EDU>
Date: Mon, 29 Mar 1993 19:30:18 GMT
References: <Mar29.071822.49233@yuma.ACNS.ColoState.EDU>
Nntp-Posting-Host: dolores.lance.colostate.edu
Organization: Colorado State University, Fort Collins, CO  80523
Lines: 33


oops!

errata: I did a switch midstream in my last msg on the plaintext. To fix, 
let's say what I meant was that the plaintext is 

plaintext: 100 

and "that means the sender successively generates one clause instance that 
is (say) satisfied by the key, and two not."  (That "(say)" means that we
could also have unsatisfied represent 1 and satisfied 0. But I will adhere
to the first convention.)

Finally, I've been thinking that this cypher may have some properties that
make statistical analysis easier.  When a bit is zero to be sent, that
means that all the generated clauses must exactly be "not" whatever the
variable in the key is at that position, to be unsatisfied. On the other 
hand, if a bit is one, there is more flexibility. Hence there seems to 
be a bit of a lack of symmetry.

I guess this would totally destroy the original intent of the approach
(using the SAT form) but another idea to explore is to have the 
receiver do an XOR (instead of an OR) of the variables named by the sender,
and the 'true' or 'false' result is the communicated bit.  It seems like
the random NOT of various variable references from the sender should be 
present to significantly increase the difficulty of analysis.  This all
seems to be more symmetric than the OR form, and hence possibly harder
to break.


--

ld231782@longs.LANCE.ColoState.EDU
