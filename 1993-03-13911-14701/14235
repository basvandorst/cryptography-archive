Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!saimiri.primate.wisc.edu!caen!uunet!tis.com!mjr
From: mjr@tis.com (Marcus J Ranum)
Newsgroups: alt.security.pgp,alt.security.ripem,sci.crypt
Subject: Re: pgp 'stacker' equivalent
Date: 18 Mar 1993 03:21:27 GMT
Organization: Trusted Information Systems, Inc.
Lines: 16
Message-ID: <1o8prnINNkg3@sol.tis.com>
References: <C3r46w.Do8@dscomsa.desy.de> <1993Mar12.021524.19620@ucsu.Colorado.EDU> <C3s4F4.19v@morwyn.uucp>
NNTP-Posting-Host: sol.tis.com
Xref: msuinfo alt.security.pgp:1824 alt.security.ripem:161 sci.crypt:14235

>Would be great, but I doubt you could make something like this for UNIX,
>without a lot of work... and I mean a LOT.

	Hmmmm, perhaps not as hard as you might think. On UNIXes like
ULTRIX, which permit joe user to NFS-mount filesystems onto directories
they own, you could fairly easily add encryption to "unfsd". Unfsd
runs as a user-mode NFS file server. With ULTRIX, at least, you can
specify the IP port of the NFS service - thus running your own NFS
service is quite easy. I suspect it'd be a weekend's work to add
code such that when unfsd fires up, it asks for the password for a
volume, and then you NFS mount the volume once you've unlocked it.
Ugly, but - possible. Even works over a network. You'd want to add a
few calls to the RPC services to allow starting it and shutting it
down and re-keying it, etc.

mjr.
