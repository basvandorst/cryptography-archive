Newsgroups: sci.crypt,alt.binaries.pictures,comp.security.misc,sci.image.processing
Path: msuinfo!caen!sdd.hp.com!zaphod.mps.ohio-state.edu!cs.utexas.edu!torn!nott!uotcsi2!news
From: cbbrowne@csi.uottawa.ca (Christopher Browne)
Subject: Re: Permanent signatures for pictures
Message-ID: <1993Mar4.143512.12067@csi.uottawa.ca>
Sender: news@csi.uottawa.ca
Nntp-Posting-Host: prgt
Organization: Dept. of Computer Science, University of Ottawa
References: <1993Mar4.033734.29477@oracle.us.oracle.com>
Date: Thu, 4 Mar 93 14:35:12 GMT
Lines: 56
Xref: msuinfo sci.crypt:13974 alt.binaries.pictures:5022 comp.security.misc:2797 sci.image.processing:2145

In article <1993Mar4.033734.29477@oracle.us.oracle.com> mfriedma@us.oracle.com (Michael Friedman) writes:
>First off, thanks for the advice on cryptography for document
>distribution.  Some perfectly adequate solutions were posted, so I
>won't beat a dead horse.
>
>Now, here's another question...
>
>Say I was selling scanned images from Playboy.  (Playboy is chosen as
>an example.  There is no deal to do this.)  
>
>Based on past experience, I expect them to be copied, placed on public
>FTP sites, etc.   
>
>Copy protection is pretty worthless.
>
>Is there any way that I can add a customer ID to every picture I sell
>that will have little or no impact on picture quality but will not be
>removable by the customer without seriously degrading picture quality?
>That way I can't prevent pictures from being given away, but I can cut
>that customer off or even sue him.
>
>I've been playing arround with ideas involving flipping a small number
>of randomly chosen bits and comparing with the original.  Of course,
>that still leaves me vulnerable to a comparison attack where someone
>gets hold of two copies of the same picture that were sold to
>different customers and compares them.

Yup, problem.  The point to most of the crypto/hashing methods is that
you can compare ciphertext to ciphertext, and perhaps never actually
HAVE the plaintext.

When you need the plaintext in order to display the picture on the
screen, it's a problem.  Using a TSR or a "real" second process, the
plaintext can then be "stolen."  It's not a big problem with library
databases, since they've got lots of structure, and only a small
number of entries could be grabbed at a time.  

A binary image that gets dumped to the screen is pretty hard to hide.

>Another idea is to flip bits
>in frequency space, but that has the same problem.  Perhaps flipping
>bits in the original and in frequency space?  Even if I do this, will
>the information be recoverable if the customer uses lossy compression?
>I doubt it. 

I hadn't thought of lossy compression, but that's certainly going to
be a useful way of "killing" the original signature.  And when there
are parameters that tell how "lossy" the compression can be, it's
going to be virtually impossible for the vendor to PROVE that a
particular image came from a specific source.

-- 
Christopher Browne                |     PGP 2.0 key available
cbbrowne@csi.uottawa.ca           |======================================
University of Ottawa              | Genius may have its limitations, but
Master of System Science Program  | stupidity is not thus handicapped.
