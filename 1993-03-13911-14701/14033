Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!pacific.mps.ohio-state.edu!cis.ohio-state.edu!news.sei.cmu.edu!bb3.andrew.cmu.edu!crabapple.srv.cs.cmu.edu!mnr
From: Marc.Ringuette@GS80.SP.CS.CMU.EDU
Subject: Re: Permanent signatures for pictures
Message-ID: <C3LEs8.DrH.1@cs.cmu.edu>
Originator: mnr@GS80.SP.CS.CMU.EDU
Sender: news@cs.cmu.edu (Usenet News System)
Nntp-Posting-Host: gs80.sp.cs.cmu.edu
Organization: School of Computer Science, Carnegie Mellon
Date: Mon, 8 Mar 1993 22:39:00 GMT
Lines: 73

> Is there any way that I can add a customer ID to every picture I sell
> that will have little or no impact on picture quality but will not be
> removable by the customer without seriously degrading picture quality?

I've been thinking on this question recently in the context of tagging text.
Let's say Dow Jones wants to sell newswire subscriptions to individuals,
but someone is anonymously forwarding their articles to a newsgroup.  Can
they succeed in tagging the text to detect the thief?

Short answer:  yes!  The tagger can succeed in detecting the taggee,
and can even succeed in detecting a large number of thieves in collusion.

Plea:  does anyone know of a reference on this?  I haven't found one.

---

There are two issues which must be addressed in order to show that
the tagger wins:

  1.  The taggee must not be able to "smooth away" all tag bits.
  2.  The taggee must not be able to cross-correlate multiple copies
      of the data in question in order to produce a "clean" version.

I don't really address issue #1 here, except to say that it's not too hard.
The basic techique is to alter a few bits in your image/text which are
important enough that your opponent can't afford to randomize ALL such bits.
In the case of text, small changes in word choice are a good candidate.
I'll leave the image case for someone else to deal with, but it shouldn't
be a major problem in my opinion.

---

Issue #2 is a bit more subtle.  An excellent way for the thief to
combat tagging is to get multiple copies of the tagged text/picture and
compare them to detect the tag bits.  I can defeat this, but it takes
a bit of analysis.

Here's the scenario in the textual case:

  Dow Jones has 10,000 customers, 20 of whom are in a conspiracy to steal
  and re-sell the newswire.  The 20 thieves take a majority vote on the
  value of each bit which differs between their 20 copies, making a
  "clean" copy which they re-sell.  

Can Dow Jones detect the 20 thieves and cancel their subscriptions?
How many tag bits must Dow Jones insert in order to detect the thieves?

Assume that each tag bit is assigned by flipping a different coin for
each subscriber.  The probability of the tag bit on a thief's
subscription matching the redistributed copy is going to be slightly
greater than 50%; in fact, it will exceed 50% by approximately the
chance of a tie vote among the thieves, which is about 0.8/sqrt(N)
where N is the number of thieves.  (The computation is a little hairy).

This comes out to a probability of 0.68 in the case of 20 thieves.  
So with only a few hundred tag bits, Dow Jones can detect all of the
thieves with high probability even when they correlate their results,
because each thief's tag bits will match 68% of the tag bits on the
redistributed copy, while each legitimate subscriber will match 50%.
Increasing the number of thieves isn't going to be effective, because
the probability only decreases with the square root of that number.

There are other strategies for the thieves, but I believe that all of
these can be defeated.  The main one I'm thinking of is replacing the
majority vote with a coin flip. This technique can be easily defeated 
by using tag bits which are assigned with probabilities other than 1/2.


I'd appreciate any references to work on this subject.


-- Marc Ringuette (mnr@cs.cmu.edu)

