Path: msuinfo!uwm.edu!wupost!darwin.sura.net!haven.umd.edu!news.umbc.edu!elang01.acslab.umbc.edu!olson
From: olson@elang01.acslab.umbc.edu (Mr. Bryan G. Olson; CMSC (G))
Newsgroups: sci.crypt
Subject: Re: Quadratic residue algorithm
Date: 3 Mar 1993 00:40:27 GMT
Organization: University of Maryland, Baltimore County
Lines: 37
Distribution: world
Message-ID: <1n0uprINNert@news.umbc.edu>
References: <1993Mar1.205705.22290@cs.utwente.nl>
NNTP-Posting-Host: elang01.acslab.umbc.edu
Keywords: quadratic residue

In article <1993Mar1.205705.22290@cs.utwente.nl>, joosten@cs.utwente.nl (Stef Joosten) writes:
|> Question:
|>   Does there exist an algorithm to decide whether an integer r is
|>   a quadratic residue for a given modulus m?
|>   Or, to be more specific, let a predicate QuadRes(r,m) be defined
|>   for any two positive natural numbers r and m (r<m) by:
|> 
|>     QuadRes(r,m) <=> exists x: (x^2) mod m = r
|>     

	QuadRes is one of the classic hard problems in number theory.  The basic answer 
is that there is no known polynomial time (in the length of m) algorithm for computing 
QuadRes(r,m).


	As noted by others, there is the Legrange symbol, which I will denote L(r,p),
which is defined only if p is an odd prime, r>1, by:
	L(r,p)=  0 if p divides r,
		 1 if r is a quadratic residue of p
		-1 if r is a quadratic nonresidue of p

The Jacobi symbol, which I will denote J(r,m), is defined for any odd m.
	J(r,m)= L(r,m) if m is prime,
	J(r,m1*m2) = J(r,m1)*J(r,m2).

The Jacobi is efficiently computable, but does not always tell us QuadRes(r,m).
Specifically, for r to be a quadres of m, it must be a quadres of all the factors
of m.  If J(r,m)=-1 then r is definitely not a quadres of m.  If J(r,m)=1, then you can
only tell in the case when m is prime.  Thus f you know the factors of m, QuadRes(r,m)
is easy to find. 

I do not know if anyone has proven that the time complexity of QuadRes is within a
polynomial factor of factoring (it is certainly no harder).  If anyone knows, please 
post a reference or, even better, a proof.

Bryan Olson
olson@umbc.edu
