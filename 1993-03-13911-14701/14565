Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!spool.mu.edu!agate!linus!linus.mitre.org!gauss!bs
From: bs@gauss.mitre.org (Robert D. Silverman)
Subject: Re: Cracking RSA?
Message-ID: <1993Mar27.131208.26086@linus.mitre.org>
Sender: news@linus.mitre.org (News Service)
Nntp-Posting-Host: gauss.mitre.org
Organization: Research Computer Facility, MITRE Corporation, Bedford, MA
References: <9303260553.AA17795@pizzabox.demon.co.uk>
Date: Sat, 27 Mar 1993 13:12:08 GMT
Lines: 83

In article <9303260553.AA17795@pizzabox.demon.co.uk> gtoal@gtoal.com (Graham Toal) writes:
:: From: bs@gauss.mitre.org (Robert D. Silverman)
::  
:: Noone factors big primes. It is a waste of time. That is why they are called
:: *primes*.
:
:Yes, yes, very amusing; we've had that joke already.  Anyway I was clearly
:talking about attempts to factor pseudo-primes that may or may not have
:really been prime.
:
:: >of these 'probably' prime numbers and tried to factor them, to get
::  
:: No, because such an exercize would be pointless. One can PROVE that
:: 256 bit numbers are prime using (essentially) the Cohen-Lenstra
:: algorithm in just a few minutes on any Sparcstation.
:
:This is what I have trouble understanding.  OK, I admit it, I'm thick, I
:don't follow the maths, and you're probably frustrated at explaining
:something you see as self-evident; but I just don't trust something that
:says a number is prime if it can't actually perform the factorisation
 
WHY????

Proving a number prime is a lot less work than exhibiting the cofactors
of a composite number. 

You say on one hand you don't follow the math and then you say you don't
trust the algorithms.  It is likely you do not follow the math behind
structural analysis codes and these are used to design bridges. Does that
mean you will not use a bridge because you did not understand the math
that designed it??

I'm not trying to flame, I just don't understand your objections.

:in the cases where it isn't. [Clearly they can't or they'd be able to
:factorise RSA products]
:
:OK, let me reverse my 'engineering test' suggestion so that it doesn't
:involve superhuman effort in factorising large numbers.  Let's *start off*
:with two large known primes, and multiply them together.  I'll even let
:you pick the known primes with your clever testing methods if you like.
:
:If we take pairs of 128-bit primes and multiply them together, and feed
:the results through these primality algorithms, what percentage of
:products will be flagged as apparently prime?  You appear to be saying
 
Zero. These methods PROVE when numbers are prime and ALWAYS tell you
when numbers are composite.

:0% for the Cohen-Lenstra algorithm, and an *extremely* small percentage
:for the other probabilistic algorithms.
 
Yes. This is correct.

:Would you humour me please (if it isn't too big a job) and run a few
:hundred thousand products of large primes through pgp's test and
:tell us the results please?  Say, more tests than there are ever likely
 
Why should I indulge in this pointless exercize? It would be a waste
of computer time. If you need to run such tests to improve *your*
confidence, then by all means go ahead and run them. Or better yet!
Learn the math behind the algorithms! Then you will understand why
they work. 

:to be pgp users out there...  That would make me feel much more secure
:about pgp's prime number testing.
 
I do not have pgp's code. I have my own code. I do not know all the
details of the methods pgp is using. In any event, if someone handed
me primes to be used as a key, I would be sure to run my own tests
on them anyway.

:I hope you're not tired of me harping on about this; it's just the only
:bit of pgp that I can't verify for myself and a practical confirmation
:of the theory would help set my mind at ease.
 
How much are you willing to pay me to do this work for you? 

--
Bob Silverman
These are my opinions and not MITRE's.
Mitre Corporation, Bedford, MA 01730
"You can lead a horse's ass to knowledge, but you can't make him think"
