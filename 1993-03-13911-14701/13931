Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!howland.reston.ans.net!agate!doc.ic.ac.uk!uknet!yorkohm!minster!george
From: george@minster.york.ac.uk
Newsgroups: sci.crypt
Subject: XOR + CRC for authentication?? Any good?
Message-ID: <731008188.11802@minster.york.ac.uk>
Date: 1 Mar 93 17:49:48 GMT
Organization: Department of Computer Science, University of York, England
Lines: 38

I've been looking at CRC's used for burst error detection
recently and was wondering how good they would be for
constructing a message digest. If message is N bits, and
CRC primitive polynomial is M bits, then a CRC should
uniquely identify 2^(N-M) messages.

To provide secrecy, I thought about non-linearly transforming
the original message by XORing it with a random key which is
either repeated as needed to match the length of the message,
or else is used as a seed to a pseudo-random bit generator
to produce a bit sequence also N bits long which is XORed with
the message.

This transformed message (weakly encrypted) is then put through
the CRC algorithm to produce the MAC. Note that this is only for
authentication, not for encryption of the actual message since
XORing is not strong.

For someone to be able to issue authenticated messages, they
would have to find the key. However, reversing the CRC is
not computationally feasible since there are 2^(N-M) possibilities,
and so knowledge of the MAC and the plaintext is not particularly
helpful.

i.e.   Message M -> XORed Message M'     (1-to-1 mapping)
       M' -> CRC algorithm -> A .. the MAC    (2^(N-M)-to-1 mapping)

Note that the primitive polynomial is not assumed to be secret,
only the key.

Have I missed something, or is this approach to generating
a MAC reasonably secure??? The alternative would seem to be
using a CRC on the message M, and then encrypting the CRC
using a strong encryption algorithm such as DES. However,
applying a weak encryption and then a CRC (many-to-one function
would do) would seem much more preferable!

Thanks for any comments - George Bolt
