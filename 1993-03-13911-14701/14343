Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!rpi!usc!elroy.jpl.nasa.gov!decwrl!csus.edu!netcom.com!strnlght
From: strnlght@netcom.com (David Sternlight)
Subject: Cracking RSA?
Message-ID: <strnlghtC48L39.D5@netcom.com>
Organization: DSI/USCRPAC
Date: Sun, 21 Mar 1993 11:25:56 GMT
Lines: 38


I'd be very interested in calculations and comments about the following:

As I understand it, RSA key pairs are unique. That is, for every public key
there is a private key that will decrypt it.

Suppose some organization with the money and facilities sets themselves the
task of generating all possible RSA key pairs of, say, length 512. The put a
machine to work doing nothing but generating such key pairs. They then store
them on a huge disk or big reels of tape.

Cracking messages then becomes trivial. They simply look up the
corresponding secret key to any given public key on their list, and read
everything.

How many such key pairs are there? How long would it take to generate them
all, given today's best, fastest machine working full time? Recall that this
need only be done once, and one could have started doing it when the RSA
algorithm was first announced. Since the algorithm for generating key pairs
is fixed, assume a special-purpose machine with the key generation algorithm
on silicon, if that makes it faster.

How much storage space would it take to store all such key pairs?

With a smart data look up algorithm, of the sort used for big data bases,
how long would it take to look up a particular secret key corresponding to a
given public key?

Depending on the answers, just how secure is RSA really against this kind of
attack, which is independent of message length, known plaintext, brute force
work on particular messages, etc. etc.?

David
-- 
David Sternlight         Great care has been taken to ensure the accuracy of
                         our information, errors and omissions excepted.  


