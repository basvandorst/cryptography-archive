Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!usc!howland.reston.ans.net!agate!linus!linus.mitre.org!gauss!bs
From: bs@gauss.mitre.org (Robert D. Silverman)
Subject: Re: Cracking RSA?
Message-ID: <1993Mar26.173501.26588@linus.mitre.org>
Sender: news@linus.mitre.org (News Service)
Nntp-Posting-Host: gauss.mitre.org
Organization: Research Computer Facility, MITRE Corporation, Bedford, MA
References: <PCL.93Mar25103457@rhodium.ox.ac.uk> <1993Mar26.124149.28546W@lumina.edb.tih.no> <C4I8ny.GEF@telebit.com>
Date: Fri, 26 Mar 1993 17:35:01 GMT
Lines: 48

In article <C4I8ny.GEF@telebit.com> phr@telebit.com (Paul Rubin) writes:
:ketil@edb.tih.no (Ketil Albertsen,TIH) writes:
:
:>But: For a 256-bit number to be usable as part of an RSA key, it must be
:>*known* to be a prime, right? There are certainly not 6.5e74 *known*
:>primes in 256 bits or less. So how many known ones are there?
:
:>Well, not the exact count, but of what magnitude is it? I would be 
:>surprised if there are more than can be stored on a medium-sized disk,
:>but I may be wrong. If a common man is to make himself a new key, he
:>won't start out factoring 256-bit numbers, he will pick from a book of
:>published primes and form a product of these - or am I wrong? 
:
:Yes, you're wrong.  The number of primes less than N is
:approximately N/ln(N).  This is the famous "prime number theorem"--
:see any book on number theory.
:
:The prime number theorem tells us that the number of 256 bit primes is
:2^256/ln(2^256) = 2^256/(256 ln(2)) = 8*10^71 or so.
:
:Of course there are not that many *known* primes; but given any number
:N, you can efficiently test whether N is prime.  So the idea is to
:generate brand new primes every time you want a new key.  If you
:generate a odd random number R and start testing R,R+2,R+4,... until
:you find a prime, you will have a prime that is infinitesimally likely
 
A minor correction. You would, of course, never want to test R, R+2,
AND R+4 with Miller-Rabin since one of these MUST be divisible by 3.

The way one searches for primes in practice is as follows:

Select a size for your prime and select a random odd integer of that
size. Call this number S.  Now, for a fixed set of small primes p_i
(say the primes up to 100K or so) compute S mod p_i for each
of these primes.  Then, starting at S, sieve out these primes 
over some interval [S, S+M]  for M of your choice (M = several
times the size of your largest p_i is a good choice).  Now
one tests the numbers that survive the sieve for primality.

Sieving out the small primes is SO fast that it is very worthwhile
to do. You will eliminate a lot of candidates far more quickly than
you can with (say) Miller-Rabin.
 
--
Bob Silverman
These are my opinions and not MITRE's.
Mitre Corporation, Bedford, MA 01730
"You can lead a horse's ass to knowledge, but you can't make him think"
