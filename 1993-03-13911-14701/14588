Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!wupost!uunet!pipex!demon!gtoal.com!gtoal
Newsgroups: sci.crypt
From: gtoal@gtoal.com (Graham Toal)
Subject: Re: Cracking RSA?
Date: Sat, 27 Mar 1993 04:02:17 +0000
Message-ID: <9303270402.AA02871@pizzabox.demon.co.uk>
Sender: usenet@demon.co.uk
Lines: 51

:You need to get thin, then. Go study the algorithms (there are more than
:one) for testing primality. They all have accompanying mathematical proofs.
:What you're saying is akin to somebody complaining "I just don't understand
:how this cosine thing lets you measure the distance to the moon. I'd feel
:much better if you ran a tape measure out there and made sure."

I got as far as second-year maths at university; I'm not a complete
dummy - I just can't get my head round these primality things. I'm
sure I'm not alone; I'm probably just one of the few people here who
aren't embarrassed to admit their limitations.

:Running a few hundred thousand candidates through a test, as you propose,
:is no proof of the validity of an algorithm. If you test n cases, the n+1
:case could be the clinker. The only way to be sure empirically would be
:to test n+1 cases, and you can see where that leads <grin>

Obviously, I realise that yes; it's the same problem as 'verifying' chips
or programs by shoving lots of test vectors through them.  Doesn't prove
anything.  However if any of those n cases _did_ fail it _would_ prove
something.  I've a feeling no-one has ever done it because they all
trust the maths involved.  But some of these proofs can be pretty
tricky; I'm sure incorrect proofs have slipped through before.  And
I *know* incorrect _programs_ have slipped through!

:I suspect you don't really understand the nature of mathematical proofs.
:Such proofs deliver what empirical tests never can: a guaranteed truth.
:I'm not criticizing you, just trying to apprise you of the source of your
:frustration. If you get some foundation in mathematical proofs (a few hours
:study at most), you'll be on the road obtaining confidence in prime generators.

I have confidence with proofs that I understand.  I did enough when I
was an undergrad.  All I'm saying is that I admit I'm not smart enough
to follow these primality tests, so I'd appreciate if someone would
humour me and show experimentally that these tests aren't totally
broken, either by incorrect proofs or bad software implementation - in
particular, the actual implementation used in pgp.

Since I don't understand the proofs I'm not happy at all about implementing
them myself to check them.  I thought it would be a quick 5-minute job
for some of you gurus who handle this sort of code every day.  Clearly
it's either too much work, or it's beneath your dignity.  Oh well, forget
I asked.  It's just another crypto detail I'll have to take on trust.

G
PS Don't follow this up just to pick an argument about the usefulness
and trustworthiness of proofs.  If anyone wants to follow up saying
'OK, I hacked up a quick program and tested 10000 composites of
large primes, and I was astounded that 20 failed the test' (or more
likely none failed, whatever...) then by all means post! I'm not trying
to start an argument about scientific method; I just want someone to
hold my hand and reassure me that my pgp key isn't broken...
