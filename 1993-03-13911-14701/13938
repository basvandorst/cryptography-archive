Path: msuinfo!caen!sdd.hp.com!elroy.jpl.nasa.gov!usc!howland.reston.ans.net!agate!ames!biosci!oracle!unrepliable!bounce
From: mfriedma@us.oracle.com (Michael Friedman)
Newsgroups: sci.crypt,misc.computers.security
Subject: New encryption problem?
Message-ID: <1993Mar1.210532.15134@oracle.us.oracle.com>
Date: 1 Mar 93 21:05:32 GMT
Sender: usenet@oracle.us.oracle.com (Oracle News Poster)
Organization: Oracle Corporation, Redwood Shores CA
Lines: 53
Nntp-Posting-Host: hqsun4.us.oracle.com
X-Disclaimer: This message was written by an unauthenticated user
              at Oracle Corporation.  The opinions expressed are those
              of the user and not necessarily those of Oracle.

I think I have a new encryption problem.

I want to sell information to customers.

Rather than deliver the information to them whenever they make a
purchase I want to deliver all of the information as soon as we
produce it, whether or not they purchase it.  Of course, that means
encrypting it.  Each individual document would need its own key and
each customer would need a different key set from every other
customer.

That leads to a large key-management problem.  If I have 10,000
customers and 1,000,000 documents that's 10e9 keys.  I would like to
solve that problem by having a document master key for each document
and a customer key for each customer.  I want to be able to combine the
document master key and the customer key to produce the key for that
document at that customer.  Needless to say, customers should have no
way of using a collection of the keys we give them to figure out
master document keys and customer keys because they could then decode
documents without paying us.

Finally, I would also like to have a single master customer key for
each customer that could be used to decode any information that they
have.  It should be unique for each customer.  The idea is to have a
trusted third party hold this key just in case something happens to
destroy all of our keys or in case of legal complications.  

So, to summarize,  

I have plain text P1, P2, ... Pn

I want to deliver to customer A the encrypted text Ca1, Ca2, ... Can,
to customer B, Cb1, Cb2, ... Cbn, etc.

I want to have a key for each document, K1 ... Kn, and a key for each
customer, Ka ... Kz.

I want a function, f, such that decrypt(Cxy,f(Kx,Ky)) = Py, but such
that no collection of Cxy, Py, f(Kx,Ky) can be used to generate either
Kx, Ky and so that there is no way to generate f(Kx,Ky) unless you
know Kx,Ky.

Finally, I need a master customer key, MK for each customer, such that
decrypt2(Cxy,MKx) gives me Py. 

The last requirement is not mandatory because I can give customer X a
tape containing the list of keys f(Kx,Ky) as y varies over the set of
documents, but it would be nice.

Any advice?

Thanks
Mike Friedman
