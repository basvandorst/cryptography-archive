Path: msuinfo!uwm.edu!biosci!oracle!unrepliable!bounce
From: mfriedma@us.oracle.com (Michael Friedman)
Newsgroups: sci.crypt,alt.binaries.pictures,comp.security.misc,sci.image.processing
Subject: Re: Permanent signatures for pictures
Message-ID: <1993Mar4.195346.17422@oracle.us.oracle.com>
Date: 4 Mar 93 19:53:46 GMT
References: <1993Mar4.033734.29477@oracle.us.oracle.com> <1993Mar4.143512.12067@csi.uottawa.ca>
Sender: usenet@oracle.us.oracle.com (Oracle News Poster)
Organization: Oracle Corporation, Redwood Shores CA
Lines: 57
Nntp-Posting-Host: hqsun4.us.oracle.com
X-Disclaimer: This message was written by an unauthenticated user
              at Oracle Corporation.  The opinions expressed are those
              of the user and not necessarily those of Oracle.
Xref: msuinfo sci.crypt:13980 alt.binaries.pictures:5036 comp.security.misc:2804 sci.image.processing:2159

In article <1993Mar4.143512.12067@csi.uottawa.ca> cbbrowne@csi.uottawa.ca (Christopher Browne) writes:
>In article <1993Mar4.033734.29477@oracle.us.oracle.com> mfriedma@us.oracle.com (Michael Friedman) writes:
>>First off, thanks for the advice on cryptography for document
>>distribution.  Some perfectly adequate solutions were posted, so I
>>won't beat a dead horse.

>>Now, here's another question...

>>Say I was selling scanned images from Playboy.  (Playboy is chosen as
>>an example.  There is no deal to do this.)  

>>Based on past experience, I expect them to be copied, placed on public
>>FTP sites, etc.   

>>Copy protection is pretty worthless.

>>Is there any way that I can add a customer ID to every picture I sell
>>that will have little or no impact on picture quality but will not be
>>removable by the customer without seriously degrading picture quality?
>>That way I can't prevent pictures from being given away, but I can cut
>>that customer off or even sue him.

>>I've been playing arround with ideas involving flipping a small number
>>of randomly chosen bits and comparing with the original.  Of course,
>>that still leaves me vulnerable to a comparison attack where someone
>>gets hold of two copies of the same picture that were sold to
>>different customers and compares them.

>Yup, problem.  The point to most of the crypto/hashing methods is that
>you can compare ciphertext to ciphertext, and perhaps never actually
>HAVE the plaintext.

>When you need the plaintext in order to display the picture on the
>screen, it's a problem. 

You don't need the plaintext to display the picture on the screen.  If
you only flip a few bits in a large picture the change is undetectable
to the human eye.  You need the plaintext to identify which bits were
flipped, but that isn't a problem because that activity can be done on
a secure computer.

>>Another idea is to flip bits
>>in frequency space, but that has the same problem.  Perhaps flipping
>>bits in the original and in frequency space?  Even if I do this, will
>>the information be recoverable if the customer uses lossy compression?
>>I doubt it. 

>I hadn't thought of lossy compression, but that's certainly going to
>be a useful way of "killing" the original signature.  And when there
>are parameters that tell how "lossy" the compression can be, it's
>going to be virtually impossible for the vendor to PROVE that a
>particular image came from a specific source.

Not really.  Remember - in a civil case all you need is preponderance
of evidence.  You don't need to PROVE anything.

Also, if the compression is lossy enough you don't care if the picture
