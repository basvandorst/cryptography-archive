Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!cs.utexas.edu!uunet!pipex!marble.uknet.ac.uk!mcsun!chsun!bernina!nice!gec
From: gec@nice.usergroup.ethz.ch (Germano Caronni)
Subject: Re: Cracking RSA?
Message-ID: <1993Mar27.015837.2928@bernina.ethz.ch>
Sender: news@bernina.ethz.ch (USENET News System)
Organization: Swiss Federal Institute of Technology (ETH), Zurich, CH
References: <1993Mar26.124149.28546W@lumina.edb.tih.no> <C4I8ny.GEF@telebit.com> <1993Mar26.173501.26588@linus.mitre.org>
Date: Sat, 27 Mar 1993 01:58:37 GMT
Lines: 34

In article <1993Mar26.173501.26588@linus.mitre.org> bs@gauss.mitre.org (Robert D. Silverman) writes:
> 
>The way one searches for primes in practice is as follows:
>
>Select a size for your prime and select a random odd integer of that
>size. Call this number S.  Now, for a fixed set of small primes p_i
>(say the primes up to 100K or so) compute S mod p_i for each
>of these primes.  Then, starting at S, sieve out these primes 
>over some interval [S, S+M]  for M of your choice (M = several
>times the size of your largest p_i is a good choice).  Now
>one tests the numbers that survive the sieve for primality.
>
>Sieving out the small primes is SO fast that it is very worthwhile
>to do. You will eliminate a lot of candidates far more quickly than
>you can with (say) Miller-Rabin.
> 
This way you get probable primes. (Yes, I know, the probability of
the number being prime is BIG) 
But there are ways to generate provable! primes, (in facter faster
than testing the numbers that passed the sieve multiple times for
primality)
i know of at least one paper, describing such a method in detail,
delivering provable primes which satisfy additional conditions RSA
keys impose on them to hinder factorization of the product of two
such primes.

Friendly greetings,

	Germano Caronni



--
prime immaginaire: SQRT(-1)
