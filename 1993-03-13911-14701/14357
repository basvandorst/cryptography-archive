Path: msuinfo!uwm.edu!cs.utexas.edu!zaphod.mps.ohio-state.edu!magnus.acs.ohio-state.edu!csn!ub!acsu.buffalo.edu!boyd
From: boyd@acsu.buffalo.edu (Daniel F Boyd)
Newsgroups: sci.crypt
Subject: Re: The definitions of 'secure'
Message-ID: <C49MLr.6y8@acsu.buffalo.edu>
Date: 22 Mar 93 00:56:14 GMT
References: <1993Mar21.193551.13414@nwnexus.WA.COM>
Sender: nntp@acsu.buffalo.edu
Organization: UB
Lines: 75
Nntp-Posting-Host: autarch.acsu.buffalo.edu

In article <1993Mar21.193551.13414@nwnexus.WA.COM> 
walt@halcyon.com (Walt Hyde) writes:
> But I suggest that practice has the potential of being more forgiving
> than theory. You *might not* have to try them all before you find the
> right one. 

You also might win the lottery!

> Here's a simple analog: I live in an apartment complex with 300
> units. The door keys have 5 pins and 6 pin lengths - the number of
> possible keys is what, 5^6 = 30625 keys? 

No, it's 6^5, which is only 7776.  

But that's only off by about a factor of 4, so never mind; pretend
there are 30625 possible keys.  (6 pins, 5 lengths.)

> I cut 100 different keys at random. I try them out one by one. Move
> on to the next door.  *Probability* says I will not be successful,
> but what if I am?

Your probability of hitting is about .00326.  In other words, your
probability of MISSING is 0.99673.  On the average you'll have to try
211 doors to get a 1/2 chance of opening one.  You have only a 62
percent chance of opening any door in the entire complex, since after
300 doors you've run out of apartments!

Meanwhile you've had to try 100 keys in each door; suppose you're
really nimble-fingered and you can somehow try two keys per second.
300 doors times 100 keys times 0.5 seconds per key is 15000 seconds.
That's OVER FOUR HOURS of walking around trying keys.

Someone will notice you in this amount of time and the cops will come
haul you off to jail.  Should have bought a lottery ticket instead.

> (The residents will complain that the locks are not secure...)

Hardly.

> So you pregenerate a million RSA key pairs, and try them all on a given
> message. Use 10 machines in parallel. Maybe a message *will* be cracked,
> and maybe it won't. But if one *is* cracked, it didn't take a billion
> theoretical years, did it?

It's your idea, you do the math.  Make reasonable assumptions about
how long it takes to test each key pair, and figure out how much time
it's going to take to have even a 1% chance of cracking a single RSA
message.  Then come back and tell us.

> Does this "scenario" have an academic name? 

It's called Probability 101.  Go take it.

> It certainly must be common knowledge amongst cryptographers, who
> most likely put it on the back burner, as nothing can be done about
> it. 

On the contrary, it's always on the FRONT burner.  They "do things
about it" by making the key space really big.

> But is the general public, the end users, missing out on
> something when they hear how secure algorithm 'foo' is?  "Yes,
> Snorton DiskReet uses DES and it has 2^56 possible keys and your
> data is SECURE! Just type in your 8 letter password and it will take
> a thousand years to break!"

If you think they're missing out then explain how.



-- 
Daniel F. Boyd -- boyd@cs.buffalo.edu 

"Here, a piece of the True Cross.  And in this case, we have the skull
of John the Baptist at the age of twelve."
