Path: msuinfo!uchinews!linac!uwm.edu!zaphod.mps.ohio-state.edu!darwin.sura.net!haven.umd.edu!uunet!vnet.IBM.COM
From: tarnold@vnet.IBM.COM (Todd W. Arnold)
Message-ID: <19930322.101356.617@almaden.ibm.com>
Date: Mon, 22 Mar 93 13:04:10 EST
Newsgroups: sci.crypt
Subject: Re: Identifying / Securing Files
Organization: IBM Cryptographic Facility Development
Disclaimer: This posting represents the poster's views, not those of IBM
News-Software: UReply 3.1
References: <1993Mar22.145303.4204@cadkey.com>
Lines: 14

It's OK as long as you trust the end-user to stay out of your application
program - or as long as it runs in a system where the user can't get to it.
Otherwise, you can't stop him from finding the "load a module" code in your
program, and simply bypassing the check for a valid module.  The devious user
can either modify the object code before running the program, or he can run
the program under a debugger and change the instructions in memory.

If you're willing to accept this level of risk, you can use any one of several
algorithms.  The "better" ones make it more difficult to concoct a phony
program that will give the same check value.  We're pretty paranoid about such
things, so we use an algorithm called MDC (Modification Detection Code), which
is based on DES.  It produces a 16-byte (128 bit) hash of the input data.

  - Todd
