Path: msuinfo!uwm.edu!linac!pacific.mps.ohio-state.edu!zaphod.mps.ohio-state.edu!howland.reston.ans.net!newsserver.jvnc.net!rutgers!igor.rutgers.edu!zodiac.rutgers.edu!leichter
From: leichter@zodiac.rutgers.edu
Newsgroups: sci.crypt
Subject: Re: Running key ciphers [was; Challenging Message]
Message-ID: <1993Mar23.124136.1@zodiac.rutgers.edu>
Date: 23 Mar 93 17:41:36 GMT
References: <1993Mar14.000511.14875@csi.uottawa.ca> <1993Mar14.043418.2037@altair.selu.edu> <1993Mar17.085030.1@zodiac.rutgers.edu> <16570@rand.org> <1993Mar22.111827.1@zodiac.rutgers.edu> <1993Mar22.184030.27677@rchland.ibm.com>
Sender: news@igor.rutgers.edu
Organization: Rutgers University Department of Computer Science
Lines: 84
Nntp-Posting-Host: pisces.rutgers.edu

In article <1993Mar22.184030.27677@rchland.ibm.com>,
lwloen@rchland.vnet.ibm.com (Larry Loen) writes:
[Long background omitted.
| || Absolutely correct.  My argument was statistical:  If the "book" used in
| || the code were a sequence of letters generated according to the statistics
| || of English, then the statistical attacks I describe would be the only
| || approach, and the result of combining 3 "books" would indeed be a good
| || one-time pad.  As Mr. Gillogoly points out, statistics only take you so
| || far:  If you use real books, you are choosing from a small enough
| || universe that attacks going beyond the raw statistics will kill you.
| || One can, of course, extend the technique.  If a "book" is a real book
| || chosen from a known collection, its entropy is quite a bit lower than for
| || a synthetic book.  But it still has SOME entropy, and if you combine
| || enough such books, you do get a random source.  Of course, the collection
| || of books has to be large enough ... the entropy of a book chosen from a
| || selection of 100 books is probably low enough that you can't draw enough
| || books from the collection to get a random source.
| 
| Still Nope.  At least, not completely.  You still have to do something to
| the text stream.  If your source was English text, in ASCII, I have little
| doubt that  the keystream for the upper two bits, at least, would test out
| as significantly  non-random.  Admittedly, this is not yet a "break", but
| would, at minimum,  probably be a material assist in placing "probable
| words" in the text.  The cryptanalysis of such a case would be very
| difficult if more than, say, five books were used as the source, but it is
| still theoretically possible, even if the books aren't famous.  It might be
| possible to devise a test which would reveal, well enough, the number of
| text sources used as well.

Who said anything about ASCII?  I was dealing with letters, adequately modeled
as integers in [0,26).  Certainly, if you take a random n-bit integer and
tack a bunch of 0 bits on the left - which is effectively what you are doing
if you use ASCII to represent upper-case letters - the result isn't very
random.

(To be slightly more accurate:  I considered using 5 bits to encode an upper-
case letter - remember that the original examples all used the standard
technique of the old books of using only upper case and leaving out all spaces
and punctuation.  This introduces a small amount of bias, IF the combining
function is XOR - but is irrelevant for a true Vigenere, where the combining
function is addition mod 26.)

| Attacks on "running key ciphers" (which is  basically two books, for our
| purposes here) are tedious and uncertain, but do work.  Compared to DES and
| RSA, it isn't obvious an attacker would be unwilling to work even 25 times
| harder on a (say) 5 book keystream cipher than a standard running key (I
| have no idea if the difficulty multiplies as the square of the number of
| sources, either).

For any straight-forward attack, if a one-book cipher has cost n, a k-book
cipher is much more like n^k than like nk^2.  Either a simple statistical
attack, or something like crib dragging, will have to rely on trying k
words at a time.  (It's not QUITE as bad as n^k - n^(k-1) is probably a
better estimate - but it seem clear that it's exponential in k.)

| At the least, such a method is not obviously competitive with other, known
| pseudo-Vernam methods which, at least, have managed to have uniform
| randomness in the key bits.

| But, patch that up, and provide enough books, and the result is probably a
| very practical cipher.  Just be careful not to re-use the key stream.

If you want a PRACTICAL cipher that's secure for reasonably large amounts of
plaintext, use DES or RSA or IDEA or something like that.  Book codes are nice
for thinking about how classical attacks work, and can even be useful when
you don't have access to a computer and need to send a relatively small
amount of data securely; but that's about it.

| PS, almost all non-copyrighted books of consequence are rapidly becoming
| available on CD-ROM.  This presents both a standard source and a standard
| quandry for such ciphers, since the "constructor" of the cipher would
| presumably wish to exploit a cheap source of key bits (prices, today, range
| from $50 to $250 for around 200 to 900 books).  Of course, once that is
| done, it means there is standardization for the attacker, too.  For myself,
| I would gather up Internet FAQs and newsgroups as at least one of the
| sources were I to try such a cipher myself.  And, I would do some sort of
| hash/encipher  function on each book stream prior to the XORing to create a
| fully random result.

I suppose.  But what are the advantages over more modern techniques?

(BTW, in Le Carre's "A Perfect Spy", Pym uses a book code; but then he learned
it in the 40's.)
							-- Jerry
