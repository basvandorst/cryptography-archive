Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!hermes.chpc.utexas.edu!jonathan
From: jonathan@chpc.utexas.edu (Jonathan Thornburg)
Subject: compression before encryption (was: Re: can NSA break DES?)
Message-ID: <1993Mar27.200719.25973@chpc.utexas.edu>
Summary: most compressors have *known* headers
Sender: Jonathan Thornburg <jonathan@einstein.ph.utexas.edu>
Organization: U of Texas at Austin / Physics Dept / Center for Relativity
References: <9303220541.AA16657@pizzabox.demon.co.uk> <1onksfINNpa2@iskut.ucs.ubc.ca>
Date: Sat, 27 Mar 93 20:07:19 GMT
Lines: 50

This thread is discussing whether or not automatic (machine) recognition
of when a ciphertext has been correctly decrypted is possible.  It has
been pointed out that if the plaintext is "normal English" then quite
powerfull statistical methods are available for recognizing this.  It
has been suggested that compressing the plaintext before encryptiung it
might defeat this.

gtoal@gtoal.com (Graham Toal) writes:
| in a compressed file evenly distributed?  What about the 'clear table'
| code?  Won't it be underrepresented?  I guess a suitable detector chip
| would signal a hit if it found even only one character from the alphabet,
| if that one was *way* outside the normal distribution?

In article <1onksfINNpa2@iskut.ucs.ubc.ca> unruh@physics.ubc.ca
(William Unruh) replies:
| A good compressor will try to make sure that all are equally represented
| or you could compress it more.  Also you detector chip would be buzzing
| all the time. Teh distribution of the most used and the least used
| character in a random equal probability stream is very skewed in its
| distribution, ans has a reasonable probabliltiy of being "way out".
| (anyone know the distribution, say for a 96 letter alphabet?)

I think there are several serious problems with compression-before-encryption
as a means to achieve better cryptosecurity:
- Most compression schemes insert a standard header at the start
  of the compressed file, which translates into a nice known-plaintext
  crib for attacking the back-end cryptosystem.  This can be guarded
  against by obfuscating the compressor's output in various ways,
  but as I argue below, the whole idea is not worth the effort.
- Such a system offers little extra security against a known-plaintext
  attack.  Good cryptosystem design requires resistance to this type
  of attack, as historically most successfull cryptosystem attacks have
  been of this sort.
- More generally, even an "obfuscated compressor" is still a very
  weak cryptosystem.  If you want good security, your efforts are far
  better spent improving the back-end cryptosystem.  If this is at
  the level of properly-used DES or better, then pure cryptanalytic
  attacks are surely a lesser worry than flaws in key management protocols
  and/or "practical cryptoanalysis" (TSRs or X-event-spy-programs
  or ethernet-tappers watching keystrokes, bribery of persons knowing
  the crypto keys, pickup of monitor RF emissions, etc.  Given a
  finite amount of talented-human time and expertise, employing this
  for the minor incremental protection of "obfuscating compression"
  will *decrease* the resources available for these more serious threats,
  and is thus *detrimental* to overall security.

- Jonathan Thornburg
  <jonathan@hermes.chpc.utexas.edu> or <jonathan@einstein.ph.utexas.edu>
  [until 31/Aug/93] U of Texas at Austin / Physics Dept / Center for Relativity
  and [until ~Apr/93] U of British Columbia / {Astronomy,Physics}
