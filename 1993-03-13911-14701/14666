Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!sdd.hp.com!elroy.jpl.nasa.gov!ames!agate!linus!linus.mitre.org!gauss!bs
From: bs@gauss.mitre.org (Robert D. Silverman)
Subject: Re: Cracking RSA?
Message-ID: <1993Mar30.185354.7007@linus.mitre.org>
Sender: news@linus.mitre.org (News Service)
Nntp-Posting-Host: gauss.mitre.org
Organization: Research Computer Facility, MITRE Corporation, Bedford, MA
References: <neuhaus.732893349@vier> <3618.Mar2412.19.3393@silverton.berkeley.edu> <1p8jt3$km5@iris.mbvlab.wpafb.af.mil>
Date: Tue, 30 Mar 1993 18:53:54 GMT
Lines: 39

In article <1p8jt3$km5@iris.mbvlab.wpafb.af.mil> carol@edfua0.ctis.af.mil (Andy Carol) writes:
>
>> As even Bob will admit, GNFS (the general number field sieve) is the
>> method of choice for factoring 512-bit RSA moduli.
>
>Please forgive my ignorance.  What is the 'General number field sieve'?  Is it a clever way to factor in parallel?  Or, is some new 'cosmic' breakthru?  Is it easy to scale?  I would imagine it would be MUCH easier for me to double the number of bits in an RSA key (perhaps to 2048 bits), than to for GNFS to crack.  
>
 
Quick summary [omitting MUCH detail]
Both the quadratic sieve and the number field sieve attempt to construct a
congruence of the form A^2 = B^2 mod N.  (where A != +/- B mod N)

QS does it by generating quadratic residues (with a known square root) via
a quadratic polynomial such that the residues generated are small. Because
of the regularity in the way they are generated, one can factor many such
values at once with a sieve.

NFS does it by generating two sets of integers linked together by a homomorphism
mod N.  One set is a set of ordinary integers of the form a + bM where M is 
fixed and a and b vary over Z. The other set is a set of algebraic integers
of the form a + b alpha [same a and b as above] and where alpha is a root of
an appropriately constructed polynomial f, such that f(M) = 0 mod N. The 
homomorphism maps alpha to M mod N. One can again use the regularity of a+bM
and a + b alpha to factor many values of both with a sieve. One side is
factored over Z, the other over prime ideals of Q(alpha). 

The speed of the algorithm is determined by how small the numbers are that
you *try* to factor with a sieve. NFS generates numbers of much smaller norm
than QS once reaches N sufficiently  large [and for some special, smaller N]
There is ongoing debate as to where the exact crossover point might be. 
The size of the polynomial coefficients and M determine how fast NFS runs.

NFS was invented by Pollard,  QS by Kraitchik and Pomerance.

--
Bob Silverman
These are my opinions and not MITRE's.
Mitre Corporation, Bedford, MA 01730
"You can lead a horse's ass to knowledge, but you can't make him think"
