Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!cs.utexas.edu!qt.cs.utexas.edu!yale.edu!yale!cs.yale.edu!news-mail-gateway!daemon
From: Markowitz@DOCKMASTER.NCSC.MIL
Subject: RE: Security standards--Help
Message-ID: <930309200458.944182@DOCKMASTER.NCSC.MIL>
Sender: Markowitz.Catwalk2@DOCKMASTER.NCSC.MIL
Organization: Yale CS Mail/News Gateway
Date: Tue, 9 Mar 1993 20:04:00 GMT
Lines: 61

David Williams writes:

>>I would appreciate any help from someone that can provide insight to
the >>speed characteristics of each of the following:  >> >>Data
Encryption Standard, Public Key (RSA, Diffie-Hellman), and >>Digital
Signature Algorithm

I'll take a shot at the DSA part:  (and thanks for asking!  :-)

    machine
  modulus size      sign    validate    (times in seconds)

    Intel 386/25MHz                       512 bytes         0.415      0.811       1024 bytes        1.443      2.989                                                 > C++ w/ assembler
    Intel 486/50MHz                       /
  512 bytes         0.166      0.330     /
  1024 bytes        0.596      1.275    /

    SPARC 2 40MHz
  512 bytes         0.3        2.6      pure C++
  1024 bytes (never ran it; get back to me if you want it)

DES software can run in the neighborhood of 100 KB/sec in CBC mode on a
PC depending on processor architecture, speed, and who writes the code.
Hardware can be 20 times faster.

RSA encryption/validation should be roughly the same order of magnitude
as the DSA signature piece assuming similarly sized moduli, as both
essentially involve a single modular exponentiation (the extra two
multiplications, addition, and inversion on the DSA are relatively
insignificant).  RSA signing/decryption is somewhat faster (factor of
2?)  than the DSA since you can use the Chinese Remainder Theorem given
the factorization of the modulus.

OTOH, if you play games with a small RSA encryption exponent, encryption
and signature validation can be made considerably faster than RSA
decryption/signing and the DSA.  (To see the savings, take the standard
square and multiply algorithm for modular exponentiation and consider
the effect of reducing a general 512-bit RSA exponent, with 256 1's on
average, to a 17-bit exponent with only two 1's like F4 = 2^2^4+1.
Suffice it to say you reduce the amount of work by roughly a factor of
40).  As with all statistics, caveat lector.

>>I am currently working on my thesis over these three algorithms, and
am >>looking for comparative time rates for each.  So far all I could
find was >>that DES is fastest, followed by RSA, and then Digital
Signature.  But at

Aren't we comparing apples and oranges?  Typical systems (e.g., PEM) use
DES for bulk encyrption, RSA for key management (i.e., encryption of a
single block containing a DES key) and digital signatures, while DSA is
a signature-only algorithm.  It's not hard to justify using a symmetric
algorithm over RSA for bulk encryption--hope you aren't planning on
getting a degree for that analysis.  :-) Just kidding--best of luck.

-mjm

----------
  Michael J. Markowitz, VP R&D      markowitz@dockmaster.ncsc.mil
  Information Security Corp.        708 405-0500, fax: 708 405-0506
  1141 Lake Cook Rd., Suite D       MCI:  363-1959
  Deerfield, IL  60302              CIS: 76206,2617
