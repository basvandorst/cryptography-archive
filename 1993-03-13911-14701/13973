Path: msuinfo!uwm.edu!biosci!oracle!unrepliable!bounce
From: mfriedma@us.oracle.com (Michael Friedman)
Newsgroups: sci.crypt,alt.binaries.pictures,comp.security.misc,sci.image.processing
Subject: Permanent signatures for pictures
Message-ID: <1993Mar4.033734.29477@oracle.us.oracle.com>
Date: 4 Mar 93 03:37:34 GMT
Sender: usenet@oracle.us.oracle.com (Oracle News Poster)
Organization: Oracle Corporation, Redwood Shores CA
Lines: 34
Nntp-Posting-Host: hqsun4.us.oracle.com
X-Disclaimer: This message was written by an unauthenticated user
              at Oracle Corporation.  The opinions expressed are those
              of the user and not necessarily those of Oracle.
Xref: msuinfo sci.crypt:13973 alt.binaries.pictures:5021 comp.security.misc:2795 sci.image.processing:2142

First off, thanks for the advice on cryptography for document
distribution.  Some perfectly adequate solutions were posted, so I
won't beat a dead horse.

Now, here's another question...

Say I was selling scanned images from Playboy.  (Playboy is chosen as
an example.  There is no deal to do this.)  

Based on past experience, I expect them to be copied, placed on public
FTP sites, etc.   

Copy protection is pretty worthless.

Is there any way that I can add a customer ID to every picture I sell
that will have little or no impact on picture quality but will not be
removable by the customer without seriously degrading picture quality?
That way I can't prevent pictures from being given away, but I can cut
that customer off or even sue him.

I've been playing arround with ideas involving flipping a small number
of randomly chosen bits and comparing with the original.  Of course,
that still leaves me vulnerable to a comparison attack where someone
gets hold of two copies of the same picture that were sold to
different customers and compares them.  Another idea is to flip bits
in frequency space, but that has the same problem.  Perhaps flipping
bits in the original and in frequency space?  Even if I do this, will
the information be recoverable if the customer uses lossy compression?
I doubt it. 

Any suggestions?  Does anyone know if any work has been done on this?
It seems like an important issue for the coming decades.  After all,
if you know who is feeding your stuff to that public FTP site you can
cut them off or sue them.  
