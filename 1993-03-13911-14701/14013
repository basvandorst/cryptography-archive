Path: msuinfo!uwm.edu!spool.mu.edu!uunet!pipex!bnr.co.uk!uknet!acorn!eoe!ahaley
From: ahaley@eoe.co.uk (Andrew Haley)
Newsgroups: sci.crypt
Subject: Re: "Card-shuffling" algorithms
Message-ID: <1576@eouk5.eoe.co.uk>
Date: 7 Mar 93 20:04:57 GMT
References: <9023@charon.cwi.nl>
Organization: EO Europe Limited, Cambridge, UK
Lines: 54
X-Newsreader: TIN [version 1.1 PL6]

Dik T. Winter (dik@cwi.nl) wrote:
: In article <1mmhpqINNhr5@uwm.edu> markh@csd4.csd.uwm.edu (Mark) writes:
:  > In article <1993Feb25.201917.1717@ee.eng.ohio-state.edu> butzerd@columbia.eng.ohio-state.edu (Dane C. Butzer) writes:
:  > >Does anybody know of an algorithm that will randomly shuffle a deck in one
:  > >pass, with one random number chosen per card, given a "good" random number
:  > >generator?  Is such an algorithm even believed to be possible?

[ ... ]

:  > Take any comparison-based sorting algorithm at all.  Replace the comparison
:  > operation:
:  > Compare(A, B) = 0 if A <= B
:  >                 1 if A > B
:  > with the randomizer
:  > Random(A, B) = 0 or 1 with equal probability.
:  > The result is a shuffling algorithm.
: This is not a perfect shuffle.  Doing K steps for it gives 2^K possible
: outcomes.  So the permutations that it yields are not equi-probable.
: (N! does not divide 2^K for all N > 2).

This is true.  However the trick is to generate a number between 1 and
N the first time round, then between 1 and (N-1), and so on.  Thus the
number of possibilities is:

   52*51*50* ... = 52!

Thus the amount of random information used is _exactly_ the same as
the number of possible outcomes.

The algorithm (paraphrased from Knuth) is:

Let X1, X2, ... Xt be a set of t numbers to be shuffled.

P1.  Set j = t

P2.  [ Generate a random integer k between 1 and j. ]  Generate a
     random number U, 0 < U <= 1.  Set k = floor(j*U)+1.

P3.  Exchange Xk with Xj.

P4.  Decrease j by 1.  If j > 1, return to step P2.

Note that the important thing is that in P2 the number generated is
between 1 and j, not 1 and t.  If it were between 1 and t you would be
right, there would be 2^t permutations.  But as it's between 1 and j
there are t!.

: However, the original question is a bit ill-posed (as the writer already
: did notice, see the quotation marks around the word "good").

I can't see why you think so.  The question is perfectly clear, and
the algorithm is above.

Andrew.
