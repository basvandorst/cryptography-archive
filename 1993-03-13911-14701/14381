Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!uunet!newsgate.watson.ibm.com!yktnews.watson.ibm.com!mudvolcano!lwloen
From: lwloen@rchland.vnet.ibm.com (Larry Loen)
Subject: Re: Running key ciphers [was; Challenging Message]
Sender: news@rchland.ibm.com
Message-ID: <1993Mar22.184030.27677@rchland.ibm.com>
Date: Mon, 22 Mar 1993 18:40:30 GMT
Reply-To: lwloen@rchland.vnet.ibm.com
Disclaimer: This posting represents the poster's views, not necessarily those of IBM
References: <1993Mar14.000511.14875@csi.uottawa.ca> <1993Mar14.043418.2037@altair.selu.edu> <1993Mar17.085030.1@zodiac.rutgers.edu> <16570@rand.org> <1993Mar22.111827.1@zodiac.rutgers.edu>
Nntp-Posting-Host: mudvolcano.rchland.ibm.com
Organization: IBM Rochester
Lines: 74

In article <1993Mar22.111827.1@zodiac.rutgers.edu>, leichter@zodiac.rutgers.edu writes:
|> In article <16570@rand.org>, jim@rand.org (Jim Gillogly) writes:
|> | In article <1993Mar17.085030.1@zodiac.rutgers.edu>
|> leichter@zodiac.rutgers.edu writes:
|> ||If you combine the three books up front to compute a series of key letters,
|> ||the "bits of fuzz" argument tells you that the result is a RANDOM series of
|> ||letters.  This is the famous "one-time pad", and the resulting system is
|> ||usually called a Vernam cipher.  It is absolutely secure, as long as you
|> ||never re-use any key material.
|> | 
|> | Nope.  You don't get random keytext with any deterministic process like
|> | this.  The only way to get Vernam encryption is to use absolutely
|> | physically random keys.  For example, there are now quite a few on-line
|> | books in the Gutenberg Project's collection on the net... a lucky attacker
|> | could discover by trial and error that the three books are "Pride and
|> | Prejudice", one of the Sherlock Holmes stories, and "Moby-Dick", and the
|> | encryptor started at the beginning, just by testing the available books....
|> 
|> Absolutely correct.  My argument was statistical:  If the "book" used in the
|> code were a sequence of letters generated according to the statistics of
|> English, then the statistical attacks I describe would be the only approach,
|> and the result of combining 3 "books" would indeed be a good one-time pad.
|> As Mr. Gillogoly points out, statistics only take you so far:  If you use
|> real books, you are choosing from a small enough universe that attacks going
|> beyond the raw statistics will kill you.
|> 
|> One can, of course, extend the technique.  If a "book" is a real book chosen
|> from a known collection, its entropy is quite a bit lower than for a synthetic
|> book.  But it still has SOME entropy, and if you combine enough such books,
|> you do get a random source.  Of course, the collection of books has to be
|> large enough ... the entropy of a book chosen from a selection of 100 books
|> is probably low enough that you can't draw enough books from the collection
|> to get a random source.
|> 							-- Jerry


Still Nope.  At least, not completely.  You still have to do something to the
text stream.  If your source was English text, in ASCII, I have little doubt that 
the keystream for the upper two bits, at least, would test out as significantly 
non-random.  Admittedly, this is not yet a "break", but would, at minimum, 
probably be a material assist in placing "probable words" in the text.  The
cryptanalysis of such a case would be very difficult if more than, say, five
books were used as the source, but it is still theoretically possible, even
if the books aren't famous.  It might be possible to devise a test which would
reveal, well enough, the number of text sources used as well.

Attacks on "running key ciphers" (which is 
basically two books, for our purposes here) are tedious and uncertain, but do
work.  Compared to DES and RSA, it isn't obvious an attacker would be unwilling
to work even 25 times harder on a (say) 5 book keystream cipher than a standard
running key (I have no idea if the difficulty multiplies as the square of the
number of sources, either).

At the least, such a method is not obviously competitive with other, known
pseudo-Vernam methods which, at least, have managed to have uniform randomness
in the key bits.

But, patch that up, and provide enough books, and the result is probably a 
very practical cipher.  Just be careful not to re-use the key stream.

PS, almost all non-copyrighted books of consequence are rapidly becoming 
available on CD-ROM.  This presents both a standard source and a standard
quandry for such ciphers, since the "constructor" of the cipher would 
presumably wish to exploit a cheap source of key bits (prices, today, range
from $50 to $250 for around 200 to 900 books).  Of course, once that is done,
it means there is standardization for the attacker, too.  For myself, I would
gather up Internet FAQs and newsgroups as at least one of the sources were I
to try such a cipher myself.  And, I would do some sort of hash/encipher 
function on each book stream prior to the XORing to create a fully random
result.

-- 
   Larry W. Loen        |  My Opinions are decidedly my own, so please
                        |  do not attribute them to my employer
