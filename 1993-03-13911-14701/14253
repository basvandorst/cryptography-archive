Newsgroups: alt.security.pgp,alt.security.ripem,sci.crypt
Path: msuinfo!uwm.edu!linac!att!att!ulysses!ulysses!smb
From: smb@research.att.com (Steven Bellovin)
Subject: Re: pgp 'stacker' equivalent
Message-ID: <1993Mar18.215435.14537@ulysses.att.com>
Date: Thu, 18 Mar 1993 21:54:35 GMT
References: <C3r46w.Do8@dscomsa.desy.de> <1993Mar12.021524.19620@ucsu.Colorado.EDU> <C3s4F4.19v@morwyn.uucp> <1o8prnINNkg3@sol.tis.com>
Organization: AT&T Bell Laboratories
Lines: 47
Xref: msuinfo alt.security.pgp:1861 alt.security.ripem:167 sci.crypt:14253

In article <1o8prnINNkg3@sol.tis.com>, mjr@tis.com (Marcus J Ranum) writes:
> 	Hmmmm, perhaps not as hard as you might think. On UNIXes like
> ULTRIX, which permit joe user to NFS-mount filesystems onto directories
> they own, you could fairly easily add encryption to "unfsd".

Indeed.  And it's already been done.  Matt Blaze talked about it at
a WIP session at the last Usenix; here's his abstract (posted with
his permission):

	.TL
	A Cryptographic File System
	.AU
	Matt Blaze
	.AI
	AT&T Bell Laboratories
	Holmdel, NJ 07733
	mab@research.att.com

	January 14, 1993
	.PP
	As computing systems (especially distributed ones) grow in size,
	issues of data security and privacy become increasingly complex.
	Cryptographic techniques can help ensure that data are not read by
	unauthorized persons, but most encryption software requires either
	that special purpose application software be used or that the user
	manually encipher and decipher files as needed.
	.PP
	The Cryptographic File System (CFS) makes it easier to take
	advantage, in a secure manner, of file system services (storage,
	backup, etc.) on potentially insecure servers and networks.
	.PP
	CFS provides a transparent Unix file system interface to directory
	hierarchies which are automatically DES encrypted with user-specified
	keys.  Users "attach" an encrypted directory by providing a key, the
	name of a directory where the encrypted files are to be stored, and
	the name of a cryptographic "mount point" to be created under /crypt.
	Directories under /crypt are accessible with all standard system calls
	and tools to the users who created them.  The underlying encrypted
	files (with encrypted names) can reside on any accessible file system
	(including remote file systems such as NFS); routine system
	administration tasks, such as file backup and restore, can be
	performed on the encrypted directories in the ordinary manner without
	knowledge of the key.  When run on a client workstation, CFS ensures
	that cleartext is never stored on a disk or transmitted over a
	network.  CFS uses a standard portable NFS client interface and has
	has been implemented for a variety of Unix platforms.

