Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!uunet!nntp.telebit.com!phr
From: phr@telebit.com (Paul Rubin)
Subject: Re: Cracking RSA?
Message-ID: <C4I8ny.GEF@telebit.com>
Sender: news@telebit.com
Nntp-Posting-Host: napa
Organization: Telebit Corporation; Sunnyvale, CA, USA
References: <strnlghtC48L39.D5@netcom.com> <bontchev.732724273@fbihh> <PCL.93Mar25103457@rhodium.ox.ac.uk> <1993Mar26.124149.28546W@lumina.edb.tih.no>
Date: Fri, 26 Mar 1993 16:33:33 GMT
Lines: 26

ketil@edb.tih.no (Ketil Albertsen,TIH) writes:

>But: For a 256-bit number to be usable as part of an RSA key, it must be
>*known* to be a prime, right? There are certainly not 6.5e74 *known*
>primes in 256 bits or less. So how many known ones are there?

>Well, not the exact count, but of what magnitude is it? I would be 
>surprised if there are more than can be stored on a medium-sized disk,
>but I may be wrong. If a common man is to make himself a new key, he
>won't start out factoring 256-bit numbers, he will pick from a book of
>published primes and form a product of these - or am I wrong? 

Yes, you're wrong.  The number of primes less than N is
approximately N/ln(N).  This is the famous "prime number theorem"--
see any book on number theory.

The prime number theorem tells us that the number of 256 bit primes is
2^256/ln(2^256) = 2^256/(256 ln(2)) = 8*10^71 or so.

Of course there are not that many *known* primes; but given any number
N, you can efficiently test whether N is prime.  So the idea is to
generate brand new primes every time you want a new key.  If you
generate a odd random number R and start testing R,R+2,R+4,... until
you find a prime, you will have a prime that is infinitesimally likely
to have ever been generated or tested before by anyone (and the total
number of known primes in the world will have increased by one).
