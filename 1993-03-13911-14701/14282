Path: msuinfo!uwm.edu!cs.utexas.edu!zaphod.mps.ohio-state.edu!darwin.sura.net!altair.selu.edu!fcs$1655
From: fcs$1655@altair.selu.edu
Newsgroups: sci.crypt
Subject: Was "Challenging Message"
Message-ID: <1993Mar19.082112.2144@altair.selu.edu>
Date: 19 Mar 93 08:21:12 -0600
Expires: 1 Apr 93 08:22:17 -0600
Distribution: world
Organization: Southeastern Louisiana University
Lines: 43


   I want to sum up some generalizations that began with my simple use of
a Vigenere, taken from Lewis Carroll.  Please correct anything wrong or 
misleading, and add whatever seems appropriate.  
   To start out, no text is "random" if it means something to someone,
right?  So, any key I use that can be understood by anyone else can't
be random, and thus has a pattern that someone else can figure out.
The best I can do is to disguise its pattern (and the text itself) by,
say, running three words through.  This gives a seemingly random key,
which is really not at all random, just disguised.  As someone said,
this would "flatten out" the statistics.  But, it still would not
be random (though the result would be unintelligible).  But, "crib-dragging"
could still locate pockets of words and help decipher the rest.  (Is this
right so far?) 
   Using a book to begin with just makes it easy to find the key, rather
than having to remember it, doesn't it?  Even the initial letters of, say,
words on a page of a book would still exhibit some statistical patterns,
isn't that right?  Except in this case, looking for common words would
not be useful -- that is common words in the key itself.  But, you could
still look for them in the message and work backwards (as well as trying
other things from the key to the text).
   Incidentally, I apologize for the name `Stanislaw Ulam' in the text.  
I was looking for text that wasn't too easy, but I wasn't trying to put
foreign names in it.  (So, another way to make deciphering more difficult
would be to have words from another language in the key, say, but not in
the message.)
   No one has commented on taking a short phrase, say "Time waits for no
man," running `time' through, then `timewaits', then `timewaitsfor', etc.,
which, if my math is right, gives us an LCM of 1,260.  This should be
good for about 400 words of text without the key repeating.  Hmmm.  I guess
there's nothing really new about this, except for the fact that you get more
mileage out of few words.  But, the above considerations still apply,
n'est-ce pas?
   
   Thanks for all the helpful and interesting commentary,

   Charlie Silver
   csilver@selu.edu            Southeastern Louisiana University
                               dept of comp. sci, Hammond La 70402




