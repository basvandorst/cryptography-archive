Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!cs.utexas.edu!hermes.chpc.utexas.edu!jonathan
From: jonathan@chpc.utexas.edu (Jonathan Thornburg)
Subject: Re: PD program to securely encrypt files
Message-ID: <1993Mar16.010151.5154@chpc.utexas.edu>
Summary: DES is very good *if* it's used properly
Keywords: encrypt DES data encryption standard NSA FBI export law
Sender: Jonathan Thornburg <jonathan@einstein.ph.utexas.edu>
Organization: U of Texas at Austin / Physics Dept / Center for Relativity
References: <1o2gm7INN3ph@tamsun.tamu.edu>
Date: Tue, 16 Mar 93 01:01:51 GMT
Lines: 57

In article <1o2gm7INN3ph@tamsun.tamu.edu> henrik@stat.tamu.edu
(Henrik Schmiediche) writes:
>What is currently the best/securest method of encryping of file for
>which PD software is avalibale? What I want to do is encrypt a file
>with a password that can be remembered (ie. it is not necesssary to
>store it anywhere).  I am aware of PGP and the genereal idea of the
>RSA algorithm, and I certainly see its usefullness in sending messages
>and establishing secure communications, but it seems to me that its
>major weakness is the length of the key (combined with the difficulty
>of remembering it).
>
>I am currently using PC SECURE V6.0 with its im DES implementation.
>Is there a better & more secure algorithms / programs out there?

If properly used, DES is secure against anyone short of the NSA
or their ilk.  In this case (DES, properly used) the weakest links
are probably non-cryptographic (disk scavenging, rogue TSRs in a
PC environment, radio pickup of screen images, bribery of persons
who know the password, etc.)

However, "proper use" of DES requires, among other things,
(1) being aware of disk scavenging,
(2) choosing DES keys which aren't easily guessed
(3) using encryption software which you trust

(1) bears repeating because it's such a common security weakness.
    Remember, if the uncrypted file is *ever* stored on disk, then
    it should be considered "permanantly accessable" unless care
    has been taken to overwrite it.

(2) Involves trying to ensure that there are as close as possible
    to the full 56 bits of entropy in your keys.  This probably means
    somehow cryptographically hashing a longer human-rememberable
    passphrase down into 56 bits.  I *think* DES is a good way of
    doing this, but I'm not sure.  (Could some *knowledgable* person
    perhaps post a followup on this?)

(3) means making sure that the software doesn't have any "back door"
    master-key trapdoors hidden in it.  In view of recent discussion
    in comp.risks to the effect that the US FBI has in the past asked
    at least one commercial vendor to (secretly) insert such a trapdoor,
    certainly wouldn't trust any made-in-USA crypto software.  Many
    (probably all) countries have similar government agencies, so I
    really wouldn't trust *any* commercial crypto software to be free
    of trapdoors unless (among other criteria) I could examine its
    source code.  In practice, it should be safe to use PD software
    that's widely available in source form, provided you compile it
    yourself with a widely-used compiler.

Note that DES, like all good cryptosystems, is subject to export
control laws in some countries, notably the USA.  It may be useful
for you to obtain your source code form a non-USA archive site.

- Jonathan Thornburg
  <jonathan@hermes.chpc.utexas.edu> or <jonathan@einstein.ph.utexas.edu>
  [until 31/Aug/93] U of Texas at Austin / Physics Dept / Center for Relativity
  and [until ~Apr/93] U of British Columbia / {Astronomy,Physics}
