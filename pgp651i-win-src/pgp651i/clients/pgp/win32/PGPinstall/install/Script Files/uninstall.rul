// $Id: uninstall.rul,v 1.45.4.3 1999/06/16 05:48:37 philipn Exp $
//____________________________________________________________________________
//	Copyright (C) 1998 Network Associates Inc. and affiliated companies.
//	All rights reserved.
//	
//  Author: Philip Nathan
//____________________________________________________________________________


///////////////////////////////////////////////////////////////////////////////
//
// Function: Uninstall5X()
//
//  Purpose: Uninstalls PGP5X
//
//
///////////////////////////////////////////////////////////////////////////////
function Uninstall5X(szUninstallVersion)
	STRING Installdir, szName, szFileName, OEinstall, szTemp;
	STRING szResultBuffer, szVerBuffera[1536], szData, szEudora_Path;
	STRING svValue, szKey;
	NUMBER nHandle, nSize, nvSize, nvType, nType;
	BOOL bVerInfo, bUpgraded, bVerValue;
	POINTER ptr1, ptr2;
	LONG lSize, lData;
	
begin
	VarSave	(SRCTARGETDIR);
	RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
	//Retrieve Outlook Express and Eudora's installed path
	szKey = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths";
	nType = REGDB_STRING;
	if (RegDBGetKeyValueEx (szKey ^ "MSIMN.EXE", "Path", nType, OEinstall, nvSize) < 0) then
		OEinstall = "";
	endif;
	if (RegDBGetKeyValueEx (szKey ^ "EUDORA.EXE", "Path", nType, szEudora_Path, nvSize) < 0) then
		szEudora_Path = "";
	else
		szEudora_Path = szEudora_Path ^ "PLUGINS";
	endif;
	
	if (szUninstallVersion = "PGPFiveZero") then
		RegDBSetDefaultRoot(HKEY_CURRENT_USER);
    	szKey = "Software\\PGP\\PGP50\\PGPKeys";
    	szName = "ExePath";
    elseif (szUninstallVersion = "PGPFiveFive") then
    	RegDBSetDefaultRoot(HKEY_CURRENT_USER);
    	szKey = "Software\\PGP\\PGP55\\PGPKeys";
    	szName = "ExePath";
    elseif (szUninstallVersion = "FiveFive") then
		RegDBSetDefaultRoot(HKEY_CURRENT_USER);
    	szKey = "Software\\Network Associates\\PGP55\\PGPKeys";
    	szName = "ExePath";
	endif;
    RegDBGetKeyValueEx (szKey, szName, nvType, svValue, nvSize);
    ParsePath(Installdir, svValue, PATH);
	
	//DELETE .DLL'S FROM WINDOWS SYSTEM DIRECTORY
	TARGETDIR = WINSYSDIR;
	DeleteFile ("PGPsdk.dll");
	CleanSharedFile(WINSYSDIR,"PGPsdkKS.dll");
	DeleteFile ("PGPsdkKS.dll");
	CleanSharedFile(WINSYSDIR,"PGPsdkKeyServer.dll");
	DeleteFile ("PGPsdkKeyServer.dll");
	CleanSharedFile(WINSYSDIR,"PGP55km.dll");
	DeleteFile ("PGP55km.dll");
	CleanSharedFile(WINSYSDIR,"PGP55cd.dll");
	DeleteFile ("PGP55cd.dll");
	CleanSharedFile(WINSYSDIR,"PGP55rd.dll");
	DeleteFile ("PGP55rd.dll");
	CleanSharedFile(WINSYSDIR,"PGP55sc.dll");
	DeleteFile ("PGP55sc.dll");
	CleanSharedFile(WINSYSDIR,"PGP55mn.dll");
	DeleteFile ("PGP55mn.dll");
	CleanSharedFile(WINSYSDIR,"PGPxch.dll");
	DeleteFile ("PGPxch.dll");
	CleanSharedFile(WINSYSDIR,"PGP55oe.dll");
	DeleteFile ("PGP55oe.dll");
	CleanSharedFile(WINSYSDIR,"PGPsdk.dll");
	DeleteFile ("PGPsdk.dll");
	CleanSharedFile(WINSYSDIR,"PGPsdkPrefs");
	DeleteFile ("PGPsdkPrefs");
	DeleteFile ("PGPsdk.prf");
	DeleteFile ("PGPMacBinaryMappings.txt");

	//DELETE FILES FROM THE PGP 5.5 INSTALL DIRECTORY
	TARGETDIR = Installdir;
	DeleteFile ("keygen.avi");
	DeleteFile ("license.txt");
	DeleteFile ("Pgp55.cnt");
	DeleteFile ("pgp55.hlp");
	DeleteFile ("Pgp50.cnt");
	DeleteFile ("pgp50.hlp");
	DeleteFile ("Pgp55.gid");
	DeleteFile ("pgp50.gid");
	DeleteFile ("PGPadmin.exe");
	DeleteFile ("PGPkeys.exe");
	DeleteFile ("PGPlog.exe");
	DeleteFile ("PGPtools.exe");
	DeleteFile ("PGPtray.exe");
	DeleteFile ("Quickstart.doc");
	DeleteFile ("Readme.txt");
	DeleteFile ("PGPadmin.prf");
	DeleteFile ("PGPclient.prf");
	DeleteFile ("Eudora.url");
	DeleteFile ("Adobe.url");
	DeleteFile ("randseed.bin");
	DeleteFile ("PGP55win.pdf");
	DeleteFile ("*.pdf");
	DeleteFile ("*.prf");
	DeleteFile ("*.isu");
	DeleteFile ("uninstall.exe");

	if (Installdir != "") then
		DeleteDir(Installdir ^ "ClientInstaller", ALLCONTENTS);
		DeleteDir(Installdir ^ "TEMP", ALLCONTENTS);
		DeleteDir(Installdir ^ "Signatures", ALLCONTENTS);
	endif;

	//DELETE THE EUDORA PLUGIN
	TARGETDIR = szEudora_Path;
	DeleteFile ("pgpplugin.dll");

	//DELETE REGISTRY ENTRIES
	//HKEY_CURRENT_USER
	RegDBSetDefaultRoot(HKEY_CURRENT_USER);
	RegDBDeleteKey ("Software\\Network Associates\\PGP55");
	RegDBDeleteKey ("Software\\PGP\\PGP55");
	RegDBDeleteKey ("Software\\PGP\\PGP");

	//HKEY_CLASSES_ROOT
	RegDBSetDefaultRoot(HKEY_CLASSES_ROOT);
	RegDBDeleteKey (".aexpk");
	RegDBDeleteKey (".asc");
	RegDBDeleteKey (".bexpk");
	RegDBDeleteKey (".pgp");
	RegDBDeleteKey (".pkr");
	RegDBDeleteKey (".prvkr");
	RegDBDeleteKey (".aexpk");
	RegDBDeleteKey (".pubkr");
	RegDBDeleteKey (".sig");
	RegDBDeleteKey (".skr");
	RegDBDeleteKey ("CLSID\\{969223c0-26aa-11d0-90ee-444553540000}");
	RegDBDeleteKey ("PGP Armored Encrypted File");
	RegDBDeleteKey ("PGP Binary Extracted Public Key");
	RegDBDeleteKey ("PGP Armored Extracted Public Key");
	RegDBDeleteKey ("PGP Detached Signature File");
	RegDBDeleteKey ("PGP Encrypted File");
	RegDBDeleteKey ("PGP Private Keyring");
	RegDBDeleteKey ("PGP Public Keyring");
	RegDBDeleteKey ("PGP Binary Extracted Public Key");
	RegDBDeleteKey ("PGP Binary Extracted Public Key");
	RegDBDeleteKey ("PGP Binary Extracted Public Key");

	//HKEY_LOCAL_MACHINE
	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
	RegDBDeleteKey (".aexpk");
	RegDBDeleteKey (".asc");
	RegDBDeleteKey (".bexpk");
	RegDBDeleteKey (".pgp");
	RegDBDeleteKey (".pkr");
	RegDBDeleteKey (".prvkr");
	RegDBDeleteKey (".aexpk");
	RegDBDeleteKey (".pubkr");
	RegDBDeleteKey (".sig");
	RegDBDeleteKey (".skr");
	RegDBDeleteKey ("CLSID\\{969223c0-26aa-11d0-90ee-444553540000}");
	RegDBDeleteKey ("PGP Armored Encrypted File");
	RegDBDeleteKey ("PGP Binary Extracted Public Key");
	RegDBDeleteKey ("PGP Armored Extracted Public Key");
	RegDBDeleteKey ("PGP Detached Signature File");
	RegDBDeleteKey ("PGP Encrypted File");
	RegDBDeleteKey ("PGP Private Keyring");
	RegDBDeleteKey ("PGP Public Keyring");
	RegDBDeleteKey ("PGP Binary Extracted Public Key");
	RegDBDeleteKey ("PGP Binary Extracted Public Key");
	RegDBDeleteKey ("PGP Binary Extracted Public Key");
	RegDBDeleteKey ("SOFTWARE\\Microsoft\\Exchange\\Client\\Extensions\\PGP Plugin");
	RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGP55DeinstKey");
	RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGP50DeinstKey");
	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP55");
	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP50");

	RegDBDeleteValue ("SOFTWARE\\Microsoft\\Exchange\\Client\\Extensions", "PGP Plugin");

	//HKEY_USERS
	RegDBSetDefaultRoot(HKEY_USERS);
	RegDBDeleteKey ("S-1-5-21-1998468922-181747292-2076119496-1000\\Software\\PGP");
	ProgDefGroupType(PERSONAL);
	DeleteProgramFolder ("Pretty Good Privacy");
	DeleteFolderIcon(FOLDER_STARTUP,"PGPtray");

	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
	LongPathToShortPath (Installdir);

	//Outlook Express Uninstall
	SRCDIR = OEinstall;
	TARGETDIR = OEinstall;
	//See if the user has installed OE plugin and then upgraded OE
	szFileName = OEinstall ^ "msimn.exe";
	UseDLL( "Version.dll" );
	lSize = GetFileVersionInfoSizeA( szFileName, nHandle );
	NumToStr( szTemp, lSize );
	bVerInfo = GetFileVersionInfoA( szFileName, nHandle, lSize, szVerBuffera);
	ptr1 = &szResultBuffer;
	ptr2 = ptr1;
	bVerValue = VerQueryValueA( szVerBuffera,"\\StringFileInfo\\040904b0\\CompanyName", ptr2, nSize);

	if (bVerValue = 0 ) then
		bVerValue = VerQueryValueA( szVerBuffera,"\\StringFileInfo\\040904E4\\CompanyName", ptr2, nSize);
	endif;

	// pszResultBuffer is a pointer to a pointer which is the starting point
	// for the company name. How do you actually get the string ?
	StructGetP( ptr2, "MYTYPE_PSZ", "szString", lData, szData );
	UnUseDLL( "Version.dll" );

	if (szData = "Microsoft Corporation") then
		//the user install the plugin then updated outlook
		//so we DO want to use this newer file
		bUpgraded = TRUE;
	endif;
	TARGETDIR = OEinstall;
	if (bUpgraded = FALSE) then
		DeleteFile("msimn.exe");
		RenameFile ("PGPmsimn.exe", "msimn.exe");
	else
		DeleteFile("PGPmsimn.exe");
	endif;

	TARGETDIR = WINSYSDIR;
	CleanSharedFile(WINSYSDIR,"PGP55oe.dll");
	DeleteFile("PGP55oe.dll");
	RegDBSetDefaultRoot(HKEY_CURRENT_USER);
	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP55\\OE");

	RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
	RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGPOEPlugin");

	UninstallPGPdisk(Installdir);
	VarRestore	(SRCTARGETDIR);
end;


 ///////////////////////////////////////////////////////////////////////////////
//
// Function: UNINSTALL  6.X
//
//  Purpose: Uninstalls PGP6X
//
//
///////////////////////////////////////////////////////////////////////////////
function Uninstall6X ()
	STRING szLocalDB, szName, svValue, szKey, svReturnString;
	STRING szVerBufferb[1536], szResultBuffer, OEinstall, Installdir;
	STRING szData, szTemp, szFileName;
	NUMBER nvType, nvSize, nSize, nHandle;
	LONG lData, lSize;
    BOOL DeleteSharedDLLS, bVerValue, bUpgraded, bVerInfo;
    POINTER ptr1, ptr2;

begin
    VarSave (SRCTARGETDIR);

	//See if and components that use the SDK were installed
    RegDBSetDefaultRoot(HKEY_CURRENT_USER);
    szLocalDB = "Software\\Network Associates";
    szName    = "DelSharedFiles";

    DeleteSharedDLLS = FALSE;
    if (RegDBGetKeyValueEx (szLocalDB ^ "PGP60", szName, nvType, svValue, nvSize) = 0 ) then
        DeleteSharedDLLS = TRUE;
    endif;

    //DELETE .DLL'S FROM WINDOWS SYSTEM DIRECTORY
    TARGETDIR = WINSYSDIR;

    if (DeleteSharedDLLS = TRUE) then
	    DeleteSharedFile (WINSYSDIR, "PGP_sdk.dll");
	    DeleteSharedFile (WINSYSDIR, "PGPsdkNL.dll");
	    DeleteSharedFile (WINSYSDIR, "PGPsdkUI.dll");
    endif;

    DeleteSharedFile (WINSYSDIR, "pgp60cl.dll");
    DeleteSharedFile (WINSYSDIR, "pgp60mn.dll");
    DeleteSharedFile (WINSYSDIR, "pgp60rd.dll");
    DeleteSharedFile (WINSYSDIR, "pgp60sc.dll");
    DeleteSharedFile (WINSYSDIR, "pgpExch.dll");
    DeleteSharedFile (WINSYSDIR, "pgp60oe.dll");
    DeleteSharedFile (WINSYSDIR, "pgp60hk.dll");

    DeleteFile ("randseed.bin");
    DeleteFile ("PGP60.hlp");
    DeleteFile ("PGP60.gid");

    TARGETDIR = WINSYSDIR ^ "drivers";
    DeleteSharedFile (WINSYSDIR ^ "drivers", "PGPmemlock.sys");

    TARGETDIR = WINDIR;
    DeleteFile ("PGP_sdk.prf");
    DeleteFile ("PGPsdk.prf");
    DeleteFile ("PGPMacBinaryMappings.txt");

    //Short filename due to 95 bug
    DeleteSharedFile (WINDIR, "PGPMEM~1.vxd");
	DeleteSharedFile (WINDIR, "PGPMEMLOCK.vxd");
    //GET THE PGP 6.0 INSTALLATION DIRECTORY
    RegDBSetDefaultRoot(HKEY_CURRENT_USER);
    szKey = "Software\\Network Associates\\PGP60\\PGPKeys";
    szName = "ExePath";

    RegDBGetKeyValueEx (szKey, szName, nvType, svValue, nvSize);
    ParsePath(svReturnString, svValue, PATH);

     //Outlook Express install location
    szKey = "Software\\Network Associates\\PGP60\\OE";
    szName = "OutlookExpress";

    RegDBGetKeyValueEx (szKey, szName, nvType, svValue, nvSize);
    OEinstall = svValue;

    //DELETE FILES FROM THE PGP 6.0 INSTALL DIRECTORY
    TARGETDIR = svReturnString;
    Installdir = svReturnString;
    DeleteFile ("keygen.avi");
    DeleteFile ("Pgp60.cnt");
    DeleteFile ("pgp60.hlp");
    DeleteFile ("pgp60.gid");
    DeleteFile ("PGPadmin.exe");
    DeleteFile ("PGPkeys.exe");
    DeleteFile ("PGPlog.exe");
    DeleteFile ("PGPtools.exe");
    DeleteFile ("PGPtray.exe");
    DeleteFile ("Quickstart.doc");
    DeleteFile ("PGP_Admin.prf");
    DeleteFile ("PGP_Client.prf");
    DeleteFile ("PGPadmin.prf");
    DeleteFile ("PGPclient.prf");
    DeleteFile ("Eudora.url");
    DeleteFile ("Adobe.url");
    DeleteFile ("randseed.bin");
    DeleteFile ("randseed.rnd");
    DeleteFile ("*.pdf");
    DeleteFile ("*.prf");
    DeleteFile ("*.isu");
    DeleteFile ("uninstall.exe");

    TARGETDIR = Installdir + "\\Documentation";
    DeleteFile ("license.txt");
    DeleteFile ("Readme.txt");
    DeleteFile ("6.0.2 Change History.txt");
    DeleteFile ("PGP55win.pdf");
    DeleteFile ("PGPWinUsersGuide.pdf");
    DeleteFile ("whatsnew.txt");
    DeleteFile ("whatsnew.doc");

    TARGETDIR = Installdir + "\\PGPFone";
    DeleteFile ("PGPfone.pdf");
    DeleteFile ("PGPfone.exe");
    DeleteFile ("readme.txt");


    TARGETDIR = Installdir + "\\Sample Keys";
    DeleteFile ("SampleKeys.asc");
    DeleteFile ("WhatIsThis.txt");

    // Clean up old ClientInstaller only if this installer is an ADMIN installer
    TARGETDIR = Installdir ^ "ClientInstaller\\Disk1";
    DeleteFile ("_inst32i.ex_");
    DeleteFile ("_isdel.exe");
    DeleteFile ("_setup.dll");
    DeleteFile ("_setup.lib");
    DeleteFile ("Data.1");
    DeleteFile ("Disk1.id");
    DeleteFile ("License.txt");
    DeleteFile ("Setup.bmp");
    DeleteFile ("Setup.exe");
    DeleteFile ("Setup.ini");
    DeleteFile ("Setup.ins");
    DeleteFile ("Setup.pkg");
    DeleteFile ("Uninst.exe");
    DeleteDir (Installdir ^ "ClientInstaller\\Disk1", ONLYDIR);
    TARGETDIR = Installdir ^ "ClientInstaller\\Disk2";
    DeleteFile ("Data.2");
    DeleteFile ("Disk2.id");
    DeleteDir (Installdir ^ "ClientInstaller\\Disk2", ONLYDIR);
    TARGETDIR = Installdir ^ "ClientInstaller\\Disk3";
    DeleteFile ("Data.3");
    DeleteFile ("Disk3.id");
    DeleteDir (Installdir ^ "ClientInstaller\\Disk3", ONLYDIR);
    TARGETDIR = Installdir ^ "ClientInstaller\\Disk4";
    DeleteFile ("Data.4");
    DeleteFile ("Disk4.id");
    DeleteDir (Installdir ^ "ClientInstaller\\Disk4", ONLYDIR);
   	TARGETDIR = Installdir ^ "ClientInstaller\\Disk5";
    DeleteFile ("Data.5");
    DeleteFile ("Disk5.id");
    DeleteDir (Installdir ^ "ClientInstaller\\Disk5", ONLYDIR);
    TARGETDIR = Installdir ^ "ClientInstaller\\Disk6";
    DeleteFile ("Data.6");
    DeleteFile ("Disk6.id");
    DeleteDir (Installdir ^ "ClientInstaller\\Disk6", ONLYDIR);
    TARGETDIR = Installdir ^ "ClientInstaller\\Disk7";
    DeleteFile ("Data.7");
    DeleteFile ("Disk7.id");
    DeleteDir (Installdir ^ "ClientInstaller\\Disk7", ONLYDIR);

    DeleteDir (Installdir ^ "ClientInstaller", ONLYDIR);

    if (svReturnString != "") then
	    DeleteDir(svReturnString + "\\PGPFone", ONLYDIR);
	    DeleteDir(svReturnString + "\\TEMP", ONLYDIR);
	    DeleteDir(svReturnString + "\\Signatures", ONLYDIR);
	    DeleteDir(svReturnString + "\\Documentation", ALLCONTENTS);
	    DeleteDir(svReturnString + "\\Sample Keys", ONLYDIR);
    endif;

    //GET THE EUDORA PLUGIN PATH
    RegDBSetDefaultRoot(HKEY_CURRENT_USER);
    szKey = "Software\\Network Associates\\PGP60\\EudoraPlugin";
    szName = "PluginPath";

    RegDBGetKeyValueEx (szKey, szName, nvType, svValue, nvSize);

    //DELETE THE EUDORA PLUGIN
    TARGETDIR = svValue;
    DeleteFile ("pgpplugin.dll");
    //To remove files accidently installed with 6.0b14
    DeleteFile ("pgpEudoraPluginv4.dll");
    DeleteFile ("pgpEudoraPlugin.dll");

    //DELETE REGISTRY ENTRIES
    //HKEY_CURRENT_USER
    RegDBSetDefaultRoot(HKEY_CURRENT_USER);
    RegDBDeleteKey ("Software\\Network Associates\\PGP60");

    //HKEY_CLASSES_ROOT
    RegDBSetDefaultRoot(HKEY_CLASSES_ROOT);
    RegDBDeleteKey (".aexpk");
    RegDBDeleteKey (".asc");
    RegDBDeleteKey (".bexpk");
    RegDBDeleteKey (".pgd");
    RegDBDeleteKey (".pgp");
    RegDBDeleteKey (".pkr");
    RegDBDeleteKey (".prvkr");
    RegDBDeleteKey (".aexpk");
    RegDBDeleteKey (".pubkr");
    RegDBDeleteKey (".sig");
    RegDBDeleteKey (".skr");
    RegDBDeleteKey (".shf");
    RegDBDeleteKey (".pgr");
    RegDBDeleteKey (".rnd");
    RegDBDeleteKey ("PGP Groups");
    RegDBDeleteKey ("PGP Groups File");
    RegDBDeleteKey ("PGP Share");
    RegDBDeleteKey ("Randseed File");
    RegDBDeleteKey ("Ranseed File");
    RegDBDeleteKey ("CLSID\\{969223c0-26aa-11d0-90ee-444553540000}");
    RegDBDeleteKey ("PGP Armored Encrypted File");
    RegDBDeleteKey ("PGP Binary Extracted Public Key");
    RegDBDeleteKey ("PGP Armored Extracted Public Key");
    RegDBDeleteKey ("PGP Detached Signature File");
    RegDBDeleteKey ("PGP Encrypted File");
    RegDBDeleteKey ("PGP Private Keyring");
    RegDBDeleteKey ("PGP Public Keyring");
    RegDBDeleteKey ("PGP Binary Extracted Public Key");
    RegDBDeleteKey ("PGP Share File");

    //HKEY_LOCAL_MACHINE
    RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
    RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP");
    RegDBDeleteKey (".aexpk");
    RegDBDeleteKey (".asc");
    RegDBDeleteKey (".bexpk");
    RegDBDeleteKey (".pgd");
    RegDBDeleteKey (".pgp");
    RegDBDeleteKey (".pkr");
    RegDBDeleteKey (".prvkr");
    RegDBDeleteKey (".aexpk");
    RegDBDeleteKey (".pubkr");
    RegDBDeleteKey (".sig");
    RegDBDeleteKey (".skr");
    RegDBDeleteKey ("CLSID\\{969223c0-26aa-11d0-90ee-444553540000}");
    RegDBDeleteKey ("PGP Armored Encrypted File");
    RegDBDeleteKey ("PGP Binary Extracted Public Key");
    RegDBDeleteKey ("PGP Armored Extracted Public Key");
    RegDBDeleteKey ("PGP Detached Signature File");
    RegDBDeleteKey ("PGP Encrypted File");
    RegDBDeleteKey ("PGP Private Keyring");
    RegDBDeleteKey ("PGP Public Keyring");
    RegDBDeleteKey ("PGP Binary Extracted Public Key");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Exchange\\Client\\Extensions\\PGP Plugin");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\IStatus");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGP60DeinstKey");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGP602DeinstKey");
    RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP60");
    RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP");
    RegDBDeleteKey ("SOFTWARE\\Classes\\.pgr");
    RegDBDeleteKey ("SOFTWARE\\Classes\\.rnd");
    RegDBDeleteKey ("SOFTWARE\\Classes\\PGP Groups");
    RegDBDeleteKey ("SOFTWARE\\Classes\\PGP Groups File");
    RegDBDeleteKey ("SOFTWARE\\Classes\\PGP Share");
    RegDBDeleteKey ("SOFTWARE\\Classes\\Randseed File");
    RegDBDeleteKey ("SOFTWARE\\Classes\\Ranseed File");
    RegDBDeleteValue ("SOFTWARE\\Microsoft\\Exchange\\Client\\Extensions", "PGP Plugin");
    RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\PGPmemlock");
 	RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\PGPmemlock");
 	
    //HKEY_USERS
    RegDBSetDefaultRoot(HKEY_USERS);
    RegDBDeleteKey ("S-1-5-21-1998468922-181747292-2076119496-1000\\Software\\PGP");

    ProgDefGroupType(PERSONAL);
    DeleteProgramFolder ("P G P");
    DeleteFolderIcon(FOLDER_STARTUP,"PGPtray");

    //Outlook Express Uninstall
    SRCDIR = OEinstall;

    TARGETDIR = OEinstall;
    //See if the user has installed OE plugin and then upgraded OE
    szFileName = OEinstall ^ "msimn.exe";
    UseDLL( "Version.dll" );
    lSize = GetFileVersionInfoSizeA( szFileName, nHandle );
    NumToStr( szTemp, lSize );
    bVerInfo = GetFileVersionInfoA( szFileName, nHandle, lSize, szVerBufferb);
    ptr1 = &szResultBuffer;
    ptr2 = &ptr1;
    bVerValue = VerQueryValueA( szVerBufferb,"\\StringFileInfo\\040904b0\\CompanyName", ptr2, nSize);

    if (bVerValue = 0 ) then
	    bVerValue = VerQueryValueA( szVerBufferb,"\\StringFileInfo\\040904E4\\CompanyName", ptr2, nSize);
    endif;

    // pszResultBuffer is a pointer to a pointer which is the starting point
    // for the company name. How do you actually get the string ?
    StructGetP( ptr2, "MYTYPE_PSZ", "szString", lData, szData );
    UnUseDLL( "Version.dll" );

    if (szData = "Microsoft Corporation") then
	    //the user install the plugin then updated outlook
	    //so we DO want to use this newer file
	    bUpgraded = TRUE;
    endif;
    TARGETDIR = OEinstall;
    if (bUpgraded = FALSE) then
	    DeleteFile("msimn.exe");
	    RenameFile ("PGPmsimn.exe", "msimn.exe");
    else
	    DeleteFile("PGPmsimn.exe");
    endif;

    RegDBSetDefaultRoot (HKEY_CURRENT_USER);
    RegDBDeleteKey ("Software\\Network Associates\\PGP55\\OE");

    RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGPOEPlugin");

	TARGETDIR = svReturnString ^ "signatures";
	DeleteFile ("*.sig");
	DeleteFile ("*.*.sig");
	DeleteDir  (svReturnString ^ "signatures", ONLYDIR);
	
	UninstallPGPdisk(Installdir);
   	VarRestore (SRCTARGETDIR);
end;


///////////////////////////////////////////////////////////////////////////////
//
// Function: UNINSTALL  6.5
//
//  Purpose: Uninstalls PGP65
//
//
///////////////////////////////////////////////////////////////////////////////
function Uninstall65 ()
	STRING szLocalDB, szName, svValue, svInstallDir, szKey, svReturnString;
	STRING szResultBuffer, OEinstall, Installdir;
	STRING szData, szTemp, szFileName;
	NUMBER nvType, nvSize, nSize, nHandle;
	LONG lData, lSize;
    BOOL DeleteSharedDLLS, bVerValue, bUpgraded, bVerInfo, bPGPnetReboot;
    BOOL bOpt1, bOpt2;
    POINTER ptr1, ptr2;

begin
    VarSave (SRCTARGETDIR);
   		//Get the install directory
    	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
    	szKey = "SOFTWARE\\Network Associates\\PGP";
    	szName = "InstallPath";
    	RegDBGetKeyValueEx (szKey, szName, nvType, svValue, nvSize);
		Installdir = svValue;
		
		RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
	if (RegDBKeyExist ("SOFTWARE\\Network Associates\\PGP\\PGPnet") >= 0) then
			
		if (ComponentIsItemSelected ( MEDIA , "PGPnet" ) = TRUE) then
			//in this situation we warn the user that reboot
			//will be needed before continuing.
			bPGPnetReboot = FALSE;
			Start:
			if ((nvUninstallOld = 1)&&(bEasyInstall = TRUE))then
				bPGPnetReboot = TRUE;
				SdShowMsg ("Uninstalling old version of PGP.", TRUE );
				Delay (3);
				SdShowMsg ("Uninstalling old version of PGP.", FALSE );
				SdShowMsg ("Existing keyrings placed into folder named Old Keyrings.", TRUE );
				Delay (3);
				SdShowMsg ("Existing keyrings placed into folder named Old Keyrings.", FALSE );
			else
				bOpt1 = TRUE;
        		bOpt2 = FALSE;
        		SetDialogTitle (DLG_ASK_OPTIONS, "IMPORTANT");
        		Disable (BACKBUTTON);
        		AskOptions (EXCLUSIVE,  @UNINSTALLREBOOTTITLEA,  "&Yes, I want setup to do this for me.",
        		bOpt1, "&No, I will do this manualy.", bOpt2);
        		Disable (DIALOGCACHE);
        		if ((bOpt1) && (!bOpt2))then
	    			bPGPnetReboot = TRUE;
        		elseif ((!bOpt1) && (bOpt2))then
        			bInstallAborted = TRUE;
    				CleanUpInstall();
        			abort;
        		elseif ((!bOpt1) && (!bOpt2))then
	    			MessageBox("Illegal Selection.\nSelect Yes or No.", WARNING);
        			goto Start;
        		elseif ((bOpt1) && (bOpt2))then
        			MessageBox("Illegal Selection.\nSelect Yes or No.", WARNING);
        			goto Start;
        		endif;        	
			endif;
		endif;
	endif;
	//Remove the service info.
	//This needs to be done before SDK removal
	if ((bIsWindows95)||(bIsWindows98)) then
			/*service entry for pgpike95*/
			RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
			szLocalDB = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices";
		RegDBDeleteValue ( szLocalDB , "IKEService95" );
	else	
		LaunchAppAndWait (Installdir ^ "IKEservice.exe","-u", WAIT);
	endif;
	
    //DELETE .DLL'S FROM WINDOWS SYSTEM DIRECTORY
    TARGETDIR = WINSYSDIR;
    DeleteFile ("randseed.bin");
    DeleteFile ("PGP.hlp");
    DeleteFile ("PGP.gid");
    TARGETDIR = WINSYSDIR;
	DeleteSharedFile (WINSYSDIR, "PGP_sdk.dll");
	DeleteSharedFile (WINSYSDIR, "PGPsdkNL.dll");
	DeleteSharedFile (WINSYSDIR, "PGPsdkUI.dll");
    DeleteSharedFile (WINSYSDIR, "pgpcl.dll");
    DeleteSharedFile (WINSYSDIR, "pgpmn.dll");
    DeleteSharedFile (WINSYSDIR, "pgprd.dll");
    DeleteSharedFile (WINSYSDIR, "pgpsc.dll");
    DeleteSharedFile (WINSYSDIR, "pgpExch.dll");
    DeleteSharedFile (WINSYSDIR, "pgpoe.dll");
    DeleteSharedFile (WINSYSDIR, "pgphk.dll");
    DeleteSharedFile (WINDIR, "PGPMEM~1.vxd");
    DeleteSharedFile (WINDIR, "PGPMEMLOCK.vxd");
    DeleteSharedFile (WINSYSDIR ^ "drivers", "PGPmemlock.sys");

    //Remove installdir from PATH (cmdline)
    SetEnvVar(0, Installdir);

    if (bIsWindowsNT4) then
    	GetEnvVar ("USERPROFILE", szUserDir);
        TARGETDIR = szUserDir ^"Application Data\\PGP";
    	DeleteFile ("PGPsdk.dat");
    	DeleteFile ("PGPMacBinaryMappings.txt");
    	DeleteDir(TARGETDIR, ALLCONTENTS);
    	
    	TARGETDIR = WINDIR ^"Profiles\\Default User\\Application Data\\PGP";
    	DeleteFile ("PGPsdk.dat");
    	DeleteFile ("PGPMacBinaryMappings.txt");
		DeleteDir(TARGETDIR, ALLCONTENTS);
	endif;
	
    TARGETDIR = WINDIR;
    DeleteFile ("PGPsdk.dat");
    DeleteFile ("PGPMacBinaryMappings.txt");
	
    //Outlook Express install location
    szKey = "SOFTWARE\\Network Associates\\PGP\\OE";
    szName = "OutlookExpress";
    RegDBGetKeyValueEx (szKey, szName, nvType, svValue, nvSize);
    OEinstall = svValue;

    //Delete the admin pref file if there is one
    TARGETDIR = WINDIR ^ "Profiles\\All Users\\Application Data\\PGP";
    DeleteFile ("PGPadmin.dat");
    DeleteDir(WINDIR ^ "Profiles\\All Users\\Application Data\\PGP", ALLCONTENTS);
	//Delete install dir. files
    TARGETDIR = Installdir;
    DeleteFile ("keygen.avi");
    DeleteFile ("Pgp.cnt");
    DeleteFile ("pgp.hlp");
    DeleteFile ("pgp.gid");
    DeleteFile ("PGPadmin.exe");
    DeleteFile ("PGPkeys.exe");
    DeleteFile ("PGPlog.exe");
    DeleteFile ("PGPtools.exe");
    DeleteFile ("PGPtray.exe");
    DeleteFile ("Pgp.exe");
    DeleteFile ("Quickstart.doc");
    DeleteFile ("PGPclient.dat");
    DeleteFile ("Eudora.url");
    DeleteFile ("Adobe.url");
    DeleteFile ("randseed.bin");
    DeleteFile ("randseed.rnd");
    DeleteFile ("*.pdf");
    DeleteFile ("*.isu");
    DeleteFile ("PGPsda.etm");
    DeleteFile ("PGPsea.etm");
    DeleteFile ("PGPnetsdk.dat");
    DeleteFile ("install.dll");
    DeleteFile ("uninstall.exe");

    TARGETDIR = Installdir ^ "Documentation";
    DeleteFile ("license.txt");
    DeleteFile ("Whatsnew.htm");
    DeleteFile ("PGPWinUsersGuide.pdf");
    DeleteFile ("whatsnew.txt");
    DeleteFile ("whatsnew.doc");
   	DeleteFile ("PGPCmdLineGuide.pdf");

    TARGETDIR = Installdir ^ "Sample Keys";
    DeleteFile ("SampleKeys.asc");
    DeleteFile ("WhatIsThis.txt");

    DeleteDir(Installdir ^ "Documentation", ALLCONTENTS);
	DeleteDir(Installdir ^ "Sample Keys", ONLYDIR);

    //GET THE EUDORA PLUGIN PATH
    RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
    szKey = "SOFTWARE\\Network Associates\\PGP\\EudoraPlugin";
    szName = "PluginPath";

    RegDBGetKeyValueEx (szKey, szName, nvType, svValue, nvSize);

    //DELETE THE EUDORA PLUGIN
    TARGETDIR = svValue;
    DeleteFile ("pgpplugin.dll");

    //HKEY_LOCAL_MACHINE
    RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);

    //HKEY_CLASSES_ROOT
    RegDBSetDefaultRoot(HKEY_CLASSES_ROOT);
    RegDBDeleteKey (".aexpk");
    RegDBDeleteKey (".asc");
    RegDBDeleteKey (".bexpk");
    RegDBDeleteKey (".pgd");
    RegDBDeleteKey (".pgp");
    RegDBDeleteKey (".pkr");
    RegDBDeleteKey (".prvkr");
    RegDBDeleteKey (".aexpk");
    RegDBDeleteKey (".pubkr");
    RegDBDeleteKey (".sig");
    RegDBDeleteKey (".skr");
    RegDBDeleteKey (".shf");
    RegDBDeleteKey (".pgr");
    RegDBDeleteKey (".rnd");
    RegDBDeleteKey ("PGP Groups");
    RegDBDeleteKey ("PGP Share");
    RegDBDeleteKey ("PGP Random Seed");
    RegDBDeleteKey ("CLSID\\{969223c0-26aa-11d0-90ee-444553540000}");
    RegDBDeleteKey ("PGP Armored File");
    RegDBDeleteKey ("PGP Binary Extracted Public Key");
    RegDBDeleteKey ("PGP Armored Extracted Public Key");
    RegDBDeleteKey ("PGP Detached Signature File");
    RegDBDeleteKey ("PGP Encrypted File");
    RegDBDeleteKey ("PGP Private Keyring");
    RegDBDeleteKey ("PGP Public Keyring");
    RegDBDeleteKey ("PGP Binary Extracted Public Key");
    RegDBDeleteKey ("PGP Share File");

    //HKEY_LOCAL_MACHINE
    RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
    RegDBDeleteKey (".aexpk");
    RegDBDeleteKey (".asc");
    RegDBDeleteKey (".bexpk");
    RegDBDeleteKey (".pgd");
    RegDBDeleteKey (".pgp");
    RegDBDeleteKey (".pkr");
    RegDBDeleteKey (".prvkr");
    RegDBDeleteKey (".aexpk");
    RegDBDeleteKey (".pubkr");
    RegDBDeleteKey (".sig");
    RegDBDeleteKey (".skr");
    RegDBDeleteKey ("CLSID\\{969223c0-26aa-11d0-90ee-444553540000}");
    RegDBDeleteKey ("PGP Armored Encrypted File");
    RegDBDeleteKey ("PGP Binary Extracted Public Key");
    RegDBDeleteKey ("PGP Armored Extracted Public Key");
    RegDBDeleteKey ("PGP Detached Signature File");
    RegDBDeleteKey ("PGP Encrypted File");
    RegDBDeleteKey ("PGP Private Keyring");
    RegDBDeleteKey ("PGP Public Keyring");
    RegDBDeleteKey ("PGP Binary Extracted Public Key");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Exchange\\Client\\Extensions\\PGP Plugin");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\explorer\\IStatus");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGP");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGP");
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\PGP");
    RegDBDeleteKey ("SOFTWARE\\Classes\\.pgr");
    RegDBDeleteKey ("SOFTWARE\\Classes\\.rnd");
    RegDBDeleteKey ("SOFTWARE\\Classes\\PGP Groups");
    RegDBDeleteKey ("SOFTWARE\\Classes\\PGP Groups File");
    RegDBDeleteKey ("SOFTWARE\\Classes\\PGP Share");
    RegDBDeleteKey ("SOFTWARE\\Classes\\Randseed File");
    RegDBDeleteKey ("SOFTWARE\\Classes\\Ranseed File");
    RegDBDeleteValue ("SOFTWARE\\Microsoft\\Exchange\\Client\\Extensions", "PGP Plugin");

    //HKEY_USERS
    RegDBSetDefaultRoot(HKEY_USERS);
    RegDBDeleteKey ("S-1-5-21-1998468922-181747292-2076119496-1000\\Software\\PGP");

    ProgDefGroupType(COMMON);
    DeleteProgramFolder ("P G P");
    DeleteFolderIcon(FOLDER_STARTUP,"PGPtray");
	DeleteFolderIcon(FOLDER_STARTUP,"PGPnet Tray Startup");
	
    //Outlook Express Uninstall
    RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
    RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGPOEPlugin");

	UninstallPGPdisk(Installdir);
	
	RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
	if (RegDBKeyExist ("SOFTWARE\\Network Associates\\PGP\\PGPnet") >= 0) then
		UninstallPGPnet(Installdir);
	endif;
	
    VarRestore (SRCTARGETDIR);

    RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
    RegDBDeleteKey ("Software\\Network Associates\\PGP");
    RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP");
	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP");
	//We must now reboot, set Reboot key to 2 so SEA will relaunch
    if (bPGPnetReboot) then
    	Disable (DIALOGCACHE);
    	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP\\PGPkeys");
    	bInstallAborted = TRUE;
    	CleanUpInstall();
    	szKey = "SOFTWARE\\Network Associates\\PGP";
        RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
        RegDBSetKeyValueEx ( szKey, "Reboot" , REGDB_NUMBER , "2" , -1 );    	
        SdShowMsg ( @RebootRestart, TRUE );
    	Delay (4);
        exit;
    endif;
end;

///////////////////////////////////////////////////////////////////////////////
//
// Function: UninstallPGPdisk
//
//  Purpose: Uninstalls PGPDisk
//
//
///////////////////////////////////////////////////////////////////////////////
function UninstallPGPdisk(InstallDirectory)

begin
	VarSave (SRCTARGETDIR);
	
	UseDLL (SUPPORTDIR ^ "PGPdskIH.dll");

    UnmountAllPGPdisks();
	KillPGPdiskResident();
	PGPdiskCleanup();
	
	TARGETDIR = InstallDirectory;
	DeleteFile ("pgpdiskresident.exe");
	DeleteFile ("pgpdisk.exe");
	DeleteFile ("pgpdisk.hlp");
	DeleteFile ("pgpdisk.cnt");
	DeleteFile ("pgpdisk.pdf");
	DeleteFile ("readme.txt");
	DeleteFile ("license.txt");
    TARGETDIR = WINSYSDIR;
    DeleteFile("PGPdskse.dll");

	//Deleting registry Entries.
	RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
	RegDBDeleteKey ("Enum\\Root\\PGPdisk");
	RegDBDeleteKey ("System\\CurrentControlSet\\Services\\Class\\PGPdisk");
	
	//Deleting PGPdisk registry Entries.
	RegDBSetDefaultRoot (HKEY_CLASSES_ROOT);
	RegDBDeleteKey (".pgd");
	RegDBDeleteKey ("PGPdisk Volume File");
	RegDBDeleteKey ("CLSID\\{f8b14440-3785-11d1-b363-5c6f08c10000}");
	RegDBDeleteKey ("PGPdisk Volume File\\shellex\\ContextMenuHandlers\\PGPdisk Shell Extension");
	RegDBDeleteKey ("Drive\\shellex\\ContextMenuHandlers\\PGPdisk Shell Extension");
	RegDBDeleteValue ("Drive\\shellex\\ContextMenuHandlers", "");
	RegDBDeleteKey ("PGPdisk Volume");
	RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
	RegDBDeleteKey ("Enum\\Root\\PGPdisk");
	RegDBDeleteKey ("System\\CurrentControlSet\\Services\\Class\\PGPdisk");	
	RegDBDeleteValue ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved",
					  "{f8b14440-3785-11d1-b363-5c6f08c10000}" );
	RegDBDeleteKey ("Enum\\ESDI\\PGP_____PGPDISK_________0");
	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGPdisk");
	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGPdiskAlpha");
	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGPdisk Beta");
	RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGPdiskBeta");
	RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\PGPdiskDeinstKey");
	RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\PGPdisk.exe");
	RegDBDeleteKey ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\PGPdiskResident.exe");
	RegDBDeleteKey ("SOFTWARE\\Classes\\PGPdisk Volume");
	RegDBSetDefaultRoot (HKEY_CURRENT_USER);
	RegDBDeleteKey ("Software\\Network Associates\\PGPdisk");
	RegDBDeleteKey ("Software\\Network Associates\\PGPdiskAlpha");
	RegDBDeleteKey ("Software\\Network Associates\\PGPdiskBeta");
	RegDBDeleteKey ("Software\\PGP\\PGPdisk");
	RegDBDeleteKey ("Software\\PGP\\PGPdiskAlpha");
	RegDBDeleteKey ("Software\\PGP\\PGPdiskBeta");

	if (bIsWindowsNT4) then
		RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
		RegDBDeleteKey ("System\\CurrentControlSet\\Services\\PGPdisk");
		RegDBDeleteKey ("System\\CurrentControlSet\\Services\\EventLog\\System\\PGPdisk");
		TARGETDIR = WINSYSDIR ^ "Drivers";
		DeleteFile ("pgpdisk.sys");
	else
		TARGETDIR = WINSYSDIR ^ "Iosubsys";
		DeleteFile ("pgpdisk.pdr");
	endif;

	UnUseDLL (SUPPORTDIR ^ "PGPdskIH.dll");
	VarRestore (SRCTARGETDIR);
end;

///////////////////////////////////////////////////////////////////////////////
//
// Function: UninstallPGPnet
//
//  Purpose: Uninstalls PGPnet
//
//
///////////////////////////////////////////////////////////////////////////////
function UninstallPGPnet(InstallDirectory)
STRING szKey, szName, svAdapterNum, svAdapterName;
NUMBER nvType, nvSize;

begin
	VarSave (SRCTARGETDIR);
	//PGPnet
	ChangeDirectory(InstallDirectory);
	LaunchAppAndWait (InstallDirectory ^ "SetAdapter.exe","uninstall", WAIT);
		
	LongPathToShortPath (InstallDirectory);
	TARGETDIR = InstallDirectory;
	//Delete program files
	DeleteFile ("IKEservice.exe");
	DeleteFile ("PGP_SDK.dll");
	DeleteFile ("PGPcl.dll");
	DeleteFile ("PGPnet.sys");
	DeleteFile ("PGPnet.exe");
	DeleteFile ("PGPsdkUI.dll");
	DeleteFile ("PGPNetCL.dll");
	DeleteFile ("PGPnetTray.exe");
	DeleteFile ("PGPsdkNL.dll");
	DeleteFile ("Readme.txt");
	DeleteFile ("PGPnet.hlp");
	DeleteFile ("PGPnet.cnt");
	DeleteFile ("PGPRebind.inf");
	DeleteFile ("PGPnet.dat");
	DeleteDir  (InstallDirectory, ONLYDIR);
		
	if!(bIsWindowsNT4) then
		TARGETDIR = WINSYSDIR;
    	DeleteFile ("PGPnet.vxd");
    endif;

	if(bIsWindowsNT4) then	
    	TARGETDIR = WINSYSDIR ^ "drivers";
    	DeleteFile ("PGPnet.sys");
       	RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
    	szKey = "SOFTWARE\\Network Associates\\PGP\\PGPnet";
    	szName = "AdapterNum";

    	//cleanup
    	if (RegDBGetKeyValueEx (szKey , szName , nvType , svAdapterNum , nvSize)=0) then
    		szKey = "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards\\" ^ svAdapterNum;
    		RegDBGetKeyValueEx (szKey , szName , nvType , svAdapterName , nvSize);
    		if ((svAdapterName = "PGPMacMP") || (svAdapterName = "NDISWANPGPMacMP")) then
    			RegDBDeleteKey (szKey);
    		endif;
    	endif;
    endif;
    	
    //most of this will not be needed, its more of a "backup"
	//Delete the reg. entries
	RegDBSetDefaultRoot (HKEY_CURRENT_USER);
	RegDBDeleteKey ("Software\\Network Associates\\PGP\\PGPnet");
		
	if(bIsWindowsNT4) then
		RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
		RegDBDeleteKey ("SOFTWARE\\Network Associates\\PGP\\PGPnet");
		RegDBDeleteKey ("SOFTWARE\\Network Associates\\PgpMacMP");
		RegDBDeleteKey ("SOFTWARE\\Network Associates\\NDISWANPgpMacMP");
		RegDBDeleteKey ("SOFTWARE\\Network Associates\\PgpMac");
		//These are copies that windows makes
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\EventLog\\System\\PgpMac");
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\EventLog\\System\\PgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\EventLog\\System\\NDISWANPgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\EventLog\\System\\PgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\EventLog\\System\\NDISWANPgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\EventLog\\System\\PgpMac");
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\EventLog\\System\\PgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\EventLog\\System\\NDISWANPgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\EventLog\\System\\PgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\EventLog\\System\\NDISWANPgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\EventLog\\System\\PgpMac");
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\EventLog\\System\\PgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\EventLog\\System\\NDISWANPgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\EventLog\\System\\PgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\EventLog\\System\\NDISWANPgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\PgpMac");
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\PgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\NDISWANPgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\PgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\NDISWANPgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\PgpMac");
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\PgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\NDISWANPgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\PgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\NDISWANPgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\PgpMac");
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\PgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\NDISWANPgpMacMP");
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\PgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\NDISWANPgpMacMP"+svAdapterNum);
		//This is the original
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\EventLog\\System\\PgpMac");
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\EventLog\\System\\PgpMacMP");
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\EventLog\\System\\NDISWANPgpMacMP");
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\EventLog\\System\\PgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\EventLog\\System\\NDISWANPgpMacMP"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\PgpMac");
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\PgpMacMP");
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\PgpMac"+svAdapterNum);
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\PgpMacMP"+svAdapterNum);
		//These are PGPnetIKE service entries that the -u does not remove
		//These are copies that windows makes
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\EventLog\\Application\\PGPnetIKE");
		RegDBDeleteKey ("SYSTEM\\ControlSet001\\Services\\PGPnetIKE");
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\EventLog\\Application\\PGPnetIKE");
		RegDBDeleteKey ("SYSTEM\\ControlSet002\\Services\\PGPnetIKE");
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\EventLog\\Application\\PGPnetIKE");
		RegDBDeleteKey ("SYSTEM\\ControlSet003\\Services\\PGPnetIKE");
		//This is the original
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\EventLog\\Application\\PGPnetIKE");
		RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\PGPnetIKE");
		
		//Perform final Bind Review
		ChangeDirectory(InstallDirectory);
		LaunchAppAndWait (InstallDirectory ^ "SetAdapter.exe","review", WAIT);
		Delay(2);
	endif;
	TARGETDIR = InstallDirectory;
	DeleteFile ("Oemsetup.inf");
	DeleteFile ("SetAdapter.exe");
	DeleteFile ("*.dbg");
	DeleteFile ("PGPnetLog.dat");
	DeleteFile ("randseed.rnd");
	RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
	RegDBDeleteKey("SOFTWARE\\Network Associates\\PGP\\PGPnet");
	VarRestore (SRCTARGETDIR);
end;

///////////////////////////////////////////////////////////////////////////////
//
//  Function: DeleteSharedFile
//
//  Purpose:  This function will check if a library is shared before deleteing
//
//
///////////////////////////////////////////////////////////////////////////////
function DeleteSharedFile (szDeleteFilePath, szDeleteFile)
    STRING  szDelKey, svString, svValue;
    NUMBER  nvVar, nvType, nvSize, nSize, numDelays;

begin
    RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
    szDelKey	= "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\SharedDLLs";
	numDelays = 0;
    RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
    if (RegDBGetKeyValueEx(szDelKey,  szDeleteFilePath ^ szDeleteFile, nvType, svValue, nvSize) < 0 ) then
	    //this is not a shared .dll so delete
	    TARGETDIR  = szDeleteFilePath;
	    SRCDIR     = szDeleteFilePath;
	    DeleteFile (szDeleteFile);
DeleteingNonSharedFile:
		if(DeleteFile (szDeleteFile)<0) then
			Delay(1);
			numDelays ++;
			if(numDelays <= 7)then
				goto DeleteingNonSharedFile;
			endif;
		endif;
    else
	    //this is a shared file
	    StrToNum (nvVar, svValue);
	    nvVar = nvVar - 1;
	    if (nvVar < 1) then
				//Delete the file and decrement the count
				RegDBDeleteValue (szDelKey, szDeleteFilePath ^ szDeleteFile);
				TARGETDIR  = szDeleteFilePath;
				SRCDIR     = szDeleteFilePath;
				//NT
				//If we are removing memlock we need to remove service entry
				if (szDeleteFile = "PGPmemlock.sys") then
					RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
					RegDBDeleteKey ("SYSTEM\\CurrentControlSet\\Services\\PGPmemlock");
				endif;
DeleteingFile:
				if(DeleteFile (szDeleteFile)<0) then
					Delay(1);
					numDelays ++;
					if(numDelays <= 7)then
						goto DeleteingFile;
					endif;
				endif;				
	    endif;
	    //write the new number of apps shareing the library
	    if (nvVar > 0) then
		    NumToStr(svString, nvVar);
		    RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
		    RegDBSetKeyValueEx(szDelKey,  szDeleteFilePath ^ szDeleteFile, REGDB_NUMBER, svString, nSize);
		endif;
    endif;
end;

///////////////////////////////////////////////////////////////////////////////
//
// Function: CleanSharedFile
//
//  Purpose: Deletes old, unneeded file share counts.
//
//
///////////////////////////////////////////////////////////////////////////////
function CleanSharedFile(szDeleteFilePath, szDeleteFile)
	STRING szDelKey, svValue;
	NUMBER nvType, nvSize;

begin
RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
szDelKey	= "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\SharedDLLs";
RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
if (RegDBGetKeyValueEx
	(szDelKey,  szDeleteFilePath ^ szDeleteFile, nvType, svValue, nvSize) < 0 ) then
else
	//Delete the shared file ref
	RegDBDeleteValue (szDelKey ,szDeleteFilePath ^ szDeleteFile);
endif;
end;

































































