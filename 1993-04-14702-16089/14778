Path: msuinfo!uwm.edu!spool.mu.edu!torn!nott!cunews!revcan!balsam!uuisis!tanda!marc
From: marc@tanda.isis.org (Marc Thibault)
Newsgroups: sci.crypt
Subject: Re: Identifying / Securing Files
Message-ID: <34736405DN5.61R@tanda.isis.org>
Date: Thu, 01 Apr 93 09:21:02 EDT
References: <C4MI2p.57u.1@cs.cmu.edu>
Reply-To: marc@tanda.isis.org
Distribution: na
Organization: Thibault & Friends
Lines: 61

In article <C4MI2p.57u.1@cs.cmu.edu> 
Marc.Ringuette@GS80.SP.CS.CMU.EDU writes: 

> Part of the difficulty is that it's a hard problem to formalize.  Here's
> a crack at it.  Can you prove anything about the following two problems?

        ...

        It would seem that the first problem cryptographic software
        authentication must overcome is that any program that one
        machine can run, another machine can emulate with full
        visibility at every step. This means that delaying part of
        the process with an obfuscating function only delays and
        doesn't obfuscate. Eventually, authenticating code must
        be executed. Once it is executed with a valid key, any secret
        it might hide is out, and an attacker can replace the
        authentication function with an equivalent(?) one that does not
        require a key. This is true even if the authenticating code
        is some of the production code. (Encrypting the production
        code is a great way to stop someone who doesn't have a valid
        key, but I'm assuming the challenge is to stop someone who has
        a valid key and wants to remove the locks altogether)

        The best protection might be to put in lots of authenticators,
        in many places, with many ways of getting the key, so that the
        cost to an attacker to track them all down is orders of
        magnitude greater than the value of the product. Even in this
        case you have to deal with the challenge factor. A lot of
        fiendishly protected games have been laboriously cracked and
        then released into the wild with no benefit to the cracker
        other than the satisfaction of having done it.

   (?)  There is a more general question that bears directly on this:
        Does every cryptographic authenticating function have an
        equivalent non-cryptographic function? If the answer is "no,"
        the proof of that answer probably bears the seed of a solution
        to Marc's challenge.

        Cheers,
                Another Marc

---
 Marc Thibault        | CIS:71441,2226     |  Put another log
 marc@tanda.isis.org  | NC FreeNet: aa185  |  on the fire.

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: 2.0

mQBNAiqxYTkAAAECALfeHYp0yC80s1ScFvJSpj5eSCAO+hihtneFrrn+vuEcSavh
AAUwpIUGyV2N8n+lFTPnnLc42Ms+c8PJUPYKVI8ABRG0I01hcmMgVGhpYmF1bHQg
PG1hcmNAdGFuZGEuaXNpcy5vcmc+
=HLnv
-----END PGP PUBLIC KEY BLOCK-----
 
 






