Path: msuinfo!uwm.edu!spool.mu.edu!enterpoop.mit.edu!eru.mt.luth.se!kth.se!dront.nada.kth.se!cwe
From: cwe@dront.nada.kth.se (Christian Wettergren)
Newsgroups: sci.crypt,alt.security.pgp
Subject: Re: Seeding PGP 2.2 to your BBS
Message-ID: <1993Apr1.091620.5737@kth.se>
Date: 1 Apr 93 09:16:20 GMT
References: <gradyC4K7tC.B8y@netcom.com> <1993Mar29.131236.2633@vixvax.mgi.com> <1993Mar30.135832.2688@vax1.utulsa.edu>
Sender: usenet@kth.se (Usenet)
Organization: Royal Institute of Technology, Stockholm, Sweden
Lines: 65
Nntp-Posting-Host: dront.nada.kth.se
Xref: msuinfo sci.crypt:14735 alt.security.pgp:2318

First cepek@vixvax.mgi.com writes:
> A problem I have with this is the ease with which files can be tampered
> with when sitting around on a BBS.  I feel I can better trust some well-
> known sites (like ghost, black.ox, garbo, etc.), even if they are an
> ocean away.

Then lmc40132@vax1.utulsa.edu replies:
>Well, doesn't the PGP 2.2 distribution archive (DOS executables anyway) have
>the signature of the author in them?  Just don't accept an archive that doesn't
>have his signature on it.  If you don't trust they key, then you most likely
>don't trust the program all that well either.

How does one verify the signature then? With the code of the untrusted archive?

I have a suggestion that perhaps might be acceptable to some sites that cannot
export PGP. 

Set up an incoming tcp/udp-port which accepts a bytestream (by for example 
Daniel Bernstein's tcpserver-package). When a bytestream comes in, check it 
against a source, and output a 1 if they match, a 0 else. (One could of 
course run MD5 or even PGP on the bytestream, but I don't think that would
buy you anything.)

I this way we could verify that the source is indeed correct. The site offering
the service does not run PGP or any encryption at all, so they are safe in
that regard. (No import/export restrictions, no patent infringements, no code
whose integrity has to be checked.)

Then to the possession of the source. I'm not sure that possession of the full
source code (or binary) is ok in the USA, but you are at least not actively
and provably using RSA. You may very well use almost any algorithm to verify
that the source is ok. How does someone from the outside determine if you're
just looking at the first ten bytes, a /bin/sum of it or something else?

The issue of import: The offender is the person which is uploading it to the
site, and he is almost anonymous and probably outside the scope of the site's
jurisdiction. The site is not keeping the copy, it just throws it away 
immediately. Beside, the site is just accepting any bytestream from the out-
side. (Then one has to be careful about the wording of "announcement", though.)

The issue of export: Clearly no export is done, unless NSA want's to put
export-controls on the result of any predicates answering the question: is this
actually PGP?

The problem is of course that you have to trust the site offering the service,
and the link in between. But that was what we started with, so I can't see
any problem here. (For the truely paranoid, do traceroute!)

What do you think? 

Regards,
	Christian Wettergren, cwe@nada.kth.se

PS. No flames, I'm not advocating any crimes here, ok? (I have checked 
the legal status of PGP in Sweden, and it's all green according to the
authorities I have been in touch with.)

PPS. Perhaps this thread should be directed to alt.security.pgp, unless
some sci.crypt Guru can come up some cryptological problem with this
scheme.
-- 
--------------------------------------------------------------------------
Christian Wettergren, cwe@nada.kth.se, 08 - 641 14 02
Hi! I am a mutating signature viruSTOMP!eacheSTOMP!e too!
STOMP! STOMP! STOMP! SigVirCatcher was here!
