Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!darwin.sura.net!sgiblab!sti!sti.com!alaric
From: alaric@sti.com (Alaric Tekiahyn)
Newsgroups: sci.crypt,alt.security.pgp
Subject: Re: disk safety measure?
Date: 8 Apr 1993 01:08:35 GMT
Organization: Software Transformation, Inc.
Lines: 32
Sender: alaric@smurf (Alaric Tekiahyn)
Distribution: world
Message-ID: <1pvtuj$67s@smurf.sti.com>
References: <1993Apr5.084703.23757@ucsu.Colorado.EDU> <gradyC50MF5.6tv@netcom.com> <1pq0re$gc2@network.ucsd.edu> <1993Apr6.235830.28079@fsl.noaa.gov>
NNTP-Posting-Host: smurf.sti.com
Xref: msuinfo sci.crypt:14896 alt.security.pgp:2420

In article <1993Apr6.235830.28079@fsl.noaa.gov>, bear@kestrel.fsl.noaa.gov (Bear Giles) writes:
] This raises an interesting question I've always meant to investigate.
] 
] DOS is known to be fairly naive, to be kind, since it doesn't clear
] disk space during assignment to a file (as mentioned above).  This yields
] really strange behavior like allegations that Prodigy is stealing software
] from its subscribers....
] 
] I am 99% certain DOS doesn't clear the bytes at the end of a program
] file when you load it, either.  (I believe the Amiga OS does, in contrast).
] 
] Now, the big question: is DOS, or any other OS, dumb enough to simply follow
] the file pointer chain and not check the nominal size of a file at all?
] 
] That is, if I have a program which fits into a single block (with the 
] correct size) but the FAT table says it that a second block follows it,
] does DOS load that block as well?

In a word, no.  Loading executable files is a whole different kettle of
fish than allocating disk space.  To assume that Dos will load up to 32k of
random garbage into memory (the maximum cluster size under DOS 4+) merely
because the program it's loading doesn't entirely fill the last cluster
allocated to it is, bluntly, completely absurd.

(Trust me on this.  I used to work for Microsoft.)


-- 
   / Phil V. Stracchino -- Alaric Tekiahyn -- The Renaissance Man \
  / Email:: <phils@sti.com>, <alaric@sti.com>.  PGP 2.2 public key \
 / available on public key servers (finger alaric@sti.com for info) \
/ Key fingerprint = DD 46 2E 4B 27 B9 A6 AC  EB 5B 95 AE 57 38 80 D4 \
