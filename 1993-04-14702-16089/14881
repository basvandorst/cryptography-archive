Path: msuinfo!uwm.edu!wupost!uunet!think.com!enterpoop.mit.edu!senator-bedfellow.mit.edu!news.mit.edu!warlord
From: warlord@MIT.EDU (Derek Atkins)
Newsgroups: sci.crypt
Subject: Re: Seeding PGP 2.2 to your BBS
Date: 7 Apr 1993 11:36:37 GMT
Organization: Massachusetts Institute of Technology
Lines: 58
Message-ID: <WARLORD.93Apr7073637@toxicwaste.mit.edu>
References: <1993Apr2.114300.2738@vax1.utulsa.edu> <1993Apr3.003551.25193@wixer.cactus.org>
	<1993Apr6.111218.2664@vixvax.mgi.com>
NNTP-Posting-Host: toxicwaste.mit.edu
In-reply-to: cepek@vixvax.mgi.com's message of 6 Apr 93 11:12:18 CDT

-----BEGIN PGP SIGNED MESSAGE-----

In article <1993Apr6.111218.2664@vixvax.mgi.com> cepek@vixvax.mgi.com writes:

   TOPIC REFOCUS ATTEMPT...  rather than debate the percentage of 
   trustworthy sites, I'd like to see discussion on how to avoid having 
   that trust in the first place.  What methods can be used to ensure that 
   the recipient of a PGP distribution can be confident that what they have 
   is the same as was generated by Phil, Branko, and friends?

   Getting multiple copies from a variety of sites was one recent 
   suggestion.  Getting and building set of trusted keys seems like a
   prerequisite (aka roadblock) for verification, but this provides maximum 
   security.  I asked about methods to help increase confidence in the
   sources (not just executables).  Is stand-alone verifiability possible?
   It would be nice, since many of these grassroots newbies won't have 
   a prior version of PGP to check the new (their first) version out with.
   With so many intelligent and wise folks out there, I'm surprised that
   this issue isn't making more progress.  Am I out in left field?

This topic has been discussed a lot, and unfortunately, no one has
come up with a good bootstrapping method.  In the 2.2 release, there
is a program that will check the md5 hash of the code, and also there
were signatures made of the three distribution files (pgp22.zip,
pgp22src.zip, and pgp22.tar.Z).

However, like you say, there is really no way to bootstrap.  An
unscrupulous hacker could easily change the code so that it thinks
that it is ok.  It can hack the signature code so that all signatures
are valid, or whatever...

If you can come up with a good way to bootstrap PGP, it would be most
welcomed.  The best that has been of is a signature by a well-known
person and try to distribute that as much as possible, so that someone
could build the code and then test the sources...  But, like I said,
it is always open to attack.

Its an interesting question, but I'm not sure if there is any
solution, yet....

- -derek

PGP 2 key available upon request on the key-server:
	pgp-public-keys@toxicwaste.mit.edu

-----BEGIN PGP SIGNATURE-----
Version: 2.2

iQBuAgUBK8K8Wzh0K1zBsGrxAQExlALED2OddJvBXBlw7zMh1n5aZ2TGUkBisoPC
TfGsOw2wvc5fx4VcTKTQuAVWuTLjWcp91GXcK/+BOcRevcXJoq+jkMHKwQc8zPyG
imETrrHQn7/XfryZlYssgzY=
=xHbQ
-----END PGP SIGNATURE-----
--
  Derek Atkins, MIT '93, Electrical Engineering and Computer Science
     Secretary, MIT Student Information Processing Board (SIPB)
           MIT Media Laboratory, Speech Research Group
           warlord@MIT.EDU       PP-ASEL        N1NWH
