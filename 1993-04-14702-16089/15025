Newsgroups: news.admin.policy,comp.admin.policy,sci.crypt,comp.mail.mime
Path: msuinfo!caen!sol.ctr.columbia.edu!eff!ckd
From: ckd@eff.org (Christopher Davis)
Subject: The future of MIME (was Re: PEM and MIME)
In-Reply-To: john@chance.gts.org's message of Wed, 14 Apr 1993 16:57:07 GMT
Message-ID: <CKD.93Apr14214542@loiosh.eff.org>
Followup-To: comp.mail.mime
Sender: usenet@eff.org (NNTP News Poster)
Nntp-Posting-Host: loiosh.eff.org
Organization: Electronic Frontier Foundation Tech Central
References: <1993Apr12.023902.21103@r-node.hub.org> <C5Dzuw.CH6@zoo.toronto.edu>
	<1qfi4bINNqk3@shelley.u.washington.edu>
	<1993Apr14.165707.20615@chance.gts.org>
Date: Thu, 15 Apr 1993 01:45:44 GMT
Lines: 46
Xref: msuinfo news.admin.policy:5069 comp.admin.policy:3008 sci.crypt:15025 comp.mail.mime:814

[trimming followups]
JRM> == John R MacMillan <john@chance.gts.org>

 JRM> As more and more people try to use MIME, I expect one of two things
 JRM> will happen:

 JRM> 1. MIME will fail, and we'll know more for the next attempt, or (I
 JRM>    hope)

 JRM> 2. Other RFCs will come which specify additional semantics for MIME
 JRM>    messages, new ``standard'' models for multimedia exchange, lists of
 JRM>    content types considered minimal for reasonable implementations to
 JRM>    support, etc. all based on the MIME spec.

The second option here sounds much like what RFC1122/RFC1123 have done for
the rest of the "standard" TCP/IP suite--clarify weak points, specify a
minimal interoperable set, show how the "usual" extensions are to be
handled, and so forth.

One very nice part of the MIME spec, IMHO, is the two part "type/subtype"
design.  It makes it relatively easy to deal with unknown subtypes by
having a "default" behavior for the major type:

 text        - display to the user; these are designed to be human-readable.
               There may be formatting code, but it should be reasonably
               unobtrusive.  (The 'richtext' type is about the maximal
               amount of formatting I consider to fit this category.)

 application - offer to save; don't display it unless you recognize it.
               This is for non-human-readable data; I use it for diffs and
               program code, even if they're "human readable", because
               they're not intended to be read.  (application/x-context-diff)

 multipart   - treat as multipart/mixed if unrecognized.

 message     - rfc822, partial, and external-body are all in the main spec,
               and I don't see others coming any time soon.  If
               unrecognized, display as 'text'.

 image       - offer to save if in an unrecognized format; the user may
 audio       - have a viewer or player that can deal with it, or may be
 video       - able to get one.
--
* Christopher Davis * <ckd@eff.org> * <ckd@kei.com> * [CKD1] * MIME * RIPEM *
   "Those who cannot remember history are doomed to repost it every month,
     with diffs marked with change bars."  --Ed Vielmetti <emv@msen.com>
