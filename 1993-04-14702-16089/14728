Path: msuinfo!uwm.edu!cs.utexas.edu!sdd.hp.com!zaphod.mps.ohio-state.edu!wupost!csus.edu!netcom.com!netcomsv!mbeckman!mbeckman
From: mbeckman@mbeckman.mbeckman.com (Mel Beckman)
Newsgroups: sci.crypt
Subject: Re: Time stamp authentication
Date: Wed, 31 Mar 93 11:23:06 PST
Organization: Beckman Software Engineering
Message-ID: <01050810.tubspl@mbeckman.mbeckman.com>
Reply-To: mbeckman@mbeckman.com
X-Mailer: uAccess LITE - Macintosh Release: 1.5v5
Lines: 36


In article <1pceav$61l@bigboote.WPI.EDU> (sci.crypt), sms@sequoia.WPI.EDU (Stanley Selkow) writes:
>   Suppose a user wants a system's time stamp on a document to
> stand up in court although the user had permission to change
> the system's clock.  Is there any way to authenticate the time
> stamp to respond to the challenge
>      "Oh, you just changed the system clock, saved the document,
>       and then reset the system clock."   ?
> 

This is actually a problem I've worked on. The difficulty isn't in authenticating
the time stamp -- that's easily done with a timestamp server that provides a
non-repeating companion code. The problem is that an authenticated timestamp
can be associated with any document with impunity. The solution is to
have an "authentication server" that receives your document (possibly already
encrypted), then encrypts the document using a private key uniquely associated 
with the individual time stamp. The resulting message is returned to the
requestor for archiving, and the public key corresponding to the timestamp
private key is published in a public catalog. Anyone needing authentication
would get the public key from the auth server's catalog, use it to decrypt
the authenticated message, and compare that with the message being challenged.

Exposures include the need for a trusted auth server, and the possibility
of interception and alteration of the public authentication key when enroute
from the timestamp server to the challenger. Timestamp keys can be reused
as soon as all dependencies on a particular key expire. It isn't recommended
that the timestamp itself be used in key generation.

This is a variation of the public keyserver authentication problem. 

________________________________________________________________________
| Mel beckman                  |   Internet: mbeckman@mbeckman.com     |
| Beckman Software Engineering | Compuserve: 75226,2257                |
| Ventura, CA 93003            |  Voice/fax: 805/647-1641 805/647-3125 |
|______________________________|_______________________________________|
 "You can observe a lot just by watching."  -Yogi Bera
