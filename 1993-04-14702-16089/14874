Newsgroups: sci.crypt,alt.security.pgp
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!magnus.acs.ohio-state.edu!csn!qwerty-gw.fsl.noaa.gov!kestrel.fsl.noaa.gov!bear
From: bear@kestrel.fsl.noaa.gov (Bear Giles)
Subject: Re: disk safety measure?
Message-ID: <1993Apr6.235830.28079@fsl.noaa.gov>
Sender: news@fsl.noaa.gov (USENET News System)
Organization: Forecast Systems Labs, NOAA, Boulder, CO USA
References: <1993Apr5.084703.23757@ucsu.Colorado.EDU> <gradyC50MF5.6tv@netcom.com> <1pq0re$gc2@network.ucsd.edu>
Date: Tue, 6 Apr 1993 23:58:30 GMT
Lines: 33
Xref: msuinfo sci.crypt:14874 alt.security.pgp:2407

In article <1pq0re$gc2@network.ucsd.edu> loki@sdphu3.ucsd.edu (Lance M Cottrell) writes:
>In article <gradyC50MF5.6tv@netcom.com> grady@netcom.com (1016/2EF221) writes:
>>For example, say you open a new file and write 1200 bytes of
>>data to it.  Also let's suppose that your file system allocates
>>a 1024 byte block when the previous block fills.  (On the
>>pc and mac this allocation unit varies as the size of the
>>volume).  You would then have 848 bytes reserved for your
>>new file but NOT overwritten by the new file's data.

This raises an interesting question I've always meant to investigate.

DOS is known to be fairly naive, to be kind, since it doesn't clear
disk space during assignment to a file (as mentioned above).  This yields
really strange behavior like allegations that Prodigy is stealing software
from its subscribers....

I am 99% certain DOS doesn't clear the bytes at the end of a program
file when you load it, either.  (I believe the Amiga OS does, in contrast).

Now, the big question: is DOS, or any other OS, dumb enough to simply follow
the file pointer chain and not check the nominal size of a file at all?

That is, if I have a program which fits into a single block (with the 
correct size) but the FAT table says it that a second block follows it,
does DOS load that block as well?

(To properly test this requires BIOS-level directory hack software.
It isn't difficult, simply time consuming unless you already have the
software written).


Bear Giles
bear@fsl.noaa.gov
