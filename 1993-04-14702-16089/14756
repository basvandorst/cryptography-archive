Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!zaphod.mps.ohio-state.edu!darwin.sura.net!udel!news.intercon.com!psinntp!shearson.com!snark!pmetzger
From: pmetzger@snark.shearson.com (Perry E. Metzger)
Subject: Re: Time stamp authentication
Message-ID: <1993Apr1.212335.12941@shearson.com>
Sender: news@shearson.com (News)
Organization: Partnership for an America Free Drug
References: <01050810.tubspl@mbeckman.mbeckman.com>
Date: Thu, 1 Apr 1993 21:23:35 GMT
Lines: 27

mbeckman@mbeckman.com writes:
>
>the time stamp -- that's easily done with a timestamp server that
>provides a non-repeating companion code. The problem is that an
>authenticated timestamp can be associated with any document with
>impunity. The solution is to have an "authentication server" that
>receives your document (possibly already encrypted), then encrypts
>the document using a private key uniquely associated with the
>individual time stamp. The resulting message is returned to the
>requestor for archiving, and the public key corresponding to the
>timestamp private key is published in a public catalog. Anyone
>needing authentication would get the public key from the auth
>server's catalog, use it to decrypt the authenticated message, and
>compare that with the message being challenged.

This still permits collusion during the day between the trusted server
and the client. Its not efficient, either, since it requires
publication of huge numbers of keys. On the other hand, Haber and
Stornetta(sp?) at Bellcore have designed (and built) a practical
system that requires no trust at all in the stamping agent. Its a neat
idea -- I believe Stu Haber reads this group and would likely be
better at filling in the details than me.

--
Perry Metzger		pmetzger@shearson.com
--
Laissez faire, laissez passer. Le monde va de lui meme.
