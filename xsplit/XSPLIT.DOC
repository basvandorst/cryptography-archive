==========================================================================
			     XSPLIT (tm)
	  
	       Copyright (C) 1994 by Ray (Arsen) Arachelian
	  All Rights Reserved, General Technical Data Restricted.

==========================================================================
	  
Software License:

	  This software is subject to the following license. Any use
	  or  distribution of this  software indicates  agreement to
	  this license.

	  This  software may  be  freely  distributed  by  any means,
	  on any media as long  as it is distributed  completly along 
	  with all its supporting files (documentation, etc.) without 
	  modifications.   This  program may  not be sold, in part or
	  whole without the express permission of the author, however 
	  the media on which this program  is distributed may be sold
	  (as in a  shareware collection, etc.)  as long as no  money
	  is  specifically charged for this software.  This  software
	  is hereby  distributed  as freeware and no shareware fee is
	  requested for its use.

	  Modifications of this program may be distributed so long as
	  the  copyright notices  are left  intact, and the  modified
	  version(s) of this software are marked as such.  The author
	  of this  software retains  the  copyright and all rights to
	  any modified  version of  this software.  Modifications  of
	  this software are not copyrightable by others.

	  The source code of this  program may not be included in any
	  other  software  packages, in  part  or whole  without  the
	  expressly written authorization of the author.  Please feel
	  free to  contact the author  if you would like  to use this
	  code in your programs, however.

	  This program may not be used for purposes of key escrow by
	  anyone. Ever!  I didn't write this this program to allow
	  the bad guys to use it to weaken the security of others by
	  keeping databases of keys to cryptographic systems!

	  The  author is not  resposible  for any damage(s) or losses
	  occuring  from  the  use  of this  product, or  any  errors
	  contained  within  this software and/or its  documentation.
	  This program is distributed "as is" and the user uses it at
	  their own risk.   The use of this software is not protected
	  by warranties, implied or expressly stated.   Nor  is  this
	  software guaranteed for a fitness to a purpose.

	  The name "XSPLIT" is the author's trade mark, reffering  to
	  this software.  Any commercial products  mentioned in  this 
	  software and this  document may be trademarks, copyrighted, 
	  owned, etc. by their respective owners.


==========================================================================

				- LICENSE -



What is XSPLIT?
===============

XSPLIT is a simple cryptographically secure file splitter.  If you have a
file which you would like others to keep a copy for you but not see, XSPLIT
can help you.  For instance, if you are a software developer and want to
send copies of your source code to a remote site for backup purposes, but do 
not want the owner of that site to be able to get at your source code,
trade secrets, or whatever, you would first run XSPLIT on the file you wish
to send to the remote backup location creating several parts. Each of these
parts is identical in size to the original file and to themselves.  You then
send each of these parts to a >DIFFERENT< somewhat trusted backup 
respository, (DataHeaven for you who use cyberspeak.)

The reason you will now have many files, all of which are the size of the
original size is due to the fact that if XSPLIT were to actually split the
file up into pieces of 1/N size, it would weaken its security.  IE: Suppose
that XSPLIT was used for key escrow (THIS IS FORBIDDEN! DON'T USE IT FOR
KEY ESCROW!) if XSPLIT took a large key and split it in two parts, each part
would be half the size.  This would actually help the "bad guys" to brute
force the key as they would exponetially have a lot less work.

In order for someone to compromise your secrets and get at the file, they 
would have to get all the pieces of the cryptographically split file from all
the places you've sent it to.  Therefore you should have some degree of trust
in these repositories, and also keep each site from knowing the other
sites involved in the exchange, however implicit trust is not required of
these sites.  I also would advise you to use a strong data encryption tool
on the file before you split it for added security incase someone finds out
who your repository sites are.  I would suggest you use IDEA, or RSA (both
are included in PGP.) or tripple DES (single DES is considered weak these
days.)  I would also stay away from Clipper/Tessarae/Capstone encryption
systems as these use key escrow which could be compromised by unscrupulous
government agents.

[The idea behind DataHeavens is to have some machine somewhere on the inter-
net whose physical location is unknown, and which offers you paid or free
storage for your information.  Such places do not yet exist, however they
may show up in the future.  Generally such havens are thought of as out of
the country, and similar to Swiss banks.   The only place they have been
mentioned is in the cyberpunk fiction genre.]

[Clipper and its ilk is the government's way of saying "Trust us, we're your
 government, >BUT WE DON'T TRUST YOU."]


Note that XSPLIT by itself is not an extremly secure system, due to the 
possibility that all of your trusted  repositories may be  compromised,
however  if  it  used with a strong data encryption system such as PGP 
or WNSTORM, it will provide a very high degree of security.


The source code for XSPLIT is included and it should be fairly portable
to many operating systems.  XSPLIT internally works as a One Time Pad
which all cryptographers know is only totally secure method of encryption,
however because joining all the parts of the file will rebuild the file
you should be careful to keep the parts from being joined together.

XSPLIT is a sample of the software that we, the cypherpunks have written.
Other such software includes SecureDrive, WNSTORM, PGP, Anonymous Remailer
systems, digital cash systems, etc.  If you're interested in the cypherpunks
see the end of this document for more information.



Using XSPLIT:
=============

Usage: XSPLIT S|J {-RD:rnddevice|-RF:rndfile} DATAFILE PART1 PART2 .. PARTn


IE:
Split: XSPLIT S FILE_TO_SPLIT   PART1 PART2 PART3 ... PARTn
Join:  XSPLIT J FILE_TO_REBUILD PART1 PART2 PART3 ... PARTn

IE: If you have a file called SECRET which you'd like to cryptographically
    split into several parts to send to location a, location b, location c
    and location e, you'd type the following in at the DOS prompt:

    XSPLIT S SECRET LOCA LOCB LOCC LOCD LOCE


IE: If you'd like to regain your split file, say after your hard drive blew
    up, you'd retrieve the parts from all the repositories and once you have
    them on your hard drive, you'd type the following in at the DOS prompt:

    XSPLIT J SECRET LOCA LOCB LOCC LOCD LOCE


Because XSPLIT needs and uses random numbers for splitting the files, it is
a very good idea to buy or build a hardware random number generator.  When
you do, you can use the -RD:device_name option between the SPLIT command
and the data file. 

 IE: If you have a hardware random number generator on COM1, you can split 
     a file using the following command:

     XSPLIT S -RD:COM1 SECRET.TXT PART1 PART2 PART3 PART4

If you have a source for random numbers which is not a device, but a file,
you can use the -RF:file_name option between the SPLIT command and the data 
file.  This file should be a binary file with the random values going from
zero to 255.  Don't use a text file of random numbers.  IE: 

     XSPLIT S -RF:RAND.NUM SECRET.TXT PART1 PART2 PART3 PART4



The Algorithm:
==============

XSPLIT's algorithms are very simple.  To encrypt, we take N random numbers
where N is the number of parts to split the file into.  We write the N
random numbers to the N parts.  One of these parts however is picked randomly
on each pass to store C=T XOR K where T is the text to split, and K is the
XOR sum of the previous random numbers:

		K=R1 XOR R2 XOR R3 XOR .. XOR Rn
		C=T XOR K.

To join the files and get back the text, you simply XOR all the parts together
as follows:
  
		T=C XOR R1 XOR R2 XOR R3 XOR .. XOR Rn.

Since C=K XOR T, and K is the XOR sum of R1 through Rn, XORing K with the
XOR'ed sum of R1 through Rn cancels them out leaving just T.



Who Are the Cypherpunks?
========================



If you are interested in cyphers please join the cypherpunks lists.  This
list is absolutely free.  All you need is a mailbox on an internet connected
system on which to receive the discussion of the list.  To subscribe to
the cypherpunks mailing list, send a message to

cypherpunks-requests@toad.com with "subscribe" as the subject.  Beware that
you will receive anywhere between forty to seventy messages a day!

You may contact me by sending internet mail at rarachel@photon.poly.edu,
sunder@intercon.com, or to RayDude@Aol.Com.


Please feel free to send any comments, suggestions, or requests via the
above addresses.



Cypherpunk subscription Info: taken from soda.berkeley.edu  -- mch


The cypherpunks list is a forum for discussion about technological
defenses for privacy in the digital domain.  It is an active mailing
list for discussion.  If you don't want to receive the volume of mail
it generates, send mail to

	cypherpunks-request@toad.com

and ask to be taken off the list.  There is also an announcements list
which is moderated and has low volume.  Mail to

	cypherpunks-announce-request@toad.com

if you want to be added to the announce list.  All announcements also
go out to the full cypherpunks list.  Whatever you do, do _not_ mail
to the whole list asking to be removed.

Please ask about things you don't understand.  PGP-specific questions
might be more profitably asked in alt.security.pgp. A short statement
of purpose follows.

Enjoy and deploy.

Eric

-----------------------------------------------------------------------------

Cypherpunks assume privacy is a good thing and wish there were more
of it.  Cypherpunks acknowledge that those who want privacy must
create it for themselves and not expect governments, corporations, or
other large, faceless organizations to grant them privacy out of
beneficence.  Cypherpunks know that people have been creating their
own privacy for centuries with whispers, envelopes, closed doors, and
couriers.  Cypherpunks do not seek to prevent other people from
speaking about their experiences or their opinions.

The most important means to the defense of privacy is encryption. To
encrypt is to indicate the desire for privacy.  But to encrypt with
weak cryptography is to indicate not too much desire for privacy.
Cypherpunks hope that all people desiring privacy will learn how best
to defend it.

Cypherpunks are therefore devoted to cryptography.  Cypherpunks wish
to learn about it, to teach it, to implement it, and to make more of
it.  Cypherpunks know that cryptographic protocols make social
structures.  Cypherpunks know how to attack a system and how to
defend it.  Cypherpunks know just how hard it is to make good
cryptosystems.

Cypherpunks love to practice.  They love to play with public key
cryptography.  They love to play with anonymous and pseudonymous mail
forwarding and delivery.  They love to play with DC-nets.  They love
to play with secure communications of all kinds.

Cypherpunks write code.  They know that someone has to write code to
defend privacy, and since it's their privacy, they're going to write
it.  Cypherpunks publish their code so that their fellow cypherpunks
may practice and play with it.  Cypherpunks realize that security is
not built in a day and are patient with incremental progress.

Cypherpunks don't care if you don't like the software they write. 
Cypherpunks know that software can't be destroyed.  Cypherpunks know
that a widely dispersed system can't be shut down.

Cypherpunks will make the networks safe for privacy.
