dnl Hey emacs, this is not a -*-shell-script-*- but plase pretend that is it
dnl
dnl configure.in -- Process this file with autoconf to produce a configure script.
dnl
dnl $Header: /usr/local/PASTA/cvs-rep/PASTA/src/PGPlib/configure.in,v 1.16 1997/12/15 21:33:43 tage Exp $
dnl

AC_INIT(src/pgplib.h)
AC_CONFIG_HEADER(src/pgplibconf.h)
AC_REVISION($Revision: 1.16 $)
AC_ARG_PROGRAM

dnl Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar, ar)
AC_PATH_PROG(PERL, perl, perl)
AC_PATH_PROGS(PGP, pgp, NO-PGP)

dnl Checks for header files
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h  errno.h sys/errno.h)
AC_CHECK_HEADERS(db.h)
if test "$ac_cv_header_db_h" = no; then
    AC_MSG_WARN(PGPlib requires db routines. Better make sure we have dbm.)
fi

dnl Checks for typedefs
AC_CHECK_TYPE(u_quad_t, unsigned long long)

dnl Checks for structures

dnl Checks for compiler characteristics

dnl Checks for library functions
mr_FUNC_PRINTF_LLX
AC_CHECK_FUNCS(hstrerror daemon strerror strsep strtouq)
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(db, dbopen)

dnl Checks for system services

dnl Checks for user options

AC_MSG_CHECKING(for libz)
#
# We have supplied a version of libz, but prefer to use the version that
# is already installed.
#
AC_CHECK_LIB(z, inflateInit2_,
    LIBS="-lz $LIBS",
    LIBS="-lz $LIBS"
    AC_MSG_RESULT(Using `pwd`/zlib-1.0.4)
    LDFLAGS="-L`pwd`/zlib-1.0.4 $LDFLAGS"
    CPPFLAGS="-I`pwd`/zlib-1.0.4 $CPPFLAGS"
)

AC_MSG_CHECKING(for SSLeay library)
# The best thing is to use a new version of SSLeay installed in the 
# users' system.  Thus, if it exists, we'll use it.
# If we are given --with-ssleay=/foo we'll use /foo while --without-ssleay 
# "must" imply that we should use the local copy.
# If we can't find a copy we'll use the version we supply.
#
AC_ARG_WITH(ssleay,
[  --with-ssleay[=DIR]     Specify directory for SSLeay software],
    COMPILE_SSL="no"
    export COMPILE_SSL
    if test "$withval" = "yes"; then
	# No directory, we must assume /usr/local/ssl
	if test -d "/usr/local/ssl"; then
	    CPPFLAGS="-I/usr/local/ssl/include $CPPFLAGS"
	    LDFLAGS="-L/usr/local/ssl/lib $LDFLAGS"
	    LIBS="-lcrypto $LIBS"
	    AC_MSG_RESULT(/usr/local/ssl)
	else
	    AC_MSG_RESULT(no)
	    AC_MSG_ERROR(Cannot find SSLeay)
	fi
    elif test "$withval" = "no"; then
	# Don't use the locally installed version, e.g., use the
	# copy we supply
	CPPFLAGS="-I`pwd`/SSLeay/include $CPPFLAGS"
	# We use .../crypto since we are using our version.  It isn't
	# installed.
	LDFLAGS="-L`pwd`/SSLeay/crypto $LDFLAGS"
	LIBS="-lcrypto $LIBS"
	AC_MSG_RESULT(`pwd`/SSLeay)
	COMPILE_SSL="yes"
    elif test -d "$withval"; then
	CPPFLAGS="-I$withval/include $CPPFLAGS"
	LDFLAGS="-L$withval/lib $LDFLAGS"
	LIBS="-lcrypto $LIBS"
	AC_MSG_RESULT($withval)
    else
        AC_MSG_RESULT(no)
	AC_MSG_ERROR(Cannot fild SSLeay)
    fi
,
    # No flag.  We'll look in the standard places.  If we can't fint
    # anything, we'll resort to using the local copy.
    COMPILE_SSL="no"
    export COMPILE_SSL
    if test -d "/usr/local/ssl"; then
        CPPFLAGS="-I/usr/local/ssl/include $CPPFLAGS"
        LDFLAGS="-L/usr/local/ssl/lib $LDFLAGS"
        LIBS="-lcrypto $LIBS"
        AC_MSG_RESULT(/usr/local/ssl)
    else
	CPPFLAGS="-I`pwd`/SSLeay/include $CPPFLAGS"
	LDFLAGS="-L`pwd`/SSLeay $LDFLAGS"
	LIBS="-lcrypto $LIBS"
	AC_MSG_RESULT(`pwd`/SSLeay)
	COMPILE_SSL="yes"
    fi
)


AC_SUBST(COMPILE_SSL)dnl

AC_OUTPUT(Makefile \
src/Makefile tools/pgpacket.pl \
applications/Makefile \
applications/test.sh \
man/Makefile doc/Makefile \
zlib-1.0.4/Makefile \
SSLeay/Makefile \
SSLeay/crypto/Makefile \
SSLeay/crypto/bio/Makefile \
SSLeay/crypto/bn/Makefile \
SSLeay/crypto/buffer/Makefile \
SSLeay/crypto/conf/Makefile \
SSLeay/crypto/err/Makefile \
SSLeay/crypto/idea/Makefile \
SSLeay/crypto/lhash/Makefile \
SSLeay/crypto/md/Makefile \
SSLeay/crypto/rand/Makefile \
SSLeay/crypto/rsa/Makefile \
SSLeay/crypto/stack/Makefile,
chmod 755 applications/test.sh)
