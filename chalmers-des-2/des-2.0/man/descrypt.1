.TH DESCRYPT 1 "Version 2.0" "Chalmers University"
.SH NAME
descrypt \- DES based file encryption/decryption program.
.SH SYNOPSIS
.B descrypt
.B \-e
|
.B \-d
|
.B \-c
[
.B \-h
|
.B \-b
] [
.B \-k
.I key
|
.B \-f
.I keyfile
] [
.B \-m
.I mode
] [
.B \-a
] [
.I infile
[
.I outfile
] ]
.SH DESCRIPTION
.PP
.I descrypt
is an encryption/decryption program based on a software implementation of
the DES (Data Encryption Standard) algorithm. 
.PP
The following options are understood by
.IR descrypt .
.TP
.B \-e
Selects encryption mode. The file specified by
.I infile
is encrypted and stored into the file specified by
.IR outfile .
.TP
.B \-d
Selects decryption mode. The file specified by
.I infile
is encrypted and stored into the file specified by
.IR outfile .
.TP
.B \-c
Selects checksum mode. A 64-bit cryptographic checksum is made from the
file specified by
.I infile
and the result is stored in the file specified by
.IR outfile.
The function used is
.IR des_cbc_cksum (3).
.TP
.B \-h
Indicates that the key is an 64-bit hexadecimal value directly specifying
a DES key. The key may have an optional
.B 0x
or
.B 0X
prepended. No parity adjustment is necessary to the key. The option works both
on a key given with the 
.B \-k
or
.B \-f
options, or a prompted for key.
.TP
.B \-b
Selects the old (non-MIT)
.IR des_string_to_key (3)
algorithm.
.TP
.B \-f
Takes the next argument as the name of a file where the key is stored.
Only the first characters up to a newline, null character or end of file
are used as a key. The key is then generated in the same way as for the
.B \-k
option is used.
.TP
.B \-k
Takes the next argument as an ascii representation of the key to use.
The actual DES key is generated by the
.IR des_string_to_key (3)
function, or
.IR des_hex_to_cblock (3)
(and a parity adjustment) if the
.B \-h
option is used.
.TP
.B \-m
Uses the next argument to select encryption/decryption function:
.br
.ta \w'mmm'u +\w'PCBCmm'u
	CBC	des_cbc_encrypt(3)
	ECB	des_ecb2_encrypt(3)
	CFB8	des_cfb8_encrypt(3)
	OFB8	des_ofb8_encrypt(3)
	PCBC	des_pcbc_encrypt(3)
.TP
.B \-a
Forces
.I descrypt
to produce encrypted data as a sequence of ascii lines with a single 64-bit
hexadecimal number on each line. In decryption mode,
only such lines, with an optional
.B 0x
or
.B 0X
prepended, are accepted as input. Lines with other information are
ignored and does not affect the process. If
.I descrypt
is in checksum mode, only a single line with the 64-bit result is produced.
.PP
If no key is specified with the
.B \-k
flag, the user is prompted for a key by the
.IR des_read_password (3)
function, or
.IR des_read_hexkey (3)
if the
.B \-h
option is used. The result is identical to key provided with the
.B \-k
flag.
.PP
If no encryption/decryption algorithm is specified with any of the
.BR \-C ,
.B \-P
or
.B \-E
flags,
.IR des_cbc_encrypt (3)
is used.
.PP
The default input and output files are
.I stdin
and
.IR stdout.
.PP
The encrypted output is padded up to the nearest multiple of eight bytes
if any of the
.IR des_cbc_encrypt ,
.I des_pcbc_encrypt
or
.I des_ecb2_encrypt
functions are used.
.SH SEE ALSO
.IR des (3),
.IR deskey (1).
.SH BUGS
No cleanup of internally used data (yet).
.SH AUTHOR
.ie t .ds O: \\kz\\h'+(\w'O'-\w'..')/2'\v'-0.8m'..\v'+0.8m'\\h'|\\nzu'O
.el .ds O: O
Stig \*(O:stholm <ostholm@ce.chalmers.se>
.br
Department of Computer Engineering
.br
Chalmers University of Technology
.SH RESTRICTIONS
This software may be freely distributed an modified, for non-commercial use,
without any restrictions from the author.
Additional restrictions due to national laws governing the use, import or
export of cryptographic software is the responsibility of the software user,
importer or exporter to follow.
