/*____________________________________________________________________________	Copyright (C) 1997 Network Associates Inc. and affiliated companies.	All rights reserved.				$Id: CExitToShellPatcher.cp,v 1.1 1999/04/02 08:59:00 jason Exp $____________________________________________________________________________*/#include <Traps.h>#include <SetupA4.h>#include "CExitToShellPatcher.h"// Define staticsCExitToShellPatcher *	CExitToShellPatcher::sExitToShellPatcher = nil;CExitToShellPatcher::CExitToShellPatcher(){	// Current version will only install one patch	if (sExitToShellPatcher == nil) {		Patch(_ExitToShell, kProcInfo, (ProcPtr) ExitToShellCallback);		sExitToShellPatcher = this;	}}CExitToShellPatcher::~CExitToShellPatcher(){}	voidCExitToShellPatcher::NewExitToShell(){	// default just calls through to the original	OldExitToShell();}	voidCExitToShellPatcher::OldExitToShell(){#if TARGET_RT_MAC_CFM	::CallUniversalProc(	mOldRoutine,							kProcInfo);#else	((ExitToShellProc) mOldRoutine)();#endif}	pascal voidCExitToShellPatcher::ExitToShellCallback(){	EnterCallback();	try {		sExitToShellPatcher->NewExitToShell();	}		catch(...) {	}		ExitCallback();}