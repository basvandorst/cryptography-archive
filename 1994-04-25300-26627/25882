Newsgroups: sci.crypt
Path: msuinfo!agate!overload.lbl.gov!dog.ee.lbl.gov!ihnp4.ucsd.edu!galaxy.ucr.edu!library.ucla.edu!europa.eng.gtefsd.com!howland.reston.ans.net!newsserver.jvnc.net!nntpserver.pppl.gov!princeton!allegra!ulysses!smb
From: smb@research.att.com (Steven Bellovin)
Subject: Re: Quick crypt of compressed data
Message-ID: <Co4I5v.Lvq@ulysses.homer.att.com>
Sender: netnews@ulysses.homer.att.com (Shankar Ishwar)
Organization: AT&T Bell Laboratories
References:  <sv.766048428@id.dth.dk>
Date: Tue, 12 Apr 1994 01:44:18 GMT
Lines: 15

In article <sv.766048428@id.dth.dk>, sv@idfs3.uucp (Stig Valentini) writes:
> If I've got it right, then normal archivers (ZIP,ARJ,..) encrypt
> all data in a file - but why not just encrypt the huffman tree data
> preceeding the huffman encoded data. Without the huffman-tree info,
> the remaining data should be fairly random, and therefore hard to
> brute-force decrypt. Using this idea would make encryption/decryption
> much(!) faster with the same level of security offered.

I doubt that that would work.  Someone with a decent idea of the
statistics of the plaintext could make decent guesses about the
compression dictionary, and recover a lot that way.  The rest
could be filled in piecemeal.  If nothing else, what you suggest would
boil down, in essence, to a code book -- the cryptanalyst would ignore
the dictionary and just worry about the code.

