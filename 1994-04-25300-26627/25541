Path: msuinfo!agate!news.ossi.com!ihnp4.ucsd.edu!swrinde!gatech!europa.eng.gtefsd.com!MathWorks.Com!news.kei.com!ub!csn!boulder!tigger.cs.Colorado.EDU!bear
From: bear@tigger.cs.Colorado.EDU (Bear Giles)
Newsgroups: sci.crypt,talk.politics.crypto,alt.security.pgp
Subject: Re: PGP censorship?
Date: 6 Apr 1994 00:54:48 GMT
Organization: Acme University, W. E. Coyote, president
Lines: 44
Message-ID: <2nt18o$g0g@lace.Colorado.EDU>
References: <2n9id8$i79@agate.berkeley.edu> <2nckohINNfs5@owl.csrv.uidaho.edu> <2nq5cb$678@lace.Colorado.EDU> <2nrtdpINNi90@owl.csrv.uidaho.edu>
NNTP-Posting-Host: tigger.cs.colorado.edu
Xref: msuinfo sci.crypt:25541 talk.politics.crypto:4225 alt.security.pgp:11006

In article <2nrtdpINNi90@owl.csrv.uidaho.edu>,
Aric TenEyck <teney931@cs.uidaho.edu> wrote:
>Bear Giles (bear@tigger.cs.Colorado.EDU) wrote:
>: In article <2nckohINNfs5@owl.csrv.uidaho.edu>,
>: TENEYCK <teney931@cs.uidaho.edu> wrote:
>: >
>: >      A .GIF has 8 bits/pixel.  If you change one of those to a data bit, 
>: >you drop down to 128 possible colors, but you can hide a message in an 
>: >ordinary looking picture.
>
>: For instance, if I look at the color table entries and find that the
>: actual color values are duplicated, with identical colors sharing the
>: same index value except for the last bit, it's pretty clear that the
>: image contains an embedded message.
>
>    Ok, how about using a 24-bit picture?  This allows for 16 million 
>colors, which is about five times what the eye can see.

As long as you have true 24-bit data.  You might not; your "24-bit"
color image may only have 6 bits of color for each, with the remaining
bits predictable.  Putting a message into the file may still be detectable.

I'm *not* saying it's impossible to bury a message so nobody can
detect it's presence, just that you need to take care when doing so.
There are some subtle pitfalls for the unwary.

>Again, if you 
>encrypted the data before encoding it, the pattern of which bit got 
>chosen would be observably completely random, 

Where did you get that little factoid?

Encryption, *by itself*, is not guaranteed to produce a statistically
random output stream.  Nor is compression.

Worse, the output of many encryption packages include a standard "prefix",
which would be a pretty strong indicator that encrypted data is present.
There are generally toggles to disable the standard prefix, but you need
to remember to set them. 

And it should be remembered that while "code book" encryption displays
statistical patterns (even when used with IDEA or triple-DES), using any
type of cipher feedback is going to blow away a lot of the structure.

