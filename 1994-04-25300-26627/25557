Newsgroups: sci.crypt
Path: msuinfo!agate!ihnp4.ucsd.edu!pacbell.com!att-out!cbnewsh!cbnewsh.cb.att.com!wcs
From: wcs@anchor.ho.att.com (Bill Stewart +1-510-484-6204)
Subject: Re: Q: Security of new encryption-devdriver
Organization: AT&T Global Information Solutions, NCR's new name
Date: Wed, 6 Apr 1994 09:10:03 GMT
Message-ID: <WCS.94Apr6041003@anchor.ATT.COM>
Followup-To: sci.crypt
In-Reply-To: arthur@dutetvd's message of 5 Apr 1994 14:54:14 GMT
References: <2nq8d6$kkp@liberator.et.tudelft.nl> <phrCns8Iv.878@netcom.com>
	<2nru2m$pb0@liberator.et.tudelft.nl>
Sender: news@cbnewsh.cb.att.com (NetNews Administrator)
Nntp-Posting-Host: anchor.ho.att.com
Lines: 49

In article <2nru2m$pb0@liberator.et.tudelft.nl> arthur@dutetvd (Arthur Helwig) writes:
   > Why not triple-DES instead of IDEA?
   I understand that there is no fee involved for noncommercial use of IDEA.
   And I had the sources of IDEA at hand, so it seemed easiest to use IDEA.
   I don't want to run into legal trouble, so I think I'll keep away from DES -
   I'm not a US-citizen...

There aren't any legal problems with DES, except exporting it from the US.
The mythical NSA trapdoor may or may not be there, but those crafty
Swiss counter-intelligence services may have put the same into IDEA :-)

   > >We take the plain MD5-hash of the user's password as a key for the
   > >IDEA-algorithm. Question: is this secure?

It's at least a fairly popular idea, and lets users have long good
passwords easily rather than limiting them to 16 characters with
typical loss of parity bits.  MD5 doesn't have any known significant
weaknesses, so it should be ok.

   > Hashing just once means the hash can be done very fast, which
   > assists in dictionary attacks.  I'd say salt the password with
   > a random number, and hash a few thousand times (perhaps xor'ing
   > in the output of a prng each hash) to slow down the password crunching.

If you use salt, you have to store it somewhere, which may be a problem.
Also, there's not much need to slow down password crunching too much,
though I'm sure the NSA has probably run /usr/dict/words through MD5 :-)

   > The random() function can be really bad, it might not even generate
   > all possible IV's with equal probability.  It's simple enough to
   > do something better, so why not?

   I know, but the question is: where do you stop? How much stronger should
   the new random() be? Is the random() indeed a weak link in the chain?
   If it is, then of course I'll implement a better random(). If it isn't,
   I'm less inclined to include a strong random number generator if it
   doesn't really add up to security.

It's probably not critical given how you're using it, but you might
want to consider a random number generator like the one RSAREF uses,
which basically feeds itself to MD5 at each stage.

--
# Bill Stewart       AT&T Global Information Solutions (new name for NCR!)
# 6870 Koll Center Pkwy, Pleasanton CA 94566  1-510-484-6204 fax-6399
# Email: bill.stewart@pleasantonca.ncr.com billstewart@attmail.com
# ViaCrypt PGP Key IDs 384/C2AFCD 1024/9D6465

Disclaimer: My cats are walking on my keyboard again.
