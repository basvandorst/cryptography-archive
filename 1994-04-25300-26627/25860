Newsgroups: comp.security.misc,alt.security,sci.crypt,alt.2600
Path: msuinfo!agate!howland.reston.ans.net!noc.near.net!ceylon!gte.com!pak0
From: pak0@gte.com (Paul A. Karger)
Subject: Re: Jitec claim world's first virus-proof computer
Message-ID: <Co42wJ.DAK@gte.com>
Sender: news@gte.com (USENET News System)
Reply-To: pkarger@gte.com
Organization: GTE Laboratories, Waltham, MA
References: <2o3q7s$319@bmerha64.bnr.ca> <FAIGIN.94Apr8092012@solarium.aero.org> <2ob89e$c49@rzsun02.rrz.uni-hamburg.de>
Date: Mon, 11 Apr 1994 20:14:42 GMT
Lines: 43
Xref: msuinfo comp.security.misc:9196 alt.security:15800 sci.crypt:25860 alt.2600:6610

In article <2ob89e$c49@rzsun02.rrz.uni-hamburg.de>, bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev) writes:

|> 
|> Yet Unix viruses are perfectly possible, we have three of them here,
|> and some of the first viruses were created by Dr. Fred Cohen on a Unix
|> system. Again Cohen has demonstrated that the Bell-LaPadula security
|> model is unable to stop viruses.

That the Bell and LaPadula model does not stop viruses is no surprise,
and it did not take Fred Cohen to demonstrate that.  It was explicitly
known at the time the model was originally developed.  The point of the
Bell and LaPadula model is to limit the flow of information and to prevent
Trojan horses (of which viruses are a special case) from leaking information
to unauthorized people.  The whole reason that the Biba model was developed
was to address the issues of unauthorized tampering that the Bell and LaPadula
model did not address.   (It should be noted that both the Bell and LaPadula
and Biba models were developed in an iterative parallel process by a collection
of people from MITRE, Case Western Reserve University, and the US Air Force.
There was a great deal of communication and cross-fertilization between the
teams.)

[comments about integrity deleted here]

|> A computer that is based on the Biba
|> integrity model should be virus-proof, because viruses are an
|> integrity problem. However, I have yet to see an usable implementation
|> of this model. Note that I am not saying that one is not possible or
|> that one does not exist - just I have seen none yet. Hmm, when I think
|> about it, I don't see how even a Biba model will prevent a virus from
|> infecting the applications that run in the same integrity ring.
|> 

Andy Goldstein of DEC has a very good demo showing how the VMS implementation
of the Biba integrity model can stop the spread of a virus.  As a side
note, the Biba integrity model does not directly talk about rings.  Biba
integrity is a lattice model, just as the Bell and LaPadula model is.  A
strict hierarchy is a subset of a lattice.


I must agree, however, that there are no good usable implementations of
integrity out there.  The problem is how do you decide how much integrity
to assign to a particular program without going through the equivalent of
an ITSEC E5 evaluation of that program.  
