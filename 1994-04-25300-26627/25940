Newsgroups: sci.crypt
Path: msuinfo!agate!dog.ee.lbl.gov!ihnp4.ucsd.edu!news.cerf.net!mvb.saic.com!MathWorks.Com!europa.eng.gtefsd.com!library.ucla.edu!news.ucdavis.edu!dhs-pc6.ucdavis.edu!adrian
From: Adrian Iley <adrian@dhs.ucdavis.edu>
Subject: Re: How does DES cracking work?
Message-ID: <Co7K9s.2EM@ucdavis.edu>
X-Xxmessage-Id: <A9D24F882901CB06@dhs-pc6.ucdavis.edu>
X-Xxdate: Thu, 14 Apr 94 01:40:24 GMT
Sender: usenet@ucdavis.edu (News Guru)
Organization: DHS
X-Useragent: Version 1.1.3
References: <1994Apr11.162411.1300@rna.indiv.nluug.nl> <2of0gm$b9a@lastactionhero.rs.itd.umich.edu> <2oh8kh$8bh@vixen.cso.uiuc.edu>
Date: Wed, 13 Apr 1994 17:22:40 GMT
Lines: 40

In article <2oh8kh$8bh@vixen.cso.uiuc.edu> David Mitchell,
mitchell@ncsa.uiuc.edu writes:
>> be the real proof, but it's easier for a machine to see if two files
>are 
>> identical than to recognize plaintext.
>> 
>> I'm sure that the above is full of typical novice errors and things I 
>> haven't taken into account, so I'm certain kind cryptogensia will
point 
>> out the error of my ways...
>
>The problem is that the two files are always identical.  The encrypt
>and decrypt process are inverses; the only difference is in the order
>in which the sub-keys are used.  In other words, taking a piece of
>data and performing:
>
>data --> encrypt --> decrypt --> data
>
>is the same as:
>
>data --> decrypt --> encrypt --> data
>
>with the exception that the intermediate result is different (I think.)
>Either way, the data at the end is identical to the data that you
>started with.
>
>Hope this helps.
>
I am not an expert in cryptology so this information may not be totally
correct. I do believe that the following is true.

This is true, but if you use the standard Cypher Block Chaining method
of DES, and add one DES block worth of random data to the front.
The first block's "errors" will propagate through the rest of the data.
And only the first block can be guessed at. Good luck finding a random
number.

NOTE: A good random algorithm is needed to make sure that the block is
extreamly
hard to guess at. I believe that Kerberos uses this method.
