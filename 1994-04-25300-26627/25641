Path: msuinfo!agate!boulder!tigger.cs.Colorado.EDU!bear
From: bear@tigger.cs.Colorado.EDU (Bear Giles)
Newsgroups: sci.crypt,talk.politics.crypto,alt.security.pgp
Subject: Re: PGP censorship?
Date: 7 Apr 1994 16:01:07 GMT
Organization: Acme University, W. E. Coyote, president
Lines: 32
Message-ID: <2o1ao4$rfh@lace.Colorado.EDU>
References: <2nq5cb$678@lace.Colorado.EDU> <2nrtdpINNi90@owl.csrv.uidaho.edu> <2nt18o$g0g@lace.Colorado.EDU> <Cnw1Mv.DM@dcs.ed.ac.uk>
NNTP-Posting-Host: tigger.cs.colorado.edu
Xref: msuinfo sci.crypt:25641 talk.politics.crypto:4282 alt.security.pgp:11084

In article <Cnw1Mv.DM@dcs.ed.ac.uk>, Paul Crowley <pdc@dcs.ed.ac.uk> wrote:
>Quoting bear@tigger.cs.Colorado.EDU (Bear Giles)
>in article <2nt18o$g0g@lace.Colorado.EDU>:
>>>Again, if you encrypted the data before encoding it, the pattern of
>>>which bit got chosen would be observably completely random, 
>
>>Where did you get that little factoid?
>
>A strong cypher such as IDEA, combined with any sensible block chaining
>system such as CFB, will produce output that is statistically
>indistinguishable from noise by anyone who does not know the key.

1. Has this been *proven*?  Or did a few people ran a few tests on "short"
   ciphertexts (<< sqrt (2^keylength)) and then decide that this constituted
   "proof"?

2. Even if we grant that IDEA/CFB is statistically random, the original
   article implied that *any* encryption would produce statistically
   random ciphertext.  There is a big difference between these two
   statements.

As a practical matter, I agree that a very strong encryption on a 
relatively short message will almost certainly appear random, assuming
you don't have headers or common prefixes to multiple plaintexts sharing
a common encryption key.

However, whenever I see blanket statements like "encryption produces
statistically random output" (likewise compression) I cringe because
it's precisely these misconceptions that make cryptanalysis easy.
There's a reason we don't use the "xor password repeatedly" encryption
algorithm!

