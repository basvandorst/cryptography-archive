Newsgroups: sci.crypt
Path: msuinfo!agate!library.ucla.edu!csulb.edu!csus.edu!netcom.com!straits
From: straits@netcom.com (Stewart C. Strait)
Subject: Re: Encryption & Compression
Message-ID: <straitsCoLMy4.F6D@netcom.com>
Organization: NETCOM On-line Communication Services (408 241-9760 guest)
X-Newsreader: TIN [version 1.2 PL1]
References: <CHAR-LEZ-190494085216@dnwmac194.globalvillag.com> <2p188q$1e8m@locutus.rchland.ibm.com> <CHAR-LEZ-200494114739@dnwmac194.globalvillag.com>
Date: Thu, 21 Apr 1994 07:46:51 GMT
Lines: 36

Char-Lez Braden (CHAR-LEZ@globalvillag.com) wrote:

: So what you're really saying is, my inital understanding that with an
: evenly distributed file, I should get no compression.  I have done lots of
: work to show that with a truly random file, I do get compression.  Was my
: testing flawed?

Maybe not flawed exactly the way you think. Whether a file compresses
or not depends on how well it matches the model built in to the compression
algorithm. If you create random files, they will not compress
_on the average_.  Some will compress, some will expand. Typical compression
algorithms 'hide' the expansion by putting some kind of flag on the output
that indicates whether it was compressed and how. If you ignore the flag
it seems that no files expand, but actually every file expands by the
length of the flag minus the amount of compression. Typically flags are
one byte (I think). Anyway, if expansion is limited to one byte then
because some sort of average compression must be zero, the probability
of substantial compression for a random file can't be too big. A little
compression could happen often.

A small caution--If your algorithm doesn't give any clue whether its
output was compressed or just copied, it is irreversible or 'lossy'.
If you get a file that looks compressed, you don't know whether to
decompress it or not. If the meaning is different, you don't know
the meaning. When random-looking files are regarded as meaningful input
this matters a lot.

BTW, if someone could state a real theorem that the average compression
is zero it would be a help. I get mixed up trying to deal with input
files of different length. The information that EOF has been reached
probably has something to do with it, but using an infinitely long
stream of bits seems crude and promises to make the practical results
fuzzy.
-- 
Stewart C. Strait
straits@netcom.com
