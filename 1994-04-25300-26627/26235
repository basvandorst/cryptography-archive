Path: msuinfo!caen!zip.eecs.umich.edu!yeshua.marcam.com!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!math.ohio-state.edu!magnus.acs.ohio-state.edu!csn!news.den.mmc.com!iplmail.orl.mmc.com!judge.orl.mmc.com!padgett
From: padgett@tccslr.dnet.orl.mmc.com (padgett peterson)
Newsgroups: sci.crypt
Subject: Re: Encryption
Date: 21 Apr 1994 17:41:37 GMT
Organization: Martin-Marietta
Lines: 36
Message-ID: <padgett.6.0@tccslr.dnet.orl.mmc.com>
References: <19940420142816UDSD007@DSIBM.OKLADOT.STATE.OK.US> <1994Apr21.151231.2101@chemabs.uucp>
NNTP-Posting-Host: judge.orl.mmc.com

>From: jac55@cas.org ()
>Subject: Re: Encryption
>>
>>>A book code is the most secure so long as the identity of the book
>>>is kept secret. If the book is known (as in public key), the strength
>>>must lie in the difficulty of attack.
>>>
>	If anybody is interested in showing how resistant
>	a book cipher is to present-day cryptanalysis, I'll be 
>	happy to post the method and a well known paragraph or
>	two encrypted by the method Foote describes.  I'll offer a bottle
>	of good wine as a prize to stimulate interest.
>	
First I'd like to apologise for the incomplete return address in the
previous posting, I *think* it is now fixed.

Second, there seems to have been some confusion about what I meant by "book 
code". There are two types that I was thinking of (might be a third). The 
original one involved both ends having the same book and treating words in 
the meassage as offsets. For instance if the word was "elephant", one would
scan the book to find the word "elephant" and report it as page/paragraph/
sentence/word offset. Unless you had the same book, the numbers were
meaningless. The second involved transformations based on a "book".

I was refering to an electronic means of doing the same thing using on-line
books or a Usenet dump or the Congressional Record. So long as both 
ends had the proper "book" and the offsets had a floating "seed" and the
books were large enough that the same offset did not have to be used twice,
I suspect that breaking it would be rather difficult.

True this lacks the elegance of a mathematical algorithm and does rely
on "security by obscurity" but it does lend itself to the computer age
and I suspect that the terabytes of data flowing on the net would make 
a "brute force" attack difficult.
						Warmly,
							Padgett
