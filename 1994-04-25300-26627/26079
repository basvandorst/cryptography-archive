Path: msuinfo!uwm.edu!math.ohio-state.edu!howland.reston.ans.net!EU.net!ieunet!ieunet!vax1.dcu.ie!75001969
From: 75001969@vax1.dcu.ie
Newsgroups: sci.crypt
Subject: Re: How does DES cracking work?
Message-ID: <1994Apr15.171045.797@vax1.dcu.ie>
Date: 15 Apr 94 17:10:45 GMT
References: <Co7xDB.GFx.3@cs.cmu.edu> <2oi05u$9vk@agate.berkeley.edu> <Co9DtJ.4s3.3@cs.cmu.edu> <2ok6se$6k9@agate.berkeley.edu>
Lines: 43

In article <2ok6se$6k9@agate.berkeley.edu>, spp@bob.eecs.berkeley.edu (Steve Pope) writes:
> rudis+@cs.cmu.edu (Rujith S DeSilva) responds to my post:
> 
>>> If an initial block of random data is encrypted in this mode, and the
>>> resultant block of ciphertext is NOT TRANSMITTED, then my statement
>>> about needing to search a 120-bit key space would hold.
> 
>> How would the bona fide recipient decrypt the message?
> 
> I left that out because I thought it was obvious, but
> you're the second person who's acked so I guess
> it isn't.
> 
> The bonafide recipient would need to be in possession
> of both the 56-bit DES key and the 64-bit intial state
> vector in order to decrypt.
> 
> Since DES is a private key system, a secret means for
> providing the DES key to the recipeint is assumed.
> The 64 bits of initial state would be provided by the
> same means as the 56 bit DES key -- whatever those
> means are.  In effect, the key is all 120 bits.
> 
> Steve

Whoooow there, before this thread gets outa hand.

First a question - why bother encrypting the initial block?
Secondly the method, as it has evolved so far, and as far as I understand
it can still be cracked using 2^56 operations: Take the n-th block (n>1) and
decrypt it with the next key value. Then use the same key to decrypt the
(n+1)-th block. XOR the two decrypts together, and if the result looks like
good plaintext, then thats the key. Otherwise try the next key.

While the Initial random block effects all subsequent ciphertexts, the
decryption of the (n+1)-th block only depends on itself and the previous
block of ciphertext. The initial random block is not involved (using
standard CBC anyway - but that's another story).

Mike Scott



