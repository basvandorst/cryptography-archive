Path: msuinfo!netnews.upenn.edu!news.amherst.edu!news.mtholyoke.edu!news.byu.edu!news.kei.com!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!vixen.cso.uiuc.edu!uwm.edu!csd4.csd.uwm.edu!leranth
From: leranth@csd4.csd.uwm.edu (Thomas)
Newsgroups: sci.crypt
Subject: Re: One way hash functions can't REALLY be secure can they?
Date: 16 Apr 1994 23:22:51 GMT
Organization: University of Wisconsin - Milwaukee
Lines: 39
Message-ID: <2ops0bINNmpk@uwm.edu>
References: <CoDCA0.5w8@uwindsor.ca>
NNTP-Posting-Host: 129.89.7.4
X-Newsreader: TIN [version 1.1 PL9]

Mason  Chris L (mason4@server.uwindsor.ca) wrote:
: Okay first of all, I admit I don't know too much about crytology, but it
: seems to me that there must be a way to reverse so called one-way hash
: functions, it's just that no one has figured it out yet.  Or have they?
: With DES encryption, the security problem seems to be concerned with the
: length of keys, and cracking speed of fast computers, so you don't expect
: too many surprises coming up like someone finding a unique way to crack it.

     The strength in DES is due to the mathematical process 
      (read about Lucifers' design); the fact that technology has advanced at
     its current pace and the *initial* design "philosophy" are the reasons
    why DES is no longer "secure".
     
: But with the hash functions, while increasing processing speed is surely
: a threat, couldn't someone also come up with a way to reverse the hash 
: codes (or whatever they're called)?  Maybe all salts would have to be tried
: but that's a lot less time that all possible passwords.  Any comments?
: Chris

    Someone could theoretically find a way to determine collisions in a 
     "reasonable" amount of time... someone could also find a way to factor
     in a "reasonable" amount of time...   most people are currently quite
   sure in their belief that their algorithm of choice is *computationally*
     secure for their needs.
    One doesn't always need perfect security if one can get by with
      efficient computationally secure methods.

     Perhaps you should read about the DSS and perhaps Denning's book
    (as well as Schneier's) and you might get a better (and easy to understand)
    picture of cryptography.  Good luck.

  C++ya,
    Tom

--
*******************************************************************************
   leranth@miller.cs.uwm.edu
   "Improbables are my game"
*******************************************************************************
