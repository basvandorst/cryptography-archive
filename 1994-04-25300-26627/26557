Path: msuinfo!agate!howland.reston.ans.net!pipex!uunet!nwnexus!chinook!ken
From: ken@chinook.halcyon.com (Ken Pizzini)
Newsgroups: sci.math,sci.crypt,alt.security,alt.security.pgp,alt.security.ripem,comp.security.misc,alt.privacy
Subject: Re: RSA-129
Date: 29 Apr 1994 07:21:02 GMT
Organization: A World of Information at Your Fingertips
Lines: 53
Message-ID: <2pqcgu$ba5@nwfocus.wa.com>
References: <WARLORD.94Apr27000625@incommunicado.mit.edu> <1994Apr28.111814@kuttner.sfc.sony.com> <1994Apr28.112948@kuttner.sfc.sony.com> <strnlghtCozzwJ.Hq5@netcom.com>
NNTP-Posting-Host: chinook.halcyon.com
Xref: msuinfo sci.math:70759 sci.crypt:26557 alt.security:16142 alt.security.pgp:12069 alt.security.ripem:703 comp.security.misc:9541 alt.privacy:14725

In article <strnlghtCozzwJ.Hq5@netcom.com>,
David Sternlight <david@sternlight.com> wrote:
>In article <1994Apr28.112948@kuttner.sfc.sony.com>,
>Eric Weaver <weaver@kuttner.sfc.sony.com> wrote:
>>If I've done the math right, and using 5000 MIPS-years for the recent effort,
>>a 1024-bit key comes out to 109 million MIPS-years.
>
>The mind boggles. If Eric has done his math right, and I understand this
>correctly,
[...]
>It certainly doesn't make arguments with respect to current key sizes that
>wave the number of atoms in the universe in the air as palatable as they at
>first seemed.
[...]
>Someone please tell me I've got the quantitative consequences wrong.
>Otherwise security is an illusion, and the best we can do is keep the bulk
>of the not-so-vastly-rich out of our traffic. (Not that that's a bad
>outcome--it's just not the high security outcome many here have been
>trumpeting.) At a minimum, 1024 bit keys may not be nearly as strong as some
>think, and we may have to got to bigger keys a lot sooner than some expect.
>Let's hope widely available machines are cheap enough and fast enough that
>the exponential increase to crack argument wins over the slower to encrypt
>and decrypt argument.

The basic assumption here (that the math was done right) doesn't seem
to match up.  My understanding is that the complexity of the current
best factoring algorithm is:
	  O(  exp( ln(n)^(1/3) * ln(ln(n))^(2/3) * ((64/9)^(1/3)+o(1)) )  )
(where n is the number being factored; i.e. log(n) is the number of digits).

This gives an expected running time for a 1024 bit modulus to be almost
171 billion times longer than for the 427 bit modulus that is rsa-129.
Given the estimate above of "5000 MIPS-years" for rsa-129, that comes
out to 853 trillion MIPS-years for a 1024 bit modulus.  For a 1 million
1000 MIPS processors, this requires 853 millenia.  For those made
uncomfortable by this low number, square your running time by using a
2048 bit modulus and increase the factoring running time by a factor of
another couple trillion.  Of course, if you want real security (barring
breakthroughs in factoring, which are harder to predict) you might want
to go with a 8192 bit modulus and require the advisary to expend
5 vingintillion MIPS-years...

		--Ken Pizzini

P.S. for our non-US readers: in this posting I use the American
numerology where 1 billion = 1000 million, etc.; not the
European 1 billion = 1 million million form.  For ease of translation,
here is a conversion table:
	name           exponent of 10    European name
	million         6                million
	billion         9                milliard
	trillion       12                billion
	vingintillion  63                thousand decillion
