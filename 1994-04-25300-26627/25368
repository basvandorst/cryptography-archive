Path: msuinfo!agate!howland.reston.ans.net!vixen.cso.uiuc.edu!audi.ncsa.uiuc.edu!mitchell
From: David Mitchell <mitchell@ncsa.uiuc.edu>
Newsgroups: sci.crypt
Subject: Re: Encryption Using Huffman Coding
Date: 1 Apr 1994 21:59:45 GMT
Organization: #include <std.disclaimer>
Lines: 19
Distribution: world
Message-ID: <2ni5gh$5f7@vixen.cso.uiuc.edu>
References: <CnKDnt.3vr@chinet.chinet.com> <mpjCnL7I9.IIK@netcom.com> <2nhoaa$mlp@transfer.stratus.com> <1994Apr1.190844.8319@mnemosyne.cs.du.edu>
NNTP-Posting-Host: audi.ncsa.uiuc.edu
X-UserAgent: Version 1.1.3
X-XXMessage-ID: <A9C0A5E796010611@audi.ncsa.uiuc.edu>
X-XXDate: Thu, 31 Mar 94 16:08:07 GMT

While Huffman coding may not be sufficient for crypto, it does
seem as though it should be possible to combine compression
and crypto into a strong system.  Compression techniques can
become very complex.  And with the compression dictionary
playing the part of the key, you will have a very large key.  Albeit
one whose per-bit entropy is relatively low.

Key initialization could possibly be performed by the two parties
choosing a set of documents off of the net (via secure channel), and
each of them building a copy of the dictionary from that.

It's an interesting idea, merging the compression and encryption.  I've
been tossing it around in my mind for a while, but haven't done anything
serious.  For that matter, a lot of compression would be pretty difficult
to decompress without access to the standard used.  Imagine trying to
decode a CODEC communication without knowing the algorithm used.  Sure,
it is probably doable, but it would be difficult.

-David Mitchell
