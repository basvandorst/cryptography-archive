Path: msuinfo!agate!ames!hookup!yeshua.marcam.com!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!vixen.cso.uiuc.edu!audi.ncsa.uiuc.edu!mitchell
From: David Mitchell <mitchell@ncsa.uiuc.edu>
Newsgroups: sci.crypt
Subject: Re: How does DES cracking work?
Date: 13 Apr 1994 17:03:13 GMT
Organization: #include <std.disclaimer>
Lines: 37
Distribution: world
Message-ID: <2oh8kh$8bh@vixen.cso.uiuc.edu>
References: <1994Apr11.162411.1300@rna.indiv.nluug.nl> <2of0gm$b9a@lastactionhero.rs.itd.umich.edu>
NNTP-Posting-Host: audi.ncsa.uiuc.edu
X-UserAgent: Version 1.1.3
X-XXMessage-ID: <A9D18FE44C030611@audi.ncsa.uiuc.edu>
X-XXDate: Wed, 13 Apr 94 12:02:44 GMT

In article <2of0gm$b9a@lastactionhero.rs.itd.umich.edu> Andrew Philip
Fabbro, afabbro@dante.ccs.itd.umich.edu writes:
> Why can't you simply re-encrypt a potential plaintext and compare it to 
> the original encryption?  i.e., with every potential key you try, you 
> decrypt the ciphertext, and then re-encrypt the plaintext with the 
> current potential key, creating a second encrypted file.  If the
original 
> encrypted file matches this pass's second encrypted file, you know
you've 
> got the right key, yes?  Of course, having the deciphered plaintext
would 
> be the real proof, but it's easier for a machine to see if two files
are 
> identical than to recognize plaintext.
> 
> I'm sure that the above is full of typical novice errors and things I 
> haven't taken into account, so I'm certain kind cryptogensia will point 
> out the error of my ways...

The problem is that the two files are always identical.  The encrypt
and decrypt process are inverses; the only difference is in the order
in which the sub-keys are used.  In other words, taking a piece of
data and performing:

data --> encrypt --> decrypt --> data

is the same as:

data --> decrypt --> encrypt --> data

with the exception that the intermediate result is different (I think.)
Either way, the data at the end is identical to the data that you
started with.

Hope this helps.

-David Mitchell
