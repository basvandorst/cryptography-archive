Newsgroups: sci.crypt
Path: msuinfo!agate!ihnp4.ucsd.edu!swrinde!cs.utexas.edu!uunet!mnemosyne.cs.du.edu!nyx10!colin
From: colin@nyx10.cs.du.edu (Colin Plumb)
Subject: Re: Q: Security of new encryption-devdriver
Message-ID: <1994Apr14.105133.742@mnemosyne.cs.du.edu>
X-Disclaimer: Nyx is a public access Unix system run by the University
 	of Denver for the Denver community.  The University has neither
 	control over nor responsibility for the opinions of users.
Sender: usenet@mnemosyne.cs.du.edu (netnews admin account)
Organization: Nyx, Public Access Unix at U. of Denver Math/CS dept.
References: <2nq8d6$kkp@liberator.et.tudelft.nl> <2nt40b$nk@ccu2.auckland.ac.nz> <2oels0$su0@freenet3.scri.fsu.edu>
Date: Thu, 14 Apr 94 10:51:33 GMT
Lines: 36

In article <2oels0$su0@freenet3.scri.fsu.edu>,
Michael Smith <misha@freenet3.scri.fsu.edu> wrote:
>Peter Gutmann (pgut01@cs.aukuni.ac.nz) wrote:
>:  
>: There is a flaw in this reasoning which contributed to my decision to encrypt
>: raw partitions rather than use the drive-within-a-drive approach.  The
>: important point is that you don't want to use a different IV for each
>: *sector* but for each *new encrypted data block*.  This means that if you
>: read a sector, change a byte, and write it back out again, you must change
>: the IV.  This necessitates keeping a unique IV somewhere for each sector,
>: which is changed each time the sector is updated.  
>:  
> 
>Is this still true when using CBC mode?  In CBC mode you have:
> 
>  c_0 = E(p_0 xor IV)
> 
>(where p_0 is the first plaintext block, c_0 is the first
>ciphertext block).
> 
>Therefore even if you re-encrypt a different plaintext block with
>the same IV, an attacker can't recover the new plaintext block,
>even if he knew the old one (which is not the case in CFB mode)

It is still the case that if you read a sector, modify a byte, and
write it back, an opponent can tell, to within one encryption block,
where the change was made.  This leaks information.

In general, you should not encrypt two messages with the same IV.
The varying contents of a sector at different times are different
messages.  So you have to get tricky to avoid this.

CBC is better, I agree - you don't get the bit-wise information - but
there's an effective patch and CBC has other advantages.
-- 
	-Colin
