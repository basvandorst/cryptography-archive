Newsgroups: sci.crypt
Path: msuinfo!agate!ames!olivea!sgigate.sgi.com!fido.asd.sgi.com!sgi!wdl1!io!koontzd
From: koontzd@io.lrmsc.loral.com (David Koontz )
Subject: Re: DES Initial and final permutations
Message-ID: <1994Apr5.180310.8696@wdl.loral.com>
Sender: news@wdl.loral.com
Organization: Loral Rolm Computer Systems
References: <765288907snz@bell.demon.co.uk> <CnptM4.EIr@chinet.chinet.com>
Date: Tue, 5 Apr 1994 18:03:10 GMT
Lines: 129

>From: schneier@chinet.chinet.com (Bruce Schneier)
>
>In article <765288907snz@bell.demon.co.uk>,
>Peter Bell <Peter@bell.demon.co.uk> wrote:
>>This may very well be a question that has been asked before, and if so I
>>apologise.
>>
>>I was looking at the DES, and wondered if the initial and final permutations
>>actually have any effect on the strength of the cypher.  The (very limited)
>>analysis that I've done suggests that they don't but I have no proof either
>>way.  Does anyone (here) know why they were made part of the system in the
>
>Koontz's answer is probably the best that has ever been posted here.
>
>Those who are in charge of the FAQ should consider adding it.

I new I was forgetting to bring something from home this morn!  (I also
forgot my lunch.)

Please put it in the FAQ.


Initial Permutation
___________________

The Initial Permuation is a description of how a byte wide interface
is connected to a 64 bit block (the input block) comprised of two 
32 bit blocks (L and R) and is a standardization.

FIPS PUB 46-x has the most significant bit of the input block/byte
as bit 1.  Conversion to Bit 7 MSB ( BIT(7) = 1 << 7 ) is shown in the
Byte Bit column in the following tables.

Consider a byte wide interface with the bits numbered 1-8.
The even numbered bits go to the L block, and the odd numbered bits
go to the R block.

Port	Byte		Input 	(LR)		Left
 Bit	 Bit		Block  (64 bits)	Block (32 bits)

2--------6----------58 50 42 34 26 18 10  2	 1  2  3  4  5  6  7  8
4--------4----------60 52 44 36 28 20 12  4	 9 10 11 12 13 14 15 16
6--------2----------62 54 46 38 30 22 14  6	17 18 19 20 21 22 23 24
8--------0----------64 56 48 40 32 24 16  8	25 26 27 28 29 30 31 32


						Right Block (32 bits)

1--------7----------57 49 41 33 25 17  9  1	 1  2  3  4  5  6  7  8
3--------5----------59 51 43 35 27 19 11  3	 9 10 11 12 13 14 15 16
5--------3----------61 53 45 37 29 21 13  5	17 18 19 20 21 22 23 24
7--------1----------63 55 47 39 31 23 15  7	25 26 27 28 29 30 31 32

Input Byte	     8  7  6  5  4  3  2  1

Consider the Left or Right block being comprised of 4 eight bit registers
serially loaded from the byte wide interface, and during actual encryption
either being parallel loaded (R -> L and f(R,K) XOR L -> R)  or the
previous value being held while the key schedule double shifts.  During
output (Final Permutation) the shift registers are shifted serially,
the Left block going to odd bits and the Right block going to even bits
(swapping L and R for decryption).  

Final Permutation
_________________

Right 				Output (R16L16)		  Byte	 	Port
Block (32 bits)			Block (64 bits)		   Bit		 Bit

 1  2  3  4  5  6  7  8		 1  2  3  4  5  6  7  8-----6------------2
 9 10 11 12 13 14 15 16		 9 10 11 12 13 14 15 16-----4------------4
17 18 19 20 21 22 23 24		17 18 19 20 21 22 23 24-----2------------6
25 26 27 28 29 30 31 32		25 26 27 28 29 30 31 32-----0------------8

Left
Block (32 bits)

 1  2  3  4  5  6  7  8		33 34 35 36 37 38 39 40-----7------------1
 9 10 11 12 13 14 15 16		41 42 43 44 45 46 47 48-----5------------3
17 18 19 20 21 22 23 24		49 50 51 52 53 54 55 56-----3------------5
25 26 27 28 29 30 31 32		57 58 59 60 61 62 63 64-----1------------7

Output Byte			 8  7  6  5  4  3  2  1

From FIPS PUB 46-x:

Final Permutation IP-1:
				Output Byte
40  8 48 16 56 24 64 32		  1
39  7 47 15 55 23 63 31		  2
38  6 46 14 54 22 61 30		  3
37  5 45 13 53 21 60 29		  4
36  4 44 12 52 20 59 28		  5
35  3 43 11 51 19 58 27		  6
34  2 42 10 50 18 57 26		  7
33  1 41  9 49 17 56 25		  8

 1  2  3  4  5  6  7  8	 Port Bit

 7  6  5  4  3  2  1  0  Byte Bit

Note that hardware implemented permutations don't cost anything and are
simply connective descriptions.  Without the standard specifying how
data is assembled/disassembled to/from the 64 bit crypto variable 
(LR block) there would be no guarantee of interoperability.

Historical Note
_______________

FIPS PUB 46 was first published in 1977.  The first two non IBM chip
implementations were from Fairchild and Intel.  There were no 16 bit
microprocessors available, and no one had envisioned 16 bit peripheral
chips (which would lag 16 bit micros by several years).

To show the limitations of the day, the Fairchild implementation, the
9414 chip set was comprised of four 40 pin ceramic dips utilizing
bipolar technology and containing one byte of L, R, C and D each,
as well as two masked ROM S Boxes making the chips unique.  The Intel
implementation was a masked ROM version of the 8741 slave processor,
and very slow.  The 9414 was a lot faster and paid for it in power
consumption.  The high pin count provided interconnection for E permutation,
left/right shift of C and D according to the key schedule, and the P
permutation.  A higher level of integration was not possible for bipolar
technology the year the 9414 was introduced.

Its only been the last several years that DES implementations with 
bus widths greater than 8 bits have been available.


