Newsgroups: sci.math,sci.crypt,alt.security,alt.security.pgp,alt.security.ripem,comp.security.misc,alt.privacy
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!library.ucla.edu!csulb.edu!paris.ics.uci.edu!ucla-cs!geoff
From: geoff@ficus.cs.ucla.edu (Geoff Kuenning)
Subject: Re: RSA-129
Nntp-Posting-Host: exeter.cs.ucla.edu
References: <WARLORD.94Apr27000625@incommunicado.mit.edu> <strnlghtCoxF2o.DLA@netcom.com> <2pmk96$2k4@qualcomm.com>
Organization: UCLA, Computer Science Department
Message-ID: <1994Apr28.183126.19287@cs.ucla.edu>
Date: Thu, 28 Apr 94 18:31:26 GMT
Lines: 56
Xref: msuinfo sci.math:70685 sci.crypt:26529 alt.security:16118 alt.security.pgp:12017 alt.security.ripem:689 comp.security.misc:9517 alt.privacy:14705

In article <2pmk96$2k4@qualcomm.com> karn@servo.qualcomm.com writes:

> exp( (ln n)**1/3 * (ln (ln(n)))**2/3)
> 
> Given the now-known effort for RSA129 (about 429 bits) you should be able
> to compute the answers to your questions.

I just wrote the following little ugly program to try this out:

    #include <stdio.h>
    #include <math.h>

    extern double exp ();
    extern double pow ();
    extern double log ();

    double complxty();
    extern double atof ();

    int main (argc, argv)
    int argc;
    char *argv[];
    {
	double base = complxty (429.0);

	while (--argc > 0)
	    {
	    ++argv;
	    printf ("%d: %g\n",
	      atoi (argv[0]), complxty ((double) atoi (argv[0])) / base);
	    }
	return 0;
    }

    double complxty(n)
    double n;
    {
	return exp(pow(log(n),0.3333)*pow(log(log(n)),0.66667));
    }

Running it with arguments "429 512 1024 2048 4096 8192 16384" gave the
following frightening results:

    429: 1
    512: 1.05647
    1024: 1.29931
    2048: 1.57926
    4096: 1.90026
    8192: 2.26656
    16384: 2.68272

Given predictable increases in processor speed and power, this seems
to say that RSA is crackable now for 512-bit keys and soon for even
very long keys.  Somebody please tell me I made a mistake somewhere!
-- 
	Geoff Kuenning	geoff@ficus.cs.ucla.edu	geoff@ITcorp.com
