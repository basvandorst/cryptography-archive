Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!uunet!mnemosyne.cs.du.edu!nyx10!colin
From: colin@nyx10.cs.du.edu (Colin Plumb)
Subject: Re: Computing multiplicative inverses
Message-ID: <1994Apr7.074224.25307@mnemosyne.cs.du.edu>
X-Disclaimer: Nyx is a public access Unix system run by the University
 	of Denver for the Denver community.  The University has neither
 	control over nor responsibility for the opinions of users.
Sender: usenet@mnemosyne.cs.du.edu (netnews admin account)
Organization: Nyx, Public Access Unix at U. of Denver Math/CS dept.
References: <1994Apr6.093116.27805@mnemosyne.cs.du.edu> <2numnf$qka@linus.mitre.org>
Date: Thu, 7 Apr 94 07:42:24 GMT
Lines: 31

In article <2numnf$qka@linus.mitre.org>,
Robert D. Silverman <bs@gauss.mitre.org> wrote:
>:Euclidean Algorithm) involves repeated division.  This is annoyingly
> 
>Negative. Use Lehmer's method. (see Knuth Vol. 2) it involves
>NO division at all; only shifts and add/subtract.

Um, you've misremembered.  Knuth credits the binary method (shifts and
subtracts) to J. Stein in 1961 (J. Comp. Phys. 1 (1967), 397-405).
Lehmer's method (AMM 45 (1938), 227-233) uses the leading digits to
reduce the number of multiple-precision steps, but still uses the classic
divide method, and produces the same quotients.

Exercise 34 (using LEhmer-like methods on the binary algorithm) is credited
to R.W. Gosper.

I'll also have to work through Exercise 35, extending the binary algorithm
to an extended one.

Since you're showing me where I'm stuck everywhere, can you remind me
of any fast high-precision division (ith remainder) algorithms?  All
this reduces the need for it considerably, but it's still a useful
primitive.  The best I can think of right now for computing a/b is to
use Newton's method to form an estimate of 1/b to sufficiently many
decimal places, then multiply by a to form a quotient estimate, multiply
by b and subtract to form a remainder estimate, and do final corrections.

I thought I remembered something a bit more direct, that didn't require
final corrections, but I can't find the reference now.
-- 
	-Colin
