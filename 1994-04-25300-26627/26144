Path: msuinfo!uwm.edu!spool.mu.edu!darwin.sura.net!convex!cs.utexas.edu!howland.reston.ans.net!math.ohio-state.edu!jussieu.fr!univ-lyon1.fr!news-rocq.inria.fr!couchey.inria.fr!doligez
From: doligez@couchey.inria.fr (Damien Doligez)
Newsgroups: sci.crypt
Subject: Re: PUZZLE or exercise with phi-test
Date: 18 Apr 1994 18:47:34 GMT
Organization: I.N.R.I.A Rocquencourt
Lines: 62
Distribution: world
Message-ID: <2oukk6$922@news-rocq.inria.fr>
References: <straitsCo8Mxs.5qn@netcom.com> <2oov91$ovf@rand.org>
NNTP-Posting-Host: couchey.inria.fr
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit

In article <2oov91$ovf@rand.org>, jim@rand.org (Jim Gillogly) writes:
|> For the first few bytes, exhaustive search is good enough.  With five
|> bytes of key we get 16 bytes of output; with six bytes of key we get 32.

In article <PCL.94Apr18164357@foo.oucs.ox.ac.uk>, pcl@foo.oucs.ox.ac.uk (Paul C Leyland) writes:
|> Solved it.  I used exhaustive search on the first 32 bytes of the
|> message, i.e. 6 key characters.

Hey, you guys seem fond of brute force.  I only had to brute-force 3
characters of the key, and the recognition could be easily automated.
This is how I did it:

> Plaintext:   THIS ISQU ITEA WEAK SYST EM
> Keys used:   YYYY YYYY YYYY YYYY YYYY YY
>               P P  P P  P P  P P  P P  P
>                MM   MM   MM   MM   MM
>                   IIII      IIII      II
>                        WWWW WWWW
>                                  XXXX XX
> Ciphertext:  RUSR ONIB CCKV YVON NIZP HE

Notice that guessing the first 4 letters of the key gives you 8
characters of plaintext.  But you can apply the same trick to any
block of 8 characters starting at a multiple of 8.  Guessing 4 letters
of the key on the "CCKV YVON" cyphertext will give you k[1], k[2] and
k[3], and k[0]+k[4] (instead of the k[0] you get for the first 8
characters).

So I guessed 4 letters of key for each 8-letter block, retained the
blocks with no "unlikely" trigrams, and sorted by the 3 last letters
of the partial key.  The only (k[1], k[2], k[3]) that appeared more
than twice was represented 15 times, and it was QXW.

I recovered k[0] by listing the 26 possible decryptions of the first 8
characters, and the other characters of the key by the same method,
doubling the amount of plaintext for each key.  I could also have
solved the 15 equations (with 8 unknowns) given by the 8-character
blocks.

[also from Paul:]
|> I had to build my own trigram tables: I used the
|> Oxford Text Archive to help me.  My tables are now built from 10Mb of
|> the writings of Trollope, possibly not the best of sources.

My tables come from 60k of text, mostly the PGP documentation.  That's
all I had on my hard disk.  Next time, I'll use the US Constitution.
The many "shall" and the absence of "key" and "you" are no good for
the statistics...

This took me the best part of the week-end, but then, it is my first
successful cryptanalysis.  I tried the first approach described
by Jim, but I gave up when it seemed to get nowhere.  I figured that
an experience cryptanalyst should be able to recover both pieces of
plaintext from the character-wise difference of the two 512-character
pieces.  Is it possible ?  Is it easy ?


|> Please continue to post challenges of this level of difficulty.

Seconded.  This is more relevant to this newsgroup than all the
political discussions about the EES.  If you post these to
rec.puzzles, I will have to subscribe that group.
