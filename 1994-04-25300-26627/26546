Path: msuinfo!netnews.upenn.edu!dsinc!newsfeed.pitt.edu!godot.cc.duq.edu!news.duke.edu!zombie.ncsc.mil!golf!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu
Newsgroups: sci.crypt
Subject: PRNG's--byte and word
Date: Thu, 28 Apr 94 17:59:46 CDT
Organization: University of Missouri, Columbia
Lines: 47
Message-ID: <16FA6FD14S86.C445585@mizzou1.missouri.edu>
References: <9404251559.AA00778@redwood.csl.sri.com> <jktaberCoy24I.9Mr@netcom.com>
NNTP-Posting-Host: mizzou1.missouri.edu

In article <jktaberCoy24I.9Mr@netcom.com>
jktaber@netcom.com (John K. Taber) writes:
 
>
>Naively, I don't think generating longs is weak.  All other things being
>equal, it should be the same.  But I want to hold out for a byte generator.
>We are discussing rngs, I know, Heaven forbid we talk about crypto!  But
>should some misguided soul try to use this for crypto, he might appreciate
>a byte generator instead of a block generator.  I did program a block
>encryption system once, and I find block ciphers a little tricky to use
>when the plaintext length is not a multiple of the block length.  Most
>implementations of the DES are forced to do queer things to handle the
>last short block.  The idea is, we want to preserve the original length of
>plaintext string.  Imagine encrypting selected fields in a data base.
>So, we can do it with block ciphers, but not as simply as with a stream
>cipher.  Would you be willing to continue with byte rngs?
 
   Assuming you could get the same security for the same basic number of
operations with a word-generator instead of a byte-generator, I'd *much*
rather have the word-generator--it's going to be 4x as fast.  And with
a PRNG, unlike a block cipher, you don't have any real problems with
having a couple of extra bytes left over--you can just ignore them.
 
   It seems intuitively, though, like a byte generator should require
fewer operations to mask its internal state than a word-generator, by
kind-of the same argument that a block cipher with a larger block is
apparently going to require more rounds to completely diffuse changes.
 
>Finally, I agree, a long long period can be handy.  I got an idea for a
>using a long period that I would like to post later.
 
   Hmmm.  Have any of you guys seen a way of showing that there aren't
degenerate values for these systems that lead to short periods?  LFSR
and AFSRs are known to have periods equal to (or greater than) a certain
length, which could be useful in designing a stream cipher.  There is
one set of values for a set of 6 rotor values in Boucher's PRNG that
leaves them all 0's, I think, or all but the last value to be used to
update another value are 0's.  Are there other values that would
lead to short periods?
 
   What's a good lower-bound on the period of this kind of PRNG?  DES
in OFB-mode has a period of about 2**32 64-bit blocks, on average.  Is
this long enough?
 
>John K. Taber                                 jktaber@netcom.com
 
   --John Kelsey, c445585@mizzou1.missouri.edu
