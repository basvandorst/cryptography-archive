Newsgroups: sci.crypt
Path: msuinfo!netnews.upenn.edu!dsinc!ub!news.kei.com!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!pipex!sunic!trane.uninett.no!eunet.no!EU.net!dkuug!uts!news.uni-c.dk!id.dth.dk!id.dth.dk!sv
From: sv@idfs3.uucp (Stig Valentini)
Subject: Re: Quick crypt of compressed data
Message-ID: <sv.766220553@id.dth.dk>
References: <sv.766048428@id.dth.dk> <Co4I5v.Lvq@ulysses.homer.att.com>
Date: Wed, 13 Apr 1994 07:02:33 GMT
Lines: 16

Well, lets talk arithmic compression then. Instead of the tree then you
save the 'model' before the encoded data. If the encoded data after
the Huffman tree was fairly random - then the encoded data by arithmic
compression should be close to random (theory dictates that). And I'd
like to see crypto/compression freaks getting any info from random data.

Arithmic coding takes more time - but if you use a die-hard crypto
scheeme you still save time just crypting the 'model'. 
Now, what I've really trying to be saying now and before is this:
just as compression is improved by a pre-processor which removes
redundacy from the data (LZ77) before the compressin (Huffman) - then
the crypto also could also benefit from a pre-processor.

All the best, Stig Valentini


