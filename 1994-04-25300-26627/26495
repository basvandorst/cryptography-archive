Path: msuinfo!agate!howland.reston.ans.net!EU.net!ieunet!ieunet!vax1.dcu.ie!75001969
From: 75001969@vax1.dcu.ie
Newsgroups: sci.crypt
Subject: Re: Having as many keys as you have blocks
Message-ID: <1994Apr28.104654.991@vax1.dcu.ie>
Date: 28 Apr 94 10:46:53 GMT
References: <1994Apr27.135818.19564@cs.nott.ac.uk>
Lines: 50

In article <1994Apr27.135818.19564@cs.nott.ac.uk>, asb@cs.nott.ac.uk (Andrew Brown) writes:
> Currently all my encryption programs use MD5 to generate an encryption key
> that is subsequently used by DES, IDEA or whatever to encrypt information
> in one of the standard modes of operation.
> 
> Say I'm using DES with the lower half of my MD5 passphrase hash as the key.
> What if I continue to do this, but generate the key for the second block
> encryption from the MD5 hash of the upper half of the first hash ? That is
> 
> hash[0] = MD5(passphrase);              ; block = 0
> k[0]    = lower64(hash[0])
> 
> hash[n] = MD5(upper64(hash[n-1]))       ; block > 0
> k[n]    = lower64(hash[n])
> 
> In the worst case that your enemy succesfully attacks a block, gaining its
> key, he still cannot get any hold of the keys for the previous or next
> blocks and must attack them independently. If you want more bits for either
> the keys or the hashing for the next key you can always concatentate the
> outputs of several hash algorithms at each hash-step.
> 
> Is this a good idea ?
> 
> 
> Regards,
> 
> Andy
> 

Not a bad idea, but a few disadvantages, which may or may not be a problem
depending on the application

(1) No random read/write access to the encrypted data. Blocks must be
encrypted/decrypted in sequence.

(2) Loss of synchronism and difficult recovery if a block gets lost.

(3) Time-consuming key-scheduling for each block

To fix the first, use a simpler method

    k[i] = MD5(PassPhrase+i)

Now the secret key for a given block can be found immediately, and the keys
are completely unrelated (if MD5 is any good at its job). You could of
course now simply XOR this key directly with the plaintext ( so-called 
"counter-mode"), and forget about DES, but that's probably weaker

Mike Scott

