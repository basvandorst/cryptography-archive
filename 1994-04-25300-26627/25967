Path: msuinfo!agate!bob.eecs.berkeley.edu!spp
From: spp@bob.eecs.berkeley.edu (Steve Pope)
Newsgroups: sci.crypt
Subject: Re: How does DES cracking work?
Date: 13 Apr 1994 23:45:02 GMT
Organization: U.C. Berkeley -- ERL
Lines: 31
Message-ID: <2oi05u$9vk@agate.berkeley.edu>
References: <Co7K9s.2EM@ucdavis.edu> <2ohcoh$3e8@agate.berkeley.edu> <Co7xDB.GFx.3@cs.cmu.edu>
NNTP-Posting-Host: bob.eecs.berkeley.edu

rudis+@cs.cmu.edu (Rujith S DeSilva) writes:

| Steve Pope <spp@zabriskie.eecs.berkeley.edu> wrote:

|>> This is true, but if you use the standard Cypher Block Chaining
|>> method of DES, and add one DES block worth of random data to the
|>> front.  The first block's "errors" will propagate through the
|>> rest of the data.

|> Hmmm...... does this mean that, to crack such a DES configuration
|> by brute force, one would have to search a 120 bit key space ---
|> 56 bit DES key, and 64 bit initial state?  If that is true it
|> would seem like a pretty strong mode of operation.

| No, it's not true.  When the 56-bit DES key is guessed,
| decrypting the first block will give the 64-bit random initial
| block.  So a random first block does not enlarge the
| search-space, although it'll probably thwart attacks more
| sophisticated than brute-force search.

Not sure I believe that you are describing the situation here. 

I think this point depends on what is meant by "adding one block
of random data to the front".

If an initial block of random data
is encrypted in this mode, and the resultant block of ciphertext
is NOT TRANSMITTED, then my statement about needing to search a
120-bit key space would hold.

Steve
