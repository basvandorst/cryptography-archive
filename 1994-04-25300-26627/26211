Path: msuinfo!caen!spool.mu.edu!howland.reston.ans.net!math.ohio-state.edu!cyber2.cyberstore.ca!nwnexus!ole!rwing!pat
From: pat@rwing.UUCP (Pat Myrto)
Newsgroups: sci.crypt
Subject: Re: PGP uses Fermat to test primes?!
Message-ID: <3482@rwing.UUCP>
Date: 20 Apr 94 18:35:27 GMT
References: <766411614snz@kalva.demon.co.uk> <766598481snz@kalva.demon.co.uk> <1994Apr18.102704.812@vax1.dcu.ie>
Organization: Totally Unorganized
Lines: 31

In article <1994Apr18.102704.812@vax1.dcu.ie> 75001969@vax1.dcu.ie writes:
>
>Get a hold of "The probability that a random probable prime is Composite"
>by Kim & Pomerance, Math. Comp. October 1989 pp 721-741. As it explains
>pseudo-primes are just not a problem when the numbers get this big.

This kind of math is not really my strong point - is there some kind
of tool/module that one can get that will generate several primes, which one
could seed in their own way (to frustrate prediction and guesses),
which one could somehow use to get generate some good key pairs, if
indeed a problem DOES exist with the method used by PGP?  Is there a
test that doesn't require some monster machine like a Cray that one
could use to reject bad 'primes', until a good one is found?  If this
IS a problem in PGP, is it also a problem in ViaCrypt, too?

And has anybody actually committed such methods, if they do exist,
to source code that could be adapted to PGP, RIPEM, or whatever?

Which brings this to mind: Does anybody know how good the functions
in RSAREF or RIPEM that perform this prime generation function?  It
would be a shame if ones robust encryption scheme fell apart because
the primes it was depending on were NOT primes, but had a number
of small factors?  This would make it MUCH easier to defeat, would
it not?


-- 
pat@rwing  [If all fails, try:  rwing!pat@ole.cdac.com]  Pat Myrto - Seattle WA
"No one has the right to destroy another person's belief by demanding
empirical evidence."  --   Ann Landers, nationally syndicated advice columnist
and Director at Handgun Control Inc.
