Path: msuinfo!netnews.upenn.edu!news.amherst.edu!news.mtholyoke.edu!uhog.mit.edu!europa.eng.gtefsd.com!howland.reston.ans.net!pipex!zaphod.crihan.fr!jussieu.fr!univ-lyon1.fr!swidir.switch.ch!scsing.switch.ch!news.dfn.de!news.coli.uni-sb.de!sbusol.rz.uni-sb.de!hermes.uni-sb.de!not-for-mail
From: kuhu@stud.uni-sb.de (Kurt Huwig)
Newsgroups: sci.crypt
Subject: Re: Computing multiplicative inverses
Date: 11 Apr 1994 23:25:21 +0200
Organization: Studenten der Universit"at des Saarlandes
Lines: 41
Message-ID: <2ocf81$5p9@stud.uni-sb.de>
References: <1994Apr7.075115.2730@mnemosyne.cs.du.edu>
NNTP-Posting-Host: hermes.uni-sb.de
X-Newsreader: TIN [version 1.1 PL8]

I used a different method to avoid a long-division. I use the public
exponents 3,5,7,11 and 13, they are all smaller than 16 therefore fit in a
nibble (because I use an 8-bit-uProcessor). No I perform the euclidian
algorithm, dividing by 3 first. If the rest is 0, I'll try 5 and so on.
Just when the modulus is a multiple of 3*5*7*11*13=15015 I have to choose
other primes. If the rest is 1, then I am nearly finished, just calculating
the additive inverse.
In the other cases (remainder > 1) I use a tabular with the factors arising
from the rest of the euclidian algorithm:

xxx = yyy * 13 + 7
 13 =   1 *  7 + 6
  7 =   1 *  6 + 1

-> 1=...= yyy * -3 * 13 (+ zzz * xxx)
yyy * -3 is the wanted multiplicative inverse for 13.


xxx = modulus
(I've got some (!) problems with my arrow keys, I beg pardon...)

And if you want a big public exponent, exchange it with the secret one, or
multiplikate the public exponent with a big random number and use the modulus
to hide it...
Using this method and an RSA-ASIC for DM 100,- I calculate a random RSA-
keypair within 1-2 seconds on an 8051 uProcessor (similar to an 8086 without
segments), with 8 bit Accumulator and 1 million cycles/second.

I also read parts of the book of Knuth and some others (funniest one was a
speedup using redundant conversions of the divisor, that needed just a 4-bit
lookahead to determine one bit of the result and then one bit more for one
bit more of the divisor). But why this work, if you just need an RSA-key???

Kurt
I think I make myself perfectly clear:

Step 1: Find the plan!           Kurt Huwig       Universitaet Saarbruecken 
Step 2: Save the world!          
Step 3: Get out of my house!     kuhu@stud.uni-sb.de

Let's get crackin'!
