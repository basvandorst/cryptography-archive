Path: msuinfo!agate!howland.reston.ans.net!cs.utexas.edu!uunet!hotmomma!brent!steve.allen
From: steve.allen@brent.uucp (Steve Allen) 
Newsgroups: sci.crypt
Subject: re: SecureDrive checksum
Message-ID: <12313.552.uupcb@brent.uucp>
Date: 14 Apr 94 21:22:00 GMT
Distribution: world
Organization: The Brentwood BBS Harrison, NY  914-381-1600
Reply-To: steve.allen@brent.uucp (Steve Allen) 
Lines: 81

I recently posted messages to this group about the checksum
stored in the boot sector of a SecureDrive disk. Here is
SecureDrive author Edgar Swank's reply:

Steve:

Thanks for your msg of April 2. I don't take sci.crypt, so I wouldn't
have seen your msg otherwise.  Feel free to post this reply as my
response.

SecureDrive stores a checksum of the key in the boot sector of an
encrypted drive, which enhances data integrity and simplifies
password checking. However, there is a security implication
that I've been thinking about, and it has me a little concerned.
The problem is the ease of a dictionary attack. Any agent that
anticipates mounting an attack on a SecureDrive-encrypted disk can
start computing checksums now, and by essentially following Daniel
Klein's method of starting with most-probable words and letter
combinations, have a pretty good chance of catching someone who
doesn't choose a passphrase *very* carefully. This is a one-time
computation, well suited to distributed, spare-time processing, and
dependent mostly on storage space. Note that the storage
requirements aren't that great (relatively speaking), since all you
need is an index to your standard cracking dictionary and 4 bytes
checksum per entry.

Your criticism has some validity.  In an informal consultation, PRZ
advised me that SD could be made more secure by adding a "salt" unique
to each disk or each installation to prevent just such a pre-computed
attack. I would dispute your choice of words, "*very* carefully" in
describing how to resist a pre-computation attack.  I would say that
weak passphrases are vulnerable to a pre-computation attack and that
strong passphrases are not. I would define a strong passphrase as one
that gives you 2^80 to 2^128 combinations. This is provided by either
a passWORD of at least 15 randomly selected upper & lowercase
characters (which will be hard to remember) -or- a passPHRASE
of at least 7 WORDS randomly selected from a list of 5000 (much
easier to remember). Even a cheap dictionary is going to contain
more than 5000 words.

I don't think even the NSA has enough storage for 2^80 passphrases.
That's more than 10^24 passphrases.  Note that on average 2^48 of
these are going to have each -possible- 32-bit checkword.  So the NSA
is going to have to trial decrypt (on average) with 2^47
(over 100 trillion) passphrases and decide either manually or by a
pretty sophisticated algorithm whether or not the decrypted text makes
any sense.

In other words, while the 32-bit checkword is useful for detecting a
mistyped passphrase, its use diminishes in a brute-force attack as
the number of possible passphrases exceeds 2^32, because you're going
to get a lot of false positive "hits".

So for each of the 10^24 "most frequent" passphrases, the NSA is
going to have to store at least the 128-bit key plus the 32-bit
checkword.  Thats 160x10^24 bits.  What's the cost for storing a
gigabit (10^12 bits) on a mainframe these days?  At least $100?  OK,
that means you need to invest $16 thousand  TRILLION just for storage
space. Getting a little rich even for the NSA, considering the
entire national budget is between one and two trillion. (there goes
the deficit!).  Do you think the government is going to spend anywhere
near that to decrypt your kiddy porn or your list of illegal drug
supply customers/suppliers?

Of course, if you have H-bomb secrets, or the real dirt on Whitewater,
then you might add a few more words to the passphrase to push it to
2^128 combinations.  No point in going beyond that since then it
becomes cheaper to attack the 128-bit key. That's still only 11 words
randomly selected from a 5000-word list. Easily fits in the 255
character passphrase limit. And still not too hard to remember, with a
little effort. Piece of cake for a professional spy or criminal.

Of course, you still have to worry about "rubber hose" cryptography.

Edgar can be reached at edgar@spectrx.saigon.com
-Steve <73277.620@compuserve.com>
---
. QMPro 1.51 . This information for entertainment purposes only

----
The Brentwood BBS!  12 Nodes  (914)-381-1600
