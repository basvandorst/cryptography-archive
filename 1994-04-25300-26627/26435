Newsgroups: sci.crypt
Path: msuinfo!agate!overload.lbl.gov!dog.ee.lbl.gov!ihnp4.ucsd.edu!swrinde!cs.utexas.edu!howland.reston.ans.net!pipex!lyra.csx.cam.ac.uk!warwick!unicorn.nott.ac.uk!nott-cs!asb
From: asb@cs.nott.ac.uk (Andrew Brown)
Subject: Having as many keys as you have blocks
Message-ID: <1994Apr27.135818.19564@cs.nott.ac.uk>
Organization: The University of Nottingham
Date: Wed, 27 Apr 94 13:58:18 GMT
Lines: 31

Currently all my encryption programs use MD5 to generate an encryption key
that is subsequently used by DES, IDEA or whatever to encrypt information
in one of the standard modes of operation.

Say I'm using DES with the lower half of my MD5 passphrase hash as the key.
What if I continue to do this, but generate the key for the second block
encryption from the MD5 hash of the upper half of the first hash ? That is

hash[0] = MD5(passphrase);              ; block = 0
k[0]    = lower64(hash[0])

hash[n] = MD5(upper64(hash[n-1]))       ; block > 0
k[n]    = lower64(hash[n])

In the worst case that your enemy succesfully attacks a block, gaining its
key, he still cannot get any hold of the keys for the previous or next
blocks and must attack them independently. If you want more bits for either
the keys or the hashing for the next key you can always concatentate the
outputs of several hash algorithms at each hash-step.

Is this a good idea ?


Regards,

Andy

+---------------------------+----------------------------------------------+
| Andy <asb@cs.nott.ac.uk>  | PGP key fingerprint: EC 80 9C 96 54 63 CC 97 |
|    finger for PGP key     |                    : FF 7D C5 69 0B 55 23 63 |
+---------------------------+----------------------------------------------+
