%!
%!PS-Adobe-3.0%%Title: (Aggelos 1)%%Creator: (Microsoft Word 5.1: LaserWriter 8.0 8.0)%%CreationDate: (20:42 \242\345\371\364\333\362\341 18 I\357\371\354\335\357\371 1994)%%For: (TARDIS)%%Pages: 95%%DocumentFonts: Times-Bold Symbol Times-Roman Times-Italic Times-BoldItalic%%DocumentNeededFonts: Times-Bold Symbol Times-Roman Times-Italic Times-BoldItalic%%DocumentSuppliedFonts:%%DocumentData: Clean7Bit%%PageOrder: Ascend%%Orientation: Portrait%ADO_PaperArea: -30 -29 812 566%ADO_ImageableArea: 0 0 781 538%%EndComments/md 184 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if%%BeginFile: adobe_psp_basic%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./bd{bind def}bind def/xdf{exch def}bd/xs{exch store}bd/ld{load def}bd/Z{0 def}bd/T/true/F/false/:L/lineto/lw/setlinewidth/:M/moveto/rl/rlineto/rm/rmoveto/:C/curveto/:T/translate/:K/closepath/:mf/makefont/gS/gsave/gR/grestore/np/newpath14{ld}repeat/$m matrix def/av 80 def/por true def/normland false def/psb-nosave{}bd/pse-nosave{}bd/us Z/psb{/us save store}bd/pse{us restore}bd/level2/languagelevel where{pop languagelevel 2 ge}{false}ifelsedef/featurecleanup{stoppedcleartomarkcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bd/noload Z/startnoload{{/noload save store}if}bd/endnoload{{noload restore}if}bdlevel2 startnoload/setjob{statusdict/jobname 3 -1 roll put}bd/setcopies{userdict/#copies 3 -1 roll put}bdlevel2 endnoload level2 not startnoload/setjob{1 dict begin/JobName xdf currentdict end setuserparams}bd/setcopies{1 dict begin/NumCopies xdf currentdict end setpagedevice}bdlevel2 not endnoload/pm Z/mT Z/sD Z/realshowpage Z/initializepage{/pm save store mT concat}bd/endp{pm restore showpage}def/$c/DeviceRGB def/rectclip where{pop/rC/rectclip ld}{/rC{np 4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:Kclip np}bd}ifelse/rectfill where{pop/rF/rectfill ld}{/rF{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rlfillgR}bd}ifelse/rectstroke where{pop/rS/rectstroke ld}{/rS{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:KstrokegR}bd}ifelse%%EndFile%%BeginFile: adobe_psp_colorspace_level1%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved./G/setgray ld/:F/setrgbcolor ld%%EndFile%%BeginFile: adobe_psp_uniform_graphics%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./@a{np :M 0 rl :L 0 exch rl 0 rl :L fill}bd/@b{np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill}bd/arct where{pop}{/arct{arcto pop pop pop pop}bd}ifelse/x1 Z/x2 Z/y1 Z/y2 Z/rad Z/@q{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arctfill}bd/@s{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arct:Kstroke}bd/@i{np 0 360 arc fill}bd/@j{gSnp:Tscale0 0 .5 0 360 arcfillgR}bd/@e{np0 360 arc:Kstroke}bd/@f{np$m currentmatrixpop:Tscale0 0 .5 0 360 arc:K$m setmatrixstroke}bd/@k{gSnp:T0 0 :M0 0 5 2 rollarc fillgR}bd/@l{gSnp:T0 0 :Mscale0 0 .5 5 -2 roll arcfillgR}bd/@m{nparcstroke}bd/@n{np$m currentmatrixpop:Tscale0 0 .5 5 -2 roll arc$m setmatrixstroke}bd%%EndFile%%BeginFile: adobe_psp_basic_text%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./S/show ld/A{0.0 exch ashow}bd/R{0.0 exch 32 exch widthshow}bd/W{0.0 3 1 roll widthshow}bd/J{0.0 32 4 2 roll 0.0 exch awidthshow}bd/V{0.0 4 1 roll 0.0 exch awidthshow}bd/fcflg true def/fc{fcflg{vmstatus exch sub 50000 lt{(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store}if pop}if}bd/$f[1 0 0 -1 0 0]def/:ff{$f :mf}bd/MacEncoding StandardEncoding 256 array copy defMacEncoding 39/quotesingle putMacEncoding 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacEncoding 128 128 getinterval astore poplevel2 startnoload/copyfontdict{findfont dup length dictbegin{1 index/FID ne{def}{pop pop}ifelse}forall}bdlevel2 endnoload level2 not startnoload/copyfontdict{findfont dup length dictcopybegin}bdlevel2 not endnoloadmd/fontname known not{/fontname/customfont def}if/Encoding Z/:mre{copyfontdict/Encoding MacEncoding deffontname currentdictenddefinefont :ff def}bd/:bsr{copyfontdict/Encoding Encoding 256 array copy defEncoding dup}bd/pd{put dup}bd/:esr{pop popfontname currentdictenddefinefont :ff def}bd/scf{scalefont def}bd/scf-non{$m scale :mf setfont}bd/ps Z/fz{/ps xs}bd/sf/setfont ld/cF/currentfont ld/mbf{/makeblendedfont where{popmakeblendedfont/ABlend exch definefont}{pop}ifelsedef}def%%EndFile%%BeginFile: adobe_psp_derived_styles%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./wiversion(23.0)eq{{gS 0 0 0 0 rC stringwidth gR}bind}{/stringwidth load}ifelsedef/$o 1. def/gl{$o G}bd/ms{:M S}bd/condensedmtx[.82 0 0 1 0 0]def/:mc{condensedmtx :mf def}bd/extendedmtx[1.18 0 0 1 0 0]def/:me{extendedmtx :mf def}bd/basefont Z/basefonto Z/dxa Z/dxb Z/dxc Z/dxd Z/dsdx2 Z/bfproc Z/:fbase{dup/FontType get 0 eq{dup length dict begindup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/FDepVector exch/FDepVector get[exch/:fbase load forall]def}/bfproc load ifelse/customfont currentdict end definefont}bd/:mo{/bfproc{dup dup length 2 add dictbegin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .012 0 FontMatrix idtransform pop def/customfont currentdictenddefinefont8 dict begin/basefonto xdf/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginbasefont setfont( )dup 0 4 -1 roll putdup wisetcharwidth0 0 :MgSgldup showgRbasefonto setfontshowend}def}store :fbase}bd/:mso{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxa 1 ps div defbasefont setfont( )dup 0 4 -1 roll putdup wi1 index 0 ne{exch dxa add exch}ifsetcharwidthdup 0 0 msdup dxa 0 msdup dxa dxa msdup 0 dxa msgldxa 2. div dup msendend}def}store :fbase}bd/:ms{/bfproc{dup dup length 2 add dictbegin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .012 0 FontMatrix idtransform pop def/customfont currentdictenddefinefont8 dict begin/basefonto xdf/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxb .05 defbasefont setfont( )dup 0 4 -1 roll putdup wiexch dup 0 ne{dxb add}ifexch setcharwidthdup dxb .01 add 0 ms0 dxb :TgSgldup 0 0 msgRbasefonto setfont0 0 msendend}def}store :fbase}bd/:mss{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxc 1 ps div def/dsdx2 .05 dxc 2 div add defbasefont setfont( )dup 0 4 -1 roll putdup wiexch dup 0 ne{dsdx2 add}ifexch setcharwidthdup dsdx2 .01 add 0 ms0 .05 dxc 2 div sub :Tdup 0 0 msdup dxc 0 msdup dxc dxc msdup 0 dxc msgldxc 2 div dup msendend}def}store :fbase}bd/:msb{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxd .03 defbasefont setfont( )dup 0 4 -1 roll putdup wi1 index 0 ne{exch dxd add exch}ifsetcharwidthdup 0 0 msdup dxd 0 msdup dxd dxd ms0 dxd msendend}def}store :fbase}bd/italicmtx[1 0 -.212557 1 0 0]def/:mi{italicmtx :mf def}bd/:v{[exch dup/FontMatrix get exchdup/FontInfo known{/FontInfo getdup/UnderlinePosition known{dup/UnderlinePosition get2 index 03 1 rolltransformexch pop}{.1}ifelse3 1 rolldup/UnderlineThickness known{/UnderlineThickness getexch 0 3 1 rolltransformexch popabs}{pop pop .067}ifelse}{pop pop .1 .067}ifelse]}bd/$t Z/$p Z/$s Z/:p{aload pop2 index mul/$t xs1 index mul/$p xs.012 mul/$s xs}bd/:m{gS0 $p rm$t lw0 rl strokegR}bd/:n{gS0 $p rm$t lw0 rlgSglstrokegRstrokepath$s lw/setstrokeadjust where{popcurrentstrokeadjust true setstrokeadjust stroke setstrokeadjust}{stroke}ifelsegR}bd/:o{gS0 $p rm$t 2 div dup rm$t lwdup 0 rlstrokegR:n}bd%%EndFile/currentpacking where {pop sc_oldpacking setpacking}ifend		% md%%EndProlog%%BeginSetupmd begincountdictstack[{%stopped%%BeginFeature: *ManualFeed False1 dict dup /ManualFeed false put setpagedevice%%EndFeature}featurecleanupcountdictstack[{%stopped%%BeginFeature: *PageSize A4Small    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice%%EndFeature}featurecleanup(TARDIS)setjob/pT[1 0 0 -1 29 812]def/mT[1 0 0 -1 29 812]def/sD 16 dict def300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse%%IncludeFont: Times-Bold%%IncludeFont: Symbol%%IncludeFont: Times-Roman%%IncludeFont: Times-Italic%%IncludeFont: Times-BoldItalic/f0_1/Times-Bold :mre/f0_14 f0_1 14 scf/f0_12 f0_1 12 scf/f1_1/Symbol :bsr240/apple pd:esr /f1_12 f1_1 12 scf/f2_1 f1_1 def/f2_12 f2_1 12 scf/f3_1/Times-Roman :mre/f3_12 f3_1 12 scf/f4_1/Times-Italic :mre/f4_12 f4_1 12 scf/f5_1 f1_1 :mi/f5_12 f5_1 12 scf/f6_1/Times-BoldItalic :mre/f6_12 f6_1 12 scf/f7_1 f2_1 :mi/f7_12 f7_1 12 scf/f8_1 f3_1 :v def/f9_1 f1_1 :v def/Courier findfont[10 0 0 -10 0 0]:mf setfont%%EndSetup%%Page: 1 1%%BeginPageSetupinitializepage(TARDIS; page: 1 of 95)setjob%%EndPageSetupgS 0 0 538 781 rC0 0 538 762 rC318 16 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 1)J192 92 :Mf0_14 sf.992 .099(The Efficient Generation of)J165 116 :M.86 .086(Cryptographic Confusion Sequences)J249 165 :Mf3_12 sf-.179(Terry Ritter)A79 261 :M1.848 .185(ADDRESS:  Blue Jean Software, 2609 Choctaw Trail, Austin, Texas)J115 285 :M(78745.)S79 333 :M.956 .096(ABSTRACT:  A survey of pseudo-random sequence or random number)J115 357 :M.617 .062(generators \(RNG's\) for cryptographic applications, with extensive)J115 381 :M3.111 .311(reference to the literature, and seemingly unresolved issues)J115 405 :M-.032(discussed throughout.)A151 429 :M1.687 .169(An introduction to random sequences is presented, with)J115 453 :M.244 .024(some consequences suggested by G\232del's incompleteness theorem.)J115 477 :M3.652 .365(Implications of a necessarily deterministic implementation,)J115 501 :M2.334 .233(techniques of external analysis, and ways to complicate such)J115 525 :M-.058(analysis are discussed.)A151 549 :M.318 .032(A basis for RNG comparison is suggested.  Various RNG's)J115 573 :M3.978 .398(are described, including Chaos, Cebysev Mixing, Cellular)J115 597 :M.634 .063(Automata, x)J0 -3 rm.135(2)A0 3 rm.57 .057(\312mod\312N, Linear Congruential, Linear Feedback Shift)J115 621 :M1.431 .143(Register, Non-linear Shift Register, Generalized Feedback Shift)J115 645 :M4.912 .491(Register, and Additive types.  Randomizer and isolator)J115 669 :M1.817 .182(mechanisms, one-way functions, the combination of sequences)Jendp%%Page: 2 2%%BeginPageSetupinitializepage(TARDIS; page: 2 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC347 46 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 2)J144 121 :Mf3_12 sf.465 .046(from multiple RNG's, random permutations, and the generation of)J144 145 :M-.056(primitive mod 2 polynomials are also described.)A180 169 :M2.533 .253(An empirical state-trajectory approach to RNG design)J144 193 :M1.421 .142(analysis is given, and experimental results tabulated for several)J144 217 :M-.023(Cellular Automata, x)A0 -3 rm(2)S0 3 rm-.024(\312mod\312N, GFSR and Additive designs.)A108 265 :M1.458 .146(KEYWORD LIST:  cryptology, cryptography, computer cryptography,)J144 289 :M.968 .097(confusion sequences, pseudo-random sequences, random number)J144 313 :M1.073 .107(generators, cellular automata, GFSR, additive, lagged-Fibonacci,)J144 337 :M1.284 .128(randomizers, isolators, primitive polynomials, combined RNG's,)J144 361 :M-.064(random permutations, exposure class, exhaustive state analysis)A108 433 :Mf0_12 sf1.672 .167(1. INTRODUCTION)J144 457 :Mf3_12 sf2.999 .3(Random number generators \(RNG's\) have a central place in some)J108 481 :M1.354 .135(cryptosystem designs.  For example, stream ciphers use an RNG to provide a)J108 505 :M-.097(confusion sequence which is used to hide plaintext data.  Unfortunately, there are so)A108 529 :M.036 .004(many RNG designs, and so many different claims for them, that it is difficult even)J108 553 :M.968 .097(to compare the claims, let alone the designs.  Accordingly, one purpose of this)J108 577 :M1.321 .132(paper is to provide one man's overview of various RNG designs, with special)J108 601 :M1.113 .111(attention to the needs of a cryptographic system. While no survey can provide)J108 625 :M-.002(complete details of all designs, it can provide basis for comparison and an )Af4_12 sf(index to)S108 649 :M-.069(the literature)Af3_12 sf-.074( for those who are more seriously interested.)A144 673 :M1.494 .149(Although an RNG is just one part of a cryptographic system, here we)J108 697 :M-.036(assume that the rest of the system has somehow been penetrated, and wish to know)Aendp%%Page: 3 3%%BeginPageSetupinitializepage(TARDIS; page: 3 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC347 46 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 3)J108 121 :Mf3_12 sf1.071 .107(how effective the RNG will be in resisting penetration on its own. We seek to)J108 145 :M.205 .02(understand the design of strong cryptographic RNG's, and are therefore interested)J108 169 :M-.036(in the weaknesses of RNG designs.  Cryptographic "strength" is the ability to resist)A108 193 :M.023 .002(attack; in order to understand the strength of a design, we are necessarily forced to)J108 217 :M-.118(consider how to attack it.)A108 265 :Mf0_12 sf1.825 .182(2. BACKGROUND)J144 289 :Mf3_12 sf.319 .032(The use of random number generators is central to stream ciphers [e.g., 3,)J108 313 :M1.174 .117(3], where the RNG constitutes most of the system.  In broad terms, a Vernam)J108 337 :M.343 .034(stream cipher [3] consists of a combiner \(generally a single exclusive-OR gate or)J108 361 :M.803 .08(instruction\) and a confusion sequence generator.  Usually, an arbitrary user key)J108 385 :M1.831 .183(somehow selects a particular \(and hopefully unique\) sequence; the sequence)J108 409 :M.704 .07(generator may be the most complex part of the design.  Although cryptographic)J108 433 :M.112 .011(applications obviously impose special requirements, one approach is to use one of)J108 457 :M-.083(the random number generators which have been developed for statistical use.)A144 481 :M.139 .014(The major reference on the design and testing of computer based RNG's is)J108 505 :M.682 .068(volume 2 of Knuth's classic )Jf4_12 sf.897 .09(The Art of Programming)Jf3_12 sf.9 .09( [3]. Unfortunately, Knuth)J108 529 :M-.045(never really addresses the special needs of cryptography [3: 90], and the material is)A108 553 :M.68 .068(now seriously out of date even with respect to statistical RNG's.  Left without a)J108 577 :M.713 .071(current encyclopedic handbook, we are left to peruse the original papers, and to)J108 601 :M.068 .007(form our own conclusions.)J144 625 :M.166 .017(Over the last decade, a new body of theoretical work has developed which)J108 649 :M.527 .053(seemingly has "solved" the RNG problem.  \(This includes papers by Shamir [3],)J108 673 :M.639 .064(Blum, Blum, and Shub [3], Long and Wigderson [3], Vazirani and Vazirani [3],)J108 697 :M1.208 .121(Blum and Micali [3], Alexi, Chor, Goldreich, and Schnorr [3], Winternitz [3],)Jendp%%Page: 4 4%%BeginPageSetupinitializepage(TARDIS; page: 4 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC347 46 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 4)J108 121 :Mf3_12 sf2.034 .203(Chor, Goldreich, and Goldwasser [4], Levin [4], Vazirani and Vazirani [4],)J108 145 :M.466 .047(Allender [4], Reif and Tygar [4], Goldreich, Krawczyk, and Luby [4], and Nisan)J108 169 :M3.35 .335(and Wigderson [4].\)  This work describes RNG's which are said to be)J108 193 :M1.608 .161("unpredictable."  The papers include detailed statistical proofs in algorithmic)J108 217 :M2.666 .267(complexity theory, but they are very difficult to follow without a similar)J108 241 :M.474 .047(background.  Hopefully, we will soon see introductions to this theory which will)J108 265 :M-.006(include all the tools necessary to follow these proofs, since these papers imply that)A108 289 :M-.092(this may be the future of all cryptographic design.  It may be especially important to)A108 313 :M.238 .024(understand the consequences and limitations of these results.  But, for our current)J108 337 :M.111 .011(purposes, it is just too early to assume that the RNG problem has been completely)J108 361 :M-.015("solved.")A108 409 :Mf0_12 sf1.236 .124(3. BASICS AND TERMINOLOGY)J108 457 :M.491 .049(3.1  Randomness)J144 481 :Mf3_12 sf1.259 .126(From the perspective of classical probability, )Jf4_12 sf.354(any)Af3_12 sf1.255 .126( sequence of equally-)J108 505 :M.944 .094(probable events is equally likely, and thus equally "random" [e.g.,\3124:\3122-3 \2443.1].)J108 529 :M-.014(Obviously, this point of view fails to capture the essence of the difference between)A108 553 :M1.389 .139(a sequence of identical values, and a mixed-value sequence of similar length.)J108 577 :M-.021(\(Various approaches to "randomness" are discussed in Knuth [4: 142-166 \2443.5].\))A144 601 :M.644 .064(Perhaps a more useful interpretation is given in an outstanding article by)J108 625 :M.565 .056(Chaitin [4], which develops "randomness" as )Jf4_12 sf.138(information)Af3_12 sf.575 .058( \(also from Martin-L\232f)J108 649 :M1.624 .162([4] and Kolmogorov [4]\).  At first this may seem very odd:  Randomness is)J108 673 :M1.326 .133(commonly considered the )Jf4_12 sf.346(enemy)Af3_12 sf.988 .099( of information. When a radio signal is weak,)J108 697 :M.498 .05(reception is noisy; when the antenna fails, a TV displays snow and delivers hiss.)Jendp%%Page: 5 5%%BeginPageSetupinitializepage(TARDIS; page: 5 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC347 46 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 5)J108 121 :Mf3_12 sf.226 .023(The noise, snow, and hiss are randomness, and the normal role of communication)J108 145 :M.742 .074(is to rise )Jf4_12 sf.399(above)Af3_12 sf1.289 .129( the background noise to deliver information in a pattern; now)J108 169 :M-.05(randomness is said to be the occurrence of )Af4_12 sf-.058(maximum information)Af3_12 sf-.053(.  \(The confluence)A108 193 :M.175 .017(between the ideas of randomness and information, although apparently implicit in)J108 217 :M-.034(Shannon [5] and Pierce [5], is nearly explicit in Campbell [5: 63, 68-69, 72], and )Af4_12 sf-.058(is)A108 241 :Mf3_12 sf-.11(explicit in Berlinski [5: 69-70].\))A144 265 :M1.118 .112(If noise is just a massive amount of information, perhaps noise sources)J108 289 :M.443 .044(simply reflect a complex, hidden, internal order [5: 408-409]. Consequently, it is)J108 313 :M-.055(possible that cryptanalytic techniques could be useful in the physical understanding)A108 337 :M.217 .022(of nature [5].  \(See also the discussion on the "layers" of a message by Hofstadter)J108 361 :M-.024([5: 166-171].\))A108 409 :Mf0_12 sf.395 .039(3.2  Randomness and Data Compression)J144 433 :Mf3_12 sf.287 .029(One aspect of data is that it is often redundant, and so can be compressed.)J108 457 :Mf4_12 sf(Data compression)Sf3_12 sf-.002( finds and exploits patterns in the data to reduce the overall size;)A108 481 :M.816 .082(the result is a smaller, more random-like sequence. A "completely compressed")J108 505 :M2.655 .265(sequence presumably would have no patterns at all; it would thus appear)J108 529 :M.361 .036(completely random and would be difficult to perceive as intelligence, even under)J108 553 :M1.384 .138(intense analysis.  But a sequence intended to be later expanded probably will)J108 577 :M.39 .039(contain some amount of decidedly non-random information representing the data)J108 601 :M.143 .014(deleted during compression.  \(Data compression is a popular area of research, and)J108 625 :M.743 .074(includes work by Huffman [5], Lempel-Ziv [5], Ziv and Lempel [5], Storer and)J108 649 :M.715 .071(Szymanski [5], Langdon [5], Welch [5], Cormack and Horspool [5], Cleary and)J108 673 :M-.078(Witten [5], and Bell [5].\))Aendp%%Page: 6 6%%BeginPageSetupinitializepage(TARDIS; page: 6 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC347 46 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 6)J144 121 :Mf3_12 sf3.505 .35(Confusion sequences might also contain patterns which could be)J108 145 :M.251 .025(compressed.  But no expansion would be necessary, so there would need to be no)J108 169 :M-.084(expansion information in the result.)A144 193 :M1.025 .102(One definition of a random sequence is that it has a size approximately)J108 217 :M.248 .025(equal to its complexity.  )Jf4_12 sf.087(Complexity)Af3_12 sf.22 .022( is "the number of bits that must be put into a)J108 241 :M.615 .062(computing machine in order to obtain the original series as output" [6: 49].  But)J108 265 :M-.027(minimizing the number of bits is what data compression is all about.  Thus, we can)A108 289 :M.426 .043(obtain a )Jf4_12 sf.159(coarse)Af3_12 sf.616 .062( measure of complexity by actually compressing a sequence, and)J108 313 :M1.35 .135(noting the resulting size [6, 6].  \(Many measures and tests of randomness are)J108 337 :M.358 .036(available:  See Knuth [6: 38-113 \2443.3, 142-169 \2443.5], and also Massey [6], Yuen)J108 361 :M-.058([6], Marsaglia [6], Tezuka [6], Rueppel [6], and Feldman [6]\).)A108 409 :Mf0_12 sf.429 .043(3.3  Reasoning about Randomness)J144 433 :Mf3_12 sf2.429 .243(According to the interpretation of information as the non-redundant)J108 457 :M.332 .033(incompressible core of the data, it )Jf4_12 sf.128(may)Af3_12 sf.277 .028( be possible to show that a sequence is )Jf4_12 sf.147(not)A108 481 :Mf3_12 sf.518 .052(random \(by demonstrating a shorter sequence which can reproduce the original\),)J108 505 :M.556 .056(but it probably is )Jf4_12 sf.198(not)Af3_12 sf.647 .065( possible to show that a random sequence )Jf4_12 sf.155(is)Af3_12 sf.837 .084( random \(since)J108 529 :M.439 .044(this would correspond to proving that )Jf4_12 sf.599 .06(no possible algorithm)Jf3_12 sf.474 .047( could compress that)J108 553 :M-.036(sequence\).  Thus, proving that a sequence is non-random seemingly corresponds to)A108 577 :M-.051(the impossible task of "proving a negative" in an unbounded system.)A144 601 :M-.008(When we have only two possibilities \(A,B\), we may choose either to prove)A108 625 :M-.027(the positive \(A happened\) or the negative \(B did not happen\).  But when we have a)A108 649 :M1.097 .11(huge number of possibilities \(A,B,C,D,E,\311\) it quickly becomes impractical to)J108 673 :M1.347 .135(prove that )Jf4_12 sf.423(every)Af3_12 sf1.479 .148( alternative possibility did not happen.  When the number of)J108 697 :M.936 .094(possibilities is unbounded, such proof is clearly impossible.  But to state that a)Jendp%%Page: 7 7%%BeginPageSetupinitializepage(TARDIS; page: 7 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC347 46 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 7)J108 121 :Mf3_12 sf.4 .04(sequence contains no sub-pattern is seemingly to say that we have considered )Jf4_12 sf.133(all)A108 145 :M-.015(possible)Af3_12 sf-.014( sub-patterns and )Af4_12 sf-.014(all possible)Af3_12 sf-.013( relationships; clearly an impractical task.  \(If)A108 169 :M.27 .027(we did have a process which could identify )Jf4_12 sf.091(any)Af3_12 sf.307 .031( pattern or relationship, we would)J108 193 :M-.079(seem to have the makings of a "universal scientist" device.\))A144 217 :M.796 .08(Chaitin relates the understanding of randomness \(as a lack of pattern\) to)J108 241 :M1.084 .108(G\232del's incompleteness theorem [7, 7] \(within any formal axiomatic system of)J108 265 :M-.01(sufficient complexity, assertions exist which cannot be proven either true or false\).)A108 289 :M-.056(\(Perhaps the best introduction to G\232del is Hofstadter [7], except it is difficult to use)A108 313 :M.15 .015(as a reference.\)  There are various limitations which are inherent in logic systems,)J108 337 :M1.753 .175(but G\232del's result applies to almost all systems of reasoning and proof.  An)J108 361 :M-.026(intuitive reason for this sort of thing is that a formal system can be used to build an)A108 385 :M.503 .05(unbounded number of assertions.  But finding the correctness of some assertions)J108 409 :M-.027(may require the construction of an unbounded number of other assertions, which is)A108 433 :M-.034(clearly impossible [7: 72].  \(Normally, the biggest problems involve self-reference,)A108 457 :M.345 .035(which G\232del attacked by inventing a coding scheme to convert a statement about)J108 481 :M-.058(number theory into a number which could be operated upon inside number theory.\))A108 529 :Mf0_12 sf.215 .022(3.4  G\232del and Ciphers?)J144 553 :Mf3_12 sf-.056(It is probably dangerous to extend these ideas beyond formal systems, but it)A108 577 :M.117 .012(is certainly tempting to make a word-analogy with respect to ciphers:  Although it)J108 601 :M.054 .005(may be possible to show that a cipher is weak, it may )Jf4_12 sf.019(not)Af3_12 sf.058 .006( be possible to prove that)J108 625 :M2.016 .202(a cipher is strong \(since this would correspond to proving that )Jf4_12 sf3.174 .317(no possible)J108 649 :M.278(technique)Af3_12 sf.986 .099( could break the cipher\). \(Perhaps the sole exception applies to those)J108 673 :M.233 .023(ciphers which could reasonably be "deciphered" to produce )Jf4_12 sf.302 .03(any possible)Jf3_12 sf.286 .029( message)Jendp%%Page: 8 8%%BeginPageSetupinitializepage(TARDIS; page: 8 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC347 46 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 8)J108 121 :Mf3_12 sf.057 .006([8, 8]; here the issue would not be the ability to recover )Jf4_12 sf(a)Sf3_12 sf.069 .007( message, but, rather, the)J108 145 :M-.066(inability to know )Af4_12 sf-.08(which)Af3_12 sf-.069( of all possible messages was intended.\))A144 169 :M.187 .019(Since a similar word-analogy would seem to apply to RNG's, it is difficult)J108 193 :M-.059(to imagine how an RNG could possibly be )Af4_12 sf-.063(proven)Af3_12 sf-.045( to resist )Af4_12 sf-.055(every possible)Af3_12 sf-.049( attack.  It)A108 217 :M.781 .078(is not clear that there is an exception for special types of RNG; we simply may)J108 241 :M-.064(have to make do with RNG's designed to resist every )Af4_12 sf-.081(known)Af3_12 sf-.06( class of attack.)A144 265 :M1.869 .187(By this line of reasoning, a deep proof of the "unpredictability" of a)J108 289 :M-.04(deterministic sequence would seem to be at odds with the definition of randomness)A108 313 :M.17 .017(as a lack of )Jf4_12 sf.091(any)Af3_12 sf.249 .025( pattern or relationship.  This result )Jf4_12 sf.09(seems)Af3_12 sf.241 .024( reasonable, but it is not)J108 337 :M-.136(clear to me whether it is actually )Af4_12 sf-.144(valid)Af3_12 sf(.)S108 385 :Mf0_12 sf.117 .012(3.5  Characteristics of Computer-Based RNG'S)J144 409 :Mf3_12 sf.672 .067(Although many RNG techniques were apparently developed from a real-)J108 433 :M1.783 .178(number mathematical base, within a computer )Jf4_12 sf.428(every)Af3_12 sf1.298 .13( RNG is a discrete logic)J108 457 :M-.025(mechanism, a )Af4_12 sf-.022(finite state machine)Af3_12 sf-.023( \(FSM\) [e.g., 8, 8] functioning step-by-step.  The)A108 481 :M-.051(consequence of such discreteness is an inherent regularity in a mechanism intended)A108 505 :M-.004(to display "randomness.")A144 529 :M-.01(Most computer RNG's are iterative mechanisms; they take some amount of)A108 553 :M.018 .002(stored data or )Jf4_12 sf(state)Sf3_12 sf.018 .002(, transform it into a new value, and output part or all of the new)J108 577 :M.053 .005(data as a "random" number.  Clearly, the result is )Jf4_12 sf.016(deterministic)Af3_12 sf.033 .003(, and so is )Jf4_12 sf.02(anything)A108 601 :M.312(but)Af3_12 sf1.066 .107( random; given the stored data and the transform equation, the next state is)J108 625 :Mf4_12 sf.392(absolutely)Af3_12 sf1.52 .152( predictable.  However, absent knowledge of the internal state, the)J108 649 :M-.042(external results may )Af4_12 sf-.05(appear)Af3_12 sf-.042( to be random.  Such a sequence is often called )Af4_12 sf-.05(pseudo)Af3_12 sf(-)S108 673 :M.771 .077(random, and has the advantage that the identical sequence can be reproduced at)J108 697 :M-.081(another place or time, given the only the stored data and the transformation process.)Aendp%%Page: 9 9%%BeginPageSetupinitializepage(TARDIS; page: 9 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC347 46 :Mf0_12 sf.146 .015(Ritter -- Cryptographic RNG'sPage 9)J108 121 :Mf3_12 sf.824 .082(For cryptographic purposes, it is often possible to develop the state for the first)J108 145 :M1 .1(RNG operation from a keyword or key phrase; this allows a user to generate a)J108 169 :M-.01(generally unique, seemingly-random sequence corresponding to each arbitrary key)A108 193 :M-.183(selection.)A144 217 :M2.095 .21(It is important to remember that digital computers can perform only)J108 241 :Mf4_12 sf-.018(discrete)Af3_12 sf-.019( computations; there is no way of reproducing the mathematical concept of)A108 265 :M1.937 .194(continuous "real" values within such a machine.  Computer "floating point")J108 289 :M.867 .087(numbers generally are fine replacements for mathematical "reals," but there are)J108 313 :M.867 .087(only so many floating point values, and such computations often imply a result)J108 337 :M.797 .08(which is not exactly representable as floating point.  A random-number scheme)J108 361 :M.345 .034(based on continuous mathematical values may not provide acceptable results in a)J108 385 :M1.664 .166(computer environment.  Because floating-point implementations vary, such a)J108 409 :M-.058(scheme may not even provide the same results in different machines.)A108 457 :Mf0_12 sf.111 .011(3.6  Number of Sequences)J144 481 :Mf3_12 sf.41 .041(Within an RNG mechanism there is a given amount of internal state data,)J108 505 :M.497 .05(say k bits, and the output value is some function of that state; such a mechanism)J108 529 :M.123 .012(can produce, at most, only 2)J0 -3 rm(k)S0 3 rm.136 .014( different output values.  For any deterministic RNG)J108 553 :M-.063(mechanism, linear or non-linear, each particular internal state will )Af4_12 sf-.064(transition)Af3_12 sf-.055( or )Af4_12 sf-.088(step)A108 577 :Mf3_12 sf-.119(to one and only one particular succeeding state. Thus, whenever a particular state re-)A108 601 :M2.674 .267(occurs, all subsequent states must also re-occur, in order; this is a direct)J108 625 :M.434 .043(consequence of the deterministic nature of the mechanism, and is independent of)J108 649 :M-.112(the "linearity" of the next-state transformation.)A144 673 :M.583 .058(The maximum number of states possible in k bits is exactly 2)J0 -3 rm.202(k)A0 3 rm.394 .039(, so this is)J108 697 :M1.222 .122(the maximum possible sequence length before repetition.  If an RNG state re-)Jendp%%Page: 10 10%%BeginPageSetupinitializepage(TARDIS; page: 10 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 10)J108 123 :Mf3_12 sf.99 .099(occurs after exactly 2)J0 -3 rm.3(k)A0 3 rm.707 .071( steps, here we call the RNG )Jf4_12 sf.238(perfect)Af3_12 sf.805 .08(.  \(The formation of)J108 147 :M-.056(repetitive cycles in continuous systems is the job of an )Af4_12 sf-.056(oscillator)Af3_12 sf-.058(, for which there is)A108 171 :M.062 .006(extensive theory; perhaps a related theory could be developed for discrete systems)J108 195 :M-.013(like RNG's.\))A144 219 :M-.093(Since each particular state implies a particular next state, every perfect RNG)A108 243 :M-.089(generates exactly )Af4_12 sf-.107(one)Af3_12 sf-.092( sequence containing )Af4_12 sf-.078(all)Af3_12 sf-.088( possible states \(that is, a perfect RNG)A108 267 :M1.529 .153(generates a )Jf4_12 sf.461(permutation)Af3_12 sf1.321 .132( of the possible states\).  The fact that a perfect RNG)J108 291 :M.935 .094(generates just one sequence is important, for a cryptographic RNG is generally)J108 315 :M.264 .026(initialized in an arbitrary state as some function of an arbitrary user key.  If every)J108 339 :M2.931 .293(possible state value is included in the RNG sequence, then any possible)J108 363 :M.389 .039(initialization of the state data is part of the perfect sequence.  Indeed, in this case)J108 387 :M.35 .035(initialization is equivalent to starting the RNG at a different part of the sequence,)J108 411 :M.966 .097(and this is a logical consequence of the deterministic nature of the system.  Of)J108 435 :M.249 .025(course, even with a perfect RNG there can be only 2)J0 -3 rm.09(k)A0 3 rm.336 .034( different starting positions,)J108 459 :M-.077(and, thus, only 2)A0 -3 rm-.098(k)A0 3 rm-.078( even )Af4_12 sf-.085(apparently)Af3_12 sf-.081( different output sequences.)A108 507 :Mf0_12 sf-.032(3.7  Cycles)A144 531 :Mf3_12 sf-.007(For our purposes, a sequence of states in state-space is a )Af4_12 sf(path)Sf3_12 sf( or )Sf4_12 sf-.007(trajectory)Af3_12 sf(;)S108 555 :M-.072(a path which repeats endlessly is a )Af4_12 sf-.075(cycle)Af3_12 sf-.069(; path which does not repeat itself is an )Af4_12 sf-.082(arc)Af3_12 sf(.)S108 579 :M-.036(Here it is convenient to define that every state which is not part of a cycle is part of)A108 603 :M1.593 .159(an arc, and we know that every arc inevitably connects to, or )Jf4_12 sf.46(joins)Af3_12 sf1.448 .145(, a cycle.)J108 627 :M.638 .064(\(Suppose not: then an acyclic arc will run out of states, but the last unused state)J108 651 :M-.068(must step to )Af4_12 sf-.09(some)Af3_12 sf-.069( other state, which will have already been used, and is thus part of)A108 675 :M.471 .047(a cycle.\)  An arc may join another arc, which joins another arc, and so on, in the)J108 699 :M1.856 .186(form of a sub-tree, or )Jf4_12 sf.729(branch)Af3_12 sf2.178 .218(, but within a finite state-space any arc must)Jendp%%Page: 11 11%%BeginPageSetupinitializepage(TARDIS; page: 11 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 11)J108 121 :Mf3_12 sf.443 .044(eventually join a cycle, even if only a single-state )Jf4_12 sf.14(degenerate)Af3_12 sf.346 .035( cycle.  Note that if)J108 145 :M.715 .072(branches occur, they are necessarily "narrowing" branches \(joins\) as opposed to)J108 169 :M.229 .023("expanding" branches; a state cannot have multiple next states, unless affected by)J108 193 :M-.023(something outside the system.)A144 217 :M.683 .068(Most RNG's fail to achieve a perfect sequence length; such systems thus)J108 241 :M.419 .042(include various possibilities of multiple independent paths of arcs and cycles.  In)J108 265 :M-.052(general, short cycles are possible, perhaps even likely.  But the actual use of a short)A108 289 :M1.206 .121(cycle could be a cryptographic disaster, for such a sequence would be easy to)J108 313 :M.973 .097(cryptanalyze [11].  \(Also see Johnsen and Kjeldsen [11]\).  For cryptography, a)J108 337 :M1.213 .121(sequence might be considered "long enough" if it would not repeat during the)J108 361 :M2.681 .268(longest message or session, )Jf4_12 sf.81(and)Af3_12 sf2.673 .267( would be extremely unlikely to re-occur)J108 385 :M-.079(throughout all use by all fielded systems over all of time.)A144 409 :M.777 .078(If an RNG supports multiple cycles of different length, then an arbitrary)J108 433 :M.813 .081(initialization may well start the RNG within a "shorter" cycle.  This means that)J108 457 :M.395 .04(some user keys may be "better" than others; unfortunately, the user is unlikely to)J108 481 :M1.067 .107(know the difference, and so may pick a "less-secure" key. Normally, the RNG)J108 505 :M-.013(designer must )Af4_12 sf-.014(guarantee)Af3_12 sf-.013( that the minimum possible cycle length is "long enough,")A108 529 :M.115 .011(and will be unable to do this experimentally for a system of useful size.  Thus, the)J108 553 :M1.845 .184(RNG design will generally )Jf4_12 sf.466(require)Af3_12 sf1.623 .162( a useful theory of operation, including a)J108 577 :M2.517 .252(guarantee of minimum cycle length. Moreover, if the design supports any)J108 601 :M-.08(degenerate cycles, the designer must also guarantee that the system is not initialized)A108 625 :Mf4_12 sf(in)Sf3_12 sf-.005( a degenerate cycle, )Af4_12 sf(or)Sf3_12 sf-.005( on any reasonably-short arc )Af4_12 sf-.006(leading to)Af3_12 sf-.006( a degenerate cycle)A108 649 :M-.093(\(or give the system the ability to detect such a cycle at run time\).  Such initialization)A108 673 :M1.13 .113(guarantees are not available in many RNG designs, and may imply substantial)J108 697 :M-.143(overhead when they are available.)Aendp%%Page: 12 12%%BeginPageSetupinitializepage(TARDIS; page: 12 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 12)J108 145 :M.108 .011(3.8  Some Potential Attacks)J144 169 :Mf3_12 sf.213 .021(Normally, a cryptanalyst attacks an entire cipher, and the first part of such)J108 193 :M-.026(an attack on a stream cipher may be a penetration of the combiner; the analyst then)A108 217 :M2 .2(confronts the confusion sequence directly.  Consequently, the cryptographic)J108 241 :M.41 .041(designer must be concerned with the resistance of the RNG when the analyst has)J108 265 :M-.067(the sequence at the combiner \(this may not be the direct output of the RNG\).  There)A108 289 :M.503 .05(seem to be three main categories of attack on an RNG: repetition, inference, and)J108 313 :M-.148(brute force:)A144 337 :Mf0_12 sf.234(Repetition)Af3_12 sf.86 .086( involves the search for plaintext fragments which have been)J108 361 :M-.035(enciphered with the same confusion sequence.  The properties of the usual additive)A108 385 :M1.226 .123(combiner allow a repeated sequence to be eliminated; the result is an additive)J108 409 :M.648 .065(combination of two plaintext language messages, which should be fairly easy to)J108 433 :M-.163(decipher.)A144 457 :M1.557 .156(In practice, it may not be possible to externally identify the start of a)J108 481 :M-.088(particular RNG sequence, and attempting such an attack on every character position)A108 505 :M.313 .031(of every message combined with every character position of every other message)J108 529 :M-.063(seems like a very big job.  Nevertheless, to some extent this may be automated, and)A108 553 :M.096 .01(has the advantage that it can be applied to )Jf4_12 sf.036(any)Af3_12 sf.131 .013( confusion sequence, no matter how)J108 577 :M1.928 .193(complex or "unpredictable" the generating mechanism.  It is unnecessary to)J108 601 :M-.089("predict" an RNG sequence, if it will repeat soon.)A144 625 :Mf0_12 sf-.037(Inference)Af3_12 sf-.033( is the standard intellectual attack we usually associate with RNG)A108 649 :M-.025(penetration.  Given an understanding of the RNG mechanism, and some amount of)A108 673 :M1.436 .144(the sequence, the content of the RNG is refined until it is fully known.  One)J108 697 :M1.71 .171(approach would be to develop a set of simultaneous equations, which, when)Jendp%%Page: 13 13%%BeginPageSetupinitializepage(TARDIS; page: 13 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 13)J108 121 :Mf3_12 sf.988 .099(satisfied, define the RNG state completely.  These equations do not have to be)J108 145 :M.321 .032(linear.  Although the solution to the general case of simultaneous non-linear real-)J108 169 :M.009 .001(value equations may be difficult, the particular case of non-linear binary equations)J108 193 :M-.047(\(e.g., AND, OR\) can actually )Af4_12 sf-.049(support)Af3_12 sf-.046( cryptanalysis [13].)A144 217 :M.005 0(Should it ever become possible to partition or select only those RNG states)J108 241 :M1.555 .155(which provide a particular output value, and then select from those a similar)J108 265 :M.098 .01(fraction which match the next output value, an RNG can be broken quickly.  Each)J108 289 :M.062 .006(bit of RNG output might discard fully half of the potential states, so that a number)J108 313 :M.58 .058(of output bits equivalent to the number of RNG state bits should be sufficient to)J108 337 :M.353 .035(fully define the RNG.  The problem, of course, lies in finding a selection process)J108 361 :M-.049(which avoids actually having to store each and every RNG state, and compute each)A108 385 :M.071 .007(next state, since an actual cryptographic RNG would be large enough to make this)J108 409 :M-.05(impossible.  \(A probabilistic approach is given in Anderson [13].\))A144 433 :Mf0_12 sf2.297 .23(Brute Force)Jf3_12 sf1.366 .137( is another method which is always applicable, and if the)J108 457 :M2.06 .206(analyst is very lucky, just might turn up the answer, even if this would be)J108 481 :M.493 .049(statistically unlikely.  One approach would simply be to step an equivalent RNG)J108 505 :M.359 .036(through its possible states until the reproduced sequence matches the known one.)J108 529 :M.039 .004(Usually, the system designer will have arranged to make the RNG large enough to)J108 553 :M1.623 .162(make such an attack impractical, although brute force can also be efficiently)J108 577 :M-.049(automated, to some unknown extent.)A144 601 :M.115 .012(Brute force may also be used along with other results, and so be much less)J108 625 :M.774 .077(impractical than it may at first appear.  For example, suppose most of the RNG)J108 649 :M-.074(state is known \(or guessed\); brute force can then be applied to find only the missing)A108 673 :M-.067(information, which may be a far easier task.)Aendp%%Page: 14 14%%BeginPageSetupinitializepage(TARDIS; page: 14 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 14)J108 145 :M.071 .007(3.9  Inference Resistance by Exposure Class)J144 169 :Mf3_12 sf1.095 .109(It is desirable to maximize the resistance of an RNG design to external)J108 193 :M.824 .082(attack; I use the concept of )Jf4_12 sf1.627 .163(exposure class)Jf3_12 sf.915 .091( to help describe a modest degree of)J108 217 :M-.083(resistance, and define various exposure classes:)A144 241 :Mf0_12 sf.336 .034(Class A:  The output value is the entire internal state.)Jf3_12 sf.35 .035(  The knowledge)J108 265 :M1.227 .123(of the precise internal design plus )Jf4_12 sf1.497 .15(just one)Jf3_12 sf1.288 .129( RNG value should be sufficient to)J108 289 :M1.341 .134(penetrate such a system.  Even with only a general knowledge of the internal)J108 313 :M.614 .061(design, a few steps of the entire internal state should be enough to pin down the)J108 337 :M.951 .095(system precisely.  Secrecy is not an issue for statistical use, and most common)J108 361 :M-.027(computer language RNG's are "Class A" mechanisms for statistics.  Obviously, the)A108 385 :M-.071(cryptographic use of this sort of RNG, without added protection, is not a good idea.)A144 409 :Mf0_12 sf.004 0(Class B:  The output value constitutes the entire )Jf6_12 sf(change)Sf0_12 sf( in the internal)S108 433 :M.099 .01(state \(although the change is a proper subset of the total state\).)Jf3_12 sf.092 .009( In many cases,)J108 457 :M.165 .016(a sufficient sequence of output values will eventually define the complete internal)J108 481 :M.283 .028(state, thus eventually making the system as vulnerable as "Class\312A."  Again, such)J108 505 :M-.074(an RNG design needs additional protection for use in a cryptographic system.)A144 529 :Mf0_12 sf.806 .081(Class C:  The output value is a proper subset of the state change.)Jf3_12 sf.517 .052( In)J108 553 :M-.051(this case, a knowledge of the output sequence will disclose only partial information)A108 577 :M-.019(about the internal state.  Alone, this may not provide much added protection, but is)A108 601 :M.185 .018(nevertheless an improvement over no protection, as provided by "Class A," or the)J108 625 :M-.008(simple minimum sequence requirement of "Class B.")A108 673 :Mf0_12 sf.144 .014(3.10  Information and Penetration)Jendp%%Page: 15 15%%BeginPageSetupinitializepage(TARDIS; page: 15 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 15)J144 121 :Mf3_12 sf.42 .042(An RNG has some amount of internal state; some function of that state is)J108 145 :M1.22 .122(produced as output.  Seemingly, each output bit must deliver )Jf4_12 sf.411(some)Af3_12 sf1.196 .12( amount of)J108 169 :M.156 .016(information about the content of the RNG, and so eventually the total information)J108 193 :M-.039(should be enough to penetrate the system.  Purely from an information perspective,)A108 217 :M-.047(one definition of a well-designed RNG might be that it cannot be penetrated )Af4_12 sf-.061(by any)A108 241 :M-.042(technique whatsoever)Af3_12 sf-.038( until the analyst has at least as much output as the total RNG)A108 265 :M.007 .001(internal state.  \(This certainly seems like a familiar idea:  Could it be reasonable to)J108 289 :M.473 .047(have a sort of "unicity distance" [e.g., 15; 15: 607-648, 728-740] for an arbitrary)J108 313 :M(RNG design?\))S144 337 :M.748 .075(Alas, when the RNG is used to produce )Jf4_12 sf.282(more)Af3_12 sf.659 .066( output than the total of its)J108 361 :M.738 .074(internal state, things seem considerably less certain.  Any RNG which produces)J108 385 :M.336 .034(more output than some constant factor of its internal state is probably in the hazy)J108 409 :M1.382 .138(twilight world of having revealed itself sufficiently for solution, if only some)J108 433 :M.359 .036(efficient procedure could be found to do it. Although we can perhaps analyze the)J108 457 :M-.035(strength of an RNG with respect to a )Af4_12 sf-.035(particular)Af3_12 sf-.033( attack, it seems rather unlikely that)A108 481 :M-.084(analysis could address )Af4_12 sf-.087(any possible)Af3_12 sf-.087( attack.)A144 505 :M.978 .098(For example, even if the output carries )Jf4_12 sf1.221 .122(absolutely no information at all)J108 529 :Mf3_12 sf1.935 .194(about the RNG state, the sequence must nevertheless repeat eventually, and)J108 553 :M.292 .029(becomes vulnerable at the point of repetition.  This approach does not require the)J108 577 :M-.06(RNG to reveal itself; and since this approach obviously exists, the question is: "Is it)A108 601 :M.149 .015(the only such approach?"  It does seem clearly unreasonable that )Jf4_12 sf.048(any)Af3_12 sf.126 .013( sort of RNG)J108 625 :M.681 .068(could produce pseudo-random output )Jf4_12 sf.138(forever)Af3_12 sf.495 .049( without limit and yet always resist)J108 649 :M-.179(penetration.)A108 697 :Mf0_12 sf-.019(3.11  Inference versus Prediction)Aendp%%Page: 16 16%%BeginPageSetupinitializepage(TARDIS; page: 16 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 16)J144 121 :Mf3_12 sf.232 .023(The ability to infer some part of the content of a system is not the same as)J108 145 :M.883 .088(the ability to predict the output.  One way to clarify this is to examine how we)J108 169 :M-.039(might attack a few simple systems:)A144 193 :M.006 .001(Consider a simple counter, of which the least significant bit \(lsb\) is used as)J108 217 :M-.078(output.  Obviously, no external analysis of any sort could be expected to resolve the)A108 241 :M.437 .044(full state of the counter, since the lsb does not depend on the other bits.  But this)J108 265 :M.577 .058(would scarcely hinder our prediction of the next output value, for the lsb simply)J108 289 :M-.197(alternates.)A144 313 :M1.309 .131(Now consider the same counter, this time with the most significant bit)J108 337 :M.78 .078(\(msb\) as output.  Apparently, examination of that bit would reduce the possible)J108 361 :M-.08(internal states by half, but only once; subsequent bits would provide little additional)A108 385 :M.134 .013(information until the msb actually changed.  Of course, when the msb did change,)J108 409 :M.778 .078(it would completely resolve the counter state, for at this time it depends upon a)J108 433 :M1.135 .114(particular state of all lower bits. Again, our understanding of the internal state)J108 457 :M-.018(would have little effect on our ability to predict the output, since the msb generally)A108 481 :M-.087(does not change.)A144 505 :M.316 .032(A better situation for analysis, but worse for prediction, would seem to be)J108 529 :M.506 .051(an output bit which always depends on the entire internal state, and in which the)J108 553 :M.474 .047(internal state changes in a pseudo-random fashion.  By examining the output bit,)J108 577 :M-.067(we are able to reject half of the possible states on each step:  We at first assume any)A108 601 :M.472 .047(possible internal state, but about half of those states will be inconsistent with the)J108 625 :M.205 .02(first output.  Then we step each of the remaining possible states to its logical next)J108 649 :M.06 .006(state, and again find that we can reject about half of those with the next output bit.)J108 673 :M.169 .017(Consequently, a definite resolution of the internal state should be fairly quick, but)J108 697 :M-.099(until we have such a resolution, we may well be unable to predict the output.)Aendp%%Page: 17 17%%BeginPageSetupinitializepage(TARDIS; page: 17 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 17)J144 121 :Mf3_12 sf1.104 .11(Thus, the inability to predict the next output value does not necessarily)J108 145 :M-.023(prevent us from eventually resolving the complete internal state, which would then)A108 169 :M1.179 .118(allow computation of all subsequent values.  It is unnecessary to "predict" the)J108 193 :M-.091(output, if you can compute it.)A108 241 :Mf0_12 sf.185 .019(3.12  Cryptographic RNG Requirements)J144 265 :Mf3_12 sf.246 .025(In order to compare different RNG's it is necessary to have some basis for)J108 289 :M1.588 .159(comparison, and I have selected some attributes which seem most important.)J108 313 :M-.041(From a design point of view, a cryptographic RNG should:)A144 337 :Mf0_12 sf-.07(1.  allow arbitrary initialization)Af3_12 sf-.073(, to support unbiased keys;)A144 361 :Mf0_12 sf.863 .086(2.  have a guaranteed long sequence)Jf3_12 sf.992 .099(, to make repetition \(coincidence\))J144 385 :M-.19(attacks impractical;)A144 409 :Mf0_12 sf2.126 .213(3.  be easy to customize)Jf3_12 sf2.338 .234(, so that different users can have different)J144 433 :M-.079(sequences when using exactly the same key;)A144 457 :Mf0_12 sf(4.  be fast)Sf3_12 sf-.004(, for an unused system is . . . , well . . . , useless;)A144 481 :Mf0_12 sf-.02(5.  be difficult to analyze)Af3_12 sf-.02(, since analysis could penetrate the cryptographic)A144 505 :M.53 .053(system \(although we may be able to improve this with a separate isolator)J144 529 :M-.02(mechanism\); and,)A144 553 :Mf0_12 sf.06 .006(6.  produce a good distribution of values)Jf3_12 sf(.)S108 601 :M-.057(The statistical properties of the RNG, which are the main requirement for statistical)A108 625 :M.664 .066(use, may be less important for cryptography; we assume that a cryptanalyst will)J108 649 :M-.002(already have a deep understanding of the mechanism itself, and so will not have to)A108 673 :M.141 .014(infer its structure from the statistics of the sequence.  This is just as well, for most)J108 697 :M.552 .055(cryptographic RNG's are used over only tiny portions of their sequences, yet the)Jendp%%Page: 18 18%%BeginPageSetupinitializepage(TARDIS; page: 18 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 18)J108 121 :Mf3_12 sf-.131(statistical descriptions of their sequences \(if any\) are generally restricted to the entire)A108 145 :M-.121(sequence.)A108 217 :Mf0_12 sf1.204 .12(4. RNG TECHNIQUES)J144 241 :Mf3_12 sf.365 .036(There are many different techniques for the production of pseudo-random)J108 265 :M1.019 .102(sequences.  Techniques of particular interest, and which will be covered in the)J108 289 :M-.159(indicated sections, include:)A144 313 :M-.08(4.1  Chaos, or non-linear dynamical equations;)A144 337 :M-.059(4.2  Cebysev Mixing, used in computational physics;)A144 361 :M-.075(4.3  Cellular Automata, a sort of 1-dimensional "Life";)A144 385 :M-.054(4.4  x)A0 -3 rm-.071(2)A0 3 rmcF f1_12 sf-.059(9)Asf-.059(mod)AcF f1_12 sf-.059(9)Asf-.059(N, said to be "unpredictable";)A144 409 :M-.053(4.5  Linear Congruential, the common computer RNG;)A144 433 :M.88 .088(4.6  Linear Feedback Shift Register \(LFSR\), which produces an almost-)J108 457 :M-.135(perfect sequence, but is easily inferred externally;)A144 481 :M2.016 .202(4.7  Non-Linear Shift Register, perhaps more opaque than the linear)J108 505 :M-.08(version, but also more difficult to customize;)A144 529 :M.39 .039(4.8  Clock-Controlled Shift Registers, which are systems of multiple shift)J108 553 :M-.093(registers with clock enable or disable signals, and combined output;)A144 577 :M3.722 .372(4.9  Generalized Feedback Shift Register \(GFSR\), which allows)J108 601 :M-.092(customized element width, shift-register height, and polynomial; and the)A144 625 :M2.148 .215(4.10  Additive RNG, which is easier to initialize than a GFSR, and)J108 649 :M-.06(produces a longer sequence than a GFSR of similar size.)A108 697 :Mf0_12 sf.344 .034(4.1  Chaos)Jendp%%Page: 19 19%%BeginPageSetupinitializepage(TARDIS; page: 19 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 19)J144 121 :Mf3_12 sf.814 .081(One of the most exciting new areas in mathematics is the exploration of)J108 145 :M(non-linear dynamics, or "chaos."  Various popular books [e.g., 19] are available as)S108 169 :M2.103 .21(overviews; Rietman [19] and Beker and Dorfler [19] are computer-oriented)J108 193 :M.127 .013(introductions, Nicolis and Prigogine [19] is a serious introduction, Rasband [19] a)J108 217 :M1.094 .109(math text, and Pickover [19] shows the development of chaos in mathematical)J108 241 :M(networks.)S144 265 :M-.007(Chaos can be used to produce complex and interesting graphic images, and)A108 289 :M.754 .075(can be appreciated at that level.  But chaos is particularly exciting in the way it)J108 313 :M.678 .068(reveals that incredibly complex systems are defined by very simple, even trivial)J108 337 :M-.089(equations, for example:)A223 383 :M(x)S0 3 rm.036(n+1)A0 -3 rmcF f1_12 sf.032(9)Asf.032(=)AcF f1_12 sf.032(9)Asf.032(Ax)A0 3 rm(n)S0 -3 rm.058 .006(\(1 - x)J0 3 rm(n)S0 -3 rm.099 .01(\), with 0<x)J0 3 rm(n)S0 -3 rm.046(<1.)A108 433 :M-.044(To those of us conditioned to "solve" fairly complicated systems, this at first seems)A108 457 :M.172 .017(to be an exceedingly dull equation.  Certainly, if the left-hand-side were "y," little)J108 479 :M1.401 .14(would remain to be said.  But since the left-hand-side is "x)J0 3 rm.529(n+1)A0 -3 rm1.307 .131(," we have an)J108 505 :Mf4_12 sf.133(iterative)Af3_12 sf.482 .048( equation, and this makes all the difference.  It is the sequence of values)J108 529 :M-.071(produced by repeatedly applying the equation which forms the complex system and)A108 553 :M-.114(chaos.  \(The repeated application of a function is also central to group theory.\))A144 577 :M3.06 .306(The insight that even very simple iterative equations can produce)J108 601 :M.781 .078(exceedingly complex sequences should be a warning to us, since )Jf4_12 sf.23(most)Af3_12 sf.338 .034( if not )Jf4_12 sf.257(all)A108 625 :Mf3_12 sf1.438 .144(RNG systems are iterative.  But just because a system is complex for certain)J108 649 :M-.027(starting values does not mean that the same system will necessarily be complex for)A108 673 :M-.08(any particular starting value; this is one of the fascinations of chaos.  Matthews [19])Aendp%%Page: 20 20%%BeginPageSetupinitializepage(TARDIS; page: 20 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 20)J108 121 :Mf3_12 sf.145 .015(generalizes the simpler equation and, with cryptographic constraints, develops the)J108 145 :M-.11(following:)A185 193 :M.142 .014(g\(x\) = \(\247+1\)\(1+1/\247\))J0 -3 rm(\247)S0 3 rm.029(x\(1-x\))A0 -3 rm(\247)S0 3 rm.12 .012(, with 1)JcF f1_12 sf.012(\230)Asf.12 .012(\247)JcF f1_12 sf.012(\230)Asf.12 .012(4, 0<x<1.)J108 241 :M.574 .057(Only a subset of each result is used as the random value; Matthews uses the last)J108 265 :M1.062 .106(two decimal digits.  Wheeler [20] describes some results from the system, and)J108 289 :M-.087(Mitchell [20] re-directs the design toward one-way functions.)A144 313 :M2.988 .299(Although nonlinear dynamical equations seem to imply essentially)J108 337 :M.257 .026(continuous real values, when implemented on a computer such equations must be)J108 361 :M-.051(just another discrete system with a finite state-space.  Such systems obviously must)A108 385 :M-.016(have some maximum sequence length, and may well have many independent short)A108 409 :M1.141 .114(cycles.  There would currently seem to be no theoretical insight into sequence)J108 433 :M-.088(length for chaos equations.)A144 457 :M1.168 .117(The study of chaos was triggered by the discovery of ways to find and)J108 481 :M.952 .095(analyze order present in an apparently chaotic result; ironically, the analysis of)J108 505 :M.704 .07(apparently chaotic results is precisely what we wish to )Jf4_12 sf.207(avoid)Af3_12 sf.731 .073( in a cryptographic)J108 529 :M.8 .08(RNG.  Of course, a )Jf4_12 sf.273(theoretical)Af3_12 sf1.056 .106( analysis is common with other RNG's to avoid)J108 553 :M-.06(dangerous short cycles \(although we have no such results here\).  But until we know)A108 577 :M.042 .004(the limits of external analysis using chaos experimental techniques, we might well)J108 601 :M-.09(wonder whether chaotic RNG's are "inherently tainted" for cryptographic use.)A144 625 :M.295 .03(Because chaos equations generally imply floating point evaluation, such a)J108 649 :M2.008 .201(sequence is likely to differ on various types of computer or calculator, and)J108 673 :M.246 .025(computation time is likely to be substantial.  Matthews' equation seems to require)Jendp%%Page: 21 21%%BeginPageSetupinitializepage(TARDIS; page: 21 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 21)J108 121 :Mf3_12 sf-.002(three transcendental evaluations for each pseudo-random result; this is a great deal)A108 145 :M-.005(more computation than most RNG mechanisms require.)A108 193 :Mf0_12 sf.142 .014(4.2  Cebysev Mixing)J144 217 :Mf3_12 sf.112 .011(Another floating-point iteration \(and perhaps related to chaos\) comes from)J108 241 :M1.105 .11("computational physics."  Apparently, very long pseudo-random sequences are)J108 265 :M-.066(used to simulate physical reality on a molecular level. Moreover, the results of such)A108 289 :M1.534 .153(a simulation would have the refreshing consequence of detailed experimental)J108 313 :M-.192(verification.)A144 337 :M1.908 .191(One such mechanism, championed by Erber [21, 21], is the Cebysev)J108 361 :M.051 .005("mixing" polynomial \(a similar term, "mixing transformation," has been attributed)J108 385 :M-.087(to probability theory [21: 711]\), for example:)A199 431 :M(Z)S0 3 rm-.023(n+1)A0 -3 rmcF f1_12 sf-.018(9)Asf-.018(=)AcF f1_12 sf-.018(9)Asf-.018(\(Z)A0 3 rm(n)S0 -3 rm(\))S0 -3 rm(2)S0 3 rmcF f1_12 sf-.016(9)Asf-.016(-)AcF f1_12 sf-.016(9)Asf-.016(2, on the interval [-2, 2], and)A207 455 :M.103 .01(output = \(4/Pi\) ARCCOS\(Z)J0 3 rm.026(n+1)A0 -3 rm.047 .005(/2\) - 2, or)J165 479 :M-.073(output = Z)A0 3 rm-.09(n+1)A0 -3 rm-.068( without the most-significant fractional n bits)A108 529 :M.261 .026(Erber's extensive analysis of this simple iterative formula seems to be a statistical)J108 553 :M.007 .001(education in itself.  Nevertheless, it is quickly obvious that some particular precise)J108 575 :M.395 .04(values for Z)J0 3 rm.131(n)A0 -3 rm.318 .032( must be avoided \(e.g., -2, -1, 0, 1, 2\); with a non-integral seed, it is)J108 601 :M1.445 .144(expected that these values will "never" be encountered.  \(Such hopes may be)J108 625 :M.74 .074(unacceptable in cryptographic service, unless a mechanism is included to detect)J108 649 :M.244 .024(such an occurrence.\)  Eventually, floating-point "roundoff" and other errors come)J108 673 :M-.057(to dominate the computation, and this particular scheme is found to remain "stable")A108 697 :M.304 .03(\(that is, pseudo-random\) under those conditions.  A system with 12-decimal-digit)Jendp%%Page: 22 22%%BeginPageSetupinitializepage(TARDIS; page: 22 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 22)J108 123 :Mf3_12 sf.844 .084(math seems to provide arc lengths and terminating cycle periods of around 10)J0 -3 rm(5)S0 3 rm108 147 :M(steps.)S144 171 :M.196 .02(Unfortunately, several investigators have found Cebysev mixing RNG's to)J108 195 :M.38 .038(perform rather poorly.  Hosack [22] gives it the advantage of being "amenable to)J108 219 :M.756 .076(theoretical analysis," but recommends that "because of its strong correlations, it)J108 243 :M.198 .02(should be used with caution."  Wikramaratna [22] is even more discouraging, and)J108 267 :M2.887 .289(says that Cebysev mixing "possesses undesirable qualities which make it)J108 291 :M-.02(unsuitable as a source of random numbers.")A144 315 :M.261 .026(The common form of Cebysev mixing displays its complete internal state,)J108 339 :M.508 .051(and thus is "Class A"-exposed in cryptographic service, and so needs some form)J108 363 :M1.654 .165(of isolation.  Cebysev mixing also seems to require floating point arithmetic)J108 387 :M.623 .062(\(although a sort of scaled-integer form should be possible\).  The single multiply)J108 411 :M1.039 .104(and subtract are just about the minimum possible iterative computation, but an)J108 435 :M1.181 .118(integer-math RNG would still probably be faster. Moreover, the floating point)J108 459 :M-.022(requirement generally causes different sequences to be produced on different types)A108 483 :M-.064(of machine.)A108 531 :Mf0_12 sf-.014(4.3  Cellular Automata)A144 555 :Mf3_12 sf2.803 .28(Another new RNG approach is Wolfram's [22] "cellular automata")J108 579 :M2.513 .251(generator.  The field of cellular automata \(CA\) has a rich history outside)J108 603 :M1.016 .102(cryptology, from von Neumann and Burks [22], through John Conway's "Life")J108 627 :M1.555 .155(game [e.g. 22, 22], to the current field of "artificial life" [22].  Wolfram has)J108 651 :M.106 .011(examined a range of rules for linear CA's, and has proposed [22] two similar rules)J108 675 :M1.685 .168(which seem suitable for cryptographic use.  Wayner [22] provides a popular)Jendp%%Page: 23 23%%BeginPageSetupinitializepage(TARDIS; page: 23 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 23)J108 121 :Mf3_12 sf2.064 .206(description and simple software implementation of this system \(in BASIC\).)J108 145 :M-.059(\(Some statements were missing from the listings in the printed article.\))A144 169 :M1.111 .111(Basically, the suggested Wolfram system consists of a one-dimensional)J108 191 :M-.124("vector" or linear array of elements, a)A0 3 rm-.16(0)A0 -3 rm-.101(..a)A0 3 rm-.16(n)A0 -3 rm-.125(, and the iterative equation:)A239 239 :M(a)S0 3 rm(i)S0 -3 rm-.039( = a)A0 3 rm-.038(i-1)A0 -3 rm-.05( XOR \(a)A0 3 rm(i)S0 -3 rm-.048( OR a)A0 3 rm-.046(i+1)A0 -3 rm-.06(\).)A108 289 :M.296 .03(The array is considered circular, and the new element values are considered to be)J108 313 :M-.022(updated in parallel.  The output is taken from one element \(e.g., a bit or byte\) only;)A108 337 :M-.023(thus the CA RNG is normally operated "Class C.")A144 361 :M1.03 .103(This is relatively new work, and the current state of the theory of these)J108 385 :M.449 .045(systems is comparatively weak \(there is some investigation in Rietman [23: 113-)J108 409 :M.513 .051(131]\).  Every discrete system must have sequences of some length, but currently)J108 433 :M-.007(there seems to be no theory to support statements about CA sequence length or the)A108 457 :M-.033(distribution of CA pseudo-random values.)A144 481 :M.196 .02(This particular CA method requires three array-access operations plus two)J108 505 :M-.041(logical operations )Af4_12 sf-.042(for each element of the array)Af3_12 sf-.043(.  While fairly simple as a hardware)A108 529 :M-.064(mechanism \(since hardware may perform each cell computation in parallel\), a large)A108 553 :M4.122 .412(CA RNG may involve more computation than desired for a software)J108 577 :M-.094(implementation.)A108 625 :Mf0_12 sf.099 .01(4.4  x)J0 -3 rm.057(2)A0 3 rm.143 .014( mod N)J144 649 :Mf3_12 sf1.188 .119(Yet another new RNG approach is the "x)J0 -3 rm.39(2)A0 3 rm1.17 .117( mod N" generator of Blum,)J108 673 :M.244 .024(Blum, and Shub [23, 23].  This RNG seems unique in that it is claimed [23] to be)J108 697 :M.098 .01("polynomial-time unpredictable" \(p. 372\) and "cryptographically secure" \(p. 381\).)Jendp%%Page: 24 24%%BeginPageSetupinitializepage(TARDIS; page: 24 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 24)J108 121 :Mf3_12 sf1.478 .148(To put this in perspective, we should recall that )Jf4_12 sf.379(all)Af3_12 sf2.034 .203( digital computer RNG's,)J108 145 :Mf4_12 sf.803(including)Af3_12 sf1.196 .12( x)J0 -3 rm.957(2)A0 3 rm2.82 .282( mod N, are deterministic within a finite state-space.  Such)J108 169 :M.942 .094(mechanisms necessarily repeat eventually, and may well include many short or)J108 193 :M-.079(degenerate cycles.  It is unnecessary to "predict" a sequence which will repeat soon.)A108 217 :M-.015(Accordingly, the x)A0 -3 rm(2)S0 3 rmcF f1_12 sf-.016(9)Asf-.016(mod)AcF f1_12 sf-.016(9)Asf-.016(N RNG requires some fairly-complex design procedures,)A108 241 :M-.12(which are apparently intended to assure long cycle operation.)A144 265 :M-.104(Basically, the RNG consists of the iterative equation [24: 125]:)A245 311 :M(x)S0 3 rm.022(i+1)A0 -3 rmcF f1_12 sf.019(9)Asf.019(=)AcF f1_12 sf.019(9)Asf.019(x)A0 3 rm(i)S0 -3 rm0 -3 rm(2)S0 3 rmcF f1_12 sf.013(9)Asf.131 .013(mod)JcF f1_12 sf.013(9)Asf.131 .013(N, where)J190 337 :M-.066(N)AcF f1_12 sf-.066(9)Asf-.066(is the product of two large distinct primes, and)A242 359 :M-.074(result bit = parity\(x)A0 3 rm-.09(i+1)A0 -3 rm-.083(\), or)A249 383 :M-.045(result bit =)AcF f1_12 sf-.045(9)Asf-.045(lsb\(x)A0 3 rm-.055(i+1)A0 -3 rm-.051(\), or)A235 407 :M-.011(result = log)A0 3 rm(2)S0 -3 rm-.01(\(N\) lsb's of x)A0 3 rm(i+1)S0 -3 rm(.)S144 457 :M(The x)S0 -3 rm(2)S0 3 rm-.003( mod N design [24] originally produced only the single bit of output)A108 481 :M-.045(per iteration, the "parity" of x \(p.)AcF f1_12 sf-.045(9)Asf-.045(368\).  The paper then goes on to say: "Parity\(x\) is)A108 505 :M.328 .033(the least significant bit of x" \(p. 376\), which is apparently common mathematical)J108 529 :M1.21 .121(usage.  \(The standard communications and computer design usage of the term)J108 553 :M.242 .024("parity," is the mod)JcF f1_12 sf.024(9)Asf.242 .024(2 )Jf4_12 sf.093(sum)Af3_12 sf.215 .021( of the bits in a single code value [e.g., 24: 44; 24:)JcF f1_12 sf.021(9)Asf.215 .021(472-)J108 577 :M(473].\))S144 601 :M.315 .031(Alexi, Chor, Goldreich and Schnorr [24] shows that at least log)JcF f1_12 sf.031(9)Asf.315 .031(log)JcF f1_12 sf.031(9)Asf.315 .031(N bits)J108 625 :M.63 .063(can be used safely, while Vazirani and Vazirani [24] shows that the log)JcF f1_12 sf.063(9)Asf.63 .063(N least-)J108 649 :M.143 .014(significant bits can be safely used.  Vazirani and Vazirani also proves the RNG as)J108 673 :M.932 .093(secure as factoring N.  Kranakis [24] gives number theory particularly directed)J108 697 :M-.065(toward cryptography, including the x)A0 -3 rm-.079(2)A0 3 rmcF f1_12 sf-.072(9)Asf-.072(mod)AcF f1_12 sf-.072(9)Asf-.072(N generator.)Aendp%%Page: 25 25%%BeginPageSetupinitializepage(TARDIS; page: 25 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 25)J144 121 :Mf3_12 sf1.2 .12(For those number theorists who have been bored up to now, things are)J108 143 :M.531 .053(about to get more interesting, since both N and x)J0 3 rm.19(0)A0 -3 rm.568 .057( must be specially selected, as)J108 169 :M-.091(described in the main paper [25]:)A144 193 :M.108 .011(N is to be the product of two large distinct primes, P and Q.  Both P and Q)J108 217 :M1.069 .107(are to be congruent to 3 mod 4, )Jf4_12 sf.47(and)Af3_12 sf.957 .096( must also be )Jf4_12 sf.38(special)Af3_12 sf1.077 .108( \(p. 378\). Prime P is)J108 239 :Mf4_12 sf.254(special)Af3_12 sf.792 .079( if P)JcF f1_12 sf.079(9)Asf.792 .079(=)JcF f1_12 sf.079(9)Asf.792 .079(2P)J0 3 rm.314(1)A0 -3 rmcF f1_12 sf.085(9)Asf.85 .085(+)JcF f1_12 sf.085(9)Asf.85 .085(1 and P)J0 3 rm.314(1)A0 -3 rmcF f1_12 sf.266(9)Asf.266(=)AcF f1_12 sf.266(9)Asf.266(2P)A0 3 rm.314(2)A0 -3 rmcF f1_12 sf.099(9)Asf.992 .099(+)JcF f1_12 sf.099(9)Asf.992 .099(1 where P)J0 3 rm.314(1)A0 -3 rm.603 .06( and P)J0 3 rm.314(2)A0 -3 rm.761 .076( are odd primes.  The)J108 265 :M.233 .023(paper gives 2879, 1439, 719, 359, 179, and 89 as examples of special primes \(but)J108 289 :M1.03 .103(179 and 89 appear to )Jf4_12 sf.361(not)Af3_12 sf1.029 .103( be special, while 167, 47 and 23 should be\).  As yet)J108 311 :M.608 .061(another condition, )Jf4_12 sf.598 .06(only one)Jf3_12 sf.238 .024( of P)J0 3 rm.158(1)A0 -3 rm.128(,)AcF f1_12 sf.128(9)Asf.128(Q)A0 3 rm.158(1)A0 -3 rm.401 .04( may have 2 as a quadratic residue \(P)J0 3 rm.158(1)A0 -3 rm.128(,)AcF f1_12 sf.128(9)Asf.128(Q)A0 3 rm(1)S0 -3 rm108 337 :M-.094(are the intermediate values computed during the "special" certification\).  If we mark)A108 361 :M-.054(such )Af4_12 sf-.052(particular)Af3_12 sf-.051( special primes with an asterisk \("*"\), we get, for example:  23, 47*,)A108 385 :M3.475 .348(167, 359, 719*, 1439*, 2039, 2879*, 4079*, 4127*, etc.  Accordingly,)J108 409 :M2.062 .206(N)JcF f1_12 sf.206(9)Asf2.062 .206(=)JcF f1_12 sf.206(9)Asf2.062 .206(719)JcF f1_12 sf.206(9)Asf2.062 .206(*)JcF f1_12 sf.206(9)Asf2.062 .206(47 fails the additional condition, because both special primes are)J108 433 :Mf4_12 sf.06(particular)Af3_12 sf.246 .025(.  Presumably, these detailed conditions guarantee the existence of long)J108 457 :M-.064(cycles, but they do not banish short ones.)A144 481 :M.196 .02(The x)J0 -3 rm.064(2)A0 3 rmcF f1_12 sf.019(9)Asf.193 .019(mod)JcF f1_12 sf.019(9)Asf.193 .019(N generator is not )Jf4_12 sf.051(perfect)Af3_12 sf.132 .013( in the sense of this paper: it is not a)J108 505 :M.721 .072(permutation generator.  As an illustration, consider the x)J0 -3 rm.22(2)A0 3 rmcF f1_12 sf.065(9)Asf.651 .065(mod)JcF f1_12 sf.065(9)Asf.651 .065(N system of P =)J108 529 :M2.082 .208(23, Q = 47 \(N = 1081\), a system specifically given as an example "of the)J108 551 :M2.423 .242(prescribed form" \(p. 378\):  Starting with x)J0 3 rm.81(0)A0 -3 rm1.949 .195( = 46 we get 1035, then 1035)J108 575 :M.807 .081(repeatedly; a degenerate cycle.  Starting with x)J0 3 rm.254(0)A0 -3 rm.629 .063( = 47, we get 47 again; another)J108 599 :M.244 .024(degenerate cycle.  Starting with x)J0 3 rm.077(0)A0 -3 rm.183 .018( = 48, we get 142, 706, 95, 377, 518, 236, 565,)J108 623 :M.682 .068(330, 800, and 48; a 10-state cycle.  And starting with x)J0 3 rm.258(0)A0 -3 rm.579 .058( = 24, we get 576, 990,)J108 649 :M.674 .067(714, 645, 921, 737, 507, 852, 553, 967, and 24; an 11-state cycle.  Other cycles)J108 671 :M-.008(include another 10-state cycle \(x)A0 3 rm(0)S0 -3 rmcF f1_12 sf-.008(9)Asf-.008(=)AcF f1_12 sf-.008(9)Asf-.008(94\), three more 11-state cycles \(x)A0 3 rm(0)S0 -3 rm-.01( = 437, 484)A108 695 :M.786 .079(and 529\), and a couple of much more desirable 110-state cycles \(x)J0 3 rm.259(0)A0 -3 rmcF f1_12 sf.113(9)Asf1.132 .113(=)JcF f1_12 sf.113(9)Asf1.132 .113(2 and)JcF f1_12 sf.113(9)Asf1.132 .113(3\).)Jendp%%Page: 26 26%%BeginPageSetupinitializepage(TARDIS; page: 26 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 26)J108 121 :Mf3_12 sf1.569 .157(However, no matter what value of x)J0 3 rm.512(0)A0 -3 rm1.455 .146( is selected, this system cannot hope to)J108 147 :M.302 .03(generate all possible states, nor even the full set of quadratic residue states, but is)J108 171 :M-.133(instead limited to those states within a particular cycle.)A108 195 :M( )S144 195 :M1.214 .121(Because an x)J0 -3 rm.368(2)A0 3 rmcF f1_12 sf.145(9)Asf1.452 .145(mod)JcF f1_12 sf.145(9)Asf1.452 .145(N generator generally defines multiple cycles with)J108 217 :M.022 .002(various numbers of states, the initial value x)J0 3 rm(0)S0 -3 rm.02 .002( must be specially selected to be sure)J108 241 :M.61 .061(that it is not on a short cycle \(p. 377\).  The paper says to select x)J0 3 rm.271(0)A0 -3 rm.669 .067( such that the)J108 267 :M2.066 .207("order" of x mod N \(that is, the length of that cycle\) is a particular value,)J108 291 :M-.083(specifically _\(N\)/2, where _ is "Carmichael's _-function." The function _\(M\) can be)A108 315 :M.54 .054(computed using the least common multiple \(lcm\) of the factors of M.  However,)J108 337 :M1.759 .176(computation of ord)J0 3 rm.629(N)A0 -3 rm.363(\(x)A0 3 rm.436(0)A0 -3 rm1.057 .106(\) for a particular x)J0 3 rm.436(0)A0 -3 rm1.258 .126( \(p.)JcF f1_12 sf.126(9)Asf1.258 .126(379\) would seem to require a)J108 363 :M1.719 .172(substantial amount of work.  Experiments by L'Ecuyer and Proulx [26: 472])J108 387 :M-.086(suggest that finding large special primes and an element in a long cycle may require)A108 411 :M-.07(on the order of 10)A0 -3 rm-.087(5)A0 3 rm-.069( fairly-involved test-certifications; they report 155 hours of CPU)A108 435 :M-.034(time \(on a MicroVax II\) for an )Af4_12 sf-.039(improper)Af3_12 sf-.035( 128-bit design.)A144 459 :M.444 .044(I had assumed that finding N would be a configuration problem, and thus)J108 483 :M.063 .006(generally irrelevant to frequent use.  But L'Ecuyer and Proulx [26: 473] assert that)J108 507 :M-.046(N "must remain random," and that N "is part of the seed." The penalty for violating)A108 531 :M-.111(this restriction is apparently the loss of guaranteed polynomial time unpredictability,)A108 555 :M.576 .058(which is the whole reason for using this generator.  Consequently, special prime)J108 579 :M.757 .076(certification seemingly cannot be an off-line process, but instead must be in the)J108 603 :M-.096(critical path of seed generation, a path which must be traversed prior to enciphering.)A108 625 :M1.526 .153(\(Both the chosen N and x)J0 3 rm.554(0)A0 -3 rm1.849 .185( would presumably be transferred securely to the)J108 651 :M-.069(deciphering system without further computation.\))A144 675 :M.132 .013(The worrisome part of all this is that we would normally expect the "seed")J108 697 :M.688 .069(value, x)J0 3 rm.196(0)A0 -3 rm.583 .058( \(and now N\), to be some almost-arbitrary function of an arbitrary user)Jendp%%Page: 27 27%%BeginPageSetupinitializepage(TARDIS; page: 27 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 27)J108 123 :Mf3_12 sf.042 .004(key [e.g., 27: 854], and such will not be the case with the x)J0 -3 rm(2)S0 3 rmcF f1_12 sf.006(9)Asf.061 .006(mod)JcF f1_12 sf.006(9)Asf.061 .006(N generator.  Of)J108 147 :M-.07(course, we might simply choose to accept the risk of being on a short cycle, but this)A108 171 :M1.889 .189(hardly seems consistent with the goal of a "cryptographically secure" RNG.)J108 195 :M1.109 .111(Another possibility would be to use some sort of RNG to step through values,)J108 219 :M.153 .015(from an initial arbitrary value, until some acceptable x)J0 -3 rm(2)S0 3 rmcF f1_12 sf.015(9)Asf.155 .015(mod)JcF f1_12 sf.015(9)Asf.155 .015(N seed is found; this)J108 243 :M.696 .07(would naturally require a reasonable real-time cycle-length certification routine.)J108 267 :M-.088(The paper does prove the existence of an algorithm to allow random access within a)A108 291 :M1.144 .114(cycle \(p.)JcF f1_12 sf.114(9)Asf1.144 .114(379\); if this could be done in real \(user\) time, yet another possibility)J108 315 :M.096 .01(would be to use the arbitrary key to position the RNG arbitrarily within a certified)J108 339 :M.238 .024(long cycle.  For N of the correct form, it may be that the value 2 is always part of)J108 363 :M-.136(such a cycle.)A144 387 :M1.041 .104(For cryptographic work, both x and N will be very large quantities; the)J108 411 :M.419 .042(multi-precision multiplication and division required for each RNG step would be)J108 435 :M-.003(slow, without even mentioning configuration and initialization. To form N we will)A108 459 :M-.039(likely apply some sort of probabilistic primality test on very large random numbers)A108 483 :M-.084([e.g., 27, 27], implying RSA-like computational capabilities for real time use.)A144 505 :M-.02(Log)A0 3 rm(2)S0 -3 rm-.015(N or fewer bits are output on any step, thus normally operating "Class)A108 531 :M.772 .077(C."  Since the x)J0 -3 rm.345(2)A0 3 rmcF f1_12 sf.099(9)Asf.986 .099(mod)JcF f1_12 sf.099(9)Asf.986 .099(N generator does so much work for so little output, it is)J108 555 :M.435 .043(tempting to ask how other RNG methods would fare if they, too, produced just a)J108 579 :M.415 .041(few bits per step [27].  Apparently, simple RNG's which discard )Jf4_12 sf.127(lower)Af3_12 sf.376 .038( order bits)J108 603 :M-.01([27, 27], or even )Af4_12 sf-.011(higher)Af3_12 sf-.01( order bits [27] can be insecure; perhaps the )Af4_12 sf-.013(number)Af3_12 sf-.01( of bits)A108 627 :M.164 .016(produced per step is more important than their position.  Or perhaps the particular)J108 651 :M-.11(bits to be used could be selected dynamically.)A144 675 :M.599 .06(The x)J0 -3 rm.195(2)A0 3 rmcF f1_12 sf.063(9)Asf.628 .063(mod)JcF f1_12 sf.063(9)Asf.628 .063(N generator is thought to be a "one-way" function under the)J108 699 :M2.285 .229("discrete logarithm assumption" [27], and its secrecy properties are further)Jendp%%Page: 28 28%%BeginPageSetupinitializepage(TARDIS; page: 28 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 28)J108 121 :Mf3_12 sf1.718 .172(developed in Blum and Micali [28], Long and Wigderson [28], Alexi, Chor,)J108 145 :M.33 .033(Goldreich and Schnorr [28], and Chor, Goldreich and Goldwasser [28].  Vazirani)J108 169 :M1.146 .115(and Vazirani [28] shows x)J0 -3 rm.353(2)A0 3 rmcF f1_12 sf.112(9)Asf1.118 .112(mod)JcF f1_12 sf.112(9)Asf1.118 .112(N to be a "trapdoor" one-way function.  And)J108 193 :M.493 .049(Shamir [28], Levin [28], Allender [28], Goldreich, Krawczyk and Luby [28] and)J108 217 :M.084 .008(Nisan [28] extend one-way functions into pseudorandom generators.  However, in)J108 241 :M.203 .02(using this work we must not forget that these are academic papers, and the details)J108 265 :M1.501 .15(of the x)J0 -3 rm.688(2)A0 3 rmcF f1_12 sf.225(9)Asf2.255 .225(mod)JcF f1_12 sf.225(9)Asf2.255 .225(N design are known from Blum, Blum, and Shub [28] \(also)J108 289 :M.435 .044(Kranakis [28] and now L'Ecuyer and Proulx [28]\); none of the other papers even)J108 313 :M.308 .031(mention the fairly complex details which are necessary to design and operate this)J108 337 :M-.126(generator securely.)A144 361 :M1.595 .159(The x)J0 -3 rm.519(2)A0 3 rmcF f1_12 sf.188(9)Asf1.879 .188(mod)JcF f1_12 sf.188(9)Asf1.879 .188(N RNG is claimed to be "unpredictable" \(when properly)J108 385 :M.588 .059(designed\), but even this is no absolute guarantee of secrecy.  An attack on RNG)J108 409 :M-.11(repetition does not require "prediction."  Even a brute force attack has the )Af4_12 sf-.117(possibility)A108 433 :Mf3_12 sf-.075(of succeeding quickly.  An inference attack could be practical if some way could be)A108 457 :M.606 .061(found to efficiently describe and select only those states which have a particular)J108 481 :M.723 .072(output bit-pattern from the results of previous such selections; that we currently)J108 505 :M-.064(know of no such procedure is not particularly comforting.)A108 553 :Mf0_12 sf-.028(4.5  Linear Congruential)A144 577 :Mf3_12 sf.471 .047(The linear congruential generator \(LCG\) is one of the oldest, and still the)J108 601 :M.779 .078(most common type of random number generator implemented for programming)J108 625 :M-.01(language commands.  The reason for this is that it uses a relatively simple iterative)A108 649 :M(formula,)S242 695 :M.142(X)A0 3 rm.102(n+1)A0 -3 rmcF f1_12 sf.084(9)Asf.084(=)AcF f1_12 sf.084(9)Asf.084(\(aX)A0 3 rm.098(n)A0 -3 rmcF f1_12 sf.092(9)Asf.092(+)AcF f1_12 sf.092(9)Asf.092(c\))AcF f1_12 sf.092(9)Asf.092(mod)AcF f1_12 sf.092(9)Asf.092(m,)Aendp%%Page: 29 29%%BeginPageSetupinitializepage(TARDIS; page: 29 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 29)J108 145 :Mf3_12 sf.352 .035(which is relatively fast and easy to compute.  The values a, c, and m are fixed by)J108 167 :M.62 .062(the designer [29: 9-24 )JcF f1_12 sf.062(@)Asf.62 .062(3.2.1].  The output is normally taken to be X)J0 3 rm.235(n+1)A0 -3 rm.477 .048(, so the)J108 193 :M1.979 .198(mechanism is normally operated "Class A," which is a major reason for its)J108 217 :M-.073(cryptographic weakness.)A144 241 :M.268 .027(The simple formula means that the LCG is relatively easy to program, but)J108 265 :M-.102(selecting appropriate parameter values for a, c, and m is not easy.   The current level)A108 289 :M-.018(of analysis seems insufficient to predict the parameters for best randomness, so the)A108 313 :M2.484 .248(design of a statistically acceptable LCG involves much trial-and-error and)J108 337 :M.636 .064(expensive randomness testing [29:)JcF f1_12 sf.064(9)Asf.636 .064(38-113 )JcF f1_12 sf.064(@)Asf.636 .064(3.3]. Moreover, LCG's regularly fail)J108 361 :M.713 .071(successively-more-precise analysis [e.g., 29, 29, 29], which can thus require yet)J108 385 :M.613 .061(another complete design session to find some parameters which will pass all the)J108 409 :M-.066(tests.)A144 433 :M.071 .007(Guinier [29] does give a method for making LCG design almost trivial.  In)J108 457 :M2.234 .223(this scheme, the modulus \(m\) is prime and the constant \(c\) is zero, which)J108 481 :M.676 .068(apparently implies a period of one less than the value of the modulus \(the value)J108 505 :M-.061(zero is prohibited\).  The product of the multiplier and modulus is also limited to the)A108 529 :M.072 .007(range of the available positive integer arithmetic \(e.g., 31 bits\), with the multiplier)J108 553 :M1.687 .169(being the square root of the modulus.  This assures that the result is always)J108 577 :M-.072(computable without overflow.)A144 601 :M.485 .049(In a Guinier design, multiple LCG's are used, each with a different prime)J108 625 :M1.174 .117(modulus.  The output values from the various LCG's are additively combined,)J108 649 :M.826 .083(producing an extremely long sequence.  The result may also be "more random")J108 673 :M.761 .076(than a single LCG, since any bad subsequences are likely to be hidden by good)J108 697 :M1.785 .179(output from other LCG's.  Guinier suggests using as many as 1024 separate)Jendp%%Page: 30 30%%BeginPageSetupinitializepage(TARDIS; page: 30 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 30)J108 121 :Mf3_12 sf-.015(LCG's, thus producing an "astronomical" sequence length; naturally, such a design)A108 145 :M-.075(would also require 1024 times the computational effort of a single LCG.)A144 169 :M.054 .005(LCG's can also be designed as permutation generators, either of period m)JcF f1_12 sf.005(9)Asf.054 .005(-)J108 193 :McF f1_12 sf-.067(9)Asf-.067(1 \(in which case the zero value may need to be inserted in the output somewhere at)A108 217 :M-.006(random\), or of perfect period m [30: 15-20 )AcF f1_12 sf-.006(@)Asf-.006(3.2.2]. However, it is not clear that all)A108 241 :M2.314 .231(m factorial possible permutations could be achieved in this way, nor what)J108 265 :M-.097(characteristics the achievable permutations might have in common.)A144 289 :M.685 .068(If randomness, by itself, were sufficient for cryptographic use, perhaps a)J108 313 :M.866 .087("good enough" LCG could be found.  But the real problem with most LCG's is)J108 337 :M.038 .004(their tiny amount of internal state, simple step formula, and complete exposure.  If)J108 361 :M2.26 .226(even a few values from the pseudo-random sequence become available for)J108 385 :M3.146 .315(analysis, the formula can be deduced, the sequence reproduced, and the)J108 409 :M.223 .022(cryptosystem penetrated [30, 30, 30].  Consequently, LCG's cannot be considered)J108 433 :M-.058(secure, unless strongly isolated, or perhaps combined with other generators [30, 30,)A108 457 :M.468 .047(30, 30, 30, 30, 30].  Because it is difficult to find a good set of LCG parameters,)J108 481 :M-.083(LCG's are normally difficult to customize.)A108 529 :Mf0_12 sf.105 .011(4.6  Linear Feedback Shift Register \(LFSR\))J144 553 :Mf3_12 sf-.057(A )Af4_12 sf-.042(shift register)Af3_12 sf-.046( \(SR\) is a set of storage elements in which the values in each)A108 577 :M-.06(element may be "shifted" into an adjacent element.  \(A new value is shifted into the)A108 601 :M.078 .008(first element, and the value in the last element is normally lost.\)  There are several)J108 625 :M.833 .083(different ways of implementing the same logical concept, both in hardware and)J108 649 :M-.038(software.)A144 673 :M-.104(In an n-element SR, if the last element is connected to the first element, a set)A108 697 :M.018 .002(of n values can circulate around the SR in n steps.  But if two element values in an)Jendp%%Page: 31 31%%BeginPageSetupinitializepage(TARDIS; page: 31 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 31)J108 121 :Mf3_12 sf.175 .017(n-element SR are combined by exclusive-OR and that result connected to the first)J108 145 :M.499 .05(element, it is possible to get an )Jf4_12 sf.183(almost)Af3_12 sf.728 .073(-perfect )Jf4_12 sf1.062 .106(maximal length)Jf3_12 sf.538 .054( sequence of 2)J0 -3 rm.206(n)A0 3 rm.343(-1)A108 169 :M.399 .04(steps.  \(The all-zeros state will produce another all-zeros state, and so the system)J108 193 :M-.093(will "lock up" in a degenerate cycle.\)  Because there are only 2)A0 -3 rm-.118(n)A0 3 rm-.09( different states of n)A108 217 :M1.584 .158(binary values, every state value but one must occur exactly once, which is a)J108 241 :M.51 .051(statistically-satisfying result \(for the entire cycle, of course\).  Moreover, this is a)J108 265 :M2.019 .202(perfect )Jf4_12 sf.534(permutation)Af3_12 sf1.772 .177( of the "natural number" state values \(1..2)J0 -3 rm.601(n)A0 3 rm1.845 .184(-1\).  \(Actual)J108 289 :M.137 .014(permutation applications may need )Jf4_12 sf.025(all)Af3_12 sf.122 .012( "counting" values 0..2)J0 -3 rm(n)S0 3 rm.091 .009(-1; in these cases, it)J108 313 :M-.072(may be sufficient to insert the zero state somewhere at random.\))A144 337 :M.325 .033(The mathematical basis for these sequences was described by Tausworthe)J108 361 :M-.109([31] as a "linear recursion relation":)A198 407 :M(a)S0 3 rm(k)S0 -3 rmcF f1_12 sf-.014(9)Asf-.014(=)AcF f1_12 sf-.014(9)Asf-.014(c)A0 3 rm(1)S0 -3 rm(a)S0 3 rm(k-1)S0 -3 rmcF f1_12 sf-.014(9)Asf-.014(+)AcF f1_12 sf-.014(9)Asf-.014(c)A0 3 rm(2)S0 -3 rm(a)S0 3 rm(k-2)S0 -3 rmcF f1_12 sf-.016(9)Asf-.016(+)AcF f1_12 sf-.016(9\2019)Asf-.016(+)AcF f1_12 sf-.016(9)Asf-.016(c)A0 3 rm(n)S0 -3 rm(a)S0 3 rm(k-n)S0 -3 rmcF f1_12 sf-.017(99)Asf-.017(\(mod 2\))A108 455 :M1.004 .1(where a)J0 3 rm.272(k)A0 -3 rm.749 .075( is the latest bit in the sequence, c the coefficients or binary numerical)J108 481 :M.739 .074(factors of a mod 2 polynomial, and n the degree of the polynomial and thus the)J108 505 :M.304 .03(required number of storage elements.  This formula is particularly interesting, for)J108 529 :M.525 .052(relatively minor generalizations of the same formula will produce the GFSR and)J108 553 :M-.011(Additive generators described in subsequent sections.  In the case of the LFSR, we)A108 577 :M-.087(normally think of the SR elements as being arranged horizontally.)A144 601 :M-.005(The general analysis of )Af4_12 sf-.005(linear feedback shift registers)Af3_12 sf-.005( \(LFSR's\) is based on)A108 625 :M.149 .015(the algebra of finite fields [e.g., 31, 31], and is available in a magnificent work by)J108 649 :M1.038 .104(Golomb [31], a text by MacWilliams and Sloane [31], and a small book by de)J108 673 :M.675 .067(Visme [31]; there is also an interesting short introduction in Simmons [31: 328-)J108 697 :M-.03(329].  A cryptographic view is available in Beker and Piper [31], related topics can)Aendp%%Page: 32 32%%BeginPageSetupinitializepage(TARDIS; page: 32 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 32)J108 121 :Mf3_12 sf2.643 .264(be found in Berlekamp [32], and there is an interesting general paper by)J108 145 :M-.044(MacWilliams and Sloane [32].  \(A technique for producing longer cycles, basically)A108 169 :M.077 .008(by cyclically changing the feedback polynomial, is investigated by Reed and Turn)J108 193 :M([32].\))S144 217 :M.06 .006(It turns out that an LFSR mechanizes a finite field multiplication operation)J108 241 :M.431 .043([32: 89], and is also closely related to finite field division [32: 210].  \(Also, each)J108 265 :M.834 .083(LFSR has a "dual," which is arranged differently, but which produces the same)J108 289 :M2.074 .207(sequence.\)  A maximal length sequence will occur if the SR "taps" form a)J108 313 :M1.118 .112(polynomial which is )Jf4_12 sf.266(primitive)Af3_12 sf.717 .072(.  \(A primitive is a special kind of )Jf4_12 sf.268(irreducible)Af3_12 sf.599 .06( or)J108 337 :M.45 .045(prime in the given finite field.\)  A degree-n primitive mod 2 polynomial actually)J108 361 :M.889 .089(has n+1 bits and is used with an n-bit SR; the extra bit represents the feedback)J108 385 :M2.687 .269(result or input to the SR. Different primitives produce different sequence)J108 409 :M-.119(permutations; although not all )Af4_12 sf-.115(n factorial)Af3_12 sf-.117( sequences are available, there can be )Af4_12 sf-.217(many)A108 433 :Mf3_12 sf-.066(primitives.)A144 457 :M2.906 .291(The statistical performance of an LFSR with a primitive feedback)J108 481 :M.161 .016(polynomial really is quite luxurious \(e.g., Golomb [32], or the interesting analysis)J108 505 :M1.838 .184(by Horowitz and Hill [32: 655-664]\); when we look at the sequence of bits)J108 529 :M-.091(produced by the feedback polynomial we find:)A144 577 :M.118 .012(1.  there is only one major cycle, with length 2)J0 -3 rm(n)S0 3 rm.148 .015(-1 steps \(the all-zeros state)J144 601 :M-.155(is an isolated and degenerate cycle\);)A144 625 :M1.033 .103(2.  over the whole major cycle, the counts of 1's and 0's almost exactly)J144 649 :M-.082(balance \(there is one more 1\), so 1's and 0's are almost equally likely; and)Aendp%%Page: 33 33%%BeginPageSetupinitializepage(TARDIS; page: 33 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 33)J144 121 :Mf3_12 sf-.065(3.  over the whole major cycle, every possible subsequence of n bits \(except)A144 145 :M-.068(all-zeros\) occurs exactly once, so each of these subsequences is also equally)A144 169 :M-.221(likely.)A108 217 :M.065 .007(Tausworthe [33] was principally concerned with )Jf4_12 sf.016(decimating)Af3_12 sf.06 .006( or collecting periodic)J108 241 :M.857 .086(bits from an LFSR, and interpreting each collection as a binary value; statistics)J108 265 :M2.462 .246(computed over many such values are expected to correspond to a random)J108 289 :M.943 .094(sequence.  Further statistical analysis was undertaken by Tootill, Robinson and)J108 313 :M.256 .026(Adams [33], Tootill, Robinson and Eagle [33], and an improvement suggested by)J108 337 :M.306 .031(Fushimi [33].)J144 361 :M.008 .001(Despite these favorable statistical results, an LFSR output can nevertheless)J108 385 :M2.822 .282(apparently exhibit "nonrandom higher-order correlations." Compagner and)J108 409 :M3.908 .391(Hoogland [33] present some convincing graphics which illustrate such)J108 433 :M-.101(relationships.)A144 457 :M.99 .099(The desirable statistical performance of the LFSR is guaranteed for any)J108 481 :M-.073(primitive polynomial, so the design of maximal-length sequence generators reduces)A108 505 :M-.094(to finding a primitive feedback polynomial.  There are "lots" of primitives, but there)A108 529 :M.151 .015(are also about n random polynomials for each primitive of degree n, so it can take)J108 553 :M-.03(some work to find primitives in large-degree polynomials.  \(There is a later section)A108 577 :M-.06(on finding primitive polynomials.\))A144 601 :M.4 .04(The feedback result of the LFSR is generally used as the output; thus, the)J108 625 :M1.474 .147(mechanism is normally operated "Class B."  Consequently, given a sufficient)J108 649 :M.138 .014(quantity of the pseudo-random output, the LFSR length and feedback connections)J108 673 :M-.09(can easily be solved \(only 2n bits are needed\), and the sequence reproduced [33, 33,)A108 697 :M-.046(33, 33].  Of course, the LFSR can be made arbitrarily large \(and thus more difficult)Aendp%%Page: 34 34%%BeginPageSetupinitializepage(TARDIS; page: 34 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 34)J108 121 :Mf3_12 sf.967 .097(to solve\), and is also easily customized, but really needs additional isolation in)J108 145 :M-.096(cryptographic use.)A144 169 :M-.058(Execution time can be modest.)A108 217 :Mf0_12 sf-.01(4.7  Non-Linear Shift Register)A144 241 :Mf3_12 sf1.931 .193(Since LFSR sequences can be predicted from a small subset of their)J108 265 :M1.748 .175(sequence, it has been proposed [e.g., 34, 34]  to use a )Jf4_12 sf.715(non)Af3_12 sf3.698 .37(-linear feedback)J108 289 :M-.042(mechanism to produce a pseudo-random sequence.  The resulting sequence may be)A108 313 :M1.06 .106(more difficult to analyze, but a guarantee of a long cycle length seems to be a)J108 337 :M.121 .012(problem.  It is not at all unusual for an arbitrary non-linear feedback system to get)J108 361 :M-.105(caught in a short cycle, instead of the long cycles needed for cryptography.)A144 385 :M.594 .059(There has been a lot of work on non-linear SR's, including Golomb [34],)J108 409 :M.593 .059(Key [34], Hemmati [34], and Etzion and Lempel [34], and Beker and Piper [34])J108 433 :M2.607 .261(presents a cryptographic viewpoint as usual.  But an interesting paper by)J108 457 :M-.112(Siegenthaler [34] may be taken to indicate that non-linearity, by itself, is insufficient)A108 481 :M.319 .032(to prevent cryptanalysis, and may actually aid it.  In addition, the required design)J108 505 :M-.064(restrictions conspire to limit customization, and speed is certainly no better than the)A108 529 :M.081(LFSR.)A108 577 :Mf0_12 sf-.007(4.8  Clock-Controlled Shift Registers)A144 601 :Mf3_12 sf.285 .029(A shift-register normally "shifts" in response to a regular electronic signal)J108 625 :M.003 0(\(or instruction sequence\) called a "clock."  Between clock pulses, the shift-register)J108 649 :M-.091(is stopped and the data inside neither change nor move.)A144 673 :M.195 .019(Instead of just changing the feedback network, it is also possible to enable)J108 697 :M1.205 .121(or disable the clock signal.  In some sense this has no effect on the generated)Jendp%%Page: 35 35%%BeginPageSetupinitializepage(TARDIS; page: 35 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 35)J108 121 :Mf3_12 sf.773 .077(sequence, which must continue, step-by-step, whatever the delay between clock)J108 145 :M1.416 .142(pulses.  However, )Jf4_12 sf.4(systems)Af3_12 sf1.341 .134( of multiple SR's, in which some LFSR's enable or)J108 169 :M.751 .075(disable the clock to other LFSR's, clearly might produce a complex result.  The)J108 193 :M1.461 .146(question of whether such a sequence is actually as complex as it might seem)J108 217 :M-.108(apparently needs further research.)A144 241 :M-.029(There has been some work in this area, including G\237nther [35], and there is)A108 265 :M-.073(a great review in Gollmann [35].)A108 313 :Mf0_12 sf.134 .013(4.9  Generalized Feedback Shift Register \(GFSR\))J144 337 :Mf3_12 sf-.028(One of the problems with an LFSR is speed; although each "step" may take)A108 361 :M-.025(just a few instructions, the result is but a single bit.  A significant insight, however,)A108 385 :M-.164(allows better efficiency:)A144 409 :M.357 .036(The logical concept of a SR does not require data to actually )Jf4_12 sf.14(move)Af3_12 sf.466 .047( within)J108 433 :M1.472 .147(storage; it is sufficient to read "shifted" or "delayed" data at offsets from the)J108 457 :M1.612 .161("current" position within a circular queue, and then place new data at a new)J108 481 :M-.056("current" position.  This implies that it is possible to build a sort of "vertical" LFSR)A108 505 :M.865 .086(in which multiple computer storage "words" of delayed output are combined to)J108 529 :M.639 .064(produce the new output.  Such a system consists of several one-bit-wide SR's in)J108 553 :M1.596 .16(parallel; each "column" of bits is a separate and independent LFSR arranged)J108 577 :M1.326 .133("vertically."  Since these systems can use word-wide computer instructions to)J108 601 :M-.039(process multiple SR's at once, they can produce much more pseudo-random data in)A108 625 :M.189 .019(a little more time.  In the GFSR historical main line, this innovation is ascribed to)J108 649 :M-.058(Lewis and Payne [35: 30; 35].)A144 673 :M.34 .034(Using the Tausworthe [35] notation, the GFSR can be described as a very)J108 697 :M-.116(similar "linear recursion relation":)Aendp%%Page: 36 36%%BeginPageSetupinitializepage(TARDIS; page: 36 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 36)J198 143 :Mf3_12 sf(a)S0 3 rm(k)S0 -3 rmcF f1_12 sf-.014(9)Asf-.014(=)AcF f1_12 sf-.014(9)Asf-.014(c)A0 3 rm(1)S0 -3 rm(a)S0 3 rm(k-1)S0 -3 rmcF f1_12 sf-.014(9)Asf-.014(+)AcF f1_12 sf-.014(9)Asf-.014(c)A0 3 rm(2)S0 -3 rm(a)S0 3 rm(k-2)S0 -3 rmcF f1_12 sf-.016(9)Asf-.016(+)AcF f1_12 sf-.016(9\2019)Asf-.016(+)AcF f1_12 sf-.016(9)Asf-.016(c)A0 3 rm(n)S0 -3 rm(a)S0 3 rm(k-n)S0 -3 rmcF f1_12 sf-.017(99)Asf-.017(\(mod 2\))A108 191 :M.236 .024(where a)J0 3 rm.064(k)A0 -3 rm.172 .017( is the latest m-bit value in the sequence, c the coefficients of a primitive)J108 217 :M.054 .005(mod)JcF f1_12 sf.005(9)Asf.054 .005(2 polynomial, and n the degree of the polynomial and the required number of)J108 241 :M.744 .074(m-bit-wide storage elements.  \(Lewis and Payne actually limit c to a trinomial.\))J108 265 :M.695 .07(The result is a different sort of decimation of an LFSR sequence, in which each)J108 289 :M-.141(column has an arbitrary delay selected by initialization.)A144 313 :M1.046 .105(The resulting pseudo-random distribution has been a major GFSR topic)J108 337 :M.134 .013(since the original paper:  Clearly, we have multiple LFSR's in parallel \(each bit of)J108 361 :M-.002(the result value\), all using the same feedback polynomial. Clearly, each LFSR will)A108 385 :M1.126 .113(represent a particular delay within the one major sequence defined by a single)J108 409 :M.113 .011(polynomial.  Clearly each LFSR is )Jf4_12 sf.031(absolutely)Af3_12 sf.113 .011( correlated to the others with respect)J108 433 :M-.084(to its individual delay.  Surely this correlation must affect the output, so how should)A108 457 :M-.117(the GFSR be initialized for best statistical performance?)A144 481 :M1.785 .179(The need for GFSR initialization constraints has also been a topic of)J108 505 :M-.084(considerable interest since the original paper:  Lewis and Payne note that in order to)A108 529 :M1.792 .179(generate every "p-tuple" before any repetition, the columns must be linearly)J108 553 :M.722 .072(independent.  They also note that this is guaranteed if each column is a delayed)J108 577 :M-.019(replica of the initial column.  They thus suggest filling the leftmost column with 1-)A108 601 :M.054 .005(bits, and the rest of the generator with 0's, and running the SR for some number of)J108 625 :M-.003(steps.  This produces a complex result in the leftmost column which can be shifted)A108 649 :M.475 .047(to the right by one column, the leftmost column again filled with 1's, and the SR)J108 673 :M.021 .002(run again.  Eventually, all columns will have been filled with values only distantly)Jendp%%Page: 37 37%%BeginPageSetupinitializepage(TARDIS; page: 37 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 37)J108 121 :Mf3_12 sf.023 .002(related to one another, but this initialization process will take a substantial number)J108 145 :M.213 .021(of RNG steps.)J144 169 :M.545 .054(Lewis and Payne suggest that individual columns should have a delay no)J108 193 :M.444 .044(less than about 100p for polynomials of degree p, but they also use an additional)J108 217 :M.75 .075(5000p to allow the first step of "all 1's" to "die out"; Bright and Enison suggest)J108 241 :M1.989 .199(20,000p.  Kirkpatrick [37] suggests using a linear congruential generator to)J108 265 :M2.941 .294(initialize GFSR state, about half of which is then zeroed to force linear)J108 289 :M.498 .05(independence \(a good idea, but perhaps cryptographically unwise\).  Fushimi and)J108 313 :M-.094(Tezuka [37] actually illustrate a short linearly-related GFSR, and suggest a complex)A108 337 :M1.766 .177(initialization; Collings [37] suggests initializing with a corresponding LFSR.)J108 361 :M1.94 .194(Fushimi [37] gives another substantial construction, and also [37] shows an)J108 385 :M-.106(additional requirement in order to ensure ")Af4_12 sf-.119(k)Af3_12 sf-.104(-distributivity.")A144 409 :M-.082(All this work on initialization is inherently involved with the statistics of the)A108 433 :M-.05(results.  For other theoretical work on GFSR statistics, see Tezuka [37, 37, 37], and)A108 457 :M2.755 .276(Niederreiter [37]; Koopman [37] provides an empirical analysis of GFSR)J108 481 :Mf4_12 sf(subsequences)Sf3_12 sf.003 0(.  The major result of all this is that it is not easy to initialize a GFSR)J108 505 :M-.181(correctly.)A144 529 :M2.153 .215(Like the LFSR, the GFSR is normally operated "Class B," and thus)J108 553 :M-.073(requires additional isolation in cryptographic use.  The software execution time of a)A108 577 :M1.275 .127(GFSR is independent of the degree of the feedback polynomial, being instead)J108 601 :M.225 .023(nearly proportional to the number of terms in that polynomial.  Consequently it is)J108 625 :M.388 .039(flexible, easily customized, may be made as long as desired, and even as wide as)J108 649 :M-.075(desired \(using multiple operations\).)A108 673 :Mf0_12 sf.287 .029(4.10  Additive RNG)Jendp%%Page: 38 38%%BeginPageSetupinitializepage(TARDIS; page: 38 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 38)J144 121 :Mf3_12 sf2.85 .285(Prominent within Knuth [38: 26-31 )JcF f1_12 sf.285(@)Asf2.85 .285(3.2.2] is a description of the)J108 145 :M-.116(\(unpublished\) Mitchell and Moore )Af4_12 sf-.113(Additive)Af3_12 sf-.103( generator \(Marsaglia calls this a )Af4_12 sf-.138(lagged-)A108 169 :M.249(Fibonacci)Af3_12 sf.814 .081( generator\).  While not deeply treated in Knuth, the Additive RNG is)J108 193 :M-.045(important because it seems to be a generalization of the LFSR and an improvement)A108 217 :M.067 .007(over the GFSR, both of which are currently better understood.  Marsaglia [38] is a)J108 241 :M1.295 .13(major empirical reference, and Marsaglia and Tay [38] develops the sequence)J108 265 :M-.104(length using matrix algebra techniques.)A144 289 :M.041 .004(The Additive generator uses the same "vertical" arrangement as the GFSR,)J108 313 :M.76 .076(but uses normal arithmetic addition \(with internal "carry" operations\) instead of)J108 337 :M.439 .044(GFSR exclusive-OR \(no carry\) operations.  \(The Additive generator may also be)J108 361 :M.259 .026(seen as a vertical LFSR with m-bit element values and mod 2)J0 -3 rm.139(m)A0 3 rm.266 .027( arithmetic.\)  This)J108 385 :M.496 .05(guarantees a longer sequence than the GFSR, and a sequence which may also be)J108 409 :M1.227 .123(more secure [38].  Although an LFSR generates a permutation of the possible)J108 433 :M-.091(values \(except zero\), the Additive generator does not seem to be so constrained.)A144 457 :M2.649 .265(Using the Tausworthe [38] notation, the Additive generator can be)J108 481 :M-.107(described by a similar "linear recursion relation":)A193 527 :M(a)S0 3 rm(k)S0 -3 rmcF f1_12 sf(9)Ssf(=)ScF f1_12 sf(9)Ssf(c)S0 3 rm(1)S0 -3 rm(a)S0 3 rm(k-1)S0 -3 rmcF f1_12 sf(9)Ssf(+)ScF f1_12 sf(9)Ssf(c)S0 3 rm(2)S0 -3 rm(a)S0 3 rm(k-2)S0 -3 rmcF f1_12 sf(9)Ssf(+)ScF f1_12 sf(9\2019)Ssf(+)ScF f1_12 sf(9)Ssf(c)S0 3 rm(n)S0 -3 rm(a)S0 3 rm(k-n)S0 -3 rmcF f1_12 sf(99)Ssf(\(mod 2)S0 -3 rm(m)S0 3 rm(\))S108 575 :M.236 .024(where a)J0 3 rm.064(k)A0 -3 rm.172 .017( is the latest m-bit value in the sequence, c the coefficients of a primitive)J108 601 :M.052 .005(mod 2 polynomial, and n the degree of the polynomial and the required number of)J108 625 :M-.059(m-bit-wide storage elements.)A144 649 :M1.544 .154(Marsaglia proves period \(2)J0 -3 rm.266(r)A0 3 rm.333(-1\)2)A0 -3 rm.356(n-1)A0 3 rm.861 .086( for degree r and width n and )Jf4_12 sf.433(every)A108 673 :Mf3_12 sf-.029(initial vector of integers \(at least one odd\).  Consequently, the initialization anxiety)A108 697 :M.025 .003(which so pervades the GFSR papers seems completely unnecessary in the additive)Jendp%%Page: 39 39%%BeginPageSetupinitializepage(TARDIS; page: 39 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 39)J108 121 :Mf3_12 sf.444 .044(generator.  It might be possible to achieve an even longer sequence, approaching)J108 145 :M.099(2)A0 -3 rm.083(rn)A0 3 rm.317 .032(-1, using arithmetic modulo a prime modulus [39].  However, with a suitably-)J108 169 :M.455 .046(large polynomial \(degree 1279 or larger\), the Marsaglia sequence length is "long)J108 193 :M.171 .017(enough," and a requirement for explicit modular arithmetic would be a significant)J108 217 :M-.145(execution overhead.)A144 241 :M.052 .005(Like the LFSR and GFSR, Additive generators are usually operated "Class)J108 265 :M.322 .032(B," and thus require additional isolation in cryptographic use.  \(It is not presently)J108 289 :M-.059(known what information is actually required for a complete external analysis.\)  The)A108 313 :M.475 .047(software execution time of an Additive RNG is virtually length-independent, but)J108 337 :M.574 .057(nearly proportional to the number of feedback taps, the same as the GFSR.  It is)J108 361 :M.36 .036(interesting that this "mod 2)J0 -3 rm.176(m)A0 3 rm.394 .039( arithmetic" system may be customized by selecting)J108 385 :M-.06(feedback delays corresponding to primitive mod 2 polynomials.)A108 433 :Mf0_12 sf1.285 .129(5. RANDOMIZERS and ISOLATORS)J144 457 :Mf3_12 sf1.359 .136(Most RNG designs may be penetrated if a cryptanalyst comes up with)J108 481 :M.56 .056(enough of their output sequences.  Naturally, the designer will try to arrange the)J108 505 :M.192 .019(system so the cryptanalyst never has any confusion sequence with which to work.)J108 529 :M-.021(However, in case these precautions fail, most RNG's need additional protection for)A108 553 :M.585 .059(their sequences.  This protection can occur in the form of added randomizer and)J108 577 :M-.016(isolator mechanisms.)A144 601 :M1.005 .1(The basic idea behind the multiple mechanism approach has a long and)J108 625 :M-.023(prestigious history.  The classic paper by Shannon [39: 711-713] touches on this in)A108 649 :M1.101 .11(the context of "mixing transformations," now more often described as )Jf4_12 sf.343(product)A108 673 :M.045(ciphers)Af3_12 sf.148 .015( [39].  In a product cipher, the ciphertext result of one cipher is enciphered)J108 697 :M-.017(again by another cipher, and so on. Clearly, if a particular cipher were "completely)Aendp%%Page: 40 40%%BeginPageSetupinitializepage(TARDIS; page: 40 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 40)J108 121 :Mf3_12 sf3.095 .309(secure," there would be no reason for other encipherings; the additional)J108 145 :M-.022(encipherings act to obscure the weaknesses of the preceding ciphers.  \(Also see the)A108 169 :M-.072(related work in Wagner, Putter and Cain [40].\))A144 193 :M.256 .026(Rather than deal with multiple complete ciphers as independent entities, it)J108 217 :M-.03(seems reasonable to apply multiple transformations to a single data stream.  This is)A108 241 :M1.553 .155(the conceptual basis for substitution-permutation \(S-P\) ciphers, such as DES.)J108 265 :M1.019 .102(Multiple transformations can often be applied equally well either to streams of)J108 289 :M.19 .019(message data or confusion data, although the purposes of this paper are obviously)J108 313 :M-.085(oriented toward the generation and isolation of confusion streams.)A108 361 :Mf0_12 sf.395 .039(5.1  One-Way Functions)J144 385 :Mf3_12 sf-.069(One-way functions are easy to compute but hard to invert [e.g., 40; 40: 161-)A108 409 :M-.058(164; 40]; that is, they make it difficult to find the generating value )Af4_12 sf-.071(even)Af3_12 sf-.076( when given)A108 433 :Mf4_12 sf-.03(both)Af3_12 sf-.023( the result )Af4_12 sf-.033(and)Af3_12 sf-.028( the function which produced it. Examples of one-way functions)A108 457 :M-.064(include "the exponential in some finite field: y)AcF f1_12 sf-.064(9)Asf-.064(=)AcF f1_12 sf-.064(9)Asf-.064(a)A0 -3 rm-.083(x)A0 3 rm-.069( in GF\(q\), or the power function)A108 481 :M.141 .014(in the ring of integers modulo a composite number n, the factorization of which is)J108 505 :M1.837 .184(kept secret: y)JcF f1_12 sf.184(9)Asf1.837 .184(=)JcF f1_12 sf.184(9)Asf1.837 .184(x)J0 -3 rm.449(a)A0 3 rmcF f1_12 sf.159(9)Asf1.59 .159(mod)JcF f1_12 sf.159(9)Asf1.59 .159(n" [40: 140].  In a sense, every strong cryptographic)J108 529 :M-.033(system is a one-way function [40: 351].)A144 553 :M1.564 .156(One-way functions are an integral part of the new theoretical work in)J108 577 :M-.062(cryptography, including Shamir [40], Winternitz [40], and Levin [40]; \(there is also)A108 601 :M.798 .08(a significant paper by Yao [40], which I have not seen\). One-way functions are)J108 625 :M.527 .053(closely related to "unpredictable" RNG's, as developed in Blum, Blum and Shub)J108 649 :M.224 .022([40], Blum and Micali [40], Vazirani and Vazirani [40] and Goldreich, Krawczyk)J108 673 :M-.023(and Luby [40], among others.)Aendp%%Page: 41 41%%BeginPageSetupinitializepage(TARDIS; page: 41 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 41)J144 121 :Mf3_12 sf-.071(It might seem that even a simple counting sequence into a one-way function)A108 145 :M.396 .04(must produce a sequence of pseudo-random values, and so be yet another way to)J108 169 :M1.83 .183(construct an RNG.  Unfortunately, Shamir [41] shows that while a one-way)J108 193 :M2.006 .201(function may be difficult to invert for individual values, the same does not)J108 217 :M.325 .032(necessarily apply to sequences \(his example is the RSA encryption function [41],)J108 241 :M.298 .03(and he does give a different construction for a good RNG using RSA\).  A similar)J108 265 :M.116 .012(proposal is sometimes mentioned with respect to DES [e.g., 41: 315-316], as is an)J108 289 :M.051 .005(iterative RNG technique [41: 316-317].  But it seems unlikely that we will ever be)J108 313 :M.412 .041(able to provide a theoretical guarantee of the minimum cycle length produced by)J108 337 :M-.012(such a complex mechanism.)A144 361 :M.338 .034(A one-way function clearly requires some sort of driving sequence. But if)J108 385 :M1.199 .12(the next driving value is taken from the preceding result, we have yet another)J108 409 :M-.043(iterative mechanism which needs a theory of operation with respect to short cycles.)A108 433 :M.712 .071(If the next driving value comes from a table, we would have to generate a huge)J108 457 :M-.019(ciphering table for the longest possible message, a table which must be transported)A108 481 :M.265 .027(and held in secrecy for deciphering.  And if the next driving value is generated in)J108 505 :M-.034(real-time, there must be some sort of driving value generator; that generator cannot)A108 529 :M.387 .039(be trivial, for we assume that the generator structure, the one-way function itself,)J108 553 :M1.649 .165(and a long sequence of results, are all known to a cryptanalyst.  A counting)J108 577 :M1.017 .102(sequence of driving values is unlikely to resist cryptanalysis for long, unless it)J108 601 :M.395 .039(comes from an extremely large counter \(at least 64 bits wide\) )Jf4_12 sf.137(and)Af3_12 sf.364 .036( all the counter)J108 625 :M.093 .009(bits are used by the one-way function.  Note that an exhaustive search for the start)J108 649 :M-.023(of a counter-generated driving sequence would seem to be the )Af4_12 sf-.022(ideal)Af3_12 sf-.022( application for)A108 673 :M.507 .051(a system with massive parallel search hardware; such a system might speed up a)Jendp%%Page: 42 42%%BeginPageSetupinitializepage(TARDIS; page: 42 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 42)J108 121 :Mf3_12 sf.911 .091(software search by a factor of a million or more.  A reasonable alternative to a)J108 145 :M-.077(counter would be a large LFSR with a customized primitive polynomial.)A144 169 :M1.683 .168(There is at least one more possibility for driving a one-way function,)J108 193 :M-.062(specifically, to use ciphertext \(combined plaintext and one-way function output\), or)A108 217 :M-.059(some function partially including ciphertext.  This is the basis for an )Af4_12 sf-.069(autokey)Af3_12 sf-.071( cipher)A108 241 :M.006 .001([42, 42], which will be discussed again later with respect to PKZIP.  In an autokey)J108 265 :M1.286 .129(cipher, the cryptanalyst necessarily has direct access to the sequence which is)J108 289 :M-.057(generating the keying sequence, since this is \(or is some function of\) the ciphertext.)A108 313 :M.765 .077(This is worrisome, since the one-way function in an autokey cipher thus carries)J108 337 :M-.117(virtually the entire burden of cryptographic strength.)A144 361 :M.182 .018(A one-way function would seem to be the ideal randomizer and isolator to)J108 385 :M.435 .043(protect another RNG, but the one-way functions in the literature tend to be slow.)J108 409 :M1.232 .123(Of course, this problem may be more related to the use of functions based on)J108 433 :M-.062(arithmetic \(where centuries of work have built a substantial basis for development\),)A108 457 :M-.095(than the lack of existence of other types of one-way functions.)A108 505 :Mf0_12 sf.195 .019(5.2  Checksum Algorithms)J144 529 :Mf3_12 sf.636 .064(Some functions are designed to produce a short result value from a large)J108 553 :M1.232 .123(amount of data or a message; these are known as "checksum" or "fingerprint")J108 577 :M.09 .009(algorithms.  Such schemes are clearly impossible to invert simply because there is)J108 601 :M1.535 .154(not enough information in the result to do so.  On the other hand, it may be)J108 625 :M-.063(possible to find a different message which has the same fingerprint.)A144 649 :M-.034(Common "checksum" algorithms, such as CRC, are good for detecting data)A108 673 :M-.107(errors, but not so good for authentication; it may be possible to deliberately generate)A108 697 :M-.073(a message with a particular CRC value.  In contrast, Message Authentication Codes)Aendp%%Page: 43 43%%BeginPageSetupinitializepage(TARDIS; page: 43 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 43)J108 121 :Mf3_12 sf.33 .033(\(MAC's\) [e.g., 43] and Message Detection Codes \(MDC's\) [e.g., 43] are intended)J108 145 :M1.111 .111(to make it difficult to generate a message with a particular fingerprint; MAC's)J108 169 :M.159 .016(generally use a secret key, while MDC's are completely public.  For example, one)J108 193 :M2.316 .232(MAC uses DES in cipher block chaining mode [43].  An interesting table)J108 217 :M-.052(technique is proposed in Pearson [43].)A108 265 :Mf0_12 sf.348 .035(5.3  CRC's)J144 289 :Mf3_12 sf-.031(A Cyclic Redundancy Check \(CRC\) [e.g., 43] is a shift-register mechanism)A108 313 :M-.07(closely related to the LFSR except that external data are fed into the mechanism.  A)A108 337 :M1.123 .112(CRC implements a mod)JcF f1_12 sf.112(9)Asf1.123 .112(2 polynomial division [43: 210] or )Jf4_12 sf.342(modulo)Af3_12 sf1.465 .146( operation,)J108 361 :M1.014 .101(producing only the remainder as a result.  Normally, CRC's are used for error-)J108 385 :M1.155 .115(detection, since they can generate a small value which is a function of a large)J108 409 :M.57 .057(amount of data \(such as an entire file, or perhaps a disk or data communications)J108 433 :M.473 .047(block\).  The resulting CRC value is stored or sent with the original data; another)J108 457 :M-.013(CRC is computed when the data are recovered or received, and if the CRC's match)A108 481 :M-.085(the data are assumed correct.  If the CRC's do not match, the equipment can arrange)A108 505 :M1.638 .164(to re-read or re-send the original data.  The same idea can be used to check)J108 529 :M.899 .09(computer files for unauthorized modification, such as might occur from a virus)J108 553 :M.05(program.)A144 577 :M.951 .095(A CRC can also be used to process a user's key phrase into a particular)J108 601 :M1.628 .163(arbitrary value.  Multiple different polynomials can be employed to generate)J108 625 :M-.029(different CRC results, and the entire set of such results might be used to initialize a)A108 649 :M-.042(large RNG.  CRC mechanisms can apparently also be used as randomizers.)A108 697 :Mf0_12 sf(5.4  Randomizers)Sendp%%Page: 44 44%%BeginPageSetupinitializepage(TARDIS; page: 44 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 44)J144 121 :Mf3_12 sf.491 .049(Presumably, the intent of a randomizer mechanism would be to convert a)J108 145 :M1.188 .119(known or related sequence into a more complex or less related sequence, thus)J108 169 :M1.346 .135(improving its "randomness."  Obviously, such a scheme might well provide a)J108 193 :M-.084(substantial amount of isolation as well.)A144 217 :M3.819 .382(Originally, randomizers were proposed to improve the statistical)J108 241 :M.881 .088(distribution of simple LCG RNG's; these schemes generally used a table which)J108 265 :M-.04(collected random values and released those values after some delay. MacLaren and)A108 289 :M.096 .01(Marsaglia [44: 31-32 )JcF f1_12 sf.01(@)Asf.096 .01(3.2.2; 44] used one sequence to fill the table and another to)J108 313 :M.789 .079(select the output values.  Bays and Durham [44: 32-33 )JcF f1_12 sf.079(@)Asf.789 .079(3.2.2; 44] used a value)J108 337 :M-.127(from a single sequence to both select the output value and replace the selected value.)A108 361 :M.097 .01(The MacLaren and Marsaglia scheme is especially interesting since it has actually)J108 385 :M-.002(been used in a cryptographic design, a design which was completely penetrated by)A108 409 :M-.087(Retter [44, 44].)A144 433 :M.006 .001(An alternate technique, an extension of the work by Chaitin [44], would be)J108 457 :M.477 .048(to use one or more data-compression techniques to "compress" a pseudo-random)J108 481 :M-.059(sequence.  Since the resulting data would not later be un-compressed, there need be)A108 505 :M1.418 .142(no indication in the data of the compression technique used, and certainly no)J108 529 :M-.015(expansion table need be sent with the data.  Presumably the resulting output would)A108 553 :M-.052(be more complex, and thus, even more random, than the original.)A108 601 :Mf0_12 sf-.056(5.4.1  Theoretical Randomizers)A144 625 :Mf3_12 sf.099 .01(An interesting paper by Santha and Vazirani [44] deals with increasing the)J108 649 :M.237 .024(randomness of sequences; the paper directly addresses the topic of physical semi-)J108 673 :M1.098 .11(random sources \(e.g., zener diodes, geiger counters\). In general, sequences are)J108 697 :M.663 .066(combined with the parity function \(exclusive-OR\), and the result is shown to be)Jendp%%Page: 45 45%%BeginPageSetupinitializepage(TARDIS; page: 45 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 45)J108 121 :Mf3_12 sf.644 .064(less predictable than any of the sequences considered independently.  The result)J108 145 :M-.08(certainly seems reasonable and is extended by Chor and Goldreich [45].)A144 169 :M1.251 .125(However, as David Lewis at the University of Toronto described in an)J108 193 :M1.819 .182(article on USENET, if the semi-random sources are statistically unbalanced,)J108 217 :M.379 .038(exclusive-ORing them will not produce a balanced result.  Consider two sources,)J108 241 :M-.033(with a "1's" probability of 0.3 and 0.4 respectively:  We get a '1' when both sources)A108 265 :M2.331 .233(are '1' \(0.3)JcF f1_12 sf.233(9)Asf2.331 .233(*)JcF f1_12 sf.233(9)Asf2.331 .233(0.4)JcF f1_12 sf.233(9)Asf2.331 .233(=)JcF f1_12 sf.233(9)Asf2.331 .233(0.12\), or both '0' \(0.7)JcF f1_12 sf.233(9)Asf2.331 .233(*)JcF f1_12 sf.233(9)Asf2.331 .233(0.6)JcF f1_12 sf.233(9)Asf2.331 .233(=)JcF f1_12 sf.233(9)Asf2.331 .233(0.42\), for a resulting "1's")J108 289 :M.634 .063(probability of 0.54.  Much better, of course, than 0.3 or 0.4, but still not exactly)J108 313 :M1.6 .16(0.50.  Can we ever be sure that a physical semi-random source will produce)J108 337 :M.171 .017(balanced results?  Lewis also pointed out that exclusive-ORing is inefficient in its)J108 361 :M.189 .019(use of randomness.)J144 385 :M.389 .039(An earlier paper by Blum [45] extends an idea by von Neumann [45] to a)J108 409 :M-.062(more general mechanism.  von Neumann was interested in getting an unbiased coin)A108 433 :M.077 .008(flip from a biased coin; his trick was to toss the coin twice until either heads-then-)J108 457 :M-.095(tails or tails-then-heads was finally obtained.  Arbitrarily, one of these combinations)A108 481 :M.401 .04(is called "heads" and the other "tails."  Because an occurrence of each of the two)J108 505 :M1.776 .178(possible elemental actions is required to produce a final result, the effect of)J108 529 :M-.117(unbalanced probabilities is seemingly negated.)A144 553 :M1.357 .136(Blum generalizes the idea to multi-state mechanisms, showing that the)J108 577 :M.309 .031(obvious extension does not work, although he provides another form which does.)J108 601 :M.274 .027(Such a mechanism might provide a strong amount of randomization and isolation)J108 625 :M.037 .004(\(but see Rudich [45]\), although it does require some computation.  In addition, the)J108 649 :M.04 .004(von Neumann trick depends upon the independence of the individual trials; if they)J108 673 :M1.464 .146(are in some way "correlated," the trick is probably invalid.  Some amount of)J108 697 :M-.077(correlation seems likely in an RNG.)Aendp%%Page: 46 46%%BeginPageSetupinitializepage(TARDIS; page: 46 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 46)J108 145 :M.356 .036(5.4.2  Randomizers in PKZIP)J144 169 :Mf3_12 sf2.04 .204(Randomizers are currently in use in computer ciphers for converting)J108 193 :M1.226 .123(ciphertext into a pseudo-random sequence, as in PKZIP [46].  PKZIP is a file)J108 217 :M1.529 .153(compression and archiving program which includes an encryption option.  In)J108 241 :M-.099(PKZIP encryption \(attributed to Roger Schlafly\), the ciphertext data are randomized)A108 265 :M2.802 .28(by three successive mechanisms to produce the pseudo-random confusion)J108 289 :M.205 .021(sequence which is used in a Vernam combiner; it is thus a form of )Jf4_12 sf.07(autokey)Af3_12 sf.272 .027( cipher)J108 313 :M.356 .036([e.g., 46, 46].  These randomizers seem to depend upon outputting only a portion)J108 337 :M-.074(of their state, an amount equal to their unknown input data.  Even if the information)A108 361 :M.515 .051(in the output was properly interpreted, the input data would seem to increase the)J108 385 :M-.086(internal information by an amount equal to the best possible analysis.)A144 409 :M-.032(Two of the three PKZIP randomizers are based on the well-known CRC-32)A108 433 :M1.167 .117(algorithm [e.g. 46, 46], in which an 8-bit data value is combined into a 32-bit)J108 457 :M-.074(LFSR.  In one mechanism, only the least-significant 8)AcF f1_12 sf-.074(9)Asf-.074(bits are used as output; in the)A108 481 :M-.062(other, the most-significant 8 bits are used.  Since each input value is randomized by)A108 505 :M-.031(the CRC operation, and since only a part of the CRC value is output, an analysis of)A108 529 :M.47 .047(any particular complete CRC state \(on the way to finding the input value\) would)J108 553 :M.911 .091(seem difficult.  Despite the fact that this is a linear system, if the values which)J108 577 :M.193 .019(complicate the system on each step are unknown, the system would apparently be)J108 601 :M-.154(hard to penetrate.)A144 625 :M.421 .042(The other PKZIP randomizer seems based on a simple LCG, and consists)J108 649 :M.206 .021(of multiplication by a large value \(which will truncate mod 2)J0 -3 rm.068(32)A0 3 rm.206 .021(\) plus an addition;)J108 673 :M-.068(only the least-significant 8-bits are used as output.  Again, since it receives as much)A108 697 :M.171 .017(information as it produces, this system may be difficult to analyze, despite having)Jendp%%Page: 47 47%%BeginPageSetupinitializepage(TARDIS; page: 47 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 47)J108 121 :Mf3_12 sf-.094(only a small amount of internal state.  It is tempting to consider the general idea that)A108 145 :M.813 .081(any form of RNG could be converted to a randomizer by using external data to)J108 169 :M-.095(additionally transform the internal RNG state after each RNG step.)A144 193 :M2.03 .203(Since the very worth of a randomizer depends upon making a given)J108 217 :M1.839 .184(sequence more difficult to analyze, such mechanisms really need substantial)J108 241 :M2.913 .291(mathematical analysis.  I am not aware of any work on the PKZIP-type)J108 265 :M-.051(mechanisms; are they "one-way" functions?)A108 313 :Mf0_12 sf.123 .012(5.5  Isolation Techniques)J144 337 :Mf3_12 sf.628 .063(A mechanism used mainly to complicate an external analysis of an RNG)J108 361 :M.506 .051(may be called an )Jf4_12 sf.16(isolator)Af3_12 sf.541 .054(.  In contrast to a randomizer, an isolator need not deal)J108 385 :M.791 .079(with the concept of randomness; its purpose is to hide information or confuse a)J108 409 :M.007 .001(sequence in order to complicate any attempt at external analysis.  This limited role)J108 433 :M.193 .019(would seem to be amenable to an eventual theoretical analysis.  Some approaches)J108 457 :M-.236(include:)A144 505 :Mf0_12 sf1.402 .14(1.  Use a subset of RNG bits)Jf3_12 sf1.366 .137( [e.g., 47, but see 47].  In particular, an)J144 529 :M-.062(Additive RNG includes a substantial amount of carry information \(the carry)A144 553 :M.952 .095(into higher bits of the result\), and any particular bit of the result can be)J144 577 :M-.09(wildly affected by lower bits.  If the lower bits are not available for analysis,)A144 601 :M1.087 .109(the system should be more difficult to solve. In fact, hidden bits would)J144 625 :M.154 .015(seem to make the RNG exponentially \(2)J0 -3 rm(n)S0 3 rm.149 .015( times, for n hidden bit-columns\))J144 649 :M-.022(more complex.  The unused data need not increase execution time by much)A144 673 :M-.1(if the extra bits are gained by widening a "vertical" system.)Aendp%%Page: 48 48%%BeginPageSetupinitializepage(TARDIS; page: 48 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 48)J144 121 :M3.217 .322(2.  Use a pseudo-random delete filter or )Jf6_12 sf.785(jitterizer)Af0_12 sf2.608 .261( to create a)J144 145 :M.215 .021(discontinuous sequence.)Jf3_12 sf.105 .011(  \(An oscilloscope display which is only partially)J144 169 :M1.004 .1(synchronized is said to )Jf4_12 sf.222(jitter)Af3_12 sf.964 .096( [e.g., 48: 357].\)  Such a mechanism might)J144 193 :M.475 .048(occasionally delete values from the pseudo-random stream, thus allowing)J144 217 :M.605 .06(an analyst to see only aperiodic batches of the sequence.  The number of)J144 241 :M1.617 .162(values skipped and the number allowed before the next skip could be)J144 265 :M2.072 .207(dynamic and pseudo-random; this should complicate a simultaneous-)J144 289 :M-.198(equation attack.)A144 313 :Mf0_12 sf.873 .087(3.  Use deleted values)Jf3_12 sf.651 .065( \(see 2, above\) )Jf0_12 sf.984 .098(to provide an additive offset for)J144 337 :M5.755 .575(jitterizer output values.)Jf3_12 sf3.323 .332(  Not only would such a sequence be)J144 361 :M1.812 .181(discontiguous, each contiguous segment would have a different value)J144 385 :M-.081(offset.  This should not change the value distribution and would also be fast.)A144 433 :Mf0_12 sf1.293 .129(4.  Use polyalphabetic substitution to hide the RNG sequence.)Jf3_12 sf.638 .064(  The)J144 457 :M1.457 .146(idea would be to use a few output bits to select an alphabet, and then)J144 481 :M.293 .029(translate the rest of the output bits through that alphabet. Although simple)J144 505 :M1.811 .181(substitution is generally thought to be weak, that is in the context of)J144 529 :M3.104 .31(messages which normally have an uneven and predictable symbol)J144 553 :M1.531 .153(distribution.  In contrast, an RNG should have a good pseudo-random)J144 577 :M.292 .029(symbol distribution, which should make even simple substitution tough to)J144 601 :M-.087(crack.  The substitution system could be fairly quick.)A144 649 :Mf0_12 sf1.024 .102(5.  Use a randomizer.  )Jf3_12 sf1.572 .157(If a randomizer further randomizes an already)J144 673 :M.629 .063(random sequence, it should also hide the original sequence and protect it)J144 697 :M(from analysis.)Sendp%%Page: 49 49%%BeginPageSetupinitializepage(TARDIS; page: 49 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 49)J144 145 :M4.964 .496(6.  Use "polyalphabetic" randomizers.)Jf3_12 sf2.536 .254(  In the same way that)J144 169 :M.098 .01(polyalphabetic substitution selects between multiple substitution maps, the)J144 193 :M.579 .058(RNG could select between multiple randomizer mechanisms. This would)J144 217 :M1.753 .175(be almost as quick as a single randomizer, but should be much more)J144 241 :M-.179(difficult to penetrate.)A144 289 :Mf0_12 sf1.906 .191(7.  Use different polynomials to develop the feedback and output)J144 313 :M.12(values.)Af3_12 sf.468 .047(  Simultaneous equations would seem to require knowledge of the)J144 337 :M.192 .019(internal states in order to solve the output equation, or vise versa; multiple)J144 361 :M.143 .014(polynomials may prevent such attacks.  The output polynomial could even)J144 385 :M.087 .009(be non-linear [49, 49; but see 49].  The use of dual polynomial evaluations)J144 409 :M-.096(for each step would seem to at least double the computational effort.)A144 457 :Mf0_12 sf.534 .053(8.  Split the RNG values into two parts and combine the parts with a)J144 481 :M.268 .027(cryptographic combiner.)Jf3_12 sf.102 .01(  If a combiner can be considered a good way to)J144 505 :M.433 .043(hide plaintext, it should be far stronger when hiding pseudo-random data.)J144 529 :M-.062(This should be quick, but would require a pseudo-random value of typically)A144 553 :M-.117(twice the required output width.)A144 601 :M.904 .09(No doubt there are many possible isolation mechanisms, some of which)J108 625 :M.319 .032(may provide only the illusion of protection.  It is difficult not to see a message in)J108 649 :M-.085(the apparently effective technique described by Geffe [49], and its eventual analysis)A108 673 :M1.958 .196(by Siegenthaler [49].  \(Also see other "correlation attack" papers by Mund,)Jendp%%Page: 50 50%%BeginPageSetupinitializepage(TARDIS; page: 50 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 50)J108 121 :Mf3_12 sf-.071(Gollmann and Beth [50], and Meier and Staffelbach [50].\)  A significant theoretical)A108 145 :M-.051(analysis of various isolation mechanisms is sorely needed.)A108 193 :Mf0_12 sf1.412 .141(6. OTHER RANDOMNESS TECHNIQUES)J144 217 :Mf3_12 sf-.009(In addition to the RNG's of the previous section, various related techniques)A108 241 :M.355 .036(can be useful in cryptography.  For example, "really random" numbers are useful)J108 265 :M-.087(as message keys.  Short cycle detection can prevent repetition when a design cannot)A108 289 :M2.316 .232(preclude short cycles.  Issues of polynomial degree, number of terms, and)J108 313 :M.937 .094(primitive polynomials become important for mod 2 shift register systems.  The)J108 337 :M.699 .07(output from any two RNG's can be combined into a more complex result, and a)J108 361 :M-.06(pseudo-random sequence can be used to create random permutations.)A108 409 :Mf0_12 sf.207 .021(6.1  "Really Random" Values)J144 433 :Mf3_12 sf.45 .045(In the design of cryptographic systems, it is often useful to have a "really)J108 457 :M.136 .014(random" value, one not produced by a possibly-weak pseudo-random mechanism.)J108 481 :M2.098 .21(A really random value is easily protected by encryption, and can be safely)J108 505 :M.159 .016(transported even with a weak cipher.  The result is a secure arbitrary value, which)J108 529 :M.222 .022(can be quite large, and which can be used to initialize an RNG; this is a form of a)J108 553 :M-.013(message key [e.g., 50].)A144 577 :M1.431 .143(Special hardware \(such as multiple asynchronous oscillators [e.g., 50],)J108 601 :M1.096 .11(oscillators in chaos [e.g., 50, 50], or integrated circuit capacitor "dark current")J108 625 :M-.033(comparisons [50]\) can be developed to produce "true random" values.  Alternately,)A108 649 :M1.437 .144("semi-random" physical events \(such as geiger-counter pulses, or zener diode)J108 673 :M.098 .01(noise\) can be made "more random" [e.g., 50, 50]. \(As noted earlier, even quantum)J108 697 :M.011 .001(events_such as radioactive decay_may actually represent a complex internal logic,)Jendp%%Page: 51 51%%BeginPageSetupinitializepage(TARDIS; page: 51 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 51)J108 121 :Mf3_12 sf1.705 .171(and so may not be "essentially" random [51].\)  Another possibility is to use)J108 145 :M.731 .073(randomized precision timing measurements of human physical actions [e.g., 51:)J108 169 :M(148].)S108 217 :Mf0_12 sf-.067(6.2  Cycle Detection)A144 241 :Mf3_12 sf-.056(Since the repeated use of a short RNG sequence is a serious concern, it may)A108 265 :M.163 .016(be reasonable to try to detect such a cycle.  For tiny RNG's it is possible to keep a)J108 289 :M.228 .023(list of each encountered state \(we may have started on an arc and only later join a)J108 313 :M-.079(cycle\) and check for re-use on each step, but real RNG's are much too large for this.)A108 337 :M.267 .027(Of course it is easy to detect a degenerate cycle, since it is only necessary to save)J108 361 :M.19 .019(the one immediately-previous state and ensure that each step differs from the last,)J108 385 :M-.129(but it is usually difficult to guarantee that degenerate cycles are the only problem.)A144 409 :M-.064(Another possibility is an idea attributed to Floyd [51: 7 )AcF f1_12 sf-.064(@)Asf-.064(3.1.6\(b\); 51]:  Two)A108 433 :M.156 .016(identical RNG's are used, set to the same initial state, and one is stepped twice for)J108 457 :M-.079(each step of the other, which produces the cryptographic sequence.  The two RNG's)A108 481 :M.129 .013(should again have the same state only when the faster RNG has stepped through a)J108 505 :M.476 .048(cycle and has caught up with the first RNG.  By comparing the RNG states after)J108 529 :M.291 .029(each value is produced, it should be possible to detect a repetition without a huge)J108 553 :M-.037(amount of storage.)A144 577 :M-.043(Naturally, performing )Af4_12 sf-.043(three)Af3_12 sf-.044( RNG steps for each random value just to detect)A108 601 :M2.217 .222(an impending short cycle is a serious additional cost.  Moreover, even the)J108 625 :M1.11 .111(comparison operation between the complete states of two large RNG's may be)J108 649 :M-.109(expensive.)A144 673 :M.319 .032(Then, supposing the system does detect an impending cycle, what is to be)J108 697 :M2.408 .241(done?  Presumably such a cryptosystem design would include a family of)Jendp%%Page: 52 52%%BeginPageSetupinitializepage(TARDIS; page: 52 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 52)J108 121 :Mf3_12 sf-.05(initializations, of which only the first is normally used, but with others which could)A108 145 :M-.1(be used to restart the RNG's in the event of a repetition.)A108 193 :Mf0_12 sf-.046(6.3  Polynomial Degree)A144 217 :Mf3_12 sf1.567 .157(Because of the particular form of shift register used in the GFSR and)J108 241 :M-.042(Additive RNG designs, the exact same mechanism and storage can accommodate a)A108 265 :M1.268 .127(wide range of polynomial lengths.  Since sequence length is a function of the)J108 289 :M1.421 .142(polynomial degree, in general we want as large a polynomial as possible.  In)J108 313 :M.087 .009(practice, computer memory will rarely limit the desired degree of the RNG, so the)J108 337 :M-.135(degree will typically be limited by the availability of a primitive polynomial.)A144 361 :M1.046 .105(Checking whether large-degree polynomials are primitive can involve a)J108 385 :M-.003(large amount of computation.  Nevertheless, some degree 1279 primitive is almost)A108 409 :M.134 .013(certain to be found over a continuous 64-hour weekend using an old 8088 system,)J108 433 :M-.044(and a degree 4253 primitive should be well within the range of a modern 80386.  If)A108 457 :M.883 .088(the polynomials do not need to be user-customized, even degree 11213 may be)J108 481 :M.844 .084(practical, so there could easily be 11,213 * 32 = 358,816 bits involved in RNG)J108 505 :M.077 .008(operations.  This amount of state is quite a contrast to the common 32-bit LCG, or)J108 529 :M.498 .05(even a 400 decimal digit x)J0 -3 rm.179(2)A0 3 rmcF f1_12 sf.063(9)Asf.626 .063(mod)JcF f1_12 sf.063(9)Asf.626 .063(N generator \(which would have a total internal)J108 553 :M.684 .068(state of about 1400 bits\).  To the extent that cryptanalysis is complicated by the)J108 577 :M-.107(amount of internal state, this is a substantial difference.)A144 601 :M.867 .087(A degree 1279 primitive can produce an incredibly long sequence. How)J108 625 :M.078 .008(long?  Well, suppose our design becomes popular, and by the end of the century it)J108 649 :M.991 .099(occupies 1 billion \(10)J0 -3 rm.297(9)A0 3 rm.386 .039( = 2)J0 -3 rm.259(29.9)A0 3 rm.977 .098(\) channels, each madly sending out 100 million)J108 673 :M.053(\(10)A0 -3 rm.059(8)A0 3 rm.077 .008( = 2)J0 -3 rm.052(26.6)A0 3 rm.173 .017(\) bytes per second.  Assuming a "vertical" design, using a single step)J108 697 :M-.049(per enciphered byte, a century \(3.2)AcF f1_12 sf-.049(9)Asf-.049(x)AcF f1_12 sf-.049(9)Asf-.049(10)A0 -3 rm-.061(9)A0 3 rm-.05( = 10)A0 -3 rm-.051(9.5)A0 3 rm-.048( = 2)A0 -3 rm-.053(31.5)A0 3 rm-.05( seconds\) of such use will)Aendp%%Page: 53 53%%BeginPageSetupinitializepage(TARDIS; page: 53 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 53)J108 123 :Mf3_12 sf2.097 .21(cover about 10)J0 -3 rm.525(26.5)A0 3 rm.782 .078( = 2)J0 -3 rm.6(88)A0 3 rm1.411 .141( elements, out of the total of 2)J0 -3 rm.6(1279)A0 3 rm1.277 .128(-1.  Due to the)J108 147 :M.102 .01("birthday paradox" some repetition may occur, but such overlaps will be very rare)J108 171 :M1.173 .117(and plenty hard to find.  Thus, a degree 1279 RNG produces a "long enough")J108 195 :M1.638 .164(sequence \(although a long sequence by itself certainly does not eliminate all)J108 219 :M-.127(avenues of attack\).)A144 243 :M-.076(Naturally, the state of the RNG must be initialized prior to the production of)A108 267 :M2.108 .211(random numbers, and the more state there is, the more time this will take.)J108 291 :M1.339 .134(However, the same state which must be initialized is also that which must be)J108 315 :M.427 .043(recovered through cryptanalysis in order to fully penetrate the RNG, so the more)J108 339 :M-.078(state there is, the better the secrecy should be. RNG's with large amounts of internal)A108 363 :M-.006(state also support large keys; 256 bits \(32 bytes\) may be a reasonable )Af4_12 sf-.008(minimum)Af3_12 sf( for)S108 387 :M.087 .009(keys in serious new systems [53].)J108 435 :Mf0_12 sf.092 .009(6.4  Sequence Customization and Number of Terms)J144 459 :Mf3_12 sf-.021(Any linear shift register RNG can easily be customized simply by selecting)A108 483 :M2.179 .218(any one of the many possible primitive polynomials as a feedback system.)J108 507 :M.025 .002(Primitive trinomials \(3-term polynomials\) are popular in the literature [e.g, 53, 53,)J108 531 :M.537 .054(53].  Of course, if RNG customization is to be used as a key, it is necessary that)J108 555 :M.224 .022(there be a large number of customizing polynomials, or the customization has not)J108 579 :M-.059(helped much.)A144 603 :M.043 .004(For example, at degree 1279 there are only 1278 possible trinomials which)J108 627 :Mf4_12 sf.034(might)Af3_12 sf.1 .01( be primitive, and probably just two will be.  If a system requires a trinomial)J108 651 :M.674 .067(of some particular degree, a cryptanalyst could just pre-verify the relatively few)J108 675 :M.296 .03(possibilities, then simply try each one.  In contrast, there are about 10)J0 -3 rm.103(18)A0 3 rm.268 .027( "odd" 9-)J108 699 :M1.226 .123(nomials of degree 1279, and so about 10)J0 -3 rm.412(15)A0 3 rm1.34 .134( primitives \(a 51-bit value\), which)Jendp%%Page: 54 54%%BeginPageSetupinitializepage(TARDIS; page: 54 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 54)J108 121 :Mf3_12 sf-.026(should at least complicate a brute force attack on the polynomial.  \(There are about)A108 145 :M.438(10)A0 -3 rm.438(22)A0 3 rm1.262 .126( "odd" 9-nomials of degree 4253, and so about 10)J0 -3 rm.438(18)A0 3 rm1.383 .138( primitives, a 62-bit)J108 169 :M.253 .025(value.\)  In a real sense, the polynomial will be a sort of main key, required, along)J108 193 :M-.171(with initialization, to generate a particular sequence.)A144 217 :M1.343 .134(A 9-nomial will also imply that each pseudo-random value will be the)J108 241 :M.177 .018(combination of 8 unknown elements, which should further complicate an external)J108 265 :M1.129 .113(analysis [54].  And there is some reason to believe that the resulting sequence)J108 289 :M-.056(would be more random than one generated by a trinomial [54: 419, 421].)A108 337 :Mf0_12 sf.137 .014(6.5  Finding Primitive Mod 2 Polynomials)J144 361 :Mf3_12 sf1.855 .185(In order to support user customization of the various maximal-length)J108 385 :M.589 .059(RNG's, it is necessary to find primitive mod 2 polynomials.  Most methods start)J108 409 :M-.038(out by finding an )Af4_12 sf-.039(irreducible)Af3_12 sf-.041( mod 2 polynomial.  Normally, only )Af4_12 sf-.05(some)Af3_12 sf-.04( irreducibles)A108 433 :M1.222 .122(are primitive, but for polynomials of a degree which is a Mersenne prime, )Jf4_12 sf.442(all)A108 457 :Mf3_12 sf.857 .086(irreducibles are primitive.  Therefore, we choose a degree which is a Mersenne)J108 481 :M-.067(prime, and end up with a primitive.)A144 505 :M2.973 .297(Finding an irreducible mod 2 polynomial is closely related to the)J108 529 :M.077 .008(factorization of polynomials over finite fields, as discussed in Berlekamp [54] and)J108 553 :M.227 .023(Knuth [54].  Almost any such technique will suffice for tiny polynomials \(at least)J108 577 :M-.03(through degree 31\).  For example, a polynomial form of the ever-popular "Sieve of)A108 601 :M1.3 .13(Eratosthenes" [e.g., 54: 394 )JcF f1_12 sf.13(@)Asf1.3 .13(4.5.4.8] can reach degree 31 by using a table of)J108 625 :M.458 .046(irreducibles through degree 16 \(also produced by the sieve\); while slow, this can)J108 649 :M-.105(provide a simple validation of other techniques.)A144 673 :M.391 .039(Of course, large polynomials do require efficient processing.  Most of the)J108 697 :M1.3 .13(efficient primitive-finding techniques are generally based on the evaluation of)Jendp%%Page: 55 55%%BeginPageSetupinitializepage(TARDIS; page: 55 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 55)J108 123 :Mf3_12 sf(\(x)S0 -3 rm(2)S0 3 rm(\))S0 -3 rm(n)S0 3 rmcF f1_12 sf-.022(9)Asf-.022(mod)AcF f1_12 sf-.022(9)Asf-.022(p.  In some cases, part of the evaluation is traded for other computation,)A108 147 :M.244 .024(and some other details may be necessary depending on the specific technique and)J108 171 :M.67 .067(application.  A brief history of primitive-finding algorithms includes Swift [55],)J108 195 :M1.071 .107(Watson [55], Stahnke [55], Rabin [55], Calmet and Loos [55], Knuth [55: 438)J108 219 :McF f1_12 sf.028(@)Asf.276 .028(4.6.2.16], Ben-Or [55], and Herlestam [55].  The approach described by Watson)J108 243 :M.813 .081(is reasonable and still competitive, although the technique described by Ben-Or)J108 267 :M.322 .032(may be somewhat better for high-level implementations.  Thus we have Ben-Or's)J108 291 :M-.048("Algorithm)AcF f1_12 sf-.048(9)Asf-.048(A" [55], here cast into a sort of math/computer pseudo-code:)A216 339 :M12 f8_1 :p62 :m.172 .017(Algorithm A)J144 363 :M-.045(1.  Generate a monic random polynomial gx of degree n over GF\(q\);)A144 387 :M-.04(2.  ux := x;)A144 411 :M.021 .002(3.  for k := 1 to \(n DIV 2\) do)J144 435 :M(4.  )S180 435 :M.037 .004(ux := ux)J0 -3 rm(q)S0 3 rm.041 .004( mod gx;)J144 459 :M(5.  )S180 459 :M-.022(if GCD\(gx, ux-x\) <> 1 then go to 1 fi;)A144 483 :M(6.  )S180 483 :M(od)S108 531 :M2.32 .232(The result of the algorithm \(completing all steps\) is a certified irreducible)J108 555 :M.618 .062(polynomial \(as opposed to the "probably prime" result from probabilistic prime-)J108 579 :M.899 .09(finding algorithms\).  GF\(q\) represents the Galois Field to the prime base q; for)J108 603 :M2.379 .238(mod)JcF f1_12 sf.238(9)Asf2.379 .238(2 polynomials, q)JcF f1_12 sf.238(9)Asf2.379 .238(is)JcF f1_12 sf.238(9)Asf2.379 .238(2.  These computations require mod 2 polynomial)J108 627 :M1.723 .172(arithmetic operations for polynomials of large degree; "ux)J0 -3 rm.474(q)A0 3 rm1.407 .141(" is a polynomial)J108 651 :M1.581 .158(squared, and "mod gx" is a polynomial division.  A monic polynomial has a)J108 675 :M-.014(leading coefficient of 1; this is a natural consequence of mod 2 polynomials of any)Aendp%%Page: 56 56%%BeginPageSetupinitializepage(TARDIS; page: 56 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 56)J108 121 :Mf3_12 sf-.064(degree.  The first step assigns the polynomial "x" to the variable ux; the polynomial)A108 145 :M("x" is x)S0 -3 rm(1)S0 3 rm.014 .001(, otherwise known as "10".)J144 169 :M1.835 .183(The squaring and reduction of step 4 represent fairly complex mod)JcF f1_12 sf.183(9)Asf1.835 .183(2)J108 193 :M.094 .009(polynomial operations \(instead of conventional computer language features which)J108 217 :M1.243 .124(operate on tiny integer values\).  But the real expense is the greatest-common-)J108 241 :M.075 .008(divisor \(GCD\) operation of step 5, since this implies repeated polynomial division)J108 265 :M.46 .046(by large-degree polynomial divisors.  \(For discussions on polynomial arithmetic,)J108 289 :M.66 .066(see, for example, Knuth [56: 399-416 )JcF f1_12 sf.066(@)Asf.66 .066(4.6], Arazi [56], Blahut [56], Swift [56],)J108 313 :M-.046(MacWilliams and Sloane [56], and Berlekamp [56].\))A144 337 :M.438 .044(Note that the time-to-success for algorithm A is random, in the sense that)J108 361 :M-.063(an arbitrary polynomial is formed and then checked; the first value may succeed, or)A108 385 :M1.302 .13(the process may )Jf4_12 sf.397(never)Af3_12 sf.936 .094( succeed.  But over a )Jf4_12 sf.378(large)Af3_12 sf1.291 .129( number of trials, about two)J108 409 :M-.04(primitives should be obtained for each "n" random "odd" polynomials examined \(it)A108 433 :M1.075 .108(makes sense to check only the "odds"\); thus, if 12,800 random polynomials of)J108 457 :M.453 .045(degree 1279 are examined, about 20 primitives should be found.  In practice, the)J108 481 :M.206 .021(time to find a single primitive ranges from \(rarely\) amazingly fast through \(often\))J108 505 :M-.136(diabolically slow.)A108 553 :Mf0_12 sf.419 .042(6.6  Combined RNG's)J144 577 :Mf3_12 sf-.067(It is certainly )Af4_12 sf-.082(not)Af3_12 sf-.079( necessary to use just a single RNG alone; the outputs from)A108 601 :M2.582 .258(multiple RNG's may be )Jf4_12 sf.804(combined)Af3_12 sf3.004 .3( to produce a more-complex sequence.)J108 625 :M1.874 .187(Examples include MacLaren and Marsaglia [56], Westlake [56], Groth [56],)J108 649 :M1.472 .147(Wichmann and Hill [56], Sloane [56: 91-93], Wichmann and Hill again [56],)J108 673 :M-.018(Rueppel and Staffelbach [56], and G\237nier [56] and Wikramaratna [56].  Of course,)A108 697 :M1.616 .162(RNG sequences can be combined in a complex cryptographic combiner, but,)Jendp%%Page: 57 57%%BeginPageSetupinitializepage(TARDIS; page: 57 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 57)J108 121 :Mf3_12 sf2.917 .292(normally, combination RNG designs use a simple additive combiner like)J108 145 :M.441 .044(exclusive-OR.  Experiments by Marsaglia [57] indicate that combinations of two)J108 169 :M1.206 .121(RNG's of different types seem to perform statistically better than either of the)J108 193 :M.759 .076(RNG's alone.  Both Collings [57] and Guinier [57] report success with multiple)J108 217 :M1.585 .158(instances of similar types of generator.  But Zeisel [57] shows that the three)J108 241 :M.303 .03(additively-combined LCG's of Wichmann and Hill [57] is effectively the same as)J108 265 :M-.054(one huge LCG.)A144 289 :M2.578 .258(For a combination of RNG's to make sense cryptographically, it is)J108 313 :Mf4_12 sf3.281 .328(absolutely vital)Jf3_12 sf1.82 .182( that the cryptanalyst not be able to be work on the various)J108 337 :M-.127(generators independently, and this can be a great deal trickier than one might expect.)A108 361 :M.591 .059(\(Again, see Geffe's influential early technique for combining RNG's [57], which)J108 385 :M.322 .032(seems quite strong, then see the way it was broken [57]; also note the disquieting)J108 409 :M1.987 .199(parallels to G\237nther [57].\)   Commonly used combiner mechanisms include)J108 433 :M-.081(exclusive-OR and integer addition [57].  \(Alternately, see [57, 57, 57, and 57].\))A108 481 :Mf0_12 sf.32 .032(6.7  Random Permutations)J144 505 :Mf3_12 sf1 .1(Some cryptographic systems make use of the ability to create a random)J108 529 :M.058 .006(permutation of values.  \(Some applications of a permutation sequence are given in)J108 553 :M.233 .023(Mellen [57], Levine and Brawley [57], and Levine and Chandler [57].\)  A special)J108 577 :M-.068(LCG can be designed to generate a perfect permutation, and a different LCG or any)A108 601 :M-.029(LFSR can generate an )Af4_12 sf-.029(almost)Af3_12 sf-.026( perfect permutation of the 2)A0 -3 rm(n)S0 3 rm-.025(-1 values 1..2)A0 -3 rm(n)S0 3 rm-.03(, missing)A108 625 :M-.072(only zero, and the missing zero could be inserted at random.)A144 649 :M1.16 .116(More generally, a "random" permutation can be created with a pseudo-)J108 673 :M.297 .03(random sequence which operates on some original state.  The common method is)J108 697 :M.584 .058(the "shuffle" algorithm [57; 57:)JcF f1_12 sf.058(9)Asf.584 .058(139 )JcF f1_12 sf.058(@)Asf.584 .058(3.4.2.P]:  For each element in the set, pick)Jendp%%Page: 58 58%%BeginPageSetupinitializepage(TARDIS; page: 58 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 58)J108 121 :Mf3_12 sf.784 .078(one, select some element "at random" \(from those elements not yet picked\) and)J108 145 :M.839 .084(exchange the contents of those two elements. Surprisingly, Robbins and Bolker)J108 169 :M1.906 .191([58] indicates that seemingly-similar algorithms \("students'" versions\) which)J108 193 :M.064 .006(continue to select from all possible elements are somewhat "biased"; it is not clear)J108 217 :M.713 .071(how this would affect a cryptographic system.  See Sloane [58] for an excellent)J108 241 :M-.045(overview of random permutations, and also Diaconis and Shahshahani [58].)A144 265 :M.566 .057(Discussion of the creation and randomness-measurement of permutations)J108 289 :M.157 .016(seems surprisingly muted in Knuth [58], and an explicit proof of the effectiveness)J108 313 :M1.429 .143(of the shuffle algorithm seems hard to find.  Durstenfeld [58], apparently the)J108 337 :M.812 .081(original source for shuffle, gives just an algorithm, without proof or references.)J108 361 :M1.845 .184(Page [58] seemingly gives the same algorithm, also without proof, but does)J108 385 :M.639 .064(suggest the alternative of associating an original order with random values, then)J108 409 :M-.052(sorting the random values.)A144 433 :M2.062 .206(Sandelius [58] gives a different "multistage randomization procedure)J108 457 :M1.326 .133(\(MRP\)," with proofs, in which he references Rao [58].  MRP appears to be a)J108 481 :M.338 .034(distributed form of the sorting technique:  One random bit per element sorts a set)J108 505 :M.616 .062(into two subsets, one "before" the other; the resulting subsets can then be sorted)J108 529 :M.255 .025(recursively until all elements are ordered.  Descriptions and comparisons of MRP)J108 553 :M.535 .053(and other randomization methods \(but not shuffle\) are available in Plackett [58].)J108 577 :M.315 .031(Diaconis and Graham [58] provides a welcome discussion of the measurement of)J108 601 :M.563 .056(the "disarray" of permutations. Knuth [58: 64 )JcF f1_12 sf.056(@)Asf.563 .056(3.3.2.P] provides an algorithm to)J108 625 :M-.084(convert a permutation to a unique value, so that distribution statistics can be applied)A108 649 :M-.068(to a set of permutations.)A108 697 :Mf0_12 sf1.035 .104(7. RNG EXHAUSTIVE STATE EXPERIMENTS)Jendp%%Page: 59 59%%BeginPageSetupinitializepage(TARDIS; page: 59 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 59)J144 121 :Mf3_12 sf1.726 .173(I conducted exhaustive state )Jf4_12 sf.453(experiments)Af3_12 sf1.171 .117( on a variety of sizes of four)J108 145 :M2.161 .216(candidate cryptographic RNG's:  Cellular Automata, x)J0 -3 rm.556(2)A0 3 rmcF f1_12 sf.246(9)Asf2.455 .246(mod)JcF f1_12 sf.246(9)Asf2.455 .246(N, GFSR, and)J108 169 :M-.01(Additive.  The analysis was directed at finding the length and quantity of the state-)A108 193 :M.722 .072(sequence cycles which are inevitable in a finite-state RNG.  In each case, )Jf4_12 sf.271(every)A108 217 :M.023(possible)Af3_12 sf.074 .007( RNG state was investigated and classified as part of a cycle or an arc; the)J108 241 :M-.103(number of cycle-joins and degenerate \(single-state\) cycles were also counted.)A108 289 :Mf0_12 sf.147 .015(7.1  Exhaustive State Analysis)J144 313 :Mf3_12 sf-.013(Any computer RNG will be a )Af4_12 sf-.012(finite state machine)Af3_12 sf-.013( with a limited number of)A108 337 :M.66 .066(distinct states; the different states include every possible initialization and every)J108 361 :M1.005 .101(possible )Jf4_12 sf.207(state-transition)Af3_12 sf.642 .064( or step.  In order to gain some insight on the way each)J108 385 :M.712 .071(RNG technique uses its allotted states, )Jf4_12 sf.891 .089(every possible state)Jf3_12 sf.643 .064( can be examined \(in)J108 409 :M.112 .011(tractable-size implementations\), and statistics collected.  Obviously, the examined)J108 433 :M-.052(RNG's will have to be very small to support such an analysis, but it is reasonable to)A108 457 :M.425 .042(expect that the various possibilities found in small RNG's might also be found in)J108 481 :M1.574 .157(large RNG's, which can never be completely examined.  Thus, the technique)J108 505 :M-.083(provides insight into the design.)A144 529 :M.314 .031(Exhaustive state analysis is fairly simple:  The RNG is initialized in some)J108 553 :M.418 .042(state, and then stepped to its next state; a record is kept of all encountered states.)J108 577 :M-.094(This continues until every possible state has been examined.)A144 601 :M-.088(It is convenient to define every state to be either part of a cycle, or part of an)A108 625 :M.135 .013(arc leading into a cycle.  Exhaustive state analysis can detect cycles \(because they)J108 649 :M.317 .032(re-use states within a single path\) and thus identify cycle-states.  Statistics can be)J108 673 :M.291 .029(collected about the number of states in cycles, and thus, the average cycle length,)J108 697 :M.368 .037(etc.  The total number of possible states is known, and after the cycle-states have)Jendp%%Page: 60 60%%BeginPageSetupinitializepage(TARDIS; page: 60 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 60)J108 121 :Mf3_12 sf.787 .079(been identified, the remaining states must be arc-states.  The state where an arc)J108 145 :M-.017(joins a cycle can also be identified, and so a primitive sort of average arc states per)A108 169 :M.041 .004(join measure can be developed.  \(In practice, arcs often occur in branch structures,)J108 193 :M.643 .064(where arcs join other arcs in a common trunk; thus the average arc "length"_the)J108 217 :M.47 .047(distance from its terminal cycle_may be far below the average arc states per join)J108 241 :M.436 .044(value.  However, since cycle length, rather than arc length, is generally the weak)J108 265 :M-.057(point of a design, this imprecision may not matter.\))A144 289 :M-.043(Exhaustive state analysis can yield insights into the functioning of an RNG,)A108 313 :M1.597 .16(especially for those designs which do not have a formal theory of operation.)J108 337 :M-.053(Moreover, since RNG output values may be an arbitrary function of the RNG state,)A108 361 :M.753 .075(the description of RNG state trajectories seems to be more fundamental than an)J108 385 :M.584 .058(analysis of output values.  Exhaustive state analysis is applicable to any discrete)J108 409 :M.345 .035(RNG, which is to say any computer RNG, including floating-point based designs)J108 433 :M.605 .061(\(although a special tractable-size floating-point may need to be implemented for)J108 457 :M-.029(such tests\).)A108 505 :Mf0_12 sf.219 .022(7.2  Results)J144 529 :Mf3_12 sf-.067(Some results from Cellular Automata experiments are tabulated in Figure)AcF f1_12 sf-.067(9)Asf-.067(1.)A108 553 :M.632 .063(Here there are two design variables: length \(the number of elements\), and width)J108 577 :M.88 .088(\(the number of bits in each element\).  Note the wide variation in average cycle)J108 601 :M.604 .06(length, with no clear correlation to the design variables.  The configuration with)J108 625 :M.495 .05(length 6 and width 2 presents an interesting case where virtually the entire state-)J108 649 :M-.108(space is located on arcs; the problem with this is that, within a finite state-space, any)A108 673 :M1.385 .139(arc must eventually lead to a cycle.  In this particular case, all the cycles are)J108 697 :M.417 .042(degenerate, and an arbitrary initialization may start out arbitrarily close to such a)Jendp%%Page: 61 61%%BeginPageSetupinitializepage(TARDIS; page: 61 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 61)J108 121 :Mf3_12 sf1.587 .159(cycle.  The )Jf4_12 sf.76(minimum)Af3_12 sf1.862 .186( cycle length is our normal concern, for if an RNG is)J108 145 :M.053 .005(initialized arbitrarily, it may come up in a state within a minimum-length cycle, or)J108 169 :M.84 .084(anywhere on an arc leading to such a cycle.  The minimum cycle length of CA)J108 193 :M.103 .01(RNG's seems rather short.)J144 217 :M-.03(Some results of the x)A0 -3 rm(2)S0 3 rmcF f1_12 sf-.031(9)Asf-.031(mod)AcF f1_12 sf-.031(9)Asf-.031(N experiments are tabulated in Figures 2 and 3.)A108 241 :M.017 .002(The value of N is the only design variable.  N is supposed to be the product of two)J108 265 :M1.952 .195(large primes \(P and Q\); tiny primes were used to make exhaustive analysis)J108 289 :M.107 .011(practical.  These systems are not permutation generators.  The proportion of states)J108 313 :M.128 .013(in cycles seems fairly consistent: About 3 out of 4 of the total states are arc states,)J108 337 :M.008 .001(and each of these joins a cycle in just a single step.  There are always 4 degenerate)J108 361 :M.359 .036(cycles.  Because the x)J0 -3 rm.126(2)A0 3 rmcF f1_12 sf.043(9)Asf.428 .043(mod)JcF f1_12 sf.043(9)Asf.428 .043(N design might be configured for a particular cycle,)J108 385 :M-.11(maximum cycle length is also tabulated \(instead of cycle percentage\).)A144 409 :M.32 .032(For the )Jf4_12 sf.134(improper)Af3_12 sf.18 .018( x)J0 -3 rm.144(2)A0 3 rmcF f1_12 sf.044(9)Asf.436 .044(mod)JcF f1_12 sf.044(9)Asf.436 .044(N designs which are covered in Figure 2, P and)J108 433 :M.545 .054(Q are "Blum integers" [61; 61: 8], that is, they are primes congruent to 3)JcF f1_12 sf.054(9)Asf.545 .054(mod)JcF f1_12 sf.054(9)Asf.545 .054(4,)J108 457 :M.078 .008(but at most one is )Jf4_12 sf.03(special)Af3_12 sf.101 .01( as defined in Blum, Blum and Shub [61:)JcF f1_12 sf.01(9)Asf.101 .01(378].  Note the)J108 481 :M.336 .034(case of P = 127, Q = 131, which generates a sizable system with maximum cycle)J108 505 :M1.73 .173(length of 12, and so is extraordinarily weak. In an improper design, a small)J108 529 :Mf4_12 sf.475(increase)Af3_12 sf1.251 .125( in the value of one of the primes can result in a drastic )Jf4_12 sf.498(decrease)Af3_12 sf.96 .096( in)J108 553 :M-.082(strength.)A144 577 :M.246 .025(For the )Jf4_12 sf.1(proper)Af3_12 sf.138 .014( x)J0 -3 rm.111(2)A0 3 rmcF f1_12 sf.035(9)Asf.349 .035(mod)JcF f1_12 sf.035(9)Asf.349 .035(N designs covered in Figure)JcF f1_12 sf.035(9)Asf.349 .035(3, P and Q are "Blum)J108 601 :M.023 .002(integers" but they are also both )Jf4_12 sf(special)Sf3_12 sf.027 .003( and developed as described in Blum, Blum)J108 625 :M.928 .093(and Shub.  For a given system size they have longer minimum, maximum, and)J108 649 :M.176 .018(average cycle lengths than the improper designs of Figure)JcF f1_12 sf.018(9)Asf.176 .018(2.  The minimum cycle)J108 673 :M1.113 .111(length still seems rather short, but if we assume that the operational cycle is a)J108 697 :M.091 .009(configuration selection \(instead of a key-related arbitrary setup\), this may not be a)Jendp%%Page: 62 62%%BeginPageSetupinitializepage(TARDIS; page: 62 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 62)J108 121 :Mf3_12 sf.922 .092(problem.  Alternately, there appears to be a formula for the period of the cycle)J108 145 :M-.112(including state 2, so if we use that particular cycle, it may be possible to increase the)A108 169 :M.278 .028(size of the system until the period is "long enough."  The case of P)JcF f1_12 sf.028(9)Asf.278 .028(=)JcF f1_12 sf.028(9)Asf.278 .028(47, Q)JcF f1_12 sf.028(9)Asf.278 .028(=)JcF f1_12 sf.028(9)Asf.278 .028(719)J108 193 :M2.384 .238(is specifically prohibited in Blum, Blum and Shub [62:)JcF f1_12 sf.238(9)Asf2.384 .238(378], yet gives no)J108 217 :M1.22 .122(experimental indication of being "bad"; perhaps some other experiment would)J108 241 :M-.084(reveal a problem in this design.)A144 265 :M.566 .057(Some results from the GFSR experiments are tabulated in Figure 4. Here)J108 289 :M1.294 .129(there is an additional design variable, the selection of a primitive polynomial,)J108 313 :M-.032(although we are now constrained to use degrees which are Mersenne primes.  Each)A108 337 :M.377 .038(experiment was performed using )Jf4_12 sf.087(every)Af3_12 sf.335 .033( primitive polynomial of the given degree,)J108 361 :M.384 .038(and the same results were obtained in each case.  The degenerate cycle is the all-)J108 385 :M.116 .012(zeros case, which is prohibited; the rest of the states are part of a single cycle, and)J108 409 :M.081 .008(there are no arcs.  Of course, each independent column )Jf4_12 sf.025(should)Af3_12 sf.064 .006( have at least one 1-)J108 433 :M1.728 .173(bit, but cycle length is determined by any )Jf4_12 sf.609(one)Af3_12 sf1.933 .193( non-zero column.  Any such)J108 457 :M2.09 .209(initialization yields the same cycle length, thus supporting )Jf4_12 sf.557(almost)Af3_12 sf2.434 .243( arbitrary)J108 481 :M.066 .007(initialization \(with respect to cycle length only, of course\).  The cycle length is set)J108 505 :M2.701 .27(by the polynomial degree, and does not change as we widen the system.)J108 529 :M-.006(Consequently, if the width were to exceed the degree, only a subset of the possible)A108 553 :M.065 .007(output values could be produced.  This would be an abnormal design, but it would)J108 577 :M.484 .048(seem that this worrisome concept must apply to some unknown extent in normal)J108 601 :M-.043(designs as well.)A144 625 :M-.054(Some results from the Additive RNG experiments are tabulated in Figure 5.)A108 649 :M.776 .078(Again, each experiment was performed using )Jf4_12 sf.188(every)Af3_12 sf.731 .073( primitive polynomial of the)J108 673 :M.664 .066(given degree, and the same results were obtained in each case.  Here there is an)J108 697 :M.129 .013(initialization rule which eliminates degenerate cycles \(a typically small part of the)Jendp%%Page: 63 63%%BeginPageSetupinitializepage(TARDIS; page: 63 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 63)J108 121 :Mf3_12 sf.127 .013(total\).  The remaining states form a number of isolated closed cycles with no arcs,)J108 145 :M-.039(again supporting )Af4_12 sf-.043(almost)Af3_12 sf-.038(-arbitrary initialization.  The number of independent cycles)A108 169 :M-.066(varies with the width. However, since each cycle is equally long, this should be just)A108 193 :M.366 .037(as acceptable as a single long cycle.  The cycle length also varies with the width,)J108 217 :M-.082(which is helpful.)A108 265 :Mf0_12 sf.294 .029(7.3  Discussion)J144 289 :Mf3_12 sf1.503 .15(The Cellular Automata RNG contains cycles of various lengths, so its)J108 313 :M-.053(performance will vary, depending upon its initial state.  Since cryptographic RNG's)A108 337 :M.621 .062(should ideally be initialized arbitrarily, CA RNG's may apparently come up in a)J108 361 :M.105 .01(weak short cycle, or on a short arc into a short cycle. Moreover, a larger CA RNG)J108 385 :M-.006(does not necessarily produce a stronger RNG; instead, particular special values for)A108 409 :M1.681 .168(width and length may produce the strongest RNG.  This evokes the realistic)J108 433 :M.865 .086(nightmare of a new search for the "best" such values after every new statistical)J108 457 :M-.082(analysis.)A144 481 :M1.95 .195(The x)J0 -3 rm.635(2)A0 3 rmcF f1_12 sf.164(9)Asf1.642 .164(mod)JcF f1_12 sf.164(9)Asf1.642 .164(N RNG is a special case:  On the one hand, most of the)J108 505 :M-.07(comments on the CA RNG could also apply here; on the other, the extensive theory)A108 529 :M1.923 .192(of operation seems to avoid the weakest designs, and should also allow the)J108 553 :M.005 .001(selection of a long operating cycle.  Certainly an x)J0 -3 rm(2)S0 3 rmcF f1_12 sf(9)Ssf(mod)ScF f1_12 sf(9)Ssf(N design )Sf4_12 sf(must)Sf3_12 sf( follow the)S108 577 :M2.079 .208(many intricate design requirements of Blum, Blum and Shub to avoid very)J108 601 :M1.573 .157(significant weaknesses.  Customization might consist of finding large special)J108 625 :M1.087 .109(primes P and Q, or just the selection of a particular operating cycle within the)J108 649 :M-.034(context of a fixed value of N. \(The number of usable states, here N/4, should be far)A108 673 :M.848 .085(larger than the total random numbers used by all fielded units over all installed)J108 697 :M-.064(time.\))Aendp%%Page: 64 64%%BeginPageSetupinitializepage(TARDIS; page: 64 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 64)J144 123 :Mf3_12 sf2.034 .203(The x)J0 -3 rm.662(2)A0 3 rmcF f1_12 sf.232(9)Asf2.323 .232(mod)JcF f1_12 sf.232(9)Asf2.323 .232(N generator seems to inherently include both short and)J108 145 :M-.03(degenerate cycles, so we cannot risk initializing x)A0 3 rm(0)S0 -3 rm-.029( arbitrarily.  Thus, it is normally)A108 169 :M.265 .027(necessary to validate any x)J0 3 rm.083(0)A0 -3 rm.213 .021( "seed" to guarantee that it resides in a cycle which is)J108 195 :M.519 .052("long enough."  Alternately, user key initialization might select an arbitrary start)J108 219 :M.164 .016(state within a single configuration-selected cycle, if this can be done in real \(user\))J108 243 :M.622 .062(time.  Ultimately, such initialization would not be much different than that for a)J108 267 :M-.018(normal LFSR \(since an arbitrary LFSR state is just a different start-state within the)A108 291 :M.092 .009(single maximal length cycle\), but it is clearly )Jf4_12 sf.025(far)Af3_12 sf.107 .011( more complex than simply using)J108 315 :M-.174(arbitrary data as a convenient initialization state.)A108 339 :M( )S144 339 :M1.991 .199(Both the GFSR and Additive RNG's were easy to design \(even with)J108 363 :M1.537 .154(primitive mod 2 polynomial selection\), and were well behaved; there was no)J108 387 :M.236 .024(significant variation in performance with respect to initial state.  Thus, an almost-)J108 411 :M-.03(arbitrary initialization will always produce similar performance. In these designs, a)A108 435 :M.473 .047(longer polynomial always produced longer cycles; in the Additive RNG, a wider)J108 459 :M.008 .001(register also always produced longer cycles.  In both designs, all of the states were)J108 483 :M.153 .015(in cycles, and there were no dangerous short cycles.  There were also no arcs, and)J108 507 :M.526 .053(thus no arcs into short or degenerate cycles.  Both of these designs can easily be)J108 531 :M.907 .091(customized through the use of a new primitive polynomial, and the customized)J108 555 :M-.079(design will carry the same performance guarantees.)A144 579 :M-.044(Certainly, the CA and x)A0 -3 rm-.053(2)A0 3 rmcF f1_12 sf-.047(9)Asf-.047(mod)AcF f1_12 sf-.047(9)Asf-.047(N designs would have to be considered more)A108 603 :M.296 .03(secure )Jf4_12 sf.317 .032(as they are normally proposed)Jf3_12 sf.28 .028(; both of these designs are "Class)JcF f1_12 sf.028(9)Asf.28 .028(C" RNG's)J108 627 :M-.006(in that the designer is urged to expose only a portion of their state change on every)A108 651 :M.23 .023(step.  But the Additive RNG could be similarly restricted \(especially since it is so)J108 675 :M.057 .006(easily expanded\), and both the GFSR and Additive designs are clearly usable with)J108 699 :M-.034(any other form of isolation mechanism.)Aendp%%Page: 65 65%%BeginPageSetupinitializepage(TARDIS; page: 65 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 65)J108 145 :M1.592 .159(8. SUMMARY)J144 169 :Mf3_12 sf1.171 .117(A great deal of work remains to be done to establish the cryptographic)J108 193 :M-.037(performance of the various random number generators.)A144 217 :M.563 .056(Currently, the Additive RNG seems attractive since it is easily initialized)J108 241 :M2.287 .229(from a user key, easily expanded to huge amounts of internal state, easily)J108 265 :M-.056(customized, reasonably efficient, and has a guaranteed minimum cycle length.  The)A108 289 :M.632 .063(Additive RNG will remain attractive precisely until a much better mechanism is)J108 313 :M-.089(found or a fatal flaw discovered in this one.)A144 337 :M.058 .006(The x)J0 -3 rm(2)S0 3 rmcF f1_12 sf.007(9)Asf.067 .007(mod)JcF f1_12 sf.007(9)Asf.067 .007(N generator may also be expanded and customized, but seems)J108 361 :M-.088(to require far more computational effort at every stage of the process.)A144 385 :M.372 .037(Other RNG techniques could also be attractive, if a good theoretical basis)J108 409 :M1.712 .171(for their minimum cycle lengths could be found, and the design made "long)J108 433 :M.753 .075(enough."  Implementation difficulty and computational efficiency could then be)J108 457 :M-.099(compared to make a reasonable choice.)A144 481 :M.257 .026(Because most RNG's can be cryptanalyzed, steps must usually be taken to)J108 505 :M.805 .08(prevent penetration, often through the use of some sort of isolation mechanism.)J108 529 :M1.89 .189(Here again, much more theoretical work is needed on the ability of various)J108 553 :M-.014(mechanisms to protect an RNG from analysis.)A108 601 :Mf0_12 sf1.505 .15(9. COMMENTS)J144 625 :Mf3_12 sf.36 .036(First, much of the modern theoretical work seems oriented at solving "the)J108 649 :M.295 .029(problem of cryptography" in a single step; this work often implies systems which)J108 673 :M1.22 .122(are slow and complex.  One alternative is to design individual mechanisms or)J108 697 :M-.048(processes which solve )Af4_12 sf-.049(one aspect)Af3_12 sf-.049( of a cryptographic system to some known extent;)Aendp%%Page: 66 66%%BeginPageSetupinitializepage(TARDIS; page: 66 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 66)J108 121 :Mf3_12 sf1.7 .17(then multiple such devices might be arranged to completely solve the whole)J108 145 :M-.019(problem.  Such a design might be fast, and also better partitioned to support a deep)A108 169 :M.058 .006(understanding of the overall design.  This approach should also be more amenable)J108 193 :M-.099(to deep mathematical analysis than trying to solve the whole problem at once.)A144 217 :M.571 .057(Next, both mathematicians and engineers seek simple systems. However,)J108 241 :M-.007(as we have seen, a simple )Af4_12 sf-.007(formula)Af3_12 sf-.007( in no way implies a simple )Af4_12 sf(system)Sf3_12 sf-.006(:  Clearly, the)A108 265 :M1.213 .121(complexity of the lexical mathematical representation is not isomorphic to the)J108 289 :M.498 .05(complexity of the realization.  Systems based on apparently trivial equations can)J108 313 :M-.061(place surprisingly massive requirements on an actual implementation.  Even simple)A108 337 :M.091 .009(integer arithmetic represents a fairly complex system at the binary gate level [e.g.,)J108 361 :M.026 .003(66: 23]; perhaps systems based on integer arithmetic are inherently complex \(even)J108 385 :M.519 .052(the successful period analysis of the simple Additive RNG seems rather difficult)J108 409 :M.041 .004([66]\).  As a goal, mathematicians might strive to work with lexical representations)J108 433 :M1.07 .107(which are more closely related to the complexity of the resulting system.  The)J108 457 :M1.095 .109(ultimate system must be relatively simple if we are to avoid dangerous hidden)J108 481 :M.804 .08(problems; consequently, even non-mathematicians should be able to understand)J108 505 :M.295 .029(those systems.)J144 529 :M1.638 .164(Finally, almost any encryption or random number implementation has)J108 553 :M1.252 .125(some mathematical claim, if only a hand-waving "there are a large number of)J108 577 :M1.273 .127(possibilities, so this must be secure."  More formal mathematical models may)J108 601 :M2.108 .211(indeed imply strength, but )Jf4_12 sf.566(only)Af3_12 sf2.248 .225( if the resulting mechanism implements the)J108 625 :M.208 .021(mathematical model completely and exactly.  Unfortunately, it is easy to make an)J108 649 :M.781 .078(implementation mistake in a complex design:  Some errors of understanding do)J108 673 :M.218 .022(withstand review, some errors of design do result in "working" systems, and even)J108 697 :M.798 .08(massive testing can miss various types of problems.  Both correct and incorrect)Jendp%%Page: 67 67%%BeginPageSetupinitializepage(TARDIS; page: 67 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 67)J108 121 :Mf3_12 sf-.072(implementations can look and perform remarkably alike, differing only in small but)A108 145 :M-.197(crucial details.)A144 169 :M-.02(It would certainly be a benefit for system builders if the mathematicians, as)A108 193 :M.322 .032(part of the original work, would define a set of tests which would be sufficient to)J108 217 :M.289 .029(completely validate the implementation of their mathematical model.  Because of)J108 241 :M.835 .084(the deep mathematical background often assumed in the original work, it is not)J108 265 :M-.081(always possible for a non-mathematician to do this correctly.)A144 289 :M.058 .006(What would the mathematicians get out of such validation?  Well, the goal)J108 313 :M-.022(would be to establish a correlation between a theoretical and a real system; the real)A108 337 :M-.019(system could then be used for experiments, in ways similar to non-linear dynamics)A108 361 :M1.483 .148(experiments.  Small systems could be exhaustively tested for conformance to)J108 385 :M2.42 .242(predicted results; results could provide direct insight into the math.  Such)J108 409 :M1.082 .108(experiments might reveal entire new classes of relationship, perhaps some that)J108 433 :M2.235 .224(could otherwise be found only with great difficulty.  There can be serious)J108 457 :M-.15(advantages to having a validated realization to play with.)Aendp%%Page: 68 68%%BeginPageSetupinitializepage(TARDIS; page: 68 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 68)J108 145 :M1.013 .101(10. REFERENCES)J144 166 :Mf3_12 sf.443(256)A0 3 rm1.369 .137(.  Agnew, G.  1986.  Random Sources for Cryptographic Systems.)J0 -3 rm108 193 :Mf4_12 sf1.129 .113(Advances in Cryptology:  CRYPTO '85 Proceedings)Jf3_12 sf.93 .093(.  77-81.  Springer-Verlag:)J108 217 :M-.037(Berlin / New York.)A144 238 :M.052(257)A0 3 rm.113 .011(.  Aho, A., J. Hopcroft and J. Ullman.  1974.  )J0 -3 rmf4_12 sf0 3 rm.198 .02(The Design and Analysis)J0 -3 rm108 265 :M-.031(of Computer Algorithms)Af3_12 sf-.03(.  Addison-Wesley: Reading, Massachusetts.)A144 286 :M.22(258)A0 3 rm.588 .059(.  Akl, S. and H. Meijer.  1984.  A Fast Pseudo Random Permutation)J0 -3 rm108 313 :M1.809 .181(Generator.  )Jf4_12 sf2.38 .238(Advances in Cryptology:  CRYPTO '84 Proceedings)Jf3_12 sf1.762 .176(.  269-275.)J108 337 :M-.057(Springer-Verlag: Berlin)AcF f1_12 sf-.057(9)Asf-.057(/)AcF f1_12 sf-.057(9)Asf-.057(New York.)A144 358 :M(259)S0 3 rm.035 .003(.  Alexi, W., B. Chor, O. Goldreich, and C. Schnorr.  1984. RSA/Rabin)J0 -3 rm108 385 :M.442 .044(Bits are 1/2 + 1/poly\(log N\) Secure \(Extended Abstract\).  )Jf4_12 sf.713 .071(25th IEEE Symposium)J108 409 :M-.048(on the Foundations of Computer Science)Af3_12 sf-.048(.  449-457.)A144 430 :M.052(260)A0 3 rm.163 .016(.  Allen, T.  1983.  Controlled, but Rational, Phase-Locking Responses)J0 -3 rm108 457 :M.581 .058(of a Simple Time-Base Oscillator.  )Jf4_12 sf.749 .075(IEEE Transactions on Circuits and Systems)Jf3_12 sf(.)S108 481 :M.137 .014(CAS-30: 627-632.)J144 502 :M.823(261)A0 3 rm2.276 .228(.  Allender, E.  1987.  Some Consequences of the Existence of)J0 -3 rm108 529 :M3.437 .344(Pseudorandom Generators.  )Jf4_12 sf3.355 .336(Proceedings of the Nineteenth Annual ACM)J108 553 :M-.007(Symposium on Theory of Computing)Af3_12 sf-.007(.  151-159.)A144 574 :M-.027(262)A0 3 rm-.021(.  Anderson, R.  1990.  Solving a Class of Stream Ciphers. )A0 -3 rmf4_12 sf0 3 rm-.024(Cryptologia)A0 -3 rmf3_12 sf0 3 rm(.)S0 -3 rm108 601 :M-.03(14: 285-288.)A144 622 :M.184(263)A0 3 rm.309 .031(.  Arazi, B.  1988.  )J0 -3 rmf4_12 sf0 3 rm.646 .065(A Commonsense Approach to the Theory of Error)J0 -3 rm108 649 :M(Correcting Codes)Sf3_12 sf(.  MIT Press: Cambridge, Mass.)S144 670 :M.244(264)A0 3 rm.159 .016(.  )J0 -3 rmf4_12 sf0 3 rm1.057 .106(Artificial Life)J0 -3 rmf3_12 sf0 3 rm.688 .069(.  1989.  Editor:  C. Langton.  Addison-Wesley: New)J0 -3 rm108 697 :M.086(York.)Aendp%%Page: 69 69%%BeginPageSetupinitializepage(TARDIS; page: 69 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 69)J144 120 :Mf3_12 sf.392(265)A0 3 rm1 .1(.  Arvillias, A. and D. Maritsas.  1978.  Partitioning the Period of a)J0 -3 rm108 147 :M1.452 .145(Class of m-Sequences and Application to Pseudorandom Number Generation.)J108 171 :Mf4_12 sf-.062(Journal of the Association for Computing Machinery)Af3_12 sf-.061(.  25: 675-686.)A144 192 :M.068(266)A0 3 rm.189 .019(.  Bays, C. and S. Durham.  1976.  Improving a Poor Random Number)J0 -3 rm108 219 :M-.052(Generator.  )Af4_12 sf-.059(ACM Transactions on Mathematical Software)Af3_12 sf-.052(.  2: 59-64.)A144 240 :M.281(267)A0 3 rm.549 .055(.  Beker, H. and F. Piper.  1982.  )J0 -3 rmf4_12 sf0 3 rm1.448 .145(Cipher Systems)J0 -3 rmf3_12 sf0 3 rm.762 .076(.  John Wiley: New)J0 -3 rm108 267 :M.086(York.)A144 288 :M.405(268)A0 3 rm.85 .085(.  Beker, K. and M. D\232rfler.  1989.  )J0 -3 rmf4_12 sf0 3 rm1.672 .167(Dynamic systems and fractals)J0 -3 rmf3_12 sf0 3 rm(.)S0 -3 rm108 315 :M.052 .005(Cambridge University Press, New York.)J144 336 :M-.037(269)A0 3 rm-.026(.  Bell, E.  1951.  )A0 -3 rmf4_12 sf0 3 rm-.031(Mathematics, queen and servant of science)A0 -3 rmf3_12 sf0 3 rm-.033(. Microsoft)A0 -3 rm108 363 :M.15 .015(Press: Redmond, Washington.)J144 384 :M1.258(270)A0 3 rm3.091 .309(.  Bell, T.  1986.  Better OPM/L Text Compression.  )J0 -3 rmf4_12 sf0 3 rm1.816(IEEE)A0 -3 rm108 411 :M.041 .004(Transactions on Communications)Jf3_12 sf.029 .003(.  COM-34: 1176-1182.)J144 432 :M.969(271)A0 3 rm2.726 .273(.  Ben-Or, M.  1981.  Probabilistic algorithms in finite fields.)J0 -3 rm108 459 :Mf4_12 sf1.411 .141(Proceedings of the 22nd IEEE Foundations of Computer Science Symposium)Jf3_12 sf(.)S108 483 :M(394-398.)S144 504 :M(272)S0 3 rm(.  Berlekamp, E.  1984.  )S0 -3 rmf4_12 sf0 3 rm(Algebraic Coding Theory)S0 -3 rmf3_12 sf0 3 rm(.  Aegean Park Press:)S0 -3 rm108 531 :M-.061(Laguna Hills, CA.)A144 552 :M.268(273)A0 3 rm.516 .052(.  Berlinski, D.  1988.  )J0 -3 rmf4_12 sf0 3 rm1.028 .103(Black Mischief: Language, Life, Logic, Luck)J0 -3 rmf3_12 sf0 3 rm(.)S0 -3 rm108 579 :M-.044(2nd Edition.  Harcourt Brace Jovanovich:  Boston / New York.)A144 600 :M.391(274)A0 3 rm.687 .069(.  Blahut, R.  1983.  )J0 -3 rmf4_12 sf0 3 rm1.391 .139(Theory and Practice of Error Control Coding)J0 -3 rmf3_12 sf0 3 rm(.)S0 -3 rm108 627 :M-.01(Addison-Wesley: Reading, Mass.)A144 648 :M.695(275)A0 3 rm1.781 .178(.  Blum, L., M. Blum and M. Shub.  1983.  Comparison of Two)J0 -3 rm108 675 :M1.495 .15(Pseudo-Random Number Generators.  )Jf4_12 sf1.326 .133(Advances in Cryptology:  CRYPTO '82)J108 699 :M.033(Proceedings)Af3_12 sf.1 .01(.  Plenum Press: New York.  61-78.)Jendp%%Page: 70 70%%BeginPageSetupinitializepage(TARDIS; page: 70 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 70)J144 120 :Mf3_12 sf.304(276)A0 3 rm.811 .081(.  Blum, L., M. Blum and M. Shub.  1986.  A Simple Unpredictable)J0 -3 rm108 147 :M-.013(Pseudo-Random Number Generator.  )Af4_12 sf-.013(SIAM Journal on Computing)Af3_12 sf-.012(.  15: 364-383.)A144 168 :M.348(277)A0 3 rm.796 .08(.  Blum, M.  1982.  Coin flipping by telephone.  )J0 -3 rmf4_12 sf0 3 rm1.408 .141(Proceedings of the)J0 -3 rm108 195 :M.414 .041(24th IEEE Spring COMPCON)Jf3_12 sf.264 .026(.  133-137.)J144 216 :M.156(278)A0 3 rm.436 .044(.  Blum, M.  1984.  Independent unbiased coin flips from a correlated)J0 -3 rm108 243 :M1.975 .197(biased source:  a finite state markov chain.  )Jf4_12 sf2.76 .276(25th IEEE Symposium on the)J108 267 :M-.04(Foundations of Computer Science)Af3_12 sf-.039(.  425-433.)A144 288 :M.086(279)A0 3 rm.245 .024(.  Blum, M. and S. Micali.  1984.  How to Generate Cryptographically)J0 -3 rm108 315 :M1.141 .114(Strong Sequences of Pseudo-Random Bits.  )Jf4_12 sf1.372 .137(SIAM Journal on Computing)Jf3_12 sf.528 .053(.  13:)J108 339 :M(850-864.)S144 360 :M.156(280)A0 3 rm.493 .049(,  Boyar, J.  1989.  Inferring Sequences Produced by Pseudo-Random)J0 -3 rm108 387 :M-.037(Number Generators.  )Af4_12 sf-.038(Journal of the ACM)Af3_12 sf-.036(.  36: 129-141.)A144 408 :M.057(281)A0 3 rm.175 .017(.  Bright, H. and R. Enison.  1979.  Quasi-Random Number Sequences)J0 -3 rm108 435 :M-.055(from a Long-Period TLP Generator with Remarks on Application to Cryptography.)A108 459 :Mf4_12 sf-.039(ACM Computing Surveys)Af3_12 sf-.034(.  11: 357-370.)A144 480 :M.64(282)A0 3 rm1.106 .111(.  Burks, A.  1970.  )J0 -3 rmf4_12 sf0 3 rm2.627 .263(Essays on Cellular Automata)J0 -3 rmf3_12 sf0 3 rm1.722 .172(.  University of)J0 -3 rm108 507 :M-.072(Illinois Press: Urbana / Chicago / London.)A144 528 :M.913(283)A0 3 rm2.371 .237(.  Calmet, J. and R. Loos.  1980.  An Improvement of Rabin's)J0 -3 rm108 555 :M2.154 .215(Probabilistic Algorithm for Generating Irreducible Polynomials over GF\(p\).)J108 579 :Mf4_12 sf-.007(Information Processing Letters)Af3_12 sf-.007(.  11: 94-95.)A144 600 :M.6(284)A0 3 rm1.152 .115(.  Campbell, J.  1982.  )J0 -3 rmf4_12 sf0 3 rm2.998 .3(Grammatical Man: Information, Entropy,)J0 -3 rm108 627 :M-.006(Language and Life)Af3_12 sf-.006(.  Simon and Schuster: New York.)A144 648 :M.173(285)A0 3 rm.493 .049(.  Chaitin, G.  1975.  Randomness and Mathematical Proof. )J0 -3 rmf4_12 sf0 3 rm.143(Scientific)A0 -3 rm108 675 :M-.045(American)Af3_12 sf-.038(.  232\(5\): 47-52.)Aendp%%Page: 71 71%%BeginPageSetupinitializepage(TARDIS; page: 71 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 71)J144 120 :Mf3_12 sf.487(286)A0 3 rm.882 .088(.  Chaitin, G.  1987.  )J0 -3 rmf4_12 sf0 3 rm2.512 .251(Algorithmic Information Theory)J0 -3 rmf3_12 sf0 3 rm2.409 .241(. Cambridge)J0 -3 rm108 147 :M-.007(University Press: Cambridge / New York.)A144 168 :M.161(287)A0 3 rm.429 .043(.  Chor, B., O. Goldreich and S. Goldwasser.  1985.  The Bit Security)J0 -3 rm108 195 :M1.194 .119(of Modular Squaring Given Partial Factorization of the Modulos. )Jf4_12 sf1.697 .17(Advances in)J108 219 :M.163 .016(Cryptology:  CRYPTO '85 Proceedings)Jf3_12 sf.119 .012(.  448-457.  Springer-Verlag: Berlin / New)J108 243 :M.086(York.)A144 264 :M.281(288)A0 3 rm.74 .074(.  Chor, B. and O. Goldreich.  1988.  Unbiased Bits from Sources of)J0 -3 rm108 291 :M.195 .019(Weak Randomness and Probabilistic Communication Complexity.  )Jf4_12 sf.253 .025(SIAM Journal)J108 315 :M-.027(on Computing)Af3_12 sf-.024(.  17: 230-261.)A144 336 :M.933(289)A0 3 rm2.239 .224(.  Ciarcia, S.  1986.  Build a Hardware Data Encryptor.  )J0 -3 rmf4_12 sf0 3 rm.829(Byte)A0 -3 rmf3_12 sf0 3 rm(.)S0 -3 rm108 363 :M-.013(September 1986.  97-111.)A144 384 :M.203(290)A0 3 rm.566 .057(.  Cleary, J. and I. Witten.  1984.  Data Compression Using Adaptive)J0 -3 rm108 411 :M1.079 .108(Coding and Partial String Matching.  )Jf4_12 sf1.705 .171(IEEE Transactions on Communications)Jf3_12 sf(.)S108 435 :M.139 .014(COM-32: 396-402.)J144 456 :M.703(291)A0 3 rm2.061 .206(.  Collings, B. and G. Hembree.  1986.  Initializing Generalized)J0 -3 rm108 483 :M.047 .005(Feedback Shift Register Pseudorandom Number Generators.  )Jf4_12 sf.04 .004(Journal of the ACM)Jf3_12 sf(.)S108 507 :M-.031(33: 707-711, 34: 1001.)A144 528 :M.716(292)A0 3 rm2.308 .231(.  Collings, B.  1987.  Compound Random Number Generators.)J0 -3 rm108 555 :Mf4_12 sf-.078(Journal of the American Statistical Association)Af3_12 sf-.08(.  82 \(398\): 525-527.)A144 576 :M.837(293)A0 3 rm2.681 .268(.  Compagner, A. and A. Hoogland.  1987.  Maximum-Length)J0 -3 rm108 603 :M.155 .015(Sequences, Cellular Automata, and Random Numbers.  )Jf4_12 sf.202 .02(Journal of Computational)J108 627 :M(Physics)Sf3_12 sf(.  71: 391-428.)S144 648 :M.52(294)A0 3 rm1.493 .149(.  Cormack, G. and R. Horspool.  1984.  Algorithms for Adaptive)J0 -3 rm108 675 :M.024 .002(Huffman Codes.  )Jf4_12 sf.039 .004(Information Processing Letters)Jf3_12 sf.021 .002(.  18: 159-165.)Jendp%%Page: 72 72%%BeginPageSetupinitializepage(TARDIS; page: 72 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 72)J144 120 :Mf3_12 sf-.027(295)A0 3 rm-.021(.  Costas, J.  1979.  Cryptography in the Field, Part 2:  Using the Pocket)A0 -3 rm108 147 :M-.067(Calculator.  )Af4_12 sf-.078(Byte)Af3_12 sf-.075(.  March 1979.  157.)A144 168 :M.372(296)A0 3 rm.243 .024(.  )J0 -3 rmf4_12 sf0 3 rm1.669 .167(Cryptology Yesterday, Today, and Tomorrow)J0 -3 rmf3_12 sf0 3 rm.833 .083(.  1987.  Editors: C.)J0 -3 rm108 195 :M.109 .011(Deavours, D.)JcF f1_12 sf.011(9)Asf.109 .011(Kahn, L. Kruh, G. Mellen and B. Winkle.  Artech House: Norwood,)J108 219 :M.168(Mass.)A144 240 :M.185(297)A0 3 rm.388 .039(.  Davies, D. and W. Pierce.  1984.  )J0 -3 rmf4_12 sf0 3 rm.799 .08(Security for Computer Networks)J0 -3 rmf3_12 sf0 3 rm(.)S0 -3 rm108 267 :M.074 .007(John Wiley: New York.)J144 288 :M-.037(298)A0 3 rm-.031(.  Davis, W.  1966.  Automatic Delay Changing Facility for Delayed m-)A0 -3 rm108 315 :M(Sequences.  )Sf4_12 sf(Proceedings of the IEEE)Sf3_12 sf(.  54: 913-914.)S144 336 :M.237(299)A0 3 rm.633 .063(.  Deavours, C.  1977.  Unicity Points in Cryptanalysis. )J0 -3 rmf4_12 sf0 3 rm.209(Cryptologia)A0 -3 rmf3_12 sf0 3 rm(.)S0 -3 rm108 363 :M-.009(1\(1\).  \(Also in [72: 359-378].\))A144 384 :M.455(300)A0 3 rm.873 .087(.  Denning, D.  1982.  )J0 -3 rmf4_12 sf0 3 rm1.994 .199(Cryptography and Data Security)J0 -3 rmf3_12 sf0 3 rm1.315 .131(.  Reading,)J0 -3 rm108 411 :M.171 .017(Mass:  Addison-Wesley.)J144 432 :M.293(301)A0 3 rm.523 .052(.  de Visme, G.  1971.  )J0 -3 rmf4_12 sf0 3 rm1.608 .161(Binary Sequences)J0 -3 rmf3_12 sf0 3 rm.949 .095(.  The English Universities)J0 -3 rm108 459 :M(Press:  London.)S144 480 :M.798(302)A0 3 rm2.087 .209(.  Diaconis, P. and R. Grahm.  1977.  Spearman's Footrule as a)J0 -3 rm108 507 :M.288 .029(Measure of Disarray.  )Jf4_12 sf.298 .03(Journal of the Royal Statistical Society.  Series B)Jf3_12 sf.405 .04(. 39:)JcF f1_12 sf.04(9)Asf.405 .04(262-)J108 531 :M(268)S144 552 :M.481(303)A0 3 rm1.39 .139(.  Diaconis, P. and M. Shahshahavi.  1981.  Generating a Random)J0 -3 rm108 579 :M.063 .006(Permutation with Random Transpositions.  )Jf4_12 sf.101 .01(Z. Wahscheinlichkeitstheorie)Jf3_12 sf.044 .004(. 57: 159-)J108 603 :M-.041(179.  \(Springer-Verlag.\))A144 624 :M(304)S0 3 rm.005 0(.  Diffie, W. and M. Hellman.  1976.  New Directions in Cryptography.)J0 -3 rm108 651 :Mf4_12 sf.125 .013(IEEE Transactions on Information Theory)Jf3_12 sf.086 .009(.  IT22: 644-654.)J144 672 :M.709(305)A0 3 rm2.245 .225(.  Durstenfeld, R.  1964.  Algorithm 235, Random Permutation,)J0 -3 rm108 699 :M-.012(Procedure SHUFFLE.  )Af4_12 sf-.012(Communications of the ACM)Af3_12 sf-.01(.  7: 420.)Aendp%%Page: 73 73%%BeginPageSetupinitializepage(TARDIS; page: 73 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 73)J144 120 :Mf3_12 sf.587(306)A0 3 rm1.478 .148(.  Erber, T., P. Everett and P. Johnson.  1979.  The Simulation of)J0 -3 rm108 147 :M.419 .042(Random Processes on Digital Computers with Cebysev Mixing Transformations.)J108 171 :Mf4_12 sf-.036(Journal of Computational Physics)Af3_12 sf-.035(.  32: 168-211.)A144 192 :M.97(307)A0 3 rm2.383 .238(.  Erber, T., T. Rynne, W. Darsow and M. Frank.  1983.  The)J0 -3 rm108 219 :M1.895 .19(Simulation of Random Processes on Digital Computers: Unavoidable Order.)J108 243 :Mf4_12 sf-.036(Journal of Computational Physics)Af3_12 sf-.035(.  49: 349-419.)A144 264 :M.837(308)A0 3 rm2.321 .232(.  Erber, T. and S. Putterman.  1985.  Randomness in quantum)J0 -3 rm108 291 :M-.067(mechanics_nature's ultimate cryptogram?  )Af4_12 sf-.074(Nature)Af3_12 sf-.066(.  318: 41-43.)A144 312 :M.173(309)A0 3 rm.461 .046(.  Etzion, T. and A. Lempel.  1984.  Algorithms for the Generation of)J0 -3 rm108 339 :M-.015(Full-Length Shift-Register Sequences.  )Af4_12 sf-.016(IEEE Transactions on Information Theory)Af3_12 sf(.)S108 363 :M-.046(IT-30: 480-484.)A144 384 :M1.563(310)A0 3 rm4.225 .423(.  Feldman, F.  1988.  Fast Spectral Tests for Measuring)J0 -3 rm108 411 :M3.303 .33(Nonrandomness and the DES.  )Jf4_12 sf3.819 .382(Advances in Cryptology:  CRYPTO '87)J108 435 :M-.035(Proceedings)Af3_12 sf-.031(.  243-254.  Springer-Verlag:  Berlin / New York.)A144 456 :M.889(311)A0 3 rm2.576 .258(.  Fischer, E.  1981.  A Theoretical Measure of Cryptographic)J0 -3 rm108 483 :M-.023(Performance.  )Af4_12 sf-.024(Cryptologia)Af3_12 sf-.022(.  5\(1\).  \(Also [73: 421-426].\))A144 504 :M.548(312)A0 3 rm1.757 .176(.  Fischer, E.  1981.  Measuring Cryptographic Performance with)J0 -3 rm108 531 :M-.019(Production Processes.  )Af4_12 sf-.021(Cryptologia)Af3_12 sf-.019(.  5\(3\).  \(Also [73: 421-426].\))A144 552 :M-.048(313)A0 3 rm-.039(.  Fushimi, M. and S. Tezuka.  1983.  The k-Distribution of Generalized)A0 -3 rm108 579 :M.706 .071(Feedback Shift Register Pseudorandom Numbers. )Jf4_12 sf.709 .071(Communications of the ACM)Jf3_12 sf(.)S108 603 :M-.022(26\(7\): 516-523.)A144 624 :M.12(314)A0 3 rm.336 .034(.  Fushimi, M.  1983.  Increasing the Orders of Equidistribution of the)J0 -3 rm108 651 :M.574 .057(Leading Bits of the Tausworthe Sequence.  )Jf4_12 sf.919 .092(Information Processing Letters)Jf3_12 sf.298 .03(.  16:)J108 675 :M(189-192.)Sendp%%Page: 74 74%%BeginPageSetupinitializepage(TARDIS; page: 74 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 74)J144 120 :Mf3_12 sf.902(315)A0 3 rm2.687 .269(.  Fushimi, M.  1988.  Designing a Uniform Random Number)J0 -3 rm108 147 :M.339 .034(Generator Whose Subsequences are k-Distributed.  )Jf4_12 sf.376 .038(SIAM Journal on Computing)Jf3_12 sf(.)S108 171 :M-.042(17: 1988.)A144 192 :M.203(316)A0 3 rm.641 .064(.  Fushimi, M.  1989.  An Equivalence Relation between Tausworthe)J0 -3 rm108 219 :M.125 .012(and GFSR Sequences and Applications.  )Jf4_12 sf.183 .018(Applied Mathematics Letters)Jf3_12 sf.085 .008(.  2\(2\): 135-)J108 243 :M(137.)S144 264 :M.541(317)A0 3 rm1.297 .13(.  Gallager, R.  1978.  Variations on a Theme by Huffman.  )J0 -3 rmf4_12 sf0 3 rm.781(IEEE)A0 -3 rm108 291 :M-.012(Transactions on Information Theory)Af3_12 sf-.012(.  IT-24: 668-674.)A144 312 :M1.061(318)A0 3 rm2.034 .203(.  Gardner, M.  1983.  )J0 -3 rmf4_12 sf0 3 rm4.323 .432(Wheels, Life and Other Mathematical)J0 -3 rm108 339 :M.042(Amusements)Af3_12 sf.116 .012(.  W. H. Freeman: New York.)J144 360 :M(319)S0 3 rm.033 .003(.  Geffe, P.  1973.  How to protect data with ciphers that are really hard)J0 -3 rm108 387 :M-.047(to break.  )Af4_12 sf-.053(Electronics)Af3_12 sf-.052(.  46\(1\): 99-101.)A144 408 :M.173(320)A0 3 rm.293 .029(.  Gleick, J.  1987.  )J0 -3 rmf4_12 sf0 3 rm.554 .055(Chaos:  Making a New Science)J0 -3 rmf3_12 sf0 3 rm.538 .054(.  Viking Penguin:)J0 -3 rm108 435 :M.384 .038(New York.)J144 456 :M.903(321)A0 3 rm2.335 .233(.  Goldreich, O., S. Goldwasser and S. Micali.  1984.  How to)J0 -3 rm108 483 :M.338 .034(Construct Random Functions \(Extended Abstract\).  )Jf4_12 sf.32 .032(25th IEEE Symposium on the)J108 507 :M-.04(Foundations of Computer Science)Af3_12 sf-.039(.  464-479.)A144 528 :M.138(322)A0 3 rm.373 .037(.  Goldreich, O., H. Krawczyk and M. Luby.  1988.  On the Existence)J0 -3 rm108 555 :M.38 .038(of Pseudorandom Generators \(Extended Abstract\).  )Jf4_12 sf.36 .036(29th IEEE Symposium on the)J108 579 :M-.042(Foundations of Computer Science)Af3_12 sf-.04(.  12-24.)A144 600 :M.573(323)A0 3 rm1.696 .17(.  Goldwasser, S. and S. Micali.  1984.  Probabilistic Encryption.)J0 -3 rm108 627 :Mf4_12 sf-.05(Journal of Computer and System Sciences)Af3_12 sf-.048(.  28: 270-299.)A144 648 :M.507(324)A0 3 rm1.301 .13(.  Goldwasser, S. and J. Kilian.  1986.  Almost All Primes Can be)J0 -3 rm108 675 :M-.046(Quickly Certified.  )Af4_12 sf-.053(18th Symposium on the Theory of Computing)Af3_12 sf-.052(.  316-329.)Aendp%%Page: 75 75%%BeginPageSetupinitializepage(TARDIS; page: 75 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 75)J144 120 :Mf3_12 sf.462(325)A0 3 rm1.415 .141(.  Gollmann, D. and W. Chambers.  1989.  Clock-Controlled Shift)J0 -3 rm108 147 :M.95 .095(Registers: A Review.  )Jf4_12 sf1.269 .127(IEEE Journal on Selected Areas in Communications)Jf3_12 sf.642 .064(. 7:)J108 171 :M(525-533.)S144 192 :M.786(326)A0 3 rm2.056 .206(.  Golomb, S.  1982 \(original publication 1967\).  )J0 -3 rmf4_12 sf0 3 rm3.703 .37(Shift Register)J0 -3 rm108 219 :M-.055(Sequences)Af3_12 sf-.05(, Revised Edition.  Aegean Park Press: Laguna Hills, CA.)A144 240 :M.069(327)A0 3 rm.207 .021(.  Groth, E.  1971.  Generation of Binary Sequences With Controllable)J0 -3 rm108 267 :M.041 .004(Complexity.  )Jf4_12 sf.053 .005(IEEE Transactions on Information Theory)Jf3_12 sf.065 .007(. IT-17:)JcF f1_12 sf.007(9)Asf.065 .007(288-296.)J144 288 :M.791(328)A0 3 rm2.355 .236(.  Guinier, D.  1989.  A Fast Uniform "Astronomical" Random)J0 -3 rm108 315 :M.678 .068(Number Generator.  )Jf4_12 sf1.13 .113(SIGSAC Review)Jf3_12 sf.628 .063(  \(ACM Special Interest Group on Security)J108 339 :M.066 .007(Audit & Control\).  7\(1\): 1-13.  ACM Press:  New York.)J144 360 :M.293(329)A0 3 rm.854 .085(.  G\237nther, C.  1987.  Alternating Step Generators Controlled by De)J0 -3 rm108 387 :M.487 .049(Bruijn Sequences.  )Jf4_12 sf.636 .064(Advances in Cryptology:  EUROCRYPT '87 Proceedings)Jf3_12 sf.202 .02(.  5-)J108 411 :M-.049(14.  Springer-Verlag: Berlin / New York.)A144 432 :M.437(330)A0 3 rm1.185 .119(.  Hastad, J. and A. Shamir.  1985.  The Cryptographic Security of)J0 -3 rm108 459 :M2.034 .203(Truncated Linearly Related Variables.  )Jf4_12 sf2.045 .204(17th ACM Symposium on Theory of)J108 483 :M-.018(Computing)Af3_12 sf-.016(.  356-362.)A144 504 :M.063(331)A0 3 rm.182 .018(.  Hellman, M.  1977.  An Extension of the Shannon Theory Approach)J0 -3 rm108 531 :M.02 .002(to Cryptography.  )Jf4_12 sf.028 .003(IEEE Transactions on Information Theory)Jf3_12 sf.025 .002(. IT-23: 289-294.)J144 552 :M.109(332)A0 3 rm.292 .029(.  Hellman, M.  1982.  Cryptographic Key Size Issues. )J0 -3 rmf4_12 sf0 3 rm.571 .057(Proceedings of)J0 -3 rm108 579 :M.222 .022(the \(24th\) IEEE Spring COMPCON 1982)Jf3_12 sf.164 .016(.  130-137.)J144 600 :M.58(333)A0 3 rm1.555 .155(.  Hemmati, F.  1982.  A Large Class of Nonlinear Shift Register)J0 -3 rm108 627 :M.04 .004(Sequences.  )Jf4_12 sf.056 .006(IEEE Transactions on Information Theory)Jf3_12 sf.039 .004(.  IT-28: 355-359.)J144 648 :M.723(334)A0 3 rm2.03 .203(.  Herlestam, T.  1983.  On Using Prime Polynomials in Crypto)J0 -3 rm108 675 :M1.667 .167(Generators.  )Jf4_12 sf2.255 .226(Cryptography.  Proceedings, Burg Feuerstein 1982)Jf3_12 sf1.564 .156(.  Springer-)J108 699 :M-.062(Verlag:  Berlin / New York.)Aendp%%Page: 76 76%%BeginPageSetupinitializepage(TARDIS; page: 76 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 76)J144 120 :Mf3_12 sf.547(335)A0 3 rm1.105 .111(.  Hofstadter, D.  1979.  )J0 -3 rmf4_12 sf0 3 rm2.051 .205(G\232del, Escher, Bach: an Eternal Golden)J0 -3 rm108 147 :M.024(Braid)Af3_12 sf.078 .008(.  Basic Books: New York.)J144 168 :M(336)S0 3 rm-.012(.  Horowitz, P. and W. Hill.  1989.  )A0 -3 rmf4_12 sf0 3 rm-.013(The Art of Electronics)A0 -3 rmf3_12 sf0 3 rm-.013(, 2nd Edition.)A0 -3 rm108 195 :M.009 .001(Cambridge University Press: New York.)J144 216 :M.138(337)A0 3 rm.373 .037(.  Hosack, J.  1986.  The Use of Cebysev Mixing to Generate Pseudo-)J0 -3 rm108 243 :M-.005(random Numbers.  )Af4_12 sf-.004(Journal of Computational Physics)Af3_12 sf-.004(.  67: 482-486.)A144 264 :M.287(338)A0 3 rm.806 .081(.  Huffman, D.  1952.  A Method for the Construction of Minimum-)J0 -3 rm108 291 :M-.017(Redundency Codes.  )Af4_12 sf-.016(Proceedings of the IRE)Af3_12 sf-.016(.  40: 1098-1101.)A144 312 :M.348(339)A0 3 rm.558 .056(.  Jay, F., ed.  1977.  )J0 -3 rmf4_12 sf0 3 rm1.372 .137(IEEE Dictionary of Electrical and Electronics)J0 -3 rm108 339 :M.096(Terms)Af3_12 sf.233 .023(, 2nd Ed.  IEEE / John Wiley:  New York.)J144 360 :M.417(340)A0 3 rm1.204 .12(.  Johnsen, V. and K. Kjeldsen.  1973.  Loop-free Compositions of)J0 -3 rm108 387 :M-.056(Certain Finite Automata.  )Af4_12 sf-.059(Information and Control)Af3_12 sf-.058(.  22: 303-319.)A144 408 :M.214(341)A0 3 rm.639 .064(.  Jueneman, R.  1987.  A High Speed Manipulation Detection Code.)J0 -3 rm108 435 :Mf4_12 sf.558 .056(Advances in Cryptology:  CRYPTO '86 Proceedings)Jf3_12 sf.569 .057(.  327-346. Springer-Verlag:)J108 459 :M-.037(Berlin / New York.)A144 480 :M.361(342)A0 3 rm1.112 .111(.  Jueneman, R.  1987.  Electronic Document Authentication. )J0 -3 rmf4_12 sf0 3 rm.521(IEEE)A0 -3 rm108 507 :M-.047(Network Magazine)Af3_12 sf-.039(.  1\(2\): 17-23.)A144 528 :M(343)S0 3 rm-.008(.  Kahn, D.  1967.  )A0 -3 rmf4_12 sf0 3 rm-.01(The Codebreakers)A0 -3 rmf3_12 sf0 3 rm-.01(.  Macmillan: New York.)A0 -3 rm144 552 :M.494(344)A0 3 rm1.271 .127(.  Key, E.  1976.  An Analysis of the Structure and Complexity of)J0 -3 rm108 579 :M1.934 .193(Nonlinear Binary Sequence Generators.  )Jf4_12 sf2.389 .239(IEEE Transactions on Information)J108 603 :M-.03(Theory)Af3_12 sf-.027(.  IT-22: 732-736.)A144 624 :M(345)S0 3 rm-.012(.  Kirkpatrick, S. and E. Stoll.  1981.  Note:  A Very Fast Shift-Register)A0 -3 rm108 651 :M.916 .092(Sequence Random Number Generator.  )Jf4_12 sf1.075 .107(Journal of Computational Physics)Jf3_12 sf.395 .039(.  40:)J108 675 :M(517-526.)Sendp%%Page: 77 77%%BeginPageSetupinitializepage(TARDIS; page: 77 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 77)J144 120 :Mf3_12 sf.723(346)A0 3 rm1.266 .127(.  Knuth, D.  1981.  )J0 -3 rmf4_12 sf0 3 rm2.526 .253(The Art of Computer Programming, Vol. 2,)J0 -3 rm108 147 :M-.04(Seminumerical Algorithms)Af3_12 sf-.039(.  2nd ed.  Addison-Wesley: Reading, Massachusetts.)A144 168 :M.342(347)A0 3 rm1.051 .105(.  Knuth, D.  1985.  Deciphering a Linear Congruential Encryption.)J0 -3 rm108 195 :Mf4_12 sf.13 .013(IEEE Transactions on Information Theory)Jf3_12 sf.082 .008(.  IT-31: 49-52.)J144 216 :M.759(348)A0 3 rm2.231 .223(.  Kolmogorov, A.  1965.  Three approaches to the quantitative)J0 -3 rm108 243 :M-.012(definition of information.  )Af4_12 sf-.014(Problems of Information Transmission)Af3_12 sf-.012(.  1: 1-7.)A144 264 :M1.407(349)A0 3 rm3.889 .389(.  Koopman, R.  1986.  The Orders of Equidistribution of)J0 -3 rm108 291 :M.757 .076(Subsequences of Some Asymptotically Random Sequences. )Jf4_12 sf1.069 .107(Communications of)J108 315 :M-.071(the ACM)Af3_12 sf-.058(.  29: 802-806.)A144 336 :M.08(350)A0 3 rm.153 .015(.  Kranakis, E.  1986.  )J0 -3 rmf4_12 sf0 3 rm.396 .04(Primality and Cryptography)J0 -3 rmf3_12 sf0 3 rm.217 .022(.  John Wiley: New)J0 -3 rm108 363 :M.086(York.)A144 384 :M.093(351)A0 3 rm.265 .026(.  Landau, S.  1988.  Zero Knowledge and the Department of Defense.)J0 -3 rm108 411 :Mf4_12 sf-.115(Notices of the American Mathematical Society)Af3_12 sf-.108(.  35: 5-12.)A144 432 :M1.068(352)A0 3 rm2.753 .275(.  Langdon, G.  1983.  A Note on the Ziv-Lempel Model for)J0 -3 rm108 459 :M.663 .066(Compressing Individual Sequences.  )Jf4_12 sf.72 .072(IEEE Transactions on Information Theory)Jf3_12 sf(.)S108 483 :M-.046(IT-29: 284-286.)A144 504 :M.604(353)A0 3 rm1.819 .182(.  L'Ecuyer, P.  1988.  Efficient and Portable Combined Random)J0 -3 rm108 531 :M-.028(Number Generators.  )Af4_12 sf-.03(Communications of the ACM)Af3_12 sf-.027(.  31\(6\): 742-749, 774.)A144 552 :M.855(354)A0 3 rm2.504 .25(.  L'Ecuyer, P. and R. Proulx.  1989.  About Polynomial-Time)J0 -3 rm108 579 :M3.171 .317("Unpredictable" Generators.  )Jf4_12 sf3.031 .303(Proceedings of the 1989 Winter Simulation)J108 603 :M.043(Conference)Af3_12 sf.128 .013(.  467-476.  IEEE Press: New York.)J144 624 :M1.612(355)A0 3 rm4.666 .467(.  L'Ecuyer, P.  1990.  Random numbers for simulation.)J0 -3 rm108 651 :Mf4_12 sf-.05(Communications of the ACM)Af3_12 sf-.044(.  33\(10\): 86-97.)Aendp%%Page: 78 78%%BeginPageSetupinitializepage(TARDIS; page: 78 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 78)J144 120 :Mf3_12 sf.547(356)A0 3 rm1.428 .143(.  Letham, L., D. Hoff and A. Folmsbee.  1986.  A 128k EPROM)J0 -3 rm108 147 :M1.603 .16(Using Encryption of Pseudorandom Numbers to Enable Read Access.  )Jf4_12 sf.671(IEEE)A108 171 :M-.06(Journal of Solid-State Circuits)Af3_12 sf-.066(.  SC-21: 881-888.)A144 192 :M.902(357)A0 3 rm2.206 .221(.  Lempel, A., and J. Ziv.  1976.  On the Complexity of Finite)J0 -3 rm108 219 :M.041 .004(Sequences.  )Jf4_12 sf.057 .006(IEEE Transactions on Information Theory)Jf3_12 sf.036 .004(.  IT-22: 75-81.)J144 240 :M(358)S0 3 rm-.008(.  Levin, L.  1985.  One-Way Functions and Pseudorandom Generators.)A0 -3 rm108 267 :Mf4_12 sf-.019(17th ACM Symposium on Theory of Computing)Af3_12 sf-.018(.  363-365.)A144 288 :M.024(359)A0 3 rm.072 .007(.  Levine, J. and V. Brawley.  1977.  Some Cryptographic Applications)J0 -3 rm108 315 :M-.038(of Permutation Polynomials.  )Af4_12 sf-.041(Cryptologia)Af3_12 sf-.037(.  1: 76-92.)A144 336 :M.443(360)A0 3 rm1.273 .127(.  Levine, J. and R. Chandler.  1987.  Some Further Cryptographic)J0 -3 rm108 363 :M-.048(Applications of Permutation Polynomials.  )Af4_12 sf-.052(Cryptologia)Af3_12 sf-.049(.  11: 211-217.)A144 384 :M(361)S0 3 rm-.012(.  Lewis, T. and W. Payne.  1973.  Generalized Feedback Shift Register)A0 -3 rm108 411 :M-.01(Pseudorandom Number Algorithm.  )Af4_12 sf-.009(Journal of the ACM)Af3_12 sf-.009(.  20: 456-468.)A144 432 :M.343(362)A0 3 rm.898 .09(.  Long, D. and A. Wigderson.  1983.  How Discreet is the Discrete)J0 -3 rm108 459 :M-.027(Log?  )Af4_12 sf-.029(15th ACM Symposium on Theory of Computing)Af3_12 sf-.027(.  413-420.)A144 480 :M.173(363)A0 3 rm.464 .046(.  Lu, S.  1979.  The Existence of Good Cryptosystems for Key Rates)J0 -3 rm108 507 :M.682 .068(Greater than Message Redundancy.  )Jf4_12 sf.838 .084(IEEE Transactions on Information Theory)Jf3_12 sf(.)S108 531 :M-.046(IT-25: 475-477.)A144 552 :M.15(364)A0 3 rm.458 .046(.  MacLaren, M. and G. Marsaglia.  1965.  Uniform Random Number)J0 -3 rm108 579 :M-.058(Generators.  )Af4_12 sf-.063(Journal of the Association for Computing Machinery)Af3_12 sf-.062(. 12: 83-89.)A144 600 :M.109(365)A0 3 rm.35 .035(.  MacWilliams, F. and N. Sloane.  1976.  Pseudo-Random Sequences)J0 -3 rm108 627 :M.041 .004(and Arrays.  )Jf4_12 sf.064 .006(Proceedings of the IEEE)Jf3_12 sf.051 .005(.  64: 1715-1729.)J144 648 :M.702(366)A0 3 rm1.67 .167(.  MacWilliams, F. and N. Sloane.  1977.  )J0 -3 rmf4_12 sf0 3 rm2.428 .243(The Theory of Error-)J0 -3 rm108 675 :M-.005(Correcting Codes)Af3_12 sf-.005(.  North Holland:  Amsterdam / New York.)Aendp%%Page: 79 79%%BeginPageSetupinitializepage(TARDIS; page: 79 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 79)J144 120 :Mf3_12 sf.554(367)A0 3 rm1.598 .16(.  Marsaglia, G., and T. Bray.  1968.  One-Line Random Number)J0 -3 rm108 147 :M.842 .084(Generators and Their Use in Combinations.  )Jf4_12 sf1.122 .112(Communications of the ACM)Jf3_12 sf.43 .043(.  11:)J108 171 :M(757-759.)S144 192 :M.139(368)A0 3 rm.392 .039(.  Marsaglia, G.  1984.  A current view of random number generators.)J0 -3 rm108 219 :Mf4_12 sf1.726 .173(Proceedings of the Sixteenth Symposium on the Interface Between Computer)J108 243 :M-.101(Science and Statistics)Af3_12 sf-.104(.  3-10.)A144 264 :M.456(369)A0 3 rm1.169 .117(.  Marsaglia, G. and L. Tsay.  1985.  Matrices and the Structure of)J0 -3 rm108 291 :M-.037(Random Number Sequences.  )Af4_12 sf-.033(Linear Algebra and its Applications)Af3_12 sf-.034(.  67: 147-156.)A144 312 :M.263(370)A0 3 rm.742 .074(.  Marsaglia, G. and A. Zaman.  1990.  Toward a Universal Random)J0 -3 rm108 339 :M-.049(Number Generator.  )Af4_12 sf-.044(Statistics and Probability Letters)Af3_12 sf-.045(.  8: 35-39.)A144 360 :M.752(371)A0 3 rm2.225 .222(.  Martin-L\232f, P.  1966.  The Definition of Random Sequences.)J0 -3 rm108 387 :Mf4_12 sf-.028(Information and Control)Af3_12 sf-.027(.  9: 602-619.)A144 408 :M.481(372)A0 3 rm1.461 .146(.  Massey, J.  1969.  Shift-Register Synthesis and BCH Decoding.)J0 -3 rm108 435 :Mf4_12 sf.124 .012(IEEE Transactions on Information Theory)Jf3_12 sf.088 .009(.  IT-15: 122-127.)J144 456 :M.379(373)A0 3 rm1.164 .116(.  Massey, J.  1988.  An Introduction to Contemporary Cryptology.)J0 -3 rm108 483 :Mf4_12 sf.085 .009(Proceedings of the IEEE)Jf3_12 sf.061 .006(.  76: 533-549.)J144 504 :M.266(374)A0 3 rm.74 .074(.  Matthews, R.  1989.  On the Derivation of a "Chaotic" Encryption)J0 -3 rm108 531 :M-.037(Algorithm.  )Af4_12 sf-.04(Cryptologia)Af3_12 sf-.037(.  13: 29-42.)A144 552 :M.304(375)A0 3 rm.567 .057(.  McCoy, N.  1972.  )J0 -3 rmf4_12 sf0 3 rm1.36 .136(Fundamentals of Abstract Algebra)J0 -3 rmf3_12 sf0 3 rm.701 .07(.  Allyn and)J0 -3 rm108 579 :M-.076(Bacon: Boston.)A144 600 :M.299(376)A0 3 rm.823 .082(.  Meier, W. and O. Staffelbach.  1988.  Fast Correlation Attacks on)J0 -3 rm108 627 :M.543 .054(Stream Ciphers \(extended abstract\).  )Jf4_12 sf.726 .073(Advances in Cryptology: EUROCRYPT '88)J108 651 :M-.035(Proceedings)Af3_12 sf-.032(.  301-314.  Springer-Verlag: Berlin / New York.)A144 672 :M.429(377)A0 3 rm1.33 .133(.  Mellen, G.  1973.  Cryptology, Computers, and Common Sense.)J0 -3 rm108 699 :Mf4_12 sf-.057(Proceedings of the National Computer Conference)Af3_12 sf-.057(.  1973: 569-579.)Aendp%%Page: 80 80%%BeginPageSetupinitializepage(TARDIS; page: 80 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 80)J144 120 :Mf3_12 sf.263(378)A0 3 rm.745 .075(.  Meyer, C. and W. Touchman.  1972.  Pseudorandom codes can be)J0 -3 rm108 147 :M-.046(cracked.  )Af4_12 sf-.051(Electronic Design 23)Af3_12 sf-.05(.  \(Nov\): 74-76.)A144 168 :M-.032(379)A0 3 rm-.025(.  Meyer, C. and S. Matyas.  1982.  )A0 -3 rmf4_12 sf0 3 rm-.03(Cryptography: A New Dimension in)A0 -3 rm108 195 :M-.021(Computer Data Security)Af3_12 sf-.021(.  John Wiley: New York.)A144 216 :M-.07(380)A0 3 rm-.055(.  Mitchell, D.  1990.  Nonlinear Key Generators.  )A0 -3 rmf4_12 sf0 3 rm-.061(Cryptologia)A0 -3 rmf3_12 sf0 3 rm-.06(. 14: 350-)A0 -3 rm108 243 :M(354.)S144 264 :M.172(381)A0 3 rm.443 .044(.  Mund, S., D. Gollmann, and T. Beth.  1987.  Some Remarks on the)J0 -3 rm108 291 :M2.962 .296(Cross Correlation Analysis of Pseudo Random Generators.  )Jf4_12 sf4.095 .41(Advances in)J108 315 :M1.213 .121(Cryptology:  EUROCRYPT '87 Proceedings)Jf3_12 sf.78 .078(.  25-35.  Springer-Verlag: Berlin /)J108 339 :M.384 .038(New York.)J144 360 :M1.724(382)A0 3 rm3.994 .399(.  Nichols, E., J. Nichols, and K. Musson.  1982.  )J0 -3 rmf4_12 sf0 3 rm2.299(Data)A0 -3 rm108 387 :M-.01(Communications for Microcomputers)Af3_12 sf-.01(.  McGraw-Hill: New York.)A144 408 :M.317(383)A0 3 rm.687 .069(.  Nicolis, G. and I. Prigogine.  1989.  )J0 -3 rmf4_12 sf0 3 rm1.861 .186(Exploring Complexity)J0 -3 rmf3_12 sf0 3 rm.711 .071(. W. H.)J0 -3 rm108 435 :M.049 .005(Freeman and Company:  New York.)J144 456 :M.76(384)A0 3 rm2.194 .219(.  Niederreiter, H.  1987.  A Statistical Analysis of Generalized)J0 -3 rm108 483 :M1.035 .103(Feedback Shift Register Pseudorandom Number Generators.  )Jf4_12 sf1.077 .108(SIAM Journal on)J108 507 :M-.102(Scientific and Statistical Computing)Af3_12 sf-.108(.  8: 1035-1051.)A144 528 :M.527(385)A0 3 rm1.519 .152(.  Nisan, N. and A. Wigderson.  1988.  Hardness vs. Randomness)J0 -3 rm108 555 :M2.295 .229(\(Extended Abstract\).  )Jf4_12 sf2.681 .268(29th IEEE Symposium on Foundations of Computer)J108 579 :M-.121(Science)Af3_12 sf-.112(.  2-11.)A144 600 :M.08(386)A0 3 rm.209 .021(.  Page, E.  1967.  A note on generating random permutations. )J0 -3 rmf4_12 sf0 3 rm.083(Applied)A0 -3 rm108 627 :M-.063(Statistics)Af3_12 sf-.073(.  16: 273-274.)A144 648 :M.238(387)A0 3 rm.672 .067(.  Park, S. and K. Miller.  1988.  Random Number Generators: Good)J0 -3 rm108 675 :M-.029(Ones Are Hard To Find.  )Af4_12 sf-.031(Communications of the ACM)Af3_12 sf-.029(.  31: 1192-1201.)Aendp%%Page: 81 81%%BeginPageSetupinitializepage(TARDIS; page: 81 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 81)J144 120 :Mf3_12 sf-.07(388)A0 3 rm-.053(.  Patterson, W.  1987.  )A0 -3 rmf4_12 sf0 3 rm-.063(Mathematical Cryptology)A0 -3 rmf3_12 sf0 3 rm-.058(.  Rowan & Littlefield:)A0 -3 rm108 147 :M(Totowa, N.J.)S144 168 :M.203(389)A0 3 rm.558 .056(.  Pearson, P.  1988.  Cryptanalysis of the Ciarcia Circuit Cellar Data)J0 -3 rm108 195 :M-.038(Encryptor.  )Af4_12 sf-.043(Cryptologia)Af3_12 sf-.037(.  12: 1-9.)A144 216 :M.299(390)A0 3 rm.866 .087(.  Pearson, P.  1990.  Fast Hashing of Variable-Length Text Strings.)J0 -3 rm108 243 :Mf4_12 sf-.052(Communications of the ACM)Af3_12 sf-.047(.  33: 677-680.)A144 264 :M.527(391)A0 3 rm1.502 .15(.  Pickover, C.  1988.  Pattern Formation and Chaos in Networks.)J0 -3 rm108 291 :Mf4_12 sf-.052(Communications of the ACM)Af3_12 sf-.047(.  31: 136-151.)A144 312 :M.373(392)A0 3 rm.619 .062(.  Pierce, J.  1980.  )J0 -3 rmf4_12 sf0 3 rm1.501 .15(An Introduction to Information Theory)J0 -3 rmf3_12 sf0 3 rm1.496 .15(. 2nd)JcF f1_12 sf.15(9)Asf1.496 .15(Ed.)J0 -3 rm108 339 :M-.034(Dover Publications: New York.)A144 360 :M.588(393)A0 3 rm.383 .038(.  )J0 -3 rmf4_12 sf0 3 rm.623(PKZIP110.EXE)A0 -3 rmf3_12 sf0 3 rm2.75 .275(, APPNOTE.TXT \(shareware file compression)J0 -3 rm108 387 :M-.031(utility documentation\).  1989.  PKWARE: Glendale, WI.)A144 408 :M.43(394)A0 3 rm1.077 .108(.  Plackett, R.  1968.  Random Permutations.  )J0 -3 rmf4_12 sf0 3 rm1.436 .144(Journal of the Royal)J0 -3 rm108 435 :M-.079(Statistical Society.  Series B)Af3_12 sf-.089(.  30: 517-534.)A144 456 :M.103(395)A0 3 rm.324 .032(.  Pless, V.  1977.  Encryption Schemes for Computer Confidentiality.)J0 -3 rm108 483 :Mf4_12 sf.249 .025(IEEE Transactions on Computers)Jf3_12 sf.181 .018(.  C-26: 1133-1136.)J144 504 :M.501(396)A0 3 rm1.082 .108(.  Poundstone, W.  1985.  )J0 -3 rmf4_12 sf0 3 rm2.28 .228(The Recursive Universe)J0 -3 rmf3_12 sf0 3 rm2.735 .274(. Contemporary)J0 -3 rm108 531 :M-.071(Books: Chicago.)A144 552 :M.323(397)A0 3 rm.866 .087(.  Rabin, M.  1980.  Probabilistic Algorithms in Finite Fields. )J0 -3 rmf4_12 sf0 3 rm.49(SIAM)A0 -3 rm108 579 :M-.031(Journal on Computing)Af3_12 sf-.028(.  9: 273-280.)A144 600 :M.023(398)A0 3 rm.071 .007(.  Ramabadran, T. and S. Gaitonde.  A Tutorial on CRC Computations.)J0 -3 rm108 627 :Mf4_12 sf.357 .036(IEEE Micro)Jf3_12 sf.215 .022(.  August: 62-75.)J144 648 :M.668(399)A0 3 rm1.893 .189(.  Rao, C.  1961.  Generation of Random Permutations of Given)J0 -3 rm108 675 :M.279 .028(Number of Elements Using Random Sampling Numbers.  )Jf4_12 sf.304 .03(Sankhya. Series A)Jf3_12 sf.127 .013(.  23:)J108 699 :M(305-307.)Sendp%%Page: 82 82%%BeginPageSetupinitializepage(TARDIS; page: 82 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 82)J144 120 :Mf3_12 sf.25(400)A0 3 rm.47 .047(.  Rasband, S.  1990.  )J0 -3 rmf4_12 sf0 3 rm1.048 .105(Chaotic Dynamics of Nonlinear Systems)J0 -3 rmf3_12 sf0 3 rm.795 .08(. John)J0 -3 rm108 147 :M.22 .022(Wiley & Sons: New York.)J144 168 :M.489(401)A0 3 rm1.308 .131(.  Reed, I. and R. Turn.  1969.  A Generalization of Shift-Register)J0 -3 rm108 195 :M.351 .035(Sequence Generators.  )Jf4_12 sf.382 .038(Journal of the Association for Computing Machinery)Jf3_12 sf.161 .016(.  16:)J108 219 :M(461-473.)S144 240 :M.945(402)A0 3 rm2.762 .276(.  Reeds, J.  1977.  "Cracking" a Random Number Generator.)J0 -3 rm108 267 :Mf4_12 sf-.025(Cryptologia)Af3_12 sf-.022(.  1\(1\).  \(Also [82: 509-515].\))A144 288 :M.628(403)A0 3 rm1.751 .175(.  Reif, J. and D. Tygar.  1988.  Efficient Parallel Pseudorandom)J0 -3 rm108 315 :M-.032(Number Generation.  )Af4_12 sf-.034(SIAM Journal on Computing)Af3_12 sf-.031(.  17: 404-411.)A144 336 :M.257(404)A0 3 rm.796 .08(.  Retter, C.  1984.  Cryptanalysis of a MacLaren-Marsaglia System.)J0 -3 rm108 363 :Mf4_12 sf-.061(Cryptologia)Af3_12 sf-.054(.  8:97-108.  Also see letters, 8: 374-378.)A144 384 :M.47(405)A0 3 rm1.359 .136(.  Retter, C.  1985.  A Key Search Attack on MacLaren-Marsaglia)J0 -3 rm108 411 :M-.009(Systems.  )Af4_12 sf-.01(Cryptologia)Af3_12 sf-.009(.  9: 114-130.)A144 432 :M.299(406)A0 3 rm.562 .056(.  Rietman, E.  1989.  )J0 -3 rmf4_12 sf0 3 rm1.139 .114(Exploring the Geometry of Nature)J0 -3 rmf3_12 sf0 3 rm1.378 .138(. Windcrest)J0 -3 rm108 459 :M.097 .01(Books, Blue Ridge Summit, PA.)J144 480 :M-.027(407)A0 3 rm-.022(.  Ritter, T.  1990.  Substitution Cipher with Pseudo-Random Shuffling:)A0 -3 rm108 507 :M-.035(The Dynamic Substitution Combiner.  )Af4_12 sf-.035(Cryptologia)Af3_12 sf-.035(.  XIV\(4\): 289-303.)A144 528 :M.793(408)A0 3 rm2.479 .248(.  Ritter, T.  1991.  Transposition Cipher with Pseudo-Random)J0 -3 rm108 555 :M-.038(Shuffling:  The Dynamic Transposition Combiner.  )Af4_12 sf-.039(Cryptologia)Af3_12 sf-.04(.  XV\(1\).)A144 576 :M.779(409)A0 3 rm1.953 .195(.  Rivest, R, A. Shamir, and L. Adleman.  1978.  A Method for)J0 -3 rm108 603 :M.416 .042(Obtaining Digital Signatures and Public Key Cryptosystems. )Jf4_12 sf.655 .065(Communications of)J108 627 :M-.071(the ACM)Af3_12 sf-.058(.  21: 120-126.)A144 648 :M1.088(410)A0 3 rm3.313 .331(.  Rivest, R.  1980.  "Forwards and Backwards" Encryption.)J0 -3 rm108 675 :Mf4_12 sf-.025(Cryptologia)Af3_12 sf-.022(.  4\(1\).  \(Also [82: 433-437].\))Aendp%%Page: 83 83%%BeginPageSetupinitializepage(TARDIS; page: 83 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 83)J144 120 :Mf3_12 sf.092(411)A0 3 rm.247 .025(.  Robbins, D. and E. Bolker.  1981.  The bias of three pseudo-random)J0 -3 rm108 147 :M-.056(shuffles.  )Af4_12 sf-.072(Aequationes Mathematicae)Af3_12 sf-.066(.  22: 268-292.)A144 168 :M.023(412)A0 3 rm.072 .007(.  Rubin, F.  1978.  Computer Methods for Decrypting Random Stream)J0 -3 rm108 195 :M-.024(Ciphers.  )Af4_12 sf-.027(Cryptologia)Af3_12 sf-.024(.  2\(3\).  \(Also [83: 493-508].\))A144 216 :M.354(413)A0 3 rm.927 .093(.  Rubin, F.  1979.  Decrypting a Stream Cipher Based on J-K Flip-)J0 -3 rm108 243 :M.896 .09(Flops.  )Jf4_12 sf1.903 .19(IEEE Transactions on Computers)Jf3_12 sf.955 .095(.  C28: 483-487.  \(Also )Jf4_12 sf.408(Cryptologia)A108 267 :Mf3_12 sf-.026(5\(1\), and [83: 283-293].\))A144 288 :M.064(414)A0 3 rm.162 .016(.  Rudich, S.  1985.  Inferring the structure of a Markov Chain from its)J0 -3 rm108 315 :M.654 .065(output.  )Jf4_12 sf1.065 .106(26th IEEE Symposium on the Foundations of Computer Science)Jf3_12 sf.57 .057(.  321-)J108 339 :M(326.)S144 360 :M.661(415)A0 3 rm1.984 .198(.  Rueppel, R.  1985.  Correlation Immunity and the Summation)J0 -3 rm108 387 :M1.974 .197(Generator.  )Jf4_12 sf2.597 .26(Advances in Cryptology:  CRYPTO '85 Proceedings)Jf3_12 sf2.86 .286(. 260-272.)J108 411 :M-.057(Springer-Verlag: Berlin / New York.)A144 432 :M.455(416)A0 3 rm1.405 .141(.  Rueppel, R.  1987.  Linear Complexity and Random Sequences.)J0 -3 rm108 459 :Mf4_12 sf.558 .056(Advances in Cryptology:  CRYPTO '86 Proceedings)Jf3_12 sf.569 .057(.  167-188. Springer-Verlag:)J108 483 :M-.037(Berlin / New York.)A144 504 :M-.026(417)A0 3 rm-.021(.  Rueppel, R. and O. Staffelbach.  1987.  Products of Linear Sequences)A0 -3 rm108 531 :M.873 .087(with Maximal Complexity.  )Jf4_12 sf1.092 .109(IEEE Transactions on Information Theory)Jf3_12 sf.599 .06(.  IT-33:)J108 555 :M(124-131.)S144 576 :M.737(418)A0 3 rm2.187 .219(.  Rueppel, R.  1988.  When Shift Registers Clock Themselves.)J0 -3 rm108 603 :Mf4_12 sf6.518 .652(Advances in Cryptology:  EUROCRYPT '87 Proceedings)Jf3_12 sf3.74 .374(.  53-64.)J108 627 :M-.055(Springer-Verlag:  Berlin / New York.)A144 648 :M.086(419)A0 3 rm.244 .024(.  Sandelius, M.  1962.  A simple randomization procedure. )J0 -3 rmf4_12 sf0 3 rm.374 .037(Journal of)J0 -3 rm108 675 :M-.077(the Royal Statistical Society.  Series B)Af3_12 sf-.085(.  24: 472-481.)Aendp%%Page: 84 84%%BeginPageSetupinitializepage(TARDIS; page: 84 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 84)J144 120 :Mf3_12 sf.635(420)A0 3 rm1.903 .19(.  Santha, M. and U. Vazirani.  1986.  Generating Quasi-random)J0 -3 rm108 147 :M2.717 .272(Sequences from Semi-random Sources.  )Jf4_12 sf2.772 .277(Journal of Computer and System)J108 171 :M-.085(Sciences)Af3_12 sf-.08(.  33: 75-87.)A144 192 :M.156(421)A0 3 rm.452 .045(.  Sastri, K.  1975.  Specified sequence linear feedback shift registers.)J0 -3 rm108 219 :Mf4_12 sf-.071(International Journal of Systems Science)Af3_12 sf-.073(.  6: 1009-1019.)A144 240 :M.392(422)A0 3 rm1.125 .112(.  Shamir, A.  1981.  On the generation of cryptographically strong)J0 -3 rm108 267 :M-.03(pseudo-random sequences.  )Af4_12 sf-.03(8th International Colloquium on Automata, Language,)A108 291 :M.424 .042(and Programming)Jf3_12 sf.208 .021(.  544-550.)J144 312 :M.299(423)A0 3 rm.678 .068(.  Shannon, C. and W. Weaver.  1949.  )J0 -3 rmf4_12 sf0 3 rm1.241 .124(The Mathematical Theory of)J0 -3 rm108 339 :M-.063(Communication)Af3_12 sf-.051(.  University of Illinois Press: Urbana, Chicago.)A144 360 :M.354(424)A0 3 rm1.105 .11(.  Shannon, C.  1949.  Communication Theory of Secrecy Systems.)J0 -3 rm108 387 :Mf4_12 sf-.061(Bell System Technical Journal)Af3_12 sf-.061(.  28: 656-715.)A144 408 :M.918(425)A0 3 rm3 .3(.  Siegenthaler, T.  1984.  Correlation-Immunity of Nonlinear)J0 -3 rm108 435 :M1.416 .142(Combining Functions for Cryptographic Applications.  )Jf4_12 sf1.639 .164(IEEE Transactions on)J108 459 :M-.028(Information Theory)Af3_12 sf-.027(.  IT-30: 776-780.)A144 480 :M.075(426)A0 3 rm.211 .021(.  Siegenthaler, T.  1985.  Decrypting a Class of Stream Ciphers Using)J0 -3 rm108 507 :M.041 .004(Ciphertext Only.  )Jf4_12 sf.061 .006(IEEE Transactions on Computers)Jf3_12 sf.035 .003(.  C34: 81-85.)J144 528 :M.058(427)A0 3 rm.192 .019(.  Siegenthaler, T.  1986.  Cryptanalysts Representation of Nonlinearly)J0 -3 rm108 555 :M.012 .001(Filtered ML-Sequences.  )Jf4_12 sf.017 .002(Advances in Cryptology: EUROCRYPT)JcF f5_12 sf.002(9)Asf.017 .002('85 Proceedings)Jf3_12 sf(.)S108 579 :M-.043(103-110.  Springer-Verlag:  Berlin / New York.)A144 600 :M.121(428)A0 3 rm.34 .034(.  Siegenthaler, T.  1986.  Design of Combiners to Prevent Divide and)J0 -3 rm108 627 :M.057 .006(Conquer Attacks.  )Jf4_12 sf.072 .007(Advances in Cryptology:  CRYPTO '85 Proceedings)Jf3_12 sf.054 .005(.  Springer-)J108 651 :M-.062(Verlag:  Berlin / New York.)A144 672 :M.456(429)A0 3 rm1.222 .122(.  Siegenthaler, T., R. Forre, and A. Kleiner.  1987.  Generation of)J0 -3 rm108 699 :M.798 .08(Binary Sequences with Controllable Complexity and Ideal r-Tupel Distribution.)Jendp%%Page: 85 85%%BeginPageSetupinitializepage(TARDIS; page: 85 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 85)J108 121 :Mf4_12 sf2.328 .233(Advances in Cryptology:  EUROCRYPT '87 Proceedings)Jf3_12 sf1.72 .172(. 15-23.  Springer-)J108 145 :M-.062(Verlag:  Berlin / New York.)A144 166 :M.675(430)A0 3 rm2.175 .217(.  Simmons, G.  1979.  Symmetric and Asymmetric Encryption.)J0 -3 rm108 193 :Mf4_12 sf-.033(Computing Surveys)Af3_12 sf-.03(.  11: 305-330.)A144 214 :M.641(431)A0 3 rm1.919 .192(.  Simmons, G.  1988.  A Survey of Information Authentication.)J0 -3 rm108 241 :Mf4_12 sf.085 .009(Proceedings of the IEEE)Jf3_12 sf.061 .006(.  76: 603-620.)J144 262 :M.108(432)A0 3 rm.291 .029(.  Sloane, N.  1983.  Encrypting by Random Rotations. )J0 -3 rmf4_12 sf0 3 rm.106(Cryptography.)A0 -3 rm108 289 :M1.712 .171(Proceedings, Burg Feuerstein 1982)Jf3_12 sf1.047 .105(.  71-128.  Springer-Verlag:  Berlin / New)J108 313 :M.086(York.)A144 334 :M.196(433)A0 3 rm.547 .055(.  Stahnke, W.  1973.  Primitive Binary Polynomials. )J0 -3 rmf4_12 sf0 3 rm1.055 .106(Mathematics of)J0 -3 rm108 361 :M-.043(Computation)Af3_12 sf-.038(.  27: 977-980.)A144 382 :M.561(434)A0 3 rm1.574 .157(.  Stern, J.  1987.  Secret Linear Congruential Generators are Not)J0 -3 rm108 409 :M.32 .032(Cryptographically Secure.  )Jf4_12 sf.334 .033(28th Annual Symposium on Foundations of Computer)J108 433 :M-.1(Science)Af3_12 sf-.104(, 421-426.)A144 454 :M.214(435)A0 3 rm.598 .06(.  Storer, J. and T. Szymanski.  1982.  Data Compression via Textual)J0 -3 rm108 481 :M-.057(Substitution.  )Af4_12 sf-.068(Journal of the ACM)Af3_12 sf-.064(.  29: 928-951.)A144 502 :M.086(436)A0 3 rm.24 .024(.  Swift, J.  1960.  Construction of Galois Fields of Characteristic Two)J0 -3 rm108 529 :M-.059(and Irreducible Polynomials.  )Af4_12 sf-.066(Mathematics of Computation)Af3_12 sf-.06(.  14: 99-103.)A144 550 :M.903(437)A0 3 rm1.937 .194(.  Tanenbaum, A.  1981.  )J0 -3 rmf4_12 sf0 3 rm5.367 .537(Computer Networks)J0 -3 rmf3_12 sf0 3 rm3.188 .319(.  Prentice-Hall:)J0 -3 rm108 577 :M.173 .017(Englewood Cliffs, NJ.)J144 598 :M.086(438)A0 3 rm.233 .023(.  Tang, Y., A. Mees and L. Chua.  1983.  Synchronization and Chaos.)J0 -3 rm108 625 :Mf4_12 sf.153 .015(IEEE Transactions on Circuits and Systems)Jf3_12 sf.135 .013(.  CAS-30: 620-626.)J144 646 :M.567(439)A0 3 rm1.74 .174(.  Tausworthe, R.  1965.  Random Numbers Generated by Linear)J0 -3 rm108 673 :M-.062(Recurrence Modulo Two.  )Af4_12 sf-.062(Mathematics of Computation)Af3_12 sf-.058(.  19: 201-209.)Aendp%%Page: 86 86%%BeginPageSetupinitializepage(TARDIS; page: 86 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 86)J144 120 :Mf3_12 sf.373(440)A0 3 rm1.161 .116(.  Tezuka, S.  1987.  Walsh-Spectral Test for GFSR Pseudorandom)J0 -3 rm108 147 :M-.019(Numbers.  )Af4_12 sf-.02(Communications of the ACM)Af3_12 sf-.018(.  30: 731-735.)A144 168 :M.495(441)A0 3 rm1.441 .144(.  Tezuka, S.  1987.  On the Discrepancy of GFSR Pseudorandom)J0 -3 rm108 195 :M-.041(Numbers.  )Af4_12 sf-.04(Journal of the Association for Computing Machinery)Af3_12 sf-.039(.  34: 939-949.)A144 216 :M.675(442)A0 3 rm2.07 .207(.  Tezuka, S.  1988.  On Optimal GFSR Pseudorandom Number)J0 -3 rm108 243 :M-.051(Generators.  )Af4_12 sf-.058(Mathematics of Computation)Af3_12 sf-.054(.  50: 531-533.)A144 264 :M.19(443)A0 3 rm.509 .051(.  Tootill, J., W. Robinson, and A. Adams.  1971.  The Runs Up-and-)J0 -3 rm108 291 :M.197 .02(Down Performance of Tausworthe Pseudo-Random Number Generators.  )Jf4_12 sf.05(Journal)A108 315 :M-.066(of the Association for Computing Machinery)Af3_12 sf-.067(.  18:381-399.)A144 336 :M.268(444)A0 3 rm.74 .074(.  Tootill, J., W. Robinson, and D. Eagle.  1973.  An Asymptotically)J0 -3 rm108 363 :M-.055(Random Tausworthe Sequence.  )Af4_12 sf-.053(Journal of the ACM)Af3_12 sf-.05(.  20: 469-481.)A144 384 :M.411(445)A0 3 rm1.137 .114(.  Vahle, M. and L. Tolendino.  1982.  Breaking a Pseudo Random)J0 -3 rm108 411 :M-.036(Number Based Cryptographic Algorithm.  )Af4_12 sf-.036(Cryptologia)Af3_12 sf-.034(.  6: 319-328.)A144 432 :M.541(446)A0 3 rm1.637 .164(.  Vazirani, U. and V. Vazirani.  1983.  Trapdoor Pseudo-random)J0 -3 rm108 459 :M.13 .013(Number Generators with Applications to Protocol Design.  )Jf4_12 sf.177 .018(24th IEEE Symposium)J108 483 :M-.05(on the Foundations of Computer Science)Af3_12 sf-.048(.  23-30.)A144 504 :M.227(447)A0 3 rm.629 .063(.  Vazirani, U. and V. Vazirani.  1985.  Efficient and Secure Pseudo-)J0 -3 rm108 531 :M3.113 .311(Random Number Generation.  \(extended abstract\)  )Jf4_12 sf3.878 .388(Advances in Applied)J108 555 :M1.261 .126(Cryptology:  Proceedings of CRYPTO)JcF f5_12 sf.126(9)Asf1.261 .126(84)Jf3_12 sf.899 .09(.  193-202.  Springer-Verlag: Berlin /)J108 579 :M.384 .038(New York.)J144 600 :M.167(448)A0 3 rm.531 .053(.  Vazirani, U.  1985.  Towards a Strong Communication Complexity)J0 -3 rm108 627 :M2.305 .231(Theory or Generating Quasi-Random Sequences from Two Communicating)J108 651 :M.639 .064(Slightly-Random Sources.  )Jf4_12 sf.588 .059(Proceedings of the 17th Annual ACM Symposium on)J108 675 :M-.04(the Theory of Computing)Af3_12 sf-.04(.  366-378.)Aendp%%Page: 87 87%%BeginPageSetupinitializepage(TARDIS; page: 87 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 87)J144 120 :Mf3_12 sf(449)S0 3 rm.003 0(.  Vernam, G.  1926.  Cipher Printing Telegraph Systems. )J0 -3 rmf4_12 sf0 3 rm(Transactions)S0 -3 rm108 147 :M-.012(of the AIEE)Af3_12 sf-.012(.  45: 295-301.)A144 168 :M.052(450)A0 3 rm.148 .015(.  von Neumann, J.  1963.  Various techniques used in connection with)J0 -3 rm108 195 :M-.015(random digits.  )Af4_12 sf-.017(John von Neumann, Collected Works)Af3_12 sf-.015(. 5:)AcF f1_12 sf-.015(9)Asf-.015(768-770.  A. H. Taub, Ed.)A108 219 :M-.05(MacMillan: New York.)A144 240 :M1.433(451)A0 3 rm3.7 .37(.  Wagner, P., P. Putter and M. Cain.  1987.  Large-Scale)J0 -3 rm108 267 :M.117 .012(Randomization Techniques.  )Jf4_12 sf.111 .011(Advances in Cryptology:  CRYPTO '86 Proceedings)Jf3_12 sf(.)S108 291 :M-.043(394-404.  Springer-Verlag:  Berlin / New York.)A144 312 :M.178(452)A0 3 rm.469 .047(.  Watson, E.  1962.  Primitive Polynomials \(Mod 2\). )J0 -3 rmf4_12 sf0 3 rm.96 .096(Mathematics of)J0 -3 rm108 339 :M-.043(Computation)Af3_12 sf-.038(.  16: 368-369.)A144 360 :M.654(453)A0 3 rm1.729 .173(.  Wayner, P.  1987.  Building an Encryption System. )J0 -3 rmf4_12 sf0 3 rm.747(Computer)A0 -3 rm108 387 :M-.026(Language)Af3_12 sf-.023(.  December: 67-72.)A144 408 :M.948(454)A0 3 rm2.772 .277(.  Welch, T.  1984.  A Technique for High-Performance Data)J0 -3 rm108 435 :M.036 .004(Compression.  )Jf4_12 sf.01(Computer)Af3_12 sf.026 .003(.  June, 1984: 8-19.)J144 456 :M.115(455)A0 3 rm.354 .035(.  Westlake, W.  1967.  A Uniform Random Number Generator Based)J0 -3 rm108 483 :M.312 .031(on the Combination of Two Congruential Generators.  )Jf4_12 sf.359 .036(Journal of the Association)J108 507 :M-.046(for Computing Machinery)Af3_12 sf-.042(.  14: 337-340.)A144 528 :M.932(456)A0 3 rm2.886 .289(.  Wheeler, D.  1989.  Problems with Chaotic Cryptosystems.)J0 -3 rm108 555 :Mf4_12 sf-.054(Cryptologia)Af3_12 sf-.052(.  13: 243-250.)A144 576 :M.08(457)A0 3 rm.216 .022(.  Wichmann, B. and I. Hill.  1982.  An Efficient and Portable Pseudo-)J0 -3 rm108 603 :M2.994 .299(Random Number Generator.  )Jf4_12 sf4.131 .413(Applied Statistics)Jf3_12 sf1.973 .197(.  33: 706-711.  \(Also see)J108 627 :M-.011(comments and responses 33: 123, 34: 198-200 and 35: 89.\))A144 648 :M.494(458)A0 3 rm1.439 .144(.  Wichmann, B. and D. Hill.  1987.  Building a Random-Number)J0 -3 rm108 675 :M-.037(Generator.  )Af4_12 sf-.042(Byte)Af3_12 sf-.04(.  March, 1987.  127-128.)Aendp%%Page: 88 88%%BeginPageSetupinitializepage(TARDIS; page: 88 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 88)J144 120 :Mf3_12 sf.215(459)A0 3 rm.694 .069(.  Wikramaratna, R.  1989.  ACORN_A New Method for Generating)J0 -3 rm108 147 :M2.972 .297(Sequences of Uniformly Distributed Pseudo-random Numbers. )Jf4_12 sf3 .3(Journal of)J108 171 :M-.031(Computational Physics)Af3_12 sf-.028(.  83: 16-31.)A144 192 :M.086(460)A0 3 rm.247 .025(.  Winternitz, R.  1984.  A Secure One-Way Hash Function Built from)J0 -3 rm108 219 :M.085 .009(DES.  )Jf4_12 sf.156 .016(1984 IEEE Symposium on Secrecy and Privacy)Jf3_12 sf.1 .01(.  88-90.)J144 240 :M.03(461)A0 3 rm.095 .009(.  Wolfram, S.  1985.  Cryptography with Cellular Automata \(extended)J0 -3 rm108 267 :M.334 .033(abstract\).  )Jf4_12 sf.498 .05(Advances in Cryptology:  CRYPTO '85 Proceedings)Jf3_12 sf.684 .068(. Springer-Verlag,)J108 291 :M(1986.  429-432.)S144 312 :M.594(462)A0 3 rm1.803 .18(.  Wolfram, S.  1986.  Random Sequence Generation by Cellular)J0 -3 rm108 339 :M-.077(Automata.  )Af4_12 sf-.079(Advances in Applied Mathematics)Af3_12 sf-.074(.  7: 123-169.)A144 360 :M.411(463)A0 3 rm1.188 .119(.  Yao, A.  1982.  Theory and Applications of Trapdoor Functions.)J0 -3 rm108 387 :Mf4_12 sf.521 .052(Proceedings of the 23rd IEEE Symposium on Foundations of Computer Science)Jf3_12 sf(.)S108 411 :M(80-91.)S144 432 :M.443(464)A0 3 rm1.301 .13(.  Yuen, C.  1977.  Testing Random Number Generators by Walsh)J0 -3 rm108 459 :M.167 .017(Transform.  )Jf4_12 sf.243 .024(IEEE Transactions on Computers)Jf3_12 sf.161 .016(.  C-26: 329-333.)J144 480 :M.018(465)A0 3 rm.045 .005(.  Zeisel, H.  1986.  A Remark on Algorithm AS 183.  An Efficient and)J0 -3 rm108 507 :M-.054(Portable Pseudo-random Number Generator.  )Af4_12 sf-.048(Applied Statistics)Af3_12 sf-.048(.  35: 89.)A144 528 :M.041(466)A0 3 rm.109 .011(.  Zierler, N. and J. Brillhart.  1968.  On Primitive Trinomials \(Mod 2\).)J0 -3 rm108 555 :Mf4_12 sf-.027(Information and Control)Af3_12 sf-.026(.  13: 541-554.)A144 576 :M.041(467)A0 3 rm.109 .011(.  Zierler, N. and J. Brillhart.  1969.  On Primitive Trinomials \(Mod 2\),)J0 -3 rm108 603 :M-.016(II.  )Af4_12 sf-.024(Information and Control)Af3_12 sf-.024(.  14: 566-569.)A144 624 :M.069(468)A0 3 rm.186 .019(.  Ziv, J. and A. Lempel.  1977.  A Universal Algorithm for Sequential)J0 -3 rm108 651 :M.073 .007(Data Compression.  )Jf4_12 sf.095 .009(IEEE Transactions on Information Theory)Jf3_12 sf.084 .008(. IT-23: 337-343.)J108 699 :Mf0_12 sf2.38 .238(BIOGRAPHICAL SKETCH)Jendp%%Page: 89 89%%BeginPageSetupinitializepage(TARDIS; page: 89 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 89)J144 121 :Mf3_12 sf.488 .049(Terry Ritter is a registered Professional Engineer, a member of IEEE and)J108 145 :M.294 .029(ACM, with a background in computer architecture, hardware, software, and now,)J108 169 :M.819 .082(library research.  He has spent the last few years being Blue Jean Software and)J108 193 :M-.054(Blue Jean Computer Engineering.)Aendp%%Page: 90 90%%BeginPageSetupinitializepage(TARDIS; page: 90 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 90)J-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a72 131.24 -.24 .24 215.24 131 .24 72 131 @a72 146 :Mf3_12 sf(256)S72 161 :M(257)S72 176 :M(258)S72 191 :M(259)S72 206 :M(260)S72 221 :M(261)S72 236 :M(262)S72 251 :M(263)S72 266 :M(264)S72 281 :M(265)S72 296 :M(266)S72 311 :M(267)S72 326 :M(268)S72 341 :M(269)S72 356 :M(270)S72 371 :M(271)S72 386 :M(272)S72 401 :M(273)S72 416 :M(274)S72 431 :M(275)S72 446 :M(276)S72 461 :M(277)S72 476 :M(278)S72 491 :M(279)S72 506 :M(280)S72 521 :M(281)S72 536 :M(282)S72 551 :M(283)S72 566 :M(284)S72 581 :M(285)S72 596 :M(286)S72 611 :M(287)S72 626 :M(288)S72 641 :M(289)S72 656 :M(290)S72 671 :M(291)S72 686 :M(292)S72 701 :M(293)Sendp%%Page: 91 91%%BeginPageSetupinitializepage(TARDIS; page: 91 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 91)J-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a72 118.24 -.24 .24 539.24 118 .24 72 118 @a72 133 :Mf3_12 sf(294)S72 148 :M(295)S72 163 :M(296)S72 178 :M(297)S72 193 :M(298)S72 208 :M(299)S72 223 :M(300)S72 238 :M(301)S72 253 :M(302)S72 268 :M(303)S72 283 :M(304)S72 298 :M(305)S72 313 :M(306)S72 328 :M(307)S72 343 :M(308)S72 358 :M(309)S72 373 :M(310)S72 388 :M(311)S72 403 :M(312)S72 418 :M(313)S72 433 :M(314)S72 448 :M(315)S72 463 :M(316)S72 478 :M(317)S72 493 :M(318)S72 508 :M(319)S72 523 :M(320)S72 538 :M(321)S72 553 :M(322)S72 568 :M(323)S72 583 :M(324)S72 598 :M(325)S72 613 :M(326)S72 628 :M(327)S72 643 :M(328)S72 658 :M(329)S72 673 :M(330)S72 688 :M(331)S72 703 :M(332)Sendp%%Page: 92 92%%BeginPageSetupinitializepage(TARDIS; page: 92 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 92)J-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a72 118.24 -.24 .24 539.24 118 .24 72 118 @a72 133 :Mf3_12 sf(333)S72 148 :M(334)S72 163 :M(335)S72 178 :M(336)S72 193 :M(337)S72 208 :M(338)S72 223 :M(339)S72 238 :M(340)S72 253 :M(341)S72 268 :M(342)S72 283 :M(343)S72 298 :M(344)S72 313 :M(345)S72 328 :M(346)S72 343 :M(347)S72 358 :M(348)S72 373 :M(349)S72 388 :M(350)S72 403 :M(351)S72 418 :M(352)S72 433 :M(353)S72 448 :M(354)S72 463 :M(355)S72 478 :M(356)S72 493 :M(357)S72 508 :M(358)S72 523 :M(359)S72 538 :M(360)S72 553 :M(361)S72 568 :M(362)S72 583 :M(363)S72 598 :M(364)S72 613 :M(365)S72 628 :M(366)S72 643 :M(367)S72 658 :M(368)S72 673 :M(369)S72 688 :M(370)S72 703 :M(371)Sendp%%Page: 93 93%%BeginPageSetupinitializepage(TARDIS; page: 93 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 93)J-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a72 118.24 -.24 .24 539.24 118 .24 72 118 @a72 133 :Mf3_12 sf(372)S72 148 :M(373)S72 163 :M(374)S72 178 :M(375)S72 193 :M(376)S72 208 :M(377)S72 223 :M(378)S72 238 :M(379)S72 253 :M(380)S72 268 :M(381)S72 283 :M(382)S72 298 :M(383)S72 313 :M(384)S72 328 :M(385)S72 343 :M(386)S72 358 :M(387)S72 373 :M(388)S72 388 :M(389)S72 403 :M(390)S72 418 :M(391)S72 433 :M(392)S72 448 :M(393)S72 463 :M(394)S72 478 :M(395)S72 493 :M(396)S72 508 :M(397)S72 523 :M(398)S72 538 :M(399)S72 553 :M(400)S72 568 :M(401)S72 583 :M(402)S72 598 :M(403)S72 613 :M(404)S72 628 :M(405)S72 643 :M(406)S72 658 :M(407)S72 673 :M(408)S72 688 :M(409)S72 703 :M(410)Sendp%%Page: 94 94%%BeginPageSetupinitializepage(TARDIS; page: 94 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 94)J-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a72 118.24 -.24 .24 539.24 118 .24 72 118 @a72 133 :Mf3_12 sf(411)S72 148 :M(412)S72 163 :M(413)S72 178 :M(414)S72 193 :M(415)S72 208 :M(416)S72 223 :M(417)S72 238 :M(418)S72 253 :M(419)S72 268 :M(420)S72 283 :M(421)S72 298 :M(422)S72 313 :M(423)S72 328 :M(424)S72 343 :M(425)S72 358 :M(426)S72 373 :M(427)S72 388 :M(428)S72 403 :M(429)S72 418 :M(430)S72 433 :M(431)S72 448 :M(432)S72 463 :M(433)S72 478 :M(434)S72 493 :M(435)S72 508 :M(436)S72 523 :M(437)S72 538 :M(438)S72 553 :M(439)S72 568 :M(440)S72 583 :M(441)S72 598 :M(442)S72 613 :M(443)S72 628 :M(444)S72 643 :M(445)S72 658 :M(446)S72 673 :M(447)S72 688 :M(448)S72 703 :M(449)Sendp%%Page: 95 95%%BeginPageSetupinitializepage(TARDIS; page: 95 of 95)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC29 30 538 762 rC341 46 :Mf0_12 sf.144 .014(Ritter -- Cryptographic RNG'sPage 95)J-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a72 118.24 -.24 .24 539.24 118 .24 72 118 @a72 133 :Mf3_12 sf(450)S72 148 :M(451)S72 163 :M(452)S72 178 :M(453)S72 193 :M(454)S72 208 :M(455)S72 223 :M(456)S72 238 :M(457)S72 253 :M(458)S72 268 :M(459)S72 283 :M(460)S72 298 :M(461)S72 313 :M(462)S72 328 :M(463)S72 343 :M(464)S72 358 :M(465)S72 373 :M(466)S72 388 :M(467)S72 403 :M(468)Sendp%%Trailerend		% md%%EOF