<HTML>
<HEAD>
  <!-- Created with AOLpress/2.0 -->
  <TITLE>SKIPJACK and KEA Algorithm Specifications</TITLE>
</HEAD>
<BODY BGCOLOR="#ffffff">
<P ALIGN=Center>
25 June 1998<BR>
Source: Fax from <A HREF="http://www.nist.gov">National Institute of Standards
and Technology</A> (thanks to Ed Roback);<BR>
hardcopy from the <A HREF="http://www.nsa.gov:8080">National Security
Agency</A> (thanks to VT, Public Affairs Office)
<P ALIGN=Center>
The National Security Agency
<A HREF="http://www.defenselink.mil/news/Jun1998/b06231998_bt316-98.html">announced</A>
on June 23, 1998, that these algorithms <BR>
had been declassified. NIST
<A HREF="http://csrc.nist.gov/encryption/skipjack-kea.htm">published this
document</A> (PDF) on June 24, 1998
<P ALIGN=Center>
This file (with images) is available Zipped:
<A HREF="http://jya.com/skipjack-spec.zip">http://jya.com/skipjack-spec.zip</A>
(295K)
<P>
  <HR>
<BR>
<BR>
<H1 ALIGN=Center>
  <I>SKIPJACK and KEA Algorithm Specifications</I><BR>
</H1>
<H3 ALIGN=Center>
  Version 2.0<BR>
</H3>
<H3 ALIGN=Center>
  29 May 1998
</H3>
<P>
<BR>
<BR>
<BR>
<BR>
  <HR>
<P>
<CENTER>
  <TABLE CELLPADDING="8" ALIGN="Center">
    <TR>
      <TD COLSPAN=3><H3 ALIGN=Center>
	  <I><U>Table of Contents</U></I>
	</H3>
      </TD>
    </TR>
    <TR>
      <TD></TD>
      <TD></TD>
      <TD></TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><B><I><U>Section</U></I></B></TD>
      <TD><B><U><I>Page</I></U></B></TD>
    </TR>
    <TR>
      <TD><B><A HREF="#I.">I.</A></B></TD>
      <TD><B><A HREF="#I.">Introduction</A></B></TD>
      <TD><P ALIGN=Center>
	3</TD>
    </TR>
    <TR>
      <TD><B><A HREF="#II.">II.</A></B></TD>
      <TD><B><A HREF="#II.">Algorithms</A></B></TD>
      <TD><P ALIGN=Center>
	3</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><A HREF="#II.A."><I>A.</I> SKIPJACK Modes of Operation</A> &nbsp;&nbsp;
	&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</TD>
      <TD><P ALIGN=Center>
	3</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><A HREF="#II.B."><I>B.</I> SKIPJACK Specification</A></TD>
      <TD><P ALIGN=Center>
	5</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  1. Notation and Terminology
	</BLOCKQUOTE>
      </TD>
      <TD><P ALIGN=Center>
	5</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  2. Basic Structure
	</BLOCKQUOTE>
      </TD>
      <TD><P ALIGN=Center>
	5</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  3. Stepping Rule Equations
	</BLOCKQUOTE>
      </TD>
      <TD VALIGN="Middle"><P ALIGN=Center>
	6</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  4. Stepping Sequence
	</BLOCKQUOTE>
      </TD>
      <TD><P ALIGN=Center>
	6</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  5. G-Permutation
	</BLOCKQUOTE>
      </TD>
      <TD><P ALIGN=Center>
	7</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  6. Cryptovariable Schedule
	</BLOCKQUOTE>
      </TD>
      <TD><P ALIGN=Center>
	7</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  7. F-Table
	</BLOCKQUOTE>
      </TD>
      <TD><P ALIGN=Center>
	8</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><A HREF="#II.C."><I>C.</I> KEA Specification</A></TD>
      <TD><P ALIGN=Center>
	9</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><A HREF="#II.D."><I>D.</I> E-Mail Applications of KEA</A></TD>
      <TD><P ALIGN=Center>
	13</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  1. Sending E-Mail
	</BLOCKQUOTE>
      </TD>
      <TD><P ALIGN=Center>
	13</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><BLOCKQUOTE>
	  2. Receiving E-Mail
	</BLOCKQUOTE>
      </TD>
      <TD><P ALIGN=Center>
	15</TD>
    </TR>
    <TR>
      <TD><B><A HREF="#II&gt;">III.</A></B></TD>
      <TD><B><A HREF="#III.">ANNEX - Test Vectors</A></B></TD>
      <TD><P ALIGN=Center>
	18</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><I>A.</I> SKIPJACK Codebook Mode</TD>
      <TD><P ALIGN=Center>
	18</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><I>B.</I> Key Exchange Algorithm</TD>
      <TD><P ALIGN=Center>
	19</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><I>C.</I> KEA Exchange for E-Mail</TD>
      <TD><P ALIGN=Center>
	21</TD>
    </TR>
    <TR>
      <TD><B><A HREF="#IV&gt;">IV.</A></B></TD>
      <TD><B><A HREF="#IV.">References</A></B></TD>
      <TD><P ALIGN=Center>
	23</TD>
    </TR>
  </TABLE>
</CENTER>
<P>
<I>Page 2 of 23</I>
<P>
  <HR>
<H3>
  <A NAME="I.">I. Introduction</A>
</H3>
<P>
This document provides details of the SKIPJACK and KEA algorithms. The algorithms
are supported in single chip cryptoprocessors such as CLIPPER (SKIPJACK only),
CAPSTONE, KEYSTONE, REGENT, KRYPTON and the FORTEZZA and FORTEZZA Plus PC
Card firmware which runs on them, and also in other FORTEZZA family products.
<H3>
  <A NAME="II.">II. Algorithms</A>
</H3>
<P>
This document will discuss the following algorithms:
<P>
<TABLE CELLPADDING="6">
  <TR>
    <TD>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</TD>
    <TD>SKIPJACK</TD>
    <TD>&nbsp; &nbsp; &nbsp;</TD>
    <TD>Codebook Encryptor/Decryptor Algorithm</TD>
  </TR>
  <TR>
    <TD></TD>
    <TD>KEA</TD>
    <TD></TD>
    <TD>Key Exchange Algorithm</TD>
  </TR>
</TABLE>
<BLOCKQUOTE>
  <B><A NAME="II.A."><I>A.</I> SKIPJACK Modes of Operation</A></B>
  <P>
  SKIPJACK is a 64 bit codebook utilizing an 80-bit cryptovariable. the modes
  of operation are a subset of the FIPS-81 description of modes of operation
  for DES [<A HREF="#1">1</A>]. These include:
  <P>
  <TABLE CELLPADDING="6">
    <TR>
      <TD>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</TD>
      <TD>Output Feed-back (OFB) Modes</TD>
      <TD>&nbsp; &nbsp; &nbsp;</TD>
      <TD>64 bit</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD>Cipher Feed-Back (CFB) Modes</TD>
      <TD></TD>
      <TD>64 bit/32 bit/16 bit/8 bit</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD>Codebook</TD>
      <TD></TD>
      <TD>64 bit</TD>
    </TR>
    <TR>
      <TD></TD>
      <TD>Cipher-Block Chaining (CBC)</TD>
      <TD></TD>
      <TD>64 bit</TD>
    </TR>
  </TABLE>
  <P>
  <P ALIGN=Center>
  <IMG WIDTH="618" HEIGHT="290" SRC="skf01.jpg">
  <P ALIGN=Left>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 3 of 23</I>
<P ALIGN=Left>
  <HR>
<BLOCKQUOTE>
  <P ALIGN=Center>
  <IMG WIDTH="498" HEIGHT="824" SRC="skf0234.jpg">
  <P ALIGN=Center>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 4 of 23</I>
<P ALIGN=Left>
  <HR>
<BLOCKQUOTE>
  <P ALIGN=Left>
  <B><I><A NAME="II.B.">B.</A></I> SKIPJACK Specification</B>
  <BLOCKQUOTE>
    <P ALIGN=Left>
    1. <U>Notation and terminology</U>
    <P ALIGN=Left>
    <TABLE CELLPADDING="6">
      <TR>
	<TD>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</TD>
	<TD><I>V<SUP>n</SUP></I>:</TD>
	<TD>&nbsp; &nbsp; &nbsp;</TD>
	<TD>the set of all <I>n</I>-bit values.</TD>
      </TR>
      <TR>
	<TD></TD>
	<TD>word:</TD>
	<TD></TD>
	<TD>an element of <I>V</I><SUP>16</SUP>; a 16-bit value.</TD>
      </TR>
      <TR>
	<TD></TD>
	<TD>byte:</TD>
	<TD></TD>
	<TD>an element of <I>V</I><SUP>8</SUP>; an 8-bit value.</TD>
      </TR>
      <TR VALIGN="Top">
	<TD></TD>
	<TD>permutation of <I>V<SUP>n</SUP></I>:</TD>
	<TD></TD>
	<TD>an invertible (one-to-one and onto) function from
	  <I>V<SUP>n</SUP></I> <BR>
	  to <I>V<SUP>n</SUP></I>. That is, the values are permuted within
	  <I>V<SUP>n</SUP></I>, not the bits within the value.</TD>
      </TR>
      <TR>
	<TD></TD>
	<TD><I>X</I> <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg"> <I>Y</I></TD>
	<TD></TD>
	<TD>the bitwise exclusive-or of <I>X</I> and <I>Y</I>.</TD>
      </TR>
      <TR VALIGN="Top">
	<TD></TD>
	<TD><I>X</I> || <I>Y</I></TD>
	<TD></TD>
	<TD><I>X</I> concatenated with <I>Y</I>. Let <I>X</I>, <I>Y</I> be bytes,
	  then<BR>
	  <I>X</I> || <I>Y</I> = <I>X</I> x 2<SUP>8</SUP> + <I>Y</I> is a word.
	  Furthermore, <I>X</I> is the<BR>
	  high-order byte, and <I>Y</I> is the low-order byte.</TD>
      </TR>
    </TABLE>
    <P>
    2. <U>Basic Structure</U>: SKIPJACK encrypts 4-word (i.e., 8-byte) data blocks
    by alternating between the two stepping rules (A and B) shown below. A step
    of rule A does the following:
    <BLOCKQUOTE>
      a. G permutes w<SUB>1</SUB>,
      <P>
      b. the new w<SUB>1</SUB> is the xor of the G output, the counter, and
      w<SUB>4</SUB>,
      <P>
      c. words w<SUB>2</SUB> and w<SUB>3</SUB> shift one register to the right;
      i.e., become w<SUB>3</SUB>, and w<SUB>4</SUB> respectively,
      <P>
      d. the new w<SUB>2</SUB> is the G output,
      <P>
      e. the counter is incremented by one.
    </BLOCKQUOTE>
    <P>
    Rule B works similarly.
  </BLOCKQUOTE>
</BLOCKQUOTE>
<P ALIGN=Left>
<P ALIGN=Center>
<IMG WIDTH="555" HEIGHT="312" SRC="skf05.jpg">
<P ALIGN=Left>
<P ALIGN=Left>
<I>Page 5 of 23</I>
<P ALIGN=Left>
  <HR>
<P ALIGN=Left>
<BLOCKQUOTE>
  <P ALIGN=Left>
  <BLOCKQUOTE>
    <P ALIGN=Left>
    3. <U>Stepping rule equations</U>. In the equations below, the superscript
    is the step number.
    <P ALIGN=Left>
    <CENTER>
      <TABLE CELLPADDING="6" ALIGN="Center">
	<TR>
	  <TD></TD>
	  <TD COLSPAN=3><P ALIGN=Center>
	    ENCRYPT</TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD><P ALIGN=Center>
	    Rule A</TD>
	  <TD></TD>
	  <TD><P ALIGN=Center>
	    Rule B</TD>
	</TR>
	<TR>
	  <TD>&nbsp; &nbsp;</TD>
	  <TD><I>w</I><SUB>1</SUB><SUP><I>k</I>+1</SUP> =
	    <I>G<SUP>k</SUP></I>(<I>w</I><SUB>1</SUB><I><SUP>k</SUP></I>)
	    <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	    <I>w</I><SUB>4</SUB><I><SUP>k
	    </SUP></I><IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg"><I>
	    counter<SUP>k</SUP></I></TD>
	  <TD>&nbsp; &nbsp; &nbsp;</TD>
	  <TD><I>w</I><SUB>1</SUB><SUP><I>k</I>+1</SUP> =
	    <I>w</I><SUB>4</SUB><I><SUP>k </SUP></I></TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD><I>w</I><SUB>2</SUB><SUP><I>k</I>+1</SUP> =
	    <I>G<SUP>k</SUP></I>(<I>w</I><SUB>1</SUB><I><SUP>k</SUP></I>)</TD>
	  <TD></TD>
	  <TD><I>w</I><SUB>2</SUB><SUP><I>k</I>+1</SUP> =
	    <I>G<SUP>k</SUP></I>(<I>w</I><SUB>1</SUB><I><SUP>k</SUP></I>)</TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD><I>w</I><SUB>3</SUB><SUP><I>k</I>+1</SUP> =
	    <I>w</I><SUB>2</SUB><I><SUP>k</SUP></I></TD>
	  <TD></TD>
	  <TD><I>w</I><SUB>3</SUB><SUP><I>k</I>+1</SUP> =
	    <I>w</I><SUB>1</SUB><I><SUP>k</SUP></I>
	    <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	    <I>w</I><SUB>2</SUB><I><SUP>k
	    </SUP></I><IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg"><I>
	    counter<SUP>k</SUP></I></TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD><I>w</I><SUB>4</SUB><SUP><I>k</I>+1</SUP> =
	    <I>w<SUB>3</SUB><SUP>k</SUP></I></TD>
	  <TD></TD>
	  <TD><I>w</I><SUB>4</SUB><SUP><I>k</I>+1</SUP> =
	    <I>w</I><SUB>3</SUB><I><SUP>k</SUP></I></TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD></TD>
	  <TD></TD>
	  <TD></TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD></TD>
	  <TD></TD>
	  <TD></TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD COLSPAN=3><P ALIGN=Center>
	    DECRYPT</TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD><P ALIGN=Center>
	    Rule A<SUP>-1</SUP></TD>
	  <TD></TD>
	  <TD><P ALIGN=Center>
	    Rule B<SUP>-1</SUP></TD>
	</TR>
	<TR>
	  <TD>&nbsp; &nbsp;</TD>
	  <TD><I>w</I><SUB>1</SUB><SUP><I>k</I>-1</SUP> =
	    [<I>G<SUP>k</SUP></I><SUP>-1</SUP>]<SUP>-1</SUP>(<I>w</I><SUB>2</SUB><I><SUP>k</SUP></I>)</TD>
	  <TD>&nbsp; &nbsp; &nbsp;</TD>
	  <TD><I>w</I><SUB>1</SUB><SUP><I>k</I>-1</SUP> =
	    [<I>G<SUP>k</SUP></I><SUP>-1</SUP>]<SUP>-1</SUP>(<I>w</I><SUB>2</SUB><I><SUP>k</SUP></I>)</TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD><I>w</I><SUB>2</SUB><SUP><I>k</I>-1</SUP> =
	    <I>w</I><SUB>3</SUB><SUP><I>k</I></SUP></TD>
	  <TD></TD>
	  <TD><I>w</I><SUB>2</SUB><SUP><I>k</I>-1</SUP> =
	    [<I>G<SUP>k</SUP></I><SUP>-1</SUP>]<SUP>-1</SUP>(<I>w</I><SUB>2</SUB><I><SUP>k</SUP></I>)
	    <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	    <I>w</I><SUB>3</SUB><SUP><I>k</I></SUP>
	    <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	    <I>counter<SUP>k</SUP></I><SUP>-1</SUP></TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD><I>w</I><SUB>3</SUB><SUP><I>k</I>-1</SUP> =
	    <I>w</I><SUB>4</SUB><I><SUP>k</SUP></I></TD>
	  <TD></TD>
	  <TD><I>w</I><SUB>3</SUB><SUP><I>k</I>-1</SUP> =
	    <I>w</I><SUB>4</SUB><I><SUP>k</SUP></I></TD>
	</TR>
	<TR>
	  <TD></TD>
	  <TD><I>w</I><SUB>4</SUB><SUP><I>k</I>-1</SUP> =
	    <I>w</I><SUB>1</SUB><I><SUP>k</SUP></I>
	    <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	    <I>w</I><SUB>2</SUB><I><SUP>k
	    </SUP></I><IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg"><I>
	    counter<SUP>k</SUP></I><SUP>-1</SUP></TD>
	  <TD></TD>
	  <TD><I>w</I><SUB>4</SUB><SUP><I>k</I>-1</SUP> =
	    <I>w</I><SUB>1</SUB><I><SUP>k</SUP></I></TD>
	</TR>
      </TABLE>
    </CENTER>
    <P ALIGN=Left>
    <P ALIGN=Left>
    4. <U>Stepping sequence</U>: The algorithm requires a total of 32 steps.
    <BLOCKQUOTE>
      <P ALIGN=Left>
      a. To encrypt: The input is <I>w<SUB>i</SUB></I><SUP>0</SUP>, 1<U>&lt;</U>
      <I>i</I> <U>&lt;</U> 4, (i.e., <I>k</I> = 0 for the beginning step). Start
      the counter at 1. Step according to Rule A for 8 steps, then switch to Rule
      B and step 8 more times. Return to rule A for the next 8 steps, then complete
      the encryption with 8 steps in Rule B. The counter increments by one after
      each step. The output is <I>w<SUB>i</SUB></I><SUP>32</SUP>, 1 <U>&lt;</U>
      <I>i</I> <U>&lt;</U> 4.
      <P ALIGN=Left>
      b. To decrypt: the input is <I>w<SUB>i</SUB></I><SUP>32</SUP>, 1
      <U>&lt;</U> <I>i</I> <U>&lt;</U> 4, (i.e., <I>k</I> = 32 for the beginning
      step). Start the counter at 32. Step according to Rule B<SUP>-1</SUP> for
      8 steps, then switch to Rule A<SUP>-1</SUP> and step 8 more times. Return
      to Rule B<SUP>-1</SUP> for the next 8 steps, then complete the decryption
      with 8 steps in rule A<SUP>-1</SUP>. the counter decrements by one after
      every step. The output is <I>w<SUB>i</SUB></I><SUP>0</SUP>, 1<U>&lt;</U>
      <I>i</I> <U>&lt;</U> 4.
    </BLOCKQUOTE>
    <P ALIGN=Left>
  </BLOCKQUOTE>
  <P ALIGN=Left>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 6 of 23</I>
<P ALIGN=Left>
  <HR>
<P ALIGN=Left>
<BLOCKQUOTE>
  <P ALIGN=Left>
  <BLOCKQUOTE>
    <P ALIGN=Left>
    5. <U>G-permutation</U>: The cryptovariable-dependent permutation G on
    <I>V</I><SUP>16</SUP> is a four-round Feistel structure. The round function
    is a fixed byte-substitution table (permutation on <I>V</I><SUP>8</SUP>),
    which will be called the F-table. Each round of G also incorporates a byte
    of cryptovariable. We give two characterizations of the function below:
    <BLOCKQUOTE>
      a. recursively (mathematically): G<I><SUP>k</SUP></I> (w = g<SUB>1
      </SUB>||<SUB> </SUB>g<SUB>2</SUB>) = g<SUB>5 </SUB>||<SUB>
      </SUB>g<SUB>6</SUB> where <BR>
      g<SUB><I>i</I></SUB> = <I>F</I>(g<SUB><I>i</I>-1</SUB>
      <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
      <I>cv</I><SUB>4<I>k</I>+<I>i</I>-3</SUB>)
      <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg"><I>g<SUB>i</SUB></I><SUB>-2</SUB>
      and where <I>k</I> is the step number (the first step is 0), <I>F</I> is
      the substitution table, and
      <I>cv</I><SUB>4<I>k</I>+<I>i</I>-3</SUB> is the (4k+i-3)<SUP>th</SUP> byte
      in the cryptovariable schedule. Thus,
      <BLOCKQUOTE>
	<I>g</I><SUB>3</SUB> = <I>F</I>(<I>g</I><SUB>2</SUB>
	&nbsp;<IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>cv</I><SUB>4<I>k</I></SUB>) <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>g</I><SUB>1</SUB>
	<P>
	<I>g</I><SUB>4</SUB> = <I>F</I>(<I>g</I><SUB>3</SUB>
	<IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>cv</I><SUB>4<I>k</I>+1</SUB>)
	<IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg"><I>g</I><SUB>2</SUB>
	<P>
	<I>g</I><SUB>5</SUB> = <I>F</I>(<I>g</I><SUB>4</SUB>
	<IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>cv</I><SUB>4<I>k</I>+2</SUB>) <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>g</I><SUB>3</SUB>
	<P>
	<I>g</I><SUB>6</SUB> = <I>F</I>(<I>g</I><SUB>5</SUB>
	<IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>cv</I><SUB>4<I>k</I>+3</SUB>) <IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>g</I><SUB>4</SUB>
      </BLOCKQUOTE>
    </BLOCKQUOTE>
    <BLOCKQUOTE>
      Similarly, for the inverse, [<I>G<SUP>k</SUP></I>]<SUP>-1</SUP> (<I>w</I>
      = <I>g</I><SUB>5</SUB> || <I>g</I><SUB>6</SUB>) = <I>g</I><SUB>1</SUB> ||
      <I>g</I><SUB>2</SUB> where
    </BLOCKQUOTE>
    <BLOCKQUOTE>
      <BLOCKQUOTE>
	<I>g<SUB>i</SUB></I><SUB>-2</SUB> =
	<I>F</I>(<I>g<SUB>i</SUB></I><SUB>-1</SUB>
	<IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>cv</I><SUB>4<I>k</I>+<I>i</I>-3</SUB>)
	<IMG WIDTH="20" HEIGHT="18" SRC="skf00.jpg">
	<I>g</I><SUB><I>i</I></SUB> .
      </BLOCKQUOTE>
      <P>
    </BLOCKQUOTE>
    <BLOCKQUOTE>
      b. schematically:
    </BLOCKQUOTE>
    <P ALIGN=Center>
    <IMG WIDTH="573" HEIGHT="356" SRC="skf06.jpg">
    <P>
    <P>
    6. <U>Cryptovariable schedule</U>: The cryptovariable is 10 bytes long (labelled
    0 through 9) and used in its natural order. So the schedule subscripts given
    in the definition of the G-permutation are to be interpreted mod-10.
    <P>
  </BLOCKQUOTE>
  <P>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 7 of 23</I>
<P>
  <HR>
<BLOCKQUOTE>
  <P>
  <BLOCKQUOTE>
    7. <U>F Table</U>: The SKIPJACK F-table is given below in hexadecimal notation.
    The high order bits of the input index the row and the low order 4 bits index
    the column. For example, F(7a) = d6. <I>[Typescript converted to text.]</I>
  </BLOCKQUOTE>
</BLOCKQUOTE>
<BLOCKQUOTE>
  <PRE>
     x0   x1   x2   x3   x4   x5   x6   x7   x8   x9   xA   xB   xC   xD   xE   xF

0x   a3   d7   09   83   f8   48   f6   f4   b3   21   15   78   99   b1   af   f9

1x   e7   2d   4d   8a   ce   4c   ca   2e   52   95   d9   1e   4e   38   44   28

2x   0a   df   02   a0   17   f1   60   68   12   b7   7a   c3   e9   fa   3d   53

3x   96   84   6b   ba   f2   63   9a   19   7c   ae   e5   f5   f7   16   6a   a2

4x   39   b6   7b   0f   c1   93   81   1b   ee   b4   1a   ea   d0   91   2f   b8

5x   55   b9   da   85   3f   41   bf   e0   5a   58   80   5f   66   0b   d8   90

6x   35   d5   c0   a7   33   06   65   69   45   00   94   56   6d   98   9b   76

7x   97   fc   b2   c2   b0   fe   db   20   e1   eb   d6   e4   dd   47   4a   1d

8x   42   ed   9e   6e   49   3c   cd   43   27   d2   07   d4   de   c7   67   18

9x   89   cb   30   1f   8d   c6   8f   aa   c8   74   dc   c9   5d   5c   31   a4

Ax   70   88   61   2c   9f   0d   2b   87   50   82   54   64   26   7d   03   40

Bx   34   4b   1c   73   d1   c4   fd   3b   cc   fb   7f   ab   e6   3e   5b   a5

Cx   ad   04   23   9c   14   51   22   f0   29   79   71   7e   ff   8c   0e   e2

Dx   0c   ef   bc   72   75   6f   37   a1   ec   d3   8e   62   8b   86   10   e8

Ex   08   77   11   be   92   4f   24   c5   32   36   9d   cf   f3   a6   bb   ac

Fx   5e   6c   a9   13   57   25   b5   e3   bd   a8   3a   01   05   59   2a   46



</PRE>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 8 of 23</I>
<P>
  <HR>
<P>
<I> <A NAME="II.C."><B>C.</B></A></I><A NAME="II.C."><B> KEA Specification
</B></A>
<P>
KEA is a key exchange algorithm. All calculations for KEA require a 1024-bit
prime modulus. This modulus and related values are to be generated as per
the DSS specification [<A HREF="#2">2</A>]. The KEA is based upon a
Diffie-Hellman protocol utilizing SKIPJACK to reduce final values to an 80
bit key.
<P>
KEA operations require exponents of length 160 bits. One exponent used in
KEA is a user specific secret component.
<P>
The KEA provides security commensurate with that provided by SKIPJACK. This
is on the order of 2<SUP>80</SUP> operations.
<P>
KEA requires that each user be able to validate the public values received
from others, but does not specify how that is to be done.
<P>
The devices must be provided the following data in order to implement the
Key Exchange Algorithm (KEA).
<BLOCKQUOTE>
  <P>
  <TABLE CELLPADDING="6">
    <TR VALIGN="Top">
      <TD></TD>
      <TD><I>p</I></TD>
      <TD></TD>
      <TD>1024-bit prime modulus which defines the field where <BR>
	<I>p</I> = <I>p</I><SUB>1023</SUB><I>p</I><SUB>1022</SUB> . . .
	<I>p</I><SUB>0</SUB></TD>
    </TR>
    <TR VALIGN="Top">
      <TD></TD>
      <TD><I>q</I></TD>
      <TD></TD>
      <TD>160-bit prime divisor of <I>p</I>-1 for public component checking <BR>
	<I>q</I> = <I>q</I><SUB>159</SUB><I>q</I><SUB>158</SUB> . . .
	<I>q</I><SUB>0</SUB></TD>
    </TR>
    <TR VALIGN="Top">
      <TD></TD>
      <TD><I>g</I></TD>
      <TD></TD>
      <TD>1024-bit base for the exponentiation. An element of <BR>
	order <I>q</I> in the multiplicative group mod <I>p</I>. <BR>
	<I>g</I> = <I>g</I><SUB>1023</SUB><I>g</I><SUB>1022</SUB> . . .
	<I>g</I><SUB>0</SUB></TD>
    </TR>
    <TR VALIGN="Top">
      <TD></TD>
      <TD><I>x</I></TD>
      <TD></TD>
      <TD>160-bit user secret number chosen so that (<I>0</I> &lt; <I>x</I> &lt;
	<I>q</I>) <BR>
	<I>x</I> = <I>x</I><SUB>159</SUB><I>x</I><SUB>158</SUB> . . .
	<I>x</I><SUB>0</SUB></TD>
    </TR>
    <TR VALIGN="Top">
      <TD></TD>
      <TD><I>Y</I></TD>
      <TD></TD>
      <TD>1024-bit public value corresponding to private value <I>x</I><BR>
	<I>Y </I>= <I>g<SUP>x</SUP></I> <I>mod p</I> = <I>Y</I><SUB>1023</SUB>
	<I>Y</I><SUB>1022</SUB> . . . <I>Y</I><SUB>0</SUB></TD>
    </TR>
    <TR VALIGN="Top">
      <TD></TD>
      <TD><I>pad</I></TD>
      <TD></TD>
      <TD>80 bit padding value <BR>
	<I>pad</I> = <I>pad</I><SUB>79</SUB><I>pad</I><SUB>78</SUB> . . .
	<I>pad</I><SUB>0</SUB><BR>
	= 72f1a87e92824198ab0b hex.</TD>
    </TR>
    <TR VALIGN="Top">
      <TD>&nbsp; &nbsp; &nbsp;</TD>
      <TD><I>r</I></TD>
      <TD>&nbsp; &nbsp; &nbsp;</TD>
      <TD>160-bit random number <BR>
	<I>r</I> = <I>r</I><SUB>159</SUB> <I>r</I><SUB>158</SUB> . . .
	<I>r</I><SUB>0</SUB></TD>
    </TR>
  </TABLE>
  <P>
</BLOCKQUOTE>
<P>
A signaling requirement for the determination of the initiator and the recipient
of an exchange is not necessary. A description of the process follows. For
two users A and B. the subscripts A and B are used to denote the 'owner'
of the respective values.
<BLOCKQUOTE>
  a. A and B exchange or obtain from a directory the certificate(s) of the
  far terminal. From the certificate(s), the public value <I>Y</I> of the other
  terminal can be obtained along with associated user identification and other
  information.
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 9 of 23</I>
<P>
  <HR>
<BLOCKQUOTE>
  b. Each device validates the public key <I>Y</I> to determine that it is
  indeed the public key of a valid user on the network. If the validation fails,
  the process terminates. If the validation checks, go to step c.
  <P>
  c. Each device exchanges the random component. Device A generates a 160-bit
  private random number <I>r<SUB>A</SUB></I> and sends the public version of
  this number
  <P ALIGN=Center>
  <IMG WIDTH="153" HEIGHT="35" SRC="ske01.jpg">
  <P>
  Device B generates a 160-bit <I>r<SUB>B</SUB></I> and sends
  <P ALIGN=Center>
  <IMG WIDTH="122" HEIGHT="36" SRC="ske02.jpg">
  <P>
  Each of these public random components is 1024-bits in length.
  <P>
  d. After receiving the public random component and the far end public key,
  each device will check to verify both the received values are of order
  <I>q</I>. Device A will compute and verify:
  <P ALIGN=Center>
  <IMG WIDTH="309" HEIGHT="69" SRC="ske03.jpg">
  <P>
  Device B will compute and verify
  <P ALIGN=Center>
  <IMG WIDTH="306" HEIGHT="69" SRC="ske04.jpg">
  <P>
  If the verification checks, go to step e. Should the verification fail, stop.
  <P>
  e. Device A will take <I>Y<SUB>B</SUB></I> and compute the value
  <I>t<SUB>AB</SUB></I>. Device B will compute the equivalent value
  <I>t<SUB>BA</SUB></I> using the received random component
  <P ALIGN=Center>
  <IMG WIDTH="368" HEIGHT="81" SRC="ske05.jpg">
  <P>
  f. Each device computes <I>u</I> in a similar manner as they computed
  <I>t</I>
  <P ALIGN=Center>
  <IMG WIDTH="380" HEIGHT="83" SRC="ske06.jpg">
  <P>
  g. Each device computes <I>w</I> and checks to make sure that
  <P ALIGN=Center>
  <IMG WIDTH="171" HEIGHT="34" SRC="ske07.jpg">
  <P>
  If this check passes, go to step h. Else stop.
  <P>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 10 of 23</I>
<P>
  <HR>
<BLOCKQUOTE>
  h. This result is split into two sections
  <P ALIGN=Center>
  <IMG WIDTH="417" HEIGHT="57" SRC="ske08.jpg">
  <P>
  i.e., if we number the bits in <I>w</I> as <I>w</I><SUB>1023</SUB> . . &nbsp;.
  <I>w</I><SUB>0</SUB> from MSB to LSB, then
  <P ALIGN=Center>
  <I>v</I><SUB>1</SUB> = <I>w</I><SUB>1023</SUB> . . .
  <I>w</I><SUB>944</SUB> &nbsp; &nbsp;and &nbsp;
  &nbsp;<I>v</I><SUB>2</SUB> = <I>w</I><SUB>943</SUB> . . .
  <I>w</I><SUB>864</SUB>
  <P>
  The Key is
  <P ALIGN=Center>
  <IMG WIDTH="320" HEIGHT="187" SRC="ske09.jpg">
  <P>
  Note that this function represents the encryption of v2 with v1 XOR pad.
  Pictorally,
  <P ALIGN=Center>
  <IMG WIDTH="557" HEIGHT="439" SRC="skf07.jpg">
  <P>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 11 of 23</I>
<P>
  <HR>
<P>
A summary of a full KEA exchange between devices A and B is as follows:
<P ALIGN=Center>
<IMG WIDTH="616" HEIGHT="829" SRC="ske10.jpg">
<P>
<P ALIGN=Left>
<I>Page 12 of 23</I>
<P>
  <HR>
<P>
<I> <A NAME="II.D."><B>D.</B></A></I><A NAME="II.D."><B> E-Mail Applications
of KEA </B></A>
<P>
For electronic mail applications where the recipient does not participate
in the formation of the key, the recipients contribution to the random exchange
is replaced with the public key of the recipient. For the following, let
A be the sender and B be the recipient of the E-mail message. We first begin
with the formation of the E-mail message.
<BLOCKQUOTE>
  <B>1. Sending E-Mail </B>
  <BLOCKQUOTE>
    a. Device A obtains from a directory or a local cache the certificate(s)
    of the far terminal. From the certificate(s), the public value
    <I>Y<SUB>B</SUB></I> of terminal B can be obtained along with associated
    user identification and other information.
    <P>
    b. Device A validates the public key <I>Y<SUB>B</SUB></I> to determine that
    it is indeed the public key of a valid user on the network. If the validation
    fails, the process terminates. If the validation checks, go to step c.
    <P>
    c. Device A will then verify:
    <P ALIGN=Center>
    <IMG WIDTH="256" HEIGHT="32" SRC="ske11.jpg">
    <P>
    d. Device A generates the random number r<I><SUB>A</SUB></I> and computes
    R<I><SUB>A</SUB></I> which is placed in the message packet to be sent to
    the far terminal.
    <P ALIGN=Center>
    <IMG WIDTH="141" HEIGHT="46" SRC="ske12.jpg">
    <P>
    This random component is 1024 bits in length.
    <P>
    e. Device A will then take <I>Y<SUB>B</SUB></I> and compute the value
    <I>t<SUB>AB</SUB></I>.
    <P ALIGN=Center>
    <IMG WIDTH="261" HEIGHT="47" SRC="ske13.jpg">
    <P>
    f. Device A computes
    <P ALIGN=Center>
    <IMG WIDTH="385" HEIGHT="47" SRC="ske14.jpg">
    <P>
    g. Device A then computes <I>w</I> and checks to make sure that
    <P ALIGN=Center>
    <IMG WIDTH="201" HEIGHT="36" SRC="ske15.jpg">
    <P>
    If this check passes, go to step h. Else stop.
    <P>
  </BLOCKQUOTE>
  <P>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 13 of 23</I>
<P>
  <HR>
<P>
<I>[Note: this page appears to be a duplicate of page 11 except for the words
"Figure 8" and the page number.]</I>
<BLOCKQUOTE>
  <P>
  <BLOCKQUOTE>
    h. This result is split into two sections
    <P ALIGN=Center>
    <IMG WIDTH="417" HEIGHT="57" SRC="ske08.jpg">
    <P>
    i.e., if we number the bits in <I>w</I> as <I>w</I><SUB>1023</SUB> . . &nbsp;.
    <I>w</I><SUB>0</SUB> from MSB to LSB, then
    <P ALIGN=Center>
    <I>v</I><SUB>1</SUB> = <I>w</I><SUB>1023</SUB> . . .
    <I>w</I><SUB>944</SUB> &nbsp; &nbsp;and &nbsp;
    &nbsp;<I>v</I><SUB>2</SUB> = <I>w</I><SUB>943</SUB> . . .
    <I>w</I><SUB>864</SUB>
    <P>
    The Key is
    <P ALIGN=Center>
    <IMG WIDTH="320" HEIGHT="187" SRC="ske09.jpg">
    <P>
    Note that this function represents the encryption of v2 with v1 XOR pad.
    Pictorally,
  </BLOCKQUOTE>
  <BLOCKQUOTE>
    <P ALIGN=Center>
    <IMG WIDTH="547" HEIGHT="444" SRC="skf08.jpg">
  </BLOCKQUOTE>
  <P>
</BLOCKQUOTE>
<P>
<I>Page 14 of 23</I>
<P>
  <HR>
<BLOCKQUOTE>
  <B>2. Receiving E-Mail</B>
  <BLOCKQUOTE>
    a. Device B obtains the certificate(s) of the far terminal, A, in the received
    E-mail message. From the certificate(s), the public value
    <I>Y<SUB>A</SUB></I> of terminal A can be obtained along with associated
    user identification and other information.
    <P>
    b. Device B validates the public key <I>Y<SUB>A</SUB></I> to determine that
    it is indeed the public key of a valid user on the network. If the validation
    fails, the process terminates. If the validation checks, go to step c.
    <P>
    c. Device B receives the random component that A generated.
    <P ALIGN=Center>
    <IMG WIDTH="130" HEIGHT="45" SRC="ske16.jpg">
    <P>
    This random component is 1024-bits in length.
    <P>
    d. Device B will compute and verify:
    <P ALIGN=Center>
    <IMG WIDTH="290" HEIGHT="79" SRC="ske17.jpg">
    <P>
    If the verification checks, go to step e. Should the verification fail, stop.
    <P>
    e. Device B will take <I>R<SUB>A</SUB></I> and compute the value
    <I>t<SUB>BA</SUB></I>.
    <P ALIGN=Center>
    <IMG WIDTH="268" HEIGHT="44" SRC="ske18.jpg">
    <P>
    f. Device B computes:
    <P ALIGN=Center>
    <IMG WIDTH="273" HEIGHT="43" SRC="ske19.jpg">
    <P>
    g. Device B computes <I>w</I> and checks to make sure that
    <P ALIGN=Center>
    <IMG WIDTH="195" HEIGHT="35" SRC="ske20.jpg">
    <P>
    If this check passes, go to step h. Else stop.
    <P>
    h. This result is split into two sections
    <P ALIGN=Center>
    <IMG WIDTH="436" HEIGHT="58" SRC="ske21.jpg">
    <P>
    i.e., if we number the bits in <I>w</I> as <I>w</I><SUB>1023</SUB> . . .
    <I>w</I><SUB>0</SUB> from MSB to LSB, then
    <P ALIGN=Center>
    <I>v</I><SUB>1</SUB> = <I>w</I><SUB>1023</SUB> . . .
    <I>w</I><SUB>944</SUB> &nbsp; &nbsp;and &nbsp;
    &nbsp;<I>v</I><SUB>2</SUB> = <I>w</I><SUB>943</SUB> . . .
    <I>w</I><SUB>864</SUB>
    <P>
  </BLOCKQUOTE>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 15 of 23</I>
<P>
  <HR>
<BLOCKQUOTE>
  <BLOCKQUOTE>
    i. The Key is
    <P ALIGN=Center>
    <IMG WIDTH="320" HEIGHT="187" SRC="ske09.jpg">
    <P>
    Note that function represents the encryption of v2 with v1 XOR pad . Pictorally,
    <P ALIGN=Center>
    <IMG WIDTH="547" HEIGHT="444" SRC="skf09.jpg">
  </BLOCKQUOTE>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 16 of 23</I>
<P>
  <HR>
<P>
A summary of an E-mail KEA exchange between devices A and B is as follows:
<P ALIGN=Center>
<IMG WIDTH="617" HEIGHT="814" SRC="ske22.jpg">
<P>
<P>
<I>Page 17 of 23</I>
<P>
  <HR>
<H3>
  <A NAME="III.">III. ANNEX - Test Vectors </A>
</H3>
<P>
All values are hexadecimal. This data does not imply or specify any interface
convention. All information is presented with the Most Significant Bit/Byte/Word
to the left. X represents ''don't-care".
<P>
<B>A. SKIPJACK - CODEBOOK MODE </B>
<BLOCKQUOTE>
  <PRE><B>Plaintext input:</B> 33221100ddccbbaa           <BR><B>Cryptovariable:</B>  00998877665544332211           <BR><B>Intermediate steps:</B>                   

     <U> w1  w2   w3  w4 </U>          
0    33221100 ddccbbaa           
1    b0040baf 1100ddcc           
2    e6883b46 0baf1100
3    3c762d75 3b460baf           
4    4c4547ee 2d753b46           
5    b949820a 47ee2d75           
6    f0e3dd90 820a47ee           
7    f9b9be50 dd90820a           
8    d79b5599 be50dd90           
9    dd901e0b 820bbe50           
10   be504c52 c391820b           
11   820b7f51 f209c391           
12   c391f9c2 fd56f209           
13   f20925ff 3a5efd56           
14   fd5665da d7f83a5e           
15   3a5e69d9 9883d7f8           
16   d7f88990 53979883           
17   9c000492 89905397           
18   9fdccc59 04928990           
19   3731beb2 cc590492           
20   7afb7e7d beb2cc59           
21   7759bb15 7e7dbeb2           
22   fb6445c0 bb157e7d           
23   6f7f1115 45c0bb15           
24   65a7deaa 111545c0           
25   45c0e0f9 bb141115           
26   11153913 a523bb14           
27   bb148ee6 281da523           
28   a523bfe2 35ee281d           
29   281d0d84 1adc35ee           
30   35eee6f1 25871adc           
31   1adc60ee d3002587           
32   2587cae2 7a12d300      

<B>Ciphertext output:</B> 2587cae27a12d300
</PRE>
  <P>
</BLOCKQUOTE>
<P ALIGN=Left>
<I>Page 18 of 23</I>
<P>
  <HR>
<P>
<B>B. Key Exchange Algorithm (KEA) </B>
<PRE>
<B>p</B>=9d4c6e6d 42ea91c8 28d67d49 94a9f01b 8e5b5b73 0d0faae7 bd569dd1
914e3ad4 759c8053 31eda145 9fb56be8 a8de4736 652a82b2 76e82acd
63f5b78d 0b75a03e b34d397d be7b3740 8f72136a cb0879fe 61c718a3
7f5154b5 078a7649 fb3d4fb4 c481e010 62c5241f 229fa580 423368dd
51090dbf 25351f0c 5800de05 b92ba6a9
<B>q</B>=97ad85fd 2b371ed0 69818ab3 c6ee8773 d9db029d
<B>g</B>=595d3443 ec897c82 51e5fa9d 02ab8b75 c0fc57b0 969f880d a366a100
01912a01 96bcb81c 41ac8485 031ac598 b5481eae 2726b719 d8dg915a
6105973g 72386c0a 6a2c732c d6700d34 1f54bf28 d12d692d e2fa05f5
5e898c2e 20bb8a26 02db1ba0 7de672e3 b96d9ac2 ga188450 63d918c3
2ed71266 b783311a 0a8d08ac 487bea44

<B>ra</B>=6201dd56 237c228a 3f54bc7e 794bdf32 41c67ea6
<B>xa</B>=62319ac4 7de14518 0abd322c 59e2b600 2781e4g4
<B>Ya</B>=2d29ecd0 2e3497a6 7222d8de bc286131 d149f458 1b3e586d 0151024c
02e8b23d a09a430e 2ca5ed1a 4b2d7725 62316e4d 2804d226 788284ed
655cf546 10d38f66 fab1a0a2 e2d3c661 4401901d 9758d566 722aff1f
734b2adb d2b67f13 00ce455f 00968ca7 91a87678 67363d7d 49ee74a2
8dc349d9 fdfdb96b 01f0fc1f 0690ec96

<B>xb</B>=63decdad 4487eb71 31dff4fS 1cfbae39 446b9b3d
<B>rb</B>=52bfa1d7 2f1cf0fb 0ff6d5df 15fb7483 167eb0e7
<B>Yb</B>=7730d4bb f3a2efdb 218e7041 3e861020 14cec06c 205f5419 293b65c6
9a971e54 55eb79a0 bdb90ab2 14c5240e de6cfdd5 8c7c19c5 269d57df
f60b61c1 db2ff648 64bee519 87f27003 4bc390ad 73168209 5e42608c
3d7987f9 649fbf71 6887633e b574b39c c73df899 51fc1bd6 d3889d48
fe2244b8 29afd405 06ab9221 ba562c07


<B>Computed by A:</B>
<B>Ra</B>=97c1fd8a 69fc8f34 a74c7ec3 c1ab176a b91fa0ea d0e6b097 06ae07a1
fbf8d0a6 67032ea4 798082b8 caea827b 4f604b71 e6c24469 211363ea
4bd2122f 4aa6afb9 4857ff06 9db03701 2b289057 b4855e70 f8f7ac4f
92fa1fe7 6c2a5c82 781ee611 1c1fbdf7 a6eb9dc3 59a8fca0 b632ef3a
2af82e52 c0a7f6a6 a2c961ea fc67f418

<B>Computed by B:</B>
<B>Rb</B>=91f61808 38f03d5b 6be538ff 6e0bf3cb 9d8afbbe ef199334 b389708b
b0c848da 860f0f27 62cc94a8 e496f8fc 94945538 cf6f1719 57cee4f1
e2eca2ba ddb340da f406e636 bbc6368e 4658fbf0 1a41cbef 5adb4086
42d03cec 4e85920c 8e7530bd e2b78cb8 7cbae364 31de373c d2ebaf29
d8412g32 8550dd8c f33e03c2 1a5056a0
</PRE>
<P>
<P>
<I>Page 19 of 23</I>
<P>
  <HR>
<PRE>
<B>Resu1ts for user A:</B>
<B>uab</B>=1585dbba c06b963d 6ef5a30e 5c40220b 76fe0528 660be31a c496d1cb
0883ba8e 5a0331e9 ce3fe382 f47a353c edc6896d fdb4c0b5 67aafd72
4ba0ff6f 2c0fa428 fcb07a32 bf6fb88e 22c5ca47 7c9bb9cd 882da4fS
4cc57980 c174352f 13434623 ce3df2d4 14a9e0fb 7a905fe8 4ab282d5
e76e703a 55dabb38 27c2979f 08ea28c8
<B>tab</B>=8032eb2c b67534a9 c5faf6be a1eb6ef1 de0d3f48 c86be240 8f807e65
8622b9f3 87e0f50f a5868bf5 29ff008d 3ad55e9c 4366bad4 ae4190ce
bc3ae56f 34bf70b6 3ca021dd 563005db bc7e62bb ccc9127a 3603bf00
be8fce9b f46bf538 86c4a761 4b43adfe 7282efe4 f9c146b7 1e9f89d6
2bd3c7ed 7d127719 ebf0e0f8 79e0d0d9
<B>w</B>=95b8c6e7 76e0cae7 34f099cc fe2b90fd 550b4471 2e77c55b 54175031
8ea67481 e1e426f9 73c66f78 1e7g35ca 289be80a 411b7b8a 15ec8e41
07dbe4de 60cf14df 3g509c10 159fbe69 df442d03 4964cc47 be3163f6
0b55481c b5e02a67 9a07ed85 1981a0d2 872cd0e0 7451a69f 69520cac
13423827 d2ed3252 13b37897 82caf9a1
<B>v1</B>=95b8c6e7 76e0cae7 34f0XXXX
<B>v2</B>=99ccfe2b 90fd550b 4471XXXX
<B>v1 XOR pad</B> = e7496e99 e4628b7f 9ffbXXXX

<B>Key for user A</B> = 740839de e833add4 6b41XXXX

<B>Results for user B:</B>
<B>tab</B>=8032eb2c b67534a9 cSfaf6be a1eb6ef1 de0d3f48 c86be240 8f807e66
8622b9f3 87e0f50f a5868bf5 29ff008d 3ad55e9c 4366bad4 ae4190ce
bc3ae56f 34bf70b6 3ca021dd 563005db bc7e62bb ccc9127a 3603bf00
be8fce9b f46bf538 86c4a761 4b43adfe 7282efe4 f9c146b7 1e9f89d6
2bd3c7ed 7d127719 ebf0e0f8 79e0d0d9
<B>uab</B>=1585dbba c06b963d 6ef5a30e 5c40220b 76fe0528 660be31a c496d1cb
0883ba8e 5a0331e9 ce3fe382 f47a353c edc68g6d fdb4c0b5 67aafd72
4ba0ff6f 2c0fa428 fcb07a32 bf6fb88e 22c5ca47 7c9bb9cd 882da4f5
4cc57980 c174352f 13434623 ce3df2d4 14a9e0fb 7a905fe8 4ab282d5
e76e703a 55dabb38 27c2979f 08ea28c8
<B>w</B>=95b8c6e7 76e0cae7 34f099cc fe2b90fd 550b4471 2e77c55b 54175031
8ea67481 e1e426f9 73c66f78 1e7935ca 289be80a 411b7b8a 15ec8e41
07dbe4de 60cf14df 39509c10 159fbe69 df442d03 4964cc47 be3163f6
0b55481c b5e02a67 9a07ed85 1981a0d2 872cd0e0 7451a69f 69520cac
13423827 d2ed3252 13b37897 82cafga1
<B>v1</B>=95b8c6e7 76e0cae7 34f0XXXX
<B>v2</B>=99ccfe2b 90fd550b 4471XXXX
<B>v1 XOR pad </B>= e7496e99 e4628b7f 9ffbXXXX

<B>Key for user B</B> = 740839de e833add4 6b41XXXX

</PRE>
<P>
<I>Page 20 of 23</I>
<P>
  <HR>
<P>
<B><I>C.</I> KEA Exchange for E-Mail</B>
<PRE>
<B>p</B>=9d4c6e6d 42ea91c8 28d67d49 94a9f01b 8e5b5b73 0d0faae7 bd569dd1
914e3ad4 759c8053 31eda145 9fb56be8 a8de4736 652a82b2 76e82acc1
63fSb78d 0b75a03e b34d397d be7b3740 8f72136a cb0879fe 61c718a3
7f5154b5 078a7649 fb3d4fb4 c481e010 62c5241f 229fa580 423368dd
51090dbf 25351f0c 5800de05 b92ba6a9
<B>q</B>=97ad85fd 2b371ed0 69818ab3 c6ee8773 d9db029d
<B>g</B>=595d3443 ec897c82 51e5fa9d 02ab8b75 c0fc57b0 969f880d a366a100
01912a01 96bcb81c 41ac8485 031ac598 bS481eae 2726b719 d8d9915a
61059734 72386c0a 6a2c732c d6700d34 1f54bf28 d12d692d e2fa05f5
5e898c2e 20bb8a26 02db1ba0 7de672e3 b96d9ac2 9a188450 63d918c3
2ed71266 b783311a 0a8d08ac 487bea44

<B>ra</B>=6201dd56 237c228a 3f54bc7e 794bdf32 41c67ea6
<B>xa</B>=62319ac4 7de14518 0abd322c 59e2b600 2781e494
<B>Ya</B>=2d29ecd0 2e3497a6 7222d8de bc286131 d149f458 1b3e586d 0151024c
02e8b23d a09a430e 2ca5ed1a 4b2d7725 62316e4d 2804d226 788284ec1
655cf546 10d38f66 fab1a0a2 e2d3c661 4401901d 9758d566 722aff1f
734b2adb d2b67f13 00ce455f 00968ca7 91a87678 67363d7d 49ee74a2
8dc349d9 fdfdb96b 01f0fc1f 0690ec96

<B>xb</B>=63decdad 4487eb71 31dff4f5 1cfbae39 446b9b3d
<B>Yb</B>=7730d4bb f3a2efdb 218e7041 3e861020 14cec06c 205f5419 293h65c6
9a971e54 55eb79a0 bdb90ab2 14c5240e de6cfdd5 8c7c19c5 269d57df
f60b61c1 db2ff648 64bee519 87f27003 4bc390ad 73168209 5e42608c
3d7987f9 649fbf71 6887633e b574b39c c73df899 51fc1bd6 d3889d4
fe2244b8 29afd405 06ab9221 ba562c07

<B>Computed by A:</B>
<B>Ra</B>=97c1fd8a 69fc8f34 a74c7ec3 c1ab176a b91fa0ea d0e6b097 06ae07a1.
fbf8d0a6 67032ea4 798082b8 caea827b 4f604b71 e6c24469 211363ea
4bd2122f 4aa6afb9 4857ff06 9db03701 2b289057 b4855e70 f8f7ac4f
92fa1fe7 6c2a5c82 781ee611 1c1fbdf7 a6eb9dc3 59a8fca0 b632ef3a
2af82e52 c0a7f6a6 a2c961ea fc67f418

<B>Resu1ts for user A:</B>
<B>tab</B>=8032eb2c b67534a9 c5faf6be a1eb6ef1 de0d3f48 c86be240 8f807e65
8622bgf3 87e0f50f a5868bf5 29ff008d 3ad55e9c 4366bad4 ae4190ce
bc3ae56f 34bf70b6 3ca021dd 563005db bc7e62bb ccc9127a 3603bf00
be8fce9b f46bf538 86c4a761 4b43adfe 7282efe4 f9c146b7 1e9f89d6
2bd3c7ed 7d127719 ebf0e0f8 79e0d0d9
<B>uab</B>=17087175 9f16dfbf b0a0c05e 0ee49abd 49586033 93aa7df3 3d99bc61
68ad318a 7cf81fa8 74f4eb04 4433abe0 6423eb2f 1ebb3cdb 33067152
242d7cf8 987f208d cfdf3797 6398ccd5 6a0bdc1b 2bfd6734 35dedcc9
06bd6d71 a4516738 b91f2a52 689a2d60 802de96d 150fe661 469a2643
</PRE>
<P>
<I>Page 21 of 23</I>
<P>
  <HR>
<PRE>
18c8d8f5 9ec040ea c623c51a 91d861d1
<B>w</B>=973b5ca2 558c1469 769bb71c b0d009af 27659f7c 5c166033 cd1a3ac7
eecfeb7e 04d914b8 1a7b76f9 6e32ac6d 9ef949cb 6221f7af e1480220
e0686267 cd3e9144 0c7f5974 b9c8d2b1 268a3ed6 f8c679ae 6be29bc9
c54d3c0d 98bd5c71 3fe3d1b3 b3dddb5e f2b0d952 0ed12d18 6539b019
449ca0e3 1bd2b804 b214a613 0bb932aa
<B>v1</B>=973b5ca2 558c1469 769bXXXX
<B>v2</B>=b71cb0d0 09af2765 9f7cXXXX
<B>v1 XOR pad</B> = e5caf4dc c70e55f1 dd90XXXX

<B>Key for user A</B> = 97fd1c6b d86bc439 115bXXXX

<B>Resu1ts for user B:</B>
<B>tab</B>=8032eb2c b67534a9 c5faf6be a1eb6ef1 de0d3f48 c86be240 8f8C7e66
8622b9f3 87e0f50f a5868bf5 29ff008d 3ad55e9c 4366bad4 ae4190ce
bc3ae56f 34bf70b6 3ca021dd 563005db bc7e62bb ccc9127a 3603bfC0
be8fce9b f46bf538 86c4a761 4b43adfe 7282efe4 f9c146b7 1e9f89d6
2bd3c7ed 7d127719 ebf0e0f8 79e0d0d9
<B>uab</B>=17087175 9f16dfbf b0a0c05e 0ee49abd 49586033 93aa7df3 3d99bc61
68ad318a 7cf81fa8 74f4eb04 4433abe0 6423eb2f 1ebb3cdb 33067152
242d7cf8 987f208d cfdf3797 6398ccd5 6a0bdc1b 2bfd6734 35dedcc9
06bd6d71 a4516738 b91f2a52 689a2d60 802de96d 150fe661 469a2643
18c8d8f5 9ec040ea c623c51a 91d861d1
<B>w</B>=973b5ca2 558C146g 769bb71c b0d009af 27659f7c 5c166033 cd1a3ac7
eecfeb7e 04d914b8 1a7b76f9 6e32ac6d 9ef949cb 6221f7af e1480220
e0686267 cd3e9144 0c7f5974 b9c8d2b1 268a3ed6 f8c679ae 6be29bc9
c54d3c0d 98bd5c71 3fe3d1b3 b3dddb5e f2b0d952 0ed12d18 6539b019
449ca0e3 1bd2b804 b214a613 0bb932aa
<B>v1</B>=973b5ca2 558c1469 769bXXXX
<B>v2</B>=b71cb0d0 09af2765 9f7cXXXX
<B>v1 XOR pad </B>= e5caf4dc c70e55f1 dd90XXXX

<B>Key for user B</B> = 97fd1c6b d86bc439 115bXXXX

</PRE>
<P>
<I>Page 22 of 23</I>
<P>
  <HR>
<P>
<H3>
  <A NAME="IV.">IV. References: </A>
</H3>
<P>
<A NAME="1"> 1</A>. US DEPARTMENT OF COMMERCE Technology Administration/National
Institute of Standards and Technology, <A HREF="http://jya.com/fips81.htm">DES
MODES OF OPERATION, FIPS PUB 81</A>, 2 December 1980.
<P>
<A NAME="2">2</A>. US DEPARTMENT OF COMMERCE Technology Administration/National
Institute of Standards and Technology,
<A HREF="http://jya.com/fips186.htm">DIGITAL SIGNATURE STANDARD (DSS), FIPS
PUB 186</A>, 19 May 1994.
<P>
<I>[National Institute of Standards and Technology FIPS Publications page:
<A HREF="http://csrc.nist.gov/fips/">http://csrc.nist.gov/fips/</A> ]</I>
<P>
<I>Page 23 of 23</I>
<P>
  <HR>
<P>
<I>[End]</I>
<P>
Errors corrected through 26 June 1998, 9:03 AM EST. Please report errors:
<A HREF="mailto:jy@jya.com">jy@jya.com</A>
<P>
Transcription and HTML by <A HREF="http://jya.com/index.htm">JYA/Urban
Deadline</A>
<P>
</BODY></HTML>
