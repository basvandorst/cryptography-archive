10 '** FM.ENC **  FRACTIONATED MORSE ENCIPHERING PROGRAM, VERSION 1.0 10/06/86.By Jim Alexander mod by MB Sept 86 aug 87 ibm version july 88
20 ' from 'CRYPTANALYSIS FOR MICROCOMPUTERS' by C.Foster p215
25 'This is a terrible mishmash of coding and could be redone in half the size. Do not publish in this form. - MB
30 GOSUB 410
40 KEY OFF:CLEAR :DEFINT A-Z:DIM T(300), U(300), M(2000),MC(5,26),CA(55)
45 GOSUB 1400   'set up Morse sounds
50 GOSUB 1190   'load Morse matrix
60 GOSUB 2000   'pick up default example
70 'GOSUB 1100   'get source
80 GOSUB 420    'get plaintext
90 ' --- TRANSLATE TO INTERMEDIATE TEXT-MORSE CODE ---
100 P=0
110 FOR I=1 TO J      'J is # of PT chars incl spaces
120  T=T(I)
130  IF T<1 OR T>26 THEN T=0
140  K=0 
150  K=K+1
160  P=P+1
170  M(P)=MC(K,T):IF I>=15 GOTO 180
171  IF M(P)=1 THEN SOUND FREQ,DIT!:SOUND SIL,DIT!:GOTO 180
172  IF M(P)=2 THEN SOUND FREQ,DAH!:SOUND SIL,DIT!:GOTO 180
173  IF M(P)=3 THEN SOUND SIL, 2*DIT!
180  IF M(P)<>3 GOTO 150
190 NEXT I
200 P=P+1
210 M(P)=3
220 ' --- TRANSLATE TO CIPHER TEXT ---
230 IP=3*INT(P/3)
240 GOSUB 730   'get keyword and shift
250 K=0 
260 FOR I=1 TO IP STEP 3
270   T=9*(M(I)-1)+3*(M(I+1)-1)+M(I+2)
280   K=K+1
290   U(K)=CA(T)
300 NEXT I
310 IP=K
320 ' --- PRINTOUT CIPHER TEXT CHARACTERS ---
330 GOSUB 410    'title
340 GOSUB 1140   'data
350 GOTO 9260
360 ON INSTR("AaQq",Q$) GOTO 370,370,380,380:GOTO 350
370 GOSUB 410:GOTO 70
380 PRINT:PRINT TAB(38)"end":END
400 '   --- misc subs ---
410 CLS:PRINT DATE$ TAB(27)"FRACTIONATED MORSE ENCIPHERMENT":PRINT TAB(27)STRING$(31,"-"):PRINT:PRINT TAB(14)"(modified from "CHR$(34)"CRYPTANALYSIS FOR MICROCOMPUTERS"CHR$(34)" p215)":RETURN
420 ' --- READ IN TEXT ---
430  J=0: F=0: Q=0
440 PRINT
450 PRINT "Enter the plaintext, with or without spaces, 110-150 letters, in UPPERCASE; no  punctuation allowed:"
460 LINE INPUT PT$:IF PT$=""THEN PT$=XP$:PRINT PT$
470 RA$=PT$:PT$=PT$+"/"
480 Q$(Q+1)=PT$
490 FOR I = 1 TO LEN(PT$)
500   B=ASC(MID$(PT$,I,1))-64
510   IF B=-17 THEN F=1
520   J=J+1
530   T(J)=B
540 NEXT I
550 Q=Q+1
560 IF F=0 GOTO 470
570 J=J-1
580 RETURN
590 ' --- PRINT IN BLOCKS OF FIVE ---
600 PRINT
610 I=0:OP$=""
620 FOR K=1 TO 11
630   FOR L=1 TO 5
640     I=I+1
650     X$ =  CHR$(U(I)+64):PRINT X$;:OP$=OP$+X$
660     IF I=IP THEN 720
670   NEXT L
680   PRINT" ";:OP$=OP$+" "
690 NEXT K
700 PRINT
710 GOTO 620
720 RETURN
730 ' --- GENERATE SCRAMBLED/SHIFTED ALPHABET ---
740 FOR I=1 TO 52:CA(I)=0 : NEXT I
750 PRINT:PRINT"Enter desired shift (0-25 positions) : ";:X=POS(0):Y=CSRLIN
760 LINE INPUT SH$:IF SH$=""THEN SH=XSH:LOCATE Y,X:PRINT SH:ELSE SH=VAL(SH$)
770 IF SH >25 OR SH<0 THEN 750
780 PRINT:PRINT"Enter keyword (UPPER CASE, no blanks): ";:X=POS(0):Y=CSRLIN
790 LINE INPUT KW$:IF KW$=""THEN KW$=XK$:LOCATE Y,X:PRINT KW$
810 FOR I=1 TO LEN(KW$)
820  T(I)=ASC(MID$(KW$,I,1))-64
830 NEXT I
840 L=1
850 '--- FOR EACH LETTER IN THE KEYWORD ---
860 FOR I=1 TO LEN(KW$)
870  F=0
880  REM SEE IF IT HAS BEEN USED YET
890  FOR K=1 TO I
900    IF T(I)=CA(K+SH) THEN F=1:K=I
910  NEXT K
920  IF F=0 THEN CA(L+SH)=T(I):L=L+1
930 NEXT I
940 REM NOW DO REST OF ALPHABET
950 M=L-1
960 FOR I=1 TO 26
970   F=0
980   REM SEE IF USED YET
990   FOR K=1 TO M
1000     IF I=CA(K+SH) THEN F=1:K=M
1010   NEXT K
1020   IF F=0 THEN CA(L+SH)=I:L=L+1
1030 NEXT I
1040 IF SH=0 GOTO 1080
1050 FOR I=1 TO SH
1060   CA(I)=CA(I+26)
1070 NEXT I
1080 RETURN
1090 '
1100  PRINT:PRINT "What is the source of the plaintext? ";:X=POS(0):Y=CSRLIN
1110 LINE INPUT SO$:IF SO$="" THEN SO$=XSO$:LOCATE Y,X:PRINT SO$
1120 RETURN
1130 '  --- print final answer ---
1140 PRINT:COLOR 0,7:PRINT "Plaintext: ";:COLOR 7,0:PRINT "  ("IP"letters)":PRINT RA$
1160 PRINT:PRINT "Keyword:   "KW$
1170 PRINT:COLOR 0,7:PRINT "Ciphertext: ";:COLOR 7,0:PRINT USING"  (Shift =##) ";SH;: GOSUB 590
1180 RETURN
1190 '
    --- READ IN MORSE MATRIX DOT=1, DASH=2, LETTER SPACE=3 ---
1200 FOR I=0 TO 26
1210   K=1
1220   READ X
1230   MC(K,I)=X
1240   K=K+1
1250   IF X<>3 GOTO 1220
1260 NEXT I:RETURN
1270 '
1280 DATA 3,1,2,3,2,1,1,1,3,2,1,2,1,3,2,1,1,3,1,3,1,1,2,1,3
1290 DATA 2,2,1,3,1,1,1,1,3,1,1,3,1,2,2,2,3,2,1,2,3,1,2,1,1,3
1300 DATA 2,2,3,2,1,3,2,2,2,3,1,2,2,1,3,2,2,1,2,3,1,2,1,3
1310 DATA 1,1,1,3,2,3,1,1,2,3,1,1,1,2,3,1,2,2,3,2,1,1,2,3
1320 DATA 2,1,2,2,3,2,2,1,1,3
1330 '
1390 ' --- sound the morse ---
1400 FREQ=600:WPM=24:SIL=32767 'freq,wpm,special silence code
1410 DIT!=21.84/WPM:DAH!=3*DIT!
1420 RETURN
1500 FOR N=1 TO 3: SOUND FREQ,DIT!:SOUND SIL,DIT!:NEXT
1510 SOUND FREQ,DAH!:SOUND SIL,DIT!:SOUND FREQ,DIT!
1520 RETURN
2000 ' --- examples ---
2010 XP$="COME AT ONCE":XSO$="ACA&U p20":XK$="ROUNDTABLE"
2020 XP$="NOW IS THE TIME FOR ALL GOOD COMPUTERISTS TO COMPLAIN MIGHTILY ABOUT MSDOS":XSO$="Foster p216":XK$="SPILLEDMILK":XSH=3
2030 RETURN
9240 '
9250 ' --- Cm print format etc ---
9260 LOCATE 23,1:PRINT"Do you wish to <P*>rint this for the Cm, do <A>nother, or <Q>uit? ";:LINE INPUT Q$
9270 ON INSTR("PpAaQq",Q$)GOTO 9280,9280,10,10,9500,9500:GOTO 9260
9280 ON ERROR GOTO 18000
9290 WIDTH "lpt1:",255          'needed by GWBASIC
9300 EM(0)=-12971:EM(1)=23813:EM(2)=-28469
9310 X=VARPTR(EM(0))
9320 CALL X
9340 FOR N=1 TO 20:LPRINT:NEXT   'space to bottom of page
9350 LPRINT "FRACTIONATED MORSE encipherment by Mike Barlow   "DATE$:LPRINT
9360 LPRINT OP$
9370 ON ERROR GOTO 0
9380 LPRINT CHR$(12):GOTO 9260
9500 LOCATE 23,1:PRINT SPC(79):LOCATE 23,39:PRINT "end"
9510 LOCATE 23,1:END
18000 '   --- printer error trap ---
18010 IF ERR=24 OR ERR=25 OR ERR=27 THEN LOCATE 23,1:PRINT SPC(79):LOCATE 23,15: PRINT "Printer not ready; press <ENTER> to proceed: ";:LINE INPUT Q$:LOCATE 23,1:PRINT SPC(79):RESUME
18020 ON ERROR GOTO 0:STOP
60000 'Line 460 A$ chnged to PT$. ACA limits added to Line 450. Source data removed. Cm output added. reverse video, minor mods. Oct 1989
65000 SAVE"fm.enc",A
