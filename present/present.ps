%!PS-Adobe-3.0 EPSF-2.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - PRESENT.DOC
%%BoundingBox: 18 19 593 774
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: 0
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
%%EndSetup
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
2146 3008 29 (1) 29 SB
32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font13 ANSIFont font
241 791 1918 (PKCS #11: Cryptographic Token) 1918 SB
338 939 1723 (Interface Standard \(Cryptoki\)) 1723 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
584 1222 1231 (An RSA Laboratories Seminar) 1231 SB
605 1396 1190 (Revised September 12, 1995) 1190 SB
%MSEPS Preamble 248 371 446 581 0 0 198 210 	/pp_save save def 	/showpage {} def 	40 dict begin /pp_clip false def /pp_bbox false def 	/F { pop } def /S {} def 	/B { { /pp_dy1 exch def /pp_dx1 exch def 		   /pp_dy2 exch def /pp_dx2 exch def } 		stopped not { /pp_bbox true def } if } def 	/CB { { /pp_cy exch def /pp_cx exch def 		    /pp_cht exch def /pp_cwd exch def } 		stopped not { /pp_clip true def } if } def 	/pp_bx1 248 def /pp_by1 371 def /pp_bx2 446 def /pp_by2 581 def 0 lc
0 lj
254 255 255 pC
0 1 SP
gs 413 438 993 1907 CB
412 437 993 1907 B
S
n
gr
	pp_clip 	{ pp_cx pp_cy moveto pp_cwd 0 rlineto 0 pp_cht rlineto 	  pp_cwd neg 0 rlineto clip newpath } if 	pp_bbox { 	/pp_dy2 pp_dy2 pp_dy1 add def 	/pp_dx2 pp_dx2 pp_dx1 add def 	/pp_sx pp_dx2 pp_dx1 sub pp_bx2 pp_bx1 sub div def 	/pp_sy pp_dy2 pp_dy1 sub pp_by1 pp_by2 sub div def 	/pp_tx pp_dx1 pp_sx pp_bx1 mul sub def 	/pp_ty pp_dy1 pp_sy pp_by2 mul sub def 	pp_tx pp_ty translate pp_sx pp_sy scale } if end %!PS-Adobe-2.0 EPSF-1.2 %%Creator: Adobe Illustrator 88(TM) 1.6 %%For: (Ralph Sinick) (Macintosh Graphics) %%Title: (LABSIBM.EPS) %%CreationDate: (12/6/92) (4:59 PM) %%DocumentProcSets: Adobe_packedarray 0 0 %%DocumentSuppliedProcSets: Adobe_packedarray 0 0 %%DocumentProcSets: Adobe_cmykcolor 0 0 %%DocumentSuppliedProcSets: Adobe_cmykcolor 0 0 %%DocumentProcSets: Adobe_cshow 0 0 %%DocumentSuppliedProcSets: Adobe_cshow 0 0 %%DocumentProcSets: Adobe_customcolor 0 0 %%DocumentSuppliedProcSets: Adobe_customcolor 0 0 %%DocumentProcSets: Adobe_Illustrator_881 0 0 %%DocumentSuppliedProcSets: Adobe_Illustrator_881 0 0 %%ColorUsage: Black&White %%DocumentProcessColors: Black %%DocumentFonts: Helvetica-Bold %%BoundingBox:248 371 446 581 %%TemplateBox:306 396 306 396 %%TileBox:-522 761 30 1491 %%EndComments %%BeginProcSet: Adobe_packedarray 0 0 % packedarray Operators % Version 1.0 5/9/1988 % Copyright (C) 1987, 1988 % Adobe Systems Incorporated % All Rights Reserved userdict /Adobe_packedarray 5 dict dup begin put /initialize			% - initialize - { /packedarray where 	{ 	pop 	} 	{ 	Adobe_packedarray begin 	Adobe_packedarray 		{ 		dup xcheck 			{ 			bind 			} if 		userdict 3 1 roll put 		} forall 	end 	} ifelse } def /terminate			% - terminate - { } def /packedarray		% arguments count packedarray array { array astore readonly } def /setpacking			% boolean setpacking - { pop } def /currentpacking		% - setpacking boolean { false } def currentdict readonly pop end %%EndProcSet Adobe_packedarray /initialize get exec %%BeginProcSet:Adobe_cmykcolor 0 0 % cmykcolor Operators % Version 1.0 5/9/1988 % Copyright (C) 1987, 1988 % Adobe Systems Incorporated % All Rights Reserved currentpacking true setpacking userdict /Adobe_cmykcolor 4 dict dup begin put /initialize			% - initialize - { /setcmykcolor where 	{ 	pop 	} 	{ 	userdict /Adobe_cmykcolor_vars 2 dict dup begin put 	/_setrgbcolor 		/setrgbcolor load def 	/_currentrgbcolor 		/currentrgbcolor load def 	Adobe_cmykcolor begin 	Adobe_cmykcolor 		{ 		dup xcheck 			{ 			bind 			} if 		pop pop 		} forall 	end 	end 	Adobe_cmykcolor begin 	} ifelse } def /terminate			% - terminate - { currentdict Adobe_cmykcolor eq 	{ 	end 	} if } def /setcmykcolor		% cyan magenta yellow black setcmykcolor - { 1 sub 4 1 roll 3 	{ 	3 index add neg dup 0 lt 		{ 		pop 0 		} if 	3 1 roll 	} repeat Adobe_cmykcolor_vars /_setrgbcolor get exec pop } def  /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black { Adobe_cmykcolor_vars /_currentrgbcolor get exec 3 	{ 	1 sub neg 3 1 roll 	} repeat 0 } def currentdict readonly pop end setpacking %%EndProcSet %%BeginProcSet: Adobe_cshow 0 0 % cshow Operator % Version 1.0 5/9/1988 % Copyright (C) 1987, 1988 % Adobe Systems Incorporated % All Rights Reserved currentpacking true setpacking userdict /Adobe_cshow 3 dict dup begin put /initialize			% - initialize - { /cshow where 	{ 	pop 	} 	{ 	userdict /Adobe_cshow_vars 1 dict dup begin put 	/_cshow		% - _cshow proc 		{} def 	Adobe_cshow begin 	Adobe_cshow 		{ 		dup xcheck 			{ 			bind 			} if 		userdict 3 1 roll put 		} forall 	end 	end 	} ifelse } def /terminate			% - terminate - { } def /cshow				% string proc cshow - { Adobe_cshow_vars 	exch /_cshow 	exch put 	{ 	0 0 Adobe_cshow_vars /_cshow get exec 	} forall } def currentdict readonly pop end setpacking %%EndProcSet %%BeginProcSet: Adobe_customcolor 0 0 % Custom Color Operators % Version 1.0 5/9/1988 % Copyright (C) 1987, 1988 % Adobe Systems Incorporated % All Rights Reserved currentpacking true setpacking userdict /Adobe_customcolor 5 dict dup begin put /initialize			% - initialize - { /setcustomcolor where 	{ 	pop 	} 	{ 	Adobe_customcolor begin 	Adobe_customcolor 		{ 		dup xcheck 			{ 			bind 			} if 		pop pop 		} forall 	end 	Adobe_customcolor begin 	} ifelse } def /terminate			% - terminate - { currentdict Adobe_customcolor eq 	{ 	end 	} if } def /findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object { 5 packedarray }  def /setcustomcolor		% object tint setcustomcolor - { exch aload pop pop 4 	{ 	4 index mul 4 1 roll 	} repeat 5 -1 roll pop setcmykcolor } def /setoverprint		% boolean setoverprint - { pop } def currentdict readonly pop end setpacking %%EndProcSet %%BeginProcSet: Adobe_Illustrator881 0 0 % Adobe Illustrator (TM) Prolog % Version 1.0 5/9/1988 % Copyright (C) 1987, 1988 % Adobe Systems Incorporated % All Rights Reserved currentpacking true setpacking userdict /Adobe_Illustrator881 72 dict dup begin put % initialization /initialize				% - initialize - { userdict /Adobe_Illustrator881_vars 29 dict dup begin put % paint operands /_lp /none def /_pf {} def /_ps {} def /_psf {} def /_pss {} def % text operands /_a null def /_as null def /_tt 2 array def /_tl 2 array def /_tm matrix def /t {} def % color operands /_gf null def /_cf 4 array def /_if null def /_of false def /_fc {} def /_gs null def /_cs 4 array def /_is null def /_os false def /_sc {} def /_i null def Adobe_Illustrator881 begin Adobe_Illustrator881 	{ 	dup xcheck 		{ 		bind 		} if 	pop pop 	} forall end end Adobe_Illustrator881 begin Adobe_Illustrator881_vars begin newpath } def /terminate				% - terminate - { end end } def % definition operators /_					% - _ null null def /ddef				% key value ddef - { Adobe_Illustrator881_vars 3 1 roll put } def /xput				% key value literal xput - { dup load dup length exch maxlength eq 	{ 	dup dup load dup 	length 2 mul dict copy def 	} if load begin def end } def /npop				% integer npop - { 	{ 	pop 	} repeat } def % marking operators /sw					% ax ay length string sw x y { stringwidth exch 5 -1 roll 3 index 1 sub mul add 4 1 roll 3 1 roll 1 sub mul add } def /ss					% ax ay length string matrix ss - { 3 -1 roll pop 4 1 roll 	{ 	2 npop (0) exch 	2 copy 0 exch put pop 	gsave 	false charpath 	currentpoint 	4 index setmatrix 	stroke 	grestore 	moveto 	2 copy rmoveto 	} cshow 3 npop } def % path operators /sp					% ax ay length string sp - { exch pop 	{ 	2 npop (0) exch 	2 copy 0 exch put pop 	false charpath 	2 copy rmoveto 	} cshow 2 npop } def % path construction operators /pl					% x y pl x y { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add exch itransform } def /setstrokeadjust where { pop true setstrokeadjust /c				% x1 y1 x2 y2 x3 y3 c - { curveto } def /C /c load def /v				% x2 y2 x3 y3 v - { currentpoint 6 2 roll curveto } def /V /v load def /y				% x1 y1 x2 y2 y - { 2 copy curveto } def /Y /y load def /l				% x y l - { lineto } def /L /l load def /m				% x y m - { moveto } def } { /c { pl curveto } def /C /c load def /v { currentpoint 6 2 roll pl curveto } def /V /v load def /y { pl 2 copy curveto } def /Y /y load def /l { pl lineto } def /L /l load def /m { pl moveto } def } ifelse % graphic state operators /d					% array phase d - { setdash } def /cf					% - cf flatness currentflat def /i					% flatness i - { dup 0 eq 	{ 	pop cf 	} if setflat } def /j					% linejoin j - { setlinejoin } def /J					% linecap J - { setlinecap } def /M					% miterlimit M - { setmiterlimit } def /w					% linewidth w - { setlinewidth } def % path painting operators /H					% - H - {} def /h					% - h - { closepath } def /N					% - N - { newpath } def /n					% - n - /N load def /F					% - F - { _pf } def /f					% - f - { closepath F } def /S					% - S - { _ps } def /s					% - s - { closepath S } def /B					% - B - { gsave F grestore S } def /b					% - b - { closepath B } def /W					% - W - { clip } def % text painting operators /ta					% length string ta ax ay length string { _as moveto _tt aload pop 4 -2 roll } def /tl					% - tl - { _tl aload pop translate } def /as					% - as array { { 0 0 } { 2 copy _tt aload pop 4 -2 roll sw exch neg 2 div exch neg 2 div } { 2 copy _tt aload pop 4 -2 roll sw exch neg exch neg } { 0 0 } } cvlit def /z					% literal size leading tracking align z - { /_a exch ddef /_as as _a get ddef _a 2 le 	{ 	0 _tt astore pop 	0 exch neg _tl astore pop 	} 	{ 	0 exch neg _tt astore pop 	neg 0 _tl astore pop 	} ifelse exch findfont exch scalefont setfont } def /tm					% matrix tm - { _tm currentmatrix pop concat } def /I					% matrix I - { tm /t 	{ 	ta sp 	tl 	} ddef } def /o					% matrix o - { tm /t 	{ 	ta 4 npop 	tl 	newpath 	} ddef } def /e					% matrix e - { tm /t 	{ 	ta _psf 	tl 	newpath 	} ddef } def /r					% matrix r - { tm /t 	{ 	ta _tm _pss 	tl 	newpath 	} ddef } def /a					% matrix a - { tm /t 	{ 	2 copy 	ta _psf 	newpath 	ta _tm _pss 	tl 	newpath 	} ddef } def /T					% - T - { _tm setmatrix } def % font operators /Z					% array literal literal direction Z - { pop findfont begin currentdict dup length 1 add dict begin 	{ 	1 index /FID ne 		{ 		def 		} 		{ 		2 npop 		} ifelse 	} forall /FontName exch def dup length 0 ne 	{ 	/Encoding Encoding 256 array copy def 	0 exch 		{ 		dup type /nametype eq 			{ 			Encoding 2 index 2 index put pop 			1 add 			} 			{ 			exch pop 			} ifelse 		} forall 	} if pop currentdict dup end end /FontName get exch definefont pop } def % group operators /u					% - u - {} def /U					% - U - {} def /q					% - q - { gsave } def /Q					% - Q - { grestore } def % place operators /`					% matrix llx lly urx ury string ` - { /_i save ddef 6 1 roll 4 npop concat userdict begin /showpage {} def false setoverprint pop } def /~					% - ~ - { end _i restore } def % color operators /O					% flag O - { 0 ne /_of exch ddef /_lp /none ddef } def /R					% flag R - { 0 ne /_os exch ddef /_lp /none ddef } def /g					% gray g - { /_gf exch ddef /_fc { _lp /fill ne 	{ 	_of setoverprint 	_gf setgray 	/_lp /fill ddef 	} if } ddef /_pf { _fc fill } ddef /_psf { _fc exch pop ashow } ddef /_lp /none ddef } def /G					% gray G - { /_gs exch ddef /_sc { _lp /stroke ne 	{ 	_os setoverprint 	_gs setgray 	/_lp /stroke ddef 	} if } ddef /_ps { _sc stroke } ddef /_pss { _sc ss } ddef /_lp /none ddef } def /k					% cyan magenta yellow black k - { _cf astore pop /_fc { _lp /fill ne 	{ 	_of setoverprint 	_cf aload pop setcmykcolor 	/_lp /fill ddef 	} if } ddef /_pf { _fc fill } ddef /_psf { _fc exch pop ashow } ddef /_lp /none ddef } def /K					% cyan magenta yellow black K - { _cs astore pop /_sc { _lp /stroke ne 	{ 	_os setoverprint 	_cs aload pop setcmykcolor 	/_lp /stroke ddef 	} if } ddef /_ps { _sc stroke } ddef /_pss { _sc ss } ddef /_lp /none ddef } def /x					% cyan magenta yellow black name gray x - { /_gf exch ddef findcmykcustomcolor /_if exch ddef /_fc { _lp /fill ne 	{ 	_of setoverprint 	_if _gf 1 exch sub setcustomcolor 	/_lp /fill ddef 	} if } ddef /_pf { _fc fill } ddef /_psf { _fc exch pop ashow } ddef /_lp /none ddef } def /X					% cyan magenta yellow black name gray X - { /_gs exch ddef findcmykcustomcolor /_is exch ddef /_sc { _lp /stroke ne 	{ 	_os setoverprint 	_is _gs 1 exch sub setcustomcolor 	/_lp /stroke ddef 	} if } ddef /_ps { _sc stroke } ddef /_pss { _sc ss } ddef /_lp /none ddef } def % locked object operators /A					% value A - { pop } def currentdict readonly pop end setpacking %%EndProcSet %%EndProlog %%BeginSetup  Adobe_cmykcolor /initialize get exec Adobe_cshow /initialize get exec Adobe_customcolor /initialize get exec Adobe_Illustrator881 /initialize get exec %%BeginEncoding: _Helvetica-Bold Helvetica-Bold [ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis /Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute /egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde /oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex /udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls /registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash /.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef /.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash /questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef /guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe /endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide /.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright /fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand /Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex /Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex /Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla /hungarumlaut/ogonek/caron ]/_Helvetica-Bold/Helvetica-Bold 0 Z %%EndEncoding %%EndSetup 0 O 0 0 0 1 k 0 R 0 0 0 1 K 0 i 0 J 0 j 1 w 3.863 M []0 d %%Note: 419.2 372.8 m 419.2 429.4 L 277 429.4 L 277 372.8 L 419.2 372.8 L f 0 A u 0 0 0 0 k /_Helvetica-Bold 10 12 -0.001 0 z [1.48 0 0 1.48 282.994 411.511]e 2 (CR)t T [1.48 0 0 1.48 303.811 411.511]e 3 (YPT)t T [1.48 0 0 1.48 332.323 411.511]e 8 (OGRAPHIC)t T U 0 0 0 1 k 277 437.2 m 277 579.2 L 419.2 579.2 L 419.2 437.2 L 277 437.2 L f 0 0 0 0 k 367.4 544.6 m 375.6 554 l 369.2 560.4 l 319 560.4 L 319 565.4 L 314.8 565.4 L 314.8 569.2 L 314.8 570.4 312.6 572 311.4 572 C 288.6 572 L 287 572 284.8 569.2 284.8 568.2 C 284.8 534.6 L 284.8 533.4 287 530.8 288.6 530.8 C 311.4 530.8 L 312.6 530.8 314.8 532.4 314.8 533.4 C 314.8 537.4 L 319 537.4 L 319 542.6 L 321.4 542.6 L 328.2 548.8 l 331.8 545.2 l 339.4 545.2 l 340.6 546.6 l 347.8 546.6 l 349.6 548.2 l 356.4 548.2 l 360.6 544.6 l 367.4 544.6 L f 377.2 521.2 m 381.4 521.2 L 381.4 517.4 L 381.4 516.4 383.6 514.6 384.6 514.6 C 407.6 514.6 L 409.2 514.6 411.4 517.4 411.4 518.4 C 411.4 552 L 411.4 553.2 409.2 555.8 407.6 555.8 C 384.6 555.8 L 383.6 555.8 381.4 554.2 381.4 553.2 C 381.4 549.4 L 377.2 549.4 L 377.2 544 L 372.6 544 l 367.6 537.6 l 360.8 537.6 l 356.6 541.2 l 349.8 541.2 l 348 539.4 l 341 539.4 l 339.6 538 l 332.2 538 l 328.4 541.6 l 319.6 532.8 l 326 526.4 l 377.2 526.4 L 377.2 521.2 L 377.2 521.2 L f u /_Helvetica-Bold 69 0 1.889 0 z [0.902 0 0 0.902 279.966 457.031]e 3 (RSA)t T U u /_Helvetica-Bold 10 0 5.611 0 z [0.902 0 0 0.902 283.992 444.003]e 6 (LABORA)t T [0.902 0 0 0.902 352.267 444.003]e 1 (T)t T [0.902 0 0 0.902 362.678 444.003]e 5 (ORIES)t T U u /_Helvetica-Bold 10 12 0.702 0 z [1.48 0 0 1.48 282.941 394.973]e 8 (RESEARCH)t T [1.48 0 0 1.48 378.9 394.973]e 3 (AND)t T U u /_Helvetica-Bold 10 12 0.908 0 z [1.48 0 0 1.48 282.941 379.063]e 6 (CONSUL)t T [1.48 0 0 1.48 352.39 379.063]e 1 (T)t T [1.48 0 0 1.48 361.68 379.063]e 1 (A)t T [1.48 0 0 1.48 372.614 379.063]e 4 (TION)t T U %%Trailer Adobe_Illustrator881 /terminate get exec Adobe_customcolor /terminate get exec Adobe_cshow /terminate get exec Adobe_cmykcolor /terminate get exec  %MSEPS Trailer pp_save restore 32 0 0 58 58 0 0 0 53 /Helvetica /font12 ANSIFont font
259 2758 261 (Copyright ) 261 SB
32 0 0 58 58 0 0 0 58 /Symbol font
520 2753 46 (\323) 46 SB
32 0 0 58 58 0 0 0 53 /Helvetica /font12 ANSIFont font
566 2758 1574 ( 1995 RSA Laboratories, a division of RSA Data Security, Inc.) 1574 SB
627 2826 1146 (All rights reserved. 901-903008-132-000-000) 1146 SB
EJ RS
%%PageTrailer
%%BeginPageSetup
%%EndPageSetup
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
2146 3008 29 (1) 29 SB
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 583 (Introduction) 583 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1471 (Portable devices ideal for public-key) 1471 SB
300 578 531 (cryptography) 531 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 787 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 796 1088 (store private keys securely) 1088 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1005 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1014 1576 (cryptographic operations performed by) 1576 SB
450 1120 264 (device) 264 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1329 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1338 1833 (Standard programming interface increasingly) 1833 SB
300 1444 384 (important) 384 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1653 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1662 1715 (PKCS #11 \(Cryptoki\) offered as candidate) 1715 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 29 69 2146 3025 CB
2146 3027 29 (2) 29 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 306 (Status) 306 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1143 (Announced in January 1994) 1143 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 681 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 690 881 (First draft in February) 881 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 899 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 908 1130 (Review meeting May 19\22620) 1130 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1117 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1126 1383 (Second draft released October 19) 1383 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1229 23 ( ) 75 SB
225 1341 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1350 1464 (Third draft released March 22, 1995) 1464 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1559 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1568 1797 (Pre-release of final document April 22, 1995) 1797 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1777 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1786 1599 (Final document released April 28, 1995) 1599 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 29 69 2146 3025 CB
2146 3027 29 (3) 29 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 624 (Design goals) 624 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
225 466 1180 (1. Technology independence) 1180 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 675 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 684 1314 (any kind of cryptographic device) 1314 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 893 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 902 874 (any operating system) 874 SB
225 1220 824 (2. Resource sharing) 824 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1429 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1438 1641 (more than one application per device, or) 1641 SB
450 1544 887 (device per application) 887 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 29 69 2146 3025 CB
2146 3027 29 (4) 29 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 697 (General model) 697 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1636 (Cryptoki is a programming interface that) 1636 SB
300 578 1728 (gives a common logical view to all kinds of) 1728 SB
300 684 842 (cryptographic device) 842 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 893 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 902 655 (a cryptographic ) 655 SB
32 0 0 92 92 0 0 0 83 /Helvetica-Oblique /font19 ANSIFont font
1105 902 225 (token) 225 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1111 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1120 1375 (\223software\224 devices also supported) 1375 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1435 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1444 1697 (A given Cryptoki implementation supports) 1697 SB
300 1550 1002 (certain classes of device) 1002 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1759 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1768 1602 (initially, each class expected to have its) 1602 SB
450 1874 1179 (own Cryptoki implementation) 1179 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2083 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2092 1681 (eventually, a single implementation for all) 1681 SB
450 2198 357 (classes?) 357 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 29 69 2146 3025 CB
2146 3027 29 (5) 29 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 1091 (General model \(cont\222d\)) 1091 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1647 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1656 1545 (\223Other Security Layers\224 might include:) 1545 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1827 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1836 1530 (Generic Security Services Application) 1530 SB
450 1942 1640 (Programming Interface \(RFCs 1508 and) 1640 SB
450 2048 235 (1509\)) 235 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2151 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2160 1425 (Generic Cryptographic Service API) 1425 SB
450 2266 375 (\(X/Open\)) 375 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2369 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2378 1509 (Cryptographic API \(CAPI\) \(Microsoft\)) 1509 SB
1 lc
1 lj
0 0 0 pC
0 1 SP
255 255 255 fC
/fm 256 def
788 545 M 0 75 -300 0 0 -75 300 0 4 PP
1 F
S
n
32 0 0 34 33 0 0 0 31 /Helvetica /font12 ANSIFont font
0 0 0 fC
gs 1024 878 688 463 CB
847 486 184 (Application 1) 184 SB
gr
255 255 255 fC
/fm 256 def
1034 882 M 0 75 -300 0 0 -75 300 0 4 PP
1 F
S
n
32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font13 ANSIFont font
0 0 0 fC
gs 1024 878 688 463 CB
1117 824 134 (Cryptoki) 134 SB
gr
255 255 255 fC
/fm 256 def
768 1070 M 0 75 -300 0 0 -75 300 0 4 PP
1 F
S
n
32 0 0 34 33 0 0 0 31 /Helvetica /font12 ANSIFont font
0 0 0 fC
gs 1024 878 688 463 CB
877 1011 82 (Slot 1) 82 SB
gr
255 255 255 fC
/fm 256 def
1330 1072 M 0 75 -300 0 0 -75 300 0 4 PP
1 F
S
n
0 0 0 fC
gs 1024 878 688 463 CB
1439 1013 64 (Slot ) 64 SB
gr
32 0 0 34 33 0 0 0 30 /Helvetica-Oblique /font19 ANSIFont font
gs 1024 878 688 463 CB
1503 1014 18 (n) 18 SB
gr
0 5 SP
1145 1032 M 5 0 1 PP
S
n
1195 1033 M 5 0 1 PP
S
n
1245 1033 M 5 0 1 PP
S
n
1295 1034 M 5 0 1 PP
S
n
0 1 SP
gs 192 74 918 902 CB
1109 902 M 0 37 -191 0 0 36 3 PP
S
n
gr
/fm 256 def
/fm 256 def
0 .5 1109 882 B 1 F n
/fm 256 def
1 .5 1109 883 B 1 F n
/fm 256 def
2 .5 1108 884 B 1 F n
/fm 256 def
3 .5 1108 885 B 1 F n
/fm 256 def
4 .5 1107 886 B 1 F n
/fm 256 def
5 .5 1107 887 B 1 F n
/fm 256 def
6 .5 1106 888 B 1 F n
/fm 256 def
7 .5 1106 889 B 1 F n
/fm 256 def
8 .5 1105 890 B 1 F n
/fm 256 def
9 .5 1105 891 B 1 F n
/fm 256 def
10 .5 1104 892 B 1 F n
/fm 256 def
11 .5 1104 893 B 1 F n
/fm 256 def
12 .5 1103 894 B 1 F n
/fm 256 def
13 .5 1103 895 B 1 F n
/fm 256 def
14 .5 1102 896 B 1 F n
/fm 256 def
15 .5 1102 897 B 1 F n
/fm 256 def
16 .5 1101 898 B 1 F n
/fm 256 def
17 .5 1101 899 B 1 F n
/fm 256 def
18 .5 1100 900 B 1 F n
/fm 256 def
19 .5 1100 901 B 1 F n
/fm 256 def
20 .5 1099 902 B 1 F n
/fm 256 def
21 .5 1099 903 B 1 F n
/fm 256 def
22 .5 1098 904 B 1 F n
/fm 256 def
23 .5 906 972 B 1 F n
/fm 256 def
22 .5 907 973 B 1 F n
/fm 256 def
21 .5 907 974 B 1 F n
/fm 256 def
20 .5 908 975 B 1 F n
/fm 256 def
19 .5 908 976 B 1 F n
/fm 256 def
18 .5 909 977 B 1 F n
/fm 256 def
17 .5 909 978 B 1 F n
/fm 256 def
16 .5 910 979 B 1 F n
/fm 256 def
15 .5 910 980 B 1 F n
/fm 256 def
14 .5 911 981 B 1 F n
/fm 256 def
13 .5 911 982 B 1 F n
/fm 256 def
12 .5 912 983 B 1 F n
/fm 256 def
11 .5 912 984 B 1 F n
/fm 256 def
10 .5 913 985 B 1 F n
/fm 256 def
9 .5 913 986 B 1 F n
/fm 256 def
8 .5 914 987 B 1 F n
/fm 256 def
7 .5 914 988 B 1 F n
/fm 256 def
6 .5 915 989 B 1 F n
/fm 256 def
5 .5 915 990 B 1 F n
/fm 256 def
4 .5 916 991 B 1 F n
/fm 256 def
3 .5 916 992 B 1 F n
/fm 256 def
2 .5 917 993 B 1 F n
/fm 256 def
1 .5 917 994 B 1 F n
gs 222 76 1259 902 CB
1259 902 M 0 38 221 0 0 37 3 PP
S
n
gr
0 0 0 fC
/fm 256 def
/fm 256 def
0 .5 1259 882 B 1 F n
/fm 256 def
1 .5 1259 883 B 1 F n
/fm 256 def
2 .5 1258 884 B 1 F n
/fm 256 def
3 .5 1258 885 B 1 F n
/fm 256 def
4 .5 1257 886 B 1 F n
/fm 256 def
5 .5 1257 887 B 1 F n
/fm 256 def
6 .5 1256 888 B 1 F n
/fm 256 def
7 .5 1256 889 B 1 F n
/fm 256 def
8 .5 1255 890 B 1 F n
/fm 256 def
9 .5 1255 891 B 1 F n
/fm 256 def
10 .5 1254 892 B 1 F n
/fm 256 def
11 .5 1254 893 B 1 F n
/fm 256 def
12 .5 1253 894 B 1 F n
/fm 256 def
13 .5 1253 895 B 1 F n
/fm 256 def
14 .5 1252 896 B 1 F n
/fm 256 def
15 .5 1252 897 B 1 F n
/fm 256 def
16 .5 1251 898 B 1 F n
/fm 256 def
17 .5 1251 899 B 1 F n
/fm 256 def
18 .5 1250 900 B 1 F n
/fm 256 def
19 .5 1250 901 B 1 F n
/fm 256 def
20 .5 1249 902 B 1 F n
/fm 256 def
21 .5 1249 903 B 1 F n
/fm 256 def
22 .5 1248 904 B 1 F n
/fm 256 def
23 .5 1469 974 B 1 F n
/fm 256 def
22 .5 1469 975 B 1 F n
/fm 256 def
21 .5 1470 976 B 1 F n
/fm 256 def
20 .5 1470 977 B 1 F n
/fm 256 def
19 .5 1471 978 B 1 F n
/fm 256 def
18 .5 1471 979 B 1 F n
/fm 256 def
17 .5 1472 980 B 1 F n
/fm 256 def
16 .5 1472 981 B 1 F n
/fm 256 def
15 .5 1473 982 B 1 F n
/fm 256 def
14 .5 1473 983 B 1 F n
/fm 256 def
13 .5 1474 984 B 1 F n
/fm 256 def
12 .5 1474 985 B 1 F n
/fm 256 def
11 .5 1475 986 B 1 F n
/fm 256 def
10 .5 1475 987 B 1 F n
/fm 256 def
9 .5 1476 988 B 1 F n
/fm 256 def
8 .5 1476 989 B 1 F n
/fm 256 def
7 .5 1477 990 B 1 F n
/fm 256 def
6 .5 1477 991 B 1 F n
/fm 256 def
5 .5 1478 992 B 1 F n
/fm 256 def
4 .5 1478 993 B 1 F n
/fm 256 def
3 .5 1479 994 B 1 F n
/fm 256 def
2 .5 1479 995 B 1 F n
/fm 256 def
1 .5 1480 996 B 1 F n
gs 1 40 918 1090 CB
918 1090 M 0 39 1 PP
S
n
gr
0 0 0 fC
/fm 256 def
/fm 256 def
0 .5 918 1070 B 1 F n
/fm 256 def
1 .5 917 1071 B 1 F n
/fm 256 def
2 .5 917 1072 B 1 F n
/fm 256 def
3 .5 916 1073 B 1 F n
/fm 256 def
4 .5 916 1074 B 1 F n
/fm 256 def
5 .5 915 1075 B 1 F n
/fm 256 def
6 .5 915 1076 B 1 F n
/fm 256 def
7 .5 914 1077 B 1 F n
/fm 256 def
8 .5 914 1078 B 1 F n
/fm 256 def
9 .5 913 1079 B 1 F n
/fm 256 def
10 .5 913 1080 B 1 F n
/fm 256 def
11 .5 912 1081 B 1 F n
/fm 256 def
12 .5 912 1082 B 1 F n
/fm 256 def
13 .5 911 1083 B 1 F n
/fm 256 def
14 .5 911 1084 B 1 F n
/fm 256 def
15 .5 910 1085 B 1 F n
/fm 256 def
16 .5 910 1086 B 1 F n
/fm 256 def
17 .5 909 1087 B 1 F n
/fm 256 def
18 .5 909 1088 B 1 F n
/fm 256 def
19 .5 908 1089 B 1 F n
/fm 256 def
20 .5 908 1090 B 1 F n
/fm 256 def
21 .5 907 1091 B 1 F n
/fm 256 def
22 .5 907 1092 B 1 F n
/fm 256 def
23 .5 906 1126 B 1 F n
/fm 256 def
22 .5 907 1127 B 1 F n
/fm 256 def
21 .5 907 1128 B 1 F n
/fm 256 def
20 .5 908 1129 B 1 F n
/fm 256 def
19 .5 908 1130 B 1 F n
/fm 256 def
18 .5 909 1131 B 1 F n
/fm 256 def
17 .5 909 1132 B 1 F n
/fm 256 def
16 .5 910 1133 B 1 F n
/fm 256 def
15 .5 910 1134 B 1 F n
/fm 256 def
14 .5 911 1135 B 1 F n
/fm 256 def
13 .5 911 1136 B 1 F n
/fm 256 def
12 .5 912 1137 B 1 F n
/fm 256 def
11 .5 912 1138 B 1 F n
/fm 256 def
10 .5 913 1139 B 1 F n
/fm 256 def
9 .5 913 1140 B 1 F n
/fm 256 def
8 .5 914 1141 B 1 F n
/fm 256 def
7 .5 914 1142 B 1 F n
/fm 256 def
6 .5 915 1143 B 1 F n
/fm 256 def
5 .5 915 1144 B 1 F n
/fm 256 def
4 .5 916 1145 B 1 F n
/fm 256 def
3 .5 916 1146 B 1 F n
/fm 256 def
2 .5 917 1147 B 1 F n
/fm 256 def
1 .5 917 1148 B 1 F n
gs 1 36 1480 1092 CB
1480 1092 M 0 35 1 PP
S
n
gr
0 0 0 fC
/fm 256 def
/fm 256 def
0 .5 1480 1072 B 1 F n
/fm 256 def
1 .5 1480 1073 B 1 F n
/fm 256 def
2 .5 1479 1074 B 1 F n
/fm 256 def
3 .5 1479 1075 B 1 F n
/fm 256 def
4 .5 1478 1076 B 1 F n
/fm 256 def
5 .5 1478 1077 B 1 F n
/fm 256 def
6 .5 1477 1078 B 1 F n
/fm 256 def
7 .5 1477 1079 B 1 F n
/fm 256 def
8 .5 1476 1080 B 1 F n
/fm 256 def
9 .5 1476 1081 B 1 F n
/fm 256 def
10 .5 1475 1082 B 1 F n
/fm 256 def
11 .5 1475 1083 B 1 F n
/fm 256 def
12 .5 1474 1084 B 1 F n
/fm 256 def
13 .5 1474 1085 B 1 F n
/fm 256 def
14 .5 1473 1086 B 1 F n
/fm 256 def
15 .5 1473 1087 B 1 F n
/fm 256 def
16 .5 1472 1088 B 1 F n
/fm 256 def
17 .5 1472 1089 B 1 F n
/fm 256 def
18 .5 1471 1090 B 1 F n
/fm 256 def
19 .5 1471 1091 B 1 F n
/fm 256 def
20 .5 1470 1092 B 1 F n
/fm 256 def
21 .5 1470 1093 B 1 F n
/fm 256 def
22 .5 1469 1094 B 1 F n
/fm 256 def
23 .5 1469 1124 B 1 F n
/fm 256 def
22 .5 1469 1125 B 1 F n
/fm 256 def
21 .5 1470 1126 B 1 F n
/fm 256 def
20 .5 1470 1127 B 1 F n
/fm 256 def
19 .5 1471 1128 B 1 F n
/fm 256 def
18 .5 1471 1129 B 1 F n
/fm 256 def
17 .5 1472 1130 B 1 F n
/fm 256 def
16 .5 1472 1131 B 1 F n
/fm 256 def
15 .5 1473 1132 B 1 F n
/fm 256 def
14 .5 1473 1133 B 1 F n
/fm 256 def
13 .5 1474 1134 B 1 F n
/fm 256 def
12 .5 1474 1135 B 1 F n
/fm 256 def
11 .5 1475 1136 B 1 F n
/fm 256 def
10 .5 1475 1137 B 1 F n
/fm 256 def
9 .5 1476 1138 B 1 F n
/fm 256 def
8 .5 1476 1139 B 1 F n
/fm 256 def
7 .5 1477 1140 B 1 F n
/fm 256 def
6 .5 1477 1141 B 1 F n
/fm 256 def
5 .5 1478 1142 B 1 F n
/fm 256 def
4 .5 1478 1143 B 1 F n
/fm 256 def
3 .5 1479 1144 B 1 F n
/fm 256 def
2 .5 1479 1145 B 1 F n
/fm 256 def
1 .5 1480 1146 B 1 F n
gs 172 73 938 565 CB
938 565 M 0 36 171 0 0 36 3 PP
S
n
gr
0 0 0 fC
/fm 256 def
/fm 256 def
0 .5 938 545 B 1 F n
/fm 256 def
1 .5 938 546 B 1 F n
/fm 256 def
2 .5 937 547 B 1 F n
/fm 256 def
3 .5 937 548 B 1 F n
/fm 256 def
4 .5 936 549 B 1 F n
/fm 256 def
5 .5 936 550 B 1 F n
/fm 256 def
6 .5 935 551 B 1 F n
/fm 256 def
7 .5 935 552 B 1 F n
/fm 256 def
8 .5 934 553 B 1 F n
/fm 256 def
9 .5 934 554 B 1 F n
/fm 256 def
10 .5 933 555 B 1 F n
/fm 256 def
11 .5 933 556 B 1 F n
/fm 256 def
12 .5 932 557 B 1 F n
/fm 256 def
13 .5 932 558 B 1 F n
/fm 256 def
14 .5 931 559 B 1 F n
/fm 256 def
15 .5 931 560 B 1 F n
/fm 256 def
16 .5 930 561 B 1 F n
/fm 256 def
17 .5 930 562 B 1 F n
/fm 256 def
18 .5 929 563 B 1 F n
/fm 256 def
19 .5 929 564 B 1 F n
/fm 256 def
20 .5 928 565 B 1 F n
/fm 256 def
21 .5 928 566 B 1 F n
/fm 256 def
22 .5 927 567 B 1 F n
/fm 256 def
23 .5 1098 634 B 1 F n
/fm 256 def
22 .5 1098 635 B 1 F n
/fm 256 def
21 .5 1099 636 B 1 F n
/fm 256 def
20 .5 1099 637 B 1 F n
/fm 256 def
19 .5 1100 638 B 1 F n
/fm 256 def
18 .5 1100 639 B 1 F n
/fm 256 def
17 .5 1101 640 B 1 F n
/fm 256 def
16 .5 1101 641 B 1 F n
/fm 256 def
15 .5 1102 642 B 1 F n
/fm 256 def
14 .5 1102 643 B 1 F n
/fm 256 def
13 .5 1103 644 B 1 F n
/fm 256 def
12 .5 1103 645 B 1 F n
/fm 256 def
11 .5 1104 646 B 1 F n
/fm 256 def
10 .5 1104 647 B 1 F n
/fm 256 def
9 .5 1105 648 B 1 F n
/fm 256 def
8 .5 1105 649 B 1 F n
/fm 256 def
7 .5 1106 650 B 1 F n
/fm 256 def
6 .5 1106 651 B 1 F n
/fm 256 def
5 .5 1107 652 B 1 F n
/fm 256 def
4 .5 1107 653 B 1 F n
/fm 256 def
3 .5 1108 654 B 1 F n
/fm 256 def
2 .5 1108 655 B 1 F n
/fm 256 def
1 .5 1109 656 B 1 F n
255 255 255 fC
/fm 256 def
1276 545 M 0 75 -300 0 0 -75 300 0 4 PP
1 F
S
n
32 0 0 34 33 0 0 0 31 /Helvetica /font12 ANSIFont font
0 0 0 fC
gs 1024 878 688 463 CB
1334 486 166 (Application ) 166 SB
gr
32 0 0 34 33 0 0 0 30 /Helvetica-Oblique /font19 ANSIFont font
gs 1024 878 688 463 CB
1500 487 18 (n) 18 SB
gr
gs 168 73 1259 565 CB
1426 565 M 0 36 -167 0 0 36 3 PP
S
n
gr
/fm 256 def
/fm 256 def
0 .5 1426 545 B 1 F n
/fm 256 def
1 .5 1425 546 B 1 F n
/fm 256 def
2 .5 1425 547 B 1 F n
/fm 256 def
3 .5 1424 548 B 1 F n
/fm 256 def
4 .5 1424 549 B 1 F n
/fm 256 def
5 .5 1423 550 B 1 F n
/fm 256 def
6 .5 1423 551 B 1 F n
/fm 256 def
7 .5 1422 552 B 1 F n
/fm 256 def
8 .5 1422 553 B 1 F n
/fm 256 def
9 .5 1421 554 B 1 F n
/fm 256 def
10 .5 1421 555 B 1 F n
/fm 256 def
11 .5 1420 556 B 1 F n
/fm 256 def
12 .5 1420 557 B 1 F n
/fm 256 def
13 .5 1419 558 B 1 F n
/fm 256 def
14 .5 1419 559 B 1 F n
/fm 256 def
15 .5 1418 560 B 1 F n
/fm 256 def
16 .5 1418 561 B 1 F n
/fm 256 def
17 .5 1417 562 B 1 F n
/fm 256 def
18 .5 1417 563 B 1 F n
/fm 256 def
19 .5 1416 564 B 1 F n
/fm 256 def
20 .5 1416 565 B 1 F n
/fm 256 def
21 .5 1415 566 B 1 F n
/fm 256 def
22 .5 1415 567 B 1 F n
/fm 256 def
23 .5 1248 634 B 1 F n
/fm 256 def
22 .5 1248 635 B 1 F n
/fm 256 def
21 .5 1249 636 B 1 F n
/fm 256 def
20 .5 1249 637 B 1 F n
/fm 256 def
19 .5 1250 638 B 1 F n
/fm 256 def
18 .5 1250 639 B 1 F n
/fm 256 def
17 .5 1251 640 B 1 F n
/fm 256 def
16 .5 1251 641 B 1 F n
/fm 256 def
15 .5 1252 642 B 1 F n
/fm 256 def
14 .5 1252 643 B 1 F n
/fm 256 def
13 .5 1253 644 B 1 F n
/fm 256 def
12 .5 1253 645 B 1 F n
/fm 256 def
11 .5 1254 646 B 1 F n
/fm 256 def
10 .5 1254 647 B 1 F n
/fm 256 def
9 .5 1255 648 B 1 F n
/fm 256 def
8 .5 1255 649 B 1 F n
/fm 256 def
7 .5 1256 650 B 1 F n
/fm 256 def
6 .5 1256 651 B 1 F n
/fm 256 def
5 .5 1257 652 B 1 F n
/fm 256 def
4 .5 1257 653 B 1 F n
/fm 256 def
3 .5 1258 654 B 1 F n
/fm 256 def
2 .5 1258 655 B 1 F n
/fm 256 def
1 .5 1259 656 B 1 F n
0 5 SP
1126 507 M 5 0 1 PP
S
n
1176 507 M 5 0 1 PP
S
n
1226 507 M 5 0 1 PP
S
n
255 255 255 fC
/fm 256 def
959 732 M 0 75 -450 0 0 -75 450 0 4 PP
1 F
n
2 1 SP
gs 451 76 959 657 CB
959 732 M 0 75 -450 0 0 -75 450 0 4 PP
S
n
gr
32 0 0 34 33 0 0 0 31 /Helvetica /font12 ANSIFont font
0 0 0 fC
gs 1024 878 688 463 CB
1029 674 310 (Other Security Layers) 310 SB
gr
0 1 SP
gs 1 36 1259 752 CB
1259 752 M 0 17 0 0 0 18 3 PP
S
n
gr
/fm 256 def
/fm 256 def
0 .5 1259 732 B 1 F n
/fm 256 def
1 .5 1259 733 B 1 F n
/fm 256 def
2 .5 1258 734 B 1 F n
/fm 256 def
3 .5 1258 735 B 1 F n
/fm 256 def
4 .5 1257 736 B 1 F n
/fm 256 def
5 .5 1257 737 B 1 F n
/fm 256 def
6 .5 1256 738 B 1 F n
/fm 256 def
7 .5 1256 739 B 1 F n
/fm 256 def
8 .5 1255 740 B 1 F n
/fm 256 def
9 .5 1255 741 B 1 F n
/fm 256 def
10 .5 1254 742 B 1 F n
/fm 256 def
11 .5 1254 743 B 1 F n
/fm 256 def
12 .5 1253 744 B 1 F n
/fm 256 def
13 .5 1253 745 B 1 F n
/fm 256 def
14 .5 1252 746 B 1 F n
/fm 256 def
15 .5 1252 747 B 1 F n
/fm 256 def
16 .5 1251 748 B 1 F n
/fm 256 def
17 .5 1251 749 B 1 F n
/fm 256 def
18 .5 1250 750 B 1 F n
/fm 256 def
19 .5 1250 751 B 1 F n
/fm 256 def
20 .5 1249 752 B 1 F n
/fm 256 def
21 .5 1249 753 B 1 F n
/fm 256 def
22 .5 1248 754 B 1 F n
/fm 256 def
23 .5 1248 784 B 1 F n
/fm 256 def
22 .5 1248 785 B 1 F n
/fm 256 def
21 .5 1249 786 B 1 F n
/fm 256 def
20 .5 1249 787 B 1 F n
/fm 256 def
19 .5 1250 788 B 1 F n
/fm 256 def
18 .5 1250 789 B 1 F n
/fm 256 def
17 .5 1251 790 B 1 F n
/fm 256 def
16 .5 1251 791 B 1 F n
/fm 256 def
15 .5 1252 792 B 1 F n
/fm 256 def
14 .5 1252 793 B 1 F n
/fm 256 def
13 .5 1253 794 B 1 F n
/fm 256 def
12 .5 1253 795 B 1 F n
/fm 256 def
11 .5 1254 796 B 1 F n
/fm 256 def
10 .5 1254 797 B 1 F n
/fm 256 def
9 .5 1255 798 B 1 F n
/fm 256 def
8 .5 1255 799 B 1 F n
/fm 256 def
7 .5 1256 800 B 1 F n
/fm 256 def
6 .5 1256 801 B 1 F n
/fm 256 def
5 .5 1257 802 B 1 F n
/fm 256 def
4 .5 1257 803 B 1 F n
/fm 256 def
3 .5 1258 804 B 1 F n
/fm 256 def
2 .5 1258 805 B 1 F n
/fm 256 def
1 .5 1259 806 B 1 F n
gs 1 36 1109 752 CB
1109 752 M 0 17 0 0 0 18 3 PP
S
n
gr
0 0 0 fC
/fm 256 def
/fm 256 def
0 .5 1109 732 B 1 F n
/fm 256 def
1 .5 1109 733 B 1 F n
/fm 256 def
2 .5 1108 734 B 1 F n
/fm 256 def
3 .5 1108 735 B 1 F n
/fm 256 def
4 .5 1107 736 B 1 F n
/fm 256 def
5 .5 1107 737 B 1 F n
/fm 256 def
6 .5 1106 738 B 1 F n
/fm 256 def
7 .5 1106 739 B 1 F n
/fm 256 def
8 .5 1105 740 B 1 F n
/fm 256 def
9 .5 1105 741 B 1 F n
/fm 256 def
10 .5 1104 742 B 1 F n
/fm 256 def
11 .5 1104 743 B 1 F n
/fm 256 def
12 .5 1103 744 B 1 F n
/fm 256 def
13 .5 1103 745 B 1 F n
/fm 256 def
14 .5 1102 746 B 1 F n
/fm 256 def
15 .5 1102 747 B 1 F n
/fm 256 def
16 .5 1101 748 B 1 F n
/fm 256 def
17 .5 1101 749 B 1 F n
/fm 256 def
18 .5 1100 750 B 1 F n
/fm 256 def
19 .5 1100 751 B 1 F n
/fm 256 def
20 .5 1099 752 B 1 F n
/fm 256 def
21 .5 1099 753 B 1 F n
/fm 256 def
22 .5 1098 754 B 1 F n
/fm 256 def
23 .5 1098 784 B 1 F n
/fm 256 def
22 .5 1098 785 B 1 F n
/fm 256 def
21 .5 1099 786 B 1 F n
/fm 256 def
20 .5 1099 787 B 1 F n
/fm 256 def
19 .5 1100 788 B 1 F n
/fm 256 def
18 .5 1100 789 B 1 F n
/fm 256 def
17 .5 1101 790 B 1 F n
/fm 256 def
16 .5 1101 791 B 1 F n
/fm 256 def
15 .5 1102 792 B 1 F n
/fm 256 def
14 .5 1102 793 B 1 F n
/fm 256 def
13 .5 1103 794 B 1 F n
/fm 256 def
12 .5 1103 795 B 1 F n
/fm 256 def
11 .5 1104 796 B 1 F n
/fm 256 def
10 .5 1104 797 B 1 F n
/fm 256 def
9 .5 1105 798 B 1 F n
/fm 256 def
8 .5 1105 799 B 1 F n
/fm 256 def
7 .5 1106 800 B 1 F n
/fm 256 def
6 .5 1106 801 B 1 F n
/fm 256 def
5 .5 1107 802 B 1 F n
/fm 256 def
4 .5 1107 803 B 1 F n
/fm 256 def
3 .5 1108 804 B 1 F n
/fm 256 def
2 .5 1108 805 B 1 F n
/fm 256 def
1 .5 1109 806 B 1 F n
255 255 255 fC
/fm 256 def
695 1336 M 0 187 -448 0 0 -187 448 0 4 PP
1 F
S
n
0 0 0 fC
gs 1024 878 688 463 CB
861 1181 116 (Token 1) 116 SB
gr
255 255 255 fC
/fm 256 def
1105 1317 M 373 0 7 1 6 4 4 6 2 7 0 38 -2 7 -4 6 -6 4 -7 2 -373 0 -7 -2 -7 -4 -4 -6 -1 -7 0 -38 1 -7 4 -6 7 -4 7 -1 20 PP
1 F
n
2 1 SP
gs 412 76 713 1242 CB
1105 1317 M 373 0 7 1 6 4 4 6 2 7 0 38 -2 7 -4 6 -6 4 -7 2 -373 0 -7 -2 -7 -4 -4 -6 -1 -7 0 -38 1 -7 4 -6 7 -4 7 -1 20 PP
S
n
gr
0 0 0 fC
gs 1024 878 688 463 CB
748 1259 342 (Cryptographic Device  1) 342 SB
gr
0 1 SP
255 255 255 fC
/fm 256 def
1255 1334 M 0 187 -450 0 0 -187 450 0 4 PP
1 F
S
n
0 0 0 fC
gs 1024 878 688 463 CB
1422 1179 98 (Token ) 98 SB
gr
32 0 0 34 33 0 0 0 30 /Helvetica-Oblique /font19 ANSIFont font
gs 1024 878 688 463 CB
1520 1180 18 (n) 18 SB
gr
255 255 255 fC
/fm 256 def
1668 1315 M 375 0 7 1 7 4 4 6 1 7 0 38 -1 7 -4 6 -7 4 -7 2 -375 0 -7 -2 -6 -4 -4 -6 -1 -7 0 -38 1 -7 4 -6 6 -4 7 -1 20 PP
1 F
n
2 1 SP
gs 413 76 1274 1240 CB
1668 1315 M 375 0 7 1 7 4 4 6 1 7 0 38 -1 7 -4 6 -7 4 -7 2 -375 0 -7 -2 -6 -4 -4 -6 -1 -7 0 -38 1 -7 4 -6 6 -4 7 -1 20 PP
S
n
gr
32 0 0 34 33 0 0 0 31 /Helvetica /font12 ANSIFont font
0 0 0 fC
gs 1024 878 688 463 CB
1309 1257 324 (Cryptographic Device  ) 324 SB
gr
32 0 0 34 33 0 0 0 30 /Helvetica-Oblique /font19 ANSIFont font
gs 1024 878 688 463 CB
1633 1258 18 (n) 18 SB
gr
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 29 69 2146 3025 CB
2146 3027 29 (6) 29 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 974 (Programming model) 974 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1850 (Cryptoki maintains a list of slots that interface) 1850 SB
300 578 1827 (to tokens, and a list of tokens \223in the system\224) 1827 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 787 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 796 1860 (Application opens a session with a token, and) 1860 SB
300 902 610 (a user \223logs in\224) 610 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1111 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1120 1364 (Token stores collection of objects) 1364 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1291 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1300 1566 (Application data, certificates, and keys) 1566 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 29 69 2146 3025 CB
2146 3027 29 (7) 29 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 61 (T) 54 SB
279 248 758 (okens and slots) 758 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1861 (Application can obtain information about each) 1861 SB
300 578 538 (slot, such as:) 538 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 787 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 796 1156 (description \(e.g., \223PCMCIA\224\)) 1156 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1005 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1014 1037 (if the device is removable) 1037 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1223 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1232 1722 (if the slot is a \223hardware\224 or \223software\224 slot) 1722 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1441 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1450 801 (if a token is present) 801 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 29 69 2146 3025 CB
2146 3027 29 (8) 29 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 61 (T) 54 SB
279 248 1148 (okens and slots \(cont'd\)) 1148 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1766 (Application can obtain a list of tokens in the) 1766 SB
300 578 1858 (system and information about each one, such) 1858 SB
300 684 123 (as:) 123 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 855 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 864 270 (a label) 270 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1073 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1082 1378 (description \(manufacturer, model\)) 1378 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1291 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1300 557 (serial number) 557 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1509 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1518 1387 (status \(read-only, random number) 1387 SB
450 1624 426 (generator\)) 426 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1833 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1842 885 (maximum of sessions) 885 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2051 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2060 1536 (maximum and minimum length of PIN) 1536 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2269 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2278 1616 (amount of total and free memory on the) 1616 SB
450 2384 226 (token) 226 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 29 69 2146 3025 CB
2146 3027 29 (9) 29 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 441 (Sessions) 441 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1655 (Application opens a session with a token) 1655 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 643 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 652 719 (read-only session) 719 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 861 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 870 740 (read/write session) 740 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1079 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1088 1756 (For greater access, application user logs in) 1756 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1297 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1306 512 (requires PIN) 512 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1515 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1524 1563 (Security Officer or normal user access) 1563 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (10) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 367 (Objects) 367 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 326 (Classes) 326 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 575 23 ( ) 75 SB
375 687 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 696 1652 (Application data objects hold information) 1652 SB
450 802 1016 (defined by an application) 1016 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1011 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1020 1371 (Certificate objects hold public-key) 1371 SB
450 1126 441 (certificates) 441 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1335 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1344 1471 (Key objects hold public, private, and) 1471 SB
450 1450 466 (secret keys) 466 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1659 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1668 323 (Lifetime) 323 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1771 23 ( ) 75 SB
375 1883 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica-Oblique /font19 ANSIFont font
450 1892 255 (Token) 255 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
705 1892 1398 ( objects exist on token and remain) 1398 SB
450 1998 906 (after session is closed) 906 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2207 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica-Oblique /font19 ANSIFont font
450 2216 326 (Session) 326 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
776 2216 1372 ( objects exist only for the duration) 1372 SB
450 2322 569 (of the session) 569 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (11) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 367 (Objects) 367 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 329 (Visibility) 329 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 681 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 690 1608 (Public objects are visible to all sessions) 1608 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 899 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 908 1523 (Private objects are visible only after a) 1523 SB
450 1014 753 (user has logged in) 753 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1223 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1232 755 (Objects consist of ) 755 SB
32 0 0 92 92 0 0 0 83 /Helvetica-Oblique /font19 ANSIFont font
1055 1232 379 (attributes) 379 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1441 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1450 1811 (An application can create or destroy objects,) 1811 SB
300 1556 1033 (and manipulate attributes) 1033 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1765 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1774 1699 (An application can also search for objects) 1699 SB
300 1880 783 (based on attributes) 783 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2089 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 2098 1794 (Attributes supported depends on application) 1794 SB
300 2204 251 (profile) 251 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (12) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 598 (Object types) 598 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 653 (Application data) 653 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 681 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 690 415 (Certificate) 415 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 899 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 908 418 (Public key) 418 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1011 23 ( ) 75 SB
375 1123 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1132 188 (RSA) 188 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1235 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1244 188 (DSA) 188 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1347 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1356 578 (Diffie-Hellman) 578 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1565 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1574 454 (Private key) 454 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1677 23 ( ) 75 SB
375 1789 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1798 188 (RSA) 188 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1901 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1910 188 (DSA) 188 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2013 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2022 578 (Diffie-Hellman) 578 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2231 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 2240 435 (Secret key) 435 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2343 23 ( ) 75 SB
375 2455 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2464 183 (RC2) 183 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2567 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2576 183 (RC4) 183 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2679 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 2688 1479 (DES \(single, double, or triple length\)) 1479 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (13) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 1221 (Cryptographic operations) 1221 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1673 (An application can perform cryptographic) 1673 SB
300 578 1748 (operations on objects and data supplied by) 1748 SB
300 684 592 (the application) 592 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 893 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 902 1347 (operation may run in parallel with) 1347 SB
450 1008 438 (application) 438 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1217 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1226 1840 (Cryptographic operations supported depends) 1840 SB
300 1332 1491 (on mechanisms supported by device) 1491 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (14) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 478 (Functions) 478 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 660 (C_Initialize) 660 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
960 472 811 (:  initializes Cryptoki) 811 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 689 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 704 495 (C_GetInfo) 495 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
795 698 1189 (:  obtains general information) 1189 SB
300 812 593 (about Cryptoki) 593 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1021 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1036 715 (C_GetSlotList) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 1030 1159 (:  obtains a list of slots in the) 1159 SB
300 1144 291 (system) 291 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1353 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1368 715 (C_GetSlotInfo) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 1362 1112 (:  obtains information about) 1112 SB
300 1476 624 (a particular slot) 624 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1685 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1700 770 (C_GetTokenInfo) 770 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1070 1694 856 (:  obtains information) 856 SB
300 1808 963 (about a particular token) 963 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2017 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2032 990 (C_GetMechanismList) 990 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1290 2026 693 (:  obtains a list of) 693 SB
300 2140 1402 (mechanisms supported by a token) 1402 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2349 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2364 990 (C_GetMechanismInfo) 990 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1290 2358 856 (:  obtains information) 856 SB
300 2472 1841 (about a particular mechanism supported by a) 1841 SB
300 2578 226 (token) 226 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (15) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 605 (C_InitToken) 605 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
905 472 777 (:  initializes a token) 777 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 689 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 704 495 (C_InitPIN) 495 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
795 698 1359 (:  initializes the normal user\222s PIN) 1359 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 915 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 930 440 (C_SetPIN) 440 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
740 924 1325 (:  modifies the PIN of the current) 1325 SB
300 1038 179 (user) 179 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1141 23 ( ) 75 SB
225 1253 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1268 715 (C_OpenSession) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 1262 983 (:  opens a connection or) 983 SB
300 1376 1593 (\223session\224 between an application and a) 1593 SB
300 1482 630 (particular token) 630 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1691 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1706 770 (C_CloseSession) 770 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1070 1700 752 (:  closes a session) 752 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1917 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1932 990 (C_CloseAllSessions) 990 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1290 1926 838 (:  closes all sessions) 838 SB
300 2040 491 (with a token) 491 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2249 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2264 880 (C_GetSessionInfo) 880 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1180 2258 856 (:  obtains information) 856 SB
300 2372 721 (about the session) 721 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (16) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 385 (C_Login) 385 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
685 472 750 (:  logs into a token) 750 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 656 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 671 440 (C_Logout) 440 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
740 665 942 (:  logs out from a token) 942 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 849 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 864 770 (C_CreateObject) 770 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1070 858 780 (:  creates an object) 780 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1042 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1057 660 (C_CopyObject) 660 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
960 1051 1180 (:  creates a copy of an object) 1180 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1235 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1250 825 (C_DestroyObject) 825 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1125 1244 825 (:  destroys an object) 825 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1428 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1443 825 (C_GetObjectSize) 825 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1125 1437 948 (:  obtains the size of an) 948 SB
300 1551 588 (object in bytes) 588 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1727 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1742 1045 (C_GetAttributeValue) 1045 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1345 1736 502 (:  obtains an) 502 SB
300 1850 1081 (attribute value of an object) 1081 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2026 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2041 1045 (C_SetAttributeValue) 1045 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1345 2035 549 (:  modifies an) 549 SB
300 2149 1081 (attribute value of an object) 1081 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2325 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2340 935 (C_FindObjectsInit) 935 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1235 2334 848 (:  initializes an object) 848 SB
300 2448 685 (search operation) 685 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2624 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2639 715 (C_FindObjects) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 2633 871 (:  continues an object) 871 SB
300 2747 685 (search operation) 685 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (17) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 715 (C_EncryptInit) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 472 1025 (:  initializes an encryption) 1025 SB
300 586 383 (operation) 383 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 795 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 810 495 (C_Encrypt) 495 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
795 804 1086 (:  encrypts single-part data) 1086 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1021 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1036 825 (C_EncryptUpdate) 825 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1125 1030 921 (:  continues a multiple-) 921 SB
300 1144 1017 (part encryption operation) 1017 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1353 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1368 770 (C_EncryptFinal) 770 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1070 1362 999 (:  finishes a multiple-part) 999 SB
300 1476 832 (encryption operation) 832 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (18) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 715 (C_DecryptInit) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 472 974 (:  initializes a decryption) 974 SB
300 586 383 (operation) 383 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 795 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 810 495 (C_Decrypt) 495 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
795 804 1310 (:  decrypts single-part encrypted) 1310 SB
300 918 179 (data) 179 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1127 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1142 825 (C_DecryptUpdate) 825 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1125 1136 921 (:  continues a multiple-) 921 SB
300 1250 1017 (part decryption operation) 1017 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1459 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1474 770 (C_DecryptFinal) 770 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1070 1468 999 (:  finishes a multiple-part) 999 SB
300 1582 832 (decryption operation) 832 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (19) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 660 (C_DigestInit) 660 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
960 472 956 (:  initializes a message-) 956 SB
300 586 778 (digesting operation) 778 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 795 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 810 440 (C_Digest) 440 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
740 804 1031 (:  digests single-part data) 1031 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1021 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1036 770 (C_DigestUpdate) 770 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1070 1030 1080 (:  continues a multiple-part) 1080 SB
300 1144 778 (digesting operation) 778 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1353 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1368 715 (C_DigestFinal) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 1362 999 (:  finishes a multiple-part) 999 SB
300 1476 778 (digesting operation) 778 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (20) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 550 (C_SignInit) 550 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
850 472 930 (:  initializes a signature) 930 SB
300 586 383 (operation) 383 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 795 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 810 330 (C_Sign) 330 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
630 804 954 (:  signs single-part data) 954 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1021 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1036 660 (C_SignUpdate) 660 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
960 1030 1080 (:  continues a multiple-part) 1080 SB
300 1144 788 (signature operation) 788 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1353 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1368 605 (C_SignFinal) 605 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
905 1362 999 (:  finishes a multiple-part) 999 SB
300 1476 788 (signature operation) 788 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1579 23 ( ) 75 SB
225 1691 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1706 935 (C_SignRecoverInit) 935 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1235 1700 930 (:  initializes a signature) 930 SB
300 1814 1779 (operation, where the data can be recovered) 1779 SB
300 1920 745 (from the signature) 745 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2129 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2144 715 (C_SignRecover) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 2138 980 (:  signs single-part data,) 980 SB
300 2252 1710 (where the data can be recovered from the) 1710 SB
300 2358 379 (signature) 379 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (21) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 660 (C_VerifyInit) 660 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
960 472 990 (:  initializes a verification) 990 SB
300 586 383 (operation) 383 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 795 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 810 440 (C_Verify) 440 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
740 804 1435 (:  verifies a signature on single-part) 1435 SB
300 918 179 (data) 179 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1127 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1142 770 (C_VerifyUpdate) 770 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1070 1136 1080 (:  continues a multiple-part) 1080 SB
300 1250 848 (verification operation) 848 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1459 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1474 715 (C_VerifyFinal) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 1468 999 (:  finishes a multiple-part) 999 SB
300 1582 848 (verification operation) 848 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1791 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1806 1045 (C_VerifyRecoverInit) 1045 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1345 1800 525 (:  initializes a) 525 SB
300 1914 1574 (verification operation where the data is) 1574 SB
300 2020 1179 (recovered from the signature) 1179 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2229 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2244 825 (C_VerifyRecover) 825 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1125 2238 979 (:  verifies a signature on) 979 SB
300 2352 1821 (single-part data, where the data is recovered) 1821 SB
300 2458 745 (from the signature) 745 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (22) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 715 (C_GenerateKey) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1015 472 1011 (:  generates a secret key) 1011 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 689 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 704 935 (C_GenerateKeyPair) 935 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1235 698 861 (:  generates a public-) 861 SB
300 812 797 (key/private-key pair) 797 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1021 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1036 495 (C_WrapKey) 495 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
795 1030 1003 (:  wraps \(encrypts\) a key) 1003 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1247 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1262 605 (C_UnwrapKey) 605 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
905 1256 1105 (:  unwraps \(decrypts\) a key) 1105 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1473 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1488 605 (C_DeriveKey) 605 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
905 1482 1133 (:  derives a key from a base) 1133 SB
300 1596 143 (key) 143 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1805 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1820 660 (C_SeedRandom) 660 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
960 1814 1057 (:  mixes in additional seed) 1057 SB
300 1928 1681 (material to the random number generator) 1681 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 2137 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 2152 880 (C_GenerateRandom) 880 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1180 2146 826 (:  generates random) 826 SB
300 2260 179 (data) 179 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (23) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 872 (Functions \(cont\222d\)) 872 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 478 1045 (C_GetFunctionStatus) 1045 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1345 472 732 (:  obtains updated) 732 SB
300 586 1869 (status of a function running in parallel with the) 1869 SB
300 692 438 (application) 438 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 901 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 916 880 (C_CancelFunction) 880 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1180 910 815 (:  cancels a function) 815 SB
300 1024 1531 (running in parallel with the application) 1531 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1233 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
300 1248 330 (Notify) 330 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
630 1242 1210 (:  callback function to process) 1210 SB
300 1356 1061 (notifications from Cryptoki) 1061 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (24) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 1384 (Example: Signing a message) 1384 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
225 466 77 (1.) 77 SB
375 466 430 (Find token) 430 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 675 74 (- ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
450 690 715 (C_GetSlotList) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1165 684 52 (, ) 52 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
1217 690 770 (C_GetTokenInfo) 770 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 798 805 (\(one or more times\)) 805 SB
225 1010 77 (2.) 77 SB
375 1010 1013 (Open session, and log in) 1013 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1219 74 (- ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
450 1234 715 (C_OpenSession) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
1165 1228 52 (, ) 52 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
1217 1234 385 (C_Login) 385 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
225 1448 77 (3.) 77 SB
375 1448 1357 (Find key that supports signatures) 1357 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1657 74 (- ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
450 1672 715 (C_FindObjects) 715 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
225 1886 77 (4.) 77 SB
375 1886 968 (Run signature functions) 968 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2095 74 (- ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
450 2110 990 (C_SignInit, C_Sign) 990 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
225 2324 77 (5.) 77 SB
375 2324 1064 (Log out and close session) 1064 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 2533 74 (- ) 75 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
450 2548 440 (C_Logout) 440 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
890 2542 52 (, ) 52 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
942 2548 770 (C_CloseSession) 770 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (25) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 1360 (Example application profiles) 1360 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1220 (Privacy-Enhanced Mail \(PEM\)) 1220 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 681 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 690 916 (RSA, DES, MD2, MD5) 916 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 899 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 908 1302 (Government authentication-only) 1302 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1117 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1126 428 (DSA, SHA) 428 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1335 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1344 1466 (Cellular Digital Packet Data \(CDPD\)) 1466 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1553 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1562 813 (Diffie-Hellman, RC4) 813 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1771 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1780 767 (More to be defined) 767 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (26) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 601 (Conclusions) 601 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 463 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 472 1840 (Cryptoki is a standard programming interface) 1840 SB
300 578 1381 (for portable cryptographic devices) 1381 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 787 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 796 1554 (More application profiles to be defined) 1554 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1005 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1014 1662 (First libraries demonstrated at 1995 RSA) 1662 SB
300 1120 1649 (Data Security conference, more to come) 1649 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1329 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1338 1764 (RSA has a software-only implementation of) 1764 SB
300 1444 1086 (Cryptoki called \223SofToken\224) 1086 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1653 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1662 1676 (RSA also has a Cryptoki test program for) 1676 SB
300 1768 1197 (Windows 3.1x Cryptoki DLL\222s) 1197 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 58 58 0 0 0 53 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 58 69 2117 3025 CB
2117 3027 58 (27) 58 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
225 248 813 (Obtaining copies) 813 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 488 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 497 778 (E-mail responder:  ) 778 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
1078 503 660 (pkcs@rsa.com) 660 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 714 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 723 226 (FTP: ) 226 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
526 729 385 (rsa.com) 385 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
911 723 52 (, ) 52 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
963 729 880 (pub/pkcs/pkcs-11) 880 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 837 352 (directory) 352 SB
32 0 0 92 92 0 0 0 92 /Symbol font
225 1046 93 (\250 ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
300 1055 479 (Mailing list: ) 479 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
779 1061 1045 (pkcs-11-dev@rsa.com) 1045 SB
32 0 0 92 92 0 0 0 92 /Symbol font
375 1272 74 (- ) 75 SB
32 0 0 92 92 0 0 0 83 /Helvetica /font12 ANSIFont font
450 1281 548 (to subscribe: ) 548 SB
32 0 0 92 92 0 0 0 77 /Courier-Bold /font9 ANSIFont font
998 1287 1045 (pkcs-11-dev-request) 1045 SB
EJ RS
%%PageTrailer
%%Trailer
SVDoc restore
end
% TrueType font name key:
%    MSTT31c150 = 474fDTimes New RomanF0000003a000001900000
%    MSTT31c15d = 474fDArialF00000000000001900000
%    MSTT31c168 = 474fDArialF0000004b000001900000
%    MSTT31c173 = 474fDSymbolF0000003a000001900000
%    MSTT31c17e = 43e7DTimes New RomanF0000003a000001900000
%    MSTT31c18b = 43e7DTimes New RomanF0000002a000001900000
%    MSTT31c198 = 43e7DArialF00000000000002bc0000
%    MSTT31c1a3 = 43e7DArialF00000000000001900000
%    MSTT31c1ae = 43e7DArialF0000003a000001900000
%    MSTT31c1b9 = 43e7DArialF0000005c000001900000
%    MSTT31c1c4 = 43e7DArialF0000004b000001900000
%    MSTT31c1cf = 43e7DSymbolF0000003a000001900000
%    MSTT31c1da = 413fDTimes New RomanF0000003a000001900000
%    MSTT31c1ee = 413fDTimes New RomanF0000002a000001900000
%    MSTT31c20d = 413fDArialF00000064000002bc0000
%    MSTT31c223 = 413fDSymbolF0000005c000001900000
%    MSTT31c22e = 413fDArialF0000005c000001900000
%    MSTT31c239 = 413fDArialF0000005c000001900001
%    MSTT31c244 = 413fDArialF0000003a000001900000
%    MSTT31c24f = 413fDArialF000f0021000001900000
%    MSTT31c25a = 413fDArialF00100021000002bc0000
%    MSTT31c265 = 413fDArialF000f0021000001900001
%    MSTT31c270 = 413fDCourier NewF0000005c000002bc0000
%    MSTT31c27c = 413fDArialF0000003f000001900000
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Courier-Bold
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Symbol
%%+ font Times-Roman

%%EOF
