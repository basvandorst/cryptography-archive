Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!vixen.cso.uiuc.edu!sdd.hp.com!decwrl!decwrl!csus.edu!netcom.com!grady
From: grady@netcom.com (Grady Ward)
Subject: Re: Forging Hash Functions?
Message-ID: <gradyCAr9MD.7Ay@netcom.com>
Organization: Moby lexicons
X-Newsreader: TIN [version 1.1 PL8]
References: <22vhe9INNm56@twain.ucs.umass.edu>
Date: Mon, 26 Jul 1993 04:54:12 GMT
Lines: 25

Lulu of the lotus-eaters (quilty@twain.ucs.umass.edu) wrote:

: Btw. What is the length of an MD5 hash? I understand the idea behind a hash
: in general, but I fear I don't know the specifics of MD5.  Is it those thirty
: characters long which you hint at? Is it simply that a hash function has

Yes -- note that 30 ^ 26 ~2.5 e 38 and 2 ^ 128 ~3.4 e 38.
(Assuming I can only make edit errors in the domain of upper-case
characters...)

I think the point is though since it only takes a relatively few bytes
of munging to warp any text to a given md5 hash, tampering with a large
document would very well go unnoticed.  That is, you could give me a random
md5 hash and a random uncorrelated text, and it is possible to 
be able to insert spaces, change case, modify indents only about thirty
times to warp the text to the desired hash.

Note that I do not propose a method to _discover_ what characters to
add/delete/substitute -- only that relatively few are required for warping
compared to the usual sizes of texts.  That is, if someone _does_
figure out how to generate those 30 characters his or her forging would
likely not be detected for some time by human auditors.

-- 
grady@netcom.com  Moby lexicons  voice/fax (707) 826-7715 
