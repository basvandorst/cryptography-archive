Path: msuinfo!agate!howland.reston.ans.net!noc.near.net!uunet!mcsun!sun4nl!fwi.uva.nl!casper
From: casper@fwi.uva.nl (Casper H.S. Dik)
Newsgroups: sci.crypt
Subject: Re: Unix Security (please read)
Date: 27 Jul 1993 16:57:48 GMT
Organization: FWI, University of Amsterdam
Lines: 27
Message-ID: <233mqc$1o9@mail.fwi.uva.nl>
References: <LUCIEN.93Jul27104124@fionavar.watson.ibm.com> <CAtzMt.7B8@informatik.uni-hamburg.de>
NNTP-Posting-Host: adam.fwi.uva.nl

bontchev@news.informatik.uni-hamburg.de (Vesselin Bontchev) writes:

>Nope, it has to work 4096 times faster - you have forgotten the salt. It is

>4096 * 128^5 = 1.41 E 14 potential checks
>365*24*60*60 = 3.15 E 7  seconds

>That is, 4.48 E 6 checks per second. Or approximately 4.5 checks per
>microsecond, which is exactly what I stated.

No. You don't need to compute the password for each salt.

The original article talked about guessing a single password
with the mentioned characteristics.

Input: one encrypted password of length 5 (with known salt)
Time to compute: 365 days.
Speed: 1100 crypts/second.

Which is about the speed I remember from the original paper.

Note that the algorithm is pretty much memory (or cache) bound
and therefor runs fast on HPs (upto 8k/s I would guess)
but less so on machines that have a cache that doesn't run
at clock speed.

Casper
