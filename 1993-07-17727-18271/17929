Newsgroups: sci.crypt
Path: msuinfo!agate!linus!linus.mitre.org!linus!mbunix!eachus
From: eachus@spectre.mitre.org (Robert I. Eachus)
Subject: Re: Protecting game moves (was Re:One-time Pad not secure)
In-Reply-To: davidthi@microsoft.com's message of 09 Jul 93 16:30:00 GMT
Message-ID: <EACHUS.93Jul12104043@spectre.mitre.org>
Sender: news@linus.mitre.org (News Service)
Nntp-Posting-Host: spectre.mitre.org
Organization: The Mitre Corp., Bedford, MA.
References: <1993Jul09.163000.4770@microsoft.com>
Distribution: usa
Date: Mon, 12 Jul 1993 15:40:43 GMT
Lines: 44


     There are some things that you can do which would either make
cheating easier to detect or harder to do.

     First, send a digest of the host player's move as a part of each
turn distribution.  (In other words the host player makes his move
first before the results of the previous turn are distributed to the
other players.)  The agent program now checks that the host player's
move agrees with the previous digest.  If you want, this can be
generalized to distribute the digests separately, and you can even
have every player send a digest, then send their move only after
receiving all digests.

    Second if the game involves a map, generate unexplored areas only
as they are explored.  Not only does this make the start of the game
faster, but no one can get a major advantage by pulling the map out
early.

    Last but not least, base any random number generator used in the
game on a seed derived from the previous state and from moves sent in.
This allows the game to be regenerated from a record of the moves, but
the seed for a turn cannot be guessed until all moves are in.
Presumably, the digests above will prevent the hostt player from
juggling his or her move to get a "good roll."  For really classy
protection use a seed generated by combining encrypted seeds sent by
each player.  Use an interactive Diffie-Hellman scheme for sending the
seeds, and redistribute the initial seeds to the players such that a
voting algorithm--perhaps with a significant amount of work--can be
used to read the seed values.  (You want to be able to reconstruct the
seed even if one or more players "lose" their keys.)

     Now that you have done all this, an independent judge can later
verify the honesty of the gameplay.  Spying on other players can't be
verified, especially if it occurs "outside the game," but rigging the
game to give a player an advantage in dice-rolling can be detected.


--

					Robert I. Eachus

with Standard_Disclaimer;
use  Standard_Disclaimer;
function Message (Text: in Clever_Ideas) return Better_Ideas is...
