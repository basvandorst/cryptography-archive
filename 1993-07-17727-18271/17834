Path: msuinfo!agate!howland.reston.ans.net!noc.near.net!uunet!cs.utexas.edu!rutgers!att-out!cbnewsh!cbnewsh.cb.att.com!wcs
From: wcs@anchor.ho.att.com (Bill Stewart +1-908-949-0705)
Newsgroups: sci.crypt
Subject: Re: Adequate encryption
Message-ID: <WCS.93Jul7191453@rainier.ATT.COM>
Date: 8 Jul 93 00:14:53 GMT
References: <26294@mindlink.bc.ca> <21ehkg$87q@sol.TIS.COM>
Sender: news@cbnewsh.cb.att.com (NetNews Administrator)
Organization: People your mother warned you about
Lines: 43
In-Reply-To: mjr@tis.com's message of 7 Jul 93 13:04:16 GMT
Nntp-Posting-Host: rainier.ho.att.com

In article <21ehkg$87q@sol.TIS.COM> mjr@tis.com (Marcus J. Ranum) writes:
   >In MS-DOS, is the encryption provided by PC-Tools (DES) adequate to prevent all
   >by the most powerful decrypters from reading my stuff.

	   I'd consider DES safe from anyone but the big intelligence
   agencies (and even then some) - lots of folks with serious knowledge
   of cryptography have spent lots of time trying to cryptanalyse it and
   have pretty much failed.

You have three weaknesses - DES, the implementation, and keys.
I'd agree that for the next N<10-20 years, DES is good enough to
protect you against amateurs and almost all professionals;
electronic funds transfer networks will have to worry about it before
most people (except major organized criminals and political dissidents).

But you've also got to have a good implementation and good well-protected keys.
Brute-force searches on all 2**56 keys aren't a big risk;
searches on short monocase passwords and words in dictionaries,
and possibly even those-plus-appended-digits, are fast, easy, and
successful if your keys are too obvious.  Keys written down in your
wallet aren't a good idea if it's stolen by criminals or cops.

Some of the implementation problems are key-related - does the program
leave the key around on disk, where it can be recovered?
Is it kept on an EPROM card that might be cracked?
Is there a checksum used that makes it easy to verify if you have the
right key?  (This is fine if you have a good key, very bad if you have a wimpy key.)
Other problems aren't key-related - does the program leave the
unencrypted file on disk without overwriting it?
This is especially a concern if it deletes the old file and just
leaves the blocks around on the disk.

If your machine is shared by multiple users, are the keys and
encryption on a per-file basis?  Per-directory or per-whole-device?
System boot only?  How easy is it to manage the keys?
What about network connections - does the key or unencrypted data ever
go across the network?

Good implementations are pretty safe.  Bad ones never will be :-)
--
#				Pray for peace;      Bill
# Bill Stewart 1-908-949-0705 wcs@anchor.att.com AT&T Bell Labs 4M312 Holmdel NJ
# White House Comment Line 1-202-456-1111  fax 1-202-456-2461
