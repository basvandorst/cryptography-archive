Path: msuinfo!agate!library.ucla.edu!news.mic.ucla.edu!unixg.ubc.ca!unruh
From: unruh@physics.ubc.ca (William Unruh)
Newsgroups: sci.crypt
Subject: Re: ufc-crypt ; password protocols
Date: 14 Jul 1993 20:08:59 GMT
Organization: The University of British Columbia
Lines: 31
Distribution: world
Message-ID: <221p4rINNo6q@iskut.ucs.ubc.ca>
References: <69246@mimsy.umd.edu> <CA2tCz.6qp@bunyip.cc.uq.oz.au> <WCS.93Jul13153831@rainier.ATT.COM> <CA4pCH.9MJ@bunyip.cc.uq.oz.au>
NNTP-Posting-Host: physics.ubc.ca

eay@psych.psy.uq.oz.au (Eric Young) writes:
>One interesting development with recent OS's is the advent of shared
>libraries.  Surffice it to say, it is quite trivial to change crypt()
>to whatever algorithm you like and modify getpass() so that passwords
>longer that 8 characters are returned (well it is under sunOS anyway :-).

>If you want to use MD5, you can,
>since any program that ever called crypt() all call the new version in the
>shared library.  You may have problems with programs that expect
>to get back 13 characters from crypt().

Unfortunately, this appears to be wrong. In particular poor old root on a single
user login on an unsecure console demands a password, and seems to use a hard
coded (static linked) version of crypt. I just tried booting up on a machine on
which I had moved /usr/lib/ld.so away, so that dynamic linking would not work.
I had the console unsecure, and booted single user. I got asked for a password,
and the system let me in only when I typed in the right password for root.
Of course almost everything else broke (no /usr/lib/ld.so error messages), but
that password request and test did not, so that single user password request does
not use the dynamically linked crypt(). I.e., you need the source for vmunix to
alter the crypt there ( or does it haul it in from libc.a when you remake the
kernel).
It's ironic that only account you cannot protect with a better password algorithm
is root.
Also modifying getpass is not too useful as some programs (ftp for sure, and
maybe telnet, rlogin) use the getpass on the remote machine, and may well
truncate the password at 8 characters. So as long as you don't want remote logins
you're OK.
Frustrating- so near and yet so far.


