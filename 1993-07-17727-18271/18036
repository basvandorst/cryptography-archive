Path: msuinfo!agate!howland.reston.ans.net!math.ohio-state.edu!magnus.acs.ohio-state.edu!masic
From: masic@magnus.acs.ohio-state.edu (Miroslav D Asic)
Newsgroups: sci.crypt
Subject: Re: Need file signature algorithm
Date: 17 Jul 1993 03:56:13 GMT
Organization: The Ohio State University, Mathematics Department
Lines: 40
Distribution: world
Message-ID: <227t8t$6uo@charm.magnus.acs.ohio-state.edu>
References: <1993Jul8.003707.21066@wdl.loral.com> <TSOS.496.742113811@uni-duesseldorf.de> <8JUL199310575172@robot.nuceng.ufl.edu>
NNTP-Posting-Host: top.magnus.acs.ohio-state.edu
Summary: Do not use CRC for this
Keywords: password hashing, Purdy polynomial, DEC, CRC

In article <8JUL199310575172@robot.nuceng.ufl.edu>
Shawn A. Clifford (sysop@robot.nuceng.ufl.edu) writes:
>In article <TSOS.496.742113811@uni-duesseldorf.de>, you write...
>
>[...stuff omitted...]
>
>> 
>>If the original poster (Spencer L Webb) just wants a signature but accepts 
>>the data to be transmitted in clear -- isn't it overkill to use an 
>>encryption algorithm at all?? 
>> 
>>I'd apply a hash algorithm (SHA might be fine if it spares you any 
>>licencing problems) to a concatenation of a secret string and the data. 
>>Transmit only the data, of course, plus the result from the hash 
>>algorithm. The receiver does the same calculation: Start the hash 
>>algorithm on the same secret string, then continue with the data, and 
>>compare the results.
>
>I agree.  How viable would be just a CRC of a secret key?  It would be very
>easy to implement.  Would this be sufficient if the key was well chosen?  Maybe
>write a crc that forms 16 byte output?
>  [...]

    Bad idea! First of all, CRCs are easy to forge; constructing a file
with the CRC given in advance is essentially equivalent to solving a
linear system (or inverting a matrix) in the 0-1 field. You can use CAS
programs (Derive, Maple V, Mathematica, ...) for that.
    There is also an another problem: If the true_message is altered so
that the new message (let's call it false_message) has the same CRC, i.e.
    CRC(true_message) = CRC(false_message) ,
then for an *arbitrary* secret_string we also have
    CRC(secret_string.true_message) = CRC(secret_string.false_message)
so that the secret_string does not help a whole lot.
    Hope this helps!                                   Cheerio, Miroslav
 
>Shawn A. Clifford                 | Internet: sysop@robot.nuceng.ufl.edu

-- 
 ***** Miroslav D. Asic, Dept. of Math., The Ohio State Univ. *****
 *****  masic@magnus.acs.ohio-state.edu  or  asic.1@ohstmail  *****
