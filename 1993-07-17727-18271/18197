Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!europa.eng.gtefsd.com!news.ans.net!newsgate.watson.ibm.com!hawnews.watson.ibm.com!hawnews!lucien
From: lucien@watson.ibm.com (Lucien Van Elsen)
Subject: Re: Unix Security (please read)
Sender: news@hawnews.watson.ibm.com (NNTP News Poster)
Message-ID: <LUCIEN.93Jul27134321@fionavar.watson.ibm.com>
In-Reply-To: bontchev@news.informatik.uni-hamburg.de's message of Tue, 27 Jul 1993 16:11:15 GMT
Date: Tue, 27 Jul 1993 17:43:21 GMT
Disclaimer: This posting represents the poster's views, not necessarily those of IBM.
References: <LUCIEN.93Jul27104124@fionavar.watson.ibm.com>
	<CAtzMt.7B8@informatik.uni-hamburg.de>
Nntp-Posting-Host: fionavar.watson.ibm.com
Organization: IBM T.J. Watson Research Center
Lines: 32

>>>>> bontchev@news.informatik.uni-hamburg.de (Vesselin Bontchev) said:

> Lucien Van Elsen (lucien@watson.ibm.com) writes:

>> 128^5 =        3.43 E 10 potential passwords
>> 365*24*60*60 = 3.15 E 7  seconds

>> Nope, your arithmetic is wrong- it works out to ~1100 crypts/second, which

> Nope, it has to work 4096 times faster - you have forgotten the salt. It is

> 4096 * 128^5 = 1.41 E 14 potential checks
> 365*24*60*60 = 3.15 E 7  seconds

> That is, 4.48 E 6 checks per second. Or approximately 4.5 checks per
> microsecond, which is exactly what I stated.

The original from Steve Bellovin said "As for how fast passwords can be
guessed-- using their crypt routine on a DEC 3100, a 5-character password
selected from all 128 ASCII characters would be found in 365 days. a
5-character password selected from all 128 ASCII characters would be found
in 365 days."  Cracking a single password from the entry in the password
file only uses one salt.  If you were trying to crack _all_ possible five
character passwords in a year, yes, you would have to generate the the
encryption for each and every possible salt, and that would indeed take 4096
times longer.  However, that is not the point he is making.

		-Lucien
--
-----------------------------------------------------------------------
Lucien Van Elsen                                          IBM  Research
lucien@watson.ibm.com                                     Project Agora
