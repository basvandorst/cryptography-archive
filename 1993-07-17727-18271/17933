Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!sol.ctr.columbia.edu!news.kei.com!ub!acsu.buffalo.edu!boyd
From: boyd@acsu.buffalo.edu (Daniel F)
Subject: Re: Recursive techniques...
Message-ID: <CA2Bqr.HAG@acsu.buffalo.edu>
Followup-To: sci.crypt
Sender: nntp@acsu.buffalo.edu
Nntp-Posting-Host: autarch-14.acsu.buffalo.edu
Reply-To: boyd@acsu.buffalo.edu (Daniel F. Boyd)
Organization: UB
References: <C9oItq.20G@news2.cis.umn.edu>
Date: Mon, 12 Jul 1993 17:40:03 GMT
Lines: 83


I'll respond again to the original post, since I got all hyper-nasty last
time and looked like a jerk.  Sorry.

In article <C9oItq.20G@news2.cis.umn.edu> bram0003@student.tc.umn.edu 
(Paul F Bramscher-1) writes:
> Has there been much work done with recursive algorithms?  This could
> be done several ways, to either encrypt the encrypted data many
> times on itself,

Well, suppose you have a basic encryption algorithm E.  You take your
message m; encrypted with E it becomes E(m).

As far as I can tell from your description, you're talking about doing
encryption like this:

	E(E(E(E(E(E(E(E(m))))))))

This is more commonly known as 'multiple rounds'.  This is in use
already -- for instance, DES uses 16 rounds of encryption.

> or else make some kind of active algorithm which modifies itself
> after each process...

This has been thought of also; for instance, people discussed using a
different key for each round of DES instead of using the same key for
all the 16 rounds.  In the case of DES it didn't happen to help, but
with other systems, who knows.

> The idea would be to encrypt your text many times
> over, so that in order to crack it you'd have to get past the first
> encryption before the second (and you'd have virtually no way of telling)
> and so on, maybe a hundred times over for especially sensitive
> stuff. 

This is a simple idea.  It's the basic principle of 'superencipherment',
and it's been thought of before.  You have two or more algorithms
(call them E, F, G etc.) and you send your message like this:

	E(F(G(m)))

The recipient has to decrypt with E, then with F, then with G.  This
was applied with the Japanese naval codes in World War II; they used
the word 'AF' to stand for 'Midway', and then they enciphered with the
Purple machine.  The Americans had broken the Purple machine, but they
still had to find out what 'AF' stood for.

Multiple rounds is just superencipherment where E, F, and G are all
the same algorithm.

> It's amazing what can really be done with cryptography considering the lack
> of imagination that seems to be out there...  Maybe governments hire too
> many dull -- predictable -- mathematicians...

Predictable how?  In what way?
 
> Instead of having a traditional "key", then, it would be a "padlock"
> encryption, with a few hundred keys that must be turned in sequence.  

You are fooling around with terminology.  It's still a traditional
"key".  Both sides have to synchronize on the same series of subkeys;
the series of subkeys, taken as a whole, is really the key to the
cipher.

> I bet a recursive-style encryption scheme would be virtually
> uncrackable, even by the big machines.

Adding more rounds might or might not help; it depends on the details
of the system in question.

> At this level, though, I wonder if governments just resort to
> "blue-collar" techniques of getting the data (confiscating the
> equipment, the person, arranging for an 'accident', or whatever).

Of course they do.  For instance: Watergate?


Daniel F. Boyd -- boyd@cs.buffalo.edu

It's not a system called 'X Windows', it's a window system named 'X',
after the owl on "Mr. Rogers' Neighborhood".


