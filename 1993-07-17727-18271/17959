Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!gatech!news.byu.edu!ns.novell.com!novell.com!kkingdon
From: kkingdon@novell.com (Kevin W. Kingdon)
Subject: Re: Serial number verification
Message-ID: <kkingdon.6.0@novell.com>
Lines: 31
Sender: usenet@Novell.COM (Usenet News)
Nntp-Posting-Host: camelot.npd.provo.novell.com
Organization: Novell, Inc.
References:  <21ighp$1ai@ionews.io.org>
Date: Tue, 13 Jul 1993 18:15:39 GMT

In article <21ighp$1ai@ionews.io.org> mshiels@io.org (Michael A. Shiels) writes:
>From: mshiels@io.org (Michael A. Shiels)
>Subject: Serial number verification
>Date: 9 Jul 1993 01:10:17 GMT


>I am in the need of a serial number algorithm which would be secure to
>hackers reverse engineering the workstation software.  I have figured out
>a way but the resulting string is way too big for our small serial number.

>A) Take the serial number and run a hash algorithm on it for 64/128/256 bits
>B) Encrypt the hash result with a private key
>C) make the serial number as 'serial number' and append the encrypted
>   hash result.

>The workstation software will hash the serial number and check that against
>the decrypted hash using the public key.

>Any comments?  Better approaches.  Even if I used base 64 with lots of
>strange characters it is pretty hard to reduce this to say 10-20 characters.

If I understand this approach correctly, the public key would be embedded in 
the workstation software.  An attacker could generate his/her own 
public/private keypair and patch the workstation software with the new public 
key.  The bogus private key could then be used to sign a forged serial number.

Of course, the attacker could just hack the verification routines at a higher 
level so that they were never performed or returned constant results.


Kevin W. Kingdon <kkingdon@novell.com>
