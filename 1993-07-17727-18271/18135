Newsgroups: sci.crypt
Path: msuinfo!agate!howland.reston.ans.net!xlink.net!math.fu-berlin.de!ifmsun8.ifm.uni-hamburg.de!rzsun2.informatik.uni-hamburg.de!bontchev
From: bontchev@news.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Unix Security (please read)
Message-ID: <CAMvDq.Cpo@informatik.uni-hamburg.de>
Sender: news@informatik.uni-hamburg.de (Mr. News)
Organization: University of Hamburg, Germany
X-Newsreader: TIN [version 1.1 PL9]
References: <strnlghtCALttq.KsE@netcom.com>
Date: Fri, 23 Jul 1993 19:56:13 GMT
Lines: 79

David Sternlight (strnlght@netcom.com) writes:

> Just curious (but not enough to dig up the literature).

No need for literature, just some arithmetic.

> Would a reverse
> dictionary for all possible six character passwords be much shorter than
> that for seven, eight, etc. character passwords?

Assuming that you limit yourself to printable characters, this makes
26 uppercase, 26 lowercase, 10 digits, and 32 other characters - total
of 94 possibilities per password character. Each password can be
encrypted into 4096 possible cyphertexts, depending on the reandomly
generated salt. Therefore, we have:

4096 * 94 ** 1 = 3.8 E  5 checks for 1-character passwords;
4096 * 94 ** 2 = 3.6 E  7 checks for 2-character passwords;
4096 * 94 ** 3 = 3.4 E  9 checks for 3-character passwords;
4096 * 94 ** 4 = 3.2 E 11 checks for 4-character passwords;
4096 * 94 ** 5 = 3.0 E 13 checks for 5-character passwords;
4096 * 94 ** 6 = 2.8 E 15 checks for 6-character passwords;
4096 * 94 ** 7 = 2.7 E 17 checks for 7-character passwords;
4096 * 94 ** 8 = 2.5 E 19 checks for 8-character passwords.

Of course, in order to find out the total number of required checks
for all passwords up to 8 characters (inclusive), you have to add the
above numbers. However, since each number is 100 times bigger than the
previous, the effect of the summing is negligible.

Each password in encrypted form occupies 13 characters (that can be
compressed to 9 bytes, I think). Therefore, the full dictionary for
8-character passwords will occupy 9 * 2.5E19 = 2.3E20, or 2.1E14
megabytes, or 2E11 gigabytes. For 7- and 6-character passwords, the
size will be respectively 2.5E8 gigabytes and 2.6E6 gigabytes.

> Yes, I recognize that there are fewer six character passwords than seven,
> eight, etc. but there may be some subtlety I'm not familiar with involving
> hashing the plaintext with some ancillary information that would be hard to
> reproduce by a cracker.

Nope, there aren't any subtleties. The password is used as a key to
DES-encrypt a block of zeroes, where the E-box of the DES cypher is
permutated in one of 4096 possible ways, according to the salt.

> If not, it would seem that one could at least use a
> reverse dictionary for all possible six character passwords, and catch
> anyone using such short ones quickly, yes?

No. They will occupy too much disk space.

> How quickly?

Fast enough, if you had 3 millions of gigabytes of storage.

> What is the shortest
> password (that isn't in the dictionary) that is relatively safe (say longer
> than a year to crack) against brute force given current workstation
> technology?

If all possible passwords are already generated, then the search is
fast enough. However, if you are not talking about generating them in
advance and keeping them on a disk but generating them on-line (one by
one), then, assuming 1 milisecond per password check, in one year 
machine time you can check 365.25*24*60*60*1000 = 3.1E10 passwords. 
Then a 4-character (random!) password should be safe. Maybe I have 
underestimated the technology and it is possible to do it 100 times 
faster (although I doubt it) - then a 5-character password should be 
safe. Note that the above reasoning assumes that truly random passwords 
are used and each of the 94 characters has equal chance to appear at 
any position.

Regards,
Vesselin
--
Vesselin Vladimirov Bontchev          Virus Test Center, University of Hamburg
Tel.:+49-40-54715-224, Fax: +49-40-54715-226      Fachbereich Informatik - AGN
< PGP 2.3 public key available on request. > Vogt-Koelln-Strasse 30, rm. 107 C
e-mail: bontchev@fbihh.informatik.uni-hamburg.de        22527 Hamburg, Germany
