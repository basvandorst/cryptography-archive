Path: msuinfo!uwm.edu!ux1.cso.uiuc.edu!howland.reston.ans.net!noc.near.net!uunet!optilink!brad
From: brad@optilink.COM (Brad Yearwood)
Newsgroups: sci.crypt,alt.privacy.clipper
Subject: Re: Reprogrammability of Clipper Chip
Message-ID: <16343@optilink.COM>
Date: 1 Jul 93 23:00:24 GMT
References: <20nagk$ak4@Panix.Com> <20nf8v$6vu@charon.cto.citicorp.com>
Organization: Optilink Corporation, Petaluma, CA
Lines: 53
Xref: msuinfo sci.crypt:17746 alt.privacy.clipper:1032

In article <20nf8v$6vu@charon.cto.citicorp.com>, philip@charon.cto.citicorp.com (Philip Gladstone) writes:
> Danny O'Bedlam (dfl@panix.com) wrote:
> : In <20muv1$6pu@charon.cto.citicorp.com> philip@charon.cto.citicorp.com (Philip Gladstone) writes:
> : >Once the clipper (key escrow) chip has been manufactured, it is returned
> : >to Mykotronx. You can (according to some documents) buy the chip at this
> : >stage. It is completely unprogrammed. Mykotronx loads the keys *and*
> : >the microcode to implement the Skipjack alogorithm onto the chip. 
> : 
> : I don't think that THAT is the case.  I believe that the Skipjack
> : algorithm is implemented in the chip design, and that the "unprogrammed"
> : chips are returned to Myko- for 'programming' with unit keys.  I say this
> : because Myko- designed the chip layout, and VLSI only manufactures them.
> 
> My source for this information was (again) the presentation done by McNulty
> at the NetSec '93 conference last week.
> 

I wouldn't be surprised that the specifics of Skipjack are in fact programmed
at Mykotronx.  Consider the objective of making Clipper difficult to reverse-
engineer.

Assume that Skipjack is roughly similar to DES (some number of rounds of
selection/substitution - I recall the phrase "32 rounds" having been disclosed
in the Clipper announcement).  Divide the implementation of Skipjack into
two components: a somewhat generalized selection/substitution engine,
and the actual parameters of the selection and substitution functions (and
key selection schedule).

The selection and substitution functions would be maintained in RAM cells
within the engine during operation, much like a Xilinx programmable gate array.
The RAM contents would be loaded from a one-time programmable non-volatile
memory.  Other areas of this memory would be programmed with the serial number,
family key, and whatever else.

The difficulty of the reverse engineering task is thus made equivalent
to the worst case among the difficulty of reading the non-volatile memory,
that of discovering the mapping of its contents into the substitution engine
control RAM cells, and that of discovering the substitution engine structure
(which itself might not itself be particularly difficult).

It would be reasonable to assume that other cipher systems with the same
general structure, but different specific selection/subsitution parameters,
could be programmed for other applications.  (Didn't I see a strong hint
at this in some of the published notes on Clipper?)

This approach, particularly if no extraordinary technology is required for
the hard-to-read non-volatile memory, might allow the unprogrammed chip to
be built in a normal commercial fab instead of a classified facility.  The
price of the chip doesn't seem high enough for it to be have been built
anywhere too special (apart from Mykotronx's fabled vault).

Brad Yearwood   brad@optilink.com   {uunet, pyramid}!optilink!brad
Petaluma, CA
