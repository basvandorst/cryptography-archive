Newsgroups: sci.crypt
Path: msuinfo!uwm.edu!wupost!mont!mizzou1.missouri.edu!C445585
From: C445585@mizzou1.missouri.edu (John Kelsey)
Subject: Diffie-Hellman variant for signatures, what am I missing
Message-ID: <16C14142E3.C445585@mizzou1.missouri.edu>
Sender: news@mont.cs.missouri.edu
Nntp-Posting-Host: mizzou1.missouri.edu
Organization: University of Missouri
Date: Fri, 23 Jul 93 22:57:39 CDT
Lines: 21

   I was playing around with the idea of using some sort of variation on
the Diffie-Hellman key-exchange scheme to sign documents, and came up with
this.  It seems considerably simpler than El Gamal, doesn't require a secret
random number, etc.  I'm sure there's a problem with it, but I don't see it.
Help?
 
   Secret key is x, public key is g**x mod p, g and p can be known by everyone.
 
   To sign a message, I find the hash h of my message.  Then, I calculate Z to
satisfy Z * h = x (modulo (p-1)).  The signature of the message is then
(h, g ** Z).  To verify the signature, a user simply verifies that
(g ** Z) ** h = (g ** x) (modulo p).
 
   The only problem I can see with this is that h and (p-1) mustn't have any
common factors.  This can be dealt with by defining your hash function so that
you re-hash your message, with the old hash appended, until you get an accept-
able value.
 
   What am I missing?
 
   --John Kelsey, c445585@mizzou1.missouri.edu
