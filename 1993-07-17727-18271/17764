Path: msuinfo!agate!headwall.Stanford.EDU!morrow.stanford.edu!nova3.stanford.edu!ceg
From: ceg@nova3.stanford.edu (Chris Gronbeck)
Newsgroups: sci.crypt
Subject: Re: File wiper? SOURCE INCLUDED HERE
Date: 2 Jul 1993 19:34:51 GMT
Organization: Solar Energy Research and Education Foundation
Lines: 50
Sender: ceg@nova.stanford.edu
Message-ID: <2122kr$qhi@morrow.stanford.edu>
References: <C9HzMn.Lr5@hpcvsnz.cv.hp.com> <7GZEBSMG@math.fu-berlin.de> <C9Jp6z.Ky8@chinet.chinet.com>
NNTP-Posting-Host: nova3.stanford.edu

In article <C9Jp6z.Ky8@chinet.chinet.com> schneier@chinet.chinet.com (Bruce Schneier) writes:
>In article <7GZEBSMG@math.fu-berlin.de> jiri@spider.chemie.fu-berlin.de (Jiri Pittner) writes:
>>ericb@lsid.hp.com (Eric Backus) writes:
>>
>>>I am looking for a program that will "wipe" a file, so that the file
>>>can never be recovered.  I know, the only way to be sure is to destroy
>>>the media, but I'm looking for something less extreme.  I want a
>>>program which:
>>
>>>	* Overwrites every character in the file, possibly several
>>>	  times, with either with constant data or with random data.
>>>	* Overwrites the filename (by moving the file so some other
>>>	  name).
>>>	* Removes the file.
>>>	* And in general makes it as difficult as possible to recover
>>>	  the file.
>>
>>>I could write this program myself, it would be quite simple.  But this
>>>seems like an obvious idea, which probably has been done many times
>>>before.  I'm looking for source code, so that I can use this on both
>>>my UNIX workstation and my PC at home.
>>
>>>Can anyone help me?
>>>--
>>>				Eric Backus
>>>				ericb@lsid.hp.com
>>
>>
>>Here is the program I'm using on HP755 and Convex computers. To modify it
>>on PC should not be difficult, but I don't know the systems calls there at all.
>
>
>If anyone does a PC versio of this, I would very much like to include it on
>the source code disk of my book.
>
>Bruce >

I read about a company in Great Britain that markets the capability to 
recover data from a disk even when it is erased using the above method.
They claim that even when a bit on a disk is overwritten, you can read
what was previously there by taking the signal, subtracting the current
data, and using what's left to reconstruct the previous data.  Now that
I think about it, maybe they weren't to the commercialization phase
quite yet.  Anyone else heard of this?

--
Christopher Gronbeck
International Institute for Energy Conservation
Washington, DC, USA
ceg@nova.stanford.edu
