Path: msuinfo!agate!spool.mu.edu!darwin.sura.net!newsserver.jvnc.net!rutgers!att-out!cbfsb!cbnewsf.cb.att.com!rdell
From: rdell@cbnewsf.cb.att.com (richard.b.dell)
Newsgroups: sci.crypt
Subject: Re: Unix Security (please read)
Message-ID: <CAs2zG.C4t@cbfsb.cb.att.com>
Date: 26 Jul 93 15:28:28 GMT
References: <22vsc4INN233@uther.cs.purdue.edu> <CArytM.JqC@informatik.uni-hamburg.de>
Sender: news@cbfsb.cb.att.com
Organization: AT&T
Lines: 24

In article <CArytM.JqC@informatik.uni-hamburg.de> bontchev@news.informatik.uni-hamburg.de (Vesselin Bontchev) writes:
>Gene Spafford (spaf@cs.purdue.edu) writes:
>
<deletions>
>
>> How about storing all those passwords? Each pasword represents 64
>> bits. (The password algorithm uses the user password to encrypt a
>> 64-bit block of zero bits.  The result is what is stored in the
>> /etc/passwd file.)  To store each word, then, requires 8 bytes, not
>> the 9 Vesselin assumed (we don't need a trailing line delimiter as all
>> words are the same length).
>
>But you also have to store the salt, which is 1.5 bytes. Actually, I
>made a different mistake; here is where the number 9 came from. I
>(incorrectly) assumed that the result of the encryption is 56-bit (7
>bytes), plus 1.5 bytes salt this is 8.5 bytes, or approximately 9
>bytes.
>
Salt can be considered part of the original password string, and not
stored but used implicitly with the rest of the string as an index to
the encrypted results.

-- 
Richard Dell
