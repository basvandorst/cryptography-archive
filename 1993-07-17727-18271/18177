Path: msuinfo!uwm.edu!cs.utexas.edu!tamsun.tamu.edu!news.utdallas.edu!corpgate!crchh327.bnr.ca!doll
From: doll@bnr.ca (Richard Doll)
Newsgroups: sci.crypt
Subject: Algorithm Pointers
Followup-To: sci.crypt
Date: 26 Jul 1993 20:08:45 GMT
Organization: Bell Northern Research, Inc. (BNR)
Lines: 66
Distribution: world
Message-ID: <231dkd$rfs@crchh327.bnr.ca>
Reply-To: doll@bnr.ca
NNTP-Posting-Host: crchh566.bnr.ca
Originator: doll@crchh566


Greets all.

I have a project that I am working on that will require some method
of encryption so as to protect the data in question.  Being a new
sci.crypt reader, I quickly made for the FAQs (kudos to the writer(s)!)
and they did give me a good taste of cryptography.

However, I am not sure what algorithm(s) I should be looking at for my
specific needs.  I'd appreciate it if someone could point me in the
right direction for something that will be secure under the following
conditions:

 o I need to encrypt a large amount of information, but speed is not
     an issue (ie; it can be quite slow).

 o I'd prefer that the ciphertext take up that same amount of space
     as its corresponding plaintext does, but a small (say 10%)
     increase would be acceptable.

 o The encryption algorithm can be guaranteed private, but the
     decryption algorithm will definitely be public.

 o I would like to use a single key for all of this encryption, but
     the key may be arbitrarily long.

 o It is possible that several ciphertexts may fall into the "wrong"
     hands, so comparing ciphertexts should not give away any
     information about the key or the plaintext encrypted.

 o It should be impossible for someone to have plaintext P and its
     corresponding encrypted ciphertext C at once (because the
     encryption method is private and I will ensure that encrypted
     plaintext is destroyed after encryption); ie. you can discount
     attacks that use P and its encrypted C when considering security.

 o The plaintext is in a specific format with specific characters
     located at known areas in the file.  (I understand that knowing
     that character X was encrypted to characater Y is useful to
     encryption crackers - how would I eliminate this?).

Related to the last entry:
The plaintext is in a specific format, so I was thinking of either
before or after the encryption, scrambling the order of the bytes of
the data.  Is this safe (secure)?  Is there an algorithm that will
encrypt in such a way so that what was at (say) the beginning of the
plaintext is not at the beginning of the ciphertext?

Since I am new here (tho I am familar with other groups), I understand
that RTFM (or simliar comments) are valid answers to my questions, so
if I'm being a bonehead, just lemme know.

Please feel free to reply via e-mail or post here if you think others
might be interested.  Thanks in advance,
-Rick

---------------------------+-------------------------------------------
Richard Doll   doll@bnr.ca | Bell Northern Research, Inc.       B N RR
Phone: (214) 684-2661      | Located in Richardson, Texas      BBB RRR
ESN: 444   Fax: -3739      | "I'll _never_ wear cowboy boots"   BB RR

-- 
---------------------------+-------------------------------------------
Richard Doll   doll@bnr.ca | Bell Northern Research, Inc.       B N RR
Phone: (214) 684-2661      | Located in Richardson, Texas      BBB RRR
ESN: 444   Fax: -3739      | "I'll _never_ wear cowboy boots"   BB RR
