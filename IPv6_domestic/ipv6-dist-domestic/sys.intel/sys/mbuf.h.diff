*** /usr/src/sys/sys/mbuf.h	Fri Feb  3 03:39:56 1995
--- mbuf.h	Fri Sep 29 13:59:40 1995
***************
*** 1,3 ****
--- 1,10 ----
+ /*
+  * This file has been slightly modified by NRL for use with IPv6.  Search
+  * for 'INET6' to see the ifdef blocks where this happens.
+  *
+  * See the NRL Copyright notice for conditions on the modifications.
+  */
+ 
  /*-
   * Copyright (c) 1994 Berkeley Software Design, Inc. All rights reserved.
   * The Berkeley Software Design Inc. software License Agreement specifies
***************
*** 83,89 ****
--- 90,104 ----
  
  /* record/packet header in first mbuf of chain; valid if M_PKTHDR set */
  struct	pkthdr {
+ /*
+  * KEBE says, "Fortunately for me, sizeof(int) == 4 bytes, hence I can
+  *             do this signed/unsigned kludge in BSD."
+  */
+ #ifdef INET6
+         u_int   len;            /* total packet length */
+ #else /* INET6 */
  	int	len;		/* total packet length */
+ #endif /* INET6 */
  	struct	ifnet *rcvif;	/* rcv interface */
  };
  
***************
*** 128,135 ****
  #define	M_BCAST		0x0100	/* send/received as link-level broadcast */
  #define	M_MCAST		0x0200	/* send/received as link-level multicast */
  
  /* flags copied when copying m_pkthdr */
! #define	M_COPYFLAGS	(M_PKTHDR|M_EOR|M_BCAST|M_MCAST)
  
  /* mbuf types */
  #define	MT_FREE		0	/* should be on free list */
--- 143,154 ----
  #define	M_BCAST		0x0100	/* send/received as link-level broadcast */
  #define	M_MCAST		0x0200	/* send/received as link-level multicast */
  
+ /* IP security related mbuf flags. (KEBE was here.) */
+ #define M_AUTHENTIC     0x1000  /* This packet has been authenticated. */
+ #define M_DECRYPTED     0x2000  /* This packet was decrypted. */
+ 
  /* flags copied when copying m_pkthdr */
! #define M_COPYFLAGS     (M_PKTHDR|M_EOR|M_BCAST|M_MCAST|M_AUTHENTIC|M_DECRYPTED)
  
  /* mbuf types */
  #define	MT_FREE		0	/* should be on free list */
***************
*** 333,338 ****
--- 352,366 ----
  #define	MH_ALIGN(m, len) \
  	{ (m)->m_data += (MHLEN - (len)) &~ (sizeof(long) - 1); }
  
+ #ifdef INET6
+ /*
+  * As above, for cluster mbufs (regardless of header or not).
+  */
+ 
+ #define MCL_ALIGN(m, len) \
+         { (m)->m_data += (MCLBYTES - (len)) &~ (sizeof(long) -1); }
+ #endif /* INET6 */
+ 
  /*
   * Compute the amount of space available
   * before the current start of data in an mbuf.
***************
*** 406,411 ****
--- 434,444 ----
  int	max_datalen;			/* MHLEN - max_hdr */
  
  struct	mbuf *m_copym __P((struct mbuf *, int, int, int));
+ #ifdef INET6
+ struct  mbuf *m_copym2 __P((struct mbuf *, int, int, int));
+ struct	mbuf *m_pullup2 __P((struct mbuf *, int));
+ struct mbuf *m_split __P((register struct mbuf *, int, int));
+ #endif /* INET6 */
  struct	mbuf *m_free __P((struct mbuf *));
  struct	mbuf *m_get __P((int, int));
  struct	mbuf *m_getclr __P((int, int));
