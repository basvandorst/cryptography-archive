/*
 * LUC Public Key Encryption Demo
 *
 * Copyright 1993 Raymond S. Brand, All Rights Reserved
 */

print "
	LUC Public Key Encryption System Demonstration

"

/*
 * these parameters are from Dr. Dobbs Journal, Jan '93
 */
prime1 = 1949
prime2 = 2089
modulus = prime1*prime2
public = 1103
plain = 11111
cipher = luc(plain, public, modulus)
private1 = private_from_message(cipher, public, prime1, prime2)
private2 = private_from_primes(public, prime1, prime2)
signed = luc(plain, private1, modulus)


print "Prime1     = ", prime1, "
"
print "Prime2     = ", prime2, "
"
print "Modulus    = ", modulus, "
"
print "PublicKey  = ", public, "
"
print "PlainText  = ", plain, "
"
print "CipherText = ", cipher, "
"
print "SignedText = ", signed, "
"


print "

Message Encryption

"
print "	LUC(PlainText, PublicKey, Modulus)       = ", luc(plain, public, modulus), "

"
print "	PrivateKey calculated with CipherText    = ", private_from_message(cipher, public, prime1, prime2), "
"
print "	LUC(CipherText, PrivateKey, Modulus)     = ", luc(cipher, private1, modulus), "

"
print "	PrivateKey calculated without CipherText = ", private_from_primes(public, prime1, prime2), "
"
print "	LUC(CipherText, PrivateKey, Modulus)     = ", luc(cipher, private2, modulus), "
"
print "

Message Signing

"
print "	PrivateKey calculated with PlainText     = ", private_from_message(plain, public, prime1, prime2), "
"
print "	LUC(PlainText, PrivateKey, Modulus)      = ", luc(plain, private1, modulus), "

"
print "	PrivateKey calculated without PlainText  = ", private_from_primes(public, prime1, prime2), "
"
print "	LUC(PlainText, PrivateKey, Modulus)      = ", luc(plain, private2, modulus), "

"

print "	LUC(SignedText, PublicKey, Modulus)      = ", luc(signed, public, modulus), "

"


halt
