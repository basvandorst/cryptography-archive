.\" Copyright (C) 1990 Kevin R. Coombes and David R. Grant
.\" Distributed under the terms of the GNU General Public License as
.\" published by the Free Software Foundation, without any warranty.
.TH Warehouse 3 "12 march 1990"
.SH NAME
warehouse, capture, release, makeWH \- storage allocation used with arithmetic package
.SH SYNOPSIS
.nf
.B #include "storage.h"
.LP
.B unsigned short *capture(w, howmany)
.B warehouse *w;
.B unsigned howmany;
.LP
.B void release(w, mark)
.B warehouse *w;
.B unsigned short *mark;
.LP
.B warehouse *makeWH(howmany)
.B unsigned howmany;
.fi
.SH DESCRIPTION
.LP
These storage management routines form a front end to the
.B malloc(\|)
and
.B free(\|)
package. The intent is to reduce the number of calls to
.B malloc(\|)
by getting larger buffers and doling them out a piece at a time. 
Each buffer must be initialized by a call to 
.B makeWH(\|),
which returns a pointer to a defined structure called a
.I warehouse.
The parameter to 
.B makeWH(\|)
specifies how long the initial buffer should be. Individualized requests
for storage from a buffer initialized by 
.B makeWH(\|)
are made by calling
.B capture(\|),
whose second parameter specifies the desired length. If this length 
exceeds the amount of space available in the buffer, then the size of 
the buffer is increased. Pointers returned by
.B capture(\|)
can be used as parameters to
.B release(\|).
Care must be taken, since the action of
.B release(\|)
is to reset the pointer for the next available storage at the designated
.I mark,
making everything after the mark in the buffer unusable.
.SH FILES
.LP
.B libU.a
.SH "SEE ALSO"
arithmetic(3), rational(3), quadratic(3)
.SH AUTHOR
Kevin R. Coombes, University of Maryland
