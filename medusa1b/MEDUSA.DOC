/**************************************************************************\
*                                                                          *
*                         MEDUSA's Tentacles (tm)                          *
*                                                                          *
*             SOURCE CODE REVISION ALPHA-940821-16:00 EST                  *
*                                                                          *
*                                                                          *
*    DEVEL:[ ]   ALPHA/DEVEL: [X]   BETA TESTING:[ ]    PRODUCTION:[ ]     *
*                                                                          *
*               Compiled with Borland C++ 3.1, Huge Model.                 *
*                                                                          *
*  Except for the use of the C++ style comments, this should compile on    *
*  any plain vanilla C compiler.                                           *
*                                                                          *
*==========================================================================*
*                                                                          *
*               Copyright (C) 1994 by Ray (Arsen) Arachelian,              *
*          All Rights Reserved, General Technical Data Restricted.         *
*                                                                          *
*==========================================================================*
*                                                                          *
*    WARNING: This source code is the sole property of the author and is   *
*    to be treated as such.  The use of this source code is subject to     *
*    certain limitations stated in the documentation and in the conditions *
*    of the license described in this file.  Using this source code or a   *
*    machine executable version of this source code is subject to these    *
*    conditions.                                                           *
*                                                                          *
*    The ideas/algorithms of this software MAY not be patented by other    *
*    parties.  The author, at this time, has no interest in patenting any  *
*    of the algorithms in this software.  The purpose of this paragraph is * 
*    to protect these algorithms from being patented by others by          *
*    establishing them as "prior art" and making them useable by all.      *                                 
*                                                                          *
*    Ray (Arsen) Arachelian is the author and sole owner of MEDUSA(tm)     *
*    and maintains exclusive proprietary interests and exclusive           *
*    copyright for this forementioned program.                             *
*                                                                          *
*    The words "MEDUSA'S TENTACLES" and the shorter version "MEDUSA" are   *
*    trademarks  of the author reffering to this software and its source   *
*    code as well as any compiled versions thereof.                        *
*                                                                          *
* WARANTY: There ain't none.  Due to the nature of this software, the      *
*          author disclaims all warranties whether express or implied. The *
*          software distributed in this package is distributed "AS IS" and *
*          all consequences arising from its use are the solely the user's *
*          responsability.  Neither the author, nor his associates may be  *
*          held liable for any damage/consequnces arising from the use of  *
*          this software.  Some states do not allow the exclusion of       *
*          warranties, so your rights may vary.                            *
*                                                                          *
*                   Don't bother suing me.   I'm not rich.                 *
*                                                                          *
*                                                                          *
* LICENSE:                                                                 *
*                                                                          *
* This is published proprietary source code of the author, and may be      *
* freely distributed and copied as long as this and any other copyright,   *
* trademark, and ownership notices are not altered in any way shape or form*
*                                                                          *
* This software is hereby deemed freeware and may not be sold.  A small    *
* duplication charge (less than $5.00 US) may be made as compensation for  *
* the specific distribution of this software. This software may be included*
* on any CD-ROM collection of shareware and or freeware.   Please feel free*
* to give out copies of this software to your friends.                     *
*                                                                          *
* You may not distribute modified copies of this software without the      *
* written consent of the author.  You may not use pieces of this software  *
* in your programs without the written consent of the author.  Should you  *
* find a bug, or make a major improvement in the way this software works,  *
* you are encouraged to contact the author.                                *
*                                                                          *
* If you develop similar software based on the concepts of this system,    *
* you must place the following notice in your software to be displayed     *
* wherever your copyright notice is displayed and in the documentation:    *
*                                                                          *
*     This software is based in part on Ray (Arsen) Arachelian's           *
*     `Medusa's Tentacles' software.                                       *
*                                                                          *
* You may modify this software in any way shape or for for your personal   *
* use as long as neither this license, nor any copyright/ownership notices *
* are removed, nor the name of the software is changed.                    *
*                                                                          *
* Should any statement in this license be deemed invalid, only that        *
* statement shall be revoked, leaving the rest of this license valid.      *
*                                                                          *
* This license terminates when the user destroys all copies of this        *
* software from all media on which it resides.  This license will be re-   *
* established should the user use/get another copy or version of Medusa(tm)*
*                                                                          *
* Usage of this software indicates an agreement to the above license.      *
*                                                                          *
\**************************************************************************/


MEDUSA86.EXE --  works on any plain 80x86 PC with or without a math 
                 coprocessor.  DOS 3.3 minimum.

MD386FPU.EXE --  Compiled for at least a 386 with a math coprocessor.
                 If you have a 386 with a 387, or a 486SX with a 487SX,
                 or 486DX, or a Pentium computer, use this version.
                 DOS 3.3 minimum.

If your machine doesn't match any of the above, feel free to recompile
the source code yourself with your favorite C compiler for your machine.


Medusa Reccomendation:

Medusa is a message hungry application.  In fact, the more messages you feed
it, the better its acuracy.  However, the messages, like food, must first
be prepared before they are edible by Medusa.  To prevent Medusa from
making mistakes, you must remove all headers >AND< quotes >AND< any
any signatures from every message you feed it.

If you misfeed Medusa, it will give you misleading results.

[The header of an email message is basically the block of information which
contains infromation such as the address of the sender, the address of the
receipient of the message, the subject of the message, when the message
was sent, and other typical information.]

[Quotes are bits of messages which are snipped out of the message the
sender is replying to.  They are generally preceded by a > character or
some other symbol, or are indented blocks.]

[Signature blocks are usually at the end of a message a user sends and may
contain popular sayings, email addresses, and other assorted junk.  They're
similar to letterhead.  However with anonymous or forged mail, these will
be incorrect, so do not feed Medusa any signatures.]


Perhaps in the future, after I clean up my Quote Detector quote I will
implement some program that will strip out all headers, quotes and
signatures from incoming messages so that Medusa can be put to use in an
automated fashion.

NOTE:  Medusa isn't going to help you catch smart anonymous posters, it will
only detect ignorant ones.  Why?  Because smart anonymous posters will
feed all their personal posts to Medusa, and then before posting any
anonymous posts, they will check their posts with Medusa to help them change
their posts enough so that Medusa will not be able to tell that they
wrote it.    This is the true purpose of Medusa, to strengthen the
anonymity afforded to us by anonymous remailers, and not to help take it
away from us.

You can certainly bet that the NSA and its ilk have far more advanced
cousins of Medusa at their disposal.  If Medusa can sniff your anonymous
message, you can bet the NSA can as well.


FuzzyBase Structures:

Files:

Each fuzzybase is split up into several files via an ALPHABETIC hash
function which isn't evenly distributed. (We could replace this with a
better hash function, however the extraction of the fuzzybase to an SDF
file wouldn't be sorted, and you'd also have to rebuild any fuzzybases
generated by previous versions of this program.)  Should there be enough
interest in replacing this with a non-alphabetic, but more evently
distributed hash, I may replace it. (A crypto-hash would certainly be
overkill for this application, and would only slow things down.)

The hashing scheme is used to help speed things up a bit even with an
unsorted fuzzybase, though it won't be too much of an improvement if you
don't sort the fuzzybase often enough.

Currently in this version, the fuzzybased is split into five pieces
numbered name.00 through name.04.  Also, since we're under DOS you should
keep the number of hashed files small since DOS limits the number of files
you can open at a time.  Under UNIX, or any decent OS these values can 
be changed.

Each of these five pieces is further divided into two partitions.  A
sorted and an unsorted partition.  This is because having most of the
database sorted allows the program to use a binary search algorithm to
speed up searching.

Should Medusa require adding new words to the fuzzybase it will append
them in the unsorted partitions of the five hashed files.  If it doesn't
find something in a hashed file's sorted partition, it will look in the
unsorted partition which is slower.

There is also a name.MSF file which is the master header file of the
fuzzybase.  This file contains information such as the most common singleton
words, most common word pairs, common singleton letters, letter pairs, etc.
as well as the four lines of text that describe the fuzzybase's contents.


Records:

Each record basically consists of the word (upto 56 characters per word)
and any separators which may follow it, a master count of occurances of this
word that has been seen so far, and a field for the current count of the
number of words seen by the current Querry or Generate command.

The "master" fields in these records refer to texts that were added to the
fuzzybase as known to have been written by their author.  You should sort
the fuzzybase after adding several known-texts.

[ Currently since this is an alpha test version of Medusa, the sort used   ]
[ by medusa is a slow and brainless-bubble sort which will be replaced by  ]
[ QuickSort or perhaps Shell sort.  Please forgive the sluggishness of     ]
[ the sorting operations until the final release.  Anyone have sources to a]
[ non-recursive QuickSort?                                                 ]

The "current" fields in these records are added as an effect of processing
a querry or generating a fuzzy comparison set.  Records which have a
master occurance total value of zero will be deleted by the purge command.
These fields are added when you wish to compare an anonymous message to an
existing fuzzybase.  You should purge the fuzzybase after several querries
to it to eliminate records which are not used by master entries.


COMMAND REFRENCE:
Using Medusa:

Medusa's simple command line interface provides is shown in this section.
If you dislike the command line interface, feel free to roll your own
GUI and attach it to Medusa.

Command:
NEW      This command builds a new, empty fuzzybase.  Medusa will ask you
         to enter four lines of text to describe this fuzzybase.  These
         four lines of text will be displayed whenever the fuzzybase is
         opened.

         IE:      MEDUSA N DETWEILR    - Create an empty Detweiler fuzzybase

ADD      This command will add a message to the current fuzzybase in the 
         master entries.  The text/message you're adding should be from the
         person that this fuzzybase is tracking and all headers, quotes,
         and signatures should be removed before adding.

         IE:      MEDUSA A DETWEILR 940312.TXT  - Add a new message
         IE:      MEDUSA AS DETWEILR 940312.TXT - Add a new message then
                                                  sort the fuzzybase.
                                                 
SORT     This command will sort the current fuzzybase to make it faster to
         search when adding, generating, or running a querry.  It can be run
         by itself or along with the Add or Purge commands.  You should
         generally sort the fuzzybase every time you add a message to it,
         or at least every few times you add messages to it.

         IE:      MEDUSA S DETWEILR              - Sort the fuzzybase
         IE:      MEDUSA AS DETWEILER 940312.txt - Add, then sort.
         IE:      MEDUSA PS DETWEILER            - Purge, then sort.


PURGE    This command will remove the temporary "current" word entries from
         the fuzzybase which are created by the GENERATE or QUERRY commands.
         These temporary entries waste space and slow down searches, so they
         should be removed to keep the fuzzybase clean.  This command can
         be executed by itself or along with the DELETE, SORT, or GENERATE
         commands.

         IE:      MEDUSA P DETWEILR              - Purge the fuzzybase
         IE:      MEDUSA DS DETWEILER 0.000002   - Delete, then purge.
         IE:      MEDUSA PS DETWEILER            - Purge, then sort.
         IE:      MEDUSA GP DETWEILER            - Generate, then purge.


GENERATE This command will generate a fuzzy comparison set for the specified
         fuzzybase with the specified message/text.  The four variables it
         generates will then be appened to the end of the querry file for
         later processing by the QUERRY command.  The querry file will contain
         the four closeness/difference degree levels.   This command will
         insert "current" temporary entries in the fuzzybase, which should be
         purged after the generation of the comparison set is completed.

         IE:      MEDUSA G DETWEILR ANONYM.MSG QFILE - Generate the set
         IE:      MEDUSA GP DETWEILR ANONYM.MSG QFILE - Generate, then purge


OUTPUT   This command will output the entire fuzzybase to a text delimited
         file for possible feeding into a database system;  the format of the
         SDF file is: word,frequency_count,tokenid.  
         
         The word field will be converted to readable ASCII even if it 
         contains control characters. IE: A line feed will be converted to 
         a "^J" string, etc.  NOTE: Since Medusa keeps track of words and
         their separators, you may see a word followed by a ^J or words such
         as "'t."  This is because Medusa keeps track of the word along with
         its separator so that "hello" "hello^J" and "hello." are considered 
         different words for statistical purposes.

         The frequency_count field contains the number of times Medusa has
         seen this occurance.

         The tokenid field will change as more data is added to the fuzzybase
         and after a sort.  This field is probably not very useful for other
         applications, however it is provided for completeness.
         
         IE:      MEDUSA O DETWEILR data.sdf


QUERRY   This command has not yet been implemented.
