
This is the source distribution for DEC's LGI$HPWD password hashing algorithm
written and C, and portable to Un*x.  The files necessary for compilation are:

B_ORDER.H, DESCRIP.H, DEMO.C, HPWD.C, HPWD.COM, & MAKEFILE

To build the executable:

(On VMS) 	@HPWD.COM
(On Un*x)	make			(requires the gcc compiler)

Remember that the algorithm is case sensitive.  The prompt for uppercase is
just if you want to match a current VMS password, where inputs are always
converted to uppercase.


NOTE:  This algorithm is affected by the byte-order of the machine.  If you
want the output of the LGI$HPWD function to return an 8 character "string"
that is comparable with the result on a VMS machine, then you must

#define STRING_OUTPUT

in your program.  Please note that it IS defined both in DEMO.C   AND
in HPWD.C.  If you simply want the numeric result, then comment out this define.
I have provided the conversion between BIG_ENDIAN STRING_OUTPUT and the
numeric result in DEMO.C so that the user can have it both ways.

I have successfully compiled the code on VAX/VMS with the VAXC compiler,
and on Sun SPARC/SunOS with the gcc compiler (v2.3.2).

Known Problems:
	- Not ANSI C compatible
	- Slow multiplication routine (EMULQ)
	- Ugly variable names; based on the MACRO source code


Good luck!  Please let me know of any bugs or improvements.

-Shawn Clifford		sysop@robot.nuceng.ufl.edu

25-FEB-1993
