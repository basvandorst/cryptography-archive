Emacs Auto-PGP 1.0
==================

This is a bunch of Elisp, Perl and C to allow you to integrate PGP2
(version 2.2 or later) into your Emacs mailreader (and perhaps also
your newsreader).

Features:
 o  Scans the header of a message to be encrypted to determine the
    recipients and thus the keys to use to encrypt.
 o  Incoming encrypted messages can be decrypted once and then stored
    in plaintext, but ...
 o  Information about the recipient keys of an incoming encrypted
    message is preserved.
 o  Incoming signed and encrypted messages are turned into clearsigned
    messages (modulo some bugs/misfeatures in PGP).
 o  Signatures on incoming messages can be verified in place.
 o  You only have to type your passphrase once, but ...
 o  Your passphrase is not stored in your Emacs but in a separate
    small program which can easily be killed, or replaced (e.g. by an X
    client which pops up a window to confirm whether to supply the
    passphrase - though no such program exists yet (-:).
 o  The stored passphrase can easily be used when using pgp from the
    Unix command line by using the small wrapper program (which works
    just like normal pgp) which the scripts themselves use.
 o  No modification to the PGP sources necessary.

WARNING: You should probably not use this software if it is likely
that an attacker could gain access to your account, for example
because you are not the sysadmin or the security on your system is
dubious (this is true of most networked Unix systems).


To install it:

Edit the file EDITME to reflect your situation, ie where you want
stuff installed, whether you want to pick up a version from your PATH
or run it via the explicit pathname, etc.

Type `make install'.

This should compile ringsearch and install the programs (using the
scripts included) as you specified in EDITME.

Edit the `dir' file in the Emacs Info directory - add a menu item for
Auto-PGP potining to the file `auto-pgp.info'.

Now read auto-pgp.info if you haven't done so already.

If you find a bug please READ THE SECTION ON REPORTING BUGS !


- Ian Jackson <ijackson@nyx.cs.du.edu>
  31st August 1993
