Path: msuinfo!netnews.upenn.edu!thrombus.seas.upenn.edu
From: rahdert@thrombus.seas.upenn.edu (Dave Rahdert)
Newsgroups: sci.crypt
Subject: Proposed noise-based encryption method
Message-ID: <90960@netnews.upenn.edu>
Date: 30 Sep 92 01:31:44 GMT
Sender: news@netnews.upenn.edu
Organization: Dept. of Mechanical Engineering and Applied Mechanics
Lines: 41
Nntp-Posting-Host: thrombus.seas.upenn.edu

I am completely new to the subject of encryption and to this newsgroup, so please forgive me if the following proposal seems naive or otherwise flawed. I just want to hear what people think about my idea for "ideal" encryption. 

I propose the following method of encryption which any two parties in the world can use to exchange digitized information.  The decryption key is not an algorithm (a formula) perse, but is rather, a list of random binary digits (ones and zeros, each successive digit determined by flipping a fair coin, for instance).  Each of the two parties owns a copy of this list, which I will refer to as the "key." 

Encryption is as follows.  The message to be encrypted is digitized (turned into a list of ones and zeros).  The resulting string is "added" to the above-described "key."  The sum "rolls" over so that 2's become 0's.  For example: 

If the message to be encrypted is

1  0  1  1  1  1  1  0 


and the key is

1  0  0  1  1  0  1  0   


the intermediate result (before rolling over 2's) is

2  0  1  2  2  1  2  0


and the final encrypted result (after rolling over 2's) is

0  0  1  0  0  1  0  0


The decryption scheme should be obvious: subtract the key from encrypted string and then change all -1's to +1.

The chief advantage of this method is this.  The encrypted string has no detectable "pattern" and is mathematically random itself.  By guessing the encryption key, an unauthorized party would be just as likely to happen across an arbitrary string (such as the Gettysburg Address or what have you) as the correct one.  Incidently, this idea is a modified form of a scheme described in Peter Wright's (a former M15 insider) "Spycatcher;" I believe he calls it the "notepad" method of encryption. I cannot see how 


it is theoretically possible to crack this kind of encryption. 

The obvious disadvantage of this method is the large amount of information which must be exchanged by the two parties beforehand.  You must generate a key which is at least as big as the chunk of information you want to encrypt.  However, with the probable advent of writable CDs (or other cheaper/compact storage media) this disadvantage will eventually be minimized.  With memory being so cheap and compact, there will someday be no significant advantage in sharing an "algorithm" as opposed to exchanging a c


ouple of Gigabytes. Keep in mind that the key can only be used ONCE (I can explain why, but that's for another post).

Imagine that you and a collegue want to have a secure phone call while one of you is overseas.  All that's required is a sharing of keys beforehand which consist of two writable CDs (an ordinary CD today holds about an hour of audio, maybe more ?).  You have prepared these CDs ahead of time using a white noise generator (static on a radio or flip a coin a few zillion times  :)  ).  Of course each of you need the elecronics at each end to do encode/decode in real time.  

I suspect that this method may already be in use by some people, considering that it seems (to me) virtually impossible to break. At least it was used (on very tiny strings, such as handwritten messages) prior modern computing!  What do you all think?

Dave Rahdert 
