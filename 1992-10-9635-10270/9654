Newsgroups: sci.crypt
Path: msuinfo!caen!destroyer!cs.ubc.ca!newsserver.sfu.ca!erick
From: erick@fraser.sfu.ca (Erick Bryce Wong)
Subject: Re: More on cracking DES algorithm
Message-ID: <1992Oct1.040902.25815@sfu.ca>
Sender: news@sfu.ca
Organization: Simon Fraser University, Burnaby, B.C., Canada
References: <BvExML.Juq@usenet.ucs.indiana.edu>
Date: Thu, 1 Oct 1992 04:09:02 GMT
Lines: 28

shulick@yankton.ucs.indiana.edu writes:

>NOTE: Yes, you may have noticed I'm posting a lot about breaking DES/UNIX
>encryption.  I am not a hacker, I'm merely trying to understand the way it
>works and learn exactly how secure this algorithm really is.  I gave up hacking
>a long time ago. (:

I don't feel like going into the hacker/cracker distinction right now... :-)

>Let's say someone retreives the DES source code, which is easy enough.  Why
>WOULDN'T they be able to take every single mathematical operation, reverse each
>one, and then have a "decrypt()"?  I know it's not that simple, but how has DES
>made it so even a good mathematician can't just reverse all the operations?

Well, how do you plan on reversing the step that looks like "free(key)"?  If
you're referring to UNIX crypt(3) encryption, it's the password that is used
as the key...Even if you had the key/password, reversing every operation
pretty much leaves you with just 0's... :-)  If you mean DES encryption, well
of course there's a decrypt()...How else is someone supposed to be able to
read the data after they've encrypted it? :-)

My point: The only thing decrypt has to go on is the output of crypt, so you
can't simply reverse each operation...And sometimes (public-key, one-way hash
functions) it's still hard to reverse things even if you know exactly what
the encryption algorithm is doing to the plaintext...

-- 
 -- Erick, the perfect square  :-)
