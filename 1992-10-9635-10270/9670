Path: msuinfo!caen!spool.mu.edu!olivea!uunet!Cadence.COM!lou
From: lou@Cadence.COM (Louis K. Scheffer)
Newsgroups: sci.crypt
Subject: Using genetic engineering for exhaustive DES key search
Summary: It may be possible to use genetic engineering to do key search
Keywords: exhaustive, DES, genetic engineering
Message-ID: <lou.717919152@cadence.com>
Date: 1 Oct 92 05:59:12 GMT
Sender: usenet@Cadence.COM (Usenet News)
Distribution: na
Organization: Cadence Design Systems, Inc.
Lines: 86
Nntp-Posting-Host: caber.cadence.com


While pondering the well known problem of DES cracking via exhaustive
key search, I started wondering if you could apply genetic engineering to
the problem.  It seems like it may be possible.

The basic approach would be to build a bacteria that acts as a DES key search
machine.  Each bacteria generates keys at random, decrypts the encrypted block 
with the key, and compares the result with the plaintext.  If there is a match,
it generates lots of a string of DNA that contains the key and a specific
marker that binds to an antibody, and excretes the result.  Otherwise it
just keeps trying keys.

To decrypt a message, build a string of DNA that contains the encrypted block
and a potential portion of the plaintext.  Make a lot of copies (say 10^20) 
and circulate the copies of the original and the antibody through a tank full of
bacteria, and examine the output for something bound to the antibody.  If you
find something, sequence the DNA to recover the key.  Use the key and
conventional computers to decipher the rest of the message.

The advantages:

   1) MASSIVE parallelism.  If one bacteria can exist in a space 25 microns
   on a side, then a cube 25 cm on a side contains 10^12 bacteria.  For a
   2^56 bit key, each bacteria needs to examine 72000 keys to find a match.
   If each bacteria can do 10 encrytions per second, that's only two hours.
   If you are really serious, you set up 1000 tanks and solve the key in
   7 seconds!

   2) Once you build one machine, additional ones are almost free.  Just
   grow more bacteria.  The only hard part is growing the first bacterium.

The obvious question is "is this possible?".  The first step, generating
lots of copies of specific DNA, is straightforward now.  You synthesis it,
then exponentially duplicate it via PCR.  This is done all the time.

The next step is generating random numbers.  The immune system is believed
to do something like this to generate the enormous number of different
antibodies it needs.  So this seems possible, although the uniformity of
random number generation might be a problem.

The next step is generating a biological system to do DES encryption.  The
main elements here are transposition, XOR, the S box tables, and sequencing.

Transposition of DNA sequences is common in biological systems, although not in
the complexity required by DES.  This seems to be a difference of degree, and
you can always build complex transpositions from simpler ones at the cost
of speed if you need to.  

XORing strings seems possible - DNA inverts and copies long strings of data
all the time.  Perhaps the XOR could be adapted from some of the proofreading
enzymes, which must look at two strands already and look for differences.

The S box tables could be done as one enzyme per line of the table, which
activates the correct XOR string, which is coded in the DNA.

Sequencing would need to be handled by appending a string
to the data describing the current state.  Each enzyme would have to look for
a molecule with the state string having a particular value, perform the
operation, and generate a string consisting of the result plus the next state
identifier.  A lot of complex biological synthesis works this way already -
I think some vitamin synthesis involves 12-16 steps, each with a specific
enzyme.

Finally, looking for an output match and generating copies of the key if you
do should be straightforward.

So it seems like this should be possible, although rationally designing the
required enzymes is probably beyond the grasp of today's technology, as is
incorporating the results into a stable, self reproducing bacterium.  I have
no idea if the resulting "code" would fit in a normal bacterium.

Speed seems like it should be OK.  Chemical reactions are quite fast when
confined to volumes as small as cells.  Furthermore you can have lots of
computations in the pipe at once, even within a cell, since each intermediate
result is self identifying.

Of course, this method could be used for methods other than DES.  The only
requirements are a small key space, and a relatively simple encryption
algorithm.

Has anyone ever investigated this idea?  I'm not a chemist or a biologist,
although I follow the fields at an intelligent layman (Scientific American)
type of level.  Is this idea worth an article for a cryptography journal, or
is it too far out to seriously consider?

   Lou Scheffer
