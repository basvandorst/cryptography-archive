Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!pacific.mps.ohio-state.edu!linac!att!princeton!athena!dla
From: dla@athena (Don Alvarez)
Subject: Re: Message interception
Message-ID: <1992Oct3.183958.28784@Princeton.EDU>
Originator: news@nimaster
Sender: dla@athena.princeton.edu (Don Alvarez)
Nntp-Posting-Host: athena.princeton.edu
Organization: Princeton University
References: <1992Oct2.203303.9914@vela.acs.oakland.edu>
Date: Sat, 3 Oct 1992 18:39:58 GMT
Lines: 49

In article <1992Oct2.203303.9914@vela.acs.oakland.edu> phkahler@vela.acs.oakland.edu (KAHLER PAUL H.) writes:

>I have a new idea on how someone (NSA for example) could intercept and read
>PGP (maybe other) encrypted messages.
>
>1) Modify PGP so that it only generates a small number of secondary keys.
>   Since the user is unaware of what key is used, he/she would never know.

If you are going to allow the bad guy to modify the user's copy of PGP
(or any other encryption routine), then of course the bad guy can win.
Forget PGP for the moment, and assume that you just have a generic
routine with access to the plaintext (your text editor, for example).
If you can't trust the routine, then you can never be confident that
the plaintext wasn't written to a file, inserted into a virus for
floppy-based distribution, squirted out through a modem while the
keyboard and phone were idle, or whatever.  I know your proposal
doesn't require access to the plaintext, but other parts of PGP do,
and if the bad guy can modify routines which have no access to
plaintext, he can certainly also modify other routines at the same
time.

Now for the rub:

Unless you have digitally signed cryptographically secure checksums of
all the software you run on your machine, you can't trust the machine
not to divulge your plaintext.  BUT even this won't help because you
have no way to trust that the digital signature computing software and
checksum computing software weren't the first things the bad guy modified.

>Please correct me if this is not possible. It is certainly a hell of a lot
>simpler than the other methods the paranoids were talking about.

Regarding your accusations of "paranoia", modern cryptography is
nothing more than a mathematical framework for debating the
*implications* of various paranoid delusions.  This is a completely
disjoint process from debating the *merits* of said paranoid
delusions.

You can't discuss cryptography without discussing the types of attacks
that the information may be subject to.  If you don't like having
people explain to you how a certain type of protocol is vulnerable to
a certain type of attack, then you might as well give up on the
subject of cryptography, because that is what it's all about.
>
>Paul
>
-don
dla@athena.princeton.edu

