Newsgroups: sci.crypt
Path: msuinfo!caen!zaphod.mps.ohio-state.edu!cs.utexas.edu!torn!watserv2.uwaterloo.ca!watserv1!crypto2.uwaterloo.ca!lcmyu
From: lcmyu@crypto2.uwaterloo.ca (Luis Ola Toshio Chi-Ming)
Subject: Re: How secure is this encryption scheme?
Message-ID: <Bw4qzx.319@watserv1.uwaterloo.ca>
Sender: news@watserv1.uwaterloo.ca
Organization: University of Waterloo
References: <Bw1614.2tM@vcd.hp.com>
Date: Wed, 14 Oct 1992 21:14:21 GMT
Lines: 52

In article <Bw1614.2tM@vcd.hp.com> egurney@vcd.hp.com (Ed J. Gurney) writes:
>[...]
>My question is this:  Assuming you know for a fact that a certain eight
>bytes of encrypted data decrypt to a known set of eight plaintext bytes,
>can you find the original key and decrypt the rest of the data?  The only
>information you have is the decryption routine written in C, the eight
>encrypted bytes, and the eight plaintext bytes.  The decryption routine
>is _not_ the same routine used for encryption.  (i.e., feeding the plaintext
>and a key to the decrypter does not generate the encrypted data.)
[..]
>If it matters, the decryption algorithm consists of the routine to generate
>a 32 byte "subkey" from the original 8 byte key and another routine with an 
>8-cycle loop that exclusive ors, rotates left and adds byte-sized
>operands.

>Any thoughts, comments, or ideas would be greatly appreciated.


Your encryption idea sounds like an iterative block cipher of length
64 bits. It iterates/mixes cryptographically weak functions to form a 
(hopefully) strong function.  As for your question, with only one 
sample plaintext/ciphertext pair you'll have most people beat with
a very simple algorithm.  However, the generally accepted test for
such ciphers allow more freedom to the cryptanalyst.  The cryptanalyst
would likely have more blocks of plaintext/cipher text pairs to
work with; in addition access to the encryption routine as well.

You should check that your cipher is strong against differential 
cryptanalysis since any useful block ciphers these days are.

You should refer to papers by Bilham and Shamir[Crypto90] for details.  
The basic idea is to examine how differences in input propogate
through your function.  The notion of difference in your case may
be the xor.  If under fixed input differences, your output difference
is not uniformly distributed then your function may be prone to
this form of attack.

Luis

%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%
| Luis Toshio Yu                  | "Now, if only I have something clever to  |
% lcmyu@crypto2@uwaterloo.ca      % say about that..." :-)                    %
% Electrical Engineering          % Opinions expressed here are mine, so      %
| University of Waterloo, Ontario | credit me for your happiness.             |
%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%=%







