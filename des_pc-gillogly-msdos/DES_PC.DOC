DES_PC -- an implementation of the Data Encryption Standard for
          MS|PC-DOS computers in C.

I obtained DES_PC_C.ARC from Opus 260/216.  This ARC file contained
DES_PC.C, the original source code file.  I found a couple of typos 
that prevented succesful compilation, and corrected them.  Compiling
under Microsoft C version 3, with Microsoft Link version 3.52 resulted
in an slight error (an unresolved external).  The resulting .EXE file
did run, however.  The error was due to a call to a routine called
"timer", which is apparently available in Lattice C.  I added some 
"#ifdef" code to use Microsoft C time functions instead of the Lattice
timer function.  To make use of this, you have to define *both* Lattice
and Microsoft C - either in the code itself, e.g.
#define LATTICE
#define MSC
or if you can, from the compiler command line (eg microsoft)
cl -Ox -DLATTICE -DMSC des_pc.c
The other #define you can as for is DEBUG, which cause code to be
compiled to cause the resulting .EXE file to produce intermediate
reports on its activity while en- or  de- crypting.

USAGE: des_pc filename

des_pc will then ask you for a password, to be used in encrypting the
file.  Then you will be asked to re-enter the password to verify your
previous specification.  Des_pc will keep doing this until you give it
the same password twice in a row.

Note: One thing I did not take the time to fix was des_pc's requirement
that the filename have no extension - des_pc appends a '.n' as the 
extension when it does the encryption, and requires that the file to
be decrypted ends with the '.n' extension.  I would much prefer a 
command line switch to toggle encryption/decryption, and to leave the 
filename alone.  So - if it's a bother, you've got the code now, right?

Note (2): I've also included des_pc.com in the archive file alogn with th
the source code.  des_pc.com is the result of massaging des_pc.exe with 
Realia's SPACEMKR.COM.  This utility converts .EXE files to .COM form;
the actual space saving in file size was only about 750 bytes or so - 
but, the .COM version runs much faster.

